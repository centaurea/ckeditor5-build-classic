{"version":3,"sources":["webpack://ClassicEditor/webpack/universalModuleDefinition","webpack://ClassicEditor/webpack/bootstrap","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/ckeditorerror.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/log.js","webpack://ClassicEditor/./node_modules/lodash-es/_root.js","webpack://ClassicEditor/./node_modules/style-loader/lib/addStyles.js","webpack://ClassicEditor/./node_modules/lodash-es/_nodeUtil.js","webpack://ClassicEditor/./node_modules/lodash-es/isBuffer.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/version.js","webpack://ClassicEditor/./node_modules/lodash-es/_freeGlobal.js","webpack://ClassicEditor/(webpack)/buildin/global.js","webpack://ClassicEditor/(webpack)/buildin/harmony-module.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-heading/theme/heading.css?8ac6","webpack://ClassicEditor/./node_modules/lodash-es/stubFalse.js","webpack://ClassicEditor/./node_modules/lodash-es/_cloneBuffer.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-undo/theme/icons/undo.svg","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-undo/theme/icons/redo.svg","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-basic-styles/theme/icons/bold.svg","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-basic-styles/theme/icons/italic.svg","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-core/theme/icons/quote.svg","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/icons/dropdown-arrow.svg","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-list/theme/icons/numberedlist.svg","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-list/theme/icons/bulletedlist.svg","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-markdown-gfm/src/lib/marked/marked.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-markdown-gfm/src/lib/to-markdown/to-markdown.js","webpack://ClassicEditor/./node_modules/regenerator-runtime/runtime.js","webpack://ClassicEditor/(webpack)/buildin/module.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/theme/placeholder.css?91a1","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/theme/placeholder.css","webpack://ClassicEditor/./node_modules/style-loader/lib/urls.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/globals/globals.css?5f9a","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/globals/globals.css","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/editorui/editorui.css?3a4b","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/editorui/editorui.css","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/label/label.css?ed50","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/label/label.css","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/panel/stickypanel.css?d375","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/panel/stickypanel.css","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/toolbar/toolbar.css?cc59","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/toolbar/toolbar.css","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-editor-classic/theme/classiceditor.css?959e","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-editor-classic/theme/classiceditor.css","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/icon/icon.css?9817","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/icon/icon.css","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/tooltip/tooltip.css?2426","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/tooltip/tooltip.css","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/button/button.css?3567","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/button/button.css","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-block-quote/theme/blockquote.css?07a2","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-block-quote/theme/blockquote.css","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/dropdown/dropdown.css?eb7a","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/dropdown/dropdown.css","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/list/list.css?6f7e","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/list/list.css","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/button/switchbutton.css?17d1","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/button/switchbutton.css","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/dropdown/toolbardropdown.css?1641","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/dropdown/toolbardropdown.css","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/dropdown/listdropdown.css?2a7e","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/dropdown/listdropdown.css","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-heading/theme/heading.css","webpack://ClassicEditor/./node_modules/lodash-es/_Symbol.js","webpack://ClassicEditor/./node_modules/lodash-es/_getRawTag.js","webpack://ClassicEditor/./node_modules/lodash-es/_objectToString.js","webpack://ClassicEditor/./node_modules/lodash-es/_baseGetTag.js","webpack://ClassicEditor/./node_modules/lodash-es/_overArg.js","webpack://ClassicEditor/./node_modules/lodash-es/_getPrototype.js","webpack://ClassicEditor/./node_modules/lodash-es/isObjectLike.js","webpack://ClassicEditor/./node_modules/lodash-es/isPlainObject.js","webpack://ClassicEditor/./node_modules/lodash-es/_listCacheClear.js","webpack://ClassicEditor/./node_modules/lodash-es/eq.js","webpack://ClassicEditor/./node_modules/lodash-es/_assocIndexOf.js","webpack://ClassicEditor/./node_modules/lodash-es/_listCacheDelete.js","webpack://ClassicEditor/./node_modules/lodash-es/_listCacheGet.js","webpack://ClassicEditor/./node_modules/lodash-es/_listCacheHas.js","webpack://ClassicEditor/./node_modules/lodash-es/_listCacheSet.js","webpack://ClassicEditor/./node_modules/lodash-es/_ListCache.js","webpack://ClassicEditor/./node_modules/lodash-es/_stackClear.js","webpack://ClassicEditor/./node_modules/lodash-es/_stackDelete.js","webpack://ClassicEditor/./node_modules/lodash-es/_stackGet.js","webpack://ClassicEditor/./node_modules/lodash-es/_stackHas.js","webpack://ClassicEditor/./node_modules/lodash-es/isObject.js","webpack://ClassicEditor/./node_modules/lodash-es/isFunction.js","webpack://ClassicEditor/./node_modules/lodash-es/_coreJsData.js","webpack://ClassicEditor/./node_modules/lodash-es/_isMasked.js","webpack://ClassicEditor/./node_modules/lodash-es/_toSource.js","webpack://ClassicEditor/./node_modules/lodash-es/_baseIsNative.js","webpack://ClassicEditor/./node_modules/lodash-es/_getValue.js","webpack://ClassicEditor/./node_modules/lodash-es/_getNative.js","webpack://ClassicEditor/./node_modules/lodash-es/_Map.js","webpack://ClassicEditor/./node_modules/lodash-es/_nativeCreate.js","webpack://ClassicEditor/./node_modules/lodash-es/_hashClear.js","webpack://ClassicEditor/./node_modules/lodash-es/_hashDelete.js","webpack://ClassicEditor/./node_modules/lodash-es/_hashGet.js","webpack://ClassicEditor/./node_modules/lodash-es/_hashHas.js","webpack://ClassicEditor/./node_modules/lodash-es/_hashSet.js","webpack://ClassicEditor/./node_modules/lodash-es/_Hash.js","webpack://ClassicEditor/./node_modules/lodash-es/_mapCacheClear.js","webpack://ClassicEditor/./node_modules/lodash-es/_isKeyable.js","webpack://ClassicEditor/./node_modules/lodash-es/_getMapData.js","webpack://ClassicEditor/./node_modules/lodash-es/_mapCacheDelete.js","webpack://ClassicEditor/./node_modules/lodash-es/_mapCacheGet.js","webpack://ClassicEditor/./node_modules/lodash-es/_mapCacheHas.js","webpack://ClassicEditor/./node_modules/lodash-es/_mapCacheSet.js","webpack://ClassicEditor/./node_modules/lodash-es/_MapCache.js","webpack://ClassicEditor/./node_modules/lodash-es/_stackSet.js","webpack://ClassicEditor/./node_modules/lodash-es/_Stack.js","webpack://ClassicEditor/./node_modules/lodash-es/_arrayEach.js","webpack://ClassicEditor/./node_modules/lodash-es/_defineProperty.js","webpack://ClassicEditor/./node_modules/lodash-es/_baseAssignValue.js","webpack://ClassicEditor/./node_modules/lodash-es/_assignValue.js","webpack://ClassicEditor/./node_modules/lodash-es/_copyObject.js","webpack://ClassicEditor/./node_modules/lodash-es/_baseTimes.js","webpack://ClassicEditor/./node_modules/lodash-es/_baseIsArguments.js","webpack://ClassicEditor/./node_modules/lodash-es/isArguments.js","webpack://ClassicEditor/./node_modules/lodash-es/isArray.js","webpack://ClassicEditor/./node_modules/lodash-es/_isIndex.js","webpack://ClassicEditor/./node_modules/lodash-es/isLength.js","webpack://ClassicEditor/./node_modules/lodash-es/_baseIsTypedArray.js","webpack://ClassicEditor/./node_modules/lodash-es/_baseUnary.js","webpack://ClassicEditor/./node_modules/lodash-es/isTypedArray.js","webpack://ClassicEditor/./node_modules/lodash-es/_arrayLikeKeys.js","webpack://ClassicEditor/./node_modules/lodash-es/_isPrototype.js","webpack://ClassicEditor/./node_modules/lodash-es/_nativeKeys.js","webpack://ClassicEditor/./node_modules/lodash-es/_baseKeys.js","webpack://ClassicEditor/./node_modules/lodash-es/isArrayLike.js","webpack://ClassicEditor/./node_modules/lodash-es/keys.js","webpack://ClassicEditor/./node_modules/lodash-es/_baseAssign.js","webpack://ClassicEditor/./node_modules/lodash-es/_nativeKeysIn.js","webpack://ClassicEditor/./node_modules/lodash-es/_baseKeysIn.js","webpack://ClassicEditor/./node_modules/lodash-es/keysIn.js","webpack://ClassicEditor/./node_modules/lodash-es/_baseAssignIn.js","webpack://ClassicEditor/./node_modules/lodash-es/_copyArray.js","webpack://ClassicEditor/./node_modules/lodash-es/_arrayFilter.js","webpack://ClassicEditor/./node_modules/lodash-es/stubArray.js","webpack://ClassicEditor/./node_modules/lodash-es/_getSymbols.js","webpack://ClassicEditor/./node_modules/lodash-es/_copySymbols.js","webpack://ClassicEditor/./node_modules/lodash-es/_arrayPush.js","webpack://ClassicEditor/./node_modules/lodash-es/_getSymbolsIn.js","webpack://ClassicEditor/./node_modules/lodash-es/_copySymbolsIn.js","webpack://ClassicEditor/./node_modules/lodash-es/_baseGetAllKeys.js","webpack://ClassicEditor/./node_modules/lodash-es/_getAllKeys.js","webpack://ClassicEditor/./node_modules/lodash-es/_getAllKeysIn.js","webpack://ClassicEditor/./node_modules/lodash-es/_DataView.js","webpack://ClassicEditor/./node_modules/lodash-es/_Promise.js","webpack://ClassicEditor/./node_modules/lodash-es/_Set.js","webpack://ClassicEditor/./node_modules/lodash-es/_WeakMap.js","webpack://ClassicEditor/./node_modules/lodash-es/_getTag.js","webpack://ClassicEditor/./node_modules/lodash-es/_initCloneArray.js","webpack://ClassicEditor/./node_modules/lodash-es/_Uint8Array.js","webpack://ClassicEditor/./node_modules/lodash-es/_cloneArrayBuffer.js","webpack://ClassicEditor/./node_modules/lodash-es/_cloneDataView.js","webpack://ClassicEditor/./node_modules/lodash-es/_cloneRegExp.js","webpack://ClassicEditor/./node_modules/lodash-es/_cloneSymbol.js","webpack://ClassicEditor/./node_modules/lodash-es/_cloneTypedArray.js","webpack://ClassicEditor/./node_modules/lodash-es/_initCloneByTag.js","webpack://ClassicEditor/./node_modules/lodash-es/_baseCreate.js","webpack://ClassicEditor/./node_modules/lodash-es/_initCloneObject.js","webpack://ClassicEditor/./node_modules/lodash-es/_baseIsMap.js","webpack://ClassicEditor/./node_modules/lodash-es/isMap.js","webpack://ClassicEditor/./node_modules/lodash-es/_baseIsSet.js","webpack://ClassicEditor/./node_modules/lodash-es/isSet.js","webpack://ClassicEditor/./node_modules/lodash-es/_baseClone.js","webpack://ClassicEditor/./node_modules/lodash-es/cloneDeepWith.js","webpack://ClassicEditor/./node_modules/lodash-es/isElement.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/config.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/spy.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/eventinfo.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/uid.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/priorities.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/emittermixin.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/mix.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/comparearrays.js","webpack://ClassicEditor/./node_modules/lodash-es/clone.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/node.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/text.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/textproxy.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/objecttomap.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/isiterable.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/matcher.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/element.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/containerelement.js","webpack://ClassicEditor/./node_modules/lodash-es/identity.js","webpack://ClassicEditor/./node_modules/lodash-es/_apply.js","webpack://ClassicEditor/./node_modules/lodash-es/_overRest.js","webpack://ClassicEditor/./node_modules/lodash-es/constant.js","webpack://ClassicEditor/./node_modules/lodash-es/_baseSetToString.js","webpack://ClassicEditor/./node_modules/lodash-es/_shortOut.js","webpack://ClassicEditor/./node_modules/lodash-es/_setToString.js","webpack://ClassicEditor/./node_modules/lodash-es/_baseRest.js","webpack://ClassicEditor/./node_modules/lodash-es/_isIterateeCall.js","webpack://ClassicEditor/./node_modules/lodash-es/_createAssigner.js","webpack://ClassicEditor/./node_modules/lodash-es/assignIn.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/observablemixin.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/editableelement.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/rooteditableelement.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/treewalker.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/position.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/range.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/count.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/selection.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/documentselection.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/collection.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/document.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/attributeelement.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/emptyelement.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/env.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/keyboard.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/uielement.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/documentfragment.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/downcastwriter.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/istext.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/filler.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/fastdiff.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/diff.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/insertat.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/remove.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/isnode.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/renderer.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/global.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/indexof.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/getancestors.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/domconverter.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/getcommonancestor.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/iswindow.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/emittermixin.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/observer.js","webpack://ClassicEditor/./node_modules/lodash-es/_setCacheAdd.js","webpack://ClassicEditor/./node_modules/lodash-es/_setCacheHas.js","webpack://ClassicEditor/./node_modules/lodash-es/_SetCache.js","webpack://ClassicEditor/./node_modules/lodash-es/_arraySome.js","webpack://ClassicEditor/./node_modules/lodash-es/_cacheHas.js","webpack://ClassicEditor/./node_modules/lodash-es/_equalArrays.js","webpack://ClassicEditor/./node_modules/lodash-es/_mapToArray.js","webpack://ClassicEditor/./node_modules/lodash-es/_setToArray.js","webpack://ClassicEditor/./node_modules/lodash-es/_equalByTag.js","webpack://ClassicEditor/./node_modules/lodash-es/_equalObjects.js","webpack://ClassicEditor/./node_modules/lodash-es/_baseIsEqualDeep.js","webpack://ClassicEditor/./node_modules/lodash-es/_baseIsEqual.js","webpack://ClassicEditor/./node_modules/lodash-es/isEqualWith.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/mutationobserver.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/domeventdata.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/domeventobserver.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/keyobserver.js","webpack://ClassicEditor/./node_modules/lodash-es/now.js","webpack://ClassicEditor/./node_modules/lodash-es/isSymbol.js","webpack://ClassicEditor/./node_modules/lodash-es/toNumber.js","webpack://ClassicEditor/./node_modules/lodash-es/debounce.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/fakeselectionobserver.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/selectionobserver.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/focusobserver.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/compositionobserver.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/inputobserver.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/isrange.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/getborderwidths.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/rect.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/scroll.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/view.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/tomap.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/node.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/text.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/textproxy.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/nodelist.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/element.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/treewalker.js","webpack://ClassicEditor/./node_modules/lodash-es/last.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/position.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/range.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/conversion/mapper.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/conversion/modelconsumable.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/conversion/downcastdispatcher.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/selection.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/liverange.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/documentselection.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/conversion/conversionhelpers.js","webpack://ClassicEditor/./node_modules/lodash-es/cloneDeep.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/conversion/downcasthelpers.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/conversion/upcasthelpers.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/controller/editingcontroller.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-core/src/plugincollection.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-core/src/commandcollection.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/translation-service.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/locale.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/conversion/viewconsumable.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/schema.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/conversion/upcastdispatcher.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/controller/datacontroller.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/conversion/conversion.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/batch.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/operation.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/documentfragment.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/utils.js","webpack://ClassicEditor/./node_modules/lodash-es/isEqual.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/attributeoperation.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/detachoperation.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/moveoperation.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/insertoperation.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/markeroperation.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/renameoperation.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/rootattributeoperation.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/mergeoperation.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/splitoperation.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/rootelement.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/writer.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/differ.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/history.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/unicode.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/document.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/markercollection.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/liveposition.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/utils/insertcontent.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/utils/deletecontent.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/utils/modifyselection.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/utils/getselectedcontent.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/utils/selection-post-fixer.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/model.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/keystrokehandler.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-core/src/editingkeystrokehandler.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-core/src/editor/editor.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-core/src/editor/utils/dataapimixin.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-core/src/editor/utils/elementapimixin.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/setdatainelement.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/dataprocessor/basichtmlwriter.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/dataprocessor/htmldataprocessor.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/componentfactory.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/focustracker.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-core/src/editor/editorui.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/placeholder.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/elementreplacer.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-editor-classic/src/classiceditorui.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/toolbar/normalizetoolbarconfig.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/toolbar/enabletoolbarkeyboardfocus.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/viewcollection.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/template.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/view.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/editorui/editoruiview.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/label/labelview.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/editorui/boxed/boxededitoruiview.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/editableui/editableuiview.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/editableui/inline/inlineeditableuiview.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/panel/sticky/stickypanelview.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/tounit.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/focuscycler.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/toolbar/toolbarseparatorview.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/toolbar/toolbarview.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/bindings/preventdefault.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-editor-classic/src/classiceditoruiview.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-editor-classic/src/classiceditor.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-core/src/editor/utils/attachtoform.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/getdatafromelement.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-core/src/plugin.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-clipboard/src/datatransfer.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-clipboard/src/clipboardobserver.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-clipboard/src/utils/viewtoplaintext.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-clipboard/src/clipboard.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-clipboard/src/utils/normalizeclipboarddata.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-clipboard/src/utils/plaintexttohtml.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-core/src/command.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-enter/src/entercommand.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-enter/src/enterobserver.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-enter/src/enter.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-enter/src/shiftentercommand.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-enter/src/shiftenter.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-typing/src/utils/changebuffer.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-typing/src/inputcommand.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-typing/src/utils/injectunsafekeystrokeshandling.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-typing/src/utils/utils.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/difftochanges.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-typing/src/utils/injecttypingmutationshandling.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-typing/src/input.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-typing/src/deletecommand.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-typing/src/deleteobserver.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-typing/src/delete.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-typing/src/typing.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/nooperation.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/transform.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-undo/src/basecommand.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-undo/src/undocommand.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-undo/src/redocommand.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-undo/src/undoediting.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/icon/iconview.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/tooltip/tooltipview.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/button/buttonview.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-undo/src/undoui.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-undo/src/undo.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-essentials/src/essentials.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-basic-styles/src/attributecommand.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-basic-styles/src/bold/boldediting.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-basic-styles/src/bold/boldui.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-basic-styles/src/bold.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-basic-styles/src/italic/italicediting.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-basic-styles/src/italic/italicui.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-basic-styles/src/italic.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/first.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-block-quote/src/blockquotecommand.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-block-quote/src/blockquoteediting.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-block-quote/src/blockquoteui.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-block-quote/src/blockquote.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-paragraph/src/paragraphcommand.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-paragraph/src/paragraph.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-heading/src/headingcommand.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-heading/src/headingediting.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/model.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/dropdown/dropdownpanelview.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/position.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/getpositionedancestor.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/dropdown/dropdownview.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/dropdown/button/dropdownbuttonview.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/list/listview.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/list/listitemview.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/list/listseparatorview.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/button/switchbuttonview.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/dropdown/utils.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/bindings/clickoutsidehandler.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-heading/src/headingui.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-heading/src/utils.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-heading/src/heading.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-list/src/listcommand.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-list/src/indentcommand.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-list/src/utils.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-list/src/converters.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-list/src/listediting.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-list/src/listui.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-list/src/list.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-markdown-gfm/src/lib/marked/renderer.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-markdown-gfm/src/lib/to-markdown/converters.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-markdown-gfm/src/gfmdataprocessor.js","webpack://ClassicEditor/./src/ckeditor.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_typeof","obj","iterator","constructor","_defineProperties","target","props","length","descriptor","configurable","writable","_possibleConstructorReturn","self","ReferenceError","_assertThisInitialized","_wrapNativeSuper","Class","_cache","Map","undefined","fn","Function","toString","indexOf","_isNativeFunction","TypeError","has","set","Wrapper","_construct","arguments","_getPrototypeOf","this","_setPrototypeOf","Parent","args","Reflect","construct","sham","Proxy","Date","e","isNativeReflectConstruct","a","push","apply","instance","setPrototypeOf","__proto__","getPrototypeOf","__webpack_exports__","CKEditorError","attachLinkToDocumentation","DOCUMENTATION_URL","_Error","message","context","data","_this","Constructor","_classCallCheck","JSON","stringify","subClass","superClass","_inherits","Error","protoProps","staticProps","_createClass","type","matchedErrorName","match","concat","_ckeditorerror__WEBPACK_IMPORTED_MODULE_0__","log","error","console","warn","freeSelf","freeGlobal","stylesInDom","isOldIE","memo","memoize","document","all","atob","getElement","parent","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","options","item","domStyle","id","refs","j","parts","addStyle","listToStyles","list","newStyles","base","part","css","media","sourceMap","insertStyleElement","style","insertInto","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","before","removeStyleElement","parentNode","removeChild","idx","splice","createStyleElement","createElement","attrs","nonce","nc","getNonce","addAttrs","el","keys","forEach","setAttribute","update","remove","result","transform","default","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","btoa","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","unescape","encodeURIComponent","blob","oldSrc","href","styleSheet","cssText","createTextNode","newObj","DEBUG","newList","mayRemove","replaceText","textStore","index","replacement","filter","Boolean","join","cssNode","childNodes","freeExports","nodeType","freeModule","freeProcess","process","nodeUtil","types","require","binding","Buffer","isBuffer","stubFalse","global","_log__WEBPACK_IMPORTED_MODULE_0__","ckeditor5_package_json__WEBPACK_IMPORTED_MODULE_1__","windowOrGlobal","CKEDITOR_VERSION","g","originalModule","webpackPolyfill","children","content","hmr","locals","allocUnsafe","cloneBuffer","buffer","isDeep","slice","copy","__WEBPACK_AMD_DEFINE_RESULT__","block","newline","code","fences","noop","hr","heading","nptable","lheading","blockquote","html","def","table","paragraph","text","Lexer","tokens","links","marked","defaults","rules","normal","gfm","tables","bullet","replace","source","_tag","merge","lex","src","token","top","bq","next","loose","cap","bull","b","space","exec","substring","pedantic","lang","depth","header","split","align","cells","test","ordered","RegExp","smartLists","charAt","sanitize","pre","sanitizer","toLowerCase","title","charCodeAt","inline","escape","autolink","url","tag","reflink","nolink","strong","em","br","del","InlineLexer","renderer","Renderer","breaks","Parser","encode","regex","opt","val","callback","pending","highlight","done","err","out","parse","escaped","silent","_inside","_href","output","mangle","inLink","outputLink","codespan","smartypants","image","ch","Math","random","langPrefix","quote","level","raw","headerPrefix","xhtml","body","listitem","tablerow","tablecell","flags","prot","decodeURIComponent","_","String","fromCharCode","parseInt","reverse","tok","pop","peek","parseText","row","cell","setOptions","parser","lexer","inlineLexer","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","f","u","1","toMarkdown","converters","mdConverters","gfmConverters","HtmlParser","collapse","blocks","isBlock","node","nodeName","voids","isVoid","getContent","_replacement","canConvert","Array","isArray","isFlankedByWhitespace","side","sibling","regExp","isFlanked","previousSibling","nodeValue","textContent","flankingWhitespace","leading","trailing","hasLeading","innerHTML","hasTrailing","converter","whitespace","trim","input","clone","string","tree","parseFromString","documentElement","htmlToDom","nodes","elem","inqueue","outqueue","shift","bfsOrder","outer","cloneNode","outerHTML","./lib/gfm-converters","./lib/html-parser","./lib/md-converters","collapse-whitespace","2","prefix","highlightRegEx","checked","borderCells","alignMap","left","right","center","attributes","border","className","3","_window","DOMParser","canParse","canParseHtmlNatively","jsdom","plugins","FetchExternalResources","ProcessExternalResources","useActiveX","implementation","createHTMLDocument","open","ActiveXObject","shouldUseActiveX","doc","write","close","designMode","createHtmlParser","4","hLevel","hPrefix","hasSiblings","isCodeBlock","getAttribute","titlePart","alt","strings","5","6","7","voidElements","toUpperCase","blockElements","isBlockElem","prev","current","prevText","prevVoid","substr","nextNode","block-elements","void-elements","8","area","col","embed","img","keygen","menuitem","meta","param","track","wbr","runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","Context","_invoke","state","GenStateSuspendedStart","method","arg","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","__await","then","unwrapped","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","awrap","async","iter","skipTempReset","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","deprecate","paths","location","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","newUrl","unquotedOrigUrl","$1","objectProto","nativeObjectToString","symToStringTag","getRawTag","isOwn","unmasked","objectToString","nullTag","undefinedTag","baseGetTag","overArg","func","getPrototype","isObjectLike","objectTag","funcProto","funcToString","objectCtorString","isPlainObject","proto","Ctor","listCacheClear","__data__","size","eq","other","assocIndexOf","array","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","ListCache","entries","clear","stackClear","stackDelete","stackGet","stackHas","isObject","isObject_typeof","asyncTag","funcTag","genTag","proxyTag","isFunction","coreJsData","maskSrcKey","uid","IE_PROTO","isMasked","toSource","reIsHostCtor","reIsNative","baseIsNative","getValue","getNative","nativeCreate","hashClear","hashDelete","HASH_UNDEFINED","hashGet","hashHas","hashSet","Hash","mapCacheClear","hash","map","isKeyable","_isKeyable_typeof","getMapData","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","MapCache","LARGE_ARRAY_SIZE","stackSet","pairs","Stack","arrayEach","iteratee","baseAssignValue","assignValue","objValue","copyObject","customizer","isNew","newValue","baseTimes","argsTag","baseIsArguments","propertyIsEnumerable","isArguments","MAX_SAFE_INTEGER","reIsUint","isIndex","_isIndex_typeof","isLength","typedArrayTags","baseIsTypedArray","baseUnary","nodeIsTypedArray","isTypedArray","arrayLikeKeys","inherited","isArr","isArg","isBuff","isType","skipIndexes","isPrototype","nativeKeys","baseKeys","isArrayLike","baseAssign","nativeKeysIn","baseKeysIn","isProto","keysIn","baseAssignIn","copyArray","arrayFilter","predicate","resIndex","stubArray","nativeGetSymbols","getOwnPropertySymbols","getSymbols","symbol","copySymbols","arrayPush","offset","getSymbolsIn","copySymbolsIn","baseGetAllKeys","keysFunc","symbolsFunc","getAllKeys","getAllKeysIn","DataView","Set","WeakMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","getTag","ArrayBuffer","ctorString","initCloneArray","Uint8Array","cloneArrayBuffer","arrayBuffer","byteLength","cloneDataView","dataView","byteOffset","reFlags","cloneRegExp","regexp","lastIndex","symbolProto","symbolValueOf","valueOf","cloneSymbol","cloneTypedArray","typedArray","boolTag","dateTag","mapTag","numberTag","regexpTag","setTag","stringTag","symbolTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","initCloneByTag","objectCreate","baseCreate","initCloneObject","baseIsMap","nodeIsMap","isMap","baseIsSet","nodeIsSet","isSet","CLONE_DEEP_FLAG","CLONE_FLAT_FLAG","CLONE_SYMBOLS_FLAG","cloneableTags","baseClone","bitmask","stack","isFlat","isFull","isFunc","stacked","subValue","add","cloneDeepWith","isElement","config_Config","Config","configurations","defaultConfigurations","_config","_setObjectToTarget","_setToTarget","_getFromSource","isDefine","lodash_es_isPlainObject","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","lodash_es_cloneDeepWith","leaveDOMReferences","cloneConfig","configuration","lodash_es_isElement","src_spy","spy","called","eventinfo_EventInfo","EventInfo","eventinfo_classCallCheck","path","off","uid_uid","uuid","floor","src_priorities","priority","highest","high","low","lowest","_toConsumableArray","arr","arr2","_arrayWithoutHoles","from","_iterableToArray","_nonIterableSpread","_slicedToArray","_arrayWithHoles","_arr","_n","_d","_e","_s","_i","_iterableToArrayLimit","_nonIterableRest","_listeningTo","_emitterId","emittermixin","on","event","listenTo","once","wasFired","_len","_key","stopListening","emitter","emitterInfo","eventCallbacks","emitters","_getEmitterId","_setEmitterId","emitterId","callbacks","eventName","events","getEvents","childEventName","newEventNodes","childEvents","lastIndexOf","_newEventNodes","createEventNamespace","lists","getCallbacksListsForNamespace","callbackDefinition","added","removeCallback","fire","eventOrInfo","eventInfo","getCallbacksForEvent","_events","_len2","_key2","callbackArgs","_delegations","destinations","passAllDestinations","fireDelegatedEvents","_len3","_key3","to","nameOrFunction","stopDelegating","eventNode","callbacksLists","childCallbacksLists","fireArgs","_step2$value","delegatedInfo","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","mix","baseClass","mixins","mixin","getOwnPropertyNames","sourceDescriptor","getOwnPropertyDescriptor","compareArrays","minLen","min","node_defineProperties","node_Node","Node","node_classCallCheck","node_createClass","unshift","includeSelf","parentFirst","ancestors","ancestorsA","getAncestors","ancestorsB","thisPath","getPath","nodePath","isBefore","_removeChildren","_fireChange","json","lodash_es_clone","pos","getChildIndex","ckeditorerror","getChild","text_typeof","text_defineProperties","_get","receiver","_superPropBase","desc","text_Text","_Node","Text","text_classCallCheck","_textData","text_createClass","otherNode","textproxy_defineProperties","textproxy_TextProxy","TextProxy","textNode","offsetInText","textproxy_classCallCheck","textproxy_createClass","objectToMap","isIterable","matcher_defineProperties","Matcher","matcher_classCallCheck","_patterns","matcher_createClass","pattern","_pattern","classes","element","_i2","_element","singleElement","isElementMatching","results","_i3","_element2","matchName","patterns","hasAttribute","attribute","matchAttributes","getClassNames","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","hasClass","matchClasses","hasStyle","getStyle","matchStyles","element_typeof","element_setPrototypeOf","element_slicedToArray","element_arrayWithHoles","element_iterableToArrayLimit","element_nonIterableRest","element_toConsumableArray","element_arrayWithoutHoles","element_iterableToArray","element_nonIterableSpread","element_defineProperties","element_possibleConstructorReturn","element_assertThisInitialized","element_get","element_getPrototypeOf","element_superPropBase","element_Element","Element","element_classCallCheck","_attrs","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","_step7$value","parseAttributes","_children","_insertChild","_classes","classString","parseClasses","_styles","parseInlineStyles","_customProperties","element_inherits","element_createClass","getAttributeKeys","_context","getAttributes","_context2","styleString","_step$value","otherElement","_step4$value","_className","_property","matcher","getCustomProperties","_context3","sort","deep","childrenClone","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","getChildren","child","_clone","cloned","getFillerOffset","items","childCount","count","normalize","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_remove","howMany","_this2","_this3","_i4","_keys","_this4","stylesMap","stylesString","quoteType","propertyNameStart","propertyValueStart","propertyName","_char","propertyValue","classesSet","classesString","classArray","containerelement_toConsumableArray","containerelement_arrayWithoutHoles","containerelement_iterableToArray","containerelement_nonIterableSpread","containerelement_typeof","containerelement_defineProperties","containerelement_possibleConstructorReturn","containerelement_assertThisInitialized","containerelement_get","containerelement_getPrototypeOf","containerelement_superPropBase","containerelement_setPrototypeOf","ContainerElement","_Element","containerelement_classCallCheck","containerelement_inherits","containerelement_createClass","lastChild","is","identity","thisArg","nativeMax","max","overRest","start","otherArgs","constant","baseSetToString","HOT_COUNT","HOT_SPAN","nativeNow","now","shortOut","setToString","lastCalled","stamp","remaining","baseRest","isIterateeCall","_isIterateeCall_typeof","createAssigner","assignIn","assigner","sources","guard","observablemixin_typeof","observablemixin_toConsumableArray","observablemixin_arrayWithoutHoles","observablemixin_iterableToArray","observablemixin_nonIterableSpread","observablePropertiesSymbol","boundObservablesSymbol","boundPropertiesSymbol","ObservableMixin","lodash_es_isObject","initObservable","properties","oldValue","bindProperties","isStringArray","boundProperties","bindings","observablemixin_bindTo","toMany","bindToMany","_observable","_bindProperties","_to","_bindings","unbind","boundObservables","unbindProperties","toObservable","toProperty","toProperties","toPropertyBindings","boundObservable","decorate","methodName","originalMethod","evt","lodash_es_assignIn","observablemixin","observable","_this5","parsedArgs","_len4","_key4","lastObservable","parsed","bindingsKeys","numberOfBindings","toBindings","updateBoundObservableProperty","attachBindToListeners","chain","toPropertyName","bindingsToObservable","updateBoundObservables","updateBindToBound","observables","observableAndAttributePairs","getBindingTargets","every","editableelement_typeof","editableelement_defineProperties","editableelement_possibleConstructorReturn","editableelement_assertThisInitialized","editableelement_get","editableelement_getPrototypeOf","editableelement_superPropBase","editableelement_setPrototypeOf","documentSymbol","editableelement_EditableElement","_ContainerElement","EditableElement","editableelement_classCallCheck","editableelement_inherits","editableelement_createClass","getCustomProperty","_setCustomProperty","isFocused","selection","editableElement","rooteditableelement_typeof","rooteditableelement_defineProperties","rooteditableelement_possibleConstructorReturn","rooteditableelement_assertThisInitialized","rooteditableelement_get","rooteditableelement_getPrototypeOf","rooteditableelement_superPropBase","rooteditableelement_setPrototypeOf","rootNameSymbol","RootEditableElement","_EditableElement","rooteditableelement_classCallCheck","rootName","rooteditableelement_inherits","rooteditableelement_createClass","treewalker_defineProperties","treewalker_TreeWalker","TreeWalker","treewalker_classCallCheck","boundaries","startPosition","direction","position","position_Position","_createAt","singleCharacters","shallow","ignoreElementEnd","_boundaryStartParent","_boundaryEndParent","end","treewalker_createClass","_skip","prevPosition","_this$next","_next","_previous","previousPosition","isAtEnd","_createAfter","_formatReturnValue","charactersCount","textLength","textProxy","isAtStart","_createBefore","startOffset","nextPosition","isEqual","position_defineProperties","Position","position_classCallCheck","position_createClass","shifted","skip","treeWalker","otherPosition","compareWith","otherPath","endOffset","editable","itemOrPosition","range_defineProperties","range_Range","Range","range_classCallCheck","range_createClass","getLastMatchingPosition","enlargeTrimSkip","isAfter","nodeAfterStart","nodeAfter","nodeBeforeEnd","nodeBefore","otherRange","isCollapsed","containsStart","containsPosition","containsEnd","ranges","isIntersecting","commonRangeStart","commonRangeEnd","getCommonAncestor","getItems","_value","_args2","t0","getPositions","_value2","_args3","startElement","endElement","getShiftedBy","_createFromParentsAndOffsets","offsetSize","_createFromPositionAndShift","count_count","selection_defineProperties","selection_Selection","Selection","selectable","placeOrOffset","selection_classCallCheck","_ranges","_lastRangeBackward","_isFake","_fakeSelectionLabel","setTo","selection_createClass","getRanges","range","first","last","firstRange","getFirstRange","lastRange","getLastRange","otherSelection","isFake","fakeSelectionLabel","rangeCount","anchor","focus","thisRange","found","isBackward","numOfRangesA","rangeA","getTrimmed","rangeB","_setRanges","_setFakeOptions","documentselection_DocumentSelection","fake","label","backward","_createIn","_createOn","newFocus","_addRange","newRanges","isLastBackward","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","_pushRange","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","storedRange","addedRange","intersectingRange","documentselection_defineProperties","DocumentSelection","documentselection_classCallCheck","_selection","documentselection_createClass","getFirstPosition","getLastPosition","getSelectedElement","isSimilar","setFocus","collection_defineProperties","collection_Collection","Collection","collection_classCallCheck","_items","_itemMap","_idProperty","idProperty","_bindToExternalToInternalMap","_bindToInternalToExternalMap","_skippedIndexesFromExternal","collection_createClass","itemId","idOrIndex","itemOrId","subject","itemDoesNotExist","externalItem","ctx","find","_bindToCollection","externalCollection","as","_setUpBindToBinding","using","callbackOrProperty","addItem","isExternalBoundToThis","externalItemBound","finalIndex","getIndex","reduce","skipped","document_defineProperties","document_Document","Document","document_classCallCheck","roots","_postFixers","document_createClass","postFixer","destroy","writer","wasFixed","attributeelement_typeof","attributeelement_defineProperties","attributeelement_possibleConstructorReturn","attributeelement_assertThisInitialized","attributeelement_get","attributeelement_getPrototypeOf","attributeelement_superPropBase","attributeelement_setPrototypeOf","DEFAULT_PRIORITY","attributeelement_AttributeElement","AttributeElement","attributeelement_classCallCheck","attributeelement_getFillerOffset","_priority","_id","_clonesGroup","attributeelement_inherits","attributeelement_createClass","nonUiChildrenCount","emptyelement_typeof","emptyelement_defineProperties","emptyelement_possibleConstructorReturn","emptyelement_assertThisInitialized","emptyelement_get","emptyelement_getPrototypeOf","emptyelement_superPropBase","emptyelement_setPrototypeOf","emptyelement_EmptyElement","EmptyElement","emptyelement_classCallCheck","emptyelement_getFillerOffset","emptyelement_inherits","emptyelement_createClass","userAgent","navigator","src_env","isMac","isEdge","isGecko","isSafari","isAndroid","macGlyphsToModifiers","⌘","⇧","⌥","modifiersToMacGlyphs","ctrl","keyCodes","arrowleft","arrowup","arrowright","arrowdown","backspace","delete","enter","esc","tab","cmd","letter","_code","_code2","generateKnownKeyCodes","getCode","keyCode","altKey","ctrlKey","shiftKey","splitKeystrokeText","keystroke","uielement_typeof","uielement_defineProperties","uielement_possibleConstructorReturn","uielement_assertThisInitialized","uielement_get","uielement_getPrototypeOf","uielement_superPropBase","uielement_setPrototypeOf","uielement_UIElement","UIElement","uielement_classCallCheck","uielement_getFillerOffset","uielement_inherits","uielement_createClass","domDocument","toDomElement","domElement","injectUiElementHandling","view","domConverter","domSelection","domTarget","ownerDocument","defaultView","getSelection","domSelectionCollapsed","getRangeAt","collapsed","domParent","focusNode","domOffset","focusOffset","viewPosition","domPositionToView","jumpedOverAnyUiElement","nextViewPosition","newDomPosition","viewPositionToDom","extend","jumpOverUiElement","documentfragment_defineProperties","documentfragment_DocumentFragment","DocumentFragment","documentfragment_classCallCheck","documentfragment_createClass","documentfragment_normalize","downcastwriter_toConsumableArray","downcastwriter_arrayWithoutHoles","downcastwriter_iterableToArray","downcastwriter_nonIterableSpread","downcastwriter_defineProperties","downcastwriter_DowncastWriter","DowncastWriter","downcastwriter_classCallCheck","_cloneGroups","downcastwriter_createClass","_setTo","_setFocus","attributeElement","_document","renderFunction","uiElement","render","_setAttribute","_removeAttribute","_addClass","_removeClass","_setStyle","_removeStyle","_removeCustomProperty","positionOrRange","_breakAttributes","_breakAttributesRange","newElement","insert","sourceRange","targetPosition","move","positionOffset","positionParent","_removeFromClonedElementsGroup","mergeAttributes","mergeTextNodes","_appendChild","newPosition","validateNodesToInsert","errorContext","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_loop","validNodesToInsert","some","validNode","_iterator14","container","getParentContainer","insertionPosition","_addToClonedElementsGroup","endPosition","rangeOrItem","validateRangeContainer","_this$_breakAttribute","breakStart","breakEnd","parentContainer","removed","mergePosition","walker","getWalker","rangeToRemove","parentElement","ancestor","countBefore","_hasNonUiChildren","_wrapPosition","viewSelection","setSelection","_wrapRange","_this$_breakAttribute2","newRange","_unwrapChildren","newName","viewElement","groupName","wrapElement","wrapPositions","isText","isAttribute","isEmpty","isUI","_wrapAttributeElement","shouldABeOutsideB","newAttribute","_wrapChildren","offsetChange","_wrapPositions","unwrapElement","unwrapPositions","_unwrapAttributeElement","_unwrapPositions","_this$_breakAttribute3","movePositionToTextNode","breakTextNode","fakePosition","createAttributeElement","Number","POSITIVE_INFINITY","wrapRange","wrapper","toWrap","canBeJoined","getStyleNames","setStyle","addClass","toUnwrap","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","_key5","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","_key6","removeAttribute","removeClass","removeStyle","forceSplitText","rangeStart","rangeEnd","isContainerOrFragment","_newPosition","offsetAfter","clonedNode","nodesToMove","_newPosition2","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","group","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","getIdentity","textToMove","_data","t1","t2","nodeBeforeLength","startContainer","endContainer","istext_isText","BR_FILLER","fillerBr","dataset","ckeFiller","NBSP_FILLER","INLINE_FILLER_LENGTH","INLINE_FILLER","filler_i","startsWithFiller","domNode","isInlineFiller","domText","getDataWithoutFiller","templateBlockFillers","isBlockFiller","blockFiller","templateBlockFiller","isEqualNode","jumpOverInlineFiller","fastDiff","cmp","atomicChanges","changeIndexes","arr1","firstIndex","findFirstDifferenceIndex","lastIndexOld","lastIndexNew","oldArrayReversed","cutAndReverse","newArrayReversed","findChangeBoundaryIndexes","newLength","fill","changeIndexesToAtomicChanges","newArray","changeIndexesToChanges","diff_diff","_insert","_delete","aLength","bLength","tmp","delta","es","fp","snake","k","y1","y2","dir","y","x","nodeToInsert","remove_remove","isNode","renderer_defineProperties","renderer_Renderer","renderer_classCallCheck","domDocuments","markedAttributes","markedChildren","markedTexts","_inlineFiller","_fakeSelectionContainer","renderer_createClass","mapViewToDom","inlineFillerPosition","_updateChildrenMappings","_isSelectionInInlineFiller","_removeInlineFiller","_getInlineFillerPosition","_needsInlineFillerAtSelection","_updateAttrs","_updateChildren","_updateText","fillerDomPosition","addInlineFiller","_updateSelection","_updateFocus","actualDomChildren","expectedDomChildren","viewChildrenToDom","withChildren","diff","_diffNodeLists","actions","_findReplaceActions","counter","equal","action","insertIndex","deleteIndex","viewChild","_updateElementMappings","unbindDomElement","bindElements","firstPos","selectionPosition","domFillerNode","selectionParent","selectionOffset","findAncestor","isEditable","viewText","findCorrespondingDomText","newDomText","viewToDom","actualText","expectedText","filler","insertData","deleteData","domAttrKeys","attr","viewAttrKeys","nodesToUnbind","_markDescendantTextToSync","domToView","domChildList","fakeSelectionContainer","childList","filterOutFakeSelectionContainer","actualDomChild","expectedDomChild","actualDom","expectedDom","newActions","actualSlice","expectedSlice","areSimilar","viewNode","_removeDomSelection","_removeFakeSelection","domRoot","_updateFakeSelection","_updateDomSelection","assign","width","domRange","createRange","removeAllRanges","selectNodeContents","addRange","bindFakeSelection","_domSelectionNeedsUpdate","ELEMENT_NODE","childAtOffset","tagName","fixGeckoSelectionAfterBr","isDomSelectionCorrect","oldViewSelection","domSelectionToView","activeDomElement","activeElement","mapDomToView","domParentOrArray","nodeAfterFiller","fillerNode","node1","node2","DOCUMENT_NODE","domconverter_slicedToArray","domconverter_arrayWithHoles","domconverter_iterableToArrayLimit","domconverter_nonIterableRest","domconverter_defineProperties","domconverter_DomConverter","DomConverter","domconverter_classCallCheck","preElements","_domToViewMapping","_viewToDomMapping","_fakeSelectionMapping","domconverter_createClass","viewDocumentSelection","_Array$from","domFragment","viewFragment","textData","_processDataFromViewText","createDocumentFragment","bindDocumentFragments","fillerPositionOffset","childView","_args","viewRange","domStart","domEnd","setStart","setEnd","_domParent","domBefore","domAfter","viewParent","getParentUIElement","_processDataFromDomText","isComment","isDocumentFragment","viewName","keepOriginalCase","domChildrenToView","domChild","fakeSelectionToView","isDomSelectionBackward","viewRanges","domRangeToView","viewStart","viewEnd","findCorrespondingViewText","_viewParent","viewBefore","domElementOrDocumentFragment","_viewElement","documentFragmentOrElement","viewEditable","domEditable","_global$window","scrollX","scrollY","scrollPositions","forEachDomNodeAncestor","scrollLeft","scrollTop","_scrollPositions$shif2","scrollTo","DOCUMENT_FRAGMENT_NODE","COMMENT_NODE","anchorNode","anchorOffset","detach","_domNode","_isDomSelectionPositionCorrect","includes","prevNode","_getTouchingViewTextNode","_nodeEndsWithSpace","_hasDomParentOfType","_getTouchingInlineDomNode","shouldLeftTrim","_checkShouldLeftTrimDomText","shouldRightTrim","_checkShouldRightTrimDomText","getNext","topmostParent","createTreeWalker","NodeFilter","SHOW_TEXT","SHOW_ELEMENT","acceptNode","FILTER_ACCEPT","FILTER_SKIP","currentNode","touchingNode","lca","nodeA","nodeB","boundaryParent","parents","isWindow","stringifiedObject","dom_emittermixin","_EmitterMixin$listenT","rest","proxy","_getProxyEmitter","emittermixin_ProxyEmitter","attach","listeningEmitter","listenedToEmitterId","_getEmitterListenedTo","getNodeUID","ProxyEmitter","emittermixin_classCallCheck","observer_defineProperties","_domListeners","domListener","_createDomListener","useCapture","addEventListener","removeListener","domEvt","removeEventListener","Observer","observer_classCallCheck","isEnabled","observer_createClass","disable","setCacheAdd","setCacheHas","SetCache","arraySome","cacheHas","cache","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","equalArrays","equalFunc","isPartial","arrLength","othLength","seen","arrValue","othValue","compared","othIndex","mapToArray","setToArray","errorTag","equalByTag","convert","equalObjects","objProps","objLength","skipCtor","objCtor","othCtor","arrayTag","baseIsEqualDeep","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","baseIsEqual","isEqualWith","mutationobserver_typeof","mutationobserver_defineProperties","mutationobserver_assertThisInitialized","mutationobserver_get","mutationobserver_getPrototypeOf","mutationobserver_superPropBase","mutationobserver_setPrototypeOf","mutationobserver_MutationObserver","_Observer","MutationObserver","mutationobserver_classCallCheck","mutationobserver_possibleConstructorReturn","characterData","characterDataOldValue","subtree","_renderer","_domElements","_mutationObserver","_onMutations","mutationobserver_inherits","mutationobserver_createClass","takeRecords","observe","disconnect","domMutations","mutatedTexts","mutatedElements","mutation","_isBogusBrMutation","_mutation","oldText","newText","viewMutations","mutatedText","markToSync","viewChildren","newViewChildren","lodash_es_isEqualWith","sameNodes","oldChildren","newChildren","viewSelectionAnchor","viewSelectionFocus","forceRender","child1","child2","addedNode","removedNodes","addedNodes","domeventdata_defineProperties","domeventdata_DomEventData","DomEventData","domEvent","additionalData","domeventdata_classCallCheck","domeventdata_createClass","preventDefault","stopPropagation","domeventobserver_typeof","domeventobserver_defineProperties","domeventobserver_possibleConstructorReturn","domeventobserver_assertThisInitialized","domeventobserver_getPrototypeOf","domeventobserver_setPrototypeOf","domeventobserver_DomEventObserver","DomEventObserver","domeventobserver_classCallCheck","domeventobserver_inherits","domeventobserver_createClass","domEventType","onDomEvent","eventType","keyobserver_typeof","keyobserver_defineProperties","keyobserver_possibleConstructorReturn","keyobserver_assertThisInitialized","keyobserver_getPrototypeOf","keyobserver_setPrototypeOf","keyobserver_KeyObserver","_DomEventObserver","KeyObserver","keyobserver_classCallCheck","keyobserver_inherits","keyobserver_createClass","metaKey","isSymbol","isSymbol_typeof","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","toNumber","isBinary","FUNC_ERROR_TEXT","nativeMin","debounce","wait","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","maxing","invokeFunc","time","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","setTimeout","timeWaiting","remainingWait","debounced","isInvoking","leadingEdge","clearTimeout","cancel","flush","fakeselectionobserver_typeof","fakeselectionobserver_defineProperties","fakeselectionobserver_possibleConstructorReturn","fakeselectionobserver_assertThisInitialized","fakeselectionobserver_get","fakeselectionobserver_getPrototypeOf","fakeselectionobserver_superPropBase","fakeselectionobserver_setPrototypeOf","fakeselectionobserver_FakeSelectionObserver","FakeSelectionObserver","fakeselectionobserver_classCallCheck","_fireSelectionChangeDoneDebounced","lodash_es_debounce","fakeselectionobserver_inherits","fakeselectionobserver_createClass","_isArrowKeyCode","_handleSelectionMove","newSelection","oldSelection","selectionobserver_typeof","selectionobserver_defineProperties","selectionobserver_possibleConstructorReturn","selectionobserver_assertThisInitialized","selectionobserver_get","selectionobserver_getPrototypeOf","selectionobserver_superPropBase","selectionobserver_setPrototypeOf","selectionobserver_SelectionObserver","SelectionObserver","selectionobserver_classCallCheck","mutationObserver","getObserver","_documents","WeakSet","_clearInfiniteLoopInterval","setInterval","_clearInfiniteLoop","_loopbackCounter","selectionobserver_inherits","selectionobserver_createClass","_handleSelectionChange","clearInterval","isReadOnly","newViewSelection","focusobserver_typeof","focusobserver_defineProperties","focusobserver_possibleConstructorReturn","focusobserver_assertThisInitialized","focusobserver_get","focusobserver_getPrototypeOf","focusobserver_superPropBase","focusobserver_setPrototypeOf","FocusObserver","focusobserver_classCallCheck","_renderTimeoutId","selectedEditable","focusobserver_inherits","focusobserver_createClass","compositionobserver_typeof","compositionobserver_defineProperties","compositionobserver_possibleConstructorReturn","compositionobserver_assertThisInitialized","compositionobserver_getPrototypeOf","compositionobserver_setPrototypeOf","CompositionObserver","compositionobserver_classCallCheck","isComposing","compositionobserver_inherits","compositionobserver_createClass","inputobserver_typeof","inputobserver_defineProperties","inputobserver_possibleConstructorReturn","inputobserver_assertThisInitialized","inputobserver_getPrototypeOf","inputobserver_setPrototypeOf","InputObserver","inputobserver_classCallCheck","inputobserver_inherits","inputobserver_createClass","isRange","getBorderWidths","getComputedStyle","borderTopWidth","borderRightWidth","bottom","borderBottomWidth","borderLeftWidth","rect_defineProperties","rectProperties","rect_Rect","Rect","rect_classCallCheck","isSourceRange","_source","sourceNode","contains","copyRectProperties","getDomRangeRects","getBoundingClientRect","innerWidth","innerHeight","height","rect_createClass","anotherRect","rect","getIntersection","getArea","visibleRect","isBody","commonAncestorContainer","parentRect","intersectionRect","_rectProperties","prop","intersectRect","scrollBarWidth","scrollBarHeight","clientWidth","clientHeight","borderWidths","offsetWidth","offsetHeight","moveBy","rects","clientRects","getClientRects","_clientRects","_rect","_rectProperties2","elementOrRange","scrollViewportToShowTarget","_ref","_ref$viewportOffset","viewportOffset","targetWindow","getWindow","currentWindow","currentFrame","scrollAncestorsToShowRect","getParentElement","getRectRelativeToWindow","targetRect","scrollWindowToShowRect","frameElement","targetShiftedDownRect","targetShiftedUpRect","viewportRect","excludeScrollbarsAndBorders","isAbove","isBelow","isLeftOf","isRightOf","getRect","parentWindow","firstRect","secondRect","relativeWindow","frame","frameRect","view_slicedToArray","view_arrayWithHoles","view_iterableToArrayLimit","view_nonIterableRest","view_defineProperties","scrollAncestorsToShowTarget","view_View","View","view_classCallCheck","domRoots","_initialDomRootAttributes","_observers","_ongoingChange","_postFixersInProgress","_renderingDisabled","_hasChangedSinceTheLastRendering","_writer","addObserver","injectQuirksHandling","_render","view_createClass","viewRoot","getRoot","_name","initialDomRootAttributes","_Array$from$_i","updateContenteditableAttribute","change","observer","enable","viewRangeToDom","isRenderingInProgress","callbackResult","_callPostFixers","flag","disableObservers","enableObservers","toMap","model_node_defineProperties","model_node_Node","model_node_classCallCheck","model_node_createClass","getChildStartOffset","model_text_typeof","model_text_defineProperties","text_possibleConstructorReturn","text_assertThisInitialized","text_get","text_getPrototypeOf","text_superPropBase","text_setPrototypeOf","model_text_Text","model_text_classCallCheck","text_inherits","model_text_createClass","model_textproxy_defineProperties","model_textproxy_TextProxy","model_textproxy_classCallCheck","model_textproxy_createClass","nodelist_toConsumableArray","nodelist_arrayWithoutHoles","nodelist_iterableToArray","nodelist_nonIterableSpread","nodelist_defineProperties","nodelist_NodeList","NodeList","nodelist_classCallCheck","_nodes","_insertNodes","nodelist_createClass","getNodeIndex","sum","maxOffset","getNodeStartOffset","totalOffset","nodeList","_this$_nodes","indexStart","toJSON","model_element_typeof","model_element_defineProperties","model_element_possibleConstructorReturn","model_element_assertThisInitialized","model_element_get","model_element_getPrototypeOf","model_element_superPropBase","model_element_setPrototypeOf","model_element_Element","model_element_classCallCheck","model_element_inherits","model_element_createClass","getNode","offsetToIndex","relativePath","element_normalize","_removeNodes","fromJSON","model_treewalker_defineProperties","model_treewalker_TreeWalker","model_treewalker_classCallCheck","model_position_Position","stickiness","_visitedParent","model_treewalker_createClass","prevVisitedParent","formatReturnValue","offsetInTextNode","model_position_defineProperties","model_position_classCallCheck","model_position_createClass","diffAt","leftParent","getParentPath","operation","_getTransformedByInsertOperation","_getTransformedByMoveOperation","_getTransformedBySplitOperation","_getTransformedByMergeOperation","_getTransformedByInsertion","_getTransformedByMove","sourcePosition","movedRange","_getCombined","splitPosition","moveTargetPosition","graveyardPosition","_getTransformedByDeletion","deletionPosition","deletePosition","transformed","insertPosition","combined","lodash_es_last","newOffset","graveyard","range_toConsumableArray","range_arrayWithoutHoles","range_iterableToArray","range_nonIterableSpread","model_range_defineProperties","model_range_Range","model_range_classCallCheck","model_range_createClass","getCommonPath","posParent","_howMany","operations","getTransformedByOperation","containsRange","spread","moveRange","differenceSet","getDifference","difference","common","transformedCommon","newStart","newEnd","ref","refIndex","mapper_defineProperties","mapper_Mapper","Mapper","mapper_classCallCheck","_modelToViewMapping","_viewToModelMapping","_viewToModelLengthCallbacks","_markerNameToElements","viewContainer","modelPosition","_findPositionIn","viewBlock","findMappedViewAncestor","modelParent","modelOffset","_toModelOffset","mapper_createClass","modelElement","toModelElement","toViewElement","elements","toModelPosition","modelRange","toViewPosition","mapper","isPhantom","boundElements","getElementsWithSameId","viewElementName","lengthCallback","viewOffset","getModelLength","len","expectedOffset","lastLength","_moveViewPositionToTextNode","modelconsumable_defineProperties","modelconsumable_ModelConsumable","ModelConsumable","modelconsumable_classCallCheck","_consumable","_textProxyRegistry","modelconsumable_createClass","_normalizeConsumableType","_getSymbolForTextProxy","itemConsumables","startMap","endMap","_addSymbolForTextProxy","downcastdispatcher_defineProperties","downcastdispatcher_DowncastDispatcher","DowncastDispatcher","conversionApi","downcastdispatcher_classCallCheck","dispatcher","downcastdispatcher_createClass","differ","getMarkersToRemove","convertMarkerRemove","getChanges","convertInsert","convertRemove","convertAttribute","attributeKey","attributeOldValue","attributeNewValue","getMarkersToAdd","_change","convertMarkerAdd","consumable","_createInsertConsumable","_testAndFire","_clearConversionApi","_createConsumableForRange","markers","markersAtSelection","getMarkersAtPosition","_createSelectionConsumable","_markersAtSelection","marker","markerRange","getRange","shouldMarkerChangeBeConverted","markerName","containsItem","model_selection_defineProperties","model_selection_Selection","model_selection_classCallCheck","model_selection_createClass","anyNewRange","oldRange","_removeAllRanges","directChange","_popRange","attributeKeys","getSelectedBlocks","visited","startBlock","endBlock","getParentBlock","isUnvisitedBlockContainer","isTouching","getTopMostBlocks","selected","_selected","parentBlock","findAncestorBlock","limitStartPosition","limitEndPosition","_checkRange","model","schema","hasParentLimit","isLimit","liverange_typeof","liverange_defineProperties","liverange_getPrototypeOf","liverange_assertThisInitialized","liverange_setPrototypeOf","liverange_LiveRange","_Range","LiveRange","liverange_classCallCheck","liverange_possibleConstructorReturn","isDocumentOperation","_createFromRanges","boundariesChanged","contentChanged","doesOperationChangeRangeContent","toRange","liverange_inherits","liverange_createClass","documentselection_typeof","documentselection_slicedToArray","documentselection_arrayWithHoles","documentselection_iterableToArrayLimit","documentselection_nonIterableRest","documentselection_assertThisInitialized","documentselection_get","documentselection_getPrototypeOf","documentselection_superPropBase","documentselection_setPrototypeOf","model_documentselection_classCallCheck","model_documentselection_defineProperties","model_documentselection_createClass","storePrefix","model_documentselection_DocumentSelection","documentselection_LiveSelection","containsEntireContent","_updateMarkers","_updateAttributes","_getStoredAttributes","overrideGravity","restoreGravity","hasOwnRange","isGravityOverridden","startsWith","_Selection","LiveSelection","documentselection_possibleConstructorReturn","_model","_attributePriority","_fixGraveyardRangesData","_hasChangedRange","_overriddenGravityRegister","_this$_fixGraveyardRa","liveRange","_fixGraveyardSelection","_validateSelectionRange","batch","changeParent","isNoLongerEmpty","enqueueChange","storedAttributes","clearAttributesStoredInElement","documentselection_inherits","_getDefaultRange","optionsOrPlaceOrOffset","overrideUid","_prepareRange","fromRange","selectionRange","_markers","_marker","_marker2","clearAll","newAttributes","_getSurroundingAttributes","oldAttributes","_setAttributesTo","changed","_step5$value","newKey","oldKey","_step8$value","realKey","getAttrsIfCharacter","_node","removedRangeStart","positionCandidate","getNearestSelectionRange","conversionhelpers_defineProperties","ConversionHelpers","dispatchers","conversionhelpers_classCallCheck","_dispatchers","conversionhelpers_createClass","conversionHelper","cloneDeep","downcasthelpers_typeof","downcasthelpers_defineProperties","downcasthelpers_possibleConstructorReturn","downcasthelpers_assertThisInitialized","downcasthelpers_getPrototypeOf","downcasthelpers_setPrototypeOf","DowncastHelpers","_ConversionHelpers","downcasthelpers_classCallCheck","downcasthelpers_inherits","downcasthelpers_createClass","config","lodash_es_cloneDeep","normalizeToElementConfig","elementCreator","consume","downcasthelpers_insertElement","converterPriority","downcastElementToElement","modelValue","getFromAttributeCreator","oldViewElement","newViewElement","viewWriter","toViewRange","unwrap","downcasthelpers_wrap","downcastAttributeToElement","normalizeToAttributeConfig","attributeCreator","oldAttribute","_keys2","_keys3","changeAttribute","downcastAttributeToAttribute","isOpening","viewStartElement","viewEndElement","bindElementToMarker","insertUIElement","markerNameToElements","unbindElementsFromMarkerName","createRangeOn","clearClonedElementsGroup","downcastMarkerToElement","highlightDescriptor","prepareDescriptor","createViewElementFromHighlightDescriptor","rangeAfterWrap","highlightText","highlightElement","viewHighlightElement","removeHighlight","downcastMarkerToHighlight","viewElementType","modelData","viewElementDefinition","createContainerElement","createUIElement","_keys4","createViewElementFromDefinition","modelAttributeValue","upcasthelpers_defineProperty","upcasthelpers_typeof","upcasthelpers_defineProperties","upcasthelpers_possibleConstructorReturn","upcasthelpers_assertThisInitialized","upcasthelpers_getPrototypeOf","upcasthelpers_setPrototypeOf","UpcastHelpers","upcasthelpers_classCallCheck","upcasthelpers_inherits","upcasthelpers_createClass","upcastElementToElement","normalizeModelAttributeConfig","prepareToAttributeConverter","elementName","getViewElementNameFromConfig","upcastElementToAttribute","viewKey","normalized","keyName","normalizeViewAttributeKeyValueConfig","upcastAttributeToAttribute","oldModel","modelWriter","data-name","normalizeToMarkerConfig","upcastElementToMarker","matcherResult","viewItem","getModelElement","splitResult","splitToAllowedParent","modelCursor","convertChildren","createPositionAt","getSplitParts","createPositionBefore","createPositionAfter","cursorParent","prepareToElementConverter","viewAttributeKeyToCopy","defaultModelValue","modelKey","onlyViewNameIsDefined","modelAttribute","checkAttribute","setAttributeOn","editingcontroller_defineProperties","editingcontroller_EditingController","EditingController","editingcontroller_classCallCheck","downcastDispatcher","_disableRendering","convertChanges","convertSelection","modelSelection","toModelRange","convertSelectionChange","createText","modelEnd","createRangeIn","unbindViewElement","brokenPosition","breakAttributes","bindTo","editingcontroller_createClass","plugincollection_slicedToArray","plugincollection_arrayWithHoles","plugincollection_iterableToArrayLimit","plugincollection_nonIterableRest","plugincollection_defineProperties","plugincollection_PluginCollection","PluginCollection","editor","availablePlugins","plugincollection_classCallCheck","_editor","_availablePlugins","_plugins","PluginConstructor","pluginName","plugincollection_createClass","plugin","removePlugins","that","loading","loaded","pluginConstructors","mapToAvailableConstructors","removePluginConstructors","missingPlugins","pluginNameOrConstructor","getPluginConstructor","getMissingPluginNames","errorMsg","loadPlugin","initPlugins","requires","RequiredPluginConstructorOrName","RequiredPluginConstructor","requiredBy","_add","instantiatePlugin","loadedPlugins","promise","PluginConstructorOrName","promises","pluginInstance","plugin1","plugin2","commandcollection_defineProperties","commandcollection_CommandCollection","CommandCollection","commandcollection_classCallCheck","_commands","commandcollection_createClass","commandName","command","execute","names","commands","translate","language","translationKey","numberOfLanguages","CKEDITOR_TRANSLATIONS","hasTranslation","locale_defineProperties","locale_Locale","Locale","locale_classCallCheck","_t","locale_createClass","str","translatedString","viewconsumable_toConsumableArray","viewconsumable_arrayWithoutHoles","viewconsumable_iterableToArray","viewconsumable_nonIterableSpread","viewconsumable_classCallCheck","viewconsumable_defineProperties","viewconsumable_createClass","ViewConsumable","_consumables","consumables","elementConsumables","viewconsumable_ViewElementConsumables","revert","consumablesFromElement","createFrom","ViewElementConsumables","_canConsumeName","_test","_consume","_revert","lodash_es_isArray","consumableName","_marked","combineWalkers","_marked2","convertToMinimalFlatRanges","schema_toConsumableArray","schema_arrayWithoutHoles","schema_iterableToArray","schema_nonIterableSpread","schema_slicedToArray","schema_arrayWithHoles","schema_iterableToArrayLimit","schema_nonIterableRest","schema_classCallCheck","schema_defineProperties","schema_createClass","schema_Schema","Schema","_sourceDefinitions","_attributeProperties","SchemaContext","getDefinition","itemName","definition","_clearCache","_compiledDefinitions","_compile","getDefinitions","isInline","_checkContextMatch","attributeName","allowAttributes","positionOrBaseElement","elementToMerge","checkMerge","checkChild","_ref2","childDef","retValue","_ref3","_ref4","getAttributeProperties","selectionOrRangeOrPosition","rangeCommonAncestor","firstPosition","getValidRanges","_getValidRangesForRange","backwardWalker","forwardWalker","removeDisallowedAttributes","compiledDefinitions","sourceRules","itemNames","_itemNames","compileBaseItemRule","_itemNames2","compileAllowContentOf","_itemNames3","compileAllowWhere","_i5","_itemNames4","_itemName3","compileAllowAttributesOf","compileInheritPropertiesFrom","_i6","_itemNames5","_itemName4","cleanUpAllowIn","cleanUpAllowAttributes","contextItemIndex","contextItem","getItem","allowIn","parentRule","mapContextItem","getNames","query","endsWith","sourceItemRules","itemRule","allowContentOf","allowWhere","allowAttributesOf","inheritTypesFrom","sourceItemRule","typeNames","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","copyTypes","copyProperty","_iteratorNormalCompletion17","_didIteratorError17","_iteratorError17","_step17","_iterator17","inheritFrom","inheritAllFrom","makeInheritAllWork","allowContentOfItemName","getAllowedChildren","allowedItem","_compiledDefinitions$","allowedIn","_compiledDefinitions$2","inheritAttributes","existingItems","itemToCheck","_iteratorNormalCompletion16","_didIteratorError16","_iteratorError16","_step16","_iterator16","_itemRule$propertyNam","getValues","ctxItem","_context4","_context5","forward","step","_step18","_context6","_iteratorNormalCompletion18","_didIteratorError18","_iteratorError18","_iterator18","_step19","_context7","getMinimalFlatRanges","upcastdispatcher_defineProperties","upcastdispatcher_UpcastDispatcher","UpcastDispatcher","upcastdispatcher_classCallCheck","_splitParts","_modelCursor","convertItem","_convertItem","_convertChildren","_splitToAllowedParent","_getSplitParts","upcastdispatcher_createClass","contextDefinition","append","createContextTree","store","documentFragment","_removeEmptyElements","modelItem","markerElements","markerElement","currentPosition","extractMarkersFromModelFragment","nextModelCursor","_Array$from2","allowedParent","findAllowedParent","treeWalkerValue","originalPart","splitPart","_registerSplitPair","anyRemoved","datacontroller_slicedToArray","datacontroller_arrayWithHoles","datacontroller_iterableToArrayLimit","datacontroller_nonIterableRest","datacontroller_defineProperties","datacontroller_DataController","DataController","dataProcessor","datacontroller_classCallCheck","processor","upcastDispatcher","_conversionApi$conver","datacontroller_createClass","_ref$rootName","_ref$trim","_checkIfRootsExists","hasContent","ignoreWhitespaces","modelElementOrFragment","viewDocumentFragment","toView","toData","clearBindings","elementRange","intersection","_getMarkersRelativeToElement","version","initialData","main","_Object$keys","modelRoot","newData","removeSelectionAttribute","_Object$keys2","toModel","viewElementOrFragment","rootNames","getRootNames","conversion_marked","_getAllUpcastDefinitions","conversion_marked2","_getUpcastDefinition","conversion_defineProperties","conversion_Conversion","Conversion","downcastDispatchers","upcastDispatchers","conversion_classCallCheck","_helpers","_downcast","_createConversionHelpers","isDowncast","_upcast","conversion_createClass","alias","elementToElement","attributeToElement","elementToAttribute","attributeToAttribute","_step3$value","helpers","upcastAlso","upcastAlsoItem","batch_defineProperties","Batch","batch_classCallCheck","batch_createClass","op","baseVersion","operation_defineProperties","Operation","operation_classCallCheck","operation_createClass","__className","model_documentfragment_defineProperties","model_documentfragment_DocumentFragment","model_documentfragment_classCallCheck","model_documentfragment_createClass","model_documentfragment_normalize","utils_insert","_normalizeNodes","_splitNodeAtPosition","_mergeNodesAtIndex","_move","_haveSameAttributes","mergedNode","offsetDiff","firstPart","secondPart","iteratorA","iteratorB","attributeoperation_typeof","attributeoperation_defineProperties","attributeoperation_possibleConstructorReturn","attributeoperation_assertThisInitialized","attributeoperation_get","attributeoperation_getPrototypeOf","attributeoperation_superPropBase","attributeoperation_setPrototypeOf","attributeoperation_AttributeOperation","_Operation","AttributeOperation","attributeoperation_classCallCheck","attributeoperation_inherits","attributeoperation_createClass","lodash_es_isEqual","detachoperation_typeof","detachoperation_defineProperties","detachoperation_possibleConstructorReturn","detachoperation_assertThisInitialized","detachoperation_get","detachoperation_getPrototypeOf","detachoperation_superPropBase","detachoperation_setPrototypeOf","detachoperation_DetachOperation","DetachOperation","detachoperation_classCallCheck","detachoperation_inherits","detachoperation_createClass","moveoperation_typeof","moveoperation_defineProperties","moveoperation_possibleConstructorReturn","moveoperation_assertThisInitialized","moveoperation_get","moveoperation_getPrototypeOf","moveoperation_superPropBase","moveoperation_setPrototypeOf","moveoperation_MoveOperation","MoveOperation","moveoperation_classCallCheck","moveoperation_inherits","moveoperation_createClass","newTargetPosition","getMovedRangeStart","sourceElement","targetElement","sourceOffset","targetOffset","insertoperation_typeof","insertoperation_toConsumableArray","insertoperation_arrayWithoutHoles","insertoperation_iterableToArray","insertoperation_nonIterableSpread","insertoperation_defineProperties","insertoperation_possibleConstructorReturn","insertoperation_assertThisInitialized","insertoperation_get","insertoperation_getPrototypeOf","insertoperation_superPropBase","insertoperation_setPrototypeOf","insertoperation_InsertOperation","InsertOperation","insertoperation_classCallCheck","shouldReceiveAttributes","insertoperation_inherits","insertoperation_createClass","gyPosition","originalNodes","markeroperation_typeof","markeroperation_defineProperties","markeroperation_possibleConstructorReturn","markeroperation_assertThisInitialized","markeroperation_get","markeroperation_getPrototypeOf","markeroperation_superPropBase","markeroperation_setPrototypeOf","markeroperation_MarkerOperation","MarkerOperation","affectsData","markeroperation_classCallCheck","markeroperation_inherits","markeroperation_createClass","renameoperation_typeof","renameoperation_defineProperties","renameoperation_possibleConstructorReturn","renameoperation_assertThisInitialized","renameoperation_get","renameoperation_getPrototypeOf","renameoperation_superPropBase","renameoperation_setPrototypeOf","renameoperation_RenameOperation","RenameOperation","oldName","renameoperation_classCallCheck","renameoperation_inherits","renameoperation_createClass","rootattributeoperation_typeof","rootattributeoperation_defineProperties","rootattributeoperation_possibleConstructorReturn","rootattributeoperation_assertThisInitialized","rootattributeoperation_get","rootattributeoperation_getPrototypeOf","rootattributeoperation_superPropBase","rootattributeoperation_setPrototypeOf","rootattributeoperation_RootAttributeOperation","RootAttributeOperation","rootattributeoperation_classCallCheck","rootattributeoperation_inherits","rootattributeoperation_createClass","mergeoperation_typeof","mergeoperation_defineProperties","mergeoperation_possibleConstructorReturn","mergeoperation_assertThisInitialized","mergeoperation_get","mergeoperation_getPrototypeOf","mergeoperation_superPropBase","mergeoperation_setPrototypeOf","mergeoperation_MergeOperation","MergeOperation","mergeoperation_classCallCheck","mergeoperation_inherits","mergeoperation_createClass","splitoperation_SplitOperation","mergedElement","splitoperation_typeof","splitoperation_defineProperties","splitoperation_possibleConstructorReturn","splitoperation_assertThisInitialized","splitoperation_get","splitoperation_getPrototypeOf","splitoperation_superPropBase","splitoperation_setPrototypeOf","SplitOperation","splitoperation_classCallCheck","getInsertionPosition","splitoperation_inherits","splitoperation_createClass","splitElement","rootelement_typeof","rootelement_defineProperties","rootelement_possibleConstructorReturn","rootelement_assertThisInitialized","rootelement_get","rootelement_getPrototypeOf","rootelement_superPropBase","rootelement_setPrototypeOf","RootElement","rootelement_classCallCheck","_doc","rootelement_inherits","rootelement_createClass","writer_slicedToArray","writer_arrayWithHoles","writer_iterableToArrayLimit","writer_nonIterableRest","writer_defineProperties","writer_Writer","Writer","writer_classCallCheck","writer_createClass","_assertWriterUsedCorrectly","isSameTree","addOperation","applyOperation","rangeRootPosition","usingOperation","updateMarker","addMarker","itemOrRange","setAttributeOnRange","setAttributeOnItem","removeAttributesFromItem","_addOperationForAffectedMarkers","flat","applyRemoveOperation","_merge","_mergeDetached","createPositionFromPath","createSelection","renameOperation","limitElement","firstSplitElement","firstCopyElement","elementOrString","shiftedRange","applyMarkerOperation","_set","markerOrName","currentMarker","hasUsingOperationDefined","affectsDataDefined","currentRange","updatedRange","managedUsingOperations","_refresh","keyOrObjectOrIterable","_setSelectionAttribute","keyOrIterableOfKeys","_removeSelectionAttribute","_overrideGravity","_restoreGravity","storeKey","_getStoreAttributeKey","_currentWriter","isAffected","elementBefore","elementAfter","affectedInLeftElement","affectedInRightElement","affectedAfterLeftElement","affectedBeforeRightElement","valueBefore","valueAfter","lastSplitPosition","previousValue","_version","rootA","rootB","differ_toConsumableArray","differ_arrayWithoutHoles","differ_iterableToArray","differ_nonIterableSpread","differ_slicedToArray","differ_arrayWithHoles","differ_iterableToArrayLimit","differ_nonIterableRest","differ_defineProperties","differ_Differ","Differ","markerCollection","differ_classCallCheck","_markerCollection","_changesInElement","_elementSnapshots","_changedMarkers","_changeCount","_cachedChanges","_cachedChangesWithGraveyard","differ_createClass","_isInInsertedElement","_markInsert","_markAttribute","sourceParentInserted","targetParentInserted","_markRemove","getMarkersIntersectingRange","bufferMarkerChange","graveyardParent","mergedIntoElement","buffered","includeChangesInGraveyard","diffSet","changes","snapshotChildren","elementChildren","_getChildrenSnapshot","_generateActionsFromChanges","_getInsertDiff","_getRemoveDiff","elementAttributes","snapshotAttributes","_getAttributesDiff","changeCount","prevDiff","thisDiff","isConsecutiveTextRemove","isConsecutiveTextAdd","isConsecutiveAttributeChange","_diffSet","_changesInGraveyardFilter","changeItem","_markChange","_removeAllNestedChanges","_makeSnapshot","_getChangesForElement","_handleChange","inc","nodesToHandle","old","incEnd","oldEnd","intersectionLength","_intersectionLength","_intersectionLength2","howManyAfter","attributePart","_attributePart","diffs","_step9$value","_step10$value","_newValue","snapshot","oldChildrenLength","oldChildrenHandled","repeat","posInGy","rangeInGy","history_defineProperties","History","history_classCallCheck","_operations","_undoPairs","_undoneOperations","history_createClass","undoneOperation","undoingOperation","isInsideSurrogatePair","character","isHighSurrogateHalf","isLowSurrogateHalf","isInsideCombinedSymbol","isCombiningMark","model_document_defineProperties","graveyardName","model_document_Document","model_document_classCallCheck","history","_hasSelectionChangedFromTheLastChangeBlock","createRoot","bufferOperation","model_document_createClass","_hasDocumentChangedFromTheLastChangeBlock","refresh","hasDataChanges","defaultRoot","_getDefaultRoot","validateTextNodePosition","rangeBoundary","markercollection_classCallCheck","markercollection_defineProperties","markercollection_createClass","markercollection_MarkerCollection","MarkerCollection","markercollection_Marker","oldMarker","hasChanged","_attachLiveRange","_managedUsingOperations","_affectsData","_destroyMarker","getMarkersGroup","_detachLiveRange","Marker","_liveRange","liveposition_typeof","liveposition_defineProperties","liveposition_getPrototypeOf","liveposition_assertThisInitialized","liveposition_setPrototypeOf","liveposition_LivePosition","_Position","LivePosition","liveposition_classCallCheck","liveposition_possibleConstructorReturn","oldPosition","toPosition","liveposition_inherits","liveposition_createClass","insertcontent_defineProperties","insertcontent_Insertion","Insertion","insertcontent_classCallCheck","canMergeWith","_filterAttributesOf","_affectedStart","_affectedEnd","insertcontent_createClass","parentContext","_handleNode","isFirst","isLast","nodeToSelect","_handleObject","_checkAndSplitToAllowedPosition","_mergeSiblingsOf","_handleDisallowedNode","_tryAutoparagraphing","handleNodes","livePos","fromPosition","_setAffectedBoundaries","mergeLeft","_canMergeLeft","mergeRight","_canMergeRight","mergePosLeft","mergePosRight","livePosition","_livePosition","_getAllowedIn","tempPos","deletecontent_deleteContent","selRange","doNotResetEntireContent","getLimitElement","shouldEntireContentBeReplacedWithParagraph","startPos","endPos","leaveUnmerged","mergeBranches","startParent","endParent","leftPos","rightPos","rangeToCheck","checkCanBeMerged","parentToRemove","collapseSelectionAt","isTextAllowed","isParagraphAllowed","shouldAutoparagraph","validSelectionRange","doNotAutoparagraph","insertParagraph","replaceEntireContentWithParagraph","modifyselection_typeof","wordBoundaryCharacters","modifyselection_modifySelection","isForward","unit","searchEnd","getSearchRange","v","isAtWordBoundary","isAtNodeBoundary","boundaryChar","getCorrectWordBreakPosition","getCorrectPosition","tryExtendingTo","setSelectionFocus","_ret","offsetToCheck","removeRangeContent","parentsToCheck","itemRange","parentToCheck","removeRange","injectSelectionPostFixer","registerPostFixer","correctedRange","tryFixingRange","fixedRanges","selectionStart","selectionEnd","selectionPostFixer","originalPosition","nearestSelectionRange","fixedPosition","tryFixingCollapsedRange","isTextAllowedOnStart","isTextAllowedOnEnd","startLimitElement","endLimitElement","startIsOnBlock","endIsOnBlock","checkSelectionOnNonLimitElements","isStartObject","fixedStart","isEndObject","fixedEnd","isStartInLimit","isEndInLimit","bothInSameParent","expandStart","isInObject","expandEnd","_fixedStart","_fixedEnd","findOutermostLimitAncestor","tryFixingNonCollapsedRage","startingNode","isLimitNode","model_defineProperties","model_Model","Model","model_classCallCheck","_pendingChanges","_validate","register","addChildCheck","childDefinition","model_createClass","_runPendingChanges","batchOrType","_execute","deleteContent","nodesToInsert","insertion","getSelectionRange","affectedRange","getAffectedRange","insertcontent_insertContent","frag","flatSubtreeRange","commonPath","commonParent","getNodeByPath","appendText","leftExcessRange","getselectedcontent_getSelectedContent","rangeOrElement","_ref$ignoreWhitespace","search","ret","currentBatch","callbackReturnValue","_handleChangeBlock","keystrokehandler_defineProperties","keystrokehandler_KeystrokeHandler","KeystrokeHandler","keystrokehandler_classCallCheck","_listener","keystrokehandler_createClass","keyEvtData","parseKeystroke","editingkeystrokehandler_typeof","editingkeystrokehandler_defineProperties","editingkeystrokehandler_possibleConstructorReturn","editingkeystrokehandler_assertThisInitialized","editingkeystrokehandler_get","editingkeystrokehandler_getPrototypeOf","editingkeystrokehandler_superPropBase","editingkeystrokehandler_setPrototypeOf","EditingKeystrokeHandler","_KeystrokeHandler","editingkeystrokehandler_classCallCheck","editingkeystrokehandler_inherits","editingkeystrokehandler_createClass","evtData","editor_defineProperties","editor_Editor","Editor","editor_classCallCheck","builtinPlugins","defaultConfig","locale","editing","conversion","addAlias","keystrokes","editor_createClass","extraPlugins","init","readyPromise","_this$commands","dataapimixin","setData","getData","elementapimixin","updateSourceElement","HTMLTextAreaElement","setDataInElement","basichtmlwriter_defineProperties","BasicHtmlWriter","basichtmlwriter_classCallCheck","basichtmlwriter_createClass","fragment","htmldataprocessor_defineProperties","htmldataprocessor_HtmlDataProcessor","HtmlDataProcessor","htmldataprocessor_classCallCheck","_domParser","_domConverter","_htmlWriter","htmldataprocessor_createClass","getHtml","_toDom","componentfactory_defineProperties","componentfactory_ComponentFactory","ComponentFactory","componentfactory_classCallCheck","_components","componentfactory_createClass","originalName","getNormalized","focustracker_defineProperties","focustracker_FocusTracker","FocusTracker","focustracker_classCallCheck","_elements","_nextEventLoopTimeout","focustracker_createClass","_focus","_blur","focusedElement","editorui_defineProperties","editorui_EditorUI","EditorUI","editorui_classCallCheck","componentFactory","focusTracker","_editableElementsMap","editorui_createClass","ckeditorInstance","editorUI","placeholder_slicedToArray","placeholder_arrayWithHoles","placeholder_iterableToArrayLimit","placeholder_nonIterableRest","documentPlaceholders","hidePlaceholder","updateDocumentPlaceholders","placeholders","wasViewModified","updatePlaceholder","hostElement","isDirectHost","getChildPlaceholderHostSubstitute","isEmptyish","selectionAnchor","needsPlaceholder","showPlaceholder","elementreplacer_defineProperties","ElementReplacer","elementreplacer_classCallCheck","_replacedElements","elementreplacer_createClass","display","classiceditorui_typeof","classiceditorui_defineProperties","classiceditorui_possibleConstructorReturn","classiceditorui_assertThisInitialized","classiceditorui_get","classiceditorui_getPrototypeOf","classiceditorui_superPropBase","classiceditorui_setPrototypeOf","classiceditorui_ClassicEditorUI","_EditorUI","ClassicEditorUI","classiceditorui_classCallCheck","_toolbarConfig","normalizeToolbarConfig","_elementReplacer","classiceditorui_inherits","classiceditorui_createClass","replacementElement","editingView","editingRoot","setEditableElement","attachDomRoot","_initPlaceholder","_initToolbar","restore","detachDomRoot","stickyPanel","limiterElement","viewportTopOffset","toolbar","fillFromConfig","origin","originKeystrokeHandler","originFocusTracker","beforeFocus","afterBlur","enableToolbarKeyboardFocus","placeholderText","_options$isDirectHost","enablePlaceholder","viewcollection_typeof","viewcollection_defineProperties","viewcollection_possibleConstructorReturn","viewcollection_assertThisInitialized","viewcollection_getPrototypeOf","viewcollection_setPrototypeOf","viewcollection_ViewCollection","_Collection","ViewCollection","viewcollection_classCallCheck","isRendered","_parentElement","viewcollection_inherits","viewcollection_createClass","elementOrDocFragment","viewcollection_isStringArray","dest","_events3","evtName","_events2","template_typeof","template_toConsumableArray","template_arrayWithoutHoles","template_iterableToArray","template_nonIterableSpread","template_get","template_getPrototypeOf","template_superPropBase","template_possibleConstructorReturn","template_assertThisInitialized","template_inherits","template_setPrototypeOf","template_slicedToArray","template_arrayWithHoles","template_iterableToArrayLimit","template_nonIterableRest","template_classCallCheck","template_defineProperties","template_createClass","template_Template","Template","template_normalize","template_clone","_isRendered","_revertData","_renderNode","intoFragment","isApplying","revertData","_revertTemplateFromNode","getViews","isView","isTemplate","_renderText","_renderElement","createElementNS","_renderAttributes","_renderElementChildren","_setUpListeners","hasTemplateBinding","_bindToObservable","updater","getTextUpdater","attrName","attrValue","domAttrValue","attrNs","valueToBind","shouldExtend","getAttributeUpdater","_renderStyleAttribute","isFalsy","arrayValueReducer","setAttributeNS","styleName","styleValue","getStyleUpdater","childIndex","isViewCollection","setParent","childRevertData","eventListeners","revertBindings","schemaItem","_key$split2","domEvtName","domSelector","activateDomEventListener","syncValueSchemaValue","templateBinding","activateAttributeListener","revertBinding","eventNameOrFunctionOrAttribute","TemplateToBinding","eventNameOrFunction","if","valueIfTrue","TemplateIfBinding","template","template_extendTemplate","extendObjectValueArray","_template$text","TemplateBinding","_TemplateBinding","matches","_TemplateBinding2","getValueSchemaValue","removeAttributeNS","normalizePlainTextDefinition","normalizeTextDefinition","listeners","arrayify","normalizeListeners","normalizeAttributes","cur","ext","_obj$a","src_view_View","src_view_defineProperties","src_view_classCallCheck","_viewCollections","_unboundChildren","createCollection","collection","src_view_createClass","registerChild","_bindTemplate","editoruiview_typeof","editoruiview_defineProperties","editoruiview_possibleConstructorReturn","editoruiview_assertThisInitialized","editoruiview_get","editoruiview_getPrototypeOf","editoruiview_superPropBase","editoruiview_setPrototypeOf","editoruiview_EditorUIView","_View","EditorUIView","editoruiview_classCallCheck","editoruiview_inherits","editoruiview_createClass","_renderBodyCollection","_bodyCollectionContainer","bodyElement","class","labelview_typeof","labelview_possibleConstructorReturn","labelview_assertThisInitialized","labelview_getPrototypeOf","labelview_setPrototypeOf","LabelView","labelview_classCallCheck","bindTemplate","setTemplate","for","labelview_inherits","boxededitoruiview_typeof","boxededitoruiview_defineProperties","boxededitoruiview_possibleConstructorReturn","boxededitoruiview_assertThisInitialized","boxededitoruiview_getPrototypeOf","boxededitoruiview_setPrototypeOf","boxededitoruiview_BoxedEditorUIView","_EditorUIView","BoxedEditorUIView","boxededitoruiview_classCallCheck","ariaLabelUid","_voiceLabelView","_createVoiceLabel","role","aria-labelledby","boxededitoruiview_inherits","boxededitoruiview_createClass","voiceLabel","extendTemplate","editableuiview_typeof","editableuiview_defineProperties","editableuiview_possibleConstructorReturn","editableuiview_assertThisInitialized","editableuiview_get","editableuiview_getPrototypeOf","editableuiview_superPropBase","editableuiview_setPrototypeOf","EditableUIView","editableuiview_classCallCheck","_editableElement","_hasExternalElement","_editingView","editableuiview_inherits","editableuiview_createClass","_updateIsFocusedClasses","updateAfterRender","inlineeditableuiview_typeof","inlineeditableuiview_defineProperties","inlineeditableuiview_possibleConstructorReturn","inlineeditableuiview_assertThisInitialized","inlineeditableuiview_get","inlineeditableuiview_getPrototypeOf","inlineeditableuiview_superPropBase","inlineeditableuiview_setPrototypeOf","InlineEditableUIView","_EditableUIView","inlineeditableuiview_classCallCheck","inlineeditableuiview_inherits","inlineeditableuiview_createClass","stickypanelview_typeof","stickypanelview_defineProperties","stickypanelview_possibleConstructorReturn","stickypanelview_assertThisInitialized","stickypanelview_get","stickypanelview_getPrototypeOf","stickypanelview_superPropBase","stickypanelview_setPrototypeOf","toPx","toUnit","stickypanelview_StickyPanelView","StickyPanelView","stickypanelview_classCallCheck","_contentPanelPlaceholder","isSticky","_panelRect","_contentPanel","_hasViewportTopOffset","_isStickyToTheLimiter","limiterBottomOffset","marginLeft","stickypanelview_inherits","stickypanelview_createClass","_checkIfShouldBeSticky","limiterRect","panelRect","_limiterRect","isActive","_marginLeft","focuscycler_defineProperties","FocusCycler","focuscycler_classCallCheck","keystrokeHandler","focuscycler_createClass","previous","collectionLength","focusables","isFocusable","_getFocusableItem","viewIndex","focused","toolbarseparatorview_typeof","toolbarseparatorview_possibleConstructorReturn","toolbarseparatorview_assertThisInitialized","toolbarseparatorview_getPrototypeOf","toolbarseparatorview_setPrototypeOf","ToolbarSeparatorView","toolbarseparatorview_classCallCheck","toolbarseparatorview_inherits","toolbarview_typeof","toolbarview_defineProperties","toolbarview_assertThisInitialized","toolbarview_get","toolbarview_getPrototypeOf","toolbarview_superPropBase","toolbarview_setPrototypeOf","toolbarview_ToolbarView","ToolbarView","toolbarview_classCallCheck","toolbarview_possibleConstructorReturn","_focusCycler","focusPrevious","focusNext","mousedown","toolbarview_inherits","toolbarview_createClass","focusFirst","focusLast","classiceditoruiview_typeof","classiceditoruiview_defineProperties","classiceditoruiview_possibleConstructorReturn","classiceditoruiview_assertThisInitialized","classiceditoruiview_get","classiceditoruiview_getPrototypeOf","classiceditoruiview_superPropBase","classiceditoruiview_setPrototypeOf","classiceditoruiview_ClassicEditorUIView","_BoxedEditorUIView","ClassicEditorUIView","classiceditoruiview_classCallCheck","classiceditoruiview_inherits","classiceditoruiview_createClass","classiceditor_typeof","classiceditor_defineProperties","classiceditor_assertThisInitialized","classiceditor_get","classiceditor_getPrototypeOf","classiceditor_superPropBase","classiceditor_setPrototypeOf","classiceditor_ClassicEditor","_Editor","ClassicEditor","sourceElementOrData","classiceditor_classCallCheck","classiceditor_possibleConstructorReturn","ui","lodash_es_isFunction","form","originalSubmit","onSubmit","submit","attachToForm","classiceditor_inherits","classiceditor_createClass","getDataFromElement","getInitialData","plugin_defineProperties","Plugin","plugin_classCallCheck","plugin_createClass","datatransfer_defineProperties","DataTransfer","nativeDataTransfer","datatransfer_classCallCheck","files","kind","getAsFile","getFiles","_native","datatransfer_createClass","clipboardobserver_typeof","clipboardobserver_defineProperties","clipboardobserver_possibleConstructorReturn","clipboardobserver_assertThisInitialized","clipboardobserver_getPrototypeOf","clipboardobserver_setPrototypeOf","clipboardobserver_ClipboardObserver","ClipboardObserver","clipboardobserver_classCallCheck","viewDocument","handleInput","targetRanges","dropRange","dataTransfer","clipboardobserver_inherits","clipboardobserver_createClass","clipboardData","domDoc","clientX","clientY","caretRangeFromPoint","rangeParent","rangeOffset","getDropViewRange","smallPaddingElements","clipboard_typeof","clipboard_defineProperties","clipboard_possibleConstructorReturn","clipboard_assertThisInitialized","clipboard_getPrototypeOf","clipboard_setPrototypeOf","clipboard_Clipboard","_Plugin","Clipboard","clipboard_classCallCheck","clipboard_inherits","clipboard_createClass","modelDocument","onCopyCut","getSelectedContent","_htmlDataProcessor","spaces","normalizeClipboardData","plainTextToHtml","scrollToTheSelection","dataController","modelFragment","insertContent","viewToPlainText","childText","command_defineProperties","Command","command_classCallCheck","_disableStack","forceDisabled","clearForceDisabled","command_createClass","forceDisable","entercommand_typeof","entercommand_defineProperties","entercommand_possibleConstructorReturn","entercommand_assertThisInitialized","entercommand_getPrototypeOf","entercommand_setPrototypeOf","EnterCommand","_Command","entercommand_classCallCheck","entercommand_inherits","entercommand_createClass","isSelectionEmpty","splitBlock","isContainedWithinOneElement","enterBlock","splitPos","enterobserver_typeof","enterobserver_defineProperties","enterobserver_possibleConstructorReturn","enterobserver_assertThisInitialized","enterobserver_getPrototypeOf","enterobserver_setPrototypeOf","enterobserver_EnterObserver","EnterObserver","enterobserver_classCallCheck","isSoft","enterobserver_inherits","enterobserver_createClass","enter_typeof","enter_defineProperties","enter_possibleConstructorReturn","enter_assertThisInitialized","enter_getPrototypeOf","enter_setPrototypeOf","enter_Enter","Enter","enter_classCallCheck","enter_inherits","enter_createClass","shiftentercommand_typeof","shiftentercommand_defineProperties","shiftentercommand_possibleConstructorReturn","shiftentercommand_assertThisInitialized","shiftentercommand_getPrototypeOf","shiftentercommand_setPrototypeOf","ShiftEnterCommand","shiftentercommand_classCallCheck","shiftentercommand_inherits","shiftentercommand_createClass","insertBreak","softBreakAction","anchorPos","isInsideLimitElement","breakLineElement","shiftenter_typeof","shiftenter_defineProperties","shiftenter_possibleConstructorReturn","shiftenter_assertThisInitialized","shiftenter_getPrototypeOf","shiftenter_setPrototypeOf","shiftenter_ShiftEnter","ShiftEnter","shiftenter_classCallCheck","shiftenter_inherits","shiftenter_createClass","createEmptyElement","changebuffer_defineProperties","ChangeBuffer","limit","changebuffer_classCallCheck","isLocked","_changeCallback","_batch","_reset","_selectionChangeCallback","changebuffer_createClass","ignoreLock","createBatch","inputcommand_typeof","inputcommand_defineProperties","inputcommand_possibleConstructorReturn","inputcommand_assertThisInitialized","inputcommand_get","inputcommand_getPrototypeOf","inputcommand_superPropBase","inputcommand_setPrototypeOf","inputcommand_InputCommand","InputCommand","undoStepSize","inputcommand_classCallCheck","_buffer","inputcommand_inherits","inputcommand_createClass","textInsertions","resultRange","isCollapsedRange","lock","unlock","injectUnsafeKeystrokesHandling","latestCompositionSelection","inputCommand","handleUnsafeKeystroke","isSelectionUnchanged","keyData","safeKeycodes","isSafeKeystroke","deleteSelectionContent","isFlatSelection","getSingleTextNodeChange","lastOperation","pushLast","isContinuationOf","expected","diffToChanges","compareChildNodes","oldChild","newChild","injecttypingmutationshandling_defineProperties","injecttypingmutationshandling_MutationHandler","MutationHandler","injecttypingmutationshandling_classCallCheck","injecttypingmutationshandling_createClass","mutations","containerChildrenMutated","_handleContainerChildrenMutations","_handleTextMutation","_handleTextNodeInsertion","mutationsCommonAncestor","commonAncestor","getMutationsContainer","domMutationCommonAncestor","freshDomConverter","modelFromCurrentDom","currentModel","modelFromDomChildren","currentModelChildren","lastDomChild","lastCurrentChild","isSafeForTextMutation","_calculateChanges","calculateChanges","firstChangeAt","insertions","deletions","modelSelectionRange","insertText","_calculateChanges2","viewPos","modelPos","insertedText","diffResult","lastChangeAt","input_typeof","input_defineProperties","input_possibleConstructorReturn","input_assertThisInitialized","input_getPrototypeOf","input_setPrototypeOf","input_Input","Input","input_classCallCheck","input_inherits","input_createClass","injectTypingMutationsHandling","deletecommand_typeof","deletecommand_defineProperties","deletecommand_possibleConstructorReturn","deletecommand_assertThisInitialized","deletecommand_getPrototypeOf","deletecommand_setPrototypeOf","deletecommand_DeleteCommand","DeleteCommand","deletecommand_classCallCheck","deletecommand_inherits","deletecommand_createClass","modifySelection","_shouldEntireContentBeReplacedWithParagraph","sequence","_replaceEntireContentWithParagraph","limitElementFirstChild","deleteobserver_typeof","deleteobserver_defineProperties","deleteobserver_possibleConstructorReturn","deleteobserver_assertThisInitialized","deleteobserver_getPrototypeOf","deleteobserver_setPrototypeOf","deleteobserver_DeleteObserver","DeleteObserver","deleteobserver_classCallCheck","fireViewDeleteEvent","originalEvent","hasWordModifier","inputType","selectionToRemove","deleteobserver_inherits","deleteobserver_createClass","delete_typeof","delete_defineProperties","delete_possibleConstructorReturn","delete_assertThisInitialized","delete_getPrototypeOf","delete_setPrototypeOf","delete_Delete","Delete","delete_classCallCheck","delete_inherits","delete_createClass","deleteCommandParams","domSelectionAfterDeletion","typing_typeof","typing_defineProperties","typing_possibleConstructorReturn","typing_assertThisInitialized","typing_getPrototypeOf","typing_setPrototypeOf","typing_Typing","Typing","typing_classCallCheck","typing_inherits","typing_createClass","nooperation_typeof","nooperation_defineProperties","nooperation_possibleConstructorReturn","nooperation_assertThisInitialized","nooperation_getPrototypeOf","nooperation_setPrototypeOf","NoOperation","nooperation_classCallCheck","nooperation_inherits","nooperation_createClass","transform_defineProperties","transform_toConsumableArray","transform_arrayWithoutHoles","transform_iterableToArray","transform_nonIterableSpread","transformations","setTransformation","OperationA","OperationB","transformationFunction","aGroup","noUpdateTransformation","transform_transform","getTransformation","aIsStrong","aWasUndone","bWasUndone","abRelation","baRelation","transformSets","operationsA","operationsB","nextTransformIndex","nextBaseVersionA","nextBaseVersionB","originalOperationsACount","originalOperationsBCount","contextFactory","transform_ContextFactory","useRelations","forceWeakRemove","setOriginalOperations","_operationsA","_operationsB","opA","indexB","opB","newOpsA","getContext","newOpsB","updateRelation","newOpA","padWithNoOps","brokenOperationsACount","brokenOperationsBCount","updateBaseVersions","ContextFactory","transform_classCallCheck","_history","_useRelations","_forceWeakRemove","_originalOperations","_relations","transform_createClass","takeFrom","originalOperation","_setRelation","affectedLeft","affectedRight","wasInLeftElement","wasStartBeforeMergedElement","wasEndBeforeMergedElement","wasInRightElement","_wasUndone","_getRelation","originalOp","wasUndone","isUndoneOperation","origB","undoneB","getUndoneOperation","origA","relationsA","relation","_getComplementaryAttributeOperations","insertOperation","insertValue","_moveTargetIntoMovedRange","_makeMoveOperationsFromRanges","basecommand_typeof","basecommand_defineProperties","basecommand_possibleConstructorReturn","basecommand_assertThisInitialized","basecommand_getPrototypeOf","basecommand_setPrototypeOf","hasSameParentAs","moveOp","_breakRangeByMoveOperation","aNewRange","aToGraveyard","bToGraveyard","removedRange","mergeInside","mergeSplittingElement","getReversed","aCompB","shouldSpread","rightRange","movesGraveyardElement","gyMoveSource","splitNodesMoveSource","gyMoveTarget","gyMove","splitNodesMoveTargetPath","splitNodesMoveTarget","splitNodesMove","splitPath","additionalSplit","rangeToMove","gyElementMoved","newParentPosition","newTargetPath","howManyRemoved","aInGraveyard","bInGraveyard","newPositionPath","basecommand_BaseCommand","BaseCommand","basecommand_classCallCheck","_stack","_createdBatches","basecommand_inherits","basecommand_createClass","docSelection","selectionRanges","transformSelectionRange","batchToUndo","undoingBatch","operationsToUndo","operationToUndo","nextBaseVersion","historyOperations","getOperations","reversedOperations","setOperationAsUndone","getTransformedByOperations","undocommand_typeof","undocommand_defineProperties","undocommand_possibleConstructorReturn","undocommand_assertThisInitialized","undocommand_getPrototypeOf","undocommand_setPrototypeOf","UndoCommand","_BaseCommand","undocommand_classCallCheck","undocommand_inherits","undocommand_createClass","batchIndex","findIndex","_undo","_restoreSelection","redocommand_typeof","redocommand_defineProperties","redocommand_possibleConstructorReturn","redocommand_assertThisInitialized","redocommand_getPrototypeOf","redocommand_setPrototypeOf","RedoCommand","redocommand_classCallCheck","redocommand_inherits","redocommand_createClass","redoingBatch","undoediting_typeof","undoediting_defineProperties","undoediting_possibleConstructorReturn","undoediting_assertThisInitialized","undoediting_getPrototypeOf","undoediting_setPrototypeOf","undoediting_UndoEditing","UndoEditing","undoediting_classCallCheck","_batchRegistry","undoediting_inherits","undoediting_createClass","_undoCommand","_redoCommand","isRedoBatch","isUndoBatch","addBatch","clearStack","undoneBatch","iconview_typeof","iconview_defineProperties","iconview_possibleConstructorReturn","iconview_assertThisInitialized","iconview_get","iconview_getPrototypeOf","iconview_superPropBase","iconview_setPrototypeOf","IconView","iconview_classCallCheck","viewBox","iconview_inherits","iconview_createClass","_updateXMLContent","_colorFillPaths","svg","fillColor","querySelectorAll","tooltipview_typeof","tooltipview_possibleConstructorReturn","tooltipview_assertThisInitialized","tooltipview_getPrototypeOf","tooltipview_setPrototypeOf","TooltipView","tooltipview_classCallCheck","tooltipview_inherits","buttonview_typeof","buttonview_defineProperties","buttonview_assertThisInitialized","buttonview_get","buttonview_getPrototypeOf","buttonview_superPropBase","buttonview_setPrototypeOf","buttonview_ButtonView","ButtonView","buttonview_classCallCheck","buttonview_possibleConstructorReturn","tooltipView","_createTooltipView","labelView","_createLabelView","iconView","_getTooltipString","tabindex","aria-disabled","aria-pressed","click","buttonview_inherits","buttonview_createClass","icon","tooltip","getEnvKeystrokeText","undoui_typeof","undoui_defineProperties","undoui_possibleConstructorReturn","undoui_assertThisInitialized","undoui_getPrototypeOf","undoui_setPrototypeOf","undoui_UndoUI","UndoUI","undoui_classCallCheck","undoui_inherits","undoui_createClass","_addButton","undo_default","redo_default","Icon","undo_typeof","undo_defineProperties","undo_possibleConstructorReturn","undo_assertThisInitialized","undo_getPrototypeOf","undo_setPrototypeOf","undo_Undo","Undo","undo_classCallCheck","undo_inherits","undo_createClass","essentials_typeof","essentials_defineProperties","essentials_possibleConstructorReturn","essentials_assertThisInitialized","essentials_getPrototypeOf","essentials_setPrototypeOf","essentials_Essentials","Essentials","essentials_classCallCheck","essentials_inherits","essentials_createClass","attributecommand_typeof","attributecommand_defineProperties","attributecommand_possibleConstructorReturn","attributecommand_assertThisInitialized","attributecommand_getPrototypeOf","attributecommand_setPrototypeOf","AttributeCommand","attributecommand_classCallCheck","attributecommand_inherits","attributecommand_createClass","_getValueFromFirstAllowedNode","checkAttributeInSelection","forceValue","setSelectionAttribute","boldediting_typeof","boldediting_defineProperties","boldediting_possibleConstructorReturn","boldediting_assertThisInitialized","boldediting_getPrototypeOf","boldediting_setPrototypeOf","boldediting_BoldEditing","BoldEditing","boldediting_classCallCheck","boldediting_inherits","boldediting_createClass","setAttributeProperties","isFormatting","font-weight","boldui_typeof","boldui_defineProperties","boldui_possibleConstructorReturn","boldui_assertThisInitialized","boldui_getPrototypeOf","boldui_setPrototypeOf","boldui_BoldUI","BoldUI","boldui_classCallCheck","boldui_inherits","boldui_createClass","bold_default","bold_typeof","bold_defineProperties","bold_possibleConstructorReturn","bold_assertThisInitialized","bold_getPrototypeOf","bold_setPrototypeOf","bold_Bold","Bold","bold_classCallCheck","bold_inherits","bold_createClass","italicediting_typeof","italicediting_defineProperties","italicediting_possibleConstructorReturn","italicediting_assertThisInitialized","italicediting_getPrototypeOf","italicediting_setPrototypeOf","italicediting_ItalicEditing","ItalicEditing","italicediting_classCallCheck","italicediting_inherits","italicediting_createClass","font-style","italicui_typeof","italicui_defineProperties","italicui_possibleConstructorReturn","italicui_assertThisInitialized","italicui_getPrototypeOf","italicui_setPrototypeOf","italicui_ItalicUI","ItalicUI","italicui_classCallCheck","italicui_inherits","italicui_createClass","italic_default","italic_typeof","italic_defineProperties","italic_possibleConstructorReturn","italic_assertThisInitialized","italic_getPrototypeOf","italic_setPrototypeOf","italic_Italic","Italic","italic_classCallCheck","italic_inherits","italic_createClass","first_first","iteratorItem","blockquotecommand_typeof","blockquotecommand_defineProperties","blockquotecommand_possibleConstructorReturn","blockquotecommand_assertThisInitialized","blockquotecommand_getPrototypeOf","blockquotecommand_setPrototypeOf","blockquotecommand_BlockQuoteCommand","BlockQuoteCommand","blockquotecommand_classCallCheck","blockquotecommand_inherits","blockquotecommand_createClass","_getValue","_checkEnabled","blocksToQuote","findQuote","checkCanBeQuoted","_applyQuote","_removeQuote","firstBlock","getRangesOfBlockGroups","groupRange","positionBefore","positionAfter","quotesToMerge","currentQuote","nextQuote","elementOrPosition","nextBlock","isBQAllowed","isBlockAllowedInBQ","blockquoteediting_typeof","blockquoteediting_defineProperties","blockquoteediting_possibleConstructorReturn","blockquoteediting_assertThisInitialized","blockquoteediting_getPrototypeOf","blockquoteediting_setPrototypeOf","blockquoteediting_BlockQuoteEditing","BlockQuoteEditing","blockquoteediting_classCallCheck","blockquoteediting_inherits","blockquoteediting_createClass","blockquoteui_typeof","blockquoteui_defineProperties","blockquoteui_possibleConstructorReturn","blockquoteui_assertThisInitialized","blockquoteui_getPrototypeOf","blockquoteui_setPrototypeOf","blockquoteui_BlockQuoteUI","BlockQuoteUI","blockquoteui_classCallCheck","blockquoteui_inherits","blockquoteui_createClass","buttonView","quote_default","blockquote_typeof","blockquote_defineProperties","blockquote_possibleConstructorReturn","blockquote_assertThisInitialized","blockquote_getPrototypeOf","blockquote_setPrototypeOf","blockquote_BlockQuote","BlockQuote","blockquote_classCallCheck","blockquote_inherits","blockquote_createClass","paragraphcommand_typeof","paragraphcommand_defineProperties","paragraphcommand_possibleConstructorReturn","paragraphcommand_assertThisInitialized","paragraphcommand_getPrototypeOf","paragraphcommand_setPrototypeOf","paragraphcommand_ParagraphCommand","ParagraphCommand","paragraphcommand_classCallCheck","paragraphcommand_inherits","paragraphcommand_createClass","checkCanBecomeParagraph","rename","paragraph_typeof","paragraph_defineProperties","paragraph_possibleConstructorReturn","paragraph_assertThisInitialized","paragraph_getPrototypeOf","paragraph_setPrototypeOf","paragraph_Paragraph","Paragraph","paragraph_classCallCheck","paragraph_inherits","paragraph_createClass","paragraphLikeElements","isParagraphable","wrapInParagraph","_autoparagraphEmptyRoots","insertElement","createContext","headingcommand_typeof","headingcommand_defineProperties","headingcommand_possibleConstructorReturn","headingcommand_assertThisInitialized","headingcommand_getPrototypeOf","headingcommand_setPrototypeOf","headingcommand_HeadingCommand","HeadingCommand","modelElements","headingcommand_classCallCheck","headingcommand_inherits","headingcommand_createClass","checkCanBecomeHeading","headingediting_typeof","headingediting_defineProperties","headingediting_possibleConstructorReturn","headingediting_assertThisInitialized","headingediting_getPrototypeOf","headingediting_setPrototypeOf","headingediting_HeadingEditing","HeadingEditing","headingediting_classCallCheck","headingediting_inherits","headingediting_createClass","option","_addDefaultH1Conversion","enterCommand","src_model_Model","src_model_classCallCheck","dropdownpanelview_typeof","dropdownpanelview_defineProperties","dropdownpanelview_possibleConstructorReturn","dropdownpanelview_assertThisInitialized","dropdownpanelview_getPrototypeOf","dropdownpanelview_setPrototypeOf","DropdownPanelView","dropdownpanelview_classCallCheck","selectstart","dropdownpanelview_inherits","dropdownpanelview_createClass","position_slicedToArray","position_arrayWithHoles","position_iterableToArrayLimit","position_nonIterableRest","getOptimalPosition","positions","limiter","fitInViewport","bestPosition","positionedElementAncestor","getPositionedAncestor","elementRect","bestPositionRect","bestPositionName","maxLimiterIntersectArea","maxViewportIntersectArea","elementRectArea","limiterIntersectArea","viewportIntersectArea","_getPosition4","getPosition","positionName","positionRect","limiterViewportIntersectRect","getIntersectionArea","setBestPosition","getBestPosition","getVisible","_getPosition2","_getAbsoluteRectCoord","getAbsoluteRectCoordinates","ancestorPosition","ancestorBorderWidths","_position","moveTo","dropdownview_typeof","dropdownview_defineProperties","dropdownview_possibleConstructorReturn","dropdownview_assertThisInitialized","dropdownview_get","dropdownview_getPrototypeOf","dropdownview_superPropBase","dropdownview_setPrototypeOf","dropdownview_DropdownView","DropdownView","panelView","dropdownview_classCallCheck","dropdownview_inherits","dropdownview_createClass","isOpen","panelPosition","defaultPanelPositions","southEast","southWest","northEast","northWest","closeDropdown","buttonRect","dropdownbuttonview_typeof","dropdownbuttonview_defineProperties","dropdownbuttonview_assertThisInitialized","dropdownbuttonview_get","dropdownbuttonview_getPrototypeOf","dropdownbuttonview_superPropBase","dropdownbuttonview_setPrototypeOf","dropdownbuttonview_DropdownButtonView","_ButtonView","DropdownButtonView","dropdownbuttonview_classCallCheck","dropdownbuttonview_possibleConstructorReturn","arrowView","_createArrowView","aria-haspopup","dropdownbuttonview_inherits","dropdownbuttonview_createClass","dropdown_arrow_default","listview_typeof","listview_defineProperties","listview_possibleConstructorReturn","listview_assertThisInitialized","listview_get","listview_getPrototypeOf","listview_superPropBase","listview_setPrototypeOf","listview_ListView","ListView","listview_classCallCheck","listview_inherits","listview_createClass","listitemview_typeof","listitemview_defineProperties","listitemview_possibleConstructorReturn","listitemview_assertThisInitialized","listitemview_getPrototypeOf","listitemview_setPrototypeOf","ListItemView","listitemview_classCallCheck","listitemview_inherits","listitemview_createClass","listseparatorview_typeof","listseparatorview_possibleConstructorReturn","listseparatorview_assertThisInitialized","listseparatorview_getPrototypeOf","listseparatorview_setPrototypeOf","ListSeparatorView","listseparatorview_classCallCheck","listseparatorview_inherits","switchbuttonview_typeof","switchbuttonview_defineProperties","switchbuttonview_possibleConstructorReturn","switchbuttonview_assertThisInitialized","switchbuttonview_get","switchbuttonview_getPrototypeOf","switchbuttonview_superPropBase","switchbuttonview_setPrototypeOf","switchbuttonview_SwitchButtonView","SwitchButtonView","switchbuttonview_classCallCheck","toggleSwitchView","_createToggleView","switchbuttonview_inherits","switchbuttonview_createClass","utils_toConsumableArray","utils_arrayWithoutHoles","utils_iterableToArray","utils_nonIterableSpread","createDropdown","dropdownView","activator","contextElements","clickOutsideHandler","closeDropdownOnBlur","closeDropdownOnExecute","focusDropdownContentsOnArrows","addDefaultBehavior","headingui_typeof","headingui_defineProperties","headingui_possibleConstructorReturn","headingui_assertThisInitialized","headingui_getPrototypeOf","headingui_setPrototypeOf","headingui_HeadingUI","HeadingUI","headingui_classCallCheck","headingui_inherits","headingui_createClass","localizedTitles","Heading 1","Heading 2","Heading 3","Heading 4","Heading 5","Heading 6","getLocalizedOptions","defaultTitle","dropdownTooltip","titles","itemDefinitions","headingCommand","paragraphCommand","withText","commandValue","listView","_buttonView","listItemView","addListToDropdown","isOn","areEnabled","para","whichModel","heading_typeof","heading_defineProperties","heading_possibleConstructorReturn","heading_assertThisInitialized","heading_getPrototypeOf","heading_setPrototypeOf","heading_Heading","Heading","heading_classCallCheck","heading_inherits","heading_createClass","listcommand_typeof","listcommand_defineProperties","listcommand_possibleConstructorReturn","listcommand_assertThisInitialized","listcommand_getPrototypeOf","listcommand_setPrototypeOf","listcommand_ListCommand","ListCommand","listcommand_classCallCheck","listcommand_inherits","listcommand_createClass","checkCanBecomeListItem","turnOff","currentIndent","indent","newIndent","listIndent","lowestIndent","_item","_fixType","setAttributes","listType","listItem","startingItem","indentcommand_typeof","indentcommand_defineProperties","indentcommand_possibleConstructorReturn","indentcommand_assertThisInitialized","indentcommand_getPrototypeOf","indentcommand_setPrototypeOf","indentcommand_IndentCommand","IndentCommand","indentDirection","indentcommand_classCallCheck","_indentBy","indentcommand_inherits","indentcommand_createClass","itemsToChange","lastItem","getListItemFillerOffset","hasOnlyLists","converters_slicedToArray","converters_arrayWithHoles","converters_iterableToArrayLimit","converters_nonIterableRest","converters_toConsumableArray","converters_arrayWithoutHoles","converters_iterableToArray","converters_nonIterableSpread","modelViewInsertion","injectViewList","createViewListItemElement","viewList","generateLiInUl","modelViewRemove","breakContainer","viewListPrev","mergeViewLists","hoistNestedLists","modelViewChangeType","listName","modelViewChangeIndent","modelViewSplitOnInsert","removeStart","removeEnd","previousList","mergePos","modelViewMergeAfter","viewItemPrev","viewItemNext","viewModelConverter","conversionStore","listItemModel","convertedChild","wasSplit","findNextListItem","viewToModelListItemChildrenConverter","cleanList","cleanListItem","foundList","firstNode","modelToViewPosition","topmostViewList","modelIndentPasteFixer","refItem","indentChange","getSiblingListItem","sameIndent","smallerIndent","itemIndent","firstList","secondList","mergeContainers","injectedItem","injectedList","prevItem","positionAfterUiElements","prevView","breakPosition","nextViewList","lastSubChild","modelChild","nextIndent","modelRemoveStartPosition","viewRemoveStartPosition","viewRemovedItem","prevModelItem","foo","prevIndent","prevViewList","_arr2","listediting_typeof","listediting_defineProperties","listediting_possibleConstructorReturn","listediting_assertThisInitialized","listediting_getPrototypeOf","listediting_setPrototypeOf","listediting_ListEditing","ListEditing","listediting_classCallCheck","listediting_inherits","listediting_createClass","itemToListHead","applied","_addListToFix","listHead","_fixListIndents","_fixListTypes","maxIndent","fixBy","typesStack","modelChangePostFixer","registerViewToModelLength","getViewListItemLength","_modelNode","modelLength","modelNode","_modelNode2","_modelLength","viewToModelPosition","getCommandExecuter","outdent","registerChildCommand","listui_typeof","listui_defineProperties","listui_possibleConstructorReturn","listui_assertThisInitialized","listui_getPrototypeOf","listui_setPrototypeOf","listui_ListUI","ListUI","listui_classCallCheck","listui_inherits","listui_createClass","numberedlist_default","bulletedlist_default","list_typeof","list_defineProperties","list_possibleConstructorReturn","list_assertThisInitialized","list_getPrototypeOf","list_setPrototypeOf","list_List","List","list_classCallCheck","list_inherits","list_createClass","marked_renderer_Renderer","renderer_escape","cssClass","renderer_unescape","gfmdataprocessor_defineProperties","gfmdataprocessor_GFMDataProcessor","GFMDataProcessor","gfmdataprocessor_classCallCheck","_htmlDP","gfmdataprocessor_createClass","marked_default","to_markdown_default","ClassicEditorBase"],"mappings":"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","file":"ckeditor.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ClassicEditor\"] = factory();\n\telse\n\t\troot[\"ClassicEditor\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 25);\n","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/ckeditorerror\n */\n\n/**\n * URL to the documentation with error codes.\n */\nexport var DOCUMENTATION_URL = 'https://ckeditor.com/docs/ckeditor5/latest/framework/guides/support/error-codes.html';\n/**\n * The CKEditor error class.\n *\n * All errors will be shortened during the minification process in order to reduce the code size.\n * Therefore, all error messages should be documented in the same way as those in {@link module:utils/log}.\n *\n * Read more in the {@link module:utils/log} module.\n *\n * @extends Error\n */\n\nvar CKEditorError =\n/*#__PURE__*/\nfunction (_Error) {\n  _inherits(CKEditorError, _Error);\n\n  /**\n   * Creates an instance of the CKEditorError class.\n   *\n   * Read more about error logging in the {@link module:utils/log} module.\n   *\n   * @param {String} message The error message in an `error-name: Error message.` format.\n   * During the minification process the \"Error message\" part will be removed to limit the code size\n   * and a link to this error documentation will be added to the `message`.\n   * @param {Object|null} context A context of the error by which the {@link module:watchdog/watchdog~Watchdog watchdog}\n   * is able to determine which editor crashed. It should be an editor instance or a property connected to it. It can be also\n   * a `null` value if the editor should not be restarted in case of the error (e.g. during the editor initialization).\n   * The error context should be checked using the `areConnectedThroughProperties( editor, context )` utility\n   * to check if the object works as the context.\n   * @param {Object} [data] Additional data describing the error. A stringified version of this object\n   * will be appended to the error message, so the data are quickly visible in the console. The original\n   * data object will also be later available under the {@link #data} property.\n   */\n  function CKEditorError(message, context, data) {\n    var _this;\n\n    _classCallCheck(this, CKEditorError);\n\n    message = attachLinkToDocumentation(message);\n\n    if (data) {\n      message += ' ' + JSON.stringify(data);\n    }\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CKEditorError).call(this, message));\n    /**\n     * @type {String}\n     */\n\n    _this.name = 'CKEditorError';\n    /**\n     * A context of the error by which the Watchdog is able to determine which editor crashed.\n     *\n     * @type {Object|null}\n     */\n\n    _this.context = context;\n    /**\n     * The additional error data passed to the constructor. Undefined if none was passed.\n     *\n     * @type {Object|undefined}\n     */\n\n    _this.data = data;\n    return _this;\n  }\n  /**\n   * Checks if the error is of the `CKEditorError` type.\n   */\n\n\n  _createClass(CKEditorError, [{\n    key: \"is\",\n    value: function is(type) {\n      return type === 'CKEditorError';\n    }\n  }]);\n\n  return CKEditorError;\n}(_wrapNativeSuper(Error));\n/**\n * Attaches link to the documentation at the end of the error message.\n *\n * @param {String} message Message to be logged.\n * @returns {String}\n */\n\n\nexport { CKEditorError as default };\nexport function attachLinkToDocumentation(message) {\n  var matchedErrorName = message.match(/^([^:]+):/);\n\n  if (!matchedErrorName) {\n    return message;\n  }\n\n  return message + \" Read more: \".concat(DOCUMENTATION_URL, \"#error-\").concat(matchedErrorName[1], \"\\n\");\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* global console */\n\n/**\n * @module utils/log\n */\nimport { attachLinkToDocumentation } from './ckeditorerror';\n/**\n * The logging module.\n *\n * This object features two functions that should be used across CKEditor code base to log errors and warnings.\n * Despite being an overridable interface for native `console.*` this module serves also the goal to limit the\n * code size of a minified CKEditor package. During minification process the messages will be shortened and\n * links to their documentation will be logged to the console.\n *\n * All errors and warning should be documented in the following way:\n *\n *\t\t/**\n *\t\t * Error thrown when a plugin cannot be loaded due to JavaScript errors, lack of plugins with a given name, etc.\n *\t\t *\n *\t\t * @error plugin-load\n *\t\t * @param pluginName The name of the plugin that could not be loaded.\n *\t\t * @param moduleName The name of the module which tried to load this plugin.\n *\t\t * /\n *\t\tlog.error( 'plugin-load: It was not possible to load the \"{$pluginName}\" plugin in module \"{$moduleName}', {\n *\t\t\tpluginName: 'foo',\n *\t\t\tmoduleName: 'bar'\n *\t\t} );\n *\n * ### Warning vs Error vs Throw\n *\n * * Whenever a potentially incorrect situation occurs, which does not directly lead to an incorrect behavior,\n * log a warning.\n * * Whenever an incorrect situation occurs, but the app may continue working (although perhaps incorrectly),\n * log an error.\n * * Whenever it's really bad and it does not make sense to continue working, throw a {@link module:utils/ckeditorerror~CKEditorError}.\n *\n * @namespace\n */\n\nvar log = {\n  /**\n   * Logs an error to the console.\n   *\n   * Read more about error logging in the {@link module:utils/log} module.\n   *\n   * @param {String} message The error message in an `error-name: Error message.` format.\n   * During the minification process the \"Error message\" part will be removed to limit the code size\n   * and a link to this error documentation will be logged to the console.\n   * @param {Object} [data] Additional data describing the error.\n   */\n  error: function error(message, data) {\n    console.error(attachLinkToDocumentation(message), data);\n  },\n\n  /**\n   * Logs a warning to the console.\n   *\n   * Read more about error logging in the {@link module:utils/log} module.\n   *\n   * @param {String} message The warning message in a `warning-name: Warning message.` format.\n   * During the minification process the \"Warning message\" part will be removed to limit the code size\n   * and a link to this error documentation will be logged to the console.\n   * @param {Object} [data] Additional data describing the warning.\n   */\n  warn: function warn(message, data) {\n    console.warn(attachLinkToDocumentation(message), data);\n  }\n};\nexport default log;","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (typeof __webpack_nonce__ === 'undefined') {\n\t\treturn null;\n\t}\n\n\treturn __webpack_nonce__;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nexport default nodeUtil;\n","import root from './_root.js';\nimport stubFalse from './stubFalse.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nexport default isBuffer;\n","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/version\n */\n\n/* globals window, global */\nimport log from './log';\nimport { version } from 'ckeditor5/package.json';\nvar windowOrGlobal = (typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === 'object' ? window : global;\n\nif (windowOrGlobal.CKEDITOR_VERSION) {\n  /**\n   * This error is thrown when due to a mistake in how CKEditor 5 was installed or initialized, some\n   * of its modules were duplicated (evaluated and executed twice). Module duplication leads to inevitable runtime\n   * errors.\n   *\n   * There are many situations in which some modules can be loaded twice. In the worst case scenario,\n   * you may need to check your project for each of these issues and fix them all.\n   *\n   * # Trying to add a plugin to an existing build\n   *\n   * If you import an existing CKEditor 5 build and a plugin like this:\n   *\n   *\t\timport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n   *\t\timport Highlight from '@ckeditor/ckeditor5-highlight/src/highlight';\n   *\n   * Then your project loads some CKEditor 5 packages twice. How does it happen?\n   *\n   * The build package contains a file which is already compiled with webpack. This means\n   * that it contains all the necessary code from e.g. `@ckeditor/ckeditor5-engine` and `@ckeditor/ckeditor5-utils`.\n   *\n   * However, the `Highlight` plugin imports some of the modules from these packages, too. If you ask webpack to\n   * build such a project, you will end up with the modules being included (and run) twice &mdash; first, because they are\n   * included inside the build package, and second, because they are required by the `Highlight` plugin.\n   *\n   * Therefore, **you must never add plugins to an existing build** unless your plugin has no dependencies.\n   *\n   * Adding plugins to a build is done by taking the source version of this build (so, before it was built with webpack)\n   * and adding plugins there. In this situation, webpack will know that it only needs to load each plugin once.\n   *\n   * Read more in the {@glink builds/guides/integration/installing-plugins \"Installing plugins\"} guide.\n   *\n   * # Confused an editor build with an editor implementation\n   *\n   * This scenario is very similar to the previous one, but has a different origin.\n   *\n   * Let's assume that you wanted to use CKEditor 5 from source, as explained in the\n   * {@glink builds/guides/integration/advanced-setup#scenario-2-building-from-source \"Building from source\"} section\n   * or in the {@glink framework/guides/quick-start \"Quick start\"} guide of CKEditor 5 Framework.\n   *\n   * The correct way to do so is to import an editor and plugins and run them together like this:\n   *\n   *\t\timport ClassicEditor from '@ckeditor/ckeditor5-editor-classic/src/classiceditor';\n   *\t\timport Essentials from '@ckeditor/ckeditor5-essentials/src/essentials';\n   *\t\timport Paragraph from '@ckeditor/ckeditor5-paragraph/src/paragraph';\n   *\t\timport Bold from '@ckeditor/ckeditor5-basic-styles/src/bold';\n   *\t\timport Italic from '@ckeditor/ckeditor5-basic-styles/src/italic';\n   *\n   *\t\tClassicEditor\n   *\t\t\t.create( document.querySelector( '#editor' ), {\n   *\t\t\t\tplugins: [ Essentials, Paragraph, Bold, Italic ],\n   *\t\t\t\ttoolbar: [ 'bold', 'italic' ]\n   *\t\t\t} )\n   *\t\t\t.then( editor => {\n   *\t\t\t\tconsole.log( 'Editor was initialized', editor );\n   *\t\t\t} )\n   *\t\t\t.catch( error => {\n   *\t\t\t\tconsole.error( error.stack );\n   *\t\t\t} );\n   *\n   * However, you might have mistakenly imported a build instead of the source `ClassicEditor`. In this case\n   * your imports will look like this:\n   *\n   *\t\timport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n   *\t\timport Essentials from '@ckeditor/ckeditor5-essentials/src/essentials';\n   *\t\timport Paragraph from '@ckeditor/ckeditor5-paragraph/src/paragraph';\n   *\t\timport Bold from '@ckeditor/ckeditor5-basic-styles/src/bold';\n   *\t\timport Italic from '@ckeditor/ckeditor5-basic-styles/src/italic';\n   *\n   * This creates the same situation as in the previous section because you use a build together with source plugins.\n   *\n   * Remember: `@ckeditor/ckeditor5-build-*` packages contain editor builds and `@ckeditor/ckeditor5-editor-*` contain source editors.\n   *\n   * # Loading two or more builds on one page\n   *\n   * If you use CKEditor 5 builds, you might have loaded two (or more) `ckeditor.js` files on one web page.\n   * Check your web page for duplicated `<script>` elements or make sure your page builder/bundler includes CKEditor only once.\n   *\n   * If you want to use two different types of editors at once, see the\n   * {@glink builds/guides/integration/advanced-setup#scenario-3-using-two-different-editors \"Using two different editors\"}\n   * section.\n   *\n   * # Using outdated packages\n   *\n   * Building CKEditor 5 from source requires using multiple npm packages. These packages have their dependencies\n   * to other packages. If you use the latest version of, for example, `@ckeditor/ckeditor5-editor-classic` with\n   * an outdated version of `@ckeditor/ckeditor5-image`, npm or yarn will need to install two different versions of\n   * `@ckeditor/ckeditor5-core` because `@ckeditor/ckeditor5-editor-classic` and `@ckeditor/ckeditor5-image` may require\n   * different versions of the core package.\n   *\n   * The solution to this issue is to update all packages to their latest version. We recommend\n   * using tools like [`node-check-updates`](https://www.npmjs.com/package/npm-check-updates) which simplify this process.\n   *\n   * # Conflicting version of dependencies\n   *\n   * This is a special case of the previous scenario. If you use CKEditor 5 with some third-party plugins,\n   * it may happen that even if you use the latest versions of the official packages and the latest version of\n   * these third-party packages, there will be a conflict between some of their dependencies.\n   *\n   * Such a problem can be resolved by either downgrading CKEditor 5 packages (which we do not recommend) or\n   * asking the author of the third-party package to upgrade its depdendencies (or forking their project and doing this yourself).\n   *\n   * # Packages were duplicated in `node_modules`\n   *\n   * In some situations, especially when calling `npm install` multiple times, it may happen\n   * that npm will not correctly \"deduplicate\" packages.\n   *\n   * Normally, npm deduplicates all packages so, for example, `@ckeditor/ckeditor5-core` is installed only once in `node_modules/`.\n   * However, it is known to fail to do so from time to time.\n   *\n   * We recommend checking if any of the steps listed below help:\n   *\n   * * `rm -rf node_modules && npm install` to make sure you have a clean `node_modules/` directory. This step\n   * is known to help in most cases.\n   * * If you use `yarn.lock` or `package-lock.json`, remove it before `npm install`.\n   * * Check whether all CKEditor 5 packages are up to date and reinstall them\n   * if you changed anything (`rm -rf node_modules && npm install`).\n   *\n   * If all packages are correct and compatible with each other, the steps above are known to help. If not, you may\n   * try to check with `npm ls` how many times packages like `@ckeditor/ckeditor5-core`, `@ckeditor/ckeditor5-engine` and\n   *`@ckeditor/ckeditor5-utils` are installed. If more than once, verify which package causes that.\n   *\n   * @error ckeditor-duplicated-modules\n   */\n  log.error('ckeditor-duplicated-modules: Some CKEditor 5 modules are duplicated.');\n} else {\n  windowOrGlobal.CKEDITOR_VERSION = version;\n}","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","\nvar content = require(\"!!../../../postcss-loader/src/index.js??ref--6-1!./heading.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"singleton\":true,\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../postcss-loader/src/index.js??ref--6-1!./heading.css\", function() {\n\t\tvar newContent = require(\"!!../../../postcss-loader/src/index.js??ref--6-1!./heading.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nexport default stubFalse;\n","import root from './_root.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nexport default cloneBuffer;\n","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M5.042 9.367l2.189 1.837a.75.75 0 0 1-.965 1.149l-3.788-3.18a.747.747 0 0 1-.21-.284.75.75 0 0 1 .17-.945L6.23 4.762a.75.75 0 1 1 .964 1.15L4.863 7.866h8.917A.75.75 0 0 1 14 7.9a4 4 0 1 1-1.477 7.718l.344-1.489a2.5 2.5 0 1 0 1.094-4.73l.008-.032H5.042z\\\"/></svg>\"","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M14.958 9.367l-2.189 1.837a.75.75 0 0 0 .965 1.149l3.788-3.18a.747.747 0 0 0 .21-.284.75.75 0 0 0-.17-.945L13.77 4.762a.75.75 0 1 0-.964 1.15l2.331 1.955H6.22A.75.75 0 0 0 6 7.9a4 4 0 1 0 1.477 7.718l-.344-1.489A2.5 2.5 0 1 1 6.039 9.4l-.008-.032h8.927z\\\"/></svg>\"","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M10.187 17H5.773c-.637 0-1.092-.138-1.364-.415-.273-.277-.409-.718-.409-1.323V4.738c0-.617.14-1.062.419-1.332.279-.27.73-.406 1.354-.406h4.68c.69 0 1.288.041 1.793.124.506.083.96.242 1.36.478.341.197.644.447.906.75a3.262 3.262 0 0 1 .808 2.162c0 1.401-.722 2.426-2.167 3.075C15.05 10.175 16 11.315 16 13.01a3.756 3.756 0 0 1-2.296 3.504 6.1 6.1 0 0 1-1.517.377c-.571.073-1.238.11-2 .11zm-.217-6.217H7v4.087h3.069c1.977 0 2.965-.69 2.965-2.072 0-.707-.256-1.22-.768-1.537-.512-.319-1.277-.478-2.296-.478zM7 5.13v3.619h2.606c.729 0 1.292-.067 1.69-.2a1.6 1.6 0 0 0 .91-.765c.165-.267.247-.566.247-.897 0-.707-.26-1.176-.778-1.409-.519-.232-1.31-.348-2.375-.348H7z\\\"/></svg>\"","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M9.586 14.633l.021.004c-.036.335.095.655.393.962.082.083.173.15.274.201h1.474a.6.6 0 1 1 0 1.2H5.304a.6.6 0 0 1 0-1.2h1.15c.474-.07.809-.182 1.005-.334.157-.122.291-.32.404-.597l2.416-9.55a1.053 1.053 0 0 0-.281-.823 1.12 1.12 0 0 0-.442-.296H8.15a.6.6 0 0 1 0-1.2h6.443a.6.6 0 1 1 0 1.2h-1.195c-.376.056-.65.155-.823.296-.215.175-.423.439-.623.79l-2.366 9.347z\\\"/></svg>\"","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M3 10.423a6.5 6.5 0 0 1 6.056-6.408l.038.67C6.448 5.423 5.354 7.663 5.22 10H9c.552 0 .5.432.5.986v4.511c0 .554-.448.503-1 .503h-5c-.552 0-.5-.449-.5-1.003v-4.574zm8 0a6.5 6.5 0 0 1 6.056-6.408l.038.67c-2.646.739-3.74 2.979-3.873 5.315H17c.552 0 .5.432.5.986v4.511c0 .554-.448.503-1 .503h-5c-.552 0-.5-.449-.5-1.003v-4.574z\\\"/></svg>\"","module.exports = \"<svg viewBox=\\\"0 0 10 10\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M.941 4.523a.75.75 0 1 1 1.06-1.06l3.006 3.005 3.005-3.005a.75.75 0 1 1 1.06 1.06l-3.549 3.55a.75.75 0 0 1-1.168-.136L.941 4.523z\\\"/></svg>\"","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M7 5.75c0 .414.336.75.75.75h9.5a.75.75 0 1 0 0-1.5h-9.5a.75.75 0 0 0-.75.75zM3.5 3v5H2V3.7H1v-1h2.5V3zM.343 17.857l2.59-3.257H2.92a.6.6 0 1 0-1.04 0H.302a2 2 0 1 1 3.995 0h-.001c-.048.405-.16.734-.333.988-.175.254-.59.692-1.244 1.312H4.3v1h-4l.043-.043zM7 14.75a.75.75 0 0 1 .75-.75h9.5a.75.75 0 1 1 0 1.5h-9.5a.75.75 0 0 1-.75-.75z\\\"/></svg>\"","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M7 5.75c0 .414.336.75.75.75h9.5a.75.75 0 1 0 0-1.5h-9.5a.75.75 0 0 0-.75.75zm-6 0C1 4.784 1.777 4 2.75 4c.966 0 1.75.777 1.75 1.75 0 .966-.777 1.75-1.75 1.75C1.784 7.5 1 6.723 1 5.75zm6 9c0 .414.336.75.75.75h9.5a.75.75 0 1 0 0-1.5h-9.5a.75.75 0 0 0-.75.75zm-6 0c0-.966.777-1.75 1.75-1.75.966 0 1.75.777 1.75 1.75 0 .966-.777 1.75-1.75 1.75-.966 0-1.75-.777-1.75-1.75z\\\"/></svg>\"","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * marked - a markdown parser\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/chjj/marked\n */\n;\n(function () {\n  /**\n   * Block-Level Grammar\n   */\n  var block = {\n    newline: /^\\n+/,\n    code: /^( {4}[^\\n]+\\n*)+/,\n    fences: noop,\n    hr: /^( *[-*_]){3,} *(?:\\n+|$)/,\n    heading: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,\n    nptable: noop,\n    lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n    blockquote: /^( *>[^\\n]+(\\n(?!def)[^\\n]+)*\\n*)+/,\n    list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n    html: /^ *(?:comment *(?:\\n|\\s*$)|closed *(?:\\n{2,}|\\s*$)|closing *(?:\\n{2,}|\\s*$))/,\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +[\"(]([^\\n]+)[\")])? *(?:\\n+|$)/,\n    table: noop,\n    paragraph: /^((?:[^\\n]+\\n?(?!hr|heading|lheading|blockquote|tag|def))+)\\n*/,\n    text: /^[^\\n]+/\n  };\n  block.bullet = /(?:[*+-]|\\d+\\.)/;\n  block.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\n  block.item = replace(block.item, 'gm')(/bull/g, block.bullet)();\n  block.list = replace(block.list)(/bull/g, block.bullet)('hr', '\\\\n+(?=\\\\1?(?:[-*_] *){3,}(?:\\\\n+|$))')('def', '\\\\n+(?=' + block.def.source + ')')();\n  block.blockquote = replace(block.blockquote)('def', block.def)();\n  block._tag = '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code' + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo' + '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:/|[^\\\\w\\\\s@]*@)\\\\b';\n  block.html = replace(block.html)('comment', /<!--[\\s\\S]*?-->/)('closed', /<(tag)[\\s\\S]+?<\\/\\1>/)('closing', /<tag(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/)(/tag/g, block._tag)();\n  block.paragraph = replace(block.paragraph)('hr', block.hr)('heading', block.heading)('lheading', block.lheading)('blockquote', block.blockquote)('tag', '<' + block._tag)('def', block.def)();\n  /**\n   * Normal Block Grammar\n   */\n\n  block.normal = merge({}, block);\n  /**\n   * GFM Block Grammar\n   */\n\n  block.gfm = merge({}, block.normal, {\n    fences: /^ *(`{3,}|~{3,})[ \\.]*(\\S+)? *\\n([\\s\\S]*?)\\s*\\1 *(?:\\n+|$)/,\n    paragraph: /^/,\n    heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n  });\n  block.gfm.paragraph = replace(block.paragraph)('(?!', '(?!' + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|' + block.list.source.replace('\\\\1', '\\\\3') + '|')();\n  /**\n   * GFM + Tables Block Grammar\n   */\n\n  block.tables = merge({}, block.gfm, {\n    nptable: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\n    table: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/\n  });\n  /**\n   * Block Lexer\n   */\n\n  function Lexer(options) {\n    this.tokens = [];\n    this.tokens.links = {};\n    this.options = options || marked.defaults;\n    this.rules = block.normal;\n\n    if (this.options.gfm) {\n      if (this.options.tables) {\n        this.rules = block.tables;\n      } else {\n        this.rules = block.gfm;\n      }\n    }\n  }\n  /**\n   * Expose Block Rules\n   */\n\n\n  Lexer.rules = block;\n  /**\n   * Static Lex Method\n   */\n\n  Lexer.lex = function (src, options) {\n    var lexer = new Lexer(options);\n    return lexer.lex(src);\n  };\n  /**\n   * Preprocessing\n   */\n\n\n  Lexer.prototype.lex = function (src) {\n    src = src.replace(/\\r\\n|\\r/g, '\\n').replace(/\\t/g, '    ').replace(/\\u00a0/g, ' ').replace(/\\u2424/g, '\\n');\n    return this.token(src, true);\n  };\n  /**\n   * Lexing\n   */\n\n\n  Lexer.prototype.token = function (src, top, bq) {\n    var src = src.replace(/^ +$/gm, ''),\n        next,\n        loose,\n        cap,\n        bull,\n        b,\n        item,\n        space,\n        i,\n        l;\n\n    while (src) {\n      // newline\n      if (cap = this.rules.newline.exec(src)) {\n        src = src.substring(cap[0].length);\n\n        if (cap[0].length > 1) {\n          this.tokens.push({\n            type: 'space'\n          });\n        }\n      } // code\n\n\n      if (cap = this.rules.code.exec(src)) {\n        src = src.substring(cap[0].length);\n        cap = cap[0].replace(/^ {4}/gm, '');\n        this.tokens.push({\n          type: 'code',\n          text: !this.options.pedantic ? cap.replace(/\\n+$/, '') : cap\n        });\n        continue;\n      } // fences (gfm)\n\n\n      if (cap = this.rules.fences.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'code',\n          lang: cap[2],\n          text: cap[3] || ''\n        });\n        continue;\n      } // heading\n\n\n      if (cap = this.rules.heading.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'heading',\n          depth: cap[1].length,\n          text: cap[2]\n        });\n        continue;\n      } // table no leading pipe (gfm)\n\n\n      if (top && (cap = this.rules.nptable.exec(src))) {\n        src = src.substring(cap[0].length);\n        item = {\n          type: 'table',\n          header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3].replace(/\\n$/, '').split('\\n')\n        };\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = item.cells[i].split(/ *\\| */);\n        }\n\n        this.tokens.push(item);\n        continue;\n      } // lheading\n\n\n      if (cap = this.rules.lheading.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'heading',\n          depth: cap[2] === '=' ? 1 : 2,\n          text: cap[1]\n        });\n        continue;\n      } // hr\n\n\n      if (cap = this.rules.hr.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'hr'\n        });\n        continue;\n      } // blockquote\n\n\n      if (cap = this.rules.blockquote.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'blockquote_start'\n        });\n        cap = cap[0].replace(/^ *> ?/gm, ''); // Pass `top` to keep the current\n        // \"toplevel\" state. This is exactly\n        // how markdown.pl works.\n\n        this.token(cap, top, true);\n        this.tokens.push({\n          type: 'blockquote_end'\n        });\n        continue;\n      } // list\n\n\n      if (cap = this.rules.list.exec(src)) {\n        src = src.substring(cap[0].length);\n        bull = cap[2];\n        this.tokens.push({\n          type: 'list_start',\n          ordered: bull.length > 1\n        }); // Get each top-level item.\n\n        cap = cap[0].match(this.rules.item);\n        next = false;\n        l = cap.length;\n        i = 0;\n\n        for (; i < l; i++) {\n          item = cap[i]; // Remove the list item's bullet\n          // so it is seen as the next token.\n\n          space = item.length;\n          item = item.replace(/^ *([*+-]|\\d+\\.) +/, ''); // Outdent whatever the\n          // list item contains. Hacky.\n\n          if (~item.indexOf('\\n ')) {\n            space -= item.length;\n            item = !this.options.pedantic ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '') : item.replace(/^ {1,4}/gm, '');\n          } // Determine whether the next list item belongs here.\n          // Backpedal if it does not belong in this list.\n\n\n          if (this.options.smartLists && i !== l - 1) {\n            b = block.bullet.exec(cap[i + 1])[0];\n\n            if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n              src = cap.slice(i + 1).join('\\n') + src;\n              i = l - 1;\n            }\n          } // Determine whether item is loose or not.\n          // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n          // for discount behavior.\n\n\n          loose = next || /\\n\\n(?!\\s*$)/.test(item);\n\n          if (i !== l - 1) {\n            next = item.charAt(item.length - 1) === '\\n';\n            if (!loose) loose = next;\n          }\n\n          this.tokens.push({\n            type: loose ? 'loose_item_start' : 'list_item_start'\n          }); // Recurse.\n\n          this.token(item, false, bq);\n          this.tokens.push({\n            type: 'list_item_end'\n          });\n        }\n\n        this.tokens.push({\n          type: 'list_end'\n        });\n        continue;\n      } // html\n\n\n      if (cap = this.rules.html.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: this.options.sanitize ? 'paragraph' : 'html',\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: cap[0]\n        });\n        continue;\n      } // def\n\n\n      if (!bq && top && (cap = this.rules.def.exec(src))) {\n        src = src.substring(cap[0].length);\n        this.tokens.links[cap[1].toLowerCase()] = {\n          href: cap[2],\n          title: cap[3]\n        };\n        continue;\n      } // table (gfm)\n\n\n      if (top && (cap = this.rules.table.exec(src))) {\n        src = src.substring(cap[0].length);\n        item = {\n          type: 'table',\n          header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n')\n        };\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = item.cells[i].replace(/^ *\\| *| *\\| *$/g, '').split(/ *\\| */);\n        }\n\n        this.tokens.push(item);\n        continue;\n      } // top-level paragraph\n\n\n      if (top && (cap = this.rules.paragraph.exec(src))) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'paragraph',\n          text: cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1]\n        });\n        continue;\n      } // text\n\n\n      if (cap = this.rules.text.exec(src)) {\n        // Top-level should never reach here.\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'text',\n          text: cap[0]\n        });\n        continue;\n      }\n\n      if (src) {\n        throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n      }\n    }\n\n    return this.tokens;\n  };\n  /**\n   * Inline-Level Grammar\n   */\n\n\n  var inline = {\n    escape: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\n    autolink: /^<([^ >]+(@|:\\/)[^ >]+)>/,\n    url: noop,\n    tag: /^<!--[\\s\\S]*?-->|^<\\/?\\w+(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/,\n    link: /^!?\\[(inside)\\]\\(href\\)/,\n    reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\n    nolink: /^!?\\[((?:\\[[^\\]]*\\]|[^\\[\\]])*)\\]/,\n    strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\n    em: /^\\b_((?:[^_]|__)+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\n    code: /^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/,\n    br: /^ {2,}\\n(?!\\s*$)/,\n    del: noop,\n    text: /^[\\s\\S]+?(?=[\\\\<!\\[_*`]| {2,}\\n|$)/\n  };\n  inline._inside = /(?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/;\n  inline._href = /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;\n  inline.link = replace(inline.link)('inside', inline._inside)('href', inline._href)();\n  inline.reflink = replace(inline.reflink)('inside', inline._inside)();\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline.normal = merge({}, inline);\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline.pedantic = merge({}, inline.normal, {\n    strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\n  });\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline.gfm = merge({}, inline.normal, {\n    escape: replace(inline.escape)('])', '~|])')(),\n    url: /^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/,\n    del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\n    text: replace(inline.text)(']|', '~]|')('|', '|https?://|')()\n  });\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline.breaks = merge({}, inline.gfm, {\n    br: replace(inline.br)('{2,}', '*')(),\n    text: replace(inline.gfm.text)('{2,}', '*')()\n  });\n  /**\n   * Inline Lexer & Compiler\n   */\n\n  function InlineLexer(links, options) {\n    this.options = options || marked.defaults;\n    this.links = links;\n    this.rules = inline.normal;\n    this.renderer = this.options.renderer || new Renderer();\n    this.renderer.options = this.options;\n\n    if (!this.links) {\n      throw new Error('Tokens array requires a `links` property.');\n    }\n\n    if (this.options.gfm) {\n      if (this.options.breaks) {\n        this.rules = inline.breaks;\n      } else {\n        this.rules = inline.gfm;\n      }\n    } else if (this.options.pedantic) {\n      this.rules = inline.pedantic;\n    }\n  }\n  /**\n   * Expose Inline Rules\n   */\n\n\n  InlineLexer.rules = inline;\n  /**\n   * Static Lexing/Compiling Method\n   */\n\n  InlineLexer.output = function (src, links, options) {\n    var inline = new InlineLexer(links, options);\n    return inline.output(src);\n  };\n  /**\n   * Lexing/Compiling\n   */\n\n\n  InlineLexer.prototype.output = function (src) {\n    var out = '',\n        link,\n        text,\n        href,\n        cap;\n\n    while (src) {\n      // escape\n      if (cap = this.rules.escape.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += cap[1];\n        continue;\n      } // autolink\n\n\n      if (cap = this.rules.autolink.exec(src)) {\n        src = src.substring(cap[0].length);\n\n        if (cap[2] === '@') {\n          text = cap[1].charAt(6) === ':' ? this.mangle(cap[1].substring(7)) : this.mangle(cap[1]);\n          href = this.mangle('mailto:') + text;\n        } else {\n          text = escape(cap[1]);\n          href = text;\n        }\n\n        out += this.renderer.link(href, null, text);\n        continue;\n      } // url (gfm)\n\n\n      if (!this.inLink && (cap = this.rules.url.exec(src))) {\n        src = src.substring(cap[0].length);\n        text = escape(cap[1]);\n        href = text;\n        out += this.renderer.link(href, null, text);\n        continue;\n      } // tag\n\n\n      if (cap = this.rules.tag.exec(src)) {\n        if (!this.inLink && /^<a /i.test(cap[0])) {\n          this.inLink = true;\n        } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n          this.inLink = false;\n        }\n\n        src = src.substring(cap[0].length);\n        out += this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0];\n        continue;\n      } // link\n\n\n      if (cap = this.rules.link.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.inLink = true;\n        out += this.outputLink(cap, {\n          href: cap[2],\n          title: cap[3]\n        });\n        this.inLink = false;\n        continue;\n      } // reflink, nolink\n\n\n      if ((cap = this.rules.reflink.exec(src)) || (cap = this.rules.nolink.exec(src))) {\n        src = src.substring(cap[0].length);\n        link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = this.links[link.toLowerCase()];\n\n        if (!link || !link.href) {\n          out += cap[0].charAt(0);\n          src = cap[0].substring(1) + src;\n          continue;\n        }\n\n        this.inLink = true;\n        out += this.outputLink(cap, link);\n        this.inLink = false;\n        continue;\n      } // strong\n\n\n      if (cap = this.rules.strong.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.strong(this.output(cap[2] || cap[1]));\n        continue;\n      } // em\n\n\n      if (cap = this.rules.em.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.em(this.output(cap[2] || cap[1]));\n        continue;\n      } // code\n\n\n      if (cap = this.rules.code.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.codespan(escape(cap[2], true));\n        continue;\n      } // br\n\n\n      if (cap = this.rules.br.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.br();\n        continue;\n      } // del (gfm)\n\n\n      if (cap = this.rules.del.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.del(this.output(cap[1]));\n        continue;\n      } // text\n\n\n      if (cap = this.rules.text.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.text(escape(this.smartypants(cap[0])));\n        continue;\n      }\n\n      if (src) {\n        throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n      }\n    }\n\n    return out;\n  };\n  /**\n   * Compile Link\n   */\n\n\n  InlineLexer.prototype.outputLink = function (cap, link) {\n    var href = escape(link.href),\n        title = link.title ? escape(link.title) : null;\n    return cap[0].charAt(0) !== '!' ? this.renderer.link(href, title, this.output(cap[1])) : this.renderer.image(href, title, escape(cap[1]));\n  };\n  /**\n   * Smartypants Transformations\n   */\n\n\n  InlineLexer.prototype.smartypants = function (text) {\n    if (!this.options.smartypants) return text;\n    return text // em-dashes\n    .replace(/---/g, \"\\u2014\") // en-dashes\n    .replace(/--/g, \"\\u2013\") // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\") // closing singles & apostrophes\n    .replace(/'/g, \"\\u2019\") // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\") // closing doubles\n    .replace(/\"/g, \"\\u201D\") // ellipses\n    .replace(/\\.{3}/g, \"\\u2026\");\n  };\n  /**\n   * Mangle Links\n   */\n\n\n  InlineLexer.prototype.mangle = function (text) {\n    if (!this.options.mangle) return text;\n    var out = '',\n        l = text.length,\n        i = 0,\n        ch;\n\n    for (; i < l; i++) {\n      ch = text.charCodeAt(i);\n\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  };\n  /**\n   * Renderer\n   */\n\n\n  function Renderer(options) {\n    this.options = options || {};\n  }\n\n  Renderer.prototype.code = function (code, lang, escaped) {\n    if (this.options.highlight) {\n      var out = this.options.highlight(code, lang);\n\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    if (!lang) {\n      return '<pre><code>' + (escaped ? code : escape(code, true)) + '\\n</code></pre>';\n    }\n\n    return '<pre><code class=\"' + this.options.langPrefix + escape(lang, true) + '\">' + (escaped ? code : escape(code, true)) + '\\n</code></pre>\\n';\n  };\n\n  Renderer.prototype.blockquote = function (quote) {\n    return '<blockquote>\\n' + quote + '</blockquote>\\n';\n  };\n\n  Renderer.prototype.html = function (html) {\n    return html;\n  };\n\n  Renderer.prototype.heading = function (text, level, raw) {\n    return '<h' + level + ' id=\"' + this.options.headerPrefix + raw.toLowerCase().replace(/[^\\w]+/g, '-') + '\">' + text + '</h' + level + '>\\n';\n  };\n\n  Renderer.prototype.hr = function () {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  };\n\n  Renderer.prototype.list = function (body, ordered) {\n    var type = ordered ? 'ol' : 'ul';\n    return '<' + type + '>\\n' + body + '</' + type + '>\\n';\n  };\n\n  Renderer.prototype.listitem = function (text) {\n    return '<li>' + text + '</li>\\n';\n  };\n\n  Renderer.prototype.paragraph = function (text) {\n    return '<p>' + text + '</p>\\n';\n  };\n\n  Renderer.prototype.table = function (header, body) {\n    return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + '<tbody>\\n' + body + '</tbody>\\n' + '</table>\\n';\n  };\n\n  Renderer.prototype.tablerow = function (content) {\n    return '<tr>\\n' + content + '</tr>\\n';\n  };\n\n  Renderer.prototype.tablecell = function (content, flags) {\n    var type = flags.header ? 'th' : 'td';\n    var tag = flags.align ? '<' + type + ' style=\"text-align:' + flags.align + '\">' : '<' + type + '>';\n    return tag + content + '</' + type + '>\\n';\n  }; // span level renderer\n\n\n  Renderer.prototype.strong = function (text) {\n    return '<strong>' + text + '</strong>';\n  };\n\n  Renderer.prototype.em = function (text) {\n    return '<em>' + text + '</em>';\n  };\n\n  Renderer.prototype.codespan = function (text) {\n    return '<code>' + text + '</code>';\n  };\n\n  Renderer.prototype.br = function () {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  };\n\n  Renderer.prototype.del = function (text) {\n    return '<del>' + text + '</del>';\n  };\n\n  Renderer.prototype.link = function (href, title, text) {\n    if (this.options.sanitize) {\n      try {\n        var prot = decodeURIComponent(unescape(href)).replace(/[^\\w:]/g, '').toLowerCase();\n      } catch (e) {\n        return '';\n      }\n\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0) {\n        return '';\n      }\n    }\n\n    var out = '<a href=\"' + href + '\"';\n\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n\n    out += '>' + text + '</a>';\n    return out;\n  };\n\n  Renderer.prototype.image = function (href, title, text) {\n    var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  };\n\n  Renderer.prototype.text = function (text) {\n    return text;\n  };\n  /**\n   * Parsing & Compiling\n   */\n\n\n  function Parser(options) {\n    this.tokens = [];\n    this.token = null;\n    this.options = options || marked.defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n  }\n  /**\n   * Static Parse Method\n   */\n\n\n  Parser.parse = function (src, options, renderer) {\n    var parser = new Parser(options, renderer);\n    return parser.parse(src);\n  };\n  /**\n   * Parse Loop\n   */\n\n\n  Parser.prototype.parse = function (src) {\n    this.inline = new InlineLexer(src.links, this.options, this.renderer);\n    this.tokens = src.reverse();\n    var out = '';\n\n    while (this.next()) {\n      out += this.tok();\n    }\n\n    return out;\n  };\n  /**\n   * Next Token\n   */\n\n\n  Parser.prototype.next = function () {\n    return this.token = this.tokens.pop();\n  };\n  /**\n   * Preview Next Token\n   */\n\n\n  Parser.prototype.peek = function () {\n    return this.tokens[this.tokens.length - 1] || 0;\n  };\n  /**\n   * Parse Text Tokens\n   */\n\n\n  Parser.prototype.parseText = function () {\n    var body = this.token.text;\n\n    while (this.peek().type === 'text') {\n      body += '\\n' + this.next().text;\n    }\n\n    return this.inline.output(body);\n  };\n  /**\n   * Parse Current Token\n   */\n\n\n  Parser.prototype.tok = function () {\n    switch (this.token.type) {\n      case 'space':\n        {\n          return '';\n        }\n\n      case 'hr':\n        {\n          return this.renderer.hr();\n        }\n\n      case 'heading':\n        {\n          return this.renderer.heading(this.inline.output(this.token.text), this.token.depth, this.token.text);\n        }\n\n      case 'code':\n        {\n          return this.renderer.code(this.token.text, this.token.lang, this.token.escaped);\n        }\n\n      case 'table':\n        {\n          var header = '',\n              body = '',\n              i,\n              row,\n              cell,\n              flags,\n              j; // header\n\n          cell = '';\n\n          for (i = 0; i < this.token.header.length; i++) {\n            flags = {\n              header: true,\n              align: this.token.align[i]\n            };\n            cell += this.renderer.tablecell(this.inline.output(this.token.header[i]), {\n              header: true,\n              align: this.token.align[i]\n            });\n          }\n\n          header += this.renderer.tablerow(cell);\n\n          for (i = 0; i < this.token.cells.length; i++) {\n            row = this.token.cells[i];\n            cell = '';\n\n            for (j = 0; j < row.length; j++) {\n              cell += this.renderer.tablecell(this.inline.output(row[j]), {\n                header: false,\n                align: this.token.align[j]\n              });\n            }\n\n            body += this.renderer.tablerow(cell);\n          }\n\n          return this.renderer.table(header, body);\n        }\n\n      case 'blockquote_start':\n        {\n          var body = '';\n\n          while (this.next().type !== 'blockquote_end') {\n            body += this.tok();\n          }\n\n          return this.renderer.blockquote(body);\n        }\n\n      case 'list_start':\n        {\n          var body = '',\n              ordered = this.token.ordered;\n\n          while (this.next().type !== 'list_end') {\n            body += this.tok();\n          }\n\n          return this.renderer.list(body, ordered);\n        }\n\n      case 'list_item_start':\n        {\n          var body = '';\n\n          while (this.next().type !== 'list_item_end') {\n            body += this.token.type === 'text' ? this.parseText() : this.tok();\n          }\n\n          return this.renderer.listitem(body);\n        }\n\n      case 'loose_item_start':\n        {\n          var body = '';\n\n          while (this.next().type !== 'list_item_end') {\n            body += this.tok();\n          }\n\n          return this.renderer.listitem(body);\n        }\n\n      case 'html':\n        {\n          var html = !this.token.pre && !this.options.pedantic ? this.inline.output(this.token.text) : this.token.text;\n          return this.renderer.html(html);\n        }\n\n      case 'paragraph':\n        {\n          return this.renderer.paragraph(this.inline.output(this.token.text));\n        }\n\n      case 'text':\n        {\n          return this.renderer.paragraph(this.parseText());\n        }\n    }\n  };\n  /**\n   * Helpers\n   */\n\n\n  function escape(html, encode) {\n    return html.replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n  }\n\n  function unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/g, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n\n      return '';\n    });\n  }\n\n  function replace(regex, opt) {\n    regex = regex.source;\n    opt = opt || '';\n    return function self(name, val) {\n      if (!name) return new RegExp(regex, opt);\n      val = val.source || val;\n      val = val.replace(/(^|[^\\[])\\^/g, '$1');\n      regex = regex.replace(name, val);\n      return self;\n    };\n  }\n\n  function noop() {}\n\n  noop.exec = noop;\n\n  function merge(obj) {\n    var i = 1,\n        target,\n        key;\n\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n\n    return obj;\n  }\n  /**\n   * Marked\n   */\n\n\n  function marked(src, opt, callback) {\n    if (callback || typeof opt === 'function') {\n      if (!callback) {\n        callback = opt;\n        opt = null;\n      }\n\n      opt = merge({}, marked.defaults, opt || {});\n      var highlight = opt.highlight,\n          tokens,\n          pending,\n          i = 0;\n\n      try {\n        tokens = Lexer.lex(src, opt);\n      } catch (e) {\n        return callback(e);\n      }\n\n      pending = tokens.length;\n\n      var done = function done(err) {\n        if (err) {\n          opt.highlight = highlight;\n          return callback(err);\n        }\n\n        var out;\n\n        try {\n          out = Parser.parse(tokens, opt);\n        } catch (e) {\n          err = e;\n        }\n\n        opt.highlight = highlight;\n        return err ? callback(err) : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n      if (!pending) return done();\n\n      for (; i < tokens.length; i++) {\n        (function (token) {\n          if (token.type !== 'code') {\n            return --pending || done();\n          }\n\n          return highlight(token.text, token.lang, function (err, code) {\n            if (err) return done(err);\n\n            if (code == null || code === token.text) {\n              return --pending || done();\n            }\n\n            token.text = code;\n            token.escaped = true;\n            --pending || done();\n          });\n        })(tokens[i]);\n      }\n\n      return;\n    }\n\n    try {\n      if (opt) opt = merge({}, marked.defaults, opt);\n      return Parser.parse(Lexer.lex(src, opt), opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/chjj/marked.';\n\n      if ((opt || marked.defaults).silent) {\n        return '<p>An error occured:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  }\n  /**\n   * Options\n   */\n\n\n  marked.options = marked.setOptions = function (opt) {\n    merge(marked.defaults, opt);\n    return marked;\n  };\n\n  marked.defaults = {\n    gfm: true,\n    tables: true,\n    breaks: false,\n    pedantic: false,\n    sanitize: false,\n    sanitizer: null,\n    mangle: true,\n    smartLists: false,\n    silent: false,\n    highlight: null,\n    langPrefix: 'lang-',\n    smartypants: false,\n    headerPrefix: '',\n    renderer: new Renderer(),\n    xhtml: false\n  };\n  /**\n   * Expose\n   */\n\n  marked.Parser = Parser;\n  marked.parser = Parser.parse;\n  marked.Renderer = Renderer;\n  marked.Lexer = Lexer;\n  marked.lexer = Lexer.lex;\n  marked.InlineLexer = InlineLexer;\n  marked.inlineLexer = InlineLexer.output;\n  marked.parse = marked;\n\n  if (typeof module !== 'undefined' && (typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) === 'object') {\n    module.exports = marked;\n  } else if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return marked;\n    });\n  } else {\n    this.marked = marked;\n  }\n}).call(function () {\n  return this || (typeof window !== 'undefined' ? window : global);\n}());","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n(function (f) {\n  if ((typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) === \"object\" && typeof module !== \"undefined\") {\n    module.exports = f();\n  } else if (typeof define === \"function\" && define.amd) {\n    define([], f);\n  } else {\n    var g;\n\n    if (typeof window !== \"undefined\") {\n      g = window;\n    } else if (typeof global !== \"undefined\") {\n      g = global;\n    } else if (typeof self !== \"undefined\") {\n      g = self;\n    } else {\n      g = this;\n    }\n\n    g.toMarkdown = f();\n  }\n})(function () {\n  var define, module, exports;\n  return function e(t, n, r) {\n    function s(o, u) {\n      if (!n[o]) {\n        if (!t[o]) {\n          var a = typeof require == \"function\" && require;\n          if (!u && a) return a(o, !0);\n          if (i) return i(o, !0);\n          var f = new Error(\"Cannot find module '\" + o + \"'\");\n          throw f.code = \"MODULE_NOT_FOUND\", f;\n        }\n\n        var l = n[o] = {\n          exports: {}\n        };\n        t[o][0].call(l.exports, function (e) {\n          var n = t[o][1][e];\n          return s(n ? n : e);\n        }, l, l.exports, e, t, n, r);\n      }\n\n      return n[o].exports;\n    }\n\n    var i = typeof require == \"function\" && require;\n\n    for (var o = 0; o < r.length; o++) {\n      s(r[o]);\n    }\n\n    return s;\n  }({\n    1: [function (require, module, exports) {\n      /*\n       * to-markdown - an HTML to Markdown converter\n       *\n       * Copyright 2011+, Dom Christie\n       * Licenced under the MIT licence\n       *\n       */\n      'use strict';\n\n      var toMarkdown;\n      var converters;\n\n      var mdConverters = require('./lib/md-converters');\n\n      var gfmConverters = require('./lib/gfm-converters');\n\n      var HtmlParser = require('./lib/html-parser');\n\n      var collapse = require('collapse-whitespace');\n      /*\n       * Utilities\n       */\n\n\n      var blocks = ['address', 'article', 'aside', 'audio', 'blockquote', 'body', 'canvas', 'center', 'dd', 'dir', 'div', 'dl', 'dt', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr', 'html', 'isindex', 'li', 'main', 'menu', 'nav', 'noframes', 'noscript', 'ol', 'output', 'p', 'pre', 'section', 'table', 'tbody', 'td', 'tfoot', 'th', 'thead', 'tr', 'ul'];\n\n      function isBlock(node) {\n        return blocks.indexOf(node.nodeName.toLowerCase()) !== -1;\n      }\n\n      var voids = ['area', 'base', 'br', 'col', 'command', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'meta', 'param', 'source', 'track', 'wbr'];\n\n      function isVoid(node) {\n        return voids.indexOf(node.nodeName.toLowerCase()) !== -1;\n      }\n\n      function htmlToDom(string) {\n        var tree = new HtmlParser().parseFromString(string, 'text/html');\n        collapse(tree.documentElement, isBlock);\n        return tree;\n      }\n      /*\n       * Flattens DOM tree into single array\n       */\n\n\n      function bfsOrder(node) {\n        var inqueue = [node];\n        var outqueue = [];\n        var elem;\n        var children;\n        var i;\n\n        while (inqueue.length > 0) {\n          elem = inqueue.shift();\n          outqueue.push(elem);\n          children = elem.childNodes;\n\n          for (i = 0; i < children.length; i++) {\n            if (children[i].nodeType === 1) inqueue.push(children[i]);\n          }\n        }\n\n        outqueue.shift();\n        return outqueue;\n      }\n      /*\n       * Contructs a Markdown string of replacement text for a given node\n       */\n\n\n      function getContent(node) {\n        var text = '';\n\n        for (var i = 0; i < node.childNodes.length; i++) {\n          if (node.childNodes[i].nodeType === 1) {\n            text += node.childNodes[i]._replacement;\n          } else if (node.childNodes[i].nodeType === 3) {\n            text += node.childNodes[i].data;\n          } else continue;\n        }\n\n        return text;\n      }\n      /*\n       * Returns the HTML string of an element with its contents converted\n       */\n\n\n      function outer(node, content) {\n        return node.cloneNode(false).outerHTML.replace('><', '>' + content + '<');\n      }\n\n      function canConvert(node, filter) {\n        if (typeof filter === 'string') {\n          return filter === node.nodeName.toLowerCase();\n        }\n\n        if (Array.isArray(filter)) {\n          return filter.indexOf(node.nodeName.toLowerCase()) !== -1;\n        } else if (typeof filter === 'function') {\n          return filter.call(toMarkdown, node);\n        } else {\n          throw new TypeError('`filter` needs to be a string, array, or function');\n        }\n      }\n\n      function isFlankedByWhitespace(side, node) {\n        var sibling;\n        var regExp;\n        var isFlanked;\n\n        if (side === 'left') {\n          sibling = node.previousSibling;\n          regExp = / $/;\n        } else {\n          sibling = node.nextSibling;\n          regExp = /^ /;\n        }\n\n        if (sibling) {\n          if (sibling.nodeType === 3) {\n            isFlanked = regExp.test(sibling.nodeValue);\n          } else if (sibling.nodeType === 1 && !isBlock(sibling)) {\n            isFlanked = regExp.test(sibling.textContent);\n          }\n        }\n\n        return isFlanked;\n      }\n\n      function flankingWhitespace(node) {\n        var leading = '';\n        var trailing = '';\n\n        if (!isBlock(node)) {\n          var hasLeading = /^[ \\r\\n\\t]/.test(node.innerHTML);\n          var hasTrailing = /[ \\r\\n\\t]$/.test(node.innerHTML);\n\n          if (hasLeading && !isFlankedByWhitespace('left', node)) {\n            leading = ' ';\n          }\n\n          if (hasTrailing && !isFlankedByWhitespace('right', node)) {\n            trailing = ' ';\n          }\n        }\n\n        return {\n          leading: leading,\n          trailing: trailing\n        };\n      }\n      /*\n       * Finds a Markdown converter, gets the replacement, and sets it on\n       * `_replacement`\n       */\n\n\n      function process(node) {\n        var replacement;\n        var content = getContent(node); // Remove blank nodes\n\n        if (!isVoid(node) && !/A|TH|TD/.test(node.nodeName) && /^\\s*$/i.test(content)) {\n          node._replacement = '';\n          return;\n        }\n\n        for (var i = 0; i < converters.length; i++) {\n          var converter = converters[i];\n\n          if (canConvert(node, converter.filter)) {\n            if (typeof converter.replacement !== 'function') {\n              throw new TypeError('`replacement` needs to be a function that returns a string');\n            }\n\n            var whitespace = flankingWhitespace(node);\n\n            if (whitespace.leading || whitespace.trailing) {\n              content = content.trim();\n            }\n\n            replacement = whitespace.leading + converter.replacement.call(toMarkdown, content, node) + whitespace.trailing;\n            break;\n          }\n        }\n\n        node._replacement = replacement;\n      }\n\n      toMarkdown = function toMarkdown(input, options) {\n        options = options || {};\n\n        if (typeof input !== 'string') {\n          throw new TypeError(input + ' is not a string');\n        } // Escape potential ol triggers\n\n\n        input = input.replace(/(\\d+)\\. /g, '$1\\\\. ');\n        var clone = htmlToDom(input).body;\n        var nodes = bfsOrder(clone);\n        var output;\n        converters = mdConverters.slice(0);\n\n        if (options.gfm) {\n          converters = gfmConverters.concat(converters);\n        }\n\n        if (options.converters) {\n          converters = options.converters.concat(converters);\n        } // Process through nodes in reverse (so deepest child elements are first).\n\n\n        for (var i = nodes.length - 1; i >= 0; i--) {\n          process(nodes[i]);\n        }\n\n        output = getContent(clone);\n        return output.replace(/^[\\t\\r\\n]+|[\\t\\r\\n\\s]+$/g, '').replace(/\\n\\s+\\n/g, '\\n\\n').replace(/\\n{3,}/g, '\\n\\n');\n      };\n\n      toMarkdown.isBlock = isBlock;\n      toMarkdown.isVoid = isVoid;\n      toMarkdown.outer = outer;\n      module.exports = toMarkdown;\n    }, {\n      \"./lib/gfm-converters\": 2,\n      \"./lib/html-parser\": 3,\n      \"./lib/md-converters\": 4,\n      \"collapse-whitespace\": 7\n    }],\n    2: [function (require, module, exports) {\n      'use strict';\n\n      function cell(content, node) {\n        var index = Array.prototype.indexOf.call(node.parentNode.childNodes, node);\n        var prefix = ' ';\n        if (index === 0) prefix = '| ';\n        return prefix + content + ' |';\n      }\n\n      var highlightRegEx = /highlight highlight-(\\S+)/;\n      module.exports = [{\n        filter: 'br',\n        replacement: function replacement() {\n          return '\\n';\n        }\n      }, {\n        filter: ['del', 's', 'strike'],\n        replacement: function replacement(content) {\n          return '~~' + content + '~~';\n        }\n      }, {\n        filter: function filter(node) {\n          return node.type === 'checkbox' && node.parentNode.nodeName === 'LI';\n        },\n        replacement: function replacement(content, node) {\n          return (node.checked ? '[x]' : '[ ]') + ' ';\n        }\n      }, {\n        filter: ['th', 'td'],\n        replacement: function replacement(content, node) {\n          return cell(content, node);\n        }\n      }, {\n        filter: 'tr',\n        replacement: function replacement(content, node) {\n          var borderCells = '';\n          var alignMap = {\n            left: ':--',\n            right: '--:',\n            center: ':-:'\n          };\n\n          if (node.parentNode.nodeName === 'THEAD') {\n            for (var i = 0; i < node.childNodes.length; i++) {\n              var align = node.childNodes[i].attributes.align;\n              var border = '---';\n              if (align) border = alignMap[align.value] || border;\n              borderCells += cell(border, node.childNodes[i]);\n            }\n          }\n\n          return '\\n' + content + (borderCells ? '\\n' + borderCells : '');\n        }\n      }, {\n        filter: 'table',\n        replacement: function replacement(content) {\n          return '\\n\\n' + content + '\\n\\n';\n        }\n      }, {\n        filter: ['thead', 'tbody', 'tfoot'],\n        replacement: function replacement(content) {\n          return content;\n        }\n      }, // Fenced code blocks\n      {\n        filter: function filter(node) {\n          return node.nodeName === 'PRE' && node.firstChild && node.firstChild.nodeName === 'CODE';\n        },\n        replacement: function replacement(content, node) {\n          return '\\n\\n```\\n' + node.firstChild.textContent + '\\n```\\n\\n';\n        }\n      }, // Syntax-highlighted code blocks\n      {\n        filter: function filter(node) {\n          return node.nodeName === 'PRE' && node.parentNode.nodeName === 'DIV' && highlightRegEx.test(node.parentNode.className);\n        },\n        replacement: function replacement(content, node) {\n          var language = node.parentNode.className.match(highlightRegEx)[1];\n          return '\\n\\n```' + language + '\\n' + node.textContent + '\\n```\\n\\n';\n        }\n      }, {\n        filter: function filter(node) {\n          return node.nodeName === 'DIV' && highlightRegEx.test(node.className);\n        },\n        replacement: function replacement(content) {\n          return '\\n\\n' + content + '\\n\\n';\n        }\n      }];\n    }, {}],\n    3: [function (require, module, exports) {\n      /*\n       * Set up window for Node.js\n       */\n      var _window = typeof window !== 'undefined' ? window : this;\n      /*\n       * Parsing HTML strings\n       */\n\n\n      function canParseHtmlNatively() {\n        var Parser = _window.DOMParser;\n        var canParse = false; // Adapted from https://gist.github.com/1129031\n        // Firefox/Opera/IE throw errors on unsupported types\n\n        try {\n          // WebKit returns null on unsupported types\n          if (new Parser().parseFromString('', 'text/html')) {\n            canParse = true;\n          }\n        } catch (e) {}\n\n        return canParse;\n      }\n\n      function createHtmlParser() {\n        var Parser = function Parser() {}; // For Node.js environments\n\n\n        if (typeof document === 'undefined') {\n          var jsdom = require('jsdom');\n\n          Parser.prototype.parseFromString = function (string) {\n            return jsdom.jsdom(string, {\n              plugins: {\n                FetchExternalResources: [],\n                ProcessExternalResources: false\n              }\n            });\n          };\n        } else {\n          if (!shouldUseActiveX()) {\n            Parser.prototype.parseFromString = function (string) {\n              var doc = document.implementation.createHTMLDocument('');\n              doc.open();\n              doc.write(string);\n              doc.close();\n              return doc;\n            };\n          } else {\n            Parser.prototype.parseFromString = function (string) {\n              var doc = new window.ActiveXObject('htmlfile');\n              doc.designMode = 'on'; // disable on-page scripts\n\n              doc.open();\n              doc.write(string);\n              doc.close();\n              return doc;\n            };\n          }\n        }\n\n        return Parser;\n      }\n\n      function shouldUseActiveX() {\n        var useActiveX = false;\n\n        try {\n          document.implementation.createHTMLDocument('').open();\n        } catch (e) {\n          if (window.ActiveXObject) useActiveX = true;\n        }\n\n        return useActiveX;\n      }\n\n      module.exports = canParseHtmlNatively() ? _window.DOMParser : createHtmlParser();\n    }, {\n      \"jsdom\": 6\n    }],\n    4: [function (require, module, exports) {\n      'use strict';\n\n      module.exports = [{\n        filter: 'p',\n        replacement: function replacement(content) {\n          return '\\n\\n' + content + '\\n\\n';\n        }\n      }, {\n        filter: 'br',\n        replacement: function replacement() {\n          return '  \\n';\n        }\n      }, {\n        filter: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n        replacement: function replacement(content, node) {\n          var hLevel = node.nodeName.charAt(1);\n          var hPrefix = '';\n\n          for (var i = 0; i < hLevel; i++) {\n            hPrefix += '#';\n          }\n\n          return '\\n\\n' + hPrefix + ' ' + content + '\\n\\n';\n        }\n      }, {\n        filter: 'hr',\n        replacement: function replacement() {\n          return '\\n\\n* * *\\n\\n';\n        }\n      }, {\n        filter: ['em', 'i'],\n        replacement: function replacement(content) {\n          return '_' + content + '_';\n        }\n      }, {\n        filter: ['strong', 'b'],\n        replacement: function replacement(content) {\n          return '**' + content + '**';\n        }\n      }, // Inline code\n      {\n        filter: function filter(node) {\n          var hasSiblings = node.previousSibling || node.nextSibling;\n          var isCodeBlock = node.parentNode.nodeName === 'PRE' && !hasSiblings;\n          return node.nodeName === 'CODE' && !isCodeBlock;\n        },\n        replacement: function replacement(content) {\n          return '`' + content + '`';\n        }\n      }, {\n        filter: function filter(node) {\n          return node.nodeName === 'A' && node.getAttribute('href');\n        },\n        replacement: function replacement(content, node) {\n          var titlePart = node.title ? ' \"' + node.title + '\"' : '';\n          return '[' + content + '](' + node.getAttribute('href') + titlePart + ')';\n        }\n      }, {\n        filter: 'img',\n        replacement: function replacement(content, node) {\n          var alt = node.alt || '';\n          var src = node.getAttribute('src') || '';\n          var title = node.title || '';\n          var titlePart = title ? ' \"' + title + '\"' : '';\n          return src ? '![' + alt + ']' + '(' + src + titlePart + ')' : '';\n        }\n      }, // Code blocks\n      {\n        filter: function filter(node) {\n          return node.nodeName === 'PRE' && node.firstChild.nodeName === 'CODE';\n        },\n        replacement: function replacement(content, node) {\n          return '\\n\\n    ' + node.firstChild.textContent.replace(/\\n/g, '\\n    ') + '\\n\\n';\n        }\n      }, {\n        filter: 'blockquote',\n        replacement: function replacement(content) {\n          content = content.trim();\n          content = content.replace(/\\n{3,}/g, '\\n\\n');\n          content = content.replace(/^/gm, '> ');\n          return '\\n\\n' + content + '\\n\\n';\n        }\n      }, {\n        filter: 'li',\n        replacement: function replacement(content, node) {\n          content = content.replace(/^\\s+/, '').replace(/\\n/gm, '\\n    ');\n          var prefix = '*   ';\n          var parent = node.parentNode;\n          var index = Array.prototype.indexOf.call(parent.children, node) + 1;\n          prefix = /ol/i.test(parent.nodeName) ? index + '.  ' : '*   ';\n          return prefix + content;\n        }\n      }, {\n        filter: ['ul', 'ol'],\n        replacement: function replacement(content, node) {\n          var strings = [];\n\n          for (var i = 0; i < node.childNodes.length; i++) {\n            strings.push(node.childNodes[i]._replacement);\n          }\n\n          if (/li/i.test(node.parentNode.nodeName)) {\n            return '\\n' + strings.join('\\n');\n          }\n\n          return '\\n\\n' + strings.join('\\n') + '\\n\\n';\n        }\n      }, {\n        filter: function filter(node) {\n          return this.isBlock(node);\n        },\n        replacement: function replacement(content, node) {\n          return '\\n\\n' + this.outer(node, content) + '\\n\\n';\n        }\n      }, // Anything else!\n      {\n        filter: function filter() {\n          return true;\n        },\n        replacement: function replacement(content, node) {\n          return this.outer(node, content);\n        }\n      }];\n    }, {}],\n    5: [function (require, module, exports) {\n      /**\n       * This file automatically generated from `build.js`.\n       * Do not manually edit.\n       */\n      module.exports = [\"address\", \"article\", \"aside\", \"audio\", \"blockquote\", \"canvas\", \"dd\", \"div\", \"dl\", \"fieldset\", \"figcaption\", \"figure\", \"footer\", \"form\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"header\", \"hgroup\", \"hr\", \"main\", \"nav\", \"noscript\", \"ol\", \"output\", \"p\", \"pre\", \"section\", \"table\", \"tfoot\", \"ul\", \"video\"];\n    }, {}],\n    6: [function (require, module, exports) {}, {}],\n    7: [function (require, module, exports) {\n      'use strict';\n\n      var voidElements = require('void-elements');\n\n      Object.keys(voidElements).forEach(function (name) {\n        voidElements[name.toUpperCase()] = 1;\n      });\n      var blockElements = {};\n\n      require('block-elements').forEach(function (name) {\n        blockElements[name.toUpperCase()] = 1;\n      });\n      /**\n       * isBlockElem(node) determines if the given node is a block element.\n       *\n       * @param {Node} node\n       * @returns {Boolean}\n       */\n\n\n      function isBlockElem(node) {\n        return !!(node && blockElements[node.nodeName]);\n      }\n      /**\n       * isVoid(node) determines if the given node is a void element.\n       *\n       * @param {Node} node\n       * @returns {Boolean}\n       */\n\n\n      function isVoid(node) {\n        return !!(node && voidElements[node.nodeName]);\n      }\n      /**\n       * whitespace(elem [, isBlock]) removes extraneous whitespace from an\n       * the given element. The function isBlock may optionally be passed in\n       * to determine whether or not an element is a block element; if none\n       * is provided, defaults to using the list of block elements provided\n       * by the `block-elements` module.\n       *\n       * @param {Node} elem\n       * @param {Function} blockTest\n       */\n\n\n      function collapseWhitespace(elem, isBlock) {\n        if (!elem.firstChild || elem.nodeName === 'PRE') return;\n\n        if (typeof isBlock !== 'function') {\n          isBlock = isBlockElem;\n        }\n\n        var prevText = null;\n        var prevVoid = false;\n        var prev = null;\n        var node = next(prev, elem);\n\n        while (node !== elem) {\n          if (node.nodeType === 3) {\n            // Node.TEXT_NODE\n            var text = node.data.replace(/[ \\r\\n\\t]+/g, ' ');\n\n            if ((!prevText || / $/.test(prevText.data)) && !prevVoid && text[0] === ' ') {\n              text = text.substr(1);\n            } // `text` might be empty at this point.\n\n\n            if (!text) {\n              node = remove(node);\n              continue;\n            }\n\n            node.data = text;\n            prevText = node;\n          } else if (node.nodeType === 1) {\n            // Node.ELEMENT_NODE\n            if (isBlock(node) || node.nodeName === 'BR') {\n              if (prevText) {\n                prevText.data = prevText.data.replace(/ $/, '');\n              }\n\n              prevText = null;\n              prevVoid = false;\n            } else if (isVoid(node)) {\n              // Avoid trimming space around non-block, non-BR void elements.\n              prevText = null;\n              prevVoid = true;\n            }\n          } else {\n            node = remove(node);\n            continue;\n          }\n\n          var nextNode = next(prev, node);\n          prev = node;\n          node = nextNode;\n        }\n\n        if (prevText) {\n          prevText.data = prevText.data.replace(/ $/, '');\n\n          if (!prevText.data) {\n            remove(prevText);\n          }\n        }\n      }\n      /**\n       * remove(node) removes the given node from the DOM and returns the\n       * next node in the sequence.\n       *\n       * @param {Node} node\n       * @returns {Node} node\n       */\n\n\n      function remove(node) {\n        var next = node.nextSibling || node.parentNode;\n        node.parentNode.removeChild(node);\n        return next;\n      }\n      /**\n       * next(prev, current) returns the next node in the sequence, given the\n       * current and previous nodes.\n       *\n       * @param {Node} prev\n       * @param {Node} current\n       * @returns {Node}\n       */\n\n\n      function next(prev, current) {\n        if (prev && prev.parentNode === current || current.nodeName === 'PRE') {\n          return current.nextSibling || current.parentNode;\n        }\n\n        return current.firstChild || current.nextSibling || current.parentNode;\n      }\n\n      module.exports = collapseWhitespace;\n    }, {\n      \"block-elements\": 5,\n      \"void-elements\": 8\n    }],\n    8: [function (require, module, exports) {\n      /**\n       * This file automatically generated from `pre-publish.js`.\n       * Do not manually edit.\n       */\n      module.exports = {\n        \"area\": true,\n        \"base\": true,\n        \"br\": true,\n        \"col\": true,\n        \"embed\": true,\n        \"hr\": true,\n        \"img\": true,\n        \"input\": true,\n        \"keygen\": true,\n        \"link\": true,\n        \"menuitem\": true,\n        \"meta\": true,\n        \"param\": true,\n        \"source\": true,\n        \"track\": true,\n        \"wbr\": true\n      };\n    }, {}]\n  }, {}, [1])(1);\n});","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","\nvar content = require(\"!!../../../postcss-loader/src/index.js??ref--6-1!./placeholder.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"singleton\":true,\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../postcss-loader/src/index.js??ref--6-1!./placeholder.css\", function() {\n\t\tvar newContent = require(\"!!../../../postcss-loader/src/index.js??ref--6-1!./placeholder.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = \".ck.ck-placeholder:before,.ck .ck-placeholder:before{content:attr(data-placeholder);pointer-events:none;cursor:text;color:var(--ck-color-engine-placeholder-text)}\"","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","\nvar content = require(\"!!../../../../postcss-loader/src/index.js??ref--6-1!./globals.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"singleton\":true,\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../postcss-loader/src/index.js??ref--6-1!./globals.css\", function() {\n\t\tvar newContent = require(\"!!../../../../postcss-loader/src/index.js??ref--6-1!./globals.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = \".ck-hidden{display:none!important}.ck.ck-reset,.ck.ck-reset_all,.ck.ck-reset_all *{box-sizing:border-box;width:auto;height:auto;position:static}:root{--ck-z-default:1;--ck-z-modal:calc(var(--ck-z-default) + 999);--ck-color-base-foreground:#fafafa;--ck-color-base-background:#fff;--ck-color-base-border:#c4c4c4;--ck-color-base-action:#61b045;--ck-color-base-focus:#6cb5f9;--ck-color-base-text:#333;--ck-color-base-active:#198cf0;--ck-color-base-active-focus:#0e7fe1;--ck-color-base-error:#db3700;--ck-color-focus-border:#47a4f5;--ck-color-focus-shadow:rgba(119,186,248,0.5);--ck-color-focus-disabled-shadow:rgba(119,186,248,0.3);--ck-color-focus-error-shadow:rgba(255,64,31,0.3);--ck-color-text:var(--ck-color-base-text);--ck-color-shadow-drop:rgba(0,0,0,0.15);--ck-color-shadow-drop-active:rgba(0,0,0,0.2);--ck-color-shadow-inner:rgba(0,0,0,0.1);--ck-color-button-default-background:transparent;--ck-color-button-default-hover-background:#e6e6e6;--ck-color-button-default-active-background:#d9d9d9;--ck-color-button-default-active-shadow:#bfbfbf;--ck-color-button-default-disabled-background:transparent;--ck-color-button-on-background:#dedede;--ck-color-button-on-hover-background:#c4c4c4;--ck-color-button-on-active-background:#bababa;--ck-color-button-on-active-shadow:#a1a1a1;--ck-color-button-on-disabled-background:#dedede;--ck-color-button-action-background:var(--ck-color-base-action);--ck-color-button-action-hover-background:#579e3d;--ck-color-button-action-active-background:#53973b;--ck-color-button-action-active-shadow:#498433;--ck-color-button-action-disabled-background:#7ec365;--ck-color-button-action-text:var(--ck-color-base-background);--ck-color-button-save:#008a00;--ck-color-button-cancel:#db3700;--ck-color-switch-button-off-background:#b0b0b0;--ck-color-switch-button-off-hover-background:#a3a3a3;--ck-color-switch-button-on-background:var(--ck-color-button-action-background);--ck-color-switch-button-on-hover-background:#579e3d;--ck-color-switch-button-inner-background:var(--ck-color-base-background);--ck-color-switch-button-inner-shadow:rgba(0,0,0,0.1);--ck-color-dropdown-panel-background:var(--ck-color-base-background);--ck-color-dropdown-panel-border:var(--ck-color-base-border);--ck-color-input-background:var(--ck-color-base-background);--ck-color-input-border:#c7c7c7;--ck-color-input-error-border:var(--ck-color-base-error);--ck-color-input-text:var(--ck-color-base-text);--ck-color-input-disabled-background:#f2f2f2;--ck-color-input-disabled-border:#c7c7c7;--ck-color-input-disabled-text:#5c5c5c;--ck-color-list-background:var(--ck-color-base-background);--ck-color-list-button-hover-background:var(--ck-color-button-default-hover-background);--ck-color-list-button-on-background:var(--ck-color-base-active);--ck-color-list-button-on-background-focus:var(--ck-color-base-active-focus);--ck-color-list-button-on-text:var(--ck-color-base-background);--ck-color-panel-background:var(--ck-color-base-background);--ck-color-panel-border:var(--ck-color-base-border);--ck-color-toolbar-background:var(--ck-color-base-foreground);--ck-color-toolbar-border:var(--ck-color-base-border);--ck-color-tooltip-background:var(--ck-color-base-text);--ck-color-tooltip-text:var(--ck-color-base-background);--ck-color-engine-placeholder-text:#707070;--ck-color-upload-bar-background:#6cb5f9;--ck-color-upload-infinite-background:rgba(0,0,0,0.1);--ck-color-link-default:#0000f0;--ck-color-link-selected-background:rgba(31,177,255,0.1);--ck-disabled-opacity:.5;--ck-focus-outer-shadow-geometry:0 0 0 3px;--ck-focus-outer-shadow:var(--ck-focus-outer-shadow-geometry) var(--ck-color-focus-shadow);--ck-focus-disabled-outer-shadow:var(--ck-focus-outer-shadow-geometry) var(--ck-color-focus-disabled-shadow);--ck-focus-error-outer-shadow:var(--ck-focus-outer-shadow-geometry) var(--ck-color-focus-error-shadow);--ck-focus-ring:1px solid var(--ck-color-focus-border);--ck-font-size-base:13px;--ck-line-height-base:1.84615;--ck-font-face:Helvetica,Arial,Tahoma,Verdana,Sans-Serif;--ck-font-size-tiny:0.7em;--ck-font-size-small:0.75em;--ck-font-size-normal:1em;--ck-font-size-big:1.4em;--ck-font-size-large:1.8em;--ck-ui-component-min-height:2.3em}.ck.ck-reset,.ck.ck-reset_all,.ck.ck-reset_all *{margin:0;padding:0;border:0;background:transparent;text-decoration:none;vertical-align:middle;transition:none;word-wrap:break-word}.ck.ck-reset_all,.ck.ck-reset_all *{border-collapse:collapse;font:normal normal normal var(--ck-font-size-base)/var(--ck-line-height-base) var(--ck-font-face);color:var(--ck-color-text);text-align:left;white-space:nowrap;cursor:auto;float:none}.ck.ck-reset_all .ck-rtl *{text-align:right}.ck.ck-reset_all iframe{vertical-align:inherit}.ck.ck-reset_all textarea{white-space:pre-wrap}.ck.ck-reset_all input[type=password],.ck.ck-reset_all input[type=text],.ck.ck-reset_all textarea{cursor:text}.ck.ck-reset_all input[type=password][disabled],.ck.ck-reset_all input[type=text][disabled],.ck.ck-reset_all textarea[disabled]{cursor:default}.ck.ck-reset_all fieldset{padding:10px;border:2px groove #dfdee3}.ck.ck-reset_all button::-moz-focus-inner{padding:0;border:0}:root{--ck-border-radius:2px;--ck-inner-shadow:2px 2px 3px var(--ck-color-shadow-inner) inset;--ck-drop-shadow:0 1px 2px 1px var(--ck-color-shadow-drop);--ck-drop-shadow-active:0 3px 6px 1px var(--ck-color-shadow-drop-active);--ck-spacing-unit:0.6em;--ck-spacing-large:calc(var(--ck-spacing-unit)*1.5);--ck-spacing-standard:var(--ck-spacing-unit);--ck-spacing-medium:calc(var(--ck-spacing-unit)*0.8);--ck-spacing-small:calc(var(--ck-spacing-unit)*0.5);--ck-spacing-tiny:calc(var(--ck-spacing-unit)*0.3);--ck-spacing-extra-tiny:calc(var(--ck-spacing-unit)*0.16)}\"","\nvar content = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./editorui.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"singleton\":true,\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./editorui.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./editorui.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = \".ck.ck-editor__editable:not(.ck-editor__nested-editable){border-radius:0}.ck-rounded-corners .ck.ck-editor__editable:not(.ck-editor__nested-editable),.ck.ck-editor__editable:not(.ck-editor__nested-editable).ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck.ck-editor__editable:not(.ck-editor__nested-editable).ck-focused{outline:none;border:var(--ck-focus-ring);box-shadow:var(--ck-inner-shadow),0 0}.ck.ck-editor__editable_inline{overflow:auto;padding:0 var(--ck-spacing-standard);border:1px solid transparent}.ck.ck-editor__editable_inline>:first-child{margin-top:var(--ck-spacing-large)}.ck.ck-editor__editable_inline>:last-child{margin-bottom:var(--ck-spacing-large)}.ck.ck-balloon-panel.ck-toolbar-container[class*=arrow_n]:after{border-bottom-color:var(--ck-color-base-foreground)}.ck.ck-balloon-panel.ck-toolbar-container[class*=arrow_s]:after{border-top-color:var(--ck-color-base-foreground)}\"","\nvar content = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./label.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"singleton\":true,\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./label.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./label.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = \".ck.ck-label{display:block}.ck.ck-voice-label{display:none}.ck.ck-label{font-weight:700}\"","\nvar content = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./stickypanel.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"singleton\":true,\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./stickypanel.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./stickypanel.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = \".ck.ck-sticky-panel .ck-sticky-panel__content_sticky{z-index:var(--ck-z-modal);position:fixed;top:0}.ck.ck-sticky-panel .ck-sticky-panel__content_sticky_bottom-limit{top:auto;position:absolute}.ck.ck-sticky-panel .ck-sticky-panel__content_sticky{box-shadow:var(--ck-drop-shadow),0 0;border-width:0 1px 1px;border-top-left-radius:0;border-top-right-radius:0}\"","\nvar content = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./toolbar.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"singleton\":true,\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./toolbar.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./toolbar.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = \".ck.ck-toolbar{-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;user-select:none;display:flex;flex-flow:row wrap;align-items:center}.ck.ck-toolbar.ck-toolbar_vertical{flex-direction:column}.ck.ck-toolbar.ck-toolbar_floating{flex-wrap:nowrap}.ck.ck-toolbar__separator{display:inline-block}.ck.ck-toolbar__newline{display:block;width:100%}.ck.ck-toolbar{border-radius:0}.ck-rounded-corners .ck.ck-toolbar,.ck.ck-toolbar.ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck.ck-toolbar{background:var(--ck-color-toolbar-background);padding:0 var(--ck-spacing-small);border:1px solid var(--ck-color-toolbar-border)}.ck.ck-toolbar>*{margin-right:var(--ck-spacing-small);margin-top:var(--ck-spacing-small);margin-bottom:var(--ck-spacing-small)}.ck.ck-toolbar.ck-toolbar_vertical{padding:0}.ck.ck-toolbar.ck-toolbar_vertical>.ck{width:100%;margin:0;border-radius:0;border:0}.ck.ck-toolbar>:last-child{margin-right:0}.ck-toolbar-container .ck.ck-toolbar{border:0}.ck.ck-toolbar__separator{align-self:stretch;width:1px;margin-top:0;margin-bottom:0;background:var(--ck-color-toolbar-border)}.ck.ck-toolbar__newline{margin:0}\"","\nvar content = require(\"!!../../../postcss-loader/src/index.js??ref--6-1!./classiceditor.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"singleton\":true,\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../postcss-loader/src/index.js??ref--6-1!./classiceditor.css\", function() {\n\t\tvar newContent = require(\"!!../../../postcss-loader/src/index.js??ref--6-1!./classiceditor.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = \".ck.ck-editor{position:relative}.ck.ck-editor .ck-editor__top .ck-sticky-panel .ck-toolbar{z-index:var(--ck-z-modal)}.ck.ck-editor__top .ck-sticky-panel .ck-toolbar{border-radius:0}.ck-rounded-corners .ck.ck-editor__top .ck-sticky-panel .ck-toolbar,.ck.ck-editor__top .ck-sticky-panel .ck-toolbar.ck-rounded-corners{border-radius:var(--ck-border-radius);border-bottom-left-radius:0;border-bottom-right-radius:0}.ck.ck-editor__top .ck-sticky-panel .ck-toolbar{border-bottom-width:0}.ck.ck-editor__top .ck-sticky-panel .ck-sticky-panel__content_sticky .ck-toolbar{border-bottom-width:1px;border-radius:0}.ck-rounded-corners .ck.ck-editor__top .ck-sticky-panel .ck-sticky-panel__content_sticky .ck-toolbar,.ck.ck-editor__top .ck-sticky-panel .ck-sticky-panel__content_sticky .ck-toolbar.ck-rounded-corners{border-radius:var(--ck-border-radius);border-radius:0}.ck.ck-editor__main>.ck-editor__editable{background:var(--ck-color-base-background);border-radius:0}.ck-rounded-corners .ck.ck-editor__main>.ck-editor__editable,.ck.ck-editor__main>.ck-editor__editable.ck-rounded-corners{border-radius:var(--ck-border-radius);border-top-left-radius:0;border-top-right-radius:0}.ck.ck-editor__main>.ck-editor__editable:not(.ck-focused){border-color:var(--ck-color-base-border)}\"","\nvar content = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./icon.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"singleton\":true,\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./icon.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./icon.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = \".ck.ck-icon{vertical-align:middle}:root{--ck-icon-size:calc(var(--ck-line-height-base)*var(--ck-font-size-normal))}.ck.ck-icon{width:var(--ck-icon-size);height:var(--ck-icon-size);font-size:.8333350694em;will-change:transform}.ck.ck-icon,.ck.ck-icon *{color:inherit;cursor:inherit}.ck.ck-icon :not([fill]){fill:currentColor}\"","\nvar content = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./tooltip.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"singleton\":true,\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./tooltip.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./tooltip.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = \".ck.ck-tooltip,.ck.ck-tooltip .ck-tooltip__text:after{position:absolute;pointer-events:none;-webkit-backface-visibility:hidden}.ck-tooltip{visibility:hidden;opacity:0;display:none;z-index:var(--ck-z-modal)}.ck-tooltip .ck-tooltip__text{display:inline-block}.ck-tooltip .ck-tooltip__text:after{content:\\\"\\\";width:0;height:0}:root{--ck-tooltip-arrow-size:5px}.ck.ck-tooltip{left:50%;top:0}.ck.ck-tooltip.ck-tooltip_s{bottom:calc(-1*var(--ck-tooltip-arrow-size));transform:translateY(100%)}.ck.ck-tooltip.ck-tooltip_s .ck-tooltip__text:after{top:calc(-1*var(--ck-tooltip-arrow-size));transform:translateX(-50%);border-left-color:transparent;border-bottom-color:var(--ck-color-tooltip-background);border-right-color:transparent;border-top-color:transparent;border-left-width:var(--ck-tooltip-arrow-size);border-bottom-width:var(--ck-tooltip-arrow-size);border-right-width:var(--ck-tooltip-arrow-size);border-top-width:0}.ck.ck-tooltip.ck-tooltip_n{top:calc(-1*var(--ck-tooltip-arrow-size));transform:translateY(-100%)}.ck.ck-tooltip.ck-tooltip_n .ck-tooltip__text:after{bottom:calc(-1*var(--ck-tooltip-arrow-size));transform:translateX(-50%);border-left-color:transparent;border-bottom-color:transparent;border-right-color:transparent;border-top-color:var(--ck-color-tooltip-background);border-left-width:var(--ck-tooltip-arrow-size);border-bottom-width:0;border-right-width:var(--ck-tooltip-arrow-size);border-top-width:var(--ck-tooltip-arrow-size)}.ck.ck-tooltip .ck-tooltip__text{border-radius:0}.ck-rounded-corners .ck.ck-tooltip .ck-tooltip__text,.ck.ck-tooltip .ck-tooltip__text.ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck.ck-tooltip .ck-tooltip__text{font-size:.9em;line-height:1.5;color:var(--ck-color-tooltip-text);padding:var(--ck-spacing-small) var(--ck-spacing-medium);background:var(--ck-color-tooltip-background);position:relative;left:-50%}.ck.ck-tooltip .ck-tooltip__text:after{border-style:solid;left:50%}.ck.ck-tooltip,.ck.ck-tooltip .ck-tooltip__text:after{transition:opacity .2s ease-in-out .2s}\"","\nvar content = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./button.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"singleton\":true,\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./button.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./button.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = \".ck.ck-button,a.ck.ck-button{-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;user-select:none}.ck.ck-button .ck-tooltip,a.ck.ck-button .ck-tooltip{display:block}@media (hover:none){.ck.ck-button .ck-tooltip,a.ck.ck-button .ck-tooltip{display:none}}.ck.ck-button,a.ck.ck-button{position:relative;display:inline-flex;align-items:center;justify-content:left}.ck.ck-button.ck-button_with-text .ck-button__label,a.ck.ck-button.ck-button_with-text .ck-button__label{display:inline-block}.ck.ck-button:not(.ck-button_with-text),a.ck.ck-button:not(.ck-button_with-text){justify-content:center}.ck.ck-button:hover .ck-tooltip,a.ck.ck-button:hover .ck-tooltip{visibility:visible;opacity:1}.ck.ck-button .ck-button__label,.ck.ck-button:focus:not(:hover) .ck-tooltip,a.ck.ck-button .ck-button__label,a.ck.ck-button:focus:not(:hover) .ck-tooltip{display:none}.ck.ck-button,a.ck.ck-button{background:var(--ck-color-button-default-background)}.ck.ck-button:not(.ck-disabled):hover,a.ck.ck-button:not(.ck-disabled):hover{background:var(--ck-color-button-default-hover-background)}.ck.ck-button:not(.ck-disabled):active,a.ck.ck-button:not(.ck-disabled):active{background:var(--ck-color-button-default-active-background);box-shadow:inset 0 2px 2px var(--ck-color-button-default-active-shadow)}.ck.ck-button.ck-disabled,a.ck.ck-button.ck-disabled{background:var(--ck-color-button-default-disabled-background)}.ck.ck-button,a.ck.ck-button{border-radius:0}.ck-rounded-corners .ck.ck-button,.ck-rounded-corners a.ck.ck-button,.ck.ck-button.ck-rounded-corners,a.ck.ck-button.ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck.ck-button,a.ck.ck-button{white-space:nowrap;cursor:default;vertical-align:middle;padding:var(--ck-spacing-tiny);text-align:center;min-width:var(--ck-ui-component-min-height);min-height:var(--ck-ui-component-min-height);line-height:1;font-size:inherit;border:1px solid transparent;transition:box-shadow .2s ease-in-out;-webkit-appearance:none}.ck.ck-button:active,.ck.ck-button:focus,a.ck.ck-button:active,a.ck.ck-button:focus{outline:none;border:var(--ck-focus-ring);box-shadow:var(--ck-focus-outer-shadow),0 0;border-color:transparent}.ck.ck-button.ck-disabled:active,.ck.ck-button.ck-disabled:focus,a.ck.ck-button.ck-disabled:active,a.ck.ck-button.ck-disabled:focus{box-shadow:var(--ck-focus-disabled-outer-shadow),0 0}.ck.ck-button.ck-disabled .ck-button__icon,a.ck.ck-button.ck-disabled .ck-button__icon{opacity:var(--ck-disabled-opacity)}.ck.ck-button.ck-disabled .ck-button__label,a.ck.ck-button.ck-disabled .ck-button__label{opacity:var(--ck-disabled-opacity)}.ck.ck-button.ck-button_with-text,a.ck.ck-button.ck-button_with-text{padding:var(--ck-spacing-tiny) var(--ck-spacing-standard)}.ck.ck-button.ck-button_with-text .ck-button__icon,a.ck.ck-button.ck-button_with-text .ck-button__icon{margin-left:calc(-1*var(--ck-spacing-small));margin-right:var(--ck-spacing-small)}.ck.ck-button.ck-on,a.ck.ck-button.ck-on{background:var(--ck-color-button-on-background)}.ck.ck-button.ck-on:not(.ck-disabled):hover,a.ck.ck-button.ck-on:not(.ck-disabled):hover{background:var(--ck-color-button-on-hover-background)}.ck.ck-button.ck-on:not(.ck-disabled):active,a.ck.ck-button.ck-on:not(.ck-disabled):active{background:var(--ck-color-button-on-active-background);box-shadow:inset 0 2px 2px var(--ck-color-button-on-active-shadow)}.ck.ck-button.ck-on.ck-disabled,a.ck.ck-button.ck-on.ck-disabled{background:var(--ck-color-button-on-disabled-background)}.ck.ck-button.ck-button-save,a.ck.ck-button.ck-button-save{color:var(--ck-color-button-save)}.ck.ck-button.ck-button-cancel,a.ck.ck-button.ck-button-cancel{color:var(--ck-color-button-cancel)}.ck.ck-button .ck-button__icon use,.ck.ck-button .ck-button__icon use *,a.ck.ck-button .ck-button__icon use,a.ck.ck-button .ck-button__icon use *{color:inherit}.ck.ck-button .ck-button__label,a.ck.ck-button .ck-button__label{font-size:inherit;font-weight:inherit;color:inherit;cursor:inherit;vertical-align:middle}.ck.ck-button-action,a.ck.ck-button-action{background:var(--ck-color-button-action-background)}.ck.ck-button-action:not(.ck-disabled):hover,a.ck.ck-button-action:not(.ck-disabled):hover{background:var(--ck-color-button-action-hover-background)}.ck.ck-button-action:not(.ck-disabled):active,a.ck.ck-button-action:not(.ck-disabled):active{background:var(--ck-color-button-action-active-background);box-shadow:inset 0 2px 2px var(--ck-color-button-action-active-shadow)}.ck.ck-button-action.ck-disabled,a.ck.ck-button-action.ck-disabled{background:var(--ck-color-button-action-disabled-background)}.ck.ck-button-action,a.ck.ck-button-action{color:var(--ck-color-button-action-text)}.ck.ck-button-bold,a.ck.ck-button-bold{font-weight:700}\"","\nvar content = require(\"!!../../../postcss-loader/src/index.js??ref--6-1!./blockquote.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"singleton\":true,\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../postcss-loader/src/index.js??ref--6-1!./blockquote.css\", function() {\n\t\tvar newContent = require(\"!!../../../postcss-loader/src/index.js??ref--6-1!./blockquote.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = \".ck-content blockquote{overflow:hidden;padding-right:1.5em;padding-left:1.5em;margin-left:0;font-style:italic;border-left:5px solid #ccc}\"","\nvar content = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./dropdown.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"singleton\":true,\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./dropdown.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./dropdown.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = \".ck.ck-dropdown{display:inline-block;position:relative}.ck.ck-dropdown .ck-dropdown__arrow{pointer-events:none;z-index:var(--ck-z-default)}.ck.ck-dropdown .ck-button.ck-dropdown__button{width:100%}.ck.ck-dropdown .ck-button.ck-dropdown__button.ck-on .ck-tooltip{display:none}.ck.ck-dropdown .ck-dropdown__panel{-webkit-backface-visibility:hidden;display:none;z-index:var(--ck-z-modal);position:absolute}.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel-visible{display:inline-block;will-change:transform}.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_ne,.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_nw{bottom:100%}.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_se,.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_sw{transform:translate3d(0,100%,0)}.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_ne,.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_se{left:0}.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_nw,.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_sw{right:0}:root{--ck-dropdown-arrow-size:calc(0.5*var(--ck-icon-size))}.ck.ck-dropdown{font-size:inherit}.ck.ck-dropdown .ck-dropdown__arrow{right:var(--ck-spacing-standard);width:var(--ck-dropdown-arrow-size);margin-left:var(--ck-spacing-small)}.ck.ck-dropdown.ck-disabled .ck-dropdown__arrow{opacity:var(--ck-disabled-opacity)}.ck.ck-dropdown .ck-button.ck-dropdown__button:not(.ck-button_with-text){padding-left:var(--ck-spacing-small)}.ck.ck-dropdown .ck-button.ck-dropdown__button.ck-disabled .ck-button__label{opacity:var(--ck-disabled-opacity)}.ck.ck-dropdown .ck-button.ck-dropdown__button.ck-on{border-bottom-left-radius:0;border-bottom-right-radius:0}.ck.ck-dropdown .ck-button.ck-dropdown__button .ck-button__label{width:7em;overflow:hidden;text-overflow:ellipsis}.ck.ck-dropdown__panel{box-shadow:var(--ck-drop-shadow),0 0;border-radius:0}.ck-rounded-corners .ck.ck-dropdown__panel,.ck.ck-dropdown__panel.ck-rounded-corners{border-radius:var(--ck-border-radius);border-top-left-radius:0}.ck.ck-dropdown__panel{background:var(--ck-color-dropdown-panel-background);border:1px solid var(--ck-color-dropdown-panel-border);bottom:0;min-width:100%}\"","\nvar content = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./list.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"singleton\":true,\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./list.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./list.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = \".ck.ck-list{-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;user-select:none;display:flex;flex-direction:column}.ck.ck-list .ck-list__item,.ck.ck-list .ck-list__separator{display:block}.ck.ck-list .ck-list__item>:focus{position:relative;z-index:var(--ck-z-default)}.ck.ck-list{border-radius:0}.ck-rounded-corners .ck.ck-list,.ck.ck-list.ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck.ck-list{list-style-type:none;background:var(--ck-color-list-background)}.ck.ck-list__item{cursor:default;min-width:12em}.ck.ck-list__item .ck-button{min-height:unset;width:100%;text-align:left;border-radius:0;border:0;padding:calc(0.2*var(--ck-line-height-base)*var(--ck-font-size-base)) calc(0.4*var(--ck-line-height-base)*var(--ck-font-size-base))}.ck.ck-list__item .ck-button .ck-button__label{line-height:calc(1.2*var(--ck-line-height-base)*var(--ck-font-size-base))}.ck.ck-list__item .ck-button:active{box-shadow:none}.ck.ck-list__item .ck-button.ck-on{background:var(--ck-color-list-button-on-background);color:var(--ck-color-list-button-on-text)}.ck.ck-list__item .ck-button.ck-on:hover:not(ck-disabled){background:var(--ck-color-list-button-on-background-focus)}.ck.ck-list__item .ck-button.ck-on:active{box-shadow:none}.ck.ck-list__item .ck-button:hover:not(.ck-disabled){background:var(--ck-color-list-button-hover-background)}.ck.ck-list__item .ck-switchbutton.ck-on{background:var(--ck-color-list-background);color:inherit}.ck.ck-list__item .ck-switchbutton.ck-on:hover:not(ck-disabled){background:var(--ck-color-list-button-hover-background);color:inherit}.ck.ck-list__separator{height:1px;width:100%;background:var(--ck-color-base-border)}\"","\nvar content = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./switchbutton.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"singleton\":true,\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./switchbutton.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./switchbutton.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = \".ck.ck-button.ck-switchbutton .ck-button__toggle,.ck.ck-button.ck-switchbutton .ck-button__toggle .ck-button__toggle__inner{display:block}:root{--ck-switch-button-toggle-width:2.6153846154em;--ck-switch-button-toggle-inner-size:1.0769230769em;--ck-switch-button-toggle-spacing:1px}.ck.ck-button.ck-switchbutton .ck-button__label{margin-right:calc(2*var(--ck-spacing-large))}.ck.ck-button.ck-switchbutton.ck-disabled .ck-button__toggle{opacity:var(--ck-disabled-opacity)}.ck.ck-button.ck-switchbutton .ck-button__toggle{border-radius:0}.ck-rounded-corners .ck.ck-button.ck-switchbutton .ck-button__toggle,.ck.ck-button.ck-switchbutton .ck-button__toggle.ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck.ck-button.ck-switchbutton .ck-button__toggle{margin-left:auto;transition:background .4s ease;width:var(--ck-switch-button-toggle-width);background:var(--ck-color-switch-button-off-background)}.ck.ck-button.ck-switchbutton .ck-button__toggle:hover{background:var(--ck-color-switch-button-off-hover-background)}.ck.ck-button.ck-switchbutton .ck-button__toggle:hover .ck-button__toggle__inner{box-shadow:0 0 0 5px var(--ck-color-switch-button-inner-shadow)}.ck.ck-button.ck-switchbutton .ck-button__toggle .ck-button__toggle__inner{border-radius:0}.ck-rounded-corners .ck.ck-button.ck-switchbutton .ck-button__toggle .ck-button__toggle__inner,.ck.ck-button.ck-switchbutton .ck-button__toggle .ck-button__toggle__inner.ck-rounded-corners{border-radius:var(--ck-border-radius);border-radius:calc(0.5*var(--ck-border-radius))}.ck.ck-button.ck-switchbutton .ck-button__toggle .ck-button__toggle__inner{margin:var(--ck-switch-button-toggle-spacing);width:var(--ck-switch-button-toggle-inner-size);height:var(--ck-switch-button-toggle-inner-size);background:var(--ck-color-switch-button-inner-background);transition:all .3s ease}.ck.ck-button.ck-switchbutton.ck-on .ck-button__toggle{background:var(--ck-color-switch-button-on-background)}.ck.ck-button.ck-switchbutton.ck-on .ck-button__toggle:hover{background:var(--ck-color-switch-button-on-hover-background)}.ck.ck-button.ck-switchbutton.ck-on .ck-button__toggle .ck-button__toggle__inner{transform:translateX(1.3846153847em)}\"","\nvar content = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./toolbardropdown.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"singleton\":true,\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./toolbardropdown.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./toolbardropdown.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = \".ck.ck-toolbar-dropdown .ck-toolbar{flex-wrap:nowrap}.ck.ck-toolbar-dropdown .ck-dropdown__panel .ck-button:focus{z-index:calc(var(--ck-z-default) + 1)}.ck.ck-toolbar-dropdown .ck-toolbar{border:0}\"","\nvar content = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./listdropdown.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"singleton\":true,\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./listdropdown.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./listdropdown.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = \".ck.ck-dropdown .ck-dropdown__panel .ck-list{border-radius:0}.ck-rounded-corners .ck.ck-dropdown .ck-dropdown__panel .ck-list,.ck.ck-dropdown .ck-dropdown__panel .ck-list.ck-rounded-corners{border-radius:var(--ck-border-radius);border-top-left-radius:0}.ck.ck-dropdown .ck-dropdown__panel .ck-list .ck-list__item:first-child .ck-button{border-radius:0}.ck-rounded-corners .ck.ck-dropdown .ck-dropdown__panel .ck-list .ck-list__item:first-child .ck-button,.ck.ck-dropdown .ck-dropdown__panel .ck-list .ck-list__item:first-child .ck-button.ck-rounded-corners{border-radius:var(--ck-border-radius);border-top-left-radius:0;border-bottom-left-radius:0;border-bottom-right-radius:0}.ck.ck-dropdown .ck-dropdown__panel .ck-list .ck-list__item:last-child .ck-button{border-radius:0}.ck-rounded-corners .ck.ck-dropdown .ck-dropdown__panel .ck-list .ck-list__item:last-child .ck-button,.ck.ck-dropdown .ck-dropdown__panel .ck-list .ck-list__item:last-child .ck-button.ck-rounded-corners{border-radius:var(--ck-border-radius);border-top-left-radius:0;border-top-right-radius:0}\"","module.exports = \".ck.ck-heading_heading1{font-size:20px}.ck.ck-heading_heading2{font-size:17px}.ck.ck-heading_heading3{font-size:14px}.ck[class*=ck-heading_heading]{font-weight:700}.ck.ck-dropdown.ck-heading-dropdown .ck-dropdown__button .ck-button__label{width:8em}.ck.ck-dropdown.ck-heading-dropdown .ck-dropdown__panel .ck-list__item{min-width:18em}\"","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nexport default overArg;\n","import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import baseGetTag from './_baseGetTag.js';\nimport getPrototype from './_getPrototype.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nexport default isPlainObject;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nexport default listCacheClear;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nexport default eq;\n","import eq from './eq.js';\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nexport default assocIndexOf;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nexport default listCacheDelete;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nexport default listCacheGet;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nexport default listCacheHas;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nexport default listCacheSet;\n","import listCacheClear from './_listCacheClear.js';\nimport listCacheDelete from './_listCacheDelete.js';\nimport listCacheGet from './_listCacheGet.js';\nimport listCacheHas from './_listCacheHas.js';\nimport listCacheSet from './_listCacheSet.js';\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nexport default ListCache;\n","import ListCache from './_ListCache.js';\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nexport default stackClear;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nexport default stackDelete;\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nexport default stackGet;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nexport default stackHas;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","import baseGetTag from './_baseGetTag.js';\nimport isObject from './isObject.js';\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nexport default isFunction;\n","import root from './_root.js';\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nexport default coreJsData;\n","import coreJsData from './_coreJsData.js';\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nexport default isMasked;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nexport default toSource;\n","import isFunction from './isFunction.js';\nimport isMasked from './_isMasked.js';\nimport isObject from './isObject.js';\nimport toSource from './_toSource.js';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nexport default baseIsNative;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nexport default getValue;\n","import baseIsNative from './_baseIsNative.js';\nimport getValue from './_getValue.js';\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nexport default getNative;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nexport default Map;\n","import getNative from './_getNative.js';\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nexport default nativeCreate;\n","import nativeCreate from './_nativeCreate.js';\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nexport default hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default hashDelete;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nexport default hashGet;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nexport default hashHas;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nexport default hashSet;\n","import hashClear from './_hashClear.js';\nimport hashDelete from './_hashDelete.js';\nimport hashGet from './_hashGet.js';\nimport hashHas from './_hashHas.js';\nimport hashSet from './_hashSet.js';\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nexport default Hash;\n","import Hash from './_Hash.js';\nimport ListCache from './_ListCache.js';\nimport Map from './_Map.js';\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nexport default mapCacheClear;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nexport default isKeyable;\n","import isKeyable from './_isKeyable.js';\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nexport default getMapData;\n","import getMapData from './_getMapData.js';\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default mapCacheDelete;\n","import getMapData from './_getMapData.js';\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nexport default mapCacheGet;\n","import getMapData from './_getMapData.js';\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nexport default mapCacheHas;\n","import getMapData from './_getMapData.js';\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nexport default mapCacheSet;\n","import mapCacheClear from './_mapCacheClear.js';\nimport mapCacheDelete from './_mapCacheDelete.js';\nimport mapCacheGet from './_mapCacheGet.js';\nimport mapCacheHas from './_mapCacheHas.js';\nimport mapCacheSet from './_mapCacheSet.js';\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nexport default MapCache;\n","import ListCache from './_ListCache.js';\nimport Map from './_Map.js';\nimport MapCache from './_MapCache.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nexport default stackSet;\n","import ListCache from './_ListCache.js';\nimport stackClear from './_stackClear.js';\nimport stackDelete from './_stackDelete.js';\nimport stackGet from './_stackGet.js';\nimport stackHas from './_stackHas.js';\nimport stackSet from './_stackSet.js';\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nexport default Stack;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nexport default arrayEach;\n","import getNative from './_getNative.js';\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nexport default defineProperty;\n","import defineProperty from './_defineProperty.js';\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nexport default baseAssignValue;\n","import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignValue;\n","import assignValue from './_assignValue.js';\nimport baseAssignValue from './_baseAssignValue.js';\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nexport default copyObject;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nexport default baseTimes;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nexport default baseIsArguments;\n","import baseIsArguments from './_baseIsArguments.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nexport default isArguments;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nexport default isArray;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nexport default isIndex;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nexport default isLength;\n","import baseGetTag from './_baseGetTag.js';\nimport isLength from './isLength.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nexport default baseIsTypedArray;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nexport default baseUnary;\n","import baseIsTypedArray from './_baseIsTypedArray.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nexport default isTypedArray;\n","import baseTimes from './_baseTimes.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isIndex from './_isIndex.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default arrayLikeKeys;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nexport default isPrototype;\n","import overArg from './_overArg.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nexport default nativeKeys;\n","import isPrototype from './_isPrototype.js';\nimport nativeKeys from './_nativeKeys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeys;\n","import isFunction from './isFunction.js';\nimport isLength from './isLength.js';\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nexport default isArrayLike;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeys from './_baseKeys.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nexport default keys;\n","import copyObject from './_copyObject.js';\nimport keys from './keys.js';\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nexport default baseAssign;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default nativeKeysIn;\n","import isObject from './isObject.js';\nimport isPrototype from './_isPrototype.js';\nimport nativeKeysIn from './_nativeKeysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeysIn;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeysIn from './_baseKeysIn.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nexport default keysIn;\n","import copyObject from './_copyObject.js';\nimport keysIn from './keysIn.js';\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nexport default baseAssignIn;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nexport default copyArray;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nexport default arrayFilter;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nexport default stubArray;\n","import arrayFilter from './_arrayFilter.js';\nimport stubArray from './stubArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nexport default getSymbols;\n","import copyObject from './_copyObject.js';\nimport getSymbols from './_getSymbols.js';\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nexport default copySymbols;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nexport default arrayPush;\n","import arrayPush from './_arrayPush.js';\nimport getPrototype from './_getPrototype.js';\nimport getSymbols from './_getSymbols.js';\nimport stubArray from './stubArray.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nexport default getSymbolsIn;\n","import copyObject from './_copyObject.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nexport default copySymbolsIn;\n","import arrayPush from './_arrayPush.js';\nimport isArray from './isArray.js';\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nexport default baseGetAllKeys;\n","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbols from './_getSymbols.js';\nimport keys from './keys.js';\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nexport default getAllKeys;\n","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nexport default getAllKeysIn;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nexport default DataView;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nexport default Promise;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nexport default Set;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nexport default WeakMap;\n","import DataView from './_DataView.js';\nimport Map from './_Map.js';\nimport Promise from './_Promise.js';\nimport Set from './_Set.js';\nimport WeakMap from './_WeakMap.js';\nimport baseGetTag from './_baseGetTag.js';\nimport toSource from './_toSource.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nexport default getTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nexport default initCloneArray;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nexport default Uint8Array;\n","import Uint8Array from './_Uint8Array.js';\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nexport default cloneArrayBuffer;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nexport default cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nexport default cloneRegExp;\n","import Symbol from './_Symbol.js';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nexport default cloneSymbol;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nexport default cloneTypedArray;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\nimport cloneDataView from './_cloneDataView.js';\nimport cloneRegExp from './_cloneRegExp.js';\nimport cloneSymbol from './_cloneSymbol.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nexport default initCloneByTag;\n","import isObject from './isObject.js';\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nexport default baseCreate;\n","import baseCreate from './_baseCreate.js';\nimport getPrototype from './_getPrototype.js';\nimport isPrototype from './_isPrototype.js';\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nexport default initCloneObject;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nexport default baseIsMap;\n","import baseIsMap from './_baseIsMap.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nexport default isMap;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nexport default baseIsSet;\n","import baseIsSet from './_baseIsSet.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nexport default isSet;\n","import Stack from './_Stack.js';\nimport arrayEach from './_arrayEach.js';\nimport assignValue from './_assignValue.js';\nimport baseAssign from './_baseAssign.js';\nimport baseAssignIn from './_baseAssignIn.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport copyArray from './_copyArray.js';\nimport copySymbols from './_copySymbols.js';\nimport copySymbolsIn from './_copySymbolsIn.js';\nimport getAllKeys from './_getAllKeys.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\nimport getTag from './_getTag.js';\nimport initCloneArray from './_initCloneArray.js';\nimport initCloneByTag from './_initCloneByTag.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isMap from './isMap.js';\nimport isObject from './isObject.js';\nimport isSet from './isSet.js';\nimport keys from './keys.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nexport default baseClone;\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.cloneWith` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @param {Function} [customizer] The function to customize cloning.\n * @returns {*} Returns the deep cloned value.\n * @see _.cloneWith\n * @example\n *\n * function customizer(value) {\n *   if (_.isElement(value)) {\n *     return value.cloneNode(true);\n *   }\n * }\n *\n * var el = _.cloneDeepWith(document.body, customizer);\n *\n * console.log(el === document.body);\n * // => false\n * console.log(el.nodeName);\n * // => 'BODY'\n * console.log(el.childNodes.length);\n * // => 20\n */\nfunction cloneDeepWith(value, customizer) {\n  customizer = typeof customizer == 'function' ? customizer : undefined;\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n}\n\nexport default cloneDeepWith;\n","import isObjectLike from './isObjectLike.js';\nimport isPlainObject from './isPlainObject.js';\n\n/**\n * Checks if `value` is likely a DOM element.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n * @example\n *\n * _.isElement(document.body);\n * // => true\n *\n * _.isElement('<body>');\n * // => false\n */\nfunction isElement(value) {\n  return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n}\n\nexport default isElement;\n","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/config\n */\nimport { isPlainObject, isElement, cloneDeepWith } from 'lodash-es';\n/**\n * Handles a configuration dictionary.\n */\n\nvar Config =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of the {@link ~Config} class.\n   *\n   * @param {Object} [configurations] The initial configurations to be set. Usually, provided by the user.\n   * @param {Object} [defaultConfigurations] The default configurations. Usually, provided by the system.\n   */\n  function Config(configurations, defaultConfigurations) {\n    _classCallCheck(this, Config);\n\n    /**\n     * Store for the whole configuration.\n     *\n     * @private\n     * @member {Object}\n     */\n    this._config = {}; // Set default configuration.\n\n    if (defaultConfigurations) {\n      this.define(defaultConfigurations);\n    } // Set initial configuration.\n\n\n    if (configurations) {\n      this._setObjectToTarget(this._config, configurations);\n    }\n  }\n  /**\n   * Set configuration values.\n   *\n   * It accepts both a name/value pair or an object, which properties and values will be used to set\n   * configurations.\n   *\n   * It also accepts setting a \"deep configuration\" by using dots in the name. For example, `'resize.width'` sets\n   * the value for the `width` configuration in the `resize` subset.\n   *\n   *\t\tconfig.set( 'width', 500 );\n   *\t\tconfig.set( 'toolbar.collapsed', true );\n   *\n   *\t\t// Equivalent to:\n   *\t\tconfig.set( {\n   *\t\t\twidth: 500\n   *\t\t\ttoolbar: {\n   *\t\t\t\tcollapsed: true\n   *\t\t\t}\n   *\t\t} );\n   *\n   * Passing an object as the value will amend the configuration, not replace it.\n   *\n   *\t\tconfig.set( 'toolbar', {\n   *\t\t\tcollapsed: true,\n   *\t\t} );\n   *\n   *\t\tconfig.set( 'toolbar', {\n   *\t\t\tcolor: 'red',\n   *\t\t} );\n   *\n   *\t\tconfig.get( 'toolbar.collapsed' ); // true\n   *\t\tconfig.get( 'toolbar.color' ); // 'red'\n   *\n   * @param {String|Object} name The configuration name or an object from which take properties as\n   * configuration entries. Configuration names are case-sensitive.\n   * @param {*} value The configuration value. Used if a name is passed.\n   */\n\n\n  _createClass(Config, [{\n    key: \"set\",\n    value: function set(name, value) {\n      this._setToTarget(this._config, name, value);\n    }\n    /**\n     * Does exactly the same as {@link #set} with one exception – passed configuration extends\n     * existing one, but does not overwrite already defined values.\n     *\n     * This method is supposed to be called by plugin developers to setup plugin's configurations. It would be\n     * rarely used for other needs.\n     *\n     * @param {String|Object} name The configuration name or an object from which take properties as\n     * configuration entries. Configuration names are case-sensitive.\n     * @param {*} value The configuration value. Used if a name is passed.\n     */\n\n  }, {\n    key: \"define\",\n    value: function define(name, value) {\n      var isDefine = true;\n\n      this._setToTarget(this._config, name, value, isDefine);\n    }\n    /**\n     * Gets the value for a configuration entry.\n     *\n     *\t\tconfig.get( 'name' );\n     *\n     * Deep configurations can be retrieved by separating each part with a dot.\n     *\n     *\t\tconfig.get( 'toolbar.collapsed' );\n     *\n     * @param {String} name The configuration name. Configuration names are case-sensitive.\n     * @returns {*} The configuration value or `undefined` if the configuration entry was not found.\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(name) {\n      return this._getFromSource(this._config, name);\n    }\n    /**\n     * Saves passed configuration to the specified target (nested object).\n     *\n     * @private\n     * @param {Object} target Nested config object.\n     * @param {String|Object} name The configuration name or an object from which take properties as\n     * configuration entries. Configuration names are case-sensitive.\n     * @param {*} value The configuration value. Used if a name is passed.\n     * @param {Boolean} [isDefine=false] Define if passed configuration should overwrite existing one.\n     */\n\n  }, {\n    key: \"_setToTarget\",\n    value: function _setToTarget(target, name, value) {\n      var isDefine = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      // In case of an object, iterate through it and call `_setToTarget` again for each property.\n      if (isPlainObject(name)) {\n        this._setObjectToTarget(target, name, isDefine);\n\n        return;\n      } // The configuration name should be split into parts if it has dots. E.g. `resize.width` -> [`resize`, `width`].\n\n\n      var parts = name.split('.'); // Take the name of the configuration out of the parts. E.g. `resize.width` -> `width`.\n\n      name = parts.pop(); // Iterate over parts to check if currently stored configuration has proper structure.\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = parts[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var part = _step.value;\n\n          // If there is no object for specified part then create one.\n          if (!isPlainObject(target[part])) {\n            target[part] = {};\n          } // Nested object becomes a target.\n\n\n          target = target[part];\n        } // In case of value is an object.\n\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      if (isPlainObject(value)) {\n        // We take care of proper config structure.\n        if (!isPlainObject(target[name])) {\n          target[name] = {};\n        }\n\n        target = target[name]; // And iterate through this object calling `_setToTarget` again for each property.\n\n        this._setObjectToTarget(target, value, isDefine);\n\n        return;\n      } // Do nothing if we are defining configuration for non empty name.\n\n\n      if (isDefine && typeof target[name] != 'undefined') {\n        return;\n      }\n\n      target[name] = value;\n    }\n    /**\n     * Get specified configuration from specified source (nested object).\n     *\n     * @private\n     * @param {Object} source level of nested object.\n     * @param {String} name The configuration name. Configuration names are case-sensitive.\n     * @returns {*} The configuration value or `undefined` if the configuration entry was not found.\n     */\n\n  }, {\n    key: \"_getFromSource\",\n    value: function _getFromSource(source, name) {\n      // The configuration name should be split into parts if it has dots. E.g. `resize.width` -> [`resize`, `width`].\n      var parts = name.split('.'); // Take the name of the configuration out of the parts. E.g. `resize.width` -> `width`.\n\n      name = parts.pop(); // Iterate over parts to check if currently stored configuration has proper structure.\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = parts[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var part = _step2.value;\n\n          if (!isPlainObject(source[part])) {\n            source = null;\n            break;\n          } // Nested object becomes a source.\n\n\n          source = source[part];\n        } // Always returns undefined for non existing configuration.\n\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return source ? cloneConfig(source[name]) : undefined;\n    }\n    /**\n     * Iterates through passed object and calls {@link #_setToTarget} method with object key and value for each property.\n     *\n     * @private\n     * @param {Object} target Nested config object.\n     * @param {Object} configuration Configuration data set\n     * @param {Boolean} [isDefine] Defines if passed configuration is default configuration or not.\n     */\n\n  }, {\n    key: \"_setObjectToTarget\",\n    value: function _setObjectToTarget(target, configuration, isDefine) {\n      var _this = this;\n\n      Object.keys(configuration).forEach(function (key) {\n        _this._setToTarget(target, key, configuration[key], isDefine);\n      });\n    }\n  }]);\n\n  return Config;\n}(); // Clones configuration object or value.\n// @param {*} source Source configuration\n// @returns {*} Cloned configuration value.\n\n\nexport { Config as default };\n\nfunction cloneConfig(source) {\n  return cloneDeepWith(source, leaveDOMReferences);\n} // A customizer function for cloneDeepWith.\n// It will leave references to DOM Elements instead of cloning them.\n//\n// @param {*} value\n// @returns {Element|undefined}\n\n\nfunction leaveDOMReferences(value) {\n  return isElement(value) ? value : undefined;\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/spy\n */\n\n/**\n * Creates a spy function (ala Sinon.js) that can be used to inspect call to it.\n *\n * The following are the present features:\n *\n * * spy.called: property set to `true` if the function has been called at least once.\n *\n * @returns {Function} The spy function.\n */\nfunction spy() {\n  return function spy() {\n    spy.called = true;\n  };\n}\n\nexport default spy;","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/eventinfo\n */\nimport spy from './spy';\n/**\n * The event object passed to event callbacks. It is used to provide information about the event as well as a tool to\n * manipulate it.\n */\n\nvar EventInfo =\n/**\n * @param {Object} source The emitter.\n * @param {String} name The event name.\n */\nfunction EventInfo(source, name) {\n  _classCallCheck(this, EventInfo);\n\n  /**\n   * The object that fired the event.\n   *\n   * @readonly\n   * @member {Object}\n   */\n  this.source = source;\n  /**\n   * The event name.\n   *\n   * @readonly\n   * @member {String}\n   */\n\n  this.name = name;\n  /**\n   * Path this event has followed. See {@link module:utils/emittermixin~EmitterMixin#delegate}.\n   *\n   * @readonly\n   * @member {Array.<Object>}\n   */\n\n  this.path = []; // The following methods are defined in the constructor because they must be re-created per instance.\n\n  /**\n   * Stops the event emitter to call further callbacks for this event interaction.\n   *\n   * @method #stop\n   */\n\n  this.stop = spy();\n  /**\n   * Removes the current callback from future interactions of this event.\n   *\n   * @method #off\n   */\n\n  this.off = spy();\n  /**\n   * The value which will be returned by {@link module:utils/emittermixin~EmitterMixin#fire}.\n   *\n   * It's `undefined` by default and can be changed by an event listener:\n   *\n   *\t\tdataController.fire( 'getSelectedContent', ( evt ) => {\n   *\t\t\t// This listener will make `dataController.fire( 'getSelectedContent' )`\n   *\t\t\t// always return an empty DocumentFragment.\n   *\t\t\tevt.return = new DocumentFragment();\n   *\n   *\t\t\t// Make sure no other listeners are executed.\n   *\t\t\tevt.stop();\n   *\t\t} );\n   *\n   * @member #return\n   */\n};\n\nexport { EventInfo as default };","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/uid\n */\n\n/**\n * Returns a unique id. This id consist of an 'e' character and a randomly generated string of 32 aphanumeric characters.\n * Each character in uid string represents a hexadecimal digit (base 16).\n *\n * @returns {String} A hexadecimal number representing the id.\n */\nexport default function uid() {\n  var uuid = 'e'; // Make sure that id does not start with number.\n\n  for (var i = 0; i < 8; i++) {\n    uuid += Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  }\n\n  return uuid;\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/priorities\n */\n\n/**\n * String representing a priority value.\n *\n * @typedef {'highest'|'high'|'normal'|'low'|'lowest'} module:utils/priorities~PriorityString\n */\n\n/**\n * Provides group of constants to use instead of hardcoding numeric priority values.\n *\n * @namespace\n */\nvar priorities = {\n  /**\n   * Converts a string with priority name to it's numeric value. If `Number` is given, it just returns it.\n   *\n   * @static\n   * @param {module:utils/priorities~PriorityString|Number} priority Priority to convert.\n   * @returns {Number} Converted priority.\n   */\n  get: function get(priority) {\n    if (typeof priority != 'number') {\n      return this[priority] || this.normal;\n    } else {\n      return priority;\n    }\n  },\n  highest: 100000,\n  high: 1000,\n  normal: 0,\n  low: -1000,\n  lowest: -100000\n};\nexport default priorities;","function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/emittermixin\n */\nimport EventInfo from './eventinfo';\nimport uid from './uid';\nimport priorities from './priorities'; // To check if component is loaded more than once.\n\nimport './version';\n\nvar _listeningTo = Symbol('listeningTo');\n\nvar _emitterId = Symbol('emitterId');\n/**\n * Mixin that injects the {@link ~Emitter events API} into its host.\n *\n * @mixin EmitterMixin\n * @implements module:utils/emittermixin~Emitter\n */\n\n\nvar EmitterMixin = {\n  /**\n   * @inheritDoc\n   */\n  on: function on(event, callback) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    this.listenTo(this, event, callback, options);\n  },\n\n  /**\n   * @inheritDoc\n   */\n  once: function once(event, callback, options) {\n    var wasFired = false;\n\n    var onceCallback = function onceCallback(event) {\n      // Ensure the callback is called only once even if the callback itself leads to re-firing the event\n      // (which would call the callback again).\n      if (!wasFired) {\n        wasFired = true; // Go off() at the first call.\n\n        event.off(); // Go with the original callback.\n\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        callback.call.apply(callback, [this, event].concat(args));\n      }\n    }; // Make a similar on() call, simply replacing the callback.\n\n\n    this.listenTo(this, event, onceCallback, options);\n  },\n\n  /**\n   * @inheritDoc\n   */\n  off: function off(event, callback) {\n    this.stopListening(this, event, callback);\n  },\n\n  /**\n   * @inheritDoc\n   */\n  listenTo: function listenTo(emitter, event, callback) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var emitterInfo, eventCallbacks; // _listeningTo contains a list of emitters that this object is listening to.\n    // This list has the following format:\n    //\n    // _listeningTo: {\n    //     emitterId: {\n    //         emitter: emitter,\n    //         callbacks: {\n    //             event1: [ callback1, callback2, ... ]\n    //             ....\n    //         }\n    //     },\n    //     ...\n    // }\n\n    if (!this[_listeningTo]) {\n      this[_listeningTo] = {};\n    }\n\n    var emitters = this[_listeningTo];\n\n    if (!_getEmitterId(emitter)) {\n      _setEmitterId(emitter);\n    }\n\n    var emitterId = _getEmitterId(emitter);\n\n    if (!(emitterInfo = emitters[emitterId])) {\n      emitterInfo = emitters[emitterId] = {\n        emitter: emitter,\n        callbacks: {}\n      };\n    }\n\n    if (!(eventCallbacks = emitterInfo.callbacks[event])) {\n      eventCallbacks = emitterInfo.callbacks[event] = [];\n    }\n\n    eventCallbacks.push(callback); // Finally register the callback to the event.\n\n    createEventNamespace(emitter, event);\n    var lists = getCallbacksListsForNamespace(emitter, event);\n    var priority = priorities.get(options.priority);\n    var callbackDefinition = {\n      callback: callback,\n      priority: priority\n    }; // Add the callback to all callbacks list.\n\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = lists[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var callbacks = _step.value;\n        // Add the callback to the list in the right priority position.\n        var added = false;\n\n        for (var i = 0; i < callbacks.length; i++) {\n          if (callbacks[i].priority < priority) {\n            callbacks.splice(i, 0, callbackDefinition);\n            added = true;\n            break;\n          }\n        } // Add at the end, if right place was not found.\n\n\n        if (!added) {\n          callbacks.push(callbackDefinition);\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n          _iterator[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  },\n\n  /**\n   * @inheritDoc\n   */\n  stopListening: function stopListening(emitter, event, callback) {\n    var emitters = this[_listeningTo];\n\n    var emitterId = emitter && _getEmitterId(emitter);\n\n    var emitterInfo = emitters && emitterId && emitters[emitterId];\n    var eventCallbacks = emitterInfo && event && emitterInfo.callbacks[event]; // Stop if nothing has been listened.\n\n    if (!emitters || emitter && !emitterInfo || event && !eventCallbacks) {\n      return;\n    } // All params provided. off() that single callback.\n\n\n    if (callback) {\n      removeCallback(emitter, event, callback);\n    } // Only `emitter` and `event` provided. off() all callbacks for that event.\n    else if (eventCallbacks) {\n        while (callback = eventCallbacks.pop()) {\n          removeCallback(emitter, event, callback);\n        }\n\n        delete emitterInfo.callbacks[event];\n      } // Only `emitter` provided. off() all events for that emitter.\n      else if (emitterInfo) {\n          for (event in emitterInfo.callbacks) {\n            this.stopListening(emitter, event);\n          }\n\n          delete emitters[emitterId];\n        } // No params provided. off() all emitters.\n        else {\n            for (emitterId in emitters) {\n              this.stopListening(emitters[emitterId].emitter);\n            }\n\n            delete this[_listeningTo];\n          }\n  },\n\n  /**\n   * @inheritDoc\n   */\n  fire: function fire(eventOrInfo) {\n    var eventInfo = eventOrInfo instanceof EventInfo ? eventOrInfo : new EventInfo(this, eventOrInfo);\n    var event = eventInfo.name;\n    var callbacks = getCallbacksForEvent(this, event); // Record that the event passed this emitter on its path.\n\n    eventInfo.path.push(this); // Handle event listener callbacks first.\n\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    if (callbacks) {\n      // Arguments passed to each callback.\n      var callbackArgs = [eventInfo].concat(args); // Copying callbacks array is the easiest and most secure way of preventing infinite loops, when event callbacks\n      // are added while processing other callbacks. Previous solution involved adding counters (unique ids) but\n      // failed if callbacks were added to the queue before currently processed callback.\n      // If this proves to be too inefficient, another method is to change `.on()` so callbacks are stored if same\n      // event is currently processed. Then, `.fire()` at the end, would have to add all stored events.\n\n      callbacks = Array.from(callbacks);\n\n      for (var i = 0; i < callbacks.length; i++) {\n        callbacks[i].callback.apply(this, callbackArgs); // Remove the callback from future requests if off() has been called.\n\n        if (eventInfo.off.called) {\n          // Remove the called mark for the next calls.\n          delete eventInfo.off.called;\n          removeCallback(this, event, callbacks[i].callback);\n        } // Do not execute next callbacks if stop() was called.\n\n\n        if (eventInfo.stop.called) {\n          break;\n        }\n      }\n    } // Delegate event to other emitters if needed.\n\n\n    if (this._delegations) {\n      var destinations = this._delegations.get(event);\n\n      var passAllDestinations = this._delegations.get('*');\n\n      if (destinations) {\n        fireDelegatedEvents(destinations, eventInfo, args);\n      }\n\n      if (passAllDestinations) {\n        fireDelegatedEvents(passAllDestinations, eventInfo, args);\n      }\n    }\n\n    return eventInfo[\"return\"];\n  },\n\n  /**\n   * @inheritDoc\n   */\n  delegate: function delegate() {\n    var _this = this;\n\n    for (var _len3 = arguments.length, events = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      events[_key3] = arguments[_key3];\n    }\n\n    return {\n      to: function to(emitter, nameOrFunction) {\n        if (!_this._delegations) {\n          _this._delegations = new Map();\n        } // Originally there was a for..of loop which unfortunately caused an error in Babel that didn't allow\n        // build an application. See: https://github.com/ckeditor/ckeditor5-react/issues/40.\n\n\n        events.forEach(function (eventName) {\n          var destinations = _this._delegations.get(eventName);\n\n          if (!destinations) {\n            _this._delegations.set(eventName, new Map([[emitter, nameOrFunction]]));\n          } else {\n            destinations.set(emitter, nameOrFunction);\n          }\n        });\n      }\n    };\n  },\n\n  /**\n   * @inheritDoc\n   */\n  stopDelegating: function stopDelegating(event, emitter) {\n    if (!this._delegations) {\n      return;\n    }\n\n    if (!event) {\n      this._delegations.clear();\n    } else if (!emitter) {\n      this._delegations[\"delete\"](event);\n    } else {\n      var destinations = this._delegations.get(event);\n\n      if (destinations) {\n        destinations[\"delete\"](emitter);\n      }\n    }\n  }\n};\nexport default EmitterMixin;\n/**\n * Emitter/listener interface.\n *\n * Can be easily implemented by a class by mixing the {@link module:utils/emittermixin~EmitterMixin} mixin.\n *\n * @interface Emitter\n */\n\n/**\n * Registers a callback function to be executed when an event is fired.\n *\n * Shorthand for {@link #listenTo `this.listenTo( this, event, callback, options )`} (it makes the emitter\n * listen on itself).\n *\n * @method #on\n * @param {String} event The name of the event.\n * @param {Function} callback The function to be called on event.\n * @param {Object} [options={}] Additional options.\n * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of this event callback. The higher\n * the priority value the sooner the callback will be fired. Events having the same priority are called in the\n * order they were added.\n */\n\n/**\n * Registers a callback function to be executed on the next time the event is fired only. This is similar to\n * calling {@link #on} followed by {@link #off} in the callback.\n *\n * @method #once\n * @param {String} event The name of the event.\n * @param {Function} callback The function to be called on event.\n * @param {Object} [options={}] Additional options.\n * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of this event callback. The higher\n * the priority value the sooner the callback will be fired. Events having the same priority are called in the\n * order they were added.\n */\n\n/**\n * Stops executing the callback on the given event.\n * Shorthand for {@link #stopListening `this.stopListening( this, event, callback )`}.\n *\n * @method #off\n * @param {String} event The name of the event.\n * @param {Function} callback The function to stop being called.\n */\n\n/**\n * Registers a callback function to be executed when an event is fired in a specific (emitter) object.\n *\n * Events can be grouped in namespaces using `:`.\n * When namespaced event is fired, it additionally fires all callbacks for that namespace.\n *\n *\t\t// myEmitter.on( ... ) is a shorthand for myEmitter.listenTo( myEmitter, ... ).\n *\t\tmyEmitter.on( 'myGroup', genericCallback );\n *\t\tmyEmitter.on( 'myGroup:myEvent', specificCallback );\n *\n *\t\t// genericCallback is fired.\n *\t\tmyEmitter.fire( 'myGroup' );\n *\t\t// both genericCallback and specificCallback are fired.\n *\t\tmyEmitter.fire( 'myGroup:myEvent' );\n *\t\t// genericCallback is fired even though there are no callbacks for \"foo\".\n *\t\tmyEmitter.fire( 'myGroup:foo' );\n *\n * An event callback can {@link module:utils/eventinfo~EventInfo#stop stop the event} and\n * set the {@link module:utils/eventinfo~EventInfo#return return value} of the {@link #fire} method.\n *\n * @method #listenTo\n * @param {module:utils/emittermixin~Emitter} emitter The object that fires the event.\n * @param {String} event The name of the event.\n * @param {Function} callback The function to be called on event.\n * @param {Object} [options={}] Additional options.\n * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of this event callback. The higher\n * the priority value the sooner the callback will be fired. Events having the same priority are called in the\n * order they were added.\n */\n\n/**\n * Stops listening for events. It can be used at different levels:\n *\n * * To stop listening to a specific callback.\n * * To stop listening to a specific event.\n * * To stop listening to all events fired by a specific object.\n * * To stop listening to all events fired by all objects.\n *\n * @method #stopListening\n * @param {module:utils/emittermixin~Emitter} [emitter] The object to stop listening to. If omitted, stops it for all objects.\n * @param {String} [event] (Requires the `emitter`) The name of the event to stop listening to. If omitted, stops it\n * for all events from `emitter`.\n * @param {Function} [callback] (Requires the `event`) The function to be removed from the call list for the given\n * `event`.\n */\n\n/**\n * Fires an event, executing all callbacks registered for it.\n *\n * The first parameter passed to callbacks is an {@link module:utils/eventinfo~EventInfo} object,\n * followed by the optional `args` provided in the `fire()` method call.\n *\n * @method #fire\n * @param {String|module:utils/eventinfo~EventInfo} eventOrInfo The name of the event or `EventInfo` object if event is delegated.\n * @param {...*} [args] Additional arguments to be passed to the callbacks.\n * @returns {*} By default the method returns `undefined`. However, the return value can be changed by listeners\n * through modification of the {@link module:utils/eventinfo~EventInfo#return `evt.return`}'s property (the event info\n * is the first param of every callback).\n */\n\n/**\n * Delegates selected events to another {@link module:utils/emittermixin~Emitter}. For instance:\n *\n *\t\temitterA.delegate( 'eventX' ).to( emitterB );\n *\t\temitterA.delegate( 'eventX', 'eventY' ).to( emitterC );\n *\n * then `eventX` is delegated (fired by) `emitterB` and `emitterC` along with `data`:\n *\n *\t\temitterA.fire( 'eventX', data );\n *\n * and `eventY` is delegated (fired by) `emitterC` along with `data`:\n *\n *\t\temitterA.fire( 'eventY', data );\n *\n * @method #delegate\n * @param {...String} events Event names that will be delegated to another emitter.\n * @returns {module:utils/emittermixin~EmitterMixinDelegateChain}\n */\n\n/**\n * Stops delegating events. It can be used at different levels:\n *\n * * To stop delegating all events.\n * * To stop delegating a specific event to all emitters.\n * * To stop delegating a specific event to a specific emitter.\n *\n * @method #stopDelegating\n * @param {String} [event] The name of the event to stop delegating. If omitted, stops it all delegations.\n * @param {module:utils/emittermixin~Emitter} [emitter] (requires `event`) The object to stop delegating a particular event to.\n * If omitted, stops delegation of `event` to all emitters.\n */\n\n/**\n * Checks if `listeningEmitter` listens to an emitter with given `listenedToEmitterId` and if so, returns that emitter.\n * If not, returns `null`.\n *\n * @protected\n * @param {module:utils/emittermixin~EmitterMixin} listeningEmitter Emitter that listens.\n * @param {String} listenedToEmitterId Unique emitter id of emitter listened to.\n * @returns {module:utils/emittermixin~EmitterMixin|null}\n */\n\nexport function _getEmitterListenedTo(listeningEmitter, listenedToEmitterId) {\n  if (listeningEmitter[_listeningTo] && listeningEmitter[_listeningTo][listenedToEmitterId]) {\n    return listeningEmitter[_listeningTo][listenedToEmitterId].emitter;\n  }\n\n  return null;\n}\n/**\n * Sets emitter's unique id.\n *\n * **Note:** `_emitterId` can be set only once.\n *\n * @protected\n * @param {module:utils/emittermixin~EmitterMixin} emitter Emitter for which id will be set.\n * @param {String} [id] Unique id to set. If not passed, random unique id will be set.\n */\n\nexport function _setEmitterId(emitter, id) {\n  if (!emitter[_emitterId]) {\n    emitter[_emitterId] = id || uid();\n  }\n}\n/**\n * Returns emitter's unique id.\n *\n * @protected\n * @param {module:utils/emittermixin~EmitterMixin} emitter Emitter which id will be returned.\n */\n\nexport function _getEmitterId(emitter) {\n  return emitter[_emitterId];\n} // Gets the internal `_events` property of the given object.\n// `_events` property store all lists with callbacks for registered event names.\n// If there were no events registered on the object, empty `_events` object is created.\n\nfunction getEvents(source) {\n  if (!source._events) {\n    Object.defineProperty(source, '_events', {\n      value: {}\n    });\n  }\n\n  return source._events;\n} // Creates event node for generic-specific events relation architecture.\n\n\nfunction makeEventNode() {\n  return {\n    callbacks: [],\n    childEvents: []\n  };\n} // Creates an architecture for generic-specific events relation.\n// If needed, creates all events for given eventName, i.e. if the first registered event\n// is foo:bar:abc, it will create foo:bar:abc, foo:bar and foo event and tie them together.\n// It also copies callbacks from more generic events to more specific events when\n// specific events are created.\n\n\nfunction createEventNamespace(source, eventName) {\n  var events = getEvents(source); // First, check if the event we want to add to the structure already exists.\n\n  if (events[eventName]) {\n    // If it exists, we don't have to do anything.\n    return;\n  } // In other case, we have to create the structure for the event.\n  // Note, that we might need to create intermediate events too.\n  // I.e. if foo:bar:abc is being registered and we only have foo in the structure,\n  // we need to also register foo:bar.\n  // Currently processed event name.\n\n\n  var name = eventName; // Name of the event that is a child event for currently processed event.\n\n  var childEventName = null; // Array containing all newly created specific events.\n\n  var newEventNodes = []; // While loop can't check for ':' index because we have to handle generic events too.\n  // In each loop, we truncate event name, going from the most specific name to the generic one.\n  // I.e. foo:bar:abc -> foo:bar -> foo.\n\n  while (name !== '') {\n    if (events[name]) {\n      // If the currently processed event name is already registered, we can be sure\n      // that it already has all the structure created, so we can break the loop here\n      // as no more events need to be registered.\n      break;\n    } // If this event is not yet registered, create a new object for it.\n\n\n    events[name] = makeEventNode(); // Add it to the array with newly created events.\n\n    newEventNodes.push(events[name]); // Add previously processed event name as a child of this event.\n\n    if (childEventName) {\n      events[name].childEvents.push(childEventName);\n    }\n\n    childEventName = name; // If `.lastIndexOf()` returns -1, `.substr()` will return '' which will break the loop.\n\n    name = name.substr(0, name.lastIndexOf(':'));\n  }\n\n  if (name !== '') {\n    // If name is not empty, we found an already registered event that was a parent of the\n    // event we wanted to register.\n    // Copy that event's callbacks to newly registered events.\n    for (var _i = 0, _newEventNodes = newEventNodes; _i < _newEventNodes.length; _i++) {\n      var node = _newEventNodes[_i];\n      node.callbacks = events[name].callbacks.slice();\n    } // Add last newly created event to the already registered event.\n\n\n    events[name].childEvents.push(childEventName);\n  }\n} // Gets an array containing callbacks list for a given event and it's more specific events.\n// I.e. if given event is foo:bar and there is also foo:bar:abc event registered, this will\n// return callback list of foo:bar and foo:bar:abc (but not foo).\n\n\nfunction getCallbacksListsForNamespace(source, eventName) {\n  var eventNode = getEvents(source)[eventName];\n\n  if (!eventNode) {\n    return [];\n  }\n\n  var callbacksLists = [eventNode.callbacks];\n\n  for (var i = 0; i < eventNode.childEvents.length; i++) {\n    var childCallbacksLists = getCallbacksListsForNamespace(source, eventNode.childEvents[i]);\n    callbacksLists = callbacksLists.concat(childCallbacksLists);\n  }\n\n  return callbacksLists;\n} // Get the list of callbacks for a given event, but only if there any callbacks have been registered.\n// If there are no callbacks registered for given event, it checks if this is a specific event and looks\n// for callbacks for it's more generic version.\n\n\nfunction getCallbacksForEvent(source, eventName) {\n  var event;\n\n  if (!source._events || !(event = source._events[eventName]) || !event.callbacks.length) {\n    // There are no callbacks registered for specified eventName.\n    // But this could be a specific-type event that is in a namespace.\n    if (eventName.indexOf(':') > -1) {\n      // If the eventName is specific, try to find callback lists for more generic event.\n      return getCallbacksForEvent(source, eventName.substr(0, eventName.lastIndexOf(':')));\n    } else {\n      // If this is a top-level generic event, return null;\n      return null;\n    }\n  }\n\n  return event.callbacks;\n} // Fires delegated events for given map of destinations.\n//\n// @private\n// * @param {Map.<utils.Emitter>} destinations A map containing `[ {@link utils.Emitter}, \"event name\" ]` pair destinations.\n// * @param {utils.EventInfo} eventInfo The original event info object.\n// * @param {Array.<*>} fireArgs Arguments the original event was fired with.\n\n\nfunction fireDelegatedEvents(destinations, eventInfo, fireArgs) {\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = destinations[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var _step2$value = _slicedToArray(_step2.value, 2),\n          emitter = _step2$value[0],\n          name = _step2$value[1];\n\n      if (!name) {\n        name = eventInfo.name;\n      } else if (typeof name == 'function') {\n        name = name(eventInfo.name);\n      }\n\n      var delegatedInfo = new EventInfo(eventInfo.source, name);\n      delegatedInfo.path = _toConsumableArray(eventInfo.path);\n      emitter.fire.apply(emitter, [delegatedInfo].concat(_toConsumableArray(fireArgs)));\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n        _iterator2[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n} // Removes callback from emitter for given event.\n//\n// @param {module:utils/emittermixin~Emitter} emitter\n// @param {String} event\n// @param {Function} callback\n\n\nfunction removeCallback(emitter, event, callback) {\n  var lists = getCallbacksListsForNamespace(emitter, event);\n  var _iteratorNormalCompletion3 = true;\n  var _didIteratorError3 = false;\n  var _iteratorError3 = undefined;\n\n  try {\n    for (var _iterator3 = lists[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n      var callbacks = _step3.value;\n\n      for (var i = 0; i < callbacks.length; i++) {\n        if (callbacks[i].callback == callback) {\n          // Remove the callback from the list (fixing the next index).\n          callbacks.splice(i, 1);\n          i--;\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError3 = true;\n    _iteratorError3 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n        _iterator3[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError3) {\n        throw _iteratorError3;\n      }\n    }\n  }\n}\n/**\n * The return value of {@link ~EmitterMixin#delegate}.\n *\n * @interface module:utils/emittermixin~EmitterMixinDelegateChain\n */\n\n/**\n * Selects destination for {@link module:utils/emittermixin~EmitterMixin#delegate} events.\n *\n * @method #to\n * @param {module:utils/emittermixin~Emitter} emitter An `EmitterMixin` instance which is the destination for delegated events.\n * @param {String|Function} [nameOrFunction] A custom event name or function which converts the original name string.\n */","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/mix\n */\n\n/**\n * Copies enumerable properties and symbols from the objects given as 2nd+ parameters to the\n * prototype of first object (a constructor).\n *\n *\t\tclass Editor {\n *\t\t\t...\n *\t\t}\n *\n *\t\tconst SomeMixin = {\n *\t\t\ta() {\n *\t\t\t\treturn 'a';\n *\t\t\t}\n *\t\t};\n *\n *\t\tmix( Editor, SomeMixin, ... );\n *\n *\t\tnew Editor().a(); // -> 'a'\n *\n * Note: Properties which already exist in the base class will not be overriden.\n *\n * @param {Function} [baseClass] Class which prototype will be extended.\n * @param {Object} [...mixins] Objects from which to get properties.\n */\nexport default function mix(baseClass) {\n  for (var _len = arguments.length, mixins = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    mixins[_key - 1] = arguments[_key];\n  }\n\n  mixins.forEach(function (mixin) {\n    Object.getOwnPropertyNames(mixin).concat(Object.getOwnPropertySymbols(mixin)).forEach(function (key) {\n      if (key in baseClass.prototype) {\n        return;\n      }\n\n      var sourceDescriptor = Object.getOwnPropertyDescriptor(mixin, key);\n      sourceDescriptor.enumerable = false;\n      Object.defineProperty(baseClass.prototype, key, sourceDescriptor);\n    });\n  });\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/comparearrays\n */\n\n/**\n * Compares how given arrays relate to each other. One array can be: same as another array, prefix of another array\n * or completely different. If arrays are different, first index at which they differ is returned. Otherwise,\n * a flag specifying the relation is returned. Flags are negative numbers, so whenever a number >= 0 is returned\n * it means that arrays differ.\n *\n *\t\tcompareArrays( [ 0, 2 ], [ 0, 2 ] );\t\t// 'same'\n *\t\tcompareArrays( [ 0, 2 ], [ 0, 2, 1 ] );\t\t// 'prefix'\n *\t\tcompareArrays( [ 0, 2 ], [ 0 ] );\t\t\t// 'extension'\n *\t\tcompareArrays( [ 0, 2 ], [ 1, 2 ] );\t\t// 0\n *\t\tcompareArrays( [ 0, 2 ], [ 0, 1 ] );\t\t// 1\n *\n * @param {Array} a Array that is compared.\n * @param {Array} b Array to compare with.\n * @returns {module:utils/comparearrays~ArrayRelation} How array `a` is related to `b`.\n */\nexport default function compareArrays(a, b) {\n  var minLen = Math.min(a.length, b.length);\n\n  for (var i = 0; i < minLen; i++) {\n    if (a[i] != b[i]) {\n      // The arrays are different.\n      return i;\n    }\n  } // Both arrays were same at all points.\n\n\n  if (a.length == b.length) {\n    // If their length is also same, they are the same.\n    return 'same';\n  } else if (a.length < b.length) {\n    // Compared array is shorter so it is a prefix of the other array.\n    return 'prefix';\n  } else {\n    // Compared array is longer so it is an extension of the other array.\n    return 'extension';\n  }\n}\n/**\n * @typedef {'extension'|'same'|'prefix'} module:utils/comparearrays~ArrayRelation\n */","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nexport default clone;\n","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/node\n */\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\nimport { clone } from 'lodash-es'; // To check if component is loaded more than once.\n\nimport '@ckeditor/ckeditor5-utils/src/version';\n/**\n * Abstract tree view node class.\n *\n * This is an abstract class. Its constructor should not be used directly.\n * Use the {@link module:engine/view/element~Element} class to create view elements\n * or {@link module:engine/view/text~Text} class to create view text nodes.\n *\n * @abstract\n */\n\nvar Node =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a tree view node.\n   */\n  function Node() {\n    _classCallCheck(this, Node);\n\n    /**\n     * Parent element. Null by default. Set by {@link module:engine/view/element~Element#_insertChild}.\n     *\n     * @readonly\n     * @member {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment|null}\n     */\n    this.parent = null;\n  }\n  /**\n   * Index of the node in the parent element or null if the node has no parent.\n   *\n   * Accessing this property throws an error if this node's parent element does not contain it.\n   * This means that view tree got broken.\n   *\n   * @readonly\n   * @type {Number|null}\n   */\n\n\n  _createClass(Node, [{\n    key: \"getPath\",\n\n    /**\n     * Gets a path to the node. The path is an array containing indices of consecutive ancestors of this node,\n     * beginning from {@link module:engine/view/node~Node#root root}, down to this node's index.\n     *\n     *\t\tconst abc = downcastWriter.createText( 'abc' );\n     *\t\tconst foo = downcastWriter.createText( 'foo' );\n     *\t\tconst h1 = downcastWriter.createElement( 'h1', null, downcastWriter.createText( 'header' ) );\n     *\t\tconst p = downcastWriter.createElement( 'p', null, [ abc, foo ] );\n     *\t\tconst div = downcastWriter.createElement( 'div', null, [ h1, p ] );\n     *\t\tfoo.getPath(); // Returns [ 1, 3 ]. `foo` is in `p` which is in `div`. `p` starts at offset 1, while `foo` at 3.\n     *\t\th1.getPath(); // Returns [ 0 ].\n     *\t\tdiv.getPath(); // Returns [].\n     *\n     * @returns {Array.<Number>} The path.\n     */\n    value: function getPath() {\n      var path = [];\n      var node = this; // eslint-disable-line consistent-this\n\n      while (node.parent) {\n        path.unshift(node.index);\n        node = node.parent;\n      }\n\n      return path;\n    }\n    /**\n     * Returns ancestors array of this node.\n     *\n     * @param {Object} options Options object.\n     * @param {Boolean} [options.includeSelf=false] When set to `true` this node will be also included in parent's array.\n     * @param {Boolean} [options.parentFirst=false] When set to `true`, array will be sorted from node's parent to root element,\n     * otherwise root element will be the first item in the array.\n     * @returns {Array} Array with ancestors.\n     */\n\n  }, {\n    key: \"getAncestors\",\n    value: function getAncestors() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        includeSelf: false,\n        parentFirst: false\n      };\n      var ancestors = [];\n      var parent = options.includeSelf ? this : this.parent;\n\n      while (parent) {\n        ancestors[options.parentFirst ? 'push' : 'unshift'](parent);\n        parent = parent.parent;\n      }\n\n      return ancestors;\n    }\n    /**\n     * Returns a {@link module:engine/view/element~Element} or {@link module:engine/view/documentfragment~DocumentFragment}\n     * which is a common ancestor of both nodes.\n     *\n     * @param {module:engine/view/node~Node} node The second node.\n     * @param {Object} options Options object.\n     * @param {Boolean} [options.includeSelf=false] When set to `true` both nodes will be considered \"ancestors\" too.\n     * Which means that if e.g. node A is inside B, then their common ancestor will be B.\n     * @returns {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment|null}\n     */\n\n  }, {\n    key: \"getCommonAncestor\",\n    value: function getCommonAncestor(node) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var ancestorsA = this.getAncestors(options);\n      var ancestorsB = node.getAncestors(options);\n      var i = 0;\n\n      while (ancestorsA[i] == ancestorsB[i] && ancestorsA[i]) {\n        i++;\n      }\n\n      return i === 0 ? null : ancestorsA[i - 1];\n    }\n    /**\n     * Returns whether this node is before given node. `false` is returned if nodes are in different trees (for example,\n     * in different {@link module:engine/view/documentfragment~DocumentFragment}s).\n     *\n     * @param {module:engine/view/node~Node} node Node to compare with.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isBefore\",\n    value: function isBefore(node) {\n      // Given node is not before this node if they are same.\n      if (this == node) {\n        return false;\n      } // Return `false` if it is impossible to compare nodes.\n\n\n      if (this.root !== node.root) {\n        return false;\n      }\n\n      var thisPath = this.getPath();\n      var nodePath = node.getPath();\n      var result = compareArrays(thisPath, nodePath);\n\n      switch (result) {\n        case 'prefix':\n          return true;\n\n        case 'extension':\n          return false;\n\n        default:\n          return thisPath[result] < nodePath[result];\n      }\n    }\n    /**\n     * Returns whether this node is after given node. `false` is returned if nodes are in different trees (for example,\n     * in different {@link module:engine/view/documentfragment~DocumentFragment}s).\n     *\n     * @param {module:engine/view/node~Node} node Node to compare with.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isAfter\",\n    value: function isAfter(node) {\n      // Given node is not before this node if they are same.\n      if (this == node) {\n        return false;\n      } // Return `false` if it is impossible to compare nodes.\n\n\n      if (this.root !== node.root) {\n        return false;\n      } // In other cases, just check if the `node` is before, and return the opposite.\n\n\n      return !this.isBefore(node);\n    }\n    /**\n     * Removes node from parent.\n     *\n     * @protected\n     */\n\n  }, {\n    key: \"_remove\",\n    value: function _remove() {\n      this.parent._removeChildren(this.index);\n    }\n    /**\n     * @protected\n     * @param {module:engine/view/document~ChangeType} type Type of the change.\n     * @param {module:engine/view/node~Node} node Changed node.\n     * @fires change\n     */\n\n  }, {\n    key: \"_fireChange\",\n    value: function _fireChange(type, node) {\n      this.fire('change:' + type, node);\n\n      if (this.parent) {\n        this.parent._fireChange(type, node);\n      }\n    }\n    /**\n     * Custom toJSON method to solve child-parent circular dependencies.\n     *\n     * @returns {Object} Clone of this object with the parent property removed.\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = clone(this); // Due to circular references we need to remove parent reference.\n\n      delete json.parent;\n      return json;\n    }\n    /**\n     * Checks whether this view object is of the given type.\n     *\n     * This method is useful when processing view tree objects that are of unknown type. For example, a function\n     * may return {@link module:engine/view/documentfragment~DocumentFragment} or {@link module:engine/view/node~Node}\n     * that can be either text node or element. This method can be used to check what kind of object is returned.\n     *\n     *\t\tobj.is( 'node' ); // true for any node, false for document fragment and text fragment\n     *\t\tobj.is( 'documentFragment' ); // true for document fragment, false for any node\n     *\t\tobj.is( 'element' ); // true for any element, false for text node or document fragment\n     *\t\tobj.is( 'element', 'p' ); // true only for element which name is 'p'\n     *\t\tobj.is( 'p' ); // shortcut for obj.is( 'element', 'p' )\n     *\t\tobj.is( 'text' ); // true for text node, false for element and document fragment\n     *\n     * @param {'element'|'containerElement'|'attributeElement'|'emptyElement'|'uiElement'|\n     * 'rootElement'|'documentFragment'|'text'|'textProxy'} type\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"is\",\n    value: function is(type) {\n      return type == 'node';\n    }\n    /**\n     * Clones this node.\n     *\n     * @protected\n     * @method #_clone\n     * @returns {module:engine/view/node~Node} Clone of this node.\n     */\n\n    /**\n     * Checks if provided node is similar to this node.\n     *\n     * @method #isSimilar\n     * @returns {Boolean} True if nodes are similar.\n     */\n\n  }, {\n    key: \"index\",\n    get: function get() {\n      var pos;\n\n      if (!this.parent) {\n        return null;\n      } // No parent or child doesn't exist in parent's children.\n\n\n      if ((pos = this.parent.getChildIndex(this)) == -1) {\n        /**\n         * The node's parent does not contain this node. It means that the document tree is corrupted.\n         *\n         * @error view-node-not-found-in-parent\n         */\n        throw new CKEditorError('view-node-not-found-in-parent: The node\\'s parent does not contain this node.', this);\n      }\n\n      return pos;\n    }\n    /**\n     * Node's next sibling, or `null` if it is the last child.\n     *\n     * @readonly\n     * @type {module:engine/view/node~Node|null}\n     */\n\n  }, {\n    key: \"nextSibling\",\n    get: function get() {\n      var index = this.index;\n      return index !== null && this.parent.getChild(index + 1) || null;\n    }\n    /**\n     * Node's previous sibling, or `null` if it is the first child.\n     *\n     * @readonly\n     * @type {module:engine/view/node~Node|null}\n     */\n\n  }, {\n    key: \"previousSibling\",\n    get: function get() {\n      var index = this.index;\n      return index !== null && this.parent.getChild(index - 1) || null;\n    }\n    /**\n     * Top-most ancestor of the node. If the node has no parent it is the root itself.\n     *\n     * @readonly\n     * @type {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment}\n     */\n\n  }, {\n    key: \"root\",\n    get: function get() {\n      var root = this; // eslint-disable-line consistent-this\n\n      while (root.parent) {\n        root = root.parent;\n      }\n\n      return root;\n    }\n    /**\n     * {@link module:engine/view/document~Document View document} that owns this node, or `null` if the node is inside\n     * {@link module:engine/view/documentfragment~DocumentFragment document fragment}.\n     *\n     * @readonly\n     * @type {module:engine/view/document~Document|null}\n     */\n\n  }, {\n    key: \"document\",\n    get: function get() {\n      // Parent might be Node, null or DocumentFragment.\n      if (this.parent instanceof Node) {\n        return this.parent.document;\n      } else {\n        return null;\n      }\n    }\n  }]);\n\n  return Node;\n}();\n/**\n * Fired when list of {@link module:engine/view/element~Element elements} children changes.\n *\n * Change event is bubbled – it is fired on all ancestors.\n *\n * @event change:children\n * @param {module:engine/view/node~Node} changedNode\n */\n\n/**\n * Fired when list of {@link module:engine/view/element~Element elements} attributes changes.\n *\n * Change event is bubbled – it is fired on all ancestors.\n *\n * @event change:attributes\n * @param {module:engine/view/node~Node} changedNode\n */\n\n/**\n * Fired when {@link module:engine/view/text~Text text nodes} data changes.\n *\n * Change event is bubbled – it is fired on all ancestors.\n *\n * @event change:text\n * @param {module:engine/view/node~Node} changedNode\n */\n\n/**\n * @event change\n */\n\n\nexport { Node as default };\nmix(Node, EmitterMixin);","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/text\n */\nimport Node from './node';\n/**\n * Tree view text node.\n *\n * The constructor of this class shouldn't be used directly. To create new Text instances\n * use the {@link module:engine/view/downcastwriter~DowncastWriter#createText `DowncastWriter#createText()`}\n * method when working on data downcasted from the model or the\n * {@link module:engine/view/upcastwriter~UpcastWriter#createText `UpcastWriter#createText()`}\n * method when working on non-semantic views.\n *\n * @extends module:engine/view/node~Node\n */\n\nvar Text =\n/*#__PURE__*/\nfunction (_Node) {\n  _inherits(Text, _Node);\n\n  /**\n   * Creates a tree view text node.\n   *\n   * @protected\n   * @param {String} data The text's data.\n   */\n  function Text(data) {\n    var _this;\n\n    _classCallCheck(this, Text);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Text).call(this));\n    /**\n     * The text content.\n     *\n     * Setting the data fires the {@link module:engine/view/node~Node#event:change:text change event}.\n     *\n     * @protected\n     * @member {String} module:engine/view/text~Text#_textData\n     */\n\n    _this._textData = data;\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(Text, [{\n    key: \"is\",\n    value: function is(type) {\n      return type == 'text' || _get(_getPrototypeOf(Text.prototype), \"is\", this).call(this, type);\n    }\n    /**\n     * The text content.\n     *\n     * @readonly\n     * @type {String}\n     */\n\n  }, {\n    key: \"isSimilar\",\n\n    /**\n     * Checks if this text node is similar to other text node.\n     * Both nodes should have the same data to be considered as similar.\n     *\n     * @param {module:engine/view/text~Text} otherNode Node to check if it is same as this node.\n     * @returns {Boolean}\n     */\n    value: function isSimilar(otherNode) {\n      if (!(otherNode instanceof Text)) {\n        return false;\n      }\n\n      return this === otherNode || this.data === otherNode.data;\n    }\n    /**\n     * Clones this node.\n     *\n     * @protected\n     * @returns {module:engine/view/text~Text} Text node that is a clone of this node.\n     */\n\n  }, {\n    key: \"_clone\",\n    value: function _clone() {\n      return new Text(this.data);\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this._textData;\n    }\n    /**\n     * This getter is required when using the addition assignment operator on protected property:\n     *\n     *\t\tconst foo = downcastWriter.createText( 'foo' );\n     *\t\tconst bar = downcastWriter.createText( 'bar' );\n     *\n     *\t\tfoo._data += bar.data;   // executes: `foo._data = foo._data + bar.data`\n     *\t\tconsole.log( foo.data ); // prints: 'foobar'\n     *\n     * If the protected getter didn't exist, `foo._data` will return `undefined` and result of the merge will be invalid.\n     *\n     * @protected\n     * @type {String}\n     */\n\n  }, {\n    key: \"_data\",\n    get: function get() {\n      return this.data;\n    }\n    /**\n     * Sets data and fires the {@link module:engine/view/node~Node#event:change:text change event}.\n     *\n     * @protected\n     * @fires change:text\n     * @param {String} data New data for the text node.\n     */\n    ,\n    set: function set(data) {\n      this._fireChange('text', this);\n\n      this._textData = data;\n    }\n  }]);\n\n  return Text;\n}(Node);\n\nexport { Text as default };","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/textproxy\n */\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * TextProxy is a wrapper for substring of {@link module:engine/view/text~Text}. Instance of this class is created by\n * {@link module:engine/view/treewalker~TreeWalker} when only a part of {@link module:engine/view/text~Text} needs to be returned.\n *\n * `TextProxy` has an API similar to {@link module:engine/view/text~Text Text} and allows to do most of the common tasks performed\n * on view nodes.\n *\n * **Note:** Some `TextProxy` instances may represent whole text node, not just a part of it.\n * See {@link module:engine/view/textproxy~TextProxy#isPartial}.\n *\n * **Note:** `TextProxy` is a readonly interface.\n *\n * **Note:** `TextProxy` instances are created on the fly basing on the current state of parent {@link module:engine/view/text~Text}.\n * Because of this it is highly unrecommended to store references to `TextProxy instances because they might get\n * invalidated due to operations on Document. Also TextProxy is not a {@link module:engine/view/node~Node} so it can not be\n * inserted as a child of {@link module:engine/view/element~Element}.\n *\n * `TextProxy` instances are created by {@link module:engine/view/treewalker~TreeWalker view tree walker}. You should not need to create\n * an instance of this class by your own.\n */\n\nvar TextProxy =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a text proxy.\n   *\n   * @protected\n   * @param {module:engine/view/text~Text} textNode Text node which part is represented by this text proxy.\n   * @param {Number} offsetInText Offset in {@link module:engine/view/textproxy~TextProxy#textNode text node}\n   * from which the text proxy starts.\n   * @param {Number} length Text proxy length, that is how many text node's characters, starting from `offsetInText` it represents.\n   * @constructor\n   */\n  function TextProxy(textNode, offsetInText, length) {\n    _classCallCheck(this, TextProxy);\n\n    /**\n     * Reference to the {@link module:engine/view/text~Text} element which TextProxy is a substring.\n     *\n     * @readonly\n     * @member {module:engine/view/text~Text} module:engine/view/textproxy~TextProxy#textNode\n     */\n    this.textNode = textNode;\n\n    if (offsetInText < 0 || offsetInText > textNode.data.length) {\n      /**\n       * Given offsetInText value is incorrect.\n       *\n       * @error view-textproxy-wrong-offsetintext\n       */\n      throw new CKEditorError('view-textproxy-wrong-offsetintext: Given offsetInText value is incorrect.', this);\n    }\n\n    if (length < 0 || offsetInText + length > textNode.data.length) {\n      /**\n       * Given length value is incorrect.\n       *\n       * @error view-textproxy-wrong-length\n       */\n      throw new CKEditorError('view-textproxy-wrong-length: Given length value is incorrect.', this);\n    }\n    /**\n     * Text data represented by this text proxy.\n     *\n     * @readonly\n     * @member {String} module:engine/view/textproxy~TextProxy#data\n     */\n\n\n    this.data = textNode.data.substring(offsetInText, offsetInText + length);\n    /**\n     * Offset in the `textNode` where this `TextProxy` instance starts.\n     *\n     * @readonly\n     * @member {Number} module:engine/view/textproxy~TextProxy#offsetInText\n     */\n\n    this.offsetInText = offsetInText;\n  }\n  /**\n   * Offset size of this node.\n   *\n   * @readonly\n   * @type {Number}\n   */\n\n\n  _createClass(TextProxy, [{\n    key: \"is\",\n\n    /**\n     * Checks whether given view tree object is of given type.\n     *\n     * Read more in {@link module:engine/view/node~Node#is}.\n     *\n     * @param {String} type\n     * @returns {Boolean}\n     */\n    value: function is(type) {\n      return type == 'textProxy';\n    }\n    /**\n     * Returns ancestors array of this text proxy.\n     *\n     * @param {Object} options Options object.\n     * @param {Boolean} [options.includeSelf=false] When set to `true` {#textNode} will be also included in parent's array.\n     * @param {Boolean} [options.parentFirst=false] When set to `true`, array will be sorted from text proxy parent to\n     * root element, otherwise root element will be the first item in the array.\n     * @returns {Array} Array with ancestors.\n     */\n\n  }, {\n    key: \"getAncestors\",\n    value: function getAncestors() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        includeSelf: false,\n        parentFirst: false\n      };\n      var ancestors = [];\n      var parent = options.includeSelf ? this.textNode : this.parent;\n\n      while (parent !== null) {\n        ancestors[options.parentFirst ? 'push' : 'unshift'](parent);\n        parent = parent.parent;\n      }\n\n      return ancestors;\n    }\n  }, {\n    key: \"offsetSize\",\n    get: function get() {\n      return this.data.length;\n    }\n    /**\n     * Flag indicating whether `TextProxy` instance covers only part of the original {@link module:engine/view/text~Text text node}\n     * (`true`) or the whole text node (`false`).\n     *\n     * This is `false` when text proxy starts at the very beginning of {@link module:engine/view/textproxy~TextProxy#textNode textNode}\n     * ({@link module:engine/view/textproxy~TextProxy#offsetInText offsetInText} equals `0`) and text proxy sizes is equal to\n     * text node size.\n     *\n     * @readonly\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isPartial\",\n    get: function get() {\n      return this.data.length !== this.textNode.data.length;\n    }\n    /**\n     * Parent of this text proxy, which is same as parent of text node represented by this text proxy.\n     *\n     * @readonly\n     * @type {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment|null}\n     */\n\n  }, {\n    key: \"parent\",\n    get: function get() {\n      return this.textNode.parent;\n    }\n    /**\n     * Root of this text proxy, which is same as root of text node represented by this text proxy.\n     *\n     * @readonly\n     * @type {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment}\n     */\n\n  }, {\n    key: \"root\",\n    get: function get() {\n      return this.textNode.root;\n    }\n    /**\n     * {@link module:engine/view/document~Document View document} that owns this text proxy, or `null` if the text proxy is inside\n     * {@link module:engine/view/documentfragment~DocumentFragment document fragment}.\n     *\n     * @readonly\n     * @type {module:engine/view/document~Document|null}\n     */\n\n  }, {\n    key: \"document\",\n    get: function get() {\n      return this.textNode.document;\n    }\n  }]);\n\n  return TextProxy;\n}();\n\nexport { TextProxy as default };","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/objecttomap\n */\n\n/**\n * Transforms object to map.\n *\n *\t\tconst map = objectToMap( { 'foo': 1, 'bar': 2 } );\n *\t\tmap.get( 'foo' ); // 1\n *\n * @param {Object} obj Object to transform.\n * @returns {Map} Map created from object.\n */\nexport default function objectToMap(obj) {\n  var map = new Map();\n\n  for (var key in obj) {\n    map.set(key, obj[key]);\n  }\n\n  return map;\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/isiterable\n */\n\n/**\n * Checks if value implements iterator interface.\n *\n * @param {*} value The value to check.\n * @returns {Boolean} True if value implements iterator interface.\n */\nexport default function isIterable(value) {\n  return !!(value && value[Symbol.iterator]);\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/matcher\n */\n\n/**\n * View matcher class.\n * Instance of this class can be used to find {@link module:engine/view/element~Element elements} that match given pattern.\n */\nvar Matcher =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates new instance of Matcher.\n   *\n   * @param {String|RegExp|Object} [pattern] Match patterns. See {@link module:engine/view/matcher~Matcher#add add method} for\n   * more information.\n   */\n  function Matcher() {\n    _classCallCheck(this, Matcher);\n\n    /**\n     * @private\n     * @type {Array<String|RegExp|Object>}\n     */\n    this._patterns = [];\n    this.add.apply(this, arguments);\n  }\n  /**\n   * Adds pattern or patterns to matcher instance.\n   *\n   *\t\t// String.\n   *\t\tmatcher.add( 'div' );\n   *\n   *\t\t// Regular expression.\n   *\t\tmatcher.add( /^\\w/ );\n   *\n   *\t\t// Single class.\n   *\t\tmatcher.add( {\n   *\t\t\tclasses: 'foobar'\n   *\t\t} );\n   *\n   * See {@link module:engine/view/matcher~MatcherPattern} for more examples.\n   *\n   * Multiple patterns can be added in one call:\n   *\n   * \t\tmatcher.add( 'div', { classes: 'foobar' } );\n   *\n   * @param {Object|String|RegExp|Function} pattern Object describing pattern details. If string or regular expression\n   * is provided it will be used to match element's name. Pattern can be also provided in a form\n   * of a function - then this function will be called with each {@link module:engine/view/element~Element element} as a parameter.\n   * Function's return value will be stored under `match` key of the object returned from\n   * {@link module:engine/view/matcher~Matcher#match match} or {@link module:engine/view/matcher~Matcher#matchAll matchAll} methods.\n   * @param {String|RegExp} [pattern.name] Name or regular expression to match element's name.\n   * @param {Object} [pattern.attributes] Object with key-value pairs representing attributes to match. Each object key\n   * represents attribute name. Value under that key can be either:\n   * * `true` - then attribute is just required (can be empty),\n   * * a string - then attribute has to be equal, or\n   * * a regular expression - then attribute has to match the expression.\n   * @param {String|RegExp|Array} [pattern.classes] Class name or array of class names to match. Each name can be\n   * provided in a form of string or regular expression.\n   * @param {Object} [pattern.styles] Object with key-value pairs representing styles to match. Each object key\n   * represents style name. Value under that key can be either a string or a regular expression and it will be used\n   * to match style value.\n   */\n\n\n  _createClass(Matcher, [{\n    key: \"add\",\n    value: function add() {\n      for (var _len = arguments.length, pattern = new Array(_len), _key = 0; _key < _len; _key++) {\n        pattern[_key] = arguments[_key];\n      }\n\n      for (var _i = 0, _pattern = pattern; _i < _pattern.length; _i++) {\n        var item = _pattern[_i];\n\n        // String or RegExp pattern is used as element's name.\n        if (typeof item == 'string' || item instanceof RegExp) {\n          item = {\n            name: item\n          };\n        } // Single class name/RegExp can be provided.\n\n\n        if (item.classes && (typeof item.classes == 'string' || item.classes instanceof RegExp)) {\n          item.classes = [item.classes];\n        }\n\n        this._patterns.push(item);\n      }\n    }\n    /**\n     * Matches elements for currently stored patterns. Returns match information about first found\n     * {@link module:engine/view/element~Element element}, otherwise returns `null`.\n     *\n     * Example of returned object:\n     *\n     *\t\t{\n     *\t\t\telement: <instance of found element>,\n     *\t\t\tpattern: <pattern used to match found element>,\n     *\t\t\tmatch: {\n     *\t\t\t\tname: true,\n     *\t\t\t\tattributes: [ 'title', 'href' ],\n     *\t\t\t\tclasses: [ 'foo' ],\n     *\t\t\t\tstyles: [ 'color', 'position' ]\n     *\t\t\t}\n     *\t\t}\n     *\n     * @see module:engine/view/matcher~Matcher#add\n     * @see module:engine/view/matcher~Matcher#matchAll\n     * @param {...module:engine/view/element~Element} element View element to match against stored patterns.\n     * @returns {Object|null} result\n     * @returns {module:engine/view/element~Element} result.element Matched view element.\n     * @returns {Object|String|RegExp|Function} result.pattern Pattern that was used to find matched element.\n     * @returns {Object} result.match Object representing matched element parts.\n     * @returns {Boolean} [result.match.name] True if name of the element was matched.\n     * @returns {Array} [result.match.attributes] Array with matched attribute names.\n     * @returns {Array} [result.match.classes] Array with matched class names.\n     * @returns {Array} [result.match.styles] Array with matched style names.\n     */\n\n  }, {\n    key: \"match\",\n    value: function match() {\n      for (var _len2 = arguments.length, element = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        element[_key2] = arguments[_key2];\n      }\n\n      for (var _i2 = 0, _element = element; _i2 < _element.length; _i2++) {\n        var singleElement = _element[_i2];\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = this._patterns[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var pattern = _step.value;\n            var match = isElementMatching(singleElement, pattern);\n\n            if (match) {\n              return {\n                element: singleElement,\n                pattern: pattern,\n                match: match\n              };\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n              _iterator[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n\n      return null;\n    }\n    /**\n     * Matches elements for currently stored patterns. Returns array of match information with all found\n     * {@link module:engine/view/element~Element elements}. If no element is found - returns `null`.\n     *\n     * @see module:engine/view/matcher~Matcher#add\n     * @see module:engine/view/matcher~Matcher#match\n     * @param {...module:engine/view/element~Element} element View element to match against stored patterns.\n     * @returns {Array.<Object>|null} Array with match information about found elements or `null`. For more information\n     * see {@link module:engine/view/matcher~Matcher#match match method} description.\n     */\n\n  }, {\n    key: \"matchAll\",\n    value: function matchAll() {\n      var results = [];\n\n      for (var _len3 = arguments.length, element = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        element[_key3] = arguments[_key3];\n      }\n\n      for (var _i3 = 0, _element2 = element; _i3 < _element2.length; _i3++) {\n        var singleElement = _element2[_i3];\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = this._patterns[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var pattern = _step2.value;\n            var match = isElementMatching(singleElement, pattern);\n\n            if (match) {\n              results.push({\n                element: singleElement,\n                pattern: pattern,\n                match: match\n              });\n            }\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n              _iterator2[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }\n\n      return results.length > 0 ? results : null;\n    }\n    /**\n     * Returns the name of the element to match if there is exactly one pattern added to the matcher instance\n     * and it matches element name defined by `string` (not `RegExp`). Otherwise, returns `null`.\n     *\n     * @returns {String|null} Element name trying to match.\n     */\n\n  }, {\n    key: \"getElementName\",\n    value: function getElementName() {\n      if (this._patterns.length !== 1) {\n        return null;\n      }\n\n      var pattern = this._patterns[0];\n      var name = pattern.name;\n      return typeof pattern != 'function' && name && !(name instanceof RegExp) ? name : null;\n    }\n  }]);\n\n  return Matcher;\n}(); // Returns match information if {@link module:engine/view/element~Element element} is matching provided pattern.\n// If element cannot be matched to provided pattern - returns `null`.\n//\n// @param {module:engine/view/element~Element} element\n// @param {Object|String|RegExp|Function} pattern\n// @returns {Object|null} Returns object with match information or null if element is not matching.\n\n\nexport { Matcher as default };\n\nfunction isElementMatching(element, pattern) {\n  // If pattern is provided as function - return result of that function;\n  if (typeof pattern == 'function') {\n    return pattern(element);\n  }\n\n  var match = {}; // Check element's name.\n\n  if (pattern.name) {\n    match.name = matchName(pattern.name, element.name);\n\n    if (!match.name) {\n      return null;\n    }\n  } // Check element's attributes.\n\n\n  if (pattern.attributes) {\n    match.attributes = matchAttributes(pattern.attributes, element);\n\n    if (!match.attributes) {\n      return null;\n    }\n  } // Check element's classes.\n\n\n  if (pattern.classes) {\n    match.classes = matchClasses(pattern.classes, element);\n\n    if (!match.classes) {\n      return false;\n    }\n  } // Check element's styles.\n\n\n  if (pattern.styles) {\n    match.styles = matchStyles(pattern.styles, element);\n\n    if (!match.styles) {\n      return false;\n    }\n  }\n\n  return match;\n} // Checks if name can be matched by provided pattern.\n//\n// @param {String|RegExp} pattern\n// @param {String} name\n// @returns {Boolean} Returns `true` if name can be matched, `false` otherwise.\n\n\nfunction matchName(pattern, name) {\n  // If pattern is provided as RegExp - test against this regexp.\n  if (pattern instanceof RegExp) {\n    return pattern.test(name);\n  }\n\n  return pattern === name;\n} // Checks if attributes of provided element can be matched against provided patterns.\n//\n// @param {Object} patterns Object with information about attributes to match. Each key of the object will be\n// used as attribute name. Value of each key can be a string or regular expression to match against attribute value.\n// @param {module:engine/view/element~Element} element Element which attributes will be tested.\n// @returns {Array|null} Returns array with matched attribute names or `null` if no attributes were matched.\n\n\nfunction matchAttributes(patterns, element) {\n  var match = [];\n\n  for (var name in patterns) {\n    var pattern = patterns[name];\n\n    if (element.hasAttribute(name)) {\n      var attribute = element.getAttribute(name);\n\n      if (pattern === true) {\n        match.push(name);\n      } else if (pattern instanceof RegExp) {\n        if (pattern.test(attribute)) {\n          match.push(name);\n        } else {\n          return null;\n        }\n      } else if (attribute === pattern) {\n        match.push(name);\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  return match;\n} // Checks if classes of provided element can be matched against provided patterns.\n//\n// @param {Array.<String|RegExp>} patterns Array of strings or regular expressions to match against element's classes.\n// @param {module:engine/view/element~Element} element Element which classes will be tested.\n// @returns {Array|null} Returns array with matched class names or `null` if no classes were matched.\n\n\nfunction matchClasses(patterns, element) {\n  var match = [];\n  var _iteratorNormalCompletion3 = true;\n  var _didIteratorError3 = false;\n  var _iteratorError3 = undefined;\n\n  try {\n    for (var _iterator3 = patterns[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n      var pattern = _step3.value;\n\n      if (pattern instanceof RegExp) {\n        var classes = element.getClassNames();\n        var _iteratorNormalCompletion4 = true;\n        var _didIteratorError4 = false;\n        var _iteratorError4 = undefined;\n\n        try {\n          for (var _iterator4 = classes[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n            var name = _step4.value;\n\n            if (pattern.test(name)) {\n              match.push(name);\n            }\n          }\n        } catch (err) {\n          _didIteratorError4 = true;\n          _iteratorError4 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion4 && _iterator4[\"return\"] != null) {\n              _iterator4[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError4) {\n              throw _iteratorError4;\n            }\n          }\n        }\n\n        if (match.length === 0) {\n          return null;\n        }\n      } else if (element.hasClass(pattern)) {\n        match.push(pattern);\n      } else {\n        return null;\n      }\n    }\n  } catch (err) {\n    _didIteratorError3 = true;\n    _iteratorError3 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n        _iterator3[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError3) {\n        throw _iteratorError3;\n      }\n    }\n  }\n\n  return match;\n} // Checks if styles of provided element can be matched against provided patterns.\n//\n// @param {Object} patterns Object with information about styles to match. Each key of the object will be\n// used as style name. Value of each key can be a string or regular expression to match against style value.\n// @param {module:engine/view/element~Element} element Element which styles will be tested.\n// @returns {Array|null} Returns array with matched style names or `null` if no styles were matched.\n\n\nfunction matchStyles(patterns, element) {\n  var match = [];\n\n  for (var name in patterns) {\n    var pattern = patterns[name];\n\n    if (element.hasStyle(name)) {\n      var style = element.getStyle(name);\n\n      if (pattern instanceof RegExp) {\n        if (pattern.test(style)) {\n          match.push(name);\n        } else {\n          return null;\n        }\n      } else if (style === pattern) {\n        match.push(name);\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  return match;\n}\n/**\n * An entity that is a valid pattern recognized by a matcher. `MatcherPattern` is used by {@link ~Matcher} to recognize\n * if a view element fits in a group of view elements described by the pattern.\n *\n * `MatcherPattern` can be given as a `String`, a `RegExp`, an `Object` or a `Function`.\n *\n * If `MatcherPattern` is given as a `String` or `RegExp`, it will match any view element that has a matching name:\n *\n *\t\t// Match any element with name equal to 'div'.\n *\t\tconst pattern = 'div';\n *\n *\t\t// Match any element which name starts on 'p'.\n *\t\tconst pattern = /^p/;\n *\n * If `MatcherPattern` is given as an `Object`, all the object's properties will be matched with view element properties.\n *\n *\t\t// Match view element's name.\n *\t\tconst pattern = { name: /^p/ };\n *\n *\t\t// Match view element which has matching attributes.\n *\t\tconst pattern = {\n *\t\t\tattributes: {\n *\t\t\t\ttitle: 'foobar',\t// Attribute title should equal 'foobar'.\n *\t\t\t\tfoo: /^\\w+/,\t\t// Attribute foo should match /^\\w+/ regexp.\n *\t\t\t\tbar: true\t\t\t// Attribute bar should be set (can be empty).\n *\t\t\t}\n *\t\t};\n *\n *\t\t// Match view element which has given class.\n *\t\tconst pattern = {\n *\t\t\tclasses: 'foobar'\n *\t\t};\n *\n *\t\t// Match view element class using regular expression.\n *\t\tconst pattern = {\n *\t\t\tclasses: /foo.../\n *\t\t};\n *\n *\t\t// Multiple classes to match.\n *\t\tconst pattern = {\n *\t\t\tclasses: [ 'baz', 'bar', /foo.../ ]\n *\t\t};\n *\n *\t\t// Match view element which has given styles.\n *\t\tconst pattern = {\n *\t\t\tstyles: {\n *\t\t\t\tposition: 'absolute',\n *\t\t\t\tcolor: /^\\w*blue$/\n *\t\t\t}\n *\t\t};\n *\n *\t\t// Pattern with multiple properties.\n *\t\tconst pattern = {\n *\t\t\tname: 'span',\n *\t\t\tstyles: {\n *\t\t\t\t'font-weight': 'bold'\n *\t\t\t},\n *\t\t\tclasses: 'highlighted'\n *\t\t};\n *\n * If `MatcherPattern` is given as a `Function`, the function takes a view element as a first and only parameter and\n * the function should decide whether that element matches. If so, it should return what part of the view element has been matched.\n * Otherwise, the function should return `null`. The returned result will be included in `match` property of the object\n * returned by {@link ~Matcher#match} call.\n *\n *\t\t// Match an empty <div> element.\n *\t\tconst pattern = element => {\n *\t\t\tif ( element.name == 'div' && element.childCount > 0 ) {\n *\t\t\t\t// Return which part of the element was matched.\n *\t\t\t\treturn { name: true };\n *\t\t\t}\n *\n *\t\t\treturn null;\n *\t\t};\n *\n *\t\t// Match a <p> element with big font (\"heading-like\" element).\n *\t\tconst pattern = element => {\n *\t\t\tif ( element.name == 'p' ) {\n *\t\t\t\tconst fontSize = element.getStyle( 'font-size' );\n *\t\t\t\tconst size = fontSize.match( /(\\d+)/px );\n *\n *\t\t\t\tif ( size && Number( size[ 1 ] ) > 26 ) {\n *\t\t\t\t\treturn { name: true, attribute: [ 'font-size' ] };\n *\t\t\t\t}\n *\t\t\t}\n *\n *\t\t\treturn null;\n *\t\t};\n *\n * `MatcherPattern` is defined in a way that it is a superset of {@link module:engine/view/elementdefinition~ElementDefinition},\n * that is, every `ElementDefinition` also can be used as a `MatcherPattern`.\n *\n * @typedef {String|RegExp|Object|Function} module:engine/view/matcher~MatcherPattern\n *\n * @property {String|RegExp} [name] View element name to match.\n * @property {String|RegExp|Array.<String|RegExp>} [classes] View element's class name(s) to match.\n * @property {Object} [styles] Object with key-value pairs representing styles to match.\n * Each object key represents style name. Value can be given as `String` or `RegExp`.\n * @property {Object} [attributes] Object with key-value pairs representing attributes to match.\n * Each object key represents attribute name. Value can be given as `String` or `RegExp`.\n */","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/element\n */\nimport Node from './node';\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport objectToMap from '@ckeditor/ckeditor5-utils/src/objecttomap';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\nimport Matcher from './matcher';\nimport { isPlainObject } from 'lodash-es';\n/**\n * View element.\n *\n * The editing engine does not define a fixed semantics of its elements (it is \"DTD-free\").\n * This is why the type of the {@link module:engine/view/element~Element} need to\n * be defined by the feature developer. When creating an element you should use one of the following methods:\n *\n * * {@link module:engine/view/downcastwriter~DowncastWriter#createContainerElement `downcastWriter#createContainerElement()`}\n * in order to create a {@link module:engine/view/containerelement~ContainerElement},\n * * {@link module:engine/view/downcastwriter~DowncastWriter#createAttributeElement `downcastWriter#createAttributeElement()`}\n * in order to create a {@link module:engine/view/attributeelement~AttributeElement},\n * * {@link module:engine/view/downcastwriter~DowncastWriter#createEmptyElement `downcastWriter#createEmptyElement()`}\n * in order to create a {@link module:engine/view/emptyelement~EmptyElement}.\n * * {@link module:engine/view/downcastwriter~DowncastWriter#createUIElement `downcastWriter#createUIElement()`}\n * in order to create a {@link module:engine/view/uielement~UIElement}.\n * * {@link module:engine/view/downcastwriter~DowncastWriter#createEditableElement `downcastWriter#createEditableElement()`}\n * in order to create a {@link module:engine/view/editableelement~EditableElement}.\n *\n * Note that for view elements which are not created from the model, like elements from mutations, paste or\n * {@link module:engine/controller/datacontroller~DataController#set data.set} it is not possible to define the type of the element.\n * In such cases the {@link module:engine/view/upcastwriter~UpcastWriter#createElement `UpcastWriter#createElement()`} method\n * should be used to create generic view elements.\n *\n * @extends module:engine/view/node~Node\n */\n\nvar Element =\n/*#__PURE__*/\nfunction (_Node) {\n  _inherits(Element, _Node);\n\n  /**\n   * Creates a view element.\n   *\n   * Attributes can be passed in various formats:\n   *\n   *\t\tnew Element( 'div', { class: 'editor', contentEditable: 'true' } ); // object\n   *\t\tnew Element( 'div', [ [ 'class', 'editor' ], [ 'contentEditable', 'true' ] ] ); // map-like iterator\n   *\t\tnew Element( 'div', mapOfAttributes ); // map\n   *\n   * @protected\n   * @param {String} name Node name.\n   * @param {Object|Iterable} [attrs] Collection of attributes.\n   * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\n   * A list of nodes to be inserted into created element.\n   */\n  function Element(name, attrs, children) {\n    var _this;\n\n    _classCallCheck(this, Element);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Element).call(this));\n    /**\n     * Name of the element.\n     *\n     * @readonly\n     * @member {String}\n     */\n\n    _this.name = name;\n    /**\n     * Map of attributes, where attributes names are keys and attributes values are values.\n     *\n     * @protected\n     * @member {Map} #_attrs\n     */\n\n    _this._attrs = parseAttributes(attrs);\n    /**\n     * Array of child nodes.\n     *\n     * @protected\n     * @member {Array.<module:engine/view/node~Node>}\n     */\n\n    _this._children = [];\n\n    if (children) {\n      _this._insertChild(0, children);\n    }\n    /**\n     * Set of classes associated with element instance.\n     *\n     * @protected\n     * @member {Set}\n     */\n\n\n    _this._classes = new Set();\n\n    if (_this._attrs.has('class')) {\n      // Remove class attribute and handle it by class set.\n      var classString = _this._attrs.get('class');\n\n      parseClasses(_this._classes, classString);\n\n      _this._attrs[\"delete\"]('class');\n    }\n    /**\n     * Map of styles.\n     *\n     * @protected\n     * @member {Map} module:engine/view/element~Element#_styles\n     */\n\n\n    _this._styles = new Map();\n\n    if (_this._attrs.has('style')) {\n      // Remove style attribute and handle it by styles map.\n      parseInlineStyles(_this._styles, _this._attrs.get('style'));\n\n      _this._attrs[\"delete\"]('style');\n    }\n    /**\n     * Map of custom properties.\n     * Custom properties can be added to element instance, will be cloned but not rendered into DOM.\n     *\n     * @protected\n     * @member {Map}\n     */\n\n\n    _this._customProperties = new Map();\n    return _this;\n  }\n  /**\n   * Number of element's children.\n   *\n   * @readonly\n   * @type {Number}\n   */\n\n\n  _createClass(Element, [{\n    key: \"is\",\n\n    /**\n     * Checks whether this view object is of the given type.\n     *\n     *\t\tobj.is( 'element' ); // true\n     *\t\tobj.is( 'li' ); // true\n     *\t\tobj.is( 'element', 'li' ); // true\n     *\t\tobj.is( 'text' ); // false\n     *\t\tobj.is( 'element', 'img' ); // false\n     *\n     * Read more in {@link module:engine/view/node~Node#is `Node#is()`}.\n     *\n     * @param {String} type\n     * @param {String} [name] Element name.\n     * @returns {Boolean}\n     */\n    value: function is(type) {\n      var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (!name) {\n        return type == 'element' || type == this.name || _get(_getPrototypeOf(Element.prototype), \"is\", this).call(this, type);\n      } else {\n        return type == 'element' && name == this.name;\n      }\n    }\n    /**\n     * Gets child at the given index.\n     *\n     * @param {Number} index Index of child.\n     * @returns {module:engine/view/node~Node} Child node.\n     */\n\n  }, {\n    key: \"getChild\",\n    value: function getChild(index) {\n      return this._children[index];\n    }\n    /**\n     * Gets index of the given child node. Returns `-1` if child node is not found.\n     *\n     * @param {module:engine/view/node~Node} node Child node.\n     * @returns {Number} Index of the child node.\n     */\n\n  }, {\n    key: \"getChildIndex\",\n    value: function getChildIndex(node) {\n      return this._children.indexOf(node);\n    }\n    /**\n     * Gets child nodes iterator.\n     *\n     * @returns {Iterable.<module:engine/view/node~Node>} Child nodes iterator.\n     */\n\n  }, {\n    key: \"getChildren\",\n    value: function getChildren() {\n      return this._children[Symbol.iterator]();\n    }\n    /**\n     * Returns an iterator that contains the keys for attributes. Order of inserting attributes is not preserved.\n     *\n     * @returns {Iterable.<String>} Keys for attributes.\n     */\n\n  }, {\n    key: \"getAttributeKeys\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function getAttributeKeys() {\n      return regeneratorRuntime.wrap(function getAttributeKeys$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(this._classes.size > 0)) {\n                _context.next = 3;\n                break;\n              }\n\n              _context.next = 3;\n              return 'class';\n\n            case 3:\n              if (!(this._styles.size > 0)) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 6;\n              return 'style';\n\n            case 6:\n              return _context.delegateYield(this._attrs.keys(), \"t0\", 7);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, getAttributeKeys, this);\n    })\n    /**\n     * Returns iterator that iterates over this element's attributes.\n     *\n     * Attributes are returned as arrays containing two items. First one is attribute key and second is attribute value.\n     * This format is accepted by native `Map` object and also can be passed in `Node` constructor.\n     *\n     * @returns {Iterable.<*>}\n     */\n\n  }, {\n    key: \"getAttributes\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function getAttributes() {\n      return regeneratorRuntime.wrap(function getAttributes$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.delegateYield(this._attrs.entries(), \"t0\", 1);\n\n            case 1:\n              if (!(this._classes.size > 0)) {\n                _context2.next = 4;\n                break;\n              }\n\n              _context2.next = 4;\n              return ['class', this.getAttribute('class')];\n\n            case 4:\n              if (!(this._styles.size > 0)) {\n                _context2.next = 7;\n                break;\n              }\n\n              _context2.next = 7;\n              return ['style', this.getAttribute('style')];\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, getAttributes, this);\n    })\n    /**\n     * Gets attribute by key. If attribute is not present - returns undefined.\n     *\n     * @param {String} key Attribute key.\n     * @returns {String|undefined} Attribute value.\n     */\n\n  }, {\n    key: \"getAttribute\",\n    value: function getAttribute(key) {\n      if (key == 'class') {\n        if (this._classes.size > 0) {\n          return _toConsumableArray(this._classes).join(' ');\n        }\n\n        return undefined;\n      }\n\n      if (key == 'style') {\n        if (this._styles.size > 0) {\n          var styleString = '';\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = this._styles[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var _step$value = _slicedToArray(_step.value, 2),\n                  property = _step$value[0],\n                  value = _step$value[1];\n\n              styleString += \"\".concat(property, \":\").concat(value, \";\");\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n                _iterator[\"return\"]();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          return styleString;\n        }\n\n        return undefined;\n      }\n\n      return this._attrs.get(key);\n    }\n    /**\n     * Returns a boolean indicating whether an attribute with the specified key exists in the element.\n     *\n     * @param {String} key Attribute key.\n     * @returns {Boolean} `true` if attribute with the specified key exists in the element, false otherwise.\n     */\n\n  }, {\n    key: \"hasAttribute\",\n    value: function hasAttribute(key) {\n      if (key == 'class') {\n        return this._classes.size > 0;\n      }\n\n      if (key == 'style') {\n        return this._styles.size > 0;\n      }\n\n      return this._attrs.has(key);\n    }\n    /**\n     * Checks if this element is similar to other element.\n     * Both elements should have the same name and attributes to be considered as similar. Two similar elements\n     * can contain different set of children nodes.\n     *\n     * @param {module:engine/view/element~Element} otherElement\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isSimilar\",\n    value: function isSimilar(otherElement) {\n      if (!(otherElement instanceof Element)) {\n        return false;\n      } // If exactly the same Element is provided - return true immediately.\n\n\n      if (this === otherElement) {\n        return true;\n      } // Check element name.\n\n\n      if (this.name != otherElement.name) {\n        return false;\n      } // Check number of attributes, classes and styles.\n\n\n      if (this._attrs.size !== otherElement._attrs.size || this._classes.size !== otherElement._classes.size || this._styles.size !== otherElement._styles.size) {\n        return false;\n      } // Check if attributes are the same.\n\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this._attrs[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var _step2$value = _slicedToArray(_step2.value, 2),\n              key = _step2$value[0],\n              value = _step2$value[1];\n\n          if (!otherElement._attrs.has(key) || otherElement._attrs.get(key) !== value) {\n            return false;\n          }\n        } // Check if classes are the same.\n\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this._classes[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var className = _step3.value;\n\n          if (!otherElement._classes.has(className)) {\n            return false;\n          }\n        } // Check if styles are the same.\n\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n            _iterator3[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = this._styles[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var _step4$value = _slicedToArray(_step4.value, 2),\n              property = _step4$value[0],\n              value = _step4$value[1];\n\n          if (!otherElement._styles.has(property) || otherElement._styles.get(property) !== value) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4[\"return\"] != null) {\n            _iterator4[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      return true;\n    }\n    /**\n     * Returns true if class is present.\n     * If more then one class is provided - returns true only when all classes are present.\n     *\n     *\t\telement.hasClass( 'foo' ); // Returns true if 'foo' class is present.\n     *\t\telement.hasClass( 'foo', 'bar' ); // Returns true if 'foo' and 'bar' classes are both present.\n     *\n     * @param {...String} className\n     */\n\n  }, {\n    key: \"hasClass\",\n    value: function hasClass() {\n      for (var _len = arguments.length, className = new Array(_len), _key = 0; _key < _len; _key++) {\n        className[_key] = arguments[_key];\n      }\n\n      for (var _i2 = 0, _className = className; _i2 < _className.length; _i2++) {\n        var name = _className[_i2];\n\n        if (!this._classes.has(name)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n    /**\n     * Returns iterator that contains all class names.\n     *\n     * @returns {Iterable.<String>}\n     */\n\n  }, {\n    key: \"getClassNames\",\n    value: function getClassNames() {\n      return this._classes.keys();\n    }\n    /**\n     * Returns style value for given property.\n     * Undefined is returned if style does not exist.\n     *\n     * @param {String} property\n     * @returns {String|undefined}\n     */\n\n  }, {\n    key: \"getStyle\",\n    value: function getStyle(property) {\n      return this._styles.get(property);\n    }\n    /**\n     * Returns iterator that contains all style names.\n     *\n     * @returns {Iterable.<String>}\n     */\n\n  }, {\n    key: \"getStyleNames\",\n    value: function getStyleNames() {\n      return this._styles.keys();\n    }\n    /**\n     * Returns true if style keys are present.\n     * If more then one style property is provided - returns true only when all properties are present.\n     *\n     *\t\telement.hasStyle( 'color' ); // Returns true if 'border-top' style is present.\n     *\t\telement.hasStyle( 'color', 'border-top' ); // Returns true if 'color' and 'border-top' styles are both present.\n     *\n     * @param {...String} property\n     */\n\n  }, {\n    key: \"hasStyle\",\n    value: function hasStyle() {\n      for (var _len2 = arguments.length, property = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        property[_key2] = arguments[_key2];\n      }\n\n      for (var _i3 = 0, _property = property; _i3 < _property.length; _i3++) {\n        var name = _property[_i3];\n\n        if (!this._styles.has(name)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n    /**\n     * Returns ancestor element that match specified pattern.\n     * Provided patterns should be compatible with {@link module:engine/view/matcher~Matcher Matcher} as it is used internally.\n     *\n     * @see module:engine/view/matcher~Matcher\n     * @param {Object|String|RegExp|Function} patterns Patterns used to match correct ancestor.\n     * See {@link module:engine/view/matcher~Matcher}.\n     * @returns {module:engine/view/element~Element|null} Found element or `null` if no matching ancestor was found.\n     */\n\n  }, {\n    key: \"findAncestor\",\n    value: function findAncestor() {\n      for (var _len3 = arguments.length, patterns = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        patterns[_key3] = arguments[_key3];\n      }\n\n      var matcher = _construct(Matcher, patterns);\n\n      var parent = this.parent;\n\n      while (parent) {\n        if (matcher.match(parent)) {\n          return parent;\n        }\n\n        parent = parent.parent;\n      }\n\n      return null;\n    }\n    /**\n     * Returns the custom property value for the given key.\n     *\n     * @param {String|Symbol} key\n     * @returns {*}\n     */\n\n  }, {\n    key: \"getCustomProperty\",\n    value: function getCustomProperty(key) {\n      return this._customProperties.get(key);\n    }\n    /**\n     * Returns an iterator which iterates over this element's custom properties.\n     * Iterator provides `[ key, value ]` pairs for each stored property.\n     *\n     * @returns {Iterable.<*>}\n     */\n\n  }, {\n    key: \"getCustomProperties\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function getCustomProperties() {\n      return regeneratorRuntime.wrap(function getCustomProperties$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              return _context3.delegateYield(this._customProperties.entries(), \"t0\", 1);\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, getCustomProperties, this);\n    })\n    /**\n     * Returns identity string based on element's name, styles, classes and other attributes.\n     * Two elements that {@link #isSimilar are similar} will have same identity string.\n     * It has the following format:\n     *\n     *\t\t'name class=\"class1,class2\" style=\"style1:value1;style2:value2\" attr1=\"val1\" attr2=\"val2\"'\n    \t *\n     * For example:\n     *\n     *\t\tconst element = writer.createContainerElement( 'foo', {\n     *\t\t\tbanana: '10',\n     *\t\t\tapple: '20',\n     *\t\t\tstyle: 'color: red; border-color: white;',\n     *\t\t\tclass: 'baz'\n     *\t\t} );\n     *\n     *\t\t// returns 'foo class=\"baz\" style=\"border-color:white;color:red\" apple=\"20\" banana=\"10\"'\n     *\t\telement.getIdentity();\n     *\n     * NOTE: Classes, styles and other attributes are sorted alphabetically.\n     *\n     * @returns {String}\n     */\n\n  }, {\n    key: \"getIdentity\",\n    value: function getIdentity() {\n      var classes = Array.from(this._classes).sort().join(',');\n      var styles = Array.from(this._styles).map(function (i) {\n        return \"\".concat(i[0], \":\").concat(i[1]);\n      }).sort().join(';');\n      var attributes = Array.from(this._attrs).map(function (i) {\n        return \"\".concat(i[0], \"=\\\"\").concat(i[1], \"\\\"\");\n      }).sort().join(' ');\n      return this.name + (classes == '' ? '' : \" class=\\\"\".concat(classes, \"\\\"\")) + (styles == '' ? '' : \" style=\\\"\".concat(styles, \"\\\"\")) + (attributes == '' ? '' : \" \".concat(attributes));\n    }\n    /**\n     * Clones provided element.\n     *\n     * @protected\n     * @param {Boolean} [deep=false] If set to `true` clones element and all its children recursively. When set to `false`,\n     * element will be cloned without any children.\n     * @returns {module:engine/view/element~Element} Clone of this element.\n     */\n\n  }, {\n    key: \"_clone\",\n    value: function _clone() {\n      var deep = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var childrenClone = [];\n\n      if (deep) {\n        var _iteratorNormalCompletion5 = true;\n        var _didIteratorError5 = false;\n        var _iteratorError5 = undefined;\n\n        try {\n          for (var _iterator5 = this.getChildren()[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n            var child = _step5.value;\n            childrenClone.push(child._clone(deep));\n          }\n        } catch (err) {\n          _didIteratorError5 = true;\n          _iteratorError5 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion5 && _iterator5[\"return\"] != null) {\n              _iterator5[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError5) {\n              throw _iteratorError5;\n            }\n          }\n        }\n      } // ContainerElement and AttributeElement should be also cloned properly.\n\n\n      var cloned = new this.constructor(this.name, this._attrs, childrenClone); // Classes and styles are cloned separately - this solution is faster than adding them back to attributes and\n      // parse once again in constructor.\n\n      cloned._classes = new Set(this._classes);\n      cloned._styles = new Map(this._styles); // Clone custom properties.\n\n      cloned._customProperties = new Map(this._customProperties); // Clone filler offset method.\n      // We can't define this method in a prototype because it's behavior which\n      // is changed by e.g. toWidget() function from ckeditor5-widget. Perhaps this should be one of custom props.\n\n      cloned.getFillerOffset = this.getFillerOffset;\n      return cloned;\n    }\n    /**\n     * {@link module:engine/view/element~Element#_insertChild Insert} a child node or a list of child nodes at the end of this node\n     * and sets the parent of these nodes to this element.\n     *\n     * @see module:engine/view/downcastwriter~DowncastWriter#insert\n     * @protected\n     * @param {module:engine/view/item~Item|Iterable.<module:engine/view/item~Item>} items Items to be inserted.\n     * @fires module:engine/view/node~Node#change\n     * @returns {Number} Number of appended nodes.\n     */\n\n  }, {\n    key: \"_appendChild\",\n    value: function _appendChild(items) {\n      return this._insertChild(this.childCount, items);\n    }\n    /**\n     * Inserts a child node or a list of child nodes on the given index and sets the parent of these nodes to\n     * this element.\n     *\n     * @see module:engine/view/downcastwriter~DowncastWriter#insert\n     * @protected\n     * @param {Number} index Position where nodes should be inserted.\n     * @param {module:engine/view/item~Item|Iterable.<module:engine/view/item~Item>} items Items to be inserted.\n     * @fires module:engine/view/node~Node#change\n     * @returns {Number} Number of inserted nodes.\n     */\n\n  }, {\n    key: \"_insertChild\",\n    value: function _insertChild(index, items) {\n      this._fireChange('children', this);\n\n      var count = 0;\n      var nodes = normalize(items);\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = nodes[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var node = _step6.value;\n\n          // If node that is being added to this element is already inside another element, first remove it from the old parent.\n          if (node.parent !== null) {\n            node._remove();\n          }\n\n          node.parent = this;\n\n          this._children.splice(index, 0, node);\n\n          index++;\n          count++;\n        }\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6[\"return\"] != null) {\n            _iterator6[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n\n      return count;\n    }\n    /**\n     * Removes number of child nodes starting at the given index and set the parent of these nodes to `null`.\n     *\n     * @see module:engine/view/downcastwriter~DowncastWriter#remove\n     * @protected\n     * @param {Number} index Number of the first node to remove.\n     * @param {Number} [howMany=1] Number of nodes to remove.\n     * @fires module:engine/view/node~Node#change\n     * @returns {Array.<module:engine/view/node~Node>} The array of removed nodes.\n     */\n\n  }, {\n    key: \"_removeChildren\",\n    value: function _removeChildren(index) {\n      var howMany = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n      this._fireChange('children', this);\n\n      for (var i = index; i < index + howMany; i++) {\n        this._children[i].parent = null;\n      }\n\n      return this._children.splice(index, howMany);\n    }\n    /**\n     * Adds or overwrite attribute with a specified key and value.\n     *\n     * @see module:engine/view/downcastwriter~DowncastWriter#setAttribute\n     * @protected\n     * @param {String} key Attribute key.\n     * @param {String} value Attribute value.\n     * @fires module:engine/view/node~Node#change\n     */\n\n  }, {\n    key: \"_setAttribute\",\n    value: function _setAttribute(key, value) {\n      value = String(value);\n\n      this._fireChange('attributes', this);\n\n      if (key == 'class') {\n        parseClasses(this._classes, value);\n      } else if (key == 'style') {\n        parseInlineStyles(this._styles, value);\n      } else {\n        this._attrs.set(key, value);\n      }\n    }\n    /**\n     * Removes attribute from the element.\n     *\n     * @see module:engine/view/downcastwriter~DowncastWriter#removeAttribute\n     * @protected\n     * @param {String} key Attribute key.\n     * @returns {Boolean} Returns true if an attribute existed and has been removed.\n     * @fires module:engine/view/node~Node#change\n     */\n\n  }, {\n    key: \"_removeAttribute\",\n    value: function _removeAttribute(key) {\n      this._fireChange('attributes', this); // Remove class attribute.\n\n\n      if (key == 'class') {\n        if (this._classes.size > 0) {\n          this._classes.clear();\n\n          return true;\n        }\n\n        return false;\n      } // Remove style attribute.\n\n\n      if (key == 'style') {\n        if (this._styles.size > 0) {\n          this._styles.clear();\n\n          return true;\n        }\n\n        return false;\n      } // Remove other attributes.\n\n\n      return this._attrs[\"delete\"](key);\n    }\n    /**\n     * Adds specified class.\n     *\n     *\t\telement._addClass( 'foo' ); // Adds 'foo' class.\n     *\t\telement._addClass( [ 'foo', 'bar' ] ); // Adds 'foo' and 'bar' classes.\n     *\n     * @see module:engine/view/downcastwriter~DowncastWriter#addClass\n     * @protected\n     * @param {Array.<String>|String} className\n     * @fires module:engine/view/node~Node#change\n     */\n\n  }, {\n    key: \"_addClass\",\n    value: function _addClass(className) {\n      var _this2 = this;\n\n      this._fireChange('attributes', this);\n\n      className = Array.isArray(className) ? className : [className];\n      className.forEach(function (name) {\n        return _this2._classes.add(name);\n      });\n    }\n    /**\n     * Removes specified class.\n     *\n     *\t\telement._removeClass( 'foo' );  // Removes 'foo' class.\n     *\t\telement._removeClass( [ 'foo', 'bar' ] ); // Removes both 'foo' and 'bar' classes.\n     *\n     * @see module:engine/view/downcastwriter~DowncastWriter#removeClass\n     * @protected\n     * @param {Array.<String>|String} className\n     * @fires module:engine/view/node~Node#change\n     */\n\n  }, {\n    key: \"_removeClass\",\n    value: function _removeClass(className) {\n      var _this3 = this;\n\n      this._fireChange('attributes', this);\n\n      className = Array.isArray(className) ? className : [className];\n      className.forEach(function (name) {\n        return _this3._classes[\"delete\"](name);\n      });\n    }\n    /**\n     * Adds style to the element.\n     *\n     *\t\telement._setStyle( 'color', 'red' );\n     *\t\telement._setStyle( {\n     *\t\t\tcolor: 'red',\n     *\t\t\tposition: 'fixed'\n     *\t\t} );\n     *\n     * @see module:engine/view/downcastwriter~DowncastWriter#setStyle\n     * @protected\n     * @param {String|Object} property Property name or object with key - value pairs.\n     * @param {String} [value] Value to set. This parameter is ignored if object is provided as the first parameter.\n     * @fires module:engine/view/node~Node#change\n     */\n\n  }, {\n    key: \"_setStyle\",\n    value: function _setStyle(property, value) {\n      this._fireChange('attributes', this);\n\n      if (isPlainObject(property)) {\n        var keys = Object.keys(property);\n\n        for (var _i4 = 0, _keys = keys; _i4 < _keys.length; _i4++) {\n          var key = _keys[_i4];\n\n          this._styles.set(key, property[key]);\n        }\n      } else {\n        this._styles.set(property, value);\n      }\n    }\n    /**\n     * Removes specified style.\n     *\n     *\t\telement._removeStyle( 'color' );  // Removes 'color' style.\n     *\t\telement._removeStyle( [ 'color', 'border-top' ] ); // Removes both 'color' and 'border-top' styles.\n     *\n     * @see module:engine/view/downcastwriter~DowncastWriter#removeStyle\n     * @protected\n     * @param {Array.<String>|String} property\n     * @fires module:engine/view/node~Node#change\n     */\n\n  }, {\n    key: \"_removeStyle\",\n    value: function _removeStyle(property) {\n      var _this4 = this;\n\n      this._fireChange('attributes', this);\n\n      property = Array.isArray(property) ? property : [property];\n      property.forEach(function (name) {\n        return _this4._styles[\"delete\"](name);\n      });\n    }\n    /**\n     * Sets a custom property. Unlike attributes, custom properties are not rendered to the DOM,\n     * so they can be used to add special data to elements.\n     *\n     * @see module:engine/view/downcastwriter~DowncastWriter#setCustomProperty\n     * @protected\n     * @param {String|Symbol} key\n     * @param {*} value\n     */\n\n  }, {\n    key: \"_setCustomProperty\",\n    value: function _setCustomProperty(key, value) {\n      this._customProperties.set(key, value);\n    }\n    /**\n     * Removes the custom property stored under the given key.\n     *\n     * @see module:engine/view/downcastwriter~DowncastWriter#removeCustomProperty\n     * @protected\n     * @param {String|Symbol} key\n     * @returns {Boolean} Returns true if property was removed.\n     */\n\n  }, {\n    key: \"_removeCustomProperty\",\n    value: function _removeCustomProperty(key) {\n      return this._customProperties[\"delete\"](key);\n    }\n    /**\n     * Returns block {@link module:engine/view/filler filler} offset or `null` if block filler is not needed.\n     *\n     * @abstract\n     * @method module:engine/view/element~Element#getFillerOffset\n     */\n\n  }, {\n    key: \"childCount\",\n    get: function get() {\n      return this._children.length;\n    }\n    /**\n     * Is `true` if there are no nodes inside this element, `false` otherwise.\n     *\n     * @readonly\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isEmpty\",\n    get: function get() {\n      return this._children.length === 0;\n    }\n  }]);\n\n  return Element;\n}(Node); // Parses attributes provided to the element constructor before they are applied to an element. If attributes are passed\n// as an object (instead of `Map`), the object is transformed to the map. Attributes with `null` value are removed.\n// Attributes with non-`String` value are converted to `String`.\n//\n// @param {Object|Map} attrs Attributes to parse.\n// @returns {Map} Parsed attributes.\n\n\nexport { Element as default };\n\nfunction parseAttributes(attrs) {\n  if (isPlainObject(attrs)) {\n    attrs = objectToMap(attrs);\n  } else {\n    attrs = new Map(attrs);\n  }\n\n  var _iteratorNormalCompletion7 = true;\n  var _didIteratorError7 = false;\n  var _iteratorError7 = undefined;\n\n  try {\n    for (var _iterator7 = attrs[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n      var _step7$value = _slicedToArray(_step7.value, 2),\n          key = _step7$value[0],\n          value = _step7$value[1];\n\n      if (value === null) {\n        attrs[\"delete\"](key);\n      } else if (typeof value != 'string') {\n        attrs.set(key, String(value));\n      }\n    }\n  } catch (err) {\n    _didIteratorError7 = true;\n    _iteratorError7 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion7 && _iterator7[\"return\"] != null) {\n        _iterator7[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError7) {\n        throw _iteratorError7;\n      }\n    }\n  }\n\n  return attrs;\n} // Parses inline styles and puts property - value pairs into styles map.\n// Styles map is cleared before insertion.\n//\n// @param {Map.<String, String>} stylesMap Map to insert parsed properties and values.\n// @param {String} stylesString Styles to parse.\n\n\nfunction parseInlineStyles(stylesMap, stylesString) {\n  // `null` if no quote was found in input string or last found quote was a closing quote. See below.\n  var quoteType = null;\n  var propertyNameStart = 0;\n  var propertyValueStart = 0;\n  var propertyName = null;\n  stylesMap.clear(); // Do not set anything if input string is empty.\n\n  if (stylesString === '') {\n    return;\n  } // Fix inline styles that do not end with `;` so they are compatible with algorithm below.\n\n\n  if (stylesString.charAt(stylesString.length - 1) != ';') {\n    stylesString = stylesString + ';';\n  } // Seek the whole string for \"special characters\".\n\n\n  for (var i = 0; i < stylesString.length; i++) {\n    var _char = stylesString.charAt(i);\n\n    if (quoteType === null) {\n      // No quote found yet or last found quote was a closing quote.\n      switch (_char) {\n        case ':':\n          // Most of time colon means that property name just ended.\n          // Sometimes however `:` is found inside property value (for example in background image url).\n          if (!propertyName) {\n            // Treat this as end of property only if property name is not already saved.\n            // Save property name.\n            propertyName = stylesString.substr(propertyNameStart, i - propertyNameStart); // Save this point as the start of property value.\n\n            propertyValueStart = i + 1;\n          }\n\n          break;\n\n        case '\"':\n        case '\\'':\n          // Opening quote found (this is an opening quote, because `quoteType` is `null`).\n          quoteType = _char;\n          break;\n\n        case ';':\n          {\n            // Property value just ended.\n            // Use previously stored property value start to obtain property value.\n            var propertyValue = stylesString.substr(propertyValueStart, i - propertyValueStart);\n\n            if (propertyName) {\n              // Save parsed part.\n              stylesMap.set(propertyName.trim(), propertyValue.trim());\n            }\n\n            propertyName = null; // Save this point as property name start. Property name starts immediately after previous property value ends.\n\n            propertyNameStart = i + 1;\n            break;\n          }\n      }\n    } else if (_char === quoteType) {\n      // If a quote char is found and it is a closing quote, mark this fact by `null`-ing `quoteType`.\n      quoteType = null;\n    }\n  }\n} // Parses class attribute and puts all classes into classes set.\n// Classes set s cleared before insertion.\n//\n// @param {Set.<String>} classesSet Set to insert parsed classes.\n// @param {String} classesString String with classes to parse.\n\n\nfunction parseClasses(classesSet, classesString) {\n  var classArray = classesString.split(/\\s+/);\n  classesSet.clear();\n  classArray.forEach(function (name) {\n    return classesSet.add(name);\n  });\n} // Converts strings to Text and non-iterables to arrays.\n//\n// @param {String|module:engine/view/item~Item|Iterable.<String|module:engine/view/item~Item>}\n// @returns {Iterable.<module:engine/view/node~Node>}\n\n\nfunction normalize(nodes) {\n  // Separate condition because string is iterable.\n  if (typeof nodes == 'string') {\n    return [new Text(nodes)];\n  }\n\n  if (!isIterable(nodes)) {\n    nodes = [nodes];\n  } // Array.from to enable .map() on non-arrays.\n\n\n  return Array.from(nodes).map(function (node) {\n    if (typeof node == 'string') {\n      return new Text(node);\n    }\n\n    if (node instanceof TextProxy) {\n      return new Text(node.data);\n    }\n\n    return node;\n  });\n}","function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/containerelement\n */\nimport Element from './element';\n/**\n * Containers are elements which define document structure. They define boundaries for\n * {@link module:engine/view/attributeelement~AttributeElement attributes}. They are mostly used for block elements like `<p>` or `<div>`.\n *\n * Editing engine does not define a fixed HTML DTD. This is why a feature developer needs to choose between various\n * types (container element, {@link module:engine/view/attributeelement~AttributeElement attribute element},\n * {@link module:engine/view/emptyelement~EmptyElement empty element}, etc) when developing a feature.\n *\n * The container element should be your default choice when writing a converter, unless:\n *\n * * this element represents a model text attribute (then use {@link module:engine/view/attributeelement~AttributeElement}),\n * * this is an empty element like `<img>` (then use {@link module:engine/view/emptyelement~EmptyElement}),\n * * this is a root element,\n * * this is a nested editable element (then use  {@link module:engine/view/editableelement~EditableElement}).\n *\n * To create a new container element instance use the\n * {@link module:engine/view/downcastwriter~DowncastWriter#createContainerElement `DowncastWriter#createContainerElement()`}\n * method.\n *\n * @extends module:engine/view/element~Element\n */\n\nvar ContainerElement =\n/*#__PURE__*/\nfunction (_Element) {\n  _inherits(ContainerElement, _Element);\n\n  /**\n   * Creates a container element.\n   *\n   * @see module:engine/view/downcastwriter~DowncastWriter#createContainerElement\n   * @see module:engine/view/element~Element\n   * @protected\n   */\n  function ContainerElement(name, attrs, children) {\n    var _this;\n\n    _classCallCheck(this, ContainerElement);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ContainerElement).call(this, name, attrs, children));\n    /**\n     * Returns block {@link module:engine/view/filler filler} offset or `null` if block filler is not needed.\n     *\n     * @method #getFillerOffset\n     * @returns {Number|null} Block filler offset or `null` if block filler is not needed.\n     */\n\n    _this.getFillerOffset = getFillerOffset;\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(ContainerElement, [{\n    key: \"is\",\n    value: function is(type) {\n      var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (!name) {\n        return type == 'containerElement' || _get(_getPrototypeOf(ContainerElement.prototype), \"is\", this).call(this, type);\n      } else {\n        return type == 'containerElement' && name == this.name || _get(_getPrototypeOf(ContainerElement.prototype), \"is\", this).call(this, type, name);\n      }\n    }\n  }]);\n\n  return ContainerElement;\n}(Element);\n/**\n * Returns block {@link module:engine/view/filler filler} offset or `null` if block filler is not needed.\n *\n * @returns {Number|null} Block filler offset or `null` if block filler is not needed.\n */\n\n\nexport { ContainerElement as default };\nexport function getFillerOffset() {\n  var children = _toConsumableArray(this.getChildren());\n\n  var lastChild = children[this.childCount - 1]; // Block filler is required after a `<br>` if it's the last element in its container. See #1422.\n\n  if (lastChild && lastChild.is('element', 'br')) {\n    return this.childCount;\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var child = _step.value;\n\n      // If there's any non-UI element – don't render the bogus.\n      if (!child.is('uiElement')) {\n        return null;\n      }\n    } // If there are only UI elements – render the bogus at the end of the element.\n\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return this.childCount;\n}","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nexport default identity;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nexport default apply;\n","import apply from './_apply.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nexport default overRest;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nexport default constant;\n","import constant from './constant.js';\nimport defineProperty from './_defineProperty.js';\nimport identity from './identity.js';\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nexport default baseSetToString;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nexport default shortOut;\n","import baseSetToString from './_baseSetToString.js';\nimport shortOut from './_shortOut.js';\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nexport default setToString;\n","import identity from './identity.js';\nimport overRest from './_overRest.js';\nimport setToString from './_setToString.js';\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nexport default baseRest;\n","import eq from './eq.js';\nimport isArrayLike from './isArrayLike.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nexport default isIterateeCall;\n","import baseRest from './_baseRest.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nexport default createAssigner;\n","import copyObject from './_copyObject.js';\nimport createAssigner from './_createAssigner.js';\nimport keysIn from './keysIn.js';\n\n/**\n * This method is like `_.assign` except that it iterates over own and\n * inherited source properties.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias extend\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assign\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n */\nvar assignIn = createAssigner(function(object, source) {\n  copyObject(source, keysIn(source), object);\n});\n\nexport default assignIn;\n","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/observablemixin\n */\nimport EmitterMixin from './emittermixin';\nimport CKEditorError from './ckeditorerror';\nimport { extend, isObject } from 'lodash-es';\nvar observablePropertiesSymbol = Symbol('observableProperties');\nvar boundObservablesSymbol = Symbol('boundObservables');\nvar boundPropertiesSymbol = Symbol('boundProperties');\n/**\n * Mixin that injects the \"observable properties\" and data binding functionality described in the\n * {@link ~Observable} interface.\n *\n * Read more about the concept of observables in the:\n * * {@glink framework/guides/architecture/core-editor-architecture#event-system-and-observables \"Event system and observables\"}\n * section of the {@glink framework/guides/architecture/core-editor-architecture \"Core editor architecture\"} guide,\n * * {@glink framework/guides/deep-dive/observables \"Observables\" deep dive} guide.\n *\n * @mixin ObservableMixin\n * @mixes module:utils/emittermixin~EmitterMixin\n * @implements module:utils/observablemixin~Observable\n */\n\nvar ObservableMixin = {\n  /**\n   * @inheritDoc\n   */\n  set: function set(name, value) {\n    var _this = this;\n\n    // If the first parameter is an Object, iterate over its properties.\n    if (isObject(name)) {\n      Object.keys(name).forEach(function (property) {\n        _this.set(property, name[property]);\n      }, this);\n      return;\n    }\n\n    initObservable(this);\n    var properties = this[observablePropertiesSymbol];\n\n    if (name in this && !properties.has(name)) {\n      /**\n       * Cannot override an existing property.\n       *\n       * This error is thrown when trying to {@link ~Observable#set set} an property with\n       * a name of an already existing property. For example:\n       *\n       *\t\tlet observable = new Model();\n       *\t\tobservable.property = 1;\n       *\t\tobservable.set( 'property', 2 );\t\t\t// throws\n       *\n       *\t\tobservable.set( 'property', 1 );\n       *\t\tobservable.set( 'property', 2 );\t\t\t// ok, because this is an existing property.\n       *\n       * @error observable-set-cannot-override\n       */\n      throw new CKEditorError('observable-set-cannot-override: Cannot override an existing property.', this);\n    }\n\n    Object.defineProperty(this, name, {\n      enumerable: true,\n      configurable: true,\n      get: function get() {\n        return properties.get(name);\n      },\n      set: function set(value) {\n        var oldValue = properties.get(name); // Fire `set` event before the new value will be set to make it possible\n        // to override observable property without affecting `change` event.\n        // See https://github.com/ckeditor/ckeditor5-utils/issues/171.\n\n        var newValue = this.fire('set:' + name, name, value, oldValue);\n\n        if (newValue === undefined) {\n          newValue = value;\n        } // Allow undefined as an initial value like A.define( 'x', undefined ) (#132).\n        // Note: When properties map has no such own property, then its value is undefined.\n\n\n        if (oldValue !== newValue || !properties.has(name)) {\n          properties.set(name, newValue);\n          this.fire('change:' + name, name, newValue, oldValue);\n        }\n      }\n    });\n    this[name] = value;\n  },\n\n  /**\n   * @inheritDoc\n   */\n  bind: function bind() {\n    var _this2 = this;\n\n    for (var _len = arguments.length, bindProperties = new Array(_len), _key = 0; _key < _len; _key++) {\n      bindProperties[_key] = arguments[_key];\n    }\n\n    if (!bindProperties.length || !isStringArray(bindProperties)) {\n      /**\n       * All properties must be strings.\n       *\n       * @error observable-bind-wrong-properties\n       */\n      throw new CKEditorError('observable-bind-wrong-properties: All properties must be strings.', this);\n    }\n\n    if (new Set(bindProperties).size !== bindProperties.length) {\n      /**\n       * Properties must be unique.\n       *\n       * @error observable-bind-duplicate-properties\n       */\n      throw new CKEditorError('observable-bind-duplicate-properties: Properties must be unique.', this);\n    }\n\n    initObservable(this);\n    var boundProperties = this[boundPropertiesSymbol];\n    bindProperties.forEach(function (propertyName) {\n      if (boundProperties.has(propertyName)) {\n        /**\n         * Cannot bind the same property more that once.\n         *\n         * @error observable-bind-rebind\n         */\n        throw new CKEditorError('observable-bind-rebind: Cannot bind the same property more that once.', _this2);\n      }\n    });\n    var bindings = new Map(); // @typedef {Object} Binding\n    // @property {Array} property Property which is bound.\n    // @property {Array} to Array of observable–property components of the binding (`{ observable: ..., property: .. }`).\n    // @property {Array} callback A function which processes `to` components.\n\n    bindProperties.forEach(function (a) {\n      var binding = {\n        property: a,\n        to: []\n      };\n      boundProperties.set(a, binding);\n      bindings.set(a, binding);\n    }); // @typedef {Object} BindChain\n    // @property {Function} to See {@link ~ObservableMixin#_bindTo}.\n    // @property {Function} toMany See {@link ~ObservableMixin#_bindToMany}.\n    // @property {module:utils/observablemixin~Observable} _observable The observable which initializes the binding.\n    // @property {Array} _bindProperties Array of `_observable` properties to be bound.\n    // @property {Array} _to Array of `to()` observable–properties (`{ observable: toObservable, properties: ...toProperties }`).\n    // @property {Map} _bindings Stores bindings to be kept in\n    // {@link ~ObservableMixin#_boundProperties}/{@link ~ObservableMixin#_boundObservables}\n    // initiated in this binding chain.\n\n    return {\n      to: bindTo,\n      toMany: bindToMany,\n      _observable: this,\n      _bindProperties: bindProperties,\n      _to: [],\n      _bindings: bindings\n    };\n  },\n\n  /**\n   * @inheritDoc\n   */\n  unbind: function unbind() {\n    var _this3 = this;\n\n    // Nothing to do here if not inited yet.\n    if (!(observablePropertiesSymbol in this)) {\n      return;\n    }\n\n    var boundProperties = this[boundPropertiesSymbol];\n    var boundObservables = this[boundObservablesSymbol];\n\n    for (var _len2 = arguments.length, unbindProperties = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      unbindProperties[_key2] = arguments[_key2];\n    }\n\n    if (unbindProperties.length) {\n      if (!isStringArray(unbindProperties)) {\n        /**\n         * Properties must be strings.\n         *\n         * @error observable-unbind-wrong-properties\n         */\n        throw new CKEditorError('observable-unbind-wrong-properties: Properties must be strings.', this);\n      }\n\n      unbindProperties.forEach(function (propertyName) {\n        var binding = boundProperties.get(propertyName); // Nothing to do if the binding is not defined\n\n        if (!binding) {\n          return;\n        }\n\n        var toObservable, toProperty, toProperties, toPropertyBindings;\n        binding.to.forEach(function (to) {\n          // TODO: ES6 destructuring.\n          toObservable = to[0];\n          toProperty = to[1];\n          toProperties = boundObservables.get(toObservable);\n          toPropertyBindings = toProperties[toProperty];\n          toPropertyBindings[\"delete\"](binding);\n\n          if (!toPropertyBindings.size) {\n            delete toProperties[toProperty];\n          }\n\n          if (!Object.keys(toProperties).length) {\n            boundObservables[\"delete\"](toObservable);\n\n            _this3.stopListening(toObservable, 'change');\n          }\n        });\n        boundProperties[\"delete\"](propertyName);\n      });\n    } else {\n      boundObservables.forEach(function (bindings, boundObservable) {\n        _this3.stopListening(boundObservable, 'change');\n      });\n      boundObservables.clear();\n      boundProperties.clear();\n    }\n  },\n\n  /**\n   * @inheritDoc\n   */\n  decorate: function decorate(methodName) {\n    var _this4 = this;\n\n    var originalMethod = this[methodName];\n\n    if (!originalMethod) {\n      /**\n       * Cannot decorate an undefined method.\n       *\n       * @error observablemixin-cannot-decorate-undefined\n       * @param {Object} object The object which method should be decorated.\n       * @param {String} methodName Name of the method which does not exist.\n       */\n      throw new CKEditorError('observablemixin-cannot-decorate-undefined: Cannot decorate an undefined method.', this, {\n        object: this,\n        methodName: methodName\n      });\n    }\n\n    this.on(methodName, function (evt, args) {\n      evt[\"return\"] = originalMethod.apply(_this4, args);\n    });\n\n    this[methodName] = function () {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      return this.fire(methodName, args);\n    };\n  }\n};\nextend(ObservableMixin, EmitterMixin);\nexport default ObservableMixin; // Init symbol properties needed to for the observable mechanism to work.\n//\n// @private\n// @param {module:utils/observablemixin~ObservableMixin} observable\n\nfunction initObservable(observable) {\n  // Do nothing if already inited.\n  if (observablePropertiesSymbol in observable) {\n    return;\n  } // The internal hash containing the observable's state.\n  //\n  // @private\n  // @type {Map}\n\n\n  Object.defineProperty(observable, observablePropertiesSymbol, {\n    value: new Map()\n  }); // Map containing bindings to external observables. It shares the binding objects\n  // (`{ observable: A, property: 'a', to: ... }`) with {@link module:utils/observablemixin~ObservableMixin#_boundProperties} and\n  // it is used to observe external observables to update own properties accordingly.\n  // See {@link module:utils/observablemixin~ObservableMixin#bind}.\n  //\n  //\t\tA.bind( 'a', 'b', 'c' ).to( B, 'x', 'y', 'x' );\n  //\t\tconsole.log( A._boundObservables );\n  //\n  //\t\t\tMap( {\n  //\t\t\t\tB: {\n  //\t\t\t\t\tx: Set( [\n  //\t\t\t\t\t\t{ observable: A, property: 'a', to: [ [ B, 'x' ] ] },\n  //\t\t\t\t\t\t{ observable: A, property: 'c', to: [ [ B, 'x' ] ] }\n  //\t\t\t\t\t] ),\n  //\t\t\t\t\ty: Set( [\n  //\t\t\t\t\t\t{ observable: A, property: 'b', to: [ [ B, 'y' ] ] },\n  //\t\t\t\t\t] )\n  //\t\t\t\t}\n  //\t\t\t} )\n  //\n  //\t\tA.bind( 'd' ).to( B, 'z' ).to( C, 'w' ).as( callback );\n  //\t\tconsole.log( A._boundObservables );\n  //\n  //\t\t\tMap( {\n  //\t\t\t\tB: {\n  //\t\t\t\t\tx: Set( [\n  //\t\t\t\t\t\t{ observable: A, property: 'a', to: [ [ B, 'x' ] ] },\n  //\t\t\t\t\t\t{ observable: A, property: 'c', to: [ [ B, 'x' ] ] }\n  //\t\t\t\t\t] ),\n  //\t\t\t\t\ty: Set( [\n  //\t\t\t\t\t\t{ observable: A, property: 'b', to: [ [ B, 'y' ] ] },\n  //\t\t\t\t\t] ),\n  //\t\t\t\t\tz: Set( [\n  //\t\t\t\t\t\t{ observable: A, property: 'd', to: [ [ B, 'z' ], [ C, 'w' ] ], callback: callback }\n  //\t\t\t\t\t] )\n  //\t\t\t\t},\n  //\t\t\t\tC: {\n  //\t\t\t\t\tw: Set( [\n  //\t\t\t\t\t\t{ observable: A, property: 'd', to: [ [ B, 'z' ], [ C, 'w' ] ], callback: callback }\n  //\t\t\t\t\t] )\n  //\t\t\t\t}\n  //\t\t\t} )\n  //\n  // @private\n  // @type {Map}\n\n  Object.defineProperty(observable, boundObservablesSymbol, {\n    value: new Map()\n  }); // Object that stores which properties of this observable are bound and how. It shares\n  // the binding objects (`{ observable: A, property: 'a', to: ... }`) with {@link utils.ObservableMixin#_boundObservables}.\n  // This data structure is a reverse of {@link utils.ObservableMixin#_boundObservables} and it is helpful for\n  // {@link utils.ObservableMixin#unbind}.\n  //\n  // See {@link utils.ObservableMixin#bind}.\n  //\n  //\t\tA.bind( 'a', 'b', 'c' ).to( B, 'x', 'y', 'x' );\n  //\t\tconsole.log( A._boundProperties );\n  //\n  //\t\t\tMap( {\n  //\t\t\t\ta: { observable: A, property: 'a', to: [ [ B, 'x' ] ] },\n  //\t\t\t\tb: { observable: A, property: 'b', to: [ [ B, 'y' ] ] },\n  //\t\t\t\tc: { observable: A, property: 'c', to: [ [ B, 'x' ] ] }\n  //\t\t\t} )\n  //\n  //\t\tA.bind( 'd' ).to( B, 'z' ).to( C, 'w' ).as( callback );\n  //\t\tconsole.log( A._boundProperties );\n  //\n  //\t\t\tMap( {\n  //\t\t\t\ta: { observable: A, property: 'a', to: [ [ B, 'x' ] ] },\n  //\t\t\t\tb: { observable: A, property: 'b', to: [ [ B, 'y' ] ] },\n  //\t\t\t\tc: { observable: A, property: 'c', to: [ [ B, 'x' ] ] },\n  //\t\t\t\td: { observable: A, property: 'd', to: [ [ B, 'z' ], [ C, 'w' ] ], callback: callback }\n  //\t\t\t} )\n  //\n  // @private\n  // @type {Map}\n\n  Object.defineProperty(observable, boundPropertiesSymbol, {\n    value: new Map()\n  });\n} // A chaining for {@link module:utils/observablemixin~ObservableMixin#bind} providing `.to()` interface.\n//\n// @private\n// @param {...[Observable|String|Function]} args Arguments of the `.to( args )` binding.\n\n\nfunction bindTo() {\n  var _this5 = this;\n\n  var parsedArgs = parseBindToArgs.apply(void 0, arguments);\n  var bindingsKeys = Array.from(this._bindings.keys());\n  var numberOfBindings = bindingsKeys.length; // Eliminate A.bind( 'x' ).to( B, C )\n\n  if (!parsedArgs.callback && parsedArgs.to.length > 1) {\n    /**\n     * Binding multiple observables only possible with callback.\n     *\n     * @error observable-bind-no-callback\n     */\n    throw new CKEditorError('observable-bind-to-no-callback: Binding multiple observables only possible with callback.', this);\n  } // Eliminate A.bind( 'x', 'y' ).to( B, callback )\n\n\n  if (numberOfBindings > 1 && parsedArgs.callback) {\n    /**\n     * Cannot bind multiple properties and use a callback in one binding.\n     *\n     * @error observable-bind-to-extra-callback\n     */\n    throw new CKEditorError('observable-bind-to-extra-callback: Cannot bind multiple properties and use a callback in one binding.', this);\n  }\n\n  parsedArgs.to.forEach(function (to) {\n    // Eliminate A.bind( 'x', 'y' ).to( B, 'a' )\n    if (to.properties.length && to.properties.length !== numberOfBindings) {\n      /**\n       * The number of properties must match.\n       *\n       * @error observable-bind-to-properties-length\n       */\n      throw new CKEditorError('observable-bind-to-properties-length: The number of properties must match.', _this5);\n    } // When no to.properties specified, observing source properties instead i.e.\n    // A.bind( 'x', 'y' ).to( B ) -> Observe B.x and B.y\n\n\n    if (!to.properties.length) {\n      to.properties = _this5._bindProperties;\n    }\n  });\n  this._to = parsedArgs.to; // Fill {@link BindChain#_bindings} with callback. When the callback is set there's only one binding.\n\n  if (parsedArgs.callback) {\n    this._bindings.get(bindingsKeys[0]).callback = parsedArgs.callback;\n  }\n\n  attachBindToListeners(this._observable, this._to); // Update observable._boundProperties and observable._boundObservables.\n\n  updateBindToBound(this); // Set initial values of bound properties.\n\n  this._bindProperties.forEach(function (propertyName) {\n    updateBoundObservableProperty(_this5._observable, propertyName);\n  });\n} // Binds to an attribute in a set of iterable observables.\n//\n// @private\n// @param {Array.<Observable>} observables\n// @param {String} attribute\n// @param {Function} callback\n\n\nfunction bindToMany(observables, attribute, callback) {\n  if (this._bindings.size > 1) {\n    /**\n     * Binding one attribute to many observables only possible with one attribute.\n     *\n     * @error observable-bind-to-many-not-one-binding\n     */\n    throw new CKEditorError('observable-bind-to-many-not-one-binding: Cannot bind multiple properties with toMany().', this);\n  }\n\n  this.to.apply(this, _toConsumableArray(getBindingTargets(observables, attribute)).concat([// ...using given callback to parse attribute values.\n  callback]));\n} // Returns an array of binding components for\n// {@link Observable#bind} from a set of iterable observables.\n//\n// @param {Array.<Observable>} observables\n// @param {String} attribute\n// @returns {Array.<String|Observable>}\n\n\nfunction getBindingTargets(observables, attribute) {\n  var observableAndAttributePairs = observables.map(function (observable) {\n    return [observable, attribute];\n  }); // Merge pairs to one-dimension array of observables and attributes.\n\n  return Array.prototype.concat.apply([], observableAndAttributePairs);\n} // Check if all entries of the array are of `String` type.\n//\n// @private\n// @param {Array} arr An array to be checked.\n// @returns {Boolean}\n\n\nfunction isStringArray(arr) {\n  return arr.every(function (a) {\n    return typeof a == 'string';\n  });\n} // Parses and validates {@link Observable#bind}`.to( args )` arguments and returns\n// an object with a parsed structure. For example\n//\n//\t\tA.bind( 'x' ).to( B, 'a', C, 'b', call );\n//\n// becomes\n//\n//\t\t{\n//\t\t\tto: [\n//\t\t\t\t{ observable: B, properties: [ 'a' ] },\n//\t\t\t\t{ observable: C, properties: [ 'b' ] },\n//\t\t\t],\n//\t\t\tcallback: call\n// \t\t}\n//\n// @private\n// @param {...*} args Arguments of {@link Observable#bind}`.to( args )`.\n// @returns {Object}\n\n\nfunction parseBindToArgs() {\n  for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    args[_key4] = arguments[_key4];\n  }\n\n  // Eliminate A.bind( 'x' ).to()\n  if (!args.length) {\n    /**\n     * Invalid argument syntax in `to()`.\n     *\n     * @error observable-bind-to-parse-error\n     */\n    throw new CKEditorError('observable-bind-to-parse-error: Invalid argument syntax in `to()`.', null);\n  }\n\n  var parsed = {\n    to: []\n  };\n  var lastObservable;\n\n  if (typeof args[args.length - 1] == 'function') {\n    parsed.callback = args.pop();\n  }\n\n  args.forEach(function (a) {\n    if (typeof a == 'string') {\n      lastObservable.properties.push(a);\n    } else if (_typeof(a) == 'object') {\n      lastObservable = {\n        observable: a,\n        properties: []\n      };\n      parsed.to.push(lastObservable);\n    } else {\n      throw new CKEditorError('observable-bind-to-parse-error: Invalid argument syntax in `to()`.', null);\n    }\n  });\n  return parsed;\n} // Synchronizes {@link module:utils/observablemixin#_boundObservables} with {@link Binding}.\n//\n// @private\n// @param {Binding} binding A binding to store in {@link Observable#_boundObservables}.\n// @param {Observable} toObservable A observable, which is a new component of `binding`.\n// @param {String} toPropertyName A name of `toObservable`'s property, a new component of the `binding`.\n\n\nfunction updateBoundObservables(observable, binding, toObservable, toPropertyName) {\n  var boundObservables = observable[boundObservablesSymbol];\n  var bindingsToObservable = boundObservables.get(toObservable);\n  var bindings = bindingsToObservable || {};\n\n  if (!bindings[toPropertyName]) {\n    bindings[toPropertyName] = new Set();\n  } // Pass the binding to a corresponding Set in `observable._boundObservables`.\n\n\n  bindings[toPropertyName].add(binding);\n\n  if (!bindingsToObservable) {\n    boundObservables.set(toObservable, bindings);\n  }\n} // Synchronizes {@link Observable#_boundProperties} and {@link Observable#_boundObservables}\n// with {@link BindChain}.\n//\n// Assuming the following binding being created\n//\n// \t\tA.bind( 'a', 'b' ).to( B, 'x', 'y' );\n//\n// the following bindings were initialized by {@link Observable#bind} in {@link BindChain#_bindings}:\n//\n// \t\t{\n// \t\t\ta: { observable: A, property: 'a', to: [] },\n// \t\t\tb: { observable: A, property: 'b', to: [] },\n// \t\t}\n//\n// Iterate over all bindings in this chain and fill their `to` properties with\n// corresponding to( ... ) arguments (components of the binding), so\n//\n// \t\t{\n// \t\t\ta: { observable: A, property: 'a', to: [ B, 'x' ] },\n// \t\t\tb: { observable: A, property: 'b', to: [ B, 'y' ] },\n// \t\t}\n//\n// Then update the structure of {@link Observable#_boundObservables} with updated\n// binding, so it becomes:\n//\n// \t\tMap( {\n// \t\t\tB: {\n// \t\t\t\tx: Set( [\n// \t\t\t\t\t{ observable: A, property: 'a', to: [ [ B, 'x' ] ] }\n// \t\t\t\t] ),\n// \t\t\t\ty: Set( [\n// \t\t\t\t\t{ observable: A, property: 'b', to: [ [ B, 'y' ] ] },\n// \t\t\t\t] )\n//\t\t\t}\n// \t\t} )\n//\n// @private\n// @param {BindChain} chain The binding initialized by {@link Observable#bind}.\n\n\nfunction updateBindToBound(chain) {\n  var toProperty;\n\n  chain._bindings.forEach(function (binding, propertyName) {\n    // Note: For a binding without a callback, this will run only once\n    // like in A.bind( 'x', 'y' ).to( B, 'a', 'b' )\n    // TODO: ES6 destructuring.\n    chain._to.forEach(function (to) {\n      toProperty = to.properties[binding.callback ? 0 : chain._bindProperties.indexOf(propertyName)];\n      binding.to.push([to.observable, toProperty]);\n      updateBoundObservables(chain._observable, binding, to.observable, toProperty);\n    });\n  });\n} // Updates an property of a {@link Observable} with a value\n// determined by an entry in {@link Observable#_boundProperties}.\n//\n// @private\n// @param {Observable} observable A observable which property is to be updated.\n// @param {String} propertyName An property to be updated.\n\n\nfunction updateBoundObservableProperty(observable, propertyName) {\n  var boundProperties = observable[boundPropertiesSymbol];\n  var binding = boundProperties.get(propertyName);\n  var propertyValue; // When a binding with callback is created like\n  //\n  // \t\tA.bind( 'a' ).to( B, 'b', C, 'c', callback );\n  //\n  // collect B.b and C.c, then pass them to callback to set A.a.\n\n  if (binding.callback) {\n    propertyValue = binding.callback.apply(observable, binding.to.map(function (to) {\n      return to[0][to[1]];\n    }));\n  } else {\n    propertyValue = binding.to[0];\n    propertyValue = propertyValue[0][propertyValue[1]];\n  }\n\n  if (observable.hasOwnProperty(propertyName)) {\n    observable[propertyName] = propertyValue;\n  } else {\n    observable.set(propertyName, propertyValue);\n  }\n} // Starts listening to changes in {@link BindChain._to} observables to update\n// {@link BindChain._observable} {@link BindChain._bindProperties}. Also sets the\n// initial state of {@link BindChain._observable}.\n//\n// @private\n// @param {BindChain} chain The chain initialized by {@link Observable#bind}.\n\n\nfunction attachBindToListeners(observable, toBindings) {\n  toBindings.forEach(function (to) {\n    var boundObservables = observable[boundObservablesSymbol];\n    var bindings; // If there's already a chain between the observables (`observable` listens to\n    // `to.observable`), there's no need to create another `change` event listener.\n\n    if (!boundObservables.get(to.observable)) {\n      observable.listenTo(to.observable, 'change', function (evt, propertyName) {\n        bindings = boundObservables.get(to.observable)[propertyName]; // Note: to.observable will fire for any property change, react\n        // to changes of properties which are bound only.\n\n        if (bindings) {\n          bindings.forEach(function (binding) {\n            updateBoundObservableProperty(observable, binding.property);\n          });\n        }\n      });\n    }\n  });\n}\n/**\n * Interface which adds \"observable properties\" and data binding functionality.\n *\n * Can be easily implemented by a class by mixing the {@link module:utils/observablemixin~ObservableMixin} mixin.\n *\n * Read more about the usage of this interface in the:\n * * {@glink framework/guides/architecture/core-editor-architecture#event-system-and-observables \"Event system and observables\"}\n * section of the {@glink framework/guides/architecture/core-editor-architecture \"Core editor architecture\"} guide,\n * * {@glink framework/guides/deep-dive/observables \"Observables\" deep dive} guide.\n *\n * @interface Observable\n * @extends module:utils/emittermixin~Emitter\n */\n\n/**\n * Fired when a property changed value.\n *\n *\t\tobservable.set( 'prop', 1 );\n *\n *\t\tobservable.on( 'change:prop', ( evt, propertyName, newValue, oldValue ) => {\n *\t\t\tconsole.log( `${ propertyName } has changed from ${ oldValue } to ${ newValue }` );\n *\t\t} );\n *\n *\t\tobservable.prop = 2; // -> 'prop has changed from 1 to 2'\n *\n * @event change:{property}\n * @param {String} name The property name.\n * @param {*} value The new property value.\n * @param {*} oldValue The previous property value.\n */\n\n/**\n * Fired when a property value is going to be set but is not set yet (before the `change` event is fired).\n *\n * You can control the final value of the property by using\n * the {@link module:utils/eventinfo~EventInfo#return event's `return` property}.\n *\n *\t\tobservable.set( 'prop', 1 );\n *\n *\t\tobservable.on( 'set:prop', ( evt, propertyName, newValue, oldValue ) => {\n *\t\t\tconsole.log( `Value is going to be changed from ${ oldValue } to ${ newValue }` );\n *\t\t\tconsole.log( `Current property value is ${ observable[ propertyName ] }` );\n *\n *\t\t\t// Let's override the value.\n *\t\t\tevt.return = 3;\n *\t\t} );\n *\n *\t\tobservable.on( 'change:prop', ( evt, propertyName, newValue, oldValue ) => {\n *\t\t\tconsole.log( `Value has changed from ${ oldValue } to ${ newValue }` );\n *\t\t} );\n *\n *\t\tobservable.prop = 2; // -> 'Value is going to be changed from 1 to 2'\n *\t\t                     // -> 'Current property value is 1'\n *\t\t                     // -> 'Value has changed from 1 to 3'\n *\n * **Note:** Event is fired even when the new value is the same as the old value.\n *\n * @event set:{property}\n * @param {String} name The property name.\n * @param {*} value The new property value.\n * @param {*} oldValue The previous property value.\n */\n\n/**\n * Creates and sets the value of an observable property of this object. Such an property becomes a part\n * of the state and is be observable.\n *\n * It accepts also a single object literal containing key/value pairs with properties to be set.\n *\n * This method throws the `observable-set-cannot-override` error if the observable instance already\n * have a property with the given property name. This prevents from mistakenly overriding existing\n * properties and methods, but means that `foo.set( 'bar', 1 )` may be slightly slower than `foo.bar = 1`.\n *\n * @method #set\n * @param {String|Object} name The property's name or object with `name=>value` pairs.\n * @param {*} [value] The property's value (if `name` was passed in the first parameter).\n */\n\n/**\n * Binds {@link #set obvervable properties} to other objects implementing the\n * {@link module:utils/observablemixin~Observable} interface.\n *\n * Read more in the {@glink framework/guides/deep-dive/observables#property-bindings dedicated guide}\n * covering the topic of property bindings with some additional examples.\n *\n * Let's consider two objects: a `button` and an associated `command` (both `Observable`).\n *\n * A simple property binding could be as follows:\n *\n *\t\tbutton.bind( 'isEnabled' ).to( command, 'isEnabled' );\n *\n * or even shorter:\n *\n *\t\tbutton.bind( 'isEnabled' ).to( command );\n *\n * which works in the following way:\n *\n * * `button.isEnabled` **instantly equals** `command.isEnabled`,\n * * whenever `command.isEnabled` changes, `button.isEnabled` will immediately reflect its value.\n *\n * **Note**: To release the binding use {@link module:utils/observablemixin~Observable#unbind}.\n *\n * You can also \"rename\" the property in the binding by specifying the new name in the `to()` chain:\n *\n *\t\tbutton.bind( 'isEnabled' ).to( command, 'isWorking' );\n *\n * It is possible to bind more than one property at a time to shorten the code:\n *\n *\t\tbutton.bind( 'isEnabled', 'value' ).to( command );\n *\n * which corresponds to:\n *\n *\t\tbutton.bind( 'isEnabled' ).to( command );\n *\t\tbutton.bind( 'value' ).to( command );\n *\n * The binding can include more than one observable, combining multiple data sources in a custom callback:\n *\n *\t\tbutton.bind( 'isEnabled' ).to( command, 'isEnabled', ui, 'isVisible',\n *\t\t\t( isCommandEnabled, isUIVisible ) => isCommandEnabled && isUIVisible );\n *\n * It is also possible to bind to the same property in an array of observables.\n * To bind a `button` to multiple commands (also `Observables`) so that each and every one of them\n * must be enabled for the button to become enabled, use the following code:\n *\n *\t\tbutton.bind( 'isEnabled' ).toMany( [ commandA, commandB, commandC ], 'isEnabled',\n *\t\t\t( isAEnabled, isBEnabled, isCEnabled ) => isAEnabled && isBEnabled && isCEnabled );\n *\n * @method #bind\n * @param {...String} bindProperties Observable properties that will be bound to another observable(s).\n * @returns {Object} The bind chain with the `to()` and `toMany()` methods.\n */\n\n/**\n * Removes the binding created with {@link #bind}.\n *\n *\t\t// Removes the binding for the 'a' property.\n *\t\tA.unbind( 'a' );\n *\n *\t\t// Removes bindings for all properties.\n *\t\tA.unbind();\n *\n * @method #unbind\n * @param {...String} [unbindProperties] Observable properties to be unbound. All the bindings will\n * be released if no properties provided.\n */\n\n/**\n * Turns the given methods of this object into event-based ones. This means that the new method will fire an event\n * (named after the method) and the original action will be plugged as a listener to that event.\n *\n * Read more in the {@glink framework/guides/deep-dive/observables#decorating-object-methods dedicated guide}\n * covering the topic of decorating methods with some additional examples.\n *\n * Decorating the method does not change its behavior (it only adds an event),\n * but it allows to modify it later on by listening to the method's event.\n *\n * For example, to cancel the method execution the event can be {@link module:utils/eventinfo~EventInfo#stop stopped}:\n *\n *\t\tclass Foo {\n *\t\t\tconstructor() {\n *\t\t\t\tthis.decorate( 'method' );\n *\t\t\t}\n *\n *\t\t\tmethod() {\n *\t\t\t\tconsole.log( 'called!' );\n *\t\t\t}\n *\t\t}\n *\n *\t\tconst foo = new Foo();\n *\t\tfoo.on( 'method', ( evt ) => {\n *\t\t\tevt.stop();\n *\t\t}, { priority: 'high' } );\n *\n *\t\tfoo.method(); // Nothing is logged.\n *\n *\n * **Note**: The high {@link module:utils/priorities~PriorityString priority} listener\n * has been used to execute this particular callback before the one which calls the original method\n * (which uses the \"normal\" priority).\n *\n * It is also possible to change the returned value:\n *\n *\t\tfoo.on( 'method', ( evt ) => {\n *\t\t\tevt.return = 'Foo!';\n *\t\t} );\n *\n *\t\tfoo.method(); // -> 'Foo'\n *\n * Finally, it is possible to access and modify the arguments the method is called with:\n *\n *\t\tmethod( a, b ) {\n *\t\t\tconsole.log( `${ a }, ${ b }`  );\n *\t\t}\n *\n *\t\t// ...\n *\n *\t\tfoo.on( 'method', ( evt, args ) => {\n *\t\t\targs[ 0 ] = 3;\n *\n *\t\t\tconsole.log( args[ 1 ] ); // -> 2\n *\t\t}, { priority: 'high' } );\n *\n *\t\tfoo.method( 1, 2 ); // -> '3, 2'\n *\n * @method #decorate\n * @param {String} methodName Name of the method to decorate.\n */","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/editableelement\n */\nimport ContainerElement from './containerelement';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nvar documentSymbol = Symbol('document');\n/**\n * Editable element which can be a {@link module:engine/view/rooteditableelement~RootEditableElement root}\n * or nested editable area in the editor.\n *\n * Editable is automatically read-only when its {@link module:engine/view/document~Document Document} is read-only.\n *\n * The constructor of this class shouldn't be used directly. To create new `EditableElement` use the\n * {@link module:engine/view/downcastwriter~DowncastWriter#createEditableElement `downcastWriter#createEditableElement()`} method.\n *\n * @extends module:engine/view/containerelement~ContainerElement\n * @mixes module:utils/observablemixin~ObservableMixin\n */\n\nvar EditableElement =\n/*#__PURE__*/\nfunction (_ContainerElement) {\n  _inherits(EditableElement, _ContainerElement);\n\n  /**\n   * Creates an editable element.\n   *\n   * @see module:engine/view/downcastwriter~DowncastWriter#createEditableElement\n   * @protected\n   */\n  function EditableElement(name, attrs, children) {\n    var _this;\n\n    _classCallCheck(this, EditableElement);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditableElement).call(this, name, attrs, children));\n    /**\n     * Whether the editable is in read-write or read-only mode.\n     *\n     * @observable\n     * @member {Boolean} module:engine/view/editableelement~EditableElement#isReadOnly\n     */\n\n    _this.set('isReadOnly', false);\n    /**\n     * Whether the editable is focused.\n     *\n     * This property updates when {@link module:engine/view/document~Document#isFocused document.isFocused} or view\n     * selection is changed.\n     *\n     * @readonly\n     * @observable\n     * @member {Boolean} module:engine/view/editableelement~EditableElement#isFocused\n     */\n\n\n    _this.set('isFocused', false);\n    /**\n     * The {@link module:engine/view/document~Document} which is an owner of this root.\n     * Can only by set once.\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-editableelement-document-already-set`\n     * when document is already set.\n     *\n     * @member {module:engine/view/document~Document} #document\n     */\n\n\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(EditableElement, [{\n    key: \"is\",\n    value: function is(type) {\n      var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (!name) {\n        return type == 'editableElement' || _get(_getPrototypeOf(EditableElement.prototype), \"is\", this).call(this, type);\n      } else {\n        return type == 'editableElement' && name == this.name || _get(_getPrototypeOf(EditableElement.prototype), \"is\", this).call(this, type, name);\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.stopListening();\n    }\n    /**\n     * Returns document associated with the editable.\n     *\n     * @readonly\n     * @returns {module:engine/view/document~Document}\n     */\n\n  }, {\n    key: \"document\",\n    get: function get() {\n      return this.getCustomProperty(documentSymbol);\n    }\n    /**\n     * Sets document of this editable element.\n     *\n     * @protected\n     * @param {module:engine/view/document~Document} document\n     */\n\n  }, {\n    key: \"_document\",\n    set: function set(document) {\n      var _this2 = this;\n\n      if (this.getCustomProperty(documentSymbol)) {\n        /**\n         * View document is already set. It can only be set once.\n         *\n         * @error view-editableelement-document-already-set\n         */\n        throw new CKEditorError('view-editableelement-document-already-set: View document is already set.', this);\n      }\n\n      this._setCustomProperty(documentSymbol, document);\n\n      this.bind('isReadOnly').to(document);\n      this.bind('isFocused').to(document, 'isFocused', function (isFocused) {\n        return isFocused && document.selection.editableElement == _this2;\n      }); // Update focus state based on selection changes.\n\n      this.listenTo(document.selection, 'change', function () {\n        _this2.isFocused = document.isFocused && document.selection.editableElement == _this2;\n      });\n    }\n  }]);\n\n  return EditableElement;\n}(ContainerElement);\n\nexport { EditableElement as default };\nmix(EditableElement, ObservableMixin);","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/rooteditableelement\n */\nimport EditableElement from './editableelement';\nvar rootNameSymbol = Symbol('rootName');\n/**\n * Class representing a single root in the data view. A root can be either {@link ~RootEditableElement#isReadOnly editable or read-only},\n * but in both cases it is called \"an editable\". Roots can contain other {@link module:engine/view/editableelement~EditableElement\n * editable elements} making them \"nested editables\".\n *\n * @extends module:engine/view/editableelement~EditableElement\n */\n\nvar RootEditableElement =\n/*#__PURE__*/\nfunction (_EditableElement) {\n  _inherits(RootEditableElement, _EditableElement);\n\n  /**\n   * Creates root editable element.\n   *\n   * @param {String} name Node name.\n   */\n  function RootEditableElement(name) {\n    var _this;\n\n    _classCallCheck(this, RootEditableElement);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RootEditableElement).call(this, name));\n    /**\n     * Name of this root inside {@link module:engine/view/document~Document} that is an owner of this root. If no\n     * other name is set, `main` name is used.\n     *\n     * @readonly\n     * @member {String}\n     */\n\n    _this.rootName = 'main';\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(RootEditableElement, [{\n    key: \"is\",\n    value: function is(type) {\n      var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (!name) {\n        return type == 'rootElement' || _get(_getPrototypeOf(RootEditableElement.prototype), \"is\", this).call(this, type);\n      } else {\n        return type == 'rootElement' && name == this.name || _get(_getPrototypeOf(RootEditableElement.prototype), \"is\", this).call(this, type, name);\n      }\n    }\n  }, {\n    key: \"rootName\",\n    get: function get() {\n      return this.getCustomProperty(rootNameSymbol);\n    },\n    set: function set(rootName) {\n      this._setCustomProperty(rootNameSymbol, rootName);\n    }\n    /**\n     * Overrides old element name and sets new one.\n     * This is needed because view roots are created before they are attached to the DOM.\n     * The name of the root element is temporary at this stage. It has to be changed when the\n     * view root element is attached to the DOM element.\n     *\n     * @protected\n     * @param {String} name The new name of element.\n     */\n\n  }, {\n    key: \"_name\",\n    set: function set(name) {\n      this.name = name;\n    }\n  }]);\n\n  return RootEditableElement;\n}(EditableElement);\n\nexport { RootEditableElement as default };","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/treewalker\n */\nimport Element from './element';\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport Position from './position';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * Position iterator class. It allows to iterate forward and backward over the document.\n */\n\nvar TreeWalker =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a range iterator. All parameters are optional, but you have to specify either `boundaries` or `startPosition`.\n   *\n   * @constructor\n   * @param {Object} options Object with configuration.\n   * @param {module:engine/view/range~Range} [options.boundaries=null] Range to define boundaries of the iterator.\n   * @param {module:engine/view/position~Position} [options.startPosition] Starting position.\n   * @param {'forward'|'backward'} [options.direction='forward'] Walking direction.\n   * @param {Boolean} [options.singleCharacters=false] Flag indicating whether all characters from\n   * {@link module:engine/view/text~Text} should be returned as one {@link module:engine/view/text~Text} (`false`) ore one by one as\n   * {@link module:engine/view/textproxy~TextProxy} (`true`).\n   * @param {Boolean} [options.shallow=false] Flag indicating whether iterator should enter elements or not. If the\n   * iterator is shallow child nodes of any iterated node will not be returned along with `elementEnd` tag.\n   * @param {Boolean} [options.ignoreElementEnd=false] Flag indicating whether iterator should ignore `elementEnd`\n   * tags. If the option is true walker will not return a parent node of start position. If this option is `true`\n   * each {@link module:engine/view/element~Element} will be returned once, while if the option is `false` they might be returned\n   * twice: for `'elementStart'` and `'elementEnd'`.\n   */\n  function TreeWalker() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, TreeWalker);\n\n    if (!options.boundaries && !options.startPosition) {\n      /**\n       * Neither boundaries nor starting position have been defined.\n       *\n       * @error view-tree-walker-no-start-position\n       */\n      throw new CKEditorError('view-tree-walker-no-start-position: Neither boundaries nor starting position have been defined.', null);\n    }\n\n    if (options.direction && options.direction != 'forward' && options.direction != 'backward') {\n      throw new CKEditorError('view-tree-walker-unknown-direction: Only `backward` and `forward` direction allowed.', options.startPosition, {\n        direction: options.direction\n      });\n    }\n    /**\n     * Iterator boundaries.\n     *\n     * When the iterator is walking `'forward'` on the end of boundary or is walking `'backward'`\n     * on the start of boundary, then `{ done: true }` is returned.\n     *\n     * If boundaries are not defined they are set before first and after last child of the root node.\n     *\n     * @readonly\n     * @member {module:engine/view/range~Range} module:engine/view/treewalker~TreeWalker#boundaries\n     */\n\n\n    this.boundaries = options.boundaries || null;\n    /**\n     * Iterator position. If start position is not defined then position depends on {@link #direction}. If direction is\n     * `'forward'` position starts form the beginning, when direction is `'backward'` position starts from the end.\n     *\n     * @readonly\n     * @member {module:engine/view/position~Position} module:engine/view/treewalker~TreeWalker#position\n     */\n\n    if (options.startPosition) {\n      this.position = Position._createAt(options.startPosition);\n    } else {\n      this.position = Position._createAt(options.boundaries[options.direction == 'backward' ? 'end' : 'start']);\n    }\n    /**\n     * Walking direction. Defaults `'forward'`.\n     *\n     * @readonly\n     * @member {'backward'|'forward'} module:engine/view/treewalker~TreeWalker#direction\n     */\n\n\n    this.direction = options.direction || 'forward';\n    /**\n     * Flag indicating whether all characters from {@link module:engine/view/text~Text} should be returned as one\n     * {@link module:engine/view/text~Text} or one by one as {@link module:engine/view/textproxy~TextProxy}.\n     *\n     * @readonly\n     * @member {Boolean} module:engine/view/treewalker~TreeWalker#singleCharacters\n     */\n\n    this.singleCharacters = !!options.singleCharacters;\n    /**\n     * Flag indicating whether iterator should enter elements or not. If the iterator is shallow child nodes of any\n     * iterated node will not be returned along with `elementEnd` tag.\n     *\n     * @readonly\n     * @member {Boolean} module:engine/view/treewalker~TreeWalker#shallow\n     */\n\n    this.shallow = !!options.shallow;\n    /**\n     * Flag indicating whether iterator should ignore `elementEnd` tags. If set to `true`, walker will not\n     * return a parent node of the start position. Each {@link module:engine/view/element~Element} will be returned once.\n     * When set to `false` each element might be returned twice: for `'elementStart'` and `'elementEnd'`.\n     *\n     * @readonly\n     * @member {Boolean} module:engine/view/treewalker~TreeWalker#ignoreElementEnd\n     */\n\n    this.ignoreElementEnd = !!options.ignoreElementEnd;\n    /**\n     * Start boundary parent.\n     *\n     * @private\n     * @member {module:engine/view/node~Node} module:engine/view/treewalker~TreeWalker#_boundaryStartParent\n     */\n\n    this._boundaryStartParent = this.boundaries ? this.boundaries.start.parent : null;\n    /**\n     * End boundary parent.\n     *\n     * @private\n     * @member {module:engine/view/node~Node} module:engine/view/treewalker~TreeWalker#_boundaryEndParent\n     */\n\n    this._boundaryEndParent = this.boundaries ? this.boundaries.end.parent : null;\n  }\n  /**\n   * Iterable interface.\n   *\n   * @returns {Iterable.<module:engine/view/treewalker~TreeWalkerValue>}\n   */\n\n\n  _createClass(TreeWalker, [{\n    key: Symbol.iterator,\n    value: function value() {\n      return this;\n    }\n    /**\n     * Moves {@link #position} in the {@link #direction} skipping values as long as the callback function returns `true`.\n     *\n     * For example:\n     *\n     * \t\twalker.skip( value => value.type == 'text' ); // <p>{}foo</p> -> <p>foo[]</p>\n     * \t\twalker.skip( value => true ); // Move the position to the end: <p>{}foo</p> -> <p>foo</p>[]\n     * \t\twalker.skip( value => false ); // Do not move the position.\n     *\n     * @param {Function} skip Callback function. Gets {@link module:engine/view/treewalker~TreeWalkerValue} and should\n     * return `true` if the value should be skipped or `false` if not.\n     */\n\n  }, {\n    key: \"skip\",\n    value: function skip(_skip) {\n      var done, value, prevPosition;\n\n      do {\n        prevPosition = this.position;\n\n        var _this$next = this.next();\n\n        done = _this$next.done;\n        value = _this$next.value;\n      } while (!done && _skip(value));\n\n      if (!done) {\n        this.position = prevPosition;\n      }\n    }\n    /**\n     * Gets the next tree walker's value.\n     *\n     * @returns {module:engine/view/treewalker~TreeWalkerValue} Object implementing iterator interface, returning\n     * information about taken step.\n     */\n\n  }, {\n    key: \"next\",\n    value: function next() {\n      if (this.direction == 'forward') {\n        return this._next();\n      } else {\n        return this._previous();\n      }\n    }\n    /**\n     * Makes a step forward in view. Moves the {@link #position} to the next position and returns the encountered value.\n     *\n     * @private\n     * @returns {Object}\n     * @returns {Boolean} return.done `true` if iterator is done, `false` otherwise.\n     * @returns {module:engine/view/treewalker~TreeWalkerValue} return.value Information about taken step.\n     */\n\n  }, {\n    key: \"_next\",\n    value: function _next() {\n      var position = this.position.clone();\n      var previousPosition = this.position;\n      var parent = position.parent; // We are at the end of the root.\n\n      if (parent.parent === null && position.offset === parent.childCount) {\n        return {\n          done: true\n        };\n      } // We reached the walker boundary.\n\n\n      if (parent === this._boundaryEndParent && position.offset == this.boundaries.end.offset) {\n        return {\n          done: true\n        };\n      } // Get node just after current position.\n\n\n      var node; // Text is a specific parent because it contains string instead of child nodes.\n\n      if (parent instanceof Text) {\n        if (position.isAtEnd) {\n          // Prevent returning \"elementEnd\" for Text node. Skip that value and return the next walker step.\n          this.position = Position._createAfter(parent);\n          return this._next();\n        }\n\n        node = parent.data[position.offset];\n      } else {\n        node = parent.getChild(position.offset);\n      }\n\n      if (node instanceof Element) {\n        if (!this.shallow) {\n          position = new Position(node, 0);\n        } else {\n          position.offset++;\n        }\n\n        this.position = position;\n        return this._formatReturnValue('elementStart', node, previousPosition, position, 1);\n      } else if (node instanceof Text) {\n        if (this.singleCharacters) {\n          position = new Position(node, 0);\n          this.position = position;\n          return this._next();\n        } else {\n          var charactersCount = node.data.length;\n          var item; // If text stick out of walker range, we need to cut it and wrap in TextProxy.\n\n          if (node == this._boundaryEndParent) {\n            charactersCount = this.boundaries.end.offset;\n            item = new TextProxy(node, 0, charactersCount);\n            position = Position._createAfter(item);\n          } else {\n            item = new TextProxy(node, 0, node.data.length); // If not just keep moving forward.\n\n            position.offset++;\n          }\n\n          this.position = position;\n          return this._formatReturnValue('text', item, previousPosition, position, charactersCount);\n        }\n      } else if (typeof node == 'string') {\n        var textLength;\n\n        if (this.singleCharacters) {\n          textLength = 1;\n        } else {\n          // Check if text stick out of walker range.\n          var endOffset = parent === this._boundaryEndParent ? this.boundaries.end.offset : parent.data.length;\n          textLength = endOffset - position.offset;\n        }\n\n        var textProxy = new TextProxy(parent, position.offset, textLength);\n        position.offset += textLength;\n        this.position = position;\n        return this._formatReturnValue('text', textProxy, previousPosition, position, textLength);\n      } else {\n        // `node` is not set, we reached the end of current `parent`.\n        position = Position._createAfter(parent);\n        this.position = position;\n\n        if (this.ignoreElementEnd) {\n          return this._next();\n        } else {\n          return this._formatReturnValue('elementEnd', parent, previousPosition, position);\n        }\n      }\n    }\n    /**\n     * Makes a step backward in view. Moves the {@link #position} to the previous position and returns the encountered value.\n     *\n     * @private\n     * @returns {Object}\n     * @returns {Boolean} return.done True if iterator is done.\n     * @returns {module:engine/view/treewalker~TreeWalkerValue} return.value Information about taken step.\n     */\n\n  }, {\n    key: \"_previous\",\n    value: function _previous() {\n      var position = this.position.clone();\n      var previousPosition = this.position;\n      var parent = position.parent; // We are at the beginning of the root.\n\n      if (parent.parent === null && position.offset === 0) {\n        return {\n          done: true\n        };\n      } // We reached the walker boundary.\n\n\n      if (parent == this._boundaryStartParent && position.offset == this.boundaries.start.offset) {\n        return {\n          done: true\n        };\n      } // Get node just before current position.\n\n\n      var node; // Text {@link module:engine/view/text~Text} element is a specific parent because contains string instead of child nodes.\n\n      if (parent instanceof Text) {\n        if (position.isAtStart) {\n          // Prevent returning \"elementStart\" for Text node. Skip that value and return the next walker step.\n          this.position = Position._createBefore(parent);\n          return this._previous();\n        }\n\n        node = parent.data[position.offset - 1];\n      } else {\n        node = parent.getChild(position.offset - 1);\n      }\n\n      if (node instanceof Element) {\n        if (!this.shallow) {\n          position = new Position(node, node.childCount);\n          this.position = position;\n\n          if (this.ignoreElementEnd) {\n            return this._previous();\n          } else {\n            return this._formatReturnValue('elementEnd', node, previousPosition, position);\n          }\n        } else {\n          position.offset--;\n          this.position = position;\n          return this._formatReturnValue('elementStart', node, previousPosition, position, 1);\n        }\n      } else if (node instanceof Text) {\n        if (this.singleCharacters) {\n          position = new Position(node, node.data.length);\n          this.position = position;\n          return this._previous();\n        } else {\n          var charactersCount = node.data.length;\n          var item; // If text stick out of walker range, we need to cut it and wrap in TextProxy.\n\n          if (node == this._boundaryStartParent) {\n            var offset = this.boundaries.start.offset;\n            item = new TextProxy(node, offset, node.data.length - offset);\n            charactersCount = item.data.length;\n            position = Position._createBefore(item);\n          } else {\n            item = new TextProxy(node, 0, node.data.length); // If not just keep moving backward.\n\n            position.offset--;\n          }\n\n          this.position = position;\n          return this._formatReturnValue('text', item, previousPosition, position, charactersCount);\n        }\n      } else if (typeof node == 'string') {\n        var textLength;\n\n        if (!this.singleCharacters) {\n          // Check if text stick out of walker range.\n          var startOffset = parent === this._boundaryStartParent ? this.boundaries.start.offset : 0;\n          textLength = position.offset - startOffset;\n        } else {\n          textLength = 1;\n        }\n\n        position.offset -= textLength;\n        var textProxy = new TextProxy(parent, position.offset, textLength);\n        this.position = position;\n        return this._formatReturnValue('text', textProxy, previousPosition, position, textLength);\n      } else {\n        // `node` is not set, we reached the beginning of current `parent`.\n        position = Position._createBefore(parent);\n        this.position = position;\n        return this._formatReturnValue('elementStart', parent, previousPosition, position, 1);\n      }\n    }\n    /**\n     * Format returned data and adjust `previousPosition` and `nextPosition` if reach the bound of the {@link module:engine/view/text~Text}.\n     *\n     * @private\n     * @param {module:engine/view/treewalker~TreeWalkerValueType} type Type of step.\n     * @param {module:engine/view/item~Item} item Item between old and new position.\n     * @param {module:engine/view/position~Position} previousPosition Previous position of iterator.\n     * @param {module:engine/view/position~Position} nextPosition Next position of iterator.\n     * @param {Number} [length] Length of the item.\n     * @returns {module:engine/view/treewalker~TreeWalkerValue}\n     */\n\n  }, {\n    key: \"_formatReturnValue\",\n    value: function _formatReturnValue(type, item, previousPosition, nextPosition, length) {\n      // Text is a specific parent, because contains string instead of children.\n      // Walker doesn't enter to the Text except situations when walker is iterating over every single character,\n      // or the bound starts/ends inside the Text. So when the position is at the beginning or at the end of the Text\n      // we move it just before or just after Text.\n      if (item instanceof TextProxy) {\n        // Position is at the end of Text.\n        if (item.offsetInText + item.data.length == item.textNode.data.length) {\n          if (this.direction == 'forward' && !(this.boundaries && this.boundaries.end.isEqual(this.position))) {\n            nextPosition = Position._createAfter(item.textNode); // When we change nextPosition of returned value we need also update walker current position.\n\n            this.position = nextPosition;\n          } else {\n            previousPosition = Position._createAfter(item.textNode);\n          }\n        } // Position is at the begining ot the text.\n\n\n        if (item.offsetInText === 0) {\n          if (this.direction == 'backward' && !(this.boundaries && this.boundaries.start.isEqual(this.position))) {\n            nextPosition = Position._createBefore(item.textNode); // When we change nextPosition of returned value we need also update walker current position.\n\n            this.position = nextPosition;\n          } else {\n            previousPosition = Position._createBefore(item.textNode);\n          }\n        }\n      }\n\n      return {\n        done: false,\n        value: {\n          type: type,\n          item: item,\n          previousPosition: previousPosition,\n          nextPosition: nextPosition,\n          length: length\n        }\n      };\n    }\n  }]);\n\n  return TreeWalker;\n}();\n/**\n * Type of the step made by {@link module:engine/view/treewalker~TreeWalker}.\n * Possible values: `'elementStart'` if walker is at the beginning of a node, `'elementEnd'` if walker is at the end\n * of node, or `'text'` if walker traversed over single and multiple characters.\n * For {@link module:engine/view/text~Text} `elementStart` and `elementEnd` is not returned.\n *\n * @typedef {String} module:engine/view/treewalker~TreeWalkerValueType\n */\n\n/**\n * Object returned by {@link module:engine/view/treewalker~TreeWalker} when traversing tree view.\n *\n * @typedef {Object} module:engine/view/treewalker~TreeWalkerValue\n * @property {module:engine/view/treewalker~TreeWalkerValueType} type\n * @property {module:engine/view/item~Item} item Item between the old and the new positions\n * of the tree walker.\n * @property {module:engine/view/position~Position} previousPosition Previous position of the iterator.\n * * Forward iteration: For `'elementEnd'` it is the last position inside the element. For all other types it is the\n * position before the item.\n * * Backward iteration: For `'elementStart'` it is the first position inside the element. For all other types it is\n * the position after item.\n * * If the position is at the beginning or at the end of the {@link module:engine/view/text~Text} it is always moved from the\n * inside of the text to its parent just before or just after that text.\n * @property {module:engine/view/position~Position} nextPosition Next position of the iterator.\n * * Forward iteration: For `'elementStart'` it is the first position inside the element. For all other types it is\n * the position after the item.\n * * Backward iteration: For `'elementEnd'` it is last position inside element. For all other types it is the position\n * before the item.\n * * If the position is at the beginning or at the end of the {@link module:engine/view/text~Text} it is always moved from the\n * inside of the text to its parent just before or just after that text.\n * @property {Number} [length] Length of the item. For `'elementStart'` it is `1`. For `'text'` it is\n * the length of that text. For `'elementEnd'` it is `undefined`.\n */\n\n/**\n * Tree walking directions.\n *\n * @typedef {'forward'|'backward'} module:engine/view/treewalker~TreeWalkerDirection\n */\n\n\nexport { TreeWalker as default };","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/position\n */\nimport TreeWalker from './treewalker';\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport EditableElement from './editableelement'; // To check if component is loaded more than once.\n\nimport '@ckeditor/ckeditor5-utils/src/version';\n/**\n * Position in the view tree. Position is represented by its parent node and an offset in this parent.\n *\n * In order to create a new position instance use the `createPosition*()` factory methods available in:\n *\n * * {@link module:engine/view/view~View}\n * * {@link module:engine/view/downcastwriter~DowncastWriter}\n * * {@link module:engine/view/upcastwriter~UpcastWriter}\n */\n\nvar Position =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a position.\n   *\n   * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} parent Position parent.\n   * @param {Number} offset Position offset.\n   */\n  function Position(parent, offset) {\n    _classCallCheck(this, Position);\n\n    /**\n     * Position parent.\n     *\n     * @readonly\n     * @member {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment}\n     * module:engine/view/position~Position#parent\n     */\n    this.parent = parent;\n    /**\n     * Position offset.\n     *\n     * @readonly\n     * @member {Number} module:engine/view/position~Position#offset\n     */\n\n    this.offset = offset;\n  }\n  /**\n   * Node directly after the position. Equals `null` when there is no node after position or position is located\n   * inside text node.\n   *\n   * @readonly\n   * @type {module:engine/view/node~Node|null}\n   */\n\n\n  _createClass(Position, [{\n    key: \"getShiftedBy\",\n\n    /**\n     * Returns a new instance of Position with offset incremented by `shift` value.\n     *\n     * @param {Number} shift How position offset should get changed. Accepts negative values.\n     * @returns {module:engine/view/position~Position} Shifted position.\n     */\n    value: function getShiftedBy(shift) {\n      var shifted = Position._createAt(this);\n\n      var offset = shifted.offset + shift;\n      shifted.offset = offset < 0 ? 0 : offset;\n      return shifted;\n    }\n    /**\n     * Gets the farthest position which matches the callback using\n     * {@link module:engine/view/treewalker~TreeWalker TreeWalker}.\n     *\n     * For example:\n     *\n     * \t\tgetLastMatchingPosition( value => value.type == 'text' ); // <p>{}foo</p> -> <p>foo[]</p>\n     * \t\tgetLastMatchingPosition( value => value.type == 'text', { direction: 'backward' } ); // <p>foo[]</p> -> <p>{}foo</p>\n     * \t\tgetLastMatchingPosition( value => false ); // Do not move the position.\n     *\n     * @param {Function} skip Callback function. Gets {@link module:engine/view/treewalker~TreeWalkerValue} and should\n     * return `true` if the value should be skipped or `false` if not.\n     * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}.\n     *\n     * @returns {module:engine/view/position~Position} The position after the last item which matches the `skip` callback test.\n     */\n\n  }, {\n    key: \"getLastMatchingPosition\",\n    value: function getLastMatchingPosition(skip) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      options.startPosition = this;\n      var treeWalker = new TreeWalker(options);\n      treeWalker.skip(skip);\n      return treeWalker.position;\n    }\n    /**\n     * Returns ancestors array of this position, that is this position's parent and it's ancestors.\n     *\n     * @returns {Array} Array with ancestors.\n     */\n\n  }, {\n    key: \"getAncestors\",\n    value: function getAncestors() {\n      if (this.parent.is('documentFragment')) {\n        return [this.parent];\n      } else {\n        return this.parent.getAncestors({\n          includeSelf: true\n        });\n      }\n    }\n    /**\n     * Returns a {@link module:engine/view/node~Node} or {@link module:engine/view/documentfragment~DocumentFragment}\n     * which is a common ancestor of both positions.\n     *\n     * @param {module:engine/view/position~Position} position\n     * @returns {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment|null}\n     */\n\n  }, {\n    key: \"getCommonAncestor\",\n    value: function getCommonAncestor(position) {\n      var ancestorsA = this.getAncestors();\n      var ancestorsB = position.getAncestors();\n      var i = 0;\n\n      while (ancestorsA[i] == ancestorsB[i] && ancestorsA[i]) {\n        i++;\n      }\n\n      return i === 0 ? null : ancestorsA[i - 1];\n    }\n    /**\n     * Checks whether this position equals given position.\n     *\n     * @param {module:engine/view/position~Position} otherPosition Position to compare with.\n     * @returns {Boolean} True if positions are same.\n     */\n\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(otherPosition) {\n      return this.parent == otherPosition.parent && this.offset == otherPosition.offset;\n    }\n    /**\n     * Checks whether this position is located before given position. When method returns `false` it does not mean that\n     * this position is after give one. Two positions may be located inside separate roots and in that situation this\n     * method will still return `false`.\n     *\n     * @see module:engine/view/position~Position#isAfter\n     * @see module:engine/view/position~Position#compareWith\n     * @param {module:engine/view/position~Position} otherPosition Position to compare with.\n     * @returns {Boolean} Returns `true` if this position is before given position.\n     */\n\n  }, {\n    key: \"isBefore\",\n    value: function isBefore(otherPosition) {\n      return this.compareWith(otherPosition) == 'before';\n    }\n    /**\n     * Checks whether this position is located after given position. When method returns `false` it does not mean that\n     * this position is before give one. Two positions may be located inside separate roots and in that situation this\n     * method will still return `false`.\n     *\n     * @see module:engine/view/position~Position#isBefore\n     * @see module:engine/view/position~Position#compareWith\n     * @param {module:engine/view/position~Position} otherPosition Position to compare with.\n     * @returns {Boolean} Returns `true` if this position is after given position.\n     */\n\n  }, {\n    key: \"isAfter\",\n    value: function isAfter(otherPosition) {\n      return this.compareWith(otherPosition) == 'after';\n    }\n    /**\n     * Checks whether this position is before, after or in same position that other position. Two positions may be also\n     * different when they are located in separate roots.\n     *\n     * @param {module:engine/view/position~Position} otherPosition Position to compare with.\n     * @returns {module:engine/view/position~PositionRelation}\n     */\n\n  }, {\n    key: \"compareWith\",\n    value: function compareWith(otherPosition) {\n      if (this.root !== otherPosition.root) {\n        return 'different';\n      }\n\n      if (this.isEqual(otherPosition)) {\n        return 'same';\n      } // Get path from root to position's parent element.\n\n\n      var thisPath = this.parent.is('node') ? this.parent.getPath() : [];\n      var otherPath = otherPosition.parent.is('node') ? otherPosition.parent.getPath() : []; // Add the positions' offsets to the parents offsets.\n\n      thisPath.push(this.offset);\n      otherPath.push(otherPosition.offset); // Compare both path arrays to find common ancestor.\n\n      var result = compareArrays(thisPath, otherPath);\n\n      switch (result) {\n        case 'prefix':\n          return 'before';\n\n        case 'extension':\n          return 'after';\n\n        default:\n          return thisPath[result] < otherPath[result] ? 'before' : 'after';\n      }\n    }\n    /**\n     * Creates a {@link module:engine/view/treewalker~TreeWalker TreeWalker} instance with this positions as a start position.\n     *\n     * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}\n     * @param {module:engine/view/range~Range} [options.boundaries=null] Range to define boundaries of the iterator.\n     * @param {Boolean} [options.singleCharacters=false]\n     * @param {Boolean} [options.shallow=false]\n     * @param {Boolean} [options.ignoreElementEnd=false]\n     */\n\n  }, {\n    key: \"getWalker\",\n    value: function getWalker() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      options.startPosition = this;\n      return new TreeWalker(options);\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new Position(this.parent, this.offset);\n    }\n    /**\n     * Creates position at the given location. The location can be specified as:\n     *\n     * * a {@link module:engine/view/position~Position position},\n     * * parent element and offset (offset defaults to `0`),\n     * * parent element and `'end'` (sets position at the end of that element),\n     * * {@link module:engine/view/item~Item view item} and `'before'` or `'after'` (sets position before or after given view item).\n     *\n     * This method is a shortcut to other constructors such as:\n     *\n     * * {@link module:engine/view/position~Position._createBefore},\n     * * {@link module:engine/view/position~Position._createAfter}.\n     *\n     * @protected\n     * @param {module:engine/view/item~Item|module:engine/view/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n     * first parameter is a {@link module:engine/view/item~Item view item}.\n     */\n\n  }, {\n    key: \"nodeAfter\",\n    get: function get() {\n      if (this.parent.is('text')) {\n        return null;\n      }\n\n      return this.parent.getChild(this.offset) || null;\n    }\n    /**\n     * Node directly before the position. Equals `null` when there is no node before position or position is located\n     * inside text node.\n     *\n     * @readonly\n     * @type {module:engine/view/node~Node|null}\n     */\n\n  }, {\n    key: \"nodeBefore\",\n    get: function get() {\n      if (this.parent.is('text')) {\n        return null;\n      }\n\n      return this.parent.getChild(this.offset - 1) || null;\n    }\n    /**\n     * Is `true` if position is at the beginning of its {@link module:engine/view/position~Position#parent parent}, `false` otherwise.\n     *\n     * @readonly\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isAtStart\",\n    get: function get() {\n      return this.offset === 0;\n    }\n    /**\n     * Is `true` if position is at the end of its {@link module:engine/view/position~Position#parent parent}, `false` otherwise.\n     *\n     * @readonly\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isAtEnd\",\n    get: function get() {\n      var endOffset = this.parent.is('text') ? this.parent.data.length : this.parent.childCount;\n      return this.offset === endOffset;\n    }\n    /**\n     * Position's root, that is the root of the position's parent element.\n     *\n     * @readonly\n     * @type {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment}\n     */\n\n  }, {\n    key: \"root\",\n    get: function get() {\n      return this.parent.root;\n    }\n    /**\n     * {@link module:engine/view/editableelement~EditableElement EditableElement} instance that contains this position, or `null` if\n     * position is not inside an editable element.\n     *\n     * @type {module:engine/view/editableelement~EditableElement|null}\n     */\n\n  }, {\n    key: \"editableElement\",\n    get: function get() {\n      var editable = this.parent;\n\n      while (!(editable instanceof EditableElement)) {\n        if (editable.parent) {\n          editable = editable.parent;\n        } else {\n          return null;\n        }\n      }\n\n      return editable;\n    }\n  }], [{\n    key: \"_createAt\",\n    value: function _createAt(itemOrPosition, offset) {\n      if (itemOrPosition instanceof Position) {\n        return new this(itemOrPosition.parent, itemOrPosition.offset);\n      } else {\n        var node = itemOrPosition;\n\n        if (offset == 'end') {\n          offset = node.is('text') ? node.data.length : node.childCount;\n        } else if (offset == 'before') {\n          return this._createBefore(node);\n        } else if (offset == 'after') {\n          return this._createAfter(node);\n        } else if (offset !== 0 && !offset) {\n          /**\n           * {@link module:engine/view/view~View#createPositionAt `View#createPositionAt()`}\n           * requires the offset to be specified when the first parameter is a view item.\n           *\n           * @error view-createPositionAt-offset-required\n           */\n          throw new CKEditorError('view-createPositionAt-offset-required: ' + 'View#createPositionAt() requires the offset when the first parameter is a view item.', node);\n        }\n\n        return new Position(node, offset);\n      }\n    }\n    /**\n     * Creates a new position after given view item.\n     *\n     * @protected\n     * @param {module:engine/view/item~Item} item View item after which the position should be located.\n     * @returns {module:engine/view/position~Position}\n     */\n\n  }, {\n    key: \"_createAfter\",\n    value: function _createAfter(item) {\n      // TextProxy is not a instance of Node so we need do handle it in specific way.\n      if (item.is('textProxy')) {\n        return new Position(item.textNode, item.offsetInText + item.data.length);\n      }\n\n      if (!item.parent) {\n        /**\n         * You can not make a position after a root.\n         *\n         * @error view-position-after-root\n         * @param {module:engine/view/node~Node} root\n         */\n        throw new CKEditorError('view-position-after-root: You can not make position after root.', item, {\n          root: item\n        });\n      }\n\n      return new Position(item.parent, item.index + 1);\n    }\n    /**\n     * Creates a new position before given view item.\n     *\n     * @protected\n     * @param {module:engine/view/item~Item} item View item before which the position should be located.\n     * @returns {module:engine/view/position~Position}\n     */\n\n  }, {\n    key: \"_createBefore\",\n    value: function _createBefore(item) {\n      // TextProxy is not a instance of Node so we need do handle it in specific way.\n      if (item.is('textProxy')) {\n        return new Position(item.textNode, item.offsetInText);\n      }\n\n      if (!item.parent) {\n        /**\n         * You cannot make a position before a root.\n         *\n         * @error view-position-before-root\n         * @param {module:engine/view/node~Node} root\n         */\n        throw new CKEditorError('view-position-before-root: You can not make position before root.', item, {\n          root: item\n        });\n      }\n\n      return new Position(item.parent, item.index);\n    }\n  }]);\n\n  return Position;\n}();\n/**\n * A flag indicating whether this position is `'before'` or `'after'` or `'same'` as given position.\n * If positions are in different roots `'different'` flag is returned.\n *\n * @typedef {String} module:engine/view/position~PositionRelation\n */\n\n\nexport { Position as default };","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/range\n */\nimport Position from './position';\nimport TreeWalker from './treewalker';\n/**\n * Range in the view tree. A range is represented by its start and end {@link module:engine/view/position~Position positions}.\n *\n * In order to create a new position instance use the `createPosition*()` factory methods available in:\n *\n * * {@link module:engine/view/view~View}\n * * {@link module:engine/view/downcastwriter~DowncastWriter}\n * * {@link module:engine/view/upcastwriter~UpcastWriter}\n */\n\nvar Range =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a range spanning from `start` position to `end` position.\n   *\n   * **Note:** Constructor creates it's own {@link module:engine/view/position~Position} instances basing on passed values.\n   *\n   * @param {module:engine/view/position~Position} start Start position.\n   * @param {module:engine/view/position~Position} [end] End position. If not set, range will be collapsed at the `start` position.\n   */\n  function Range(start) {\n    var end = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    _classCallCheck(this, Range);\n\n    /**\n     * Start position.\n     *\n     * @readonly\n     * @member {module:engine/view/position~Position}\n     */\n    this.start = start.clone();\n    /**\n     * End position.\n     *\n     * @readonly\n     * @member {module:engine/view/position~Position}\n     */\n\n    this.end = end ? end.clone() : start.clone();\n  }\n  /**\n   * Iterable interface.\n   *\n   * Iterates over all {@link module:engine/view/item~Item view items} that are in this range and returns\n   * them together with additional information like length or {@link module:engine/view/position~Position positions},\n   * grouped as {@link module:engine/view/treewalker~TreeWalkerValue}.\n   *\n   * This iterator uses {@link module:engine/view/treewalker~TreeWalker TreeWalker} with `boundaries` set to this range and\n   * `ignoreElementEnd` option\n   * set to `true`.\n   *\n   * @returns {Iterable.<module:engine/view/treewalker~TreeWalkerValue>}\n   */\n\n\n  _createClass(Range, [{\n    key: Symbol.iterator,\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function value() {\n      return regeneratorRuntime.wrap(function value$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.delegateYield(new TreeWalker({\n                boundaries: this,\n                ignoreElementEnd: true\n              }), \"t0\", 1);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, value, this);\n    })\n    /**\n     * Returns whether the range is collapsed, that is it start and end positions are equal.\n     *\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"getEnlarged\",\n\n    /**\n     * Creates a maximal range that has the same content as this range but is expanded in both ways (at the beginning\n     * and at the end).\n     *\n     * For example:\n     *\n     *\t\t<p>Foo</p><p><b>{Bar}</b></p> -> <p>Foo</p>[<p><b>Bar</b>]</p>\n     *\t\t<p><b>foo</b>{bar}<span></span></p> -> <p><b>foo[</b>bar<span></span>]</p>\n     *\n     * Note that in the sample above:\n     *\n     * - `<p>` have type of {@link module:engine/view/containerelement~ContainerElement},\n     * - `<b>` have type of {@link module:engine/view/attributeelement~AttributeElement},\n     * - `<span>` have type of {@link module:engine/view/uielement~UIElement}.\n     *\n     * @returns {module:engine/view/range~Range} Enlarged range.\n     */\n    value: function getEnlarged() {\n      var start = this.start.getLastMatchingPosition(enlargeTrimSkip, {\n        direction: 'backward'\n      });\n      var end = this.end.getLastMatchingPosition(enlargeTrimSkip); // Fix positions, in case if they are in Text node.\n\n      if (start.parent.is('text') && start.isAtStart) {\n        start = Position._createBefore(start.parent);\n      }\n\n      if (end.parent.is('text') && end.isAtEnd) {\n        end = Position._createAfter(end.parent);\n      }\n\n      return new Range(start, end);\n    }\n    /**\n     * Creates a minimum range that has the same content as this range but is trimmed in both ways (at the beginning\n     * and at the end).\n     *\n     * For example:\n     *\n     *\t\t<p>Foo</p>[<p><b>Bar</b>]</p> -> <p>Foo</p><p><b>{Bar}</b></p>\n     *\t\t<p><b>foo[</b>bar<span></span>]</p> -> <p><b>foo</b>{bar}<span></span></p>\n     *\n     * Note that in the sample above:\n     *\n     * - `<p>` have type of {@link module:engine/view/containerelement~ContainerElement},\n     * - `<b>` have type of {@link module:engine/view/attributeelement~AttributeElement},\n     * - `<span>` have type of {@link module:engine/view/uielement~UIElement}.\n     *\n     * @returns {module:engine/view/range~Range} Shrink range.\n     */\n\n  }, {\n    key: \"getTrimmed\",\n    value: function getTrimmed() {\n      var start = this.start.getLastMatchingPosition(enlargeTrimSkip);\n\n      if (start.isAfter(this.end) || start.isEqual(this.end)) {\n        return new Range(start, start);\n      }\n\n      var end = this.end.getLastMatchingPosition(enlargeTrimSkip, {\n        direction: 'backward'\n      });\n      var nodeAfterStart = start.nodeAfter;\n      var nodeBeforeEnd = end.nodeBefore; // Because TreeWalker prefers positions next to text node, we need to move them manually into these text nodes.\n\n      if (nodeAfterStart && nodeAfterStart.is('text')) {\n        start = new Position(nodeAfterStart, 0);\n      }\n\n      if (nodeBeforeEnd && nodeBeforeEnd.is('text')) {\n        end = new Position(nodeBeforeEnd, nodeBeforeEnd.data.length);\n      }\n\n      return new Range(start, end);\n    }\n    /**\n     * Two ranges are equal if their start and end positions are equal.\n     *\n     * @param {module:engine/view/range~Range} otherRange Range to compare with.\n     * @returns {Boolean} `true` if ranges are equal, `false` otherwise\n     */\n\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(otherRange) {\n      return this == otherRange || this.start.isEqual(otherRange.start) && this.end.isEqual(otherRange.end);\n    }\n    /**\n     * Checks whether this range contains given {@link module:engine/view/position~Position position}.\n     *\n     * @param {module:engine/view/position~Position} position Position to check.\n     * @returns {Boolean} `true` if given {@link module:engine/view/position~Position position} is contained in this range,\n     * `false` otherwise.\n     */\n\n  }, {\n    key: \"containsPosition\",\n    value: function containsPosition(position) {\n      return position.isAfter(this.start) && position.isBefore(this.end);\n    }\n    /**\n     * Checks whether this range contains given {@link module:engine/view/range~Range range}.\n     *\n     * @param {module:engine/view/range~Range} otherRange Range to check.\n     * @param {Boolean} [loose=false] Whether the check is loose or strict. If the check is strict (`false`), compared range cannot\n     * start or end at the same position as this range boundaries. If the check is loose (`true`), compared range can start, end or\n     * even be equal to this range. Note that collapsed ranges are always compared in strict mode.\n     * @returns {Boolean} `true` if given {@link module:engine/view/range~Range range} boundaries are contained by this range, `false`\n     * otherwise.\n     */\n\n  }, {\n    key: \"containsRange\",\n    value: function containsRange(otherRange) {\n      var loose = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (otherRange.isCollapsed) {\n        loose = false;\n      }\n\n      var containsStart = this.containsPosition(otherRange.start) || loose && this.start.isEqual(otherRange.start);\n      var containsEnd = this.containsPosition(otherRange.end) || loose && this.end.isEqual(otherRange.end);\n      return containsStart && containsEnd;\n    }\n    /**\n     * Computes which part(s) of this {@link module:engine/view/range~Range range} is not a part of given\n     * {@link module:engine/view/range~Range range}.\n     * Returned array contains zero, one or two {@link module:engine/view/range~Range ranges}.\n     *\n     * Examples:\n     *\n     *\t\tlet foo = downcastWriter.createText( 'foo' );\n     *\t\tlet img = downcastWriter.createContainerElement( 'img' );\n     *\t\tlet bar = downcastWriter.createText( 'bar' );\n     *\t\tlet p = downcastWriter.createContainerElement( 'p', null, [ foo, img, bar ] );\n     *\n     *\t\tlet range = view.createRange( view.createPositionAt( foo, 2 ), view.createPositionAt( bar, 1 ); // \"o\", img, \"b\" are in range.\n     *\t\tlet otherRange = view.createRange( // \"oo\", img, \"ba\" are in range.\n     *\t\t\tview.createPositionAt( foo, 1 ),\n     *\t\t\tview.createPositionAt( bar, 2 )\n     *\t\t);\n     *\t\tlet transformed = range.getDifference( otherRange );\n     *\t\t// transformed array has no ranges because `otherRange` contains `range`\n     *\n     *\t\totherRange = view.createRange( view.createPositionAt( foo, 1 ), view.createPositionAt( p, 2 ); // \"oo\", img are in range.\n     *\t\ttransformed = range.getDifference( otherRange );\n     *\t\t// transformed array has one range: from ( p, 2 ) to ( bar, 1 )\n     *\n     *\t\totherRange = view.createRange( view.createPositionAt( p, 1 ), view.createPositionAt( p, 2 ) ); // img is in range.\n     *\t\ttransformed = range.getDifference( otherRange );\n     *\t\t// transformed array has two ranges: from ( foo, 1 ) to ( p, 1 ) and from ( p, 2 ) to ( bar, 1 )\n     *\n     * @param {module:engine/view/range~Range} otherRange Range to differentiate against.\n     * @returns {Array.<module:engine/view/range~Range>} The difference between ranges.\n     */\n\n  }, {\n    key: \"getDifference\",\n    value: function getDifference(otherRange) {\n      var ranges = [];\n\n      if (this.isIntersecting(otherRange)) {\n        // Ranges intersect.\n        if (this.containsPosition(otherRange.start)) {\n          // Given range start is inside this range. This means that we have to\n          // add shrunken range - from the start to the middle of this range.\n          ranges.push(new Range(this.start, otherRange.start));\n        }\n\n        if (this.containsPosition(otherRange.end)) {\n          // Given range end is inside this range. This means that we have to\n          // add shrunken range - from the middle of this range to the end.\n          ranges.push(new Range(otherRange.end, this.end));\n        }\n      } else {\n        // Ranges do not intersect, return the original range.\n        ranges.push(this.clone());\n      }\n\n      return ranges;\n    }\n    /**\n     * Returns an intersection of this {@link module:engine/view/range~Range range} and given {@link module:engine/view/range~Range range}.\n     * Intersection is a common part of both of those ranges. If ranges has no common part, returns `null`.\n     *\n     * Examples:\n     *\n     *\t\tlet foo = downcastWriter.createText( 'foo' );\n     *\t\tlet img = downcastWriter.createContainerElement( 'img' );\n     *\t\tlet bar = downcastWriter.createText( 'bar' );\n     *\t\tlet p = downcastWriter.createContainerElement( 'p', null, [ foo, img, bar ] );\n     *\n     *\t\tlet range = view.createRange( view.createPositionAt( foo, 2 ), view.createPositionAt( bar, 1 ); // \"o\", img, \"b\" are in range.\n     *\t\tlet otherRange = view.createRange( view.createPositionAt( foo, 1 ), view.createPositionAt( p, 2 ); // \"oo\", img are in range.\n     *\t\tlet transformed = range.getIntersection( otherRange ); // range from ( foo, 1 ) to ( p, 2 ).\n     *\n     *\t\totherRange = view.createRange( view.createPositionAt( bar, 1 ), view.createPositionAt( bar, 3 ); \"ar\" is in range.\n     *\t\ttransformed = range.getIntersection( otherRange ); // null - no common part.\n     *\n     * @param {module:engine/view/range~Range} otherRange Range to check for intersection.\n     * @returns {module:engine/view/range~Range|null} A common part of given ranges or `null` if ranges have no common part.\n     */\n\n  }, {\n    key: \"getIntersection\",\n    value: function getIntersection(otherRange) {\n      if (this.isIntersecting(otherRange)) {\n        // Ranges intersect, so a common range will be returned.\n        // At most, it will be same as this range.\n        var commonRangeStart = this.start;\n        var commonRangeEnd = this.end;\n\n        if (this.containsPosition(otherRange.start)) {\n          // Given range start is inside this range. This means thaNt we have to\n          // shrink common range to the given range start.\n          commonRangeStart = otherRange.start;\n        }\n\n        if (this.containsPosition(otherRange.end)) {\n          // Given range end is inside this range. This means that we have to\n          // shrink common range to the given range end.\n          commonRangeEnd = otherRange.end;\n        }\n\n        return new Range(commonRangeStart, commonRangeEnd);\n      } // Ranges do not intersect, so they do not have common part.\n\n\n      return null;\n    }\n    /**\n     * Creates a {@link module:engine/view/treewalker~TreeWalker TreeWalker} instance with this range as a boundary.\n     *\n     * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}.\n     * @param {module:engine/view/position~Position} [options.startPosition]\n     * @param {Boolean} [options.singleCharacters=false]\n     * @param {Boolean} [options.shallow=false]\n     * @param {Boolean} [options.ignoreElementEnd=false]\n     * @returns {module:engine/view/treewalker~TreeWalker}\n     */\n\n  }, {\n    key: \"getWalker\",\n    value: function getWalker() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      options.boundaries = this;\n      return new TreeWalker(options);\n    }\n    /**\n     * Returns a {@link module:engine/view/node~Node} or {@link module:engine/view/documentfragment~DocumentFragment}\n     * which is a common ancestor of range's both ends (in which the entire range is contained).\n     *\n     * @returns {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment|null}\n     */\n\n  }, {\n    key: \"getCommonAncestor\",\n    value: function getCommonAncestor() {\n      return this.start.getCommonAncestor(this.end);\n    }\n    /**\n     * Clones this range.\n     *\n     * @returns {module:engine/view/range~Range}\n     */\n\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new Range(this.start, this.end);\n    }\n    /**\n     * Returns an iterator that iterates over all {@link module:engine/view/item~Item view items} that are in this range and returns\n     * them.\n     *\n     * This method uses {@link module:engine/view/treewalker~TreeWalker} with `boundaries` set to this range and `ignoreElementEnd` option\n     * set to `true`. However it returns only {@link module:engine/view/item~Item items},\n     * not {@link module:engine/view/treewalker~TreeWalkerValue}.\n     *\n     * You may specify additional options for the tree walker. See {@link module:engine/view/treewalker~TreeWalker} for\n     * a full list of available options.\n     *\n     * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}.\n     * @returns {Iterable.<module:engine/view/item~Item>}\n     */\n\n  }, {\n    key: \"getItems\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function getItems() {\n      var options,\n          treeWalker,\n          _iteratorNormalCompletion,\n          _didIteratorError,\n          _iteratorError,\n          _iterator,\n          _step,\n          _value,\n          _args2 = arguments;\n\n      return regeneratorRuntime.wrap(function getItems$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              options = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {};\n              options.boundaries = this;\n              options.ignoreElementEnd = true;\n              treeWalker = new TreeWalker(options);\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _iteratorError = undefined;\n              _context2.prev = 7;\n              _iterator = treeWalker[Symbol.iterator]();\n\n            case 9:\n              if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                _context2.next = 16;\n                break;\n              }\n\n              _value = _step.value;\n              _context2.next = 13;\n              return _value.item;\n\n            case 13:\n              _iteratorNormalCompletion = true;\n              _context2.next = 9;\n              break;\n\n            case 16:\n              _context2.next = 22;\n              break;\n\n            case 18:\n              _context2.prev = 18;\n              _context2.t0 = _context2[\"catch\"](7);\n              _didIteratorError = true;\n              _iteratorError = _context2.t0;\n\n            case 22:\n              _context2.prev = 22;\n              _context2.prev = 23;\n\n              if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n                _iterator[\"return\"]();\n              }\n\n            case 25:\n              _context2.prev = 25;\n\n              if (!_didIteratorError) {\n                _context2.next = 28;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 28:\n              return _context2.finish(25);\n\n            case 29:\n              return _context2.finish(22);\n\n            case 30:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, getItems, this, [[7, 18, 22, 30], [23,, 25, 29]]);\n    })\n    /**\n     * Returns an iterator that iterates over all {@link module:engine/view/position~Position positions} that are boundaries or\n     * contained in this range.\n     *\n     * This method uses {@link module:engine/view/treewalker~TreeWalker} with `boundaries` set to this range. However it returns only\n     * {@link module:engine/view/position~Position positions}, not {@link module:engine/view/treewalker~TreeWalkerValue}.\n     *\n     * You may specify additional options for the tree walker. See {@link module:engine/view/treewalker~TreeWalker} for\n     * a full list of available options.\n     *\n     * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}.\n     * @returns {Iterable.<module:engine/view/position~Position>}\n     */\n\n  }, {\n    key: \"getPositions\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function getPositions() {\n      var options,\n          treeWalker,\n          _iteratorNormalCompletion2,\n          _didIteratorError2,\n          _iteratorError2,\n          _iterator2,\n          _step2,\n          _value2,\n          _args3 = arguments;\n\n      return regeneratorRuntime.wrap(function getPositions$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              options = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : {};\n              options.boundaries = this;\n              treeWalker = new TreeWalker(options);\n              _context3.next = 5;\n              return treeWalker.position;\n\n            case 5:\n              _iteratorNormalCompletion2 = true;\n              _didIteratorError2 = false;\n              _iteratorError2 = undefined;\n              _context3.prev = 8;\n              _iterator2 = treeWalker[Symbol.iterator]();\n\n            case 10:\n              if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {\n                _context3.next = 17;\n                break;\n              }\n\n              _value2 = _step2.value;\n              _context3.next = 14;\n              return _value2.nextPosition;\n\n            case 14:\n              _iteratorNormalCompletion2 = true;\n              _context3.next = 10;\n              break;\n\n            case 17:\n              _context3.next = 23;\n              break;\n\n            case 19:\n              _context3.prev = 19;\n              _context3.t0 = _context3[\"catch\"](8);\n              _didIteratorError2 = true;\n              _iteratorError2 = _context3.t0;\n\n            case 23:\n              _context3.prev = 23;\n              _context3.prev = 24;\n\n              if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n                _iterator2[\"return\"]();\n              }\n\n            case 26:\n              _context3.prev = 26;\n\n              if (!_didIteratorError2) {\n                _context3.next = 29;\n                break;\n              }\n\n              throw _iteratorError2;\n\n            case 29:\n              return _context3.finish(26);\n\n            case 30:\n              return _context3.finish(23);\n\n            case 31:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, getPositions, this, [[8, 19, 23, 31], [24,, 26, 30]]);\n    })\n    /**\n     * Checks and returns whether this range intersects with the given range.\n     *\n     * @param {module:engine/view/range~Range} otherRange Range to compare with.\n     * @returns {Boolean} True if ranges intersect.\n     */\n\n  }, {\n    key: \"isIntersecting\",\n    value: function isIntersecting(otherRange) {\n      return this.start.isBefore(otherRange.end) && this.end.isAfter(otherRange.start);\n    }\n    /**\n     * Creates a range from the given parents and offsets.\n     *\n     * @protected\n     * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} startElement Start position\n     * parent element.\n     * @param {Number} startOffset Start position offset.\n     * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} endElement End position\n     * parent element.\n     * @param {Number} endOffset End position offset.\n     * @returns {module:engine/view/range~Range} Created range.\n     */\n\n  }, {\n    key: \"isCollapsed\",\n    get: function get() {\n      return this.start.isEqual(this.end);\n    }\n    /**\n     * Returns whether this range is flat, that is if {@link module:engine/view/range~Range#start start} position and\n     * {@link module:engine/view/range~Range#end end} position are in the same {@link module:engine/view/position~Position#parent parent}.\n     *\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isFlat\",\n    get: function get() {\n      return this.start.parent === this.end.parent;\n    }\n    /**\n     * Range root element.\n     *\n     * @type {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment}\n     */\n\n  }, {\n    key: \"root\",\n    get: function get() {\n      return this.start.root;\n    }\n  }], [{\n    key: \"_createFromParentsAndOffsets\",\n    value: function _createFromParentsAndOffsets(startElement, startOffset, endElement, endOffset) {\n      return new this(new Position(startElement, startOffset), new Position(endElement, endOffset));\n    }\n    /**\n     * Creates a new range, spreading from specified {@link module:engine/view/position~Position position} to a position moved by\n     * given `shift`. If `shift` is a negative value, shifted position is treated as the beginning of the range.\n     *\n     * @protected\n     * @param {module:engine/view/position~Position} position Beginning of the range.\n     * @param {Number} shift How long the range should be.\n     * @returns {module:engine/view/range~Range}\n     */\n\n  }, {\n    key: \"_createFromPositionAndShift\",\n    value: function _createFromPositionAndShift(position, shift) {\n      var start = position;\n      var end = position.getShiftedBy(shift);\n      return shift > 0 ? new this(start, end) : new this(end, start);\n    }\n    /**\n     * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n     * that element and ends after the last child of that element.\n     *\n     * @protected\n     * @param {module:engine/view/element~Element} element Element which is a parent for the range.\n     * @returns {module:engine/view/range~Range}\n     */\n\n  }, {\n    key: \"_createIn\",\n    value: function _createIn(element) {\n      return this._createFromParentsAndOffsets(element, 0, element, element.childCount);\n    }\n    /**\n     * Creates a range that starts before given {@link module:engine/view/item~Item view item} and ends after it.\n     *\n     * @protected\n     * @param {module:engine/view/item~Item} item\n     * @returns {module:engine/view/range~Range}\n     */\n\n  }, {\n    key: \"_createOn\",\n    value: function _createOn(item) {\n      var size = item.is('textProxy') ? item.offsetSize : 1;\n      return this._createFromPositionAndShift(Position._createBefore(item), size);\n    }\n  }]);\n\n  return Range;\n}(); // Function used by getEnlarged and getTrimmed methods.\n\n\nexport { Range as default };\n\nfunction enlargeTrimSkip(value) {\n  if (value.item.is('attributeElement') || value.item.is('uiElement')) {\n    return true;\n  }\n\n  return false;\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/count\n */\n\n/**\n * Returns the number of items return by the iterator.\n *\n *\t\tcount( [ 1, 2, 3, 4, 5 ] ); // 5;\n *\n * @param {Iterable.<*>} iterator Any iterator.\n * @returns {Number} Number of items returned by that iterator.\n */\nexport default function count(iterator) {\n  var count = 0;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = iterator[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var _ = _step.value;\n      // eslint-disable-line no-unused-vars\n      count++;\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return count;\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/selection\n */\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport Range from './range';\nimport Position from './position';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport Node from './node';\nimport Element from './element';\nimport count from '@ckeditor/ckeditor5-utils/src/count';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\nimport DocumentSelection from './documentselection';\n/**\n * Class representing an arbirtary selection in the view.\n * See also {@link module:engine/view/documentselection~DocumentSelection}.\n *\n * New selection instances can be created via the constructor or one these methods:\n *\n * * {@link module:engine/view/view~View#createSelection `View#createSelection()`},\n * * {@link module:engine/view/upcastwriter~UpcastWriter#createSelection `UpcastWriter#createSelection()`}.\n *\n * A selection can consist of {@link module:engine/view/range~Range ranges} that can be set by using\n * the {@link module:engine/view/selection~Selection#setTo `Selection#setTo()`} method.\n */\n\nvar Selection =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates new selection instance.\n   *\n   * **Note**: The selection constructor is available as a factory method:\n   *\n   * * {@link module:engine/view/view~View#createSelection `View#createSelection()`},\n   * * {@link module:engine/view/upcastwriter~UpcastWriter#createSelection `UpcastWriter#createSelection()`}.\n   *\n   * \t\t// Creates empty selection without ranges.\n   *\t\tconst selection = writer.createSelection();\n   *\n   *\t\t// Creates selection at the given range.\n   *\t\tconst range = writer.createRange( start, end );\n   *\t\tconst selection = writer.createSelection( range );\n   *\n   *\t\t// Creates selection at the given ranges\n   * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n   *\t\tconst selection = writer.createSelection( ranges );\n   *\n   *\t\t// Creates selection from the other selection.\n   *\t\tconst otherSelection = writer.createSelection();\n   *\t\tconst selection = writer.createSelection( otherSelection );\n   *\n   *\t\t// Creates selection from the document selection.\n   *\t\tconst selection = writer.createSelection( editor.editing.view.document.selection );\n   *\n   * \t\t// Creates selection at the given position.\n   *\t\tconst position = writer.createPositionFromPath( root, path );\n   *\t\tconst selection = writer.createSelection( position );\n   *\n   *\t\t// Creates collapsed selection at the position of given item and offset.\n   *\t\tconst paragraph = writer.createContainerElement( 'paragraph' );\n   *\t\tconst selection = writer.createSelection( paragraph, offset );\n   *\n   *\t\t// Creates a range inside an {@link module:engine/view/element~Element element} which starts before the\n   *\t\t// first child of that element and ends after the last child of that element.\n   *\t\tconst selection = writer.createSelection( paragraph, 'in' );\n   *\n   *\t\t// Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends\n   *\t\t// just after the item.\n   *\t\tconst selection = writer.createSelection( paragraph, 'on' );\n   *\n   * `Selection`'s constructor allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n   *\n   *\t\t// Creates backward selection.\n   *\t\tconst selection = writer.createSelection( range, { backward: true } );\n   *\n   * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n   * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n   * represented in other way, for example by applying proper CSS class.\n   *\n   * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\n   * (and be  properly handled by screen readers).\n   *\n   *\t\t// Creates fake selection with label.\n   *\t\tconst selection = writer.createSelection( range, { fake: true, label: 'foo' } );\n   *\n   * @param {module:engine/view/selection~Selectable} [selectable=null]\n   * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Offset or place when selectable is an `Item`.\n   * @param {Object} [options]\n   * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n   * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n   * @param {String} [options.label] Label for the fake selection.\n   */\n  function Selection() {\n    var selectable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var placeOrOffset = arguments.length > 1 ? arguments[1] : undefined;\n    var options = arguments.length > 2 ? arguments[2] : undefined;\n\n    _classCallCheck(this, Selection);\n\n    /**\n     * Stores all ranges that are selected.\n     *\n     * @protected\n     * @member {Array.<module:engine/view/range~Range>}\n     */\n    this._ranges = [];\n    /**\n     * Specifies whether the last added range was added as a backward or forward range.\n     *\n     * @protected\n     * @member {Boolean}\n     */\n\n    this._lastRangeBackward = false;\n    /**\n     * Specifies whether selection instance is fake.\n     *\n     * @private\n     * @member {Boolean}\n     */\n\n    this._isFake = false;\n    /**\n     * Fake selection's label.\n     *\n     * @private\n     * @member {String}\n     */\n\n    this._fakeSelectionLabel = '';\n    this.setTo(selectable, placeOrOffset, options);\n  }\n  /**\n   * Returns true if selection instance is marked as `fake`.\n   *\n   * @see #setTo\n   * @returns {Boolean}\n   */\n\n\n  _createClass(Selection, [{\n    key: \"getRanges\",\n\n    /**\n     * Returns an iterable that contains copies of all ranges added to the selection.\n     *\n     * @returns {Iterable.<module:engine/view/range~Range>}\n     */\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function getRanges() {\n      var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, range;\n\n      return regeneratorRuntime.wrap(function getRanges$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _iteratorError = undefined;\n              _context.prev = 3;\n              _iterator = this._ranges[Symbol.iterator]();\n\n            case 5:\n              if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                _context.next = 12;\n                break;\n              }\n\n              range = _step.value;\n              _context.next = 9;\n              return range.clone();\n\n            case 9:\n              _iteratorNormalCompletion = true;\n              _context.next = 5;\n              break;\n\n            case 12:\n              _context.next = 18;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](3);\n              _didIteratorError = true;\n              _iteratorError = _context.t0;\n\n            case 18:\n              _context.prev = 18;\n              _context.prev = 19;\n\n              if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n                _iterator[\"return\"]();\n              }\n\n            case 21:\n              _context.prev = 21;\n\n              if (!_didIteratorError) {\n                _context.next = 24;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 24:\n              return _context.finish(21);\n\n            case 25:\n              return _context.finish(18);\n\n            case 26:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, getRanges, this, [[3, 14, 18, 26], [19,, 21, 25]]);\n    })\n    /**\n     * Returns copy of the first range in the selection. First range is the one which\n     * {@link module:engine/view/range~Range#start start} position {@link module:engine/view/position~Position#isBefore is before} start\n     * position of all other ranges (not to confuse with the first range added to the selection).\n     * Returns `null` if no ranges are added to selection.\n     *\n     * @returns {module:engine/view/range~Range|null}\n     */\n\n  }, {\n    key: \"getFirstRange\",\n    value: function getFirstRange() {\n      var first = null;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this._ranges[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var range = _step2.value;\n\n          if (!first || range.start.isBefore(first.start)) {\n            first = range;\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return first ? first.clone() : null;\n    }\n    /**\n     * Returns copy of the last range in the selection. Last range is the one which {@link module:engine/view/range~Range#end end}\n     * position {@link module:engine/view/position~Position#isAfter is after} end position of all other ranges (not to confuse\n     * with the last range added to the selection). Returns `null` if no ranges are added to selection.\n     *\n     * @returns {module:engine/view/range~Range|null}\n     */\n\n  }, {\n    key: \"getLastRange\",\n    value: function getLastRange() {\n      var last = null;\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this._ranges[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var range = _step3.value;\n\n          if (!last || range.end.isAfter(last.end)) {\n            last = range;\n          }\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n            _iterator3[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      return last ? last.clone() : null;\n    }\n    /**\n     * Returns copy of the first position in the selection. First position is the position that\n     * {@link module:engine/view/position~Position#isBefore is before} any other position in the selection ranges.\n     * Returns `null` if no ranges are added to selection.\n     *\n     * @returns {module:engine/view/position~Position|null}\n     */\n\n  }, {\n    key: \"getFirstPosition\",\n    value: function getFirstPosition() {\n      var firstRange = this.getFirstRange();\n      return firstRange ? firstRange.start.clone() : null;\n    }\n    /**\n     * Returns copy of the last position in the selection. Last position is the position that\n     * {@link module:engine/view/position~Position#isAfter is after} any other position in the selection ranges.\n     * Returns `null` if no ranges are added to selection.\n     *\n     * @returns {module:engine/view/position~Position|null}\n     */\n\n  }, {\n    key: \"getLastPosition\",\n    value: function getLastPosition() {\n      var lastRange = this.getLastRange();\n      return lastRange ? lastRange.end.clone() : null;\n    }\n    /**\n     * Checks whether, this selection is equal to given selection. Selections are equal if they have same directions,\n     * same number of ranges and all ranges from one selection equal to a range from other selection.\n     *\n     * @param {module:engine/view/selection~Selection|module:engine/view/documentselection~DocumentSelection} otherSelection\n     * Selection to compare with.\n     * @returns {Boolean} `true` if selections are equal, `false` otherwise.\n     */\n\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(otherSelection) {\n      if (this.isFake != otherSelection.isFake) {\n        return false;\n      }\n\n      if (this.isFake && this.fakeSelectionLabel != otherSelection.fakeSelectionLabel) {\n        return false;\n      }\n\n      if (this.rangeCount != otherSelection.rangeCount) {\n        return false;\n      } else if (this.rangeCount === 0) {\n        return true;\n      }\n\n      if (!this.anchor.isEqual(otherSelection.anchor) || !this.focus.isEqual(otherSelection.focus)) {\n        return false;\n      }\n\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = this._ranges[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var thisRange = _step4.value;\n          var found = false;\n          var _iteratorNormalCompletion5 = true;\n          var _didIteratorError5 = false;\n          var _iteratorError5 = undefined;\n\n          try {\n            for (var _iterator5 = otherSelection._ranges[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n              var otherRange = _step5.value;\n\n              if (thisRange.isEqual(otherRange)) {\n                found = true;\n                break;\n              }\n            }\n          } catch (err) {\n            _didIteratorError5 = true;\n            _iteratorError5 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion5 && _iterator5[\"return\"] != null) {\n                _iterator5[\"return\"]();\n              }\n            } finally {\n              if (_didIteratorError5) {\n                throw _iteratorError5;\n              }\n            }\n          }\n\n          if (!found) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4[\"return\"] != null) {\n            _iterator4[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      return true;\n    }\n    /**\n     * Checks whether this selection is similar to given selection. Selections are similar if they have same directions, same\n     * number of ranges, and all {@link module:engine/view/range~Range#getTrimmed trimmed} ranges from one selection are\n     * equal to any trimmed range from other selection.\n     *\n     * @param {module:engine/view/selection~Selection|module:engine/view/documentselection~DocumentSelection} otherSelection\n     * Selection to compare with.\n     * @returns {Boolean} `true` if selections are similar, `false` otherwise.\n     */\n\n  }, {\n    key: \"isSimilar\",\n    value: function isSimilar(otherSelection) {\n      if (this.isBackward != otherSelection.isBackward) {\n        return false;\n      }\n\n      var numOfRangesA = count(this.getRanges());\n      var numOfRangesB = count(otherSelection.getRanges()); // If selections have different number of ranges, they cannot be similar.\n\n      if (numOfRangesA != numOfRangesB) {\n        return false;\n      } // If both selections have no ranges, they are similar.\n\n\n      if (numOfRangesA == 0) {\n        return true;\n      } // Check if each range in one selection has a similar range in other selection.\n\n\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = this.getRanges()[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var rangeA = _step6.value;\n          rangeA = rangeA.getTrimmed();\n          var found = false;\n          var _iteratorNormalCompletion7 = true;\n          var _didIteratorError7 = false;\n          var _iteratorError7 = undefined;\n\n          try {\n            for (var _iterator7 = otherSelection.getRanges()[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n              var rangeB = _step7.value;\n              rangeB = rangeB.getTrimmed();\n\n              if (rangeA.start.isEqual(rangeB.start) && rangeA.end.isEqual(rangeB.end)) {\n                found = true;\n                break;\n              }\n            } // For `rangeA`, neither range in `otherSelection` was similar. So selections are not similar.\n\n          } catch (err) {\n            _didIteratorError7 = true;\n            _iteratorError7 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion7 && _iterator7[\"return\"] != null) {\n                _iterator7[\"return\"]();\n              }\n            } finally {\n              if (_didIteratorError7) {\n                throw _iteratorError7;\n              }\n            }\n          }\n\n          if (!found) {\n            return false;\n          }\n        } // There were no ranges that weren't matched. Selections are similar.\n\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6[\"return\"] != null) {\n            _iterator6[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n\n      return true;\n    }\n    /**\n     * Returns the selected element. {@link module:engine/view/element~Element Element} is considered as selected if there is only\n     * one range in the selection, and that range contains exactly one element.\n     * Returns `null` if there is no selected element.\n     *\n     * @returns {module:engine/view/element~Element|null}\n     */\n\n  }, {\n    key: \"getSelectedElement\",\n    value: function getSelectedElement() {\n      if (this.rangeCount !== 1) {\n        return null;\n      }\n\n      var range = this.getFirstRange();\n      var nodeAfterStart = range.start.nodeAfter;\n      var nodeBeforeEnd = range.end.nodeBefore; // Handle the situation when selection position is at the beginning / at the end of a text node.\n      // In such situation `.nodeAfter` and `.nodeBefore` are `null` but the selection still might be spanning\n      // over one element.\n      //\n      // <p>Foo{<span class=\"widget\"></span>}bar</p> vs <p>Foo[<span class=\"widget\"></span>]bar</p>\n      //\n      // These are basically the same selections, only the difference is if the selection position is at\n      // at the end/at the beginning of a text node or just before/just after the text node.\n      //\n\n      if (range.start.parent.is('text') && range.start.isAtEnd && range.start.parent.nextSibling) {\n        nodeAfterStart = range.start.parent.nextSibling;\n      }\n\n      if (range.end.parent.is('text') && range.end.isAtStart && range.end.parent.previousSibling) {\n        nodeBeforeEnd = range.end.parent.previousSibling;\n      }\n\n      return nodeAfterStart instanceof Element && nodeAfterStart == nodeBeforeEnd ? nodeAfterStart : null;\n    }\n    /**\n     * Sets this selection's ranges and direction to the specified location based on the given\n     * {@link module:engine/view/selection~Selectable selectable}.\n     *\n     *\t\t// Sets selection to the given range.\n     *\t\tconst range = writer.createRange( start, end );\n     *\t\tselection.setTo( range );\n     *\n     *\t\t// Sets selection to given ranges.\n     * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n     *\t\tselection.setTo( range );\n     *\n     *\t\t// Sets selection to the other selection.\n     *\t\tconst otherSelection = writer.createSelection();\n     *\t\tselection.setTo( otherSelection );\n     *\n     *\t \t// Sets selection to contents of DocumentSelection.\n     *\t\tselection.setTo( editor.editing.view.document.selection );\n     *\n     * \t\t// Sets collapsed selection at the given position.\n     *\t\tconst position = writer.createPositionAt( root, path );\n     *\t\tselection.setTo( position );\n     *\n     * \t\t// Sets collapsed selection at the position of given item and offset.\n     *\t\tselection.setTo( paragraph, offset );\n     *\n     * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n     * that element and ends after the last child of that element.\n     *\n     *\t\tselection.setTo( paragraph, 'in' );\n     *\n     * Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends just after the item.\n     *\n     *\t\tselection.setTo( paragraph, 'on' );\n     *\n     * \t\t// Clears selection. Removes all ranges.\n     *\t\tselection.setTo( null );\n     *\n     * `Selection#setTo()` method allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n     *\n     *\t\t// Sets selection as backward.\n     *\t\tselection.setTo( range, { backward: true } );\n     *\n     * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n     * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n     * represented in other way, for example by applying proper CSS class.\n     *\n     * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\n     * (and be  properly handled by screen readers).\n     *\n     *\t\t// Creates fake selection with label.\n     *\t\tselection.setTo( range, { fake: true, label: 'foo' } );\n     *\n     * @fires change\n     * @param {module:engine/view/selection~Selectable} selectable\n     * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n     * @param {Object} [options]\n     * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n     * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n     * @param {String} [options.label] Label for the fake selection.\n     */\n\n  }, {\n    key: \"setTo\",\n    value: function setTo(selectable, placeOrOffset, options) {\n      if (selectable === null) {\n        this._setRanges([]);\n\n        this._setFakeOptions(placeOrOffset);\n      } else if (selectable instanceof Selection || selectable instanceof DocumentSelection) {\n        this._setRanges(selectable.getRanges(), selectable.isBackward);\n\n        this._setFakeOptions({\n          fake: selectable.isFake,\n          label: selectable.fakeSelectionLabel\n        });\n      } else if (selectable instanceof Range) {\n        this._setRanges([selectable], placeOrOffset && placeOrOffset.backward);\n\n        this._setFakeOptions(placeOrOffset);\n      } else if (selectable instanceof Position) {\n        this._setRanges([new Range(selectable)]);\n\n        this._setFakeOptions(placeOrOffset);\n      } else if (selectable instanceof Node) {\n        var backward = !!options && !!options.backward;\n        var range;\n\n        if (placeOrOffset === undefined) {\n          /**\n           * selection.setTo requires the second parameter when the first parameter is a node.\n           *\n           * @error view-selection-setTo-required-second-parameter\n           */\n          throw new CKEditorError('view-selection-setTo-required-second-parameter: ' + 'selection.setTo requires the second parameter when the first parameter is a node.', this);\n        } else if (placeOrOffset == 'in') {\n          range = Range._createIn(selectable);\n        } else if (placeOrOffset == 'on') {\n          range = Range._createOn(selectable);\n        } else {\n          range = new Range(Position._createAt(selectable, placeOrOffset));\n        }\n\n        this._setRanges([range], backward);\n\n        this._setFakeOptions(options);\n      } else if (isIterable(selectable)) {\n        // We assume that the selectable is an iterable of ranges.\n        // Array.from() is used to prevent setting ranges to the old iterable\n        this._setRanges(selectable, placeOrOffset && placeOrOffset.backward);\n\n        this._setFakeOptions(placeOrOffset);\n      } else {\n        /**\n         * Cannot set selection to given place.\n         *\n         * @error view-selection-setTo-not-selectable\n         */\n        throw new CKEditorError('view-selection-setTo-not-selectable: Cannot set selection to given place.', this);\n      }\n\n      this.fire('change');\n    }\n    /**\n     * Moves {@link #focus} to the specified location.\n     *\n     * The location can be specified in the same form as {@link module:engine/view/view~View#createPositionAt view.createPositionAt()}\n     * parameters.\n     *\n     * @fires change\n     * @param {module:engine/view/item~Item|module:engine/view/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n     * first parameter is a {@link module:engine/view/item~Item view item}.\n     */\n\n  }, {\n    key: \"setFocus\",\n    value: function setFocus(itemOrPosition, offset) {\n      if (this.anchor === null) {\n        /**\n         * Cannot set selection focus if there are no ranges in selection.\n         *\n         * @error view-selection-setFocus-no-ranges\n         */\n        throw new CKEditorError('view-selection-setFocus-no-ranges: Cannot set selection focus if there are no ranges in selection.', this);\n      }\n\n      var newFocus = Position._createAt(itemOrPosition, offset);\n\n      if (newFocus.compareWith(this.focus) == 'same') {\n        return;\n      }\n\n      var anchor = this.anchor;\n\n      this._ranges.pop();\n\n      if (newFocus.compareWith(anchor) == 'before') {\n        this._addRange(new Range(newFocus, anchor), true);\n      } else {\n        this._addRange(new Range(anchor, newFocus));\n      }\n\n      this.fire('change');\n    }\n    /**\n     * Checks whether object is of given type following the convention set by\n     * {@link module:engine/view/node~Node#is `Node#is()`}.\n     *\n     *\t\tconst selection = new Selection( ... );\n     *\n     *\t\tselection.is( 'selection' ); // true\n     *\t\tselection.is( 'node' ); // false\n     *\t\tselection.is( 'element' ); // false\n     *\n     * @param {String} type\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"is\",\n    value: function is(type) {\n      return type == 'selection';\n    }\n    /**\n     * Replaces all ranges that were added to the selection with given array of ranges. Last range of the array\n     * is treated like the last added range and is used to set {@link #anchor anchor} and {@link #focus focus}.\n     * Accepts a flag describing in which way the selection is made.\n     *\n     * @private\n     * @param {Iterable.<module:engine/view/range~Range>} newRanges Iterable object of ranges to set.\n     * @param {Boolean} [isLastBackward=false] Flag describing if last added range was selected forward - from start to end\n     * (`false`) or backward - from end to start (`true`). Defaults to `false`.\n     */\n\n  }, {\n    key: \"_setRanges\",\n    value: function _setRanges(newRanges) {\n      var isLastBackward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      // New ranges should be copied to prevent removing them by setting them to `[]` first.\n      // Only applies to situations when selection is set to the same selection or same selection's ranges.\n      newRanges = Array.from(newRanges);\n      this._ranges = [];\n      var _iteratorNormalCompletion8 = true;\n      var _didIteratorError8 = false;\n      var _iteratorError8 = undefined;\n\n      try {\n        for (var _iterator8 = newRanges[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n          var range = _step8.value;\n\n          this._addRange(range);\n        }\n      } catch (err) {\n        _didIteratorError8 = true;\n        _iteratorError8 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion8 && _iterator8[\"return\"] != null) {\n            _iterator8[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError8) {\n            throw _iteratorError8;\n          }\n        }\n      }\n\n      this._lastRangeBackward = !!isLastBackward;\n    }\n    /**\n     * Sets this selection instance to be marked as `fake`. A fake selection does not render as browser native selection\n     * over selected elements and is hidden to the user. This way, no native selection UI artifacts are displayed to\n     * the user and selection over elements can be represented in other way, for example by applying proper CSS class.\n     *\n     * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM (and be\n     * properly handled by screen readers).\n     *\n     * @private\n     * @param {Object} [options] Options.\n     * @param {Boolean} [options.fake] If set to true selection will be marked as `fake`.\n     * @param {String} [options.label=''] Fake selection label.\n     */\n\n  }, {\n    key: \"_setFakeOptions\",\n    value: function _setFakeOptions() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this._isFake = !!options.fake;\n      this._fakeSelectionLabel = options.fake ? options.label || '' : '';\n    }\n    /**\n     * Adds a range to the selection. Added range is copied. This means that passed range is not saved in the\n     * selection instance and you can safely operate on it.\n     *\n     * Accepts a flag describing in which way the selection is made - passed range might be selected from\n     * {@link module:engine/view/range~Range#start start} to {@link module:engine/view/range~Range#end end}\n     * or from {@link module:engine/view/range~Range#end end} to {@link module:engine/view/range~Range#start start}.\n     * The flag is used to set {@link #anchor anchor} and {@link #focus focus} properties.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-selection-range-intersects` if added range intersects\n     * with ranges already stored in Selection instance.\n     *\n     * @private\n     * @fires change\n     * @param {module:engine/view/range~Range} range\n     * @param {Boolean} [isBackward]\n     */\n\n  }, {\n    key: \"_addRange\",\n    value: function _addRange(range) {\n      var isBackward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!(range instanceof Range)) {\n        /**\n         * Selection range set to an object that is not an instance of {@link module:engine/view/range~Range}.\n         *\n         * @error view-selection-add-range-not-range\n         */\n        throw new CKEditorError('view-selection-add-range-not-range: ' + 'Selection range set to an object that is not an instance of view.Range', this);\n      }\n\n      this._pushRange(range);\n\n      this._lastRangeBackward = !!isBackward;\n    }\n    /**\n     * Adds range to selection - creates copy of given range so it can be safely used and modified.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-selection-range-intersects` if added range intersects\n     * with ranges already stored in selection instance.\n     *\n     * @private\n     * @param {module:engine/view/range~Range} range\n     */\n\n  }, {\n    key: \"_pushRange\",\n    value: function _pushRange(range) {\n      var _iteratorNormalCompletion9 = true;\n      var _didIteratorError9 = false;\n      var _iteratorError9 = undefined;\n\n      try {\n        for (var _iterator9 = this._ranges[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n          var storedRange = _step9.value;\n\n          if (range.isIntersecting(storedRange)) {\n            /**\n             * Trying to add a range that intersects with another range from selection.\n             *\n             * @error view-selection-range-intersects\n             * @param {module:engine/view/range~Range} addedRange Range that was added to the selection.\n             * @param {module:engine/view/range~Range} intersectingRange Range from selection that intersects with `addedRange`.\n             */\n            throw new CKEditorError('view-selection-range-intersects: Trying to add a range that intersects with another range from selection.', this, {\n              addedRange: range,\n              intersectingRange: storedRange\n            });\n          }\n        }\n      } catch (err) {\n        _didIteratorError9 = true;\n        _iteratorError9 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion9 && _iterator9[\"return\"] != null) {\n            _iterator9[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError9) {\n            throw _iteratorError9;\n          }\n        }\n      }\n\n      this._ranges.push(new Range(range.start, range.end));\n    }\n    /**\n     * Fired whenever selection ranges are changed through {@link ~Selection Selection API}.\n     *\n     * @event change\n     */\n\n  }, {\n    key: \"isFake\",\n    get: function get() {\n      return this._isFake;\n    }\n    /**\n     * Returns fake selection label.\n     *\n     * @see #setTo\n     * @returns {String}\n     */\n\n  }, {\n    key: \"fakeSelectionLabel\",\n    get: function get() {\n      return this._fakeSelectionLabel;\n    }\n    /**\n     * Selection anchor. Anchor may be described as a position where the selection starts. Together with\n     * {@link #focus focus} they define the direction of selection, which is important\n     * when expanding/shrinking selection. Anchor is always the start or end of the most recent added range.\n     * It may be a bit unintuitive when there are multiple ranges in selection.\n     *\n     * @see #focus\n     * @type {module:engine/view/position~Position}\n     */\n\n  }, {\n    key: \"anchor\",\n    get: function get() {\n      if (!this._ranges.length) {\n        return null;\n      }\n\n      var range = this._ranges[this._ranges.length - 1];\n      var anchor = this._lastRangeBackward ? range.end : range.start;\n      return anchor.clone();\n    }\n    /**\n     * Selection focus. Focus is a position where the selection ends.\n     *\n     * @see #anchor\n     * @type {module:engine/view/position~Position}\n     */\n\n  }, {\n    key: \"focus\",\n    get: function get() {\n      if (!this._ranges.length) {\n        return null;\n      }\n\n      var range = this._ranges[this._ranges.length - 1];\n      var focus = this._lastRangeBackward ? range.start : range.end;\n      return focus.clone();\n    }\n    /**\n     * Returns whether the selection is collapsed. Selection is collapsed when there is exactly one range which is\n     * collapsed.\n     *\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isCollapsed\",\n    get: function get() {\n      return this.rangeCount === 1 && this._ranges[0].isCollapsed;\n    }\n    /**\n     * Returns number of ranges in selection.\n     *\n     * @type {Number}\n     */\n\n  }, {\n    key: \"rangeCount\",\n    get: function get() {\n      return this._ranges.length;\n    }\n    /**\n     * Specifies whether the {@link #focus} precedes {@link #anchor}.\n     *\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isBackward\",\n    get: function get() {\n      return !this.isCollapsed && this._lastRangeBackward;\n    }\n    /**\n     * {@link module:engine/view/editableelement~EditableElement EditableElement} instance that contains this selection, or `null`\n     * if the selection is not inside an editable element.\n     *\n     * @type {module:engine/view/editableelement~EditableElement|null}\n     */\n\n  }, {\n    key: \"editableElement\",\n    get: function get() {\n      if (this.anchor) {\n        return this.anchor.editableElement;\n      }\n\n      return null;\n    }\n  }]);\n\n  return Selection;\n}();\n\nexport { Selection as default };\nmix(Selection, EmitterMixin);\n/**\n * An entity that is used to set selection.\n *\n * See also {@link module:engine/view/selection~Selection#setTo}\n *\n * @typedef {\n *    module:engine/view/selection~Selection|\n *    module:engine/view/documentselection~DocumentSelection|\n *    module:engine/view/position~Position|\n *    Iterable.<module:engine/view/range~Range>|\n *    module:engine/view/range~Range|\n *    module:engine/view/item~Item|\n *    null\n * } module:engine/view/selection~Selectable\n */","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/documentselection\n */\nimport Selection from './selection';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\n/**\n * Class representing the document selection in the view.\n *\n * Its instance is available in {@link module:engine/view/document~Document#selection `Document#selection`}.\n *\n * It is similar to {@link module:engine/view/selection~Selection} but\n * it has a read-only API and can be modified only by the writer available in\n * the {@link module:engine/view/view~View#change `View#change()`} block\n * (so via {@link module:engine/view/downcastwriter~DowncastWriter#setSelection `DowncastWriter#setSelection()`}).\n */\n\nvar DocumentSelection =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates new DocumentSelection instance.\n   *\n   * \t\t// Creates empty selection without ranges.\n   *\t\tconst selection = new DocumentSelection();\n   *\n   *\t\t// Creates selection at the given range.\n   *\t\tconst range = writer.createRange( start, end );\n   *\t\tconst selection = new DocumentSelection( range );\n   *\n   *\t\t// Creates selection at the given ranges\n   * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( start2, end2 ) ];\n   *\t\tconst selection = new DocumentSelection( ranges );\n   *\n   *\t\t// Creates selection from the other selection.\n   *\t\tconst otherSelection = writer.createSelection();\n   *\t\tconst selection = new DocumentSelection( otherSelection );\n   *\n   * \t\t// Creates selection at the given position.\n   *\t\tconst position = writer.createPositionAt( root, offset );\n   *\t\tconst selection = new DocumentSelection( position );\n   *\n   *\t\t// Creates collapsed selection at the position of given item and offset.\n   *\t\tconst paragraph = writer.createContainerElement( 'paragraph' );\n   *\t\tconst selection = new DocumentSelection( paragraph, offset );\n   *\n   *\t\t// Creates a range inside an {@link module:engine/view/element~Element element} which starts before the\n   *\t\t// first child of that element and ends after the last child of that element.\n   *\t\tconst selection = new DocumentSelection( paragraph, 'in' );\n   *\n   *\t\t// Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends\n   *\t\t// just after the item.\n   *\t\tconst selection = new DocumentSelection( paragraph, 'on' );\n   *\n   * `Selection`'s constructor allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n   *\n   *\t\t// Creates backward selection.\n   *\t\tconst selection = new DocumentSelection( range, { backward: true } );\n   *\n   * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n   * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n   * represented in other way, for example by applying proper CSS class.\n   *\n   * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\n   * (and be  properly handled by screen readers).\n   *\n   *\t\t// Creates fake selection with label.\n   *\t\tconst selection = new DocumentSelection( range, { fake: true, label: 'foo' } );\n   *\n   * @param {module:engine/view/selection~Selectable} [selectable=null]\n   * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Offset or place when selectable is an `Item`.\n   * @param {Object} [options]\n   * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n   * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n   * @param {String} [options.label] Label for the fake selection.\n   */\n  function DocumentSelection() {\n    var selectable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var placeOrOffset = arguments.length > 1 ? arguments[1] : undefined;\n    var options = arguments.length > 2 ? arguments[2] : undefined;\n\n    _classCallCheck(this, DocumentSelection);\n\n    /**\n     * Selection is used internally (`DocumentSelection` is a proxy to that selection).\n     *\n     * @private\n     * @member {module:engine/view/selection~Selection}\n     */\n    this._selection = new Selection(); // Delegate change event to be fired on DocumentSelection instance.\n\n    this._selection.delegate('change').to(this); // Set selection data.\n\n\n    this._selection.setTo(selectable, placeOrOffset, options);\n  }\n  /**\n   * Returns true if selection instance is marked as `fake`.\n   *\n   * @see #_setTo\n   * @returns {Boolean}\n   */\n\n\n  _createClass(DocumentSelection, [{\n    key: \"getRanges\",\n\n    /**\n     * Returns an iterable that contains copies of all ranges added to the selection.\n     *\n     * @returns {Iterable.<module:engine/view/range~Range>}\n     */\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function getRanges() {\n      return regeneratorRuntime.wrap(function getRanges$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.delegateYield(this._selection.getRanges(), \"t0\", 1);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, getRanges, this);\n    })\n    /**\n     * Returns copy of the first range in the selection. First range is the one which\n     * {@link module:engine/view/range~Range#start start} position {@link module:engine/view/position~Position#isBefore is before} start\n     * position of all other ranges (not to confuse with the first range added to the selection).\n     * Returns `null` if no ranges are added to selection.\n     *\n     * @returns {module:engine/view/range~Range|null}\n     */\n\n  }, {\n    key: \"getFirstRange\",\n    value: function getFirstRange() {\n      return this._selection.getFirstRange();\n    }\n    /**\n     * Returns copy of the last range in the selection. Last range is the one which {@link module:engine/view/range~Range#end end}\n     * position {@link module:engine/view/position~Position#isAfter is after} end position of all other ranges (not to confuse\n     * with the last range added to the selection). Returns `null` if no ranges are added to selection.\n     *\n     * @returns {module:engine/view/range~Range|null}\n     */\n\n  }, {\n    key: \"getLastRange\",\n    value: function getLastRange() {\n      return this._selection.getLastRange();\n    }\n    /**\n     * Returns copy of the first position in the selection. First position is the position that\n     * {@link module:engine/view/position~Position#isBefore is before} any other position in the selection ranges.\n     * Returns `null` if no ranges are added to selection.\n     *\n     * @returns {module:engine/view/position~Position|null}\n     */\n\n  }, {\n    key: \"getFirstPosition\",\n    value: function getFirstPosition() {\n      return this._selection.getFirstPosition();\n    }\n    /**\n     * Returns copy of the last position in the selection. Last position is the position that\n     * {@link module:engine/view/position~Position#isAfter is after} any other position in the selection ranges.\n     * Returns `null` if no ranges are added to selection.\n     *\n     * @returns {module:engine/view/position~Position|null}\n     */\n\n  }, {\n    key: \"getLastPosition\",\n    value: function getLastPosition() {\n      return this._selection.getLastPosition();\n    }\n    /**\n     * Returns the selected element. {@link module:engine/view/element~Element Element} is considered as selected if there is only\n     * one range in the selection, and that range contains exactly one element.\n     * Returns `null` if there is no selected element.\n     *\n     * @returns {module:engine/view/element~Element|null}\n     */\n\n  }, {\n    key: \"getSelectedElement\",\n    value: function getSelectedElement() {\n      return this._selection.getSelectedElement();\n    }\n    /**\n     * Checks whether, this selection is equal to given selection. Selections are equal if they have same directions,\n     * same number of ranges and all ranges from one selection equal to a range from other selection.\n     *\n     * @param {module:engine/view/selection~Selection|module:engine/view/documentselection~DocumentSelection} otherSelection\n     * Selection to compare with.\n     * @returns {Boolean} `true` if selections are equal, `false` otherwise.\n     */\n\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(otherSelection) {\n      return this._selection.isEqual(otherSelection);\n    }\n    /**\n     * Checks whether this selection is similar to given selection. Selections are similar if they have same directions, same\n     * number of ranges, and all {@link module:engine/view/range~Range#getTrimmed trimmed} ranges from one selection are\n     * equal to any trimmed range from other selection.\n     *\n     * @param {module:engine/view/selection~Selection|module:engine/view/documentselection~DocumentSelection} otherSelection\n     * Selection to compare with.\n     * @returns {Boolean} `true` if selections are similar, `false` otherwise.\n     */\n\n  }, {\n    key: \"isSimilar\",\n    value: function isSimilar(otherSelection) {\n      return this._selection.isSimilar(otherSelection);\n    }\n    /**\n     * Checks whether object is of given type following the convention set by\n     * {@link module:engine/view/node~Node#is `Node#is()`}.\n     *\n     *\t\tconst selection = new DocumentSelection( ... );\n     *\n     *\t\tselection.is( 'selection' ); // true\n     *\t\tselection.is( 'documentSelection' ); // true\n     *\t\tselection.is( 'node' ); // false\n     *\t\tselection.is( 'element' ); // false\n     *\n     * @param {String} type\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"is\",\n    value: function is(type) {\n      return type == 'selection' || type == 'documentSelection';\n    }\n    /**\n     * Sets this selection's ranges and direction to the specified location based on the given\n     * {@link module:engine/view/selection~Selectable selectable}.\n     *\n     *\t\t// Sets selection to the given range.\n     *\t\tconst range = writer.createRange( start, end );\n     *\t\tdocumentSelection._setTo( range );\n     *\n     *\t\t// Sets selection to given ranges.\n     * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( start2, end2 ) ];\n     *\t\tdocumentSelection._setTo( range );\n     *\n     *\t\t// Sets selection to the other selection.\n     *\t\tconst otherSelection = writer.createSelection();\n     *\t\tdocumentSelection._setTo( otherSelection );\n     *\n     * \t\t// Sets collapsed selection at the given position.\n     *\t\tconst position = writer.createPositionAt( root, offset );\n     *\t\tdocumentSelection._setTo( position );\n     *\n     * \t\t// Sets collapsed selection at the position of given item and offset.\n     *\t\tdocumentSelection._setTo( paragraph, offset );\n     *\n     * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n     * that element and ends after the last child of that element.\n     *\n     *\t\tdocumentSelection._setTo( paragraph, 'in' );\n     *\n     * Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends just after the item.\n     *\n     *\t\tdocumentSelection._setTo( paragraph, 'on' );\n     *\n     * \t\t// Clears selection. Removes all ranges.\n     *\t\tdocumentSelection._setTo( null );\n     *\n     * `Selection#_setTo()` method allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n     *\n     *\t\t// Sets selection as backward.\n     *\t\tdocumentSelection._setTo( range, { backward: true } );\n     *\n     * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n     * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n     * represented in other way, for example by applying proper CSS class.\n     *\n     * Additionally fake's selection label can be provided. It will be used to des cribe fake selection in DOM\n     * (and be  properly handled by screen readers).\n     *\n     *\t\t// Creates fake selection with label.\n     *\t\tdocumentSelection._setTo( range, { fake: true, label: 'foo' } );\n     *\n     * @protected\n     * @fires change\n     * @param {module:engine/view/selection~Selectable} selectable\n     * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n     * @param {Object} [options]\n     * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n     * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n     * @param {String} [options.label] Label for the fake selection.\n     */\n\n  }, {\n    key: \"_setTo\",\n    value: function _setTo(selectable, placeOrOffset, options) {\n      this._selection.setTo(selectable, placeOrOffset, options);\n    }\n    /**\n     * Moves {@link #focus} to the specified location.\n     *\n     * The location can be specified in the same form as {@link module:engine/view/view~View#createPositionAt view.createPositionAt()}\n     * parameters.\n     *\n     * @protected\n     * @fires change\n     * @param {module:engine/view/item~Item|module:engine/view/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n     * first parameter is a {@link module:engine/view/item~Item view item}.\n     */\n\n  }, {\n    key: \"_setFocus\",\n    value: function _setFocus(itemOrPosition, offset) {\n      this._selection.setFocus(itemOrPosition, offset);\n    }\n    /**\n     * Fired whenever selection ranges are changed through {@link ~DocumentSelection Selection API}.\n     *\n     * @event change\n     */\n\n  }, {\n    key: \"isFake\",\n    get: function get() {\n      return this._selection.isFake;\n    }\n    /**\n     * Returns fake selection label.\n     *\n     * @see #_setTo\n     * @returns {String}\n     */\n\n  }, {\n    key: \"fakeSelectionLabel\",\n    get: function get() {\n      return this._selection.fakeSelectionLabel;\n    }\n    /**\n     * Selection anchor. Anchor may be described as a position where the selection starts. Together with\n     * {@link #focus focus} they define the direction of selection, which is important\n     * when expanding/shrinking selection. Anchor is always the start or end of the most recent added range.\n     * It may be a bit unintuitive when there are multiple ranges in selection.\n     *\n     * @see #focus\n     * @type {module:engine/view/position~Position}\n     */\n\n  }, {\n    key: \"anchor\",\n    get: function get() {\n      return this._selection.anchor;\n    }\n    /**\n     * Selection focus. Focus is a position where the selection ends.\n     *\n     * @see #anchor\n     * @type {module:engine/view/position~Position}\n     */\n\n  }, {\n    key: \"focus\",\n    get: function get() {\n      return this._selection.focus;\n    }\n    /**\n     * Returns whether the selection is collapsed. Selection is collapsed when there is exactly one range which is\n     * collapsed.\n     *\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isCollapsed\",\n    get: function get() {\n      return this._selection.isCollapsed;\n    }\n    /**\n     * Returns number of ranges in selection.\n     *\n     * @type {Number}\n     */\n\n  }, {\n    key: \"rangeCount\",\n    get: function get() {\n      return this._selection.rangeCount;\n    }\n    /**\n     * Specifies whether the {@link #focus} precedes {@link #anchor}.\n     *\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isBackward\",\n    get: function get() {\n      return this._selection.isBackward;\n    }\n    /**\n     * {@link module:engine/view/editableelement~EditableElement EditableElement} instance that contains this selection, or `null`\n     * if the selection is not inside an editable element.\n     *\n     * @type {module:engine/view/editableelement~EditableElement|null}\n     */\n\n  }, {\n    key: \"editableElement\",\n    get: function get() {\n      return this._selection.editableElement;\n    }\n    /**\n     * Used for the compatibility with the {@link module:engine/view/selection~Selection#isEqual} method.\n     *\n     * @protected\n     */\n\n  }, {\n    key: \"_ranges\",\n    get: function get() {\n      return this._selection._ranges;\n    }\n  }]);\n\n  return DocumentSelection;\n}();\n\nexport { DocumentSelection as default };\nmix(DocumentSelection, EmitterMixin);","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/collection\n */\nimport EmitterMixin from './emittermixin';\nimport CKEditorError from './ckeditorerror';\nimport uid from './uid';\nimport mix from './mix';\n/**\n * Collections are ordered sets of objects. Items in the collection can be retrieved by their indexes\n * in the collection (like in an array) or by their ids.\n *\n * If an object without an `id` property is being added to the collection, the `id` property will be generated\n * automatically. Note that the automatically generated id is unique only within this single collection instance.\n *\n * By default an item in the collection is identified by its `id` property. The name of the identifier can be\n * configured through the constructor of the collection.\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n */\n\nvar Collection =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a new Collection instance.\n   *\n   * @param {Object} [options={}] The options object.\n   * @param {String} [options.idProperty='id'] The name of the property which is considered to identify an item.\n   */\n  function Collection() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Collection);\n\n    /**\n     * The internal list of items in the collection.\n     *\n     * @private\n     * @member {Object[]}\n     */\n    this._items = [];\n    /**\n     * The internal map of items in the collection.\n     *\n     * @private\n     * @member {Map}\n     */\n\n    this._itemMap = new Map();\n    /**\n     * The name of the property which is considered to identify an item.\n     *\n     * @private\n     * @member {String}\n     */\n\n    this._idProperty = options.idProperty || 'id';\n    /**\n     * A helper mapping external items of a bound collection ({@link #bindTo})\n     * and actual items of this collection. It provides information\n     * necessary to properly remove items bound to another collection.\n     *\n     * See {@link #_bindToInternalToExternalMap}.\n     *\n     * @protected\n     * @member {WeakMap}\n     */\n\n    this._bindToExternalToInternalMap = new WeakMap();\n    /**\n     * A helper mapping items of this collection to external items of a bound collection\n     * ({@link #bindTo}). It provides information necessary to manage the bindings, e.g.\n     * to avoid loops in two–way bindings.\n     *\n     * See {@link #_bindToExternalToInternalMap}.\n     *\n     * @protected\n     * @member {WeakMap}\n     */\n\n    this._bindToInternalToExternalMap = new WeakMap();\n    /**\n     * Stores indexes of skipped items from bound external collection.\n     *\n     * @private\n     * @member {Array}\n     */\n\n    this._skippedIndexesFromExternal = [];\n    /**\n     * A collection instance this collection is bound to as a result\n     * of calling {@link #bindTo} method.\n     *\n     * @protected\n     * @member {module:utils/collection~Collection} #_bindToCollection\n     */\n  }\n  /**\n   * The number of items available in the collection.\n   *\n   * @member {Number} #length\n   */\n\n\n  _createClass(Collection, [{\n    key: \"add\",\n\n    /**\n     * Adds an item into the collection.\n     *\n     * If the item does not have an id, then it will be automatically generated and set on the item.\n     *\n     * @chainable\n     * @param {Object} item\n     * @param {Number} [index] The position of the item in the collection. The item\n     * is pushed to the collection when `index` not specified.\n     * @fires add\n     */\n    value: function add(item, index) {\n      var itemId;\n      var idProperty = this._idProperty;\n\n      if (idProperty in item) {\n        itemId = item[idProperty];\n\n        if (typeof itemId != 'string') {\n          /**\n           * This item's id should be a string.\n           *\n           * @error collection-add-invalid-id\n           */\n          throw new CKEditorError('collection-add-invalid-id', this);\n        }\n\n        if (this.get(itemId)) {\n          /**\n           * This item already exists in the collection.\n           *\n           * @error collection-add-item-already-exists\n           */\n          throw new CKEditorError('collection-add-item-already-exists', this);\n        }\n      } else {\n        item[idProperty] = itemId = uid();\n      } // TODO: Use ES6 default function argument.\n\n\n      if (index === undefined) {\n        index = this._items.length;\n      } else if (index > this._items.length || index < 0) {\n        /**\n         * The index number has invalid value.\n         *\n         * @error collection-add-item-bad-index\n         */\n        throw new CKEditorError('collection-add-item-invalid-index', this);\n      }\n\n      this._items.splice(index, 0, item);\n\n      this._itemMap.set(itemId, item);\n\n      this.fire('add', item, index);\n      return this;\n    }\n    /**\n     * Gets item by its id or index.\n     *\n     * @param {String|Number} idOrIndex The item id or index in the collection.\n     * @returns {Object|null} The requested item or `null` if such item does not exist.\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(idOrIndex) {\n      var item;\n\n      if (typeof idOrIndex == 'string') {\n        item = this._itemMap.get(idOrIndex);\n      } else if (typeof idOrIndex == 'number') {\n        item = this._items[idOrIndex];\n      } else {\n        /**\n         * Index or id must be given.\n         *\n         * @error collection-get-invalid-arg\n         */\n        throw new CKEditorError('collection-get-invalid-arg: Index or id must be given.', this);\n      }\n\n      return item || null;\n    }\n    /**\n     * Returns a boolean indicating whether the collection contains an item.\n     *\n     * @param {Object|String} itemOrId The item or its id in the collection.\n     * @returns {Boolean} `true` if the collection contains the item, `false` otherwise.\n     */\n\n  }, {\n    key: \"has\",\n    value: function has(itemOrId) {\n      if (typeof itemOrId == 'string') {\n        return this._itemMap.has(itemOrId);\n      } else {\n        // Object\n        var idProperty = this._idProperty;\n        var id = itemOrId[idProperty];\n        return this._itemMap.has(id);\n      }\n    }\n    /**\n     * Gets index of item in the collection.\n     * When item is not defined in the collection then index will be equal -1.\n     *\n     * @param {Object|String} itemOrId The item or its id in the collection.\n     * @returns {Number} Index of given item.\n     */\n\n  }, {\n    key: \"getIndex\",\n    value: function getIndex(itemOrId) {\n      var item;\n\n      if (typeof itemOrId == 'string') {\n        item = this._itemMap.get(itemOrId);\n      } else {\n        item = itemOrId;\n      }\n\n      return this._items.indexOf(item);\n    }\n    /**\n     * Removes an item from the collection.\n     *\n     * @param {Object|Number|String} subject The item to remove, its id or index in the collection.\n     * @returns {Object} The removed item.\n     * @fires remove\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(subject) {\n      var index, id, item;\n      var itemDoesNotExist = false;\n      var idProperty = this._idProperty;\n\n      if (typeof subject == 'string') {\n        id = subject;\n        item = this._itemMap.get(id);\n        itemDoesNotExist = !item;\n\n        if (item) {\n          index = this._items.indexOf(item);\n        }\n      } else if (typeof subject == 'number') {\n        index = subject;\n        item = this._items[index];\n        itemDoesNotExist = !item;\n\n        if (item) {\n          id = item[idProperty];\n        }\n      } else {\n        item = subject;\n        id = item[idProperty];\n        index = this._items.indexOf(item);\n        itemDoesNotExist = index == -1 || !this._itemMap.get(id);\n      }\n\n      if (itemDoesNotExist) {\n        /**\n         * Item not found.\n         *\n         * @error collection-remove-404\n         */\n        throw new CKEditorError('collection-remove-404: Item not found.', this);\n      }\n\n      this._items.splice(index, 1);\n\n      this._itemMap[\"delete\"](id);\n\n      var externalItem = this._bindToInternalToExternalMap.get(item);\n\n      this._bindToInternalToExternalMap[\"delete\"](item);\n\n      this._bindToExternalToInternalMap[\"delete\"](externalItem);\n\n      this.fire('remove', item, index);\n      return item;\n    }\n    /**\n     * Executes the callback for each item in the collection and composes an array or values returned by this callback.\n     *\n     * @param {Function} callback\n     * @param {Object} callback.item\n     * @param {Number} callback.index\n     * @param {Object} ctx Context in which the `callback` will be called.\n     * @returns {Array} The result of mapping.\n     */\n\n  }, {\n    key: \"map\",\n    value: function map(callback, ctx) {\n      return this._items.map(callback, ctx);\n    }\n    /**\n     * Finds the first item in the collection for which the `callback` returns a true value.\n     *\n     * @param {Function} callback\n     * @param {Object} callback.item\n     * @param {Number} callback.index\n     * @param {Object} ctx Context in which the `callback` will be called.\n     * @returns {Object} The item for which `callback` returned a true value.\n     */\n\n  }, {\n    key: \"find\",\n    value: function find(callback, ctx) {\n      return this._items.find(callback, ctx);\n    }\n    /**\n     * Returns an array with items for which the `callback` returned a true value.\n     *\n     * @param {Function} callback\n     * @param {Object} callback.item\n     * @param {Number} callback.index\n     * @param {Object} ctx Context in which the `callback` will be called.\n     * @returns {Object[]} The array with matching items.\n     */\n\n  }, {\n    key: \"filter\",\n    value: function filter(callback, ctx) {\n      return this._items.filter(callback, ctx);\n    }\n    /**\n     * Removes all items from the collection and destroys the binding created using\n     * {@link #bindTo}.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      if (this._bindToCollection) {\n        this.stopListening(this._bindToCollection);\n        this._bindToCollection = null;\n      }\n\n      while (this.length) {\n        this.remove(0);\n      }\n    }\n    /**\n     * Binds and synchronizes the collection with another one.\n     *\n     * The binding can be a simple factory:\n     *\n     *\t\tclass FactoryClass {\n     *\t\t\tconstructor( data ) {\n     *\t\t\t\tthis.label = data.label;\n     *\t\t\t}\n     *\t\t}\n     *\n     *\t\tconst source = new Collection( { idProperty: 'label' } );\n     *\t\tconst target = new Collection();\n     *\n     *\t\ttarget.bindTo( source ).as( FactoryClass );\n     *\n     *\t\tsource.add( { label: 'foo' } );\n     *\t\tsource.add( { label: 'bar' } );\n     *\n     *\t\tconsole.log( target.length ); // 2\n     *\t\tconsole.log( target.get( 1 ).label ); // 'bar'\n     *\n     *\t\tsource.remove( 0 );\n     *\t\tconsole.log( target.length ); // 1\n     *\t\tconsole.log( target.get( 0 ).label ); // 'bar'\n     *\n     * or the factory driven by a custom callback:\n     *\n     *\t\tclass FooClass {\n     *\t\t\tconstructor( data ) {\n     *\t\t\t\tthis.label = data.label;\n     *\t\t\t}\n     *\t\t}\n     *\n     *\t\tclass BarClass {\n     *\t\t\tconstructor( data ) {\n     *\t\t\t\tthis.label = data.label;\n     *\t\t\t}\n     *\t\t}\n     *\n     *\t\tconst source = new Collection( { idProperty: 'label' } );\n     *\t\tconst target = new Collection();\n     *\n     *\t\ttarget.bindTo( source ).using( ( item ) => {\n     *\t\t\tif ( item.label == 'foo' ) {\n     *\t\t\t\treturn new FooClass( item );\n     *\t\t\t} else {\n     *\t\t\t\treturn new BarClass( item );\n     *\t\t\t}\n     *\t\t} );\n     *\n     *\t\tsource.add( { label: 'foo' } );\n     *\t\tsource.add( { label: 'bar' } );\n     *\n     *\t\tconsole.log( target.length ); // 2\n     *\t\tconsole.log( target.get( 0 ) instanceof FooClass ); // true\n     *\t\tconsole.log( target.get( 1 ) instanceof BarClass ); // true\n     *\n     * or the factory out of property name:\n     *\n     *\t\tconst source = new Collection( { idProperty: 'label' } );\n     *\t\tconst target = new Collection();\n     *\n     *\t\ttarget.bindTo( source ).using( 'label' );\n     *\n     *\t\tsource.add( { label: { value: 'foo' } } );\n     *\t\tsource.add( { label: { value: 'bar' } } );\n     *\n     *\t\tconsole.log( target.length ); // 2\n     *\t\tconsole.log( target.get( 0 ).value ); // 'foo'\n     *\t\tconsole.log( target.get( 1 ).value ); // 'bar'\n     *\n     * It's possible to skip specified items by returning falsy value:\n     *\n     *\t\tconst source = new Collection();\n     *\t\tconst target = new Collection();\n     *\n     *\t\ttarget.bindTo( source ).using( item => {\n     *\t\t\tif ( item.hidden ) {\n     *\t\t\t\treturn null;\n     *\t\t\t}\n     *\n     *\t\t\treturn item;\n     *\t\t} );\n     *\n     *\t\tsource.add( { hidden: true } );\n     *\t\tsource.add( { hidden: false } );\n     *\n     *\t\tconsole.log( source.length ); // 2\n     *\t\tconsole.log( target.length ); // 1\n     *\n     * **Note**: {@link #clear} can be used to break the binding.\n     *\n     * @param {module:utils/collection~Collection} externalCollection A collection to be bound.\n     * @returns {Object}\n     * @returns {module:utils/collection~CollectionBindToChain} The binding chain object.\n     */\n\n  }, {\n    key: \"bindTo\",\n    value: function bindTo(externalCollection) {\n      var _this = this;\n\n      if (this._bindToCollection) {\n        /**\n         * The collection cannot be bound more than once.\n         *\n         * @error collection-bind-to-rebind\n         */\n        throw new CKEditorError('collection-bind-to-rebind: The collection cannot be bound more than once.', this);\n      }\n\n      this._bindToCollection = externalCollection;\n      return {\n        as: function as(Class) {\n          _this._setUpBindToBinding(function (item) {\n            return new Class(item);\n          });\n        },\n        using: function using(callbackOrProperty) {\n          if (typeof callbackOrProperty == 'function') {\n            _this._setUpBindToBinding(function (item) {\n              return callbackOrProperty(item);\n            });\n          } else {\n            _this._setUpBindToBinding(function (item) {\n              return item[callbackOrProperty];\n            });\n          }\n        }\n      };\n    }\n    /**\n     * Finalizes and activates a binding initiated by {#bindTo}.\n     *\n     * @protected\n     * @param {Function} factory A function which produces collection items.\n     */\n\n  }, {\n    key: \"_setUpBindToBinding\",\n    value: function _setUpBindToBinding(factory) {\n      var _this2 = this;\n\n      var externalCollection = this._bindToCollection; // Adds the item to the collection once a change has been done to the external collection.\n      //\n      // @private\n\n      var addItem = function addItem(evt, externalItem, index) {\n        var isExternalBoundToThis = externalCollection._bindToCollection == _this2;\n\n        var externalItemBound = externalCollection._bindToInternalToExternalMap.get(externalItem); // If an external collection is bound to this collection, which makes it a 2–way binding,\n        // and the particular external collection item is already bound, don't add it here.\n        // The external item has been created **out of this collection's item** and (re)adding it will\n        // cause a loop.\n\n\n        if (isExternalBoundToThis && externalItemBound) {\n          _this2._bindToExternalToInternalMap.set(externalItem, externalItemBound);\n\n          _this2._bindToInternalToExternalMap.set(externalItemBound, externalItem);\n        } else {\n          var item = factory(externalItem); // When there is no item we need to remember skipped index first and then we can skip this item.\n\n          if (!item) {\n            _this2._skippedIndexesFromExternal.push(index);\n\n            return;\n          } // Lets try to put item at the same index as index in external collection\n          // but when there are a skipped items in one or both collections we need to recalculate this index.\n\n\n          var finalIndex = index; // When we try to insert item after some skipped items from external collection we need\n          // to include this skipped items and decrease index.\n          //\n          // For the following example:\n          // external -> [ 'A', 'B - skipped for internal', 'C - skipped for internal' ]\n          // internal -> [ A ]\n          //\n          // Another item is been added at the end of external collection:\n          // external.add( 'D' )\n          // external -> [ 'A', 'B - skipped for internal', 'C - skipped for internal', 'D' ]\n          //\n          // We can't just add 'D' to internal at the same index as index in external because\n          // this will produce empty indexes what is invalid:\n          // internal -> [ 'A', empty, empty, 'D' ]\n          //\n          // So we need to include skipped items and decrease index\n          // internal -> [ 'A', 'D' ]\n\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = _this2._skippedIndexesFromExternal[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var skipped = _step.value;\n\n              if (index > skipped) {\n                finalIndex--;\n              }\n            } // We need to take into consideration that external collection could skip some items from\n            // internal collection.\n            //\n            // For the following example:\n            // internal -> [ 'A', 'B - skipped for external', 'C - skipped for external' ]\n            // external -> [ A ]\n            //\n            // Another item is been added at the end of external collection:\n            // external.add( 'D' )\n            // external -> [ 'A', 'D' ]\n            //\n            // We need to include skipped items and place new item after them:\n            // internal -> [ 'A', 'B - skipped for external', 'C - skipped for external', 'D' ]\n\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n                _iterator[\"return\"]();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = externalCollection._skippedIndexesFromExternal[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var _skipped = _step2.value;\n\n              if (finalIndex >= _skipped) {\n                finalIndex++;\n              }\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n                _iterator2[\"return\"]();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n\n          _this2._bindToExternalToInternalMap.set(externalItem, item);\n\n          _this2._bindToInternalToExternalMap.set(item, externalItem);\n\n          _this2.add(item, finalIndex); // After adding new element to internal collection we need update indexes\n          // of skipped items in external collection.\n\n\n          for (var i = 0; i < externalCollection._skippedIndexesFromExternal.length; i++) {\n            if (finalIndex <= externalCollection._skippedIndexesFromExternal[i]) {\n              externalCollection._skippedIndexesFromExternal[i]++;\n            }\n          }\n        }\n      }; // Load the initial content of the collection.\n\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = externalCollection[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var externalItem = _step3.value;\n          addItem(null, externalItem, externalCollection.getIndex(externalItem));\n        } // Synchronize the with collection as new items are added.\n\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n            _iterator3[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      this.listenTo(externalCollection, 'add', addItem); // Synchronize the with collection as new items are removed.\n\n      this.listenTo(externalCollection, 'remove', function (evt, externalItem, index) {\n        var item = _this2._bindToExternalToInternalMap.get(externalItem);\n\n        if (item) {\n          _this2.remove(item);\n        } // After removing element from external collection we need update/remove indexes\n        // of skipped items in internal collection.\n\n\n        _this2._skippedIndexesFromExternal = _this2._skippedIndexesFromExternal.reduce(function (result, skipped) {\n          if (index < skipped) {\n            result.push(skipped - 1);\n          }\n\n          if (index > skipped) {\n            result.push(skipped);\n          }\n\n          return result;\n        }, []);\n      });\n    }\n    /**\n     * Iterable interface.\n     *\n     * @returns {Iterable.<*>}\n     */\n\n  }, {\n    key: Symbol.iterator,\n    value: function value() {\n      return this._items[Symbol.iterator]();\n    }\n    /**\n     * Fired when an item is added to the collection.\n     *\n     * @event add\n     * @param {Object} item The added item.\n     */\n\n    /**\n     * Fired when an item is removed from the collection.\n     *\n     * @event remove\n     * @param {Object} item The removed item.\n     * @param {Number} index Index from which item was removed.\n     */\n\n  }, {\n    key: \"length\",\n    get: function get() {\n      return this._items.length;\n    }\n    /**\n     * Returns the first item from the collection or null when collection is empty.\n     *\n     * @returns {Object|null} The first item or `null` if collection is empty.\n     */\n\n  }, {\n    key: \"first\",\n    get: function get() {\n      return this._items[0] || null;\n    }\n    /**\n     * Returns the last item from the collection or null when collection is empty.\n     *\n     * @returns {Object|null} The last item or `null` if collection is empty.\n     */\n\n  }, {\n    key: \"last\",\n    get: function get() {\n      return this._items[this.length - 1] || null;\n    }\n  }]);\n\n  return Collection;\n}();\n\nexport { Collection as default };\nmix(Collection, EmitterMixin);\n/**\n * An object returned by the {@link module:utils/collection~Collection#bindTo `bindTo()`} method\n * providing functions that specify the type of the binding.\n *\n * See the {@link module:utils/collection~Collection#bindTo `bindTo()`} documentation for examples.\n *\n * @interface module:utils/collection~CollectionBindToChain\n */\n\n/**\n * Creates a callback or a property binding.\n *\n * @method #using\n * @param {Function|String} callbackOrProperty  When the function is passed, it should return\n * the collection items. When the string is provided, the property value is used to create the bound collection items.\n */\n\n/**\n * Creates the class factory binding in which items of the source collection are passed to\n * the constructor of the specified class.\n *\n * @method #as\n * @param {Function} Class The class constructor used to create instances in the factory.\n */","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/document\n */\nimport DocumentSelection from './documentselection';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\n/**\n * Document class creates an abstract layer over the content editable area, contains a tree of view elements and\n * {@link module:engine/view/documentselection~DocumentSelection view selection} associated with this document.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\n\nvar Document =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a Document instance.\n   */\n  function Document() {\n    _classCallCheck(this, Document);\n\n    /**\n     * Selection done on this document.\n     *\n     * @readonly\n     * @member {module:engine/view/documentselection~DocumentSelection} module:engine/view/document~Document#selection\n     */\n    this.selection = new DocumentSelection();\n    /**\n     * Roots of the view tree. Collection of the {@link module:engine/view/element~Element view elements}.\n     *\n     * View roots are created as a result of binding between {@link module:engine/view/document~Document#roots} and\n     * {@link module:engine/model/document~Document#roots} and this is handled by\n     * {@link module:engine/controller/editingcontroller~EditingController}, so to create view root we need to create\n     * model root using {@link module:engine/model/document~Document#createRoot}.\n     *\n     * @readonly\n     * @member {module:utils/collection~Collection} module:engine/view/document~Document#roots\n     */\n\n    this.roots = new Collection({\n      idProperty: 'rootName'\n    });\n    /**\n     * Defines whether document is in read-only mode.\n     *\n     * When document is read-ony then all roots are read-only as well and caret placed inside this root is hidden.\n     *\n     * @observable\n     * @member {Boolean} #isReadOnly\n     */\n\n    this.set('isReadOnly', false);\n    /**\n     * True if document is focused.\n     *\n     * This property is updated by the {@link module:engine/view/observer/focusobserver~FocusObserver}.\n     * If the {@link module:engine/view/observer/focusobserver~FocusObserver} is disabled this property will not change.\n     *\n     * @readonly\n     * @observable\n     * @member {Boolean} module:engine/view/document~Document#isFocused\n     */\n\n    this.set('isFocused', false);\n    /**\n     * True if composition is in progress inside the document.\n     *\n     * This property is updated by the {@link module:engine/view/observer/compositionobserver~CompositionObserver}.\n     * If the {@link module:engine/view/observer/compositionobserver~CompositionObserver} is disabled this property will not change.\n     *\n     * @readonly\n     * @observable\n     * @member {Boolean} module:engine/view/document~Document#isComposing\n     */\n\n    this.set('isComposing', false);\n    /**\n     * Post-fixer callbacks registered to the view document.\n     *\n     * @private\n     * @member {Set}\n     */\n\n    this._postFixers = new Set();\n  }\n  /**\n   * Gets a {@link module:engine/view/document~Document#roots view root element} with the specified name. If the name is not\n   * specific \"main\" root is returned.\n   *\n   * @param {String} [name='main'] Name of the root.\n   * @returns {module:engine/view/rooteditableelement~RootEditableElement|null} The view root element with the specified name\n   * or null when there is no root of given name.\n   */\n\n\n  _createClass(Document, [{\n    key: \"getRoot\",\n    value: function getRoot() {\n      var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'main';\n      return this.roots.get(name);\n    }\n    /**\n     * Used to register a post-fixer callback. A post-fixers mechanism allows to update view tree just before rendering\n     * to the DOM.\n     *\n     * Post-fixers are fired just after all changes from the outermost change block were applied but\n     * before the {@link module:engine/view/view~View#event:render render event} is fired. If a post-fixer callback made\n     * a change, it should return `true`. When this happens, all post-fixers are fired again to check if something else should\n     * not be fixed in the new document tree state.\n     *\n     * View post-fixers are useful when you wants to update view structure whenever it changes, for instance add some classes\n     * to elements based on the view structure or selection. However, is you need DOM elements to be already updated, use\n     * {@link module:engine/view/view~View#event:render render event}.\n     *\n     * As a parameter, a post-fixer callback receives a {@link module:engine/view/downcastwriter~DowncastWriter downcast writer}\n     * instance connected with the executed changes block.\n     *\n     * Note that registering a post-fixer won't re-render the editor's view. If the view should change after registering the post-fixer then\n     * it should be done manually calling `view.forceRender();`.\n     *\n     * @param {Function} postFixer\n     */\n\n  }, {\n    key: \"registerPostFixer\",\n    value: function registerPostFixer(postFixer) {\n      this._postFixers.add(postFixer);\n    }\n    /**\n     * Destroys this instance. Makes sure that all observers are destroyed and listeners removed.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.roots.map(function (root) {\n        return root.destroy();\n      });\n      this.stopListening();\n    }\n    /**\n     * Performs post-fixer loops. Executes post-fixer callbacks as long as none of them has done any changes to the model.\n     *\n     * @protected\n     * @param {module:engine/view/downcastwriter~DowncastWriter} writer\n     */\n\n  }, {\n    key: \"_callPostFixers\",\n    value: function _callPostFixers(writer) {\n      var wasFixed = false;\n\n      do {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = this._postFixers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var callback = _step.value;\n            wasFixed = callback(writer);\n\n            if (wasFixed) {\n              break;\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n              _iterator[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      } while (wasFixed);\n    }\n    /**\n     * Event fired whenever document content layout changes. It is fired whenever content is\n     * {@link module:engine/view/view~View#event:render rendered}, but should be also fired by observers in case of\n     * other actions which may change layout, for instance when image loads.\n     *\n     * @event layoutChanged\n     */\n\n  }]);\n\n  return Document;\n}();\n\nexport { Document as default };\nmix(Document, ObservableMixin);\n/**\n * Enum representing type of the change.\n *\n * Possible values:\n *\n * * `children` - for child list changes,\n * * `attributes` - for element attributes changes,\n * * `text` - for text nodes changes.\n *\n * @typedef {String} module:engine/view/document~ChangeType\n */","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/attributeelement\n */\nimport Element from './element';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror'; // Default attribute priority.\n\nvar DEFAULT_PRIORITY = 10;\n/**\n * Attribute elements are used to represent formatting elements in the view (think – `<b>`, `<span style=\"font-size: 2em\">`, etc.).\n * Most often they are created when downcasting model text attributes.\n *\n * Editing engine does not define a fixed HTML DTD. This is why a feature developer needs to choose between various\n * types (container element, {@link module:engine/view/attributeelement~AttributeElement attribute element},\n * {@link module:engine/view/emptyelement~EmptyElement empty element}, etc) when developing a feature.\n *\n * To create a new attribute element instance use the\n * {@link module:engine/view/downcastwriter~DowncastWriter#createAttributeElement `DowncastWriter#createAttributeElement()`} method.\n *\n * @extends module:engine/view/element~Element\n */\n\nvar AttributeElement =\n/*#__PURE__*/\nfunction (_Element) {\n  _inherits(AttributeElement, _Element);\n\n  /**\n   * Creates an attribute element.\n   *\n   * @see module:engine/view/downcastwriter~DowncastWriter#createAttributeElement\n   * @see module:engine/view/element~Element\n   * @protected\n   */\n  function AttributeElement(name, attrs, children) {\n    var _this;\n\n    _classCallCheck(this, AttributeElement);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AttributeElement).call(this, name, attrs, children));\n    /**\n     * Returns block {@link module:engine/view/filler filler} offset or `null` if block filler is not needed.\n     *\n     * @method #getFillerOffset\n     * @returns {Number|null} Block filler offset or `null` if block filler is not needed.\n     */\n\n    _this.getFillerOffset = getFillerOffset;\n    /**\n     * Element priority. Decides in what order elements are wrapped by {@link module:engine/view/downcastwriter~DowncastWriter}.\n     *\n     * @protected\n     * @member {Number}\n     */\n\n    _this._priority = DEFAULT_PRIORITY;\n    /**\n     * Element identifier. If set, it is used by {@link module:engine/view/element~Element#isSimilar},\n     * and then two elements are considered similar if, and only if they have the same `_id`.\n     *\n     * @protected\n     * @member {String|Number}\n     */\n\n    _this._id = null;\n    /**\n     * Keeps all the attribute elements that have the same {@link module:engine/view/attributeelement~AttributeElement#id ids}\n     * and still exist in the view tree.\n     *\n     * This property is managed by {@link module:engine/view/downcastwriter~DowncastWriter}.\n     *\n     * @protected\n     * @member {Set.<module:engine/view/attributeelement~AttributeElement>|null}\n     */\n\n    _this._clonesGroup = null;\n    return _this;\n  }\n  /**\n   * Element priority. Decides in what order elements are wrapped by {@link module:engine/view/downcastwriter~DowncastWriter}.\n   *\n   * @readonly\n   * @type {Number}\n   */\n\n\n  _createClass(AttributeElement, [{\n    key: \"getElementsWithSameId\",\n\n    /**\n     * Returns all {@link module:engine/view/attributeelement~AttributeElement attribute elements} that has the\n     * same {@link module:engine/view/attributeelement~AttributeElement#id id} and are in the view tree (were not removed).\n     *\n     * Note: If this element has been removed from the tree, returned set will not include it.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError attribute-element-get-elements-with-same-id-no-id}\n     * if this element has no `id`.\n     *\n     * @returns {Set.<module:engine/view/attributeelement~AttributeElement>} Set containing all the attribute elements\n     * with the same `id` that were added and not removed from the view tree.\n     */\n    value: function getElementsWithSameId() {\n      if (this.id === null) {\n        /**\n         * Cannot get elements with the same id for an attribute element without id.\n         *\n         * @error attribute-element-get-elements-with-same-id-no-id\n         */\n        throw new CKEditorError('attribute-element-get-elements-with-same-id-no-id: ' + 'Cannot get elements with the same id for an attribute element without id.', this);\n      }\n\n      return new Set(this._clonesGroup);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"is\",\n    value: function is(type) {\n      var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (!name) {\n        return type == 'attributeElement' || _get(_getPrototypeOf(AttributeElement.prototype), \"is\", this).call(this, type);\n      } else {\n        return type == 'attributeElement' && name == this.name || _get(_getPrototypeOf(AttributeElement.prototype), \"is\", this).call(this, type, name);\n      }\n    }\n    /**\n     * Checks if this element is similar to other element.\n     *\n     * If none of elements has set {@link module:engine/view/attributeelement~AttributeElement#id}, then both elements\n     * should have the same name, attributes and priority to be considered as similar. Two similar elements can contain\n     * different set of children nodes.\n     *\n     * If at least one element has {@link module:engine/view/attributeelement~AttributeElement#id} set, then both\n     * elements have to have the same {@link module:engine/view/attributeelement~AttributeElement#id} value to be\n     * considered similar.\n     *\n     * Similarity is important for {@link module:engine/view/downcastwriter~DowncastWriter}. For example:\n     *\n     * * two following similar elements can be merged together into one, longer element,\n     * * {@link module:engine/view/downcastwriter~DowncastWriter#unwrap} checks similarity of passed element and processed element to\n     * decide whether processed element should be unwrapped,\n     * * etc.\n     *\n     * @param {module:engine/view/element~Element} otherElement\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isSimilar\",\n    value: function isSimilar(otherElement) {\n      // If any element has an `id` set, just compare the ids.\n      if (this.id !== null || otherElement.id !== null) {\n        return this.id === otherElement.id;\n      }\n\n      return _get(_getPrototypeOf(AttributeElement.prototype), \"isSimilar\", this).call(this, otherElement) && this.priority == otherElement.priority;\n    }\n    /**\n     * Clones provided element with priority.\n     *\n     * @protected\n     * @param {Boolean} deep If set to `true` clones element and all its children recursively. When set to `false`,\n     * element will be cloned without any children.\n     * @returns {module:engine/view/attributeelement~AttributeElement} Clone of this element.\n     */\n\n  }, {\n    key: \"_clone\",\n    value: function _clone(deep) {\n      var cloned = _get(_getPrototypeOf(AttributeElement.prototype), \"_clone\", this).call(this, deep); // Clone priority too.\n\n\n      cloned._priority = this._priority; // And id too.\n\n      cloned._id = this._id;\n      return cloned;\n    }\n  }, {\n    key: \"priority\",\n    get: function get() {\n      return this._priority;\n    }\n    /**\n     * Element identifier. If set, it is used by {@link module:engine/view/element~Element#isSimilar},\n     * and then two elements are considered similar if, and only if they have the same `id`.\n     *\n     * @readonly\n     * @type {String|Number}\n     */\n\n  }, {\n    key: \"id\",\n    get: function get() {\n      return this._id;\n    }\n  }]);\n\n  return AttributeElement;\n}(Element);\n/**\n * Default attribute priority.\n *\n * @member {Number} module:engine/view/attributeelement~AttributeElement.DEFAULT_PRIORITY\n */\n\n\nexport { AttributeElement as default };\nAttributeElement.DEFAULT_PRIORITY = DEFAULT_PRIORITY; // Returns block {@link module:engine/view/filler~Filler filler} offset or `null` if block filler is not needed.\n//\n// @returns {Number|null} Block filler offset or `null` if block filler is not needed.\n\nfunction getFillerOffset() {\n  // <b>foo</b> does not need filler.\n  if (nonUiChildrenCount(this)) {\n    return null;\n  }\n\n  var element = this.parent; // <p><b></b></p> needs filler -> <p><b><br></b></p>\n\n  while (element && element.is('attributeElement')) {\n    if (nonUiChildrenCount(element) > 1) {\n      return null;\n    }\n\n    element = element.parent;\n  }\n\n  if (!element || nonUiChildrenCount(element) > 1) {\n    return null;\n  } // Render block filler at the end of element (after all ui elements).\n\n\n  return this.childCount;\n} // Returns total count of children that are not {@link module:engine/view/uielement~UIElement UIElements}.\n//\n// @param {module:engine/view/element~Element} element\n// @returns {Number}\n\n\nfunction nonUiChildrenCount(element) {\n  return Array.from(element.getChildren()).filter(function (element) {\n    return !element.is('uiElement');\n  }).length;\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/emptyelement\n */\nimport Element from './element';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport Node from './node';\n/**\n * Empty element class. It is used to represent elements that cannot contain any child nodes (for example `<img>` elements).\n *\n * To create a new empty element use the\n * {@link module:engine/view/downcastwriter~DowncastWriter#createEmptyElement `downcastWriter#createEmptyElement()`} method.\n *\n * @extends module:engine/view/element~Element\n */\n\nvar EmptyElement =\n/*#__PURE__*/\nfunction (_Element) {\n  _inherits(EmptyElement, _Element);\n\n  /**\n   * Creates new instance of EmptyElement.\n   *\n   * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-emptyelement-cannot-add` when third parameter is passed,\n   * to inform that usage of EmptyElement is incorrect (adding child nodes to EmptyElement is forbidden).\n   *\n   * @see module:engine/view/downcastwriter~DowncastWriter#createEmptyElement\n   * @protected\n   * @param {String} name Node name.\n   * @param {Object|Iterable} [attributes] Collection of attributes.\n   */\n  function EmptyElement(name, attributes, children) {\n    var _this;\n\n    _classCallCheck(this, EmptyElement);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EmptyElement).call(this, name, attributes, children));\n    /**\n     * Returns `null` because filler is not needed for EmptyElements.\n     *\n     * @method #getFillerOffset\n     * @returns {null} Always returns null.\n     */\n\n    _this.getFillerOffset = getFillerOffset;\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(EmptyElement, [{\n    key: \"is\",\n    value: function is(type) {\n      var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (!name) {\n        return type == 'emptyElement' || _get(_getPrototypeOf(EmptyElement.prototype), \"is\", this).call(this, type);\n      } else {\n        return type == 'emptyElement' && name == this.name || _get(_getPrototypeOf(EmptyElement.prototype), \"is\", this).call(this, type, name);\n      }\n    }\n    /**\n     * Overrides {@link module:engine/view/element~Element#_insertChild} method.\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-emptyelement-cannot-add` to prevent\n     * adding any child nodes to EmptyElement.\n     *\n     * @protected\n     */\n\n  }, {\n    key: \"_insertChild\",\n    value: function _insertChild(index, nodes) {\n      if (nodes && (nodes instanceof Node || Array.from(nodes).length > 0)) {\n        /**\n         * Cannot add children to {@link module:engine/view/emptyelement~EmptyElement}.\n         *\n         * @error view-emptyelement-cannot-add\n         */\n        throw new CKEditorError('view-emptyelement-cannot-add: Cannot add child nodes to EmptyElement instance.', [this, nodes]);\n      }\n    }\n  }]);\n\n  return EmptyElement;\n}(Element); // Returns `null` because block filler is not needed for EmptyElements.\n//\n// @returns {null}\n\n\nexport { EmptyElement as default };\n\nfunction getFillerOffset() {\n  return null;\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* globals navigator:false */\n\n/**\n * @module utils/env\n */\nvar userAgent = navigator.userAgent.toLowerCase();\n/**\n * A namespace containing environment and browser information.\n *\n * @namespace\n */\n\nvar env = {\n  /**\n   * Indicates that the application is running on Macintosh.\n   *\n   * @static\n   * @type {Boolean}\n   */\n  isMac: isMac(userAgent),\n\n  /**\n   * Indicates that the application is running in Microsoft Edge.\n   *\n   * @static\n   * @type {Boolean}\n   */\n  isEdge: isEdge(userAgent),\n\n  /**\n   * Indicates that the application is running in Firefox (Gecko).\n   *\n   * @static\n   * @type {Boolean}\n   */\n  isGecko: isGecko(userAgent),\n\n  /**\n   * Indicates that the application is running in Safari.\n   *\n   * @static\n   * @type {Boolean}\n   */\n  isSafari: isSafari(userAgent),\n\n  /**\n   * Indicates that the application is running on Android mobile device.\n   *\n   * @static\n   * @type {Boolean}\n   */\n  isAndroid: isAndroid(userAgent)\n};\nexport default env;\n/**\n * Checks if User Agent represented by the string is running on Macintosh.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is running on Macintosh or not.\n */\n\nexport function isMac(userAgent) {\n  return userAgent.indexOf('macintosh') > -1;\n}\n/**\n * Checks if User Agent represented by the string is Microsoft Edge.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is Edge or not.\n */\n\nexport function isEdge(userAgent) {\n  return !!userAgent.match(/edge\\/(\\d+.?\\d*)/);\n}\n/**\n * Checks if User Agent represented by the string is Firefox (Gecko).\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is Firefox or not.\n */\n\nexport function isGecko(userAgent) {\n  return !!userAgent.match(/gecko\\/\\d+/);\n}\n/**\n * Checks if User Agent represented by the string is Safari.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is Safari or not.\n */\n\nexport function isSafari(userAgent) {\n  return userAgent.indexOf(' applewebkit/') > -1 && userAgent.indexOf('chrome') === -1;\n}\n/**\n * Checks if User Agent represented by the string is Android mobile device.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is Safari or not.\n */\n\nexport function isAndroid(userAgent) {\n  return userAgent.indexOf('android') > -1;\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * Set of utils related to keyboard support.\n *\n * @module utils/keyboard\n */\nimport CKEditorError from './ckeditorerror';\nimport env from './env';\nvar macGlyphsToModifiers = {\n  '⌘': 'ctrl',\n  '⇧': 'shift',\n  '⌥': 'alt'\n};\nvar modifiersToMacGlyphs = {\n  'ctrl': '⌘',\n  'shift': '⇧',\n  'alt': '⌥'\n};\n/**\n * Object with `keyName => keyCode` pairs for a set of known keys.\n *\n * Contains:\n *\n * * `a-z`,\n * * `0-9`,\n * * `f1-f12`,\n * * `arrow(left|up|right|bottom)`,\n * * `backspace`, `delete`, `enter`, `esc`, `tab`,\n * * `ctrl`, `cmd`, `shift`, `alt`.\n */\n\nexport var keyCodes = generateKnownKeyCodes();\n/**\n * Converts a key name or a {@link module:utils/keyboard~KeystrokeInfo keystroke info} into a key code.\n *\n * Note: Key names are matched with {@link module:utils/keyboard~keyCodes} in a case-insensitive way.\n *\n * @param {String|module:utils/keyboard~KeystrokeInfo} Key name (see {@link module:utils/keyboard~keyCodes})\n * or a keystroke data object.\n * @returns {Number} Key or keystroke code.\n */\n\nexport function getCode(key) {\n  var keyCode;\n\n  if (typeof key == 'string') {\n    keyCode = keyCodes[key.toLowerCase()];\n\n    if (!keyCode) {\n      /**\n       * Unknown key name. Only key names contained by the {@link module:utils/keyboard~keyCodes} can be used.\n       *\n       * @errror keyboard-unknown-key\n       * @param {String} key\n       */\n      throw new CKEditorError('keyboard-unknown-key: Unknown key name.', null, {\n        key: key\n      });\n    }\n  } else {\n    keyCode = key.keyCode + (key.altKey ? keyCodes.alt : 0) + (key.ctrlKey ? keyCodes.ctrl : 0) + (key.shiftKey ? keyCodes.shift : 0);\n  }\n\n  return keyCode;\n}\n/**\n * Parses keystroke and returns a keystroke code that will match the code returned by\n * link {@link module:utils/keyboard.getCode} for a corresponding {@link module:utils/keyboard~KeystrokeInfo keystroke info}.\n *\n * The keystroke can be passed in two formats:\n *\n * * as a single string – e.g. `ctrl + A`,\n * * as an array of {@link module:utils/keyboard~keyCodes known key names} and key codes – e.g.:\n *   * `[ 'ctrl', 32 ]` (ctrl + space),\n *   * `[ 'ctrl', 'a' ]` (ctrl + A).\n *\n * Note: Key names are matched with {@link module:utils/keyboard~keyCodes} in a case-insensitive way.\n *\n * Note: Only keystrokes with a single non-modifier key are supported (e.g. `ctrl+A` is OK, but `ctrl+A+B` is not).\n *\n * @param {String|Array.<Number|String>} keystroke Keystroke definition.\n * @returns {Number} Keystroke code.\n */\n\nexport function parseKeystroke(keystroke) {\n  if (typeof keystroke == 'string') {\n    keystroke = splitKeystrokeText(keystroke);\n  }\n\n  return keystroke.map(function (key) {\n    return typeof key == 'string' ? getCode(key) : key;\n  }).reduce(function (key, sum) {\n    return sum + key;\n  }, 0);\n}\n/**\n * It translates any keystroke string text like `\"CTRL+A\"` to an\n * environment–specific keystroke, i.e. `\"⌘A\"` on Mac OSX.\n *\n * @param {String} keystroke Keystroke text.\n * @returns {String} Keystroke text specific for the environment.\n */\n\nexport function getEnvKeystrokeText(keystroke) {\n  if (!env.isMac) {\n    return keystroke;\n  }\n\n  return splitKeystrokeText(keystroke) // Replace modifiers (e.g. \"ctrl\") with Mac glyphs (e.g. \"⌘\") first.\n  .map(function (key) {\n    return modifiersToMacGlyphs[key.toLowerCase()] || key;\n  }) // Decide whether to put \"+\" between keys in the keystroke or not.\n  .reduce(function (value, key) {\n    if (value.slice(-1) in macGlyphsToModifiers) {\n      return value + key;\n    } else {\n      return value + '+' + key;\n    }\n  });\n}\n\nfunction generateKnownKeyCodes() {\n  var keyCodes = {\n    arrowleft: 37,\n    arrowup: 38,\n    arrowright: 39,\n    arrowdown: 40,\n    backspace: 8,\n    \"delete\": 46,\n    enter: 13,\n    space: 32,\n    esc: 27,\n    tab: 9,\n    // The idea about these numbers is that they do not collide with any real key codes, so we can use them\n    // like bit masks.\n    ctrl: 0x110000,\n    // Has the same code as ctrl, because their behaviour should be unified across the editor.\n    // See http://ckeditor.github.io/editor-recommendations/general-policies#ctrl-vs-cmd\n    cmd: 0x110000,\n    shift: 0x220000,\n    alt: 0x440000\n  }; // a-z\n\n  for (var code = 65; code <= 90; code++) {\n    var letter = String.fromCharCode(code);\n    keyCodes[letter.toLowerCase()] = code;\n  } // 0-9\n\n\n  for (var _code = 48; _code <= 57; _code++) {\n    keyCodes[_code - 48] = _code;\n  } // F1-F12\n\n\n  for (var _code2 = 112; _code2 <= 123; _code2++) {\n    keyCodes['f' + (_code2 - 111)] = _code2;\n  }\n\n  return keyCodes;\n}\n\nfunction splitKeystrokeText(keystroke) {\n  return keystroke.split(/\\s*\\+\\s*/);\n}\n/**\n * Information about a keystroke.\n *\n * @interface module:utils/keyboard~KeystrokeInfo\n */\n\n/**\n * The [key code](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode).\n *\n * @member {Number} module:utils/keyboard~KeystrokeInfo#keyCode\n */\n\n/**\n * Whether the <kbd>Alt</kbd> modifier was pressed.\n *\n * @member {Bolean} module:utils/keyboard~KeystrokeInfo#altKey\n */\n\n/**\n * Whether the <kbd>Ctrl</kbd> or <kbd>Cmd</kbd> modifier was pressed.\n *\n * @member {Bolean} module:utils/keyboard~KeystrokeInfo#ctrlKey\n */\n\n/**\n * Whether the <kbd>Shift</kbd> modifier was pressed.\n *\n * @member {Bolean} module:utils/keyboard~KeystrokeInfo#shiftKey\n */","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/uielement\n */\nimport Element from './element';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport Node from './node';\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\n/**\n * UI element class. It should be used to represent editing UI which needs to be injected into the editing view\n * If possible, you should keep your UI outside the editing view. However, if that is not possible,\n * UI elements can be used.\n *\n * How a UI element is rendered is in your control (you pass a callback to\n * {@link module:engine/view/downcastwriter~DowncastWriter#createUIElement `downcastWriter#createUIElement()`}).\n * The editor will ignore your UI element – the selection cannot be placed in it, it is skipped (invisible) when\n * the user modifies the selection by using arrow keys and the editor does not listen to any mutations which\n * happen inside your UI elements.\n *\n * The limitation is that you cannot convert a model element to a UI element. UI elements need to be\n * created for {@link module:engine/model/markercollection~Marker markers} or as additinal elements\n * inside normal {@link module:engine/view/containerelement~ContainerElement container elements}.\n *\n * To create a new UI element use the\n * {@link module:engine/view/downcastwriter~DowncastWriter#createUIElement `downcastWriter#createUIElement()`} method.\n *\n * @extends module:engine/view/element~Element\n */\n\nvar UIElement =\n/*#__PURE__*/\nfunction (_Element) {\n  _inherits(UIElement, _Element);\n\n  /**\n   * Creates new instance of UIElement.\n   *\n   * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-uielement-cannot-add` when third parameter is passed,\n   * to inform that usage of UIElement is incorrect (adding child nodes to UIElement is forbidden).\n   *\n   * @see module:engine/view/downcastwriter~DowncastWriter#createUIElement\n   * @protected\n   * @param {String} name Node name.\n   * @param {Object|Iterable} [attributes] Collection of attributes.\n   */\n  function UIElement(name, attributes, children) {\n    var _this;\n\n    _classCallCheck(this, UIElement);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UIElement).call(this, name, attributes, children));\n    /**\n     * Returns `null` because filler is not needed for UIElements.\n     *\n     * @method #getFillerOffset\n     * @returns {null} Always returns null.\n     */\n\n    _this.getFillerOffset = getFillerOffset;\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(UIElement, [{\n    key: \"is\",\n    value: function is(type) {\n      var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (!name) {\n        return type == 'uiElement' || _get(_getPrototypeOf(UIElement.prototype), \"is\", this).call(this, type);\n      } else {\n        return type == 'uiElement' && name == this.name || _get(_getPrototypeOf(UIElement.prototype), \"is\", this).call(this, type, name);\n      }\n    }\n    /**\n     * Overrides {@link module:engine/view/element~Element#_insertChild} method.\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-uielement-cannot-add` to prevent adding any child nodes\n     * to UIElement.\n     *\n     * @protected\n     */\n\n  }, {\n    key: \"_insertChild\",\n    value: function _insertChild(index, nodes) {\n      if (nodes && (nodes instanceof Node || Array.from(nodes).length > 0)) {\n        /**\n         * Cannot add children to {@link module:engine/view/uielement~UIElement}.\n         *\n         * @error view-uielement-cannot-add\n         */\n        throw new CKEditorError('view-uielement-cannot-add: Cannot add child nodes to UIElement instance.', this);\n      }\n    }\n    /**\n     * Renders this {@link module:engine/view/uielement~UIElement} to DOM. This method is called by\n     * {@link module:engine/view/domconverter~DomConverter}.\n     * Do not use inheritance to create custom rendering method, replace `render()` method instead:\n     *\n     *\t\tconst myUIElement = downcastWriter.createUIElement( 'span' );\n     *\t\tmyUIElement.render = function( domDocument ) {\n     *\t\t\tconst domElement = this.toDomElement( domDocument );\n     *\t\t\tdomElement.innerHTML = '<b>this is ui element</b>';\n     *\n     *\t\t\treturn domElement;\n     *\t\t};\n     *\n     * @param {Document} domDocument\n     * @returns {HTMLElement}\n     */\n\n  }, {\n    key: \"render\",\n    value: function render(domDocument) {\n      return this.toDomElement(domDocument);\n    }\n    /**\n     * Creates DOM element based on this view UIElement.\n     * Note that each time this method is called new DOM element is created.\n     *\n     * @param {Document} domDocument\n     * @returns {HTMLElement}\n     */\n\n  }, {\n    key: \"toDomElement\",\n    value: function toDomElement(domDocument) {\n      var domElement = domDocument.createElement(this.name);\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.getAttributeKeys()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var key = _step.value;\n          domElement.setAttribute(key, this.getAttribute(key));\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return domElement;\n    }\n  }]);\n\n  return UIElement;\n}(Element);\n/**\n * This function injects UI element handling to the given {@link module:engine/view/document~Document document}.\n *\n * A callback is added to {@link module:engine/view/document~Document#event:keydown document keydown event}.\n * The callback handles the situation when right arrow key is pressed and selection is collapsed before a UI element.\n * Without this handler, it would be impossible to \"jump over\" UI element using right arrow key.\n *\n * @param {module:engine/view/view~View} view View controller to which the quirks handling will be injected.\n */\n\n\nexport { UIElement as default };\nexport function injectUiElementHandling(view) {\n  view.document.on('keydown', function (evt, data) {\n    return jumpOverUiElement(evt, data, view.domConverter);\n  });\n} // Returns `null` because block filler is not needed for UIElements.\n//\n// @returns {null}\n\nfunction getFillerOffset() {\n  return null;\n} // Selection cannot be placed in a `UIElement`. Whenever it is placed there, it is moved before it. This\n// causes a situation when it is impossible to jump over `UIElement` using right arrow key, because the selection\n// ends up in ui element (in DOM) and is moved back to the left. This handler fixes this situation.\n\n\nfunction jumpOverUiElement(evt, data, domConverter) {\n  if (data.keyCode == keyCodes.arrowright) {\n    var domSelection = data.domTarget.ownerDocument.defaultView.getSelection();\n    var domSelectionCollapsed = domSelection.rangeCount == 1 && domSelection.getRangeAt(0).collapsed; // Jump over UI element if selection is collapsed or shift key is pressed. These are the cases when selection would extend.\n\n    if (domSelectionCollapsed || data.shiftKey) {\n      var domParent = domSelection.focusNode;\n      var domOffset = domSelection.focusOffset;\n      var viewPosition = domConverter.domPositionToView(domParent, domOffset); // In case if dom element is not converted to view or is not mapped or something. Happens for example in some tests.\n\n      if (viewPosition === null) {\n        return;\n      } // Skip all following ui elements.\n\n\n      var jumpedOverAnyUiElement = false;\n      var nextViewPosition = viewPosition.getLastMatchingPosition(function (value) {\n        if (value.item.is('uiElement')) {\n          // Remember that there was at least one ui element.\n          jumpedOverAnyUiElement = true;\n        } // Jump over ui elements, jump over empty attribute elements, move up from inside of attribute element.\n\n\n        if (value.item.is('uiElement') || value.item.is('attributeElement')) {\n          return true;\n        } // Don't jump over text or don't get out of container element.\n\n\n        return false;\n      }); // If anything has been skipped, fix position.\n      // This `if` could be possibly omitted but maybe it is better not to mess with DOM selection if not needed.\n\n      if (jumpedOverAnyUiElement) {\n        var newDomPosition = domConverter.viewPositionToDom(nextViewPosition);\n\n        if (domSelectionCollapsed) {\n          // Selection was collapsed, so collapse it at further position.\n          domSelection.collapse(newDomPosition.parent, newDomPosition.offset);\n        } else {\n          // Selection was not collapse, so extend it instead of collapsing.\n          domSelection.extend(newDomPosition.parent, newDomPosition.offset);\n        }\n      }\n    }\n  }\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/documentfragment\n */\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\n/**\n * Document fragment.\n *\n * To create a new document fragment instance use the\n * {@link module:engine/view/upcastwriter~UpcastWriter#createDocumentFragment `UpcastWriter#createDocumentFragment()`}\n * method.\n */\n\nvar DocumentFragment =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates new DocumentFragment instance.\n   *\n   * @protected\n   * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\n   * A list of nodes to be inserted into the created document fragment.\n   */\n  function DocumentFragment(children) {\n    _classCallCheck(this, DocumentFragment);\n\n    /**\n     * Array of child nodes.\n     *\n     * @protected\n     * @member {Array.<module:engine/view/element~Element>} module:engine/view/documentfragment~DocumentFragment#_children\n     */\n    this._children = [];\n\n    if (children) {\n      this._insertChild(0, children);\n    }\n  }\n  /**\n   * Iterable interface.\n   *\n   * Iterates over nodes added to this document fragment.\n   *\n   * @returns {Iterable.<module:engine/view/node~Node>}\n   */\n\n\n  _createClass(DocumentFragment, [{\n    key: Symbol.iterator,\n    value: function value() {\n      return this._children[Symbol.iterator]();\n    }\n    /**\n     * Number of child nodes in this document fragment.\n     *\n     * @readonly\n     * @type {Number}\n     */\n\n  }, {\n    key: \"is\",\n\n    /**\n     * Checks whether given view tree object is of given type.\n     *\n     * Read more in {@link module:engine/view/node~Node#is}.\n     *\n     * @param {String} type\n     * @returns {Boolean}\n     */\n    value: function is(type) {\n      return type == 'documentFragment';\n    }\n    /**\n     * {@link module:engine/view/documentfragment~DocumentFragment#_insertChild Insert} a child node or a list of child nodes at the end\n     * and sets the parent of these nodes to this fragment.\n     *\n     * @param {module:engine/view/item~Item|Iterable.<module:engine/view/item~Item>} items Items to be inserted.\n     * @returns {Number} Number of appended nodes.\n     */\n\n  }, {\n    key: \"_appendChild\",\n    value: function _appendChild(items) {\n      return this._insertChild(this.childCount, items);\n    }\n    /**\n     * Gets child at the given index.\n     *\n     * @param {Number} index Index of child.\n     * @returns {module:engine/view/node~Node} Child node.\n     */\n\n  }, {\n    key: \"getChild\",\n    value: function getChild(index) {\n      return this._children[index];\n    }\n    /**\n     * Gets index of the given child node. Returns `-1` if child node is not found.\n     *\n     * @param {module:engine/view/node~Node} node Child node.\n     * @returns {Number} Index of the child node.\n     */\n\n  }, {\n    key: \"getChildIndex\",\n    value: function getChildIndex(node) {\n      return this._children.indexOf(node);\n    }\n    /**\n     * Gets child nodes iterator.\n     *\n     * @returns {Iterable.<module:engine/view/node~Node>} Child nodes iterator.\n     */\n\n  }, {\n    key: \"getChildren\",\n    value: function getChildren() {\n      return this._children[Symbol.iterator]();\n    }\n    /**\n     * Inserts a child node or a list of child nodes on the given index and sets the parent of these nodes to\n     * this fragment.\n     *\n     * @param {Number} index Position where nodes should be inserted.\n     * @param {module:engine/view/item~Item|Iterable.<module:engine/view/item~Item>} items Items to be inserted.\n     * @returns {Number} Number of inserted nodes.\n     */\n\n  }, {\n    key: \"_insertChild\",\n    value: function _insertChild(index, items) {\n      this._fireChange('children', this);\n\n      var count = 0;\n      var nodes = normalize(items);\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = nodes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var node = _step.value;\n\n          // If node that is being added to this element is already inside another element, first remove it from the old parent.\n          if (node.parent !== null) {\n            node._remove();\n          }\n\n          node.parent = this;\n\n          this._children.splice(index, 0, node);\n\n          index++;\n          count++;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return count;\n    }\n    /**\n     * Removes number of child nodes starting at the given index and set the parent of these nodes to `null`.\n     *\n     * @param {Number} index Number of the first node to remove.\n     * @param {Number} [howMany=1] Number of nodes to remove.\n     * @returns {Array.<module:engine/view/node~Node>} The array of removed nodes.\n     */\n\n  }, {\n    key: \"_removeChildren\",\n    value: function _removeChildren(index) {\n      var howMany = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n      this._fireChange('children', this);\n\n      for (var i = index; i < index + howMany; i++) {\n        this._children[i].parent = null;\n      }\n\n      return this._children.splice(index, howMany);\n    }\n    /**\n     * Fires `change` event with given type of the change.\n     *\n     * @private\n     * @param {module:engine/view/document~ChangeType} type Type of the change.\n     * @param {module:engine/view/node~Node} node Changed node.\n     * @fires module:engine/view/node~Node#change\n     */\n\n  }, {\n    key: \"_fireChange\",\n    value: function _fireChange(type, node) {\n      this.fire('change:' + type, node);\n    }\n  }, {\n    key: \"childCount\",\n    get: function get() {\n      return this._children.length;\n    }\n    /**\n     * Is `true` if there are no nodes inside this document fragment, `false` otherwise.\n     *\n     * @readonly\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isEmpty\",\n    get: function get() {\n      return this.childCount === 0;\n    }\n    /**\n     * Artificial root of `DocumentFragment`. Returns itself. Added for compatibility reasons.\n     *\n     * @readonly\n     * @type {module:engine/model/documentfragment~DocumentFragment}\n     */\n\n  }, {\n    key: \"root\",\n    get: function get() {\n      return this;\n    }\n    /**\n     * Artificial parent of `DocumentFragment`. Returns `null`. Added for compatibility reasons.\n     *\n     * @readonly\n     * @type {null}\n     */\n\n  }, {\n    key: \"parent\",\n    get: function get() {\n      return null;\n    }\n  }]);\n\n  return DocumentFragment;\n}();\n\nexport { DocumentFragment as default };\nmix(DocumentFragment, EmitterMixin); // Converts strings to Text and non-iterables to arrays.\n//\n// @param {String|module:engine/view/item~Item|Iterable.<String|module:engine/view/item~Item>}\n// @returns {Iterable.<module:engine/view/node~Node>}\n\nfunction normalize(nodes) {\n  // Separate condition because string is iterable.\n  if (typeof nodes == 'string') {\n    return [new Text(nodes)];\n  }\n\n  if (!isIterable(nodes)) {\n    nodes = [nodes];\n  } // Array.from to enable .map() on non-arrays.\n\n\n  return Array.from(nodes).map(function (node) {\n    if (typeof node == 'string') {\n      return new Text(node);\n    }\n\n    if (node instanceof TextProxy) {\n      return new Text(node.data);\n    }\n\n    return node;\n  });\n}","function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module module:engine/view/downcastwriter\n */\nimport Position from './position';\nimport Range from './range';\nimport Selection from './selection';\nimport ContainerElement from './containerelement';\nimport AttributeElement from './attributeelement';\nimport EmptyElement from './emptyelement';\nimport UIElement from './uielement';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport DocumentFragment from './documentfragment';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\nimport Text from './text';\nimport EditableElement from './editableelement';\nimport { isPlainObject } from 'lodash-es';\n/**\n * View downcast writer.\n *\n * It provides a set of methods used to manipulate view nodes.\n *\n * Do not create an instance of this writer manually. To modify a view structure, use\n * the {@link module:engine/view/view~View#change `View#change()`} block.\n *\n * The `DowncastWriter` is designed to work with semantic views which are the views that were/are being downcasted from the model.\n * To work with ordinary views (e.g. parsed from a pasted content) use the\n * {@link module:engine/view/upcastwriter~UpcastWriter upcast writer}.\n *\n * Read more about changing the view in the {@glink framework/guides/architecture/editing-engine#changing-the-view Changing the view}\n * section of the {@glink framework/guides/architecture/editing-engine Editing engine architecture} guide.\n */\n\nvar DowncastWriter =\n/*#__PURE__*/\nfunction () {\n  function DowncastWriter(document) {\n    _classCallCheck(this, DowncastWriter);\n\n    /**\n     * @readonly\n     * @type {module:engine/view/document~Document}\n     */\n    this.document = document;\n    /**\n     * Holds references to the attribute groups that share the same {@link module:engine/view/attributeelement~AttributeElement#id id}.\n     * The keys are `id`s, the values are `Set`s holding {@link module:engine/view/attributeelement~AttributeElement}s.\n     *\n     * @private\n     * @type {Map.<String,Set>}\n     */\n\n    this._cloneGroups = new Map();\n  }\n  /**\n   * Sets {@link module:engine/view/documentselection~DocumentSelection selection's} ranges and direction to the\n   * specified location based on the given {@link module:engine/view/selection~Selectable selectable}.\n   *\n   * Usage:\n   *\n   *\t\t// Sets selection to the given range.\n   *\t\tconst range = writer.createRange( start, end );\n   *\t\twriter.setSelection( range );\n   *\n   *\t\t// Sets backward selection to the given range.\n   *\t\tconst range = writer.createRange( start, end );\n   *\t\twriter.setSelection( range );\n   *\n   *\t\t// Sets selection to given ranges.\n   * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n   *\t\twriter.setSelection( range );\n   *\n   *\t\t// Sets selection to the other selection.\n   *\t\tconst otherSelection = writer.createSelection();\n   *\t\twriter.setSelection( otherSelection );\n   *\n   * \t\t// Sets collapsed selection at the given position.\n   *\t\tconst position = writer.createPositionFromPath( root, path );\n   *\t\twriter.setSelection( position );\n   *\n   * \t\t// Sets collapsed selection at the position of given item and offset.\n   *\t\tconst paragraph = writer.createContainerElement( 'paragraph' );\n   *\t\twriter.setSelection( paragraph, offset );\n   *\n   * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n  \t * that element and ends after the last child of that element.\n   *\n   * \t\twriter.setSelection( paragraph, 'in' );\n   *\n   * Creates a range on the {@link module:engine/view/item~Item item} which starts before the item and ends just after the item.\n   *\n   *\t\twriter.setSelection( paragraph, 'on' );\n   *\n   * \t\t// Removes all ranges.\n   *\t\twriter.setSelection( null );\n   *\n   * `DowncastWriter#setSelection()` allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n   *\n   *\t\t// Sets selection as backward.\n   *\t\twriter.setSelection( range, { backward: true } );\n   *\n   *\t\t// Sets selection as fake.\n   *\t\t// Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n   * \t\t// This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n   * \t\t// represented in other way, for example by applying proper CSS class.\n   *\t\twriter.setSelection( range, { fake: true } );\n   *\n   * \t\t// Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\n   * \t\t// (and be  properly handled by screen readers).\n   *\t\twriter.setSelection( range, { fake: true, label: 'foo' } );\n   *\n   * @param {module:engine/view/selection~Selectable} selectable\n   * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n   * @param {Object} [options]\n   * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n   * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n   * @param {String} [options.label] Label for the fake selection.\n   */\n\n\n  _createClass(DowncastWriter, [{\n    key: \"setSelection\",\n    value: function setSelection(selectable, placeOrOffset, options) {\n      this.document.selection._setTo(selectable, placeOrOffset, options);\n    }\n    /**\n     * Moves {@link module:engine/view/documentselection~DocumentSelection#focus selection's focus} to the specified location.\n     *\n     * The location can be specified in the same form as {@link module:engine/view/view~View#createPositionAt view.createPositionAt()}\n     * parameters.\n     *\n     * @param {module:engine/view/item~Item|module:engine/view/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n     * first parameter is a {@link module:engine/view/item~Item view item}.\n     */\n\n  }, {\n    key: \"setSelectionFocus\",\n    value: function setSelectionFocus(itemOrPosition, offset) {\n      this.document.selection._setFocus(itemOrPosition, offset);\n    }\n    /**\n     * Creates a new {@link module:engine/view/text~Text text node}.\n     *\n     *\t\twriter.createText( 'foo' );\n     *\n     * @param {String} data The text's data.\n     * @returns {module:engine/view/text~Text} The created text node.\n     */\n\n  }, {\n    key: \"createText\",\n    value: function createText(data) {\n      return new Text(data);\n    }\n    /**\n     * Creates new {@link module:engine/view/attributeelement~AttributeElement}.\n     *\n     *\t\twriter.createAttributeElement( 'strong' );\n     *\t\twriter.createAttributeElement( 'strong', { alignment: 'center' } );\n     *\n     *\t\t// Make `<a>` element contain other attributes element so the `<a>` element is not broken.\n     *\t\twriter.createAttributeElement( 'a', { href: 'foo.bar' }, { priority: 5 } );\n     *\n     *\t\t// Set `id` of a marker element so it is not joined or merged with \"normal\" elements.\n     *\t\twriter.createAttributeElement( 'span', { class: 'myMarker' }, { id: 'marker:my' } );\n     *\n     * @param {String} name Name of the element.\n     * @param {Object} [attributes] Element's attributes.\n     * @param {Object} [options] Element's options.\n     * @param {Number} [options.priority] Element's {@link module:engine/view/attributeelement~AttributeElement#priority priority}.\n     * @param {Number|String} [options.id] Element's {@link module:engine/view/attributeelement~AttributeElement#id id}.\n     * @returns {module:engine/view/attributeelement~AttributeElement} Created element.\n     */\n\n  }, {\n    key: \"createAttributeElement\",\n    value: function createAttributeElement(name, attributes) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var attributeElement = new AttributeElement(name, attributes);\n\n      if (options.priority) {\n        attributeElement._priority = options.priority;\n      }\n\n      if (options.id) {\n        attributeElement._id = options.id;\n      }\n\n      return attributeElement;\n    }\n    /**\n     * Creates new {@link module:engine/view/containerelement~ContainerElement}.\n     *\n     *\t\twriter.createContainerElement( 'paragraph' );\n     *\t\twriter.createContainerElement( 'paragraph', { alignment: 'center' } );\n     *\n     * @param {String} name Name of the element.\n     * @param {Object} [attributes] Elements attributes.\n     * @returns {module:engine/view/containerelement~ContainerElement} Created element.\n     */\n\n  }, {\n    key: \"createContainerElement\",\n    value: function createContainerElement(name, attributes) {\n      return new ContainerElement(name, attributes);\n    }\n    /**\n     * Creates new {@link module:engine/view/editableelement~EditableElement}.\n     *\n     *\t\twriter.createEditableElement( 'div' );\n     *\t\twriter.createEditableElement( 'div', { alignment: 'center' } );\n     *\n     * @param {String} name Name of the element.\n     * @param {Object} [attributes] Elements attributes.\n     * @returns {module:engine/view/editableelement~EditableElement} Created element.\n     */\n\n  }, {\n    key: \"createEditableElement\",\n    value: function createEditableElement(name, attributes) {\n      var editableElement = new EditableElement(name, attributes);\n      editableElement._document = this.document;\n      return editableElement;\n    }\n    /**\n     * Creates new {@link module:engine/view/emptyelement~EmptyElement}.\n     *\n     *\t\twriter.createEmptyElement( 'img' );\n     *\t\twriter.createEmptyElement( 'img', { alignment: 'center' } );\n     *\n     * @param {String} name Name of the element.\n     * @param {Object} [attributes] Elements attributes.\n     * @returns {module:engine/view/emptyelement~EmptyElement} Created element.\n     */\n\n  }, {\n    key: \"createEmptyElement\",\n    value: function createEmptyElement(name, attributes) {\n      return new EmptyElement(name, attributes);\n    }\n    /**\n     * Creates new {@link module:engine/view/uielement~UIElement}.\n     *\n     *\t\twriter.createUIElement( 'span' );\n     *\t\twriter.createUIElement( 'span', { alignment: 'center' } );\n     *\n     * Custom render function can be provided as third parameter:\n     *\n     *\t\twriter.createUIElement( 'span', null, function( domDocument ) {\n     *\t\t\tconst domElement = this.toDomElement( domDocument );\n     *\t\t\tdomElement.innerHTML = '<b>this is ui element</b>';\n     *\n     *\t\t\treturn domElement;\n     *\t\t} );\n     *\n     * @param {String} name Name of the element.\n     * @param {Object} [attributes] Elements attributes.\n     * @param {Function} [renderFunction] Custom render function.\n     * @returns {module:engine/view/uielement~UIElement} Created element.\n     */\n\n  }, {\n    key: \"createUIElement\",\n    value: function createUIElement(name, attributes, renderFunction) {\n      var uiElement = new UIElement(name, attributes);\n\n      if (renderFunction) {\n        uiElement.render = renderFunction;\n      }\n\n      return uiElement;\n    }\n    /**\n     * Adds or overwrite element's attribute with a specified key and value.\n     *\n     *\t\twriter.setAttribute( 'href', 'http://ckeditor.com', linkElement );\n     *\n     * @param {String} key Attribute key.\n     * @param {String} value Attribute value.\n     * @param {module:engine/view/element~Element} element\n     */\n\n  }, {\n    key: \"setAttribute\",\n    value: function setAttribute(key, value, element) {\n      element._setAttribute(key, value);\n    }\n    /**\n     * Removes attribute from the element.\n     *\n     *\t\twriter.removeAttribute( 'href', linkElement );\n     *\n     * @param {String} key Attribute key.\n     * @param {module:engine/view/element~Element} element\n     */\n\n  }, {\n    key: \"removeAttribute\",\n    value: function removeAttribute(key, element) {\n      element._removeAttribute(key);\n    }\n    /**\n     * Adds specified class to the element.\n     *\n     *\t\twriter.addClass( 'foo', linkElement );\n     *\t\twriter.addClass( [ 'foo', 'bar' ], linkElement );\n     *\n     * @param {Array.<String>|String} className\n     * @param {module:engine/view/element~Element} element\n     */\n\n  }, {\n    key: \"addClass\",\n    value: function addClass(className, element) {\n      element._addClass(className);\n    }\n    /**\n     * Removes specified class from the element.\n     *\n     *\t\twriter.removeClass( 'foo', linkElement );\n     *\t\twriter.removeClass( [ 'foo', 'bar' ], linkElement );\n     *\n     * @param {Array.<String>|String} className\n     * @param {module:engine/view/element~Element} element\n     */\n\n  }, {\n    key: \"removeClass\",\n    value: function removeClass(className, element) {\n      element._removeClass(className);\n    }\n    /**\n     * Adds style to the element.\n     *\n     *\t\twriter.setStyle( 'color', 'red', element );\n     *\t\twriter.setStyle( {\n     *\t\t\tcolor: 'red',\n     *\t\t\tposition: 'fixed'\n     *\t\t}, element );\n     *\n     * @param {String|Object} property Property name or object with key - value pairs.\n     * @param {String} [value] Value to set. This parameter is ignored if object is provided as the first parameter.\n     * @param {module:engine/view/element~Element} element Element to set styles on.\n     */\n\n  }, {\n    key: \"setStyle\",\n    value: function setStyle(property, value, element) {\n      if (isPlainObject(property) && element === undefined) {\n        element = value;\n      }\n\n      element._setStyle(property, value);\n    }\n    /**\n     * Removes specified style from the element.\n     *\n     *\t\twriter.removeStyle( 'color', element );  // Removes 'color' style.\n     *\t\twriter.removeStyle( [ 'color', 'border-top' ], element ); // Removes both 'color' and 'border-top' styles.\n     *\n     * @param {Array.<String>|String} property\n     * @param {module:engine/view/element~Element} element\n     */\n\n  }, {\n    key: \"removeStyle\",\n    value: function removeStyle(property, element) {\n      element._removeStyle(property);\n    }\n    /**\n     * Sets a custom property on element. Unlike attributes, custom properties are not rendered to the DOM,\n     * so they can be used to add special data to elements.\n     *\n     * @param {String|Symbol} key\n     * @param {*} value\n     * @param {module:engine/view/element~Element} element\n     */\n\n  }, {\n    key: \"setCustomProperty\",\n    value: function setCustomProperty(key, value, element) {\n      element._setCustomProperty(key, value);\n    }\n    /**\n     * Removes a custom property stored under the given key.\n     *\n     * @param {String|Symbol} key\n     * @param {module:engine/view/element~Element} element\n     * @returns {Boolean} Returns true if property was removed.\n     */\n\n  }, {\n    key: \"removeCustomProperty\",\n    value: function removeCustomProperty(key, element) {\n      return element._removeCustomProperty(key);\n    }\n    /**\n     * Breaks attribute nodes at provided position or at boundaries of provided range. It breaks attribute elements inside\n     * up to a container element.\n     *\n     * In following examples `<p>` is a container, `<b>` and `<u>` are attribute nodes:\n     *\n     *        <p>foo<b><u>bar{}</u></b></p> -> <p>foo<b><u>bar</u></b>[]</p>\n     *        <p>foo<b><u>{}bar</u></b></p> -> <p>foo{}<b><u>bar</u></b></p>\n     *        <p>foo<b><u>b{}ar</u></b></p> -> <p>foo<b><u>b</u></b>[]<b><u>ar</u></b></p>\n     *        <p><b>fo{o</b><u>ba}r</u></p> -> <p><b>fo</b><b>o</b><u>ba</u><u>r</u></b></p>\n     *\n     * **Note:** {@link module:engine/view/documentfragment~DocumentFragment DocumentFragment} is treated like a container.\n     *\n     * **Note:** Difference between {@link module:engine/view/downcastwriter~DowncastWriter#breakAttributes breakAttributes} and\n     * {@link module:engine/view/downcastwriter~DowncastWriter#breakContainer breakContainer} is that `breakAttributes` breaks all\n     * {@link module:engine/view/attributeelement~AttributeElement attribute elements} that are ancestors of given `position`,\n     * up to the first encountered {@link module:engine/view/containerelement~ContainerElement container element}.\n     * `breakContainer` assumes that given `position` is directly in container element and breaks that container element.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container`\n     * when {@link module:engine/view/range~Range#start start}\n     * and {@link module:engine/view/range~Range#end end} positions of a passed range are not placed inside same parent container.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-cannot-break-empty-element`\n     * when trying to break attributes\n     * inside {@link module:engine/view/emptyelement~EmptyElement EmptyElement}.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-cannot-break-ui-element`\n     * when trying to break attributes\n     * inside {@link module:engine/view/uielement~UIElement UIElement}.\n     *\n     * @see module:engine/view/attributeelement~AttributeElement\n     * @see module:engine/view/containerelement~ContainerElement\n     * @see module:engine/view/downcastwriter~DowncastWriter#breakContainer\n     * @param {module:engine/view/position~Position|module:engine/view/range~Range} positionOrRange Position where\n     * to break attribute elements.\n     * @returns {module:engine/view/position~Position|module:engine/view/range~Range} New position or range, after breaking the attribute\n     * elements.\n     */\n\n  }, {\n    key: \"breakAttributes\",\n    value: function breakAttributes(positionOrRange) {\n      if (positionOrRange instanceof Position) {\n        return this._breakAttributes(positionOrRange);\n      } else {\n        return this._breakAttributesRange(positionOrRange);\n      }\n    }\n    /**\n     * Breaks {@link module:engine/view/containerelement~ContainerElement container view element} into two, at the given position. Position\n     * has to be directly inside container element and cannot be in root. Does not break if position is at the beginning\n     * or at the end of it's parent element.\n     *\n     *        <p>foo^bar</p> -> <p>foo</p><p>bar</p>\n     *        <div><p>foo</p>^<p>bar</p></div> -> <div><p>foo</p></div><div><p>bar</p></div>\n     *        <p>^foobar</p> -> ^<p>foobar</p>\n     *        <p>foobar^</p> -> <p>foobar</p>^\n     *\n     * **Note:** Difference between {@link module:engine/view/downcastwriter~DowncastWriter#breakAttributes breakAttributes} and\n     * {@link module:engine/view/downcastwriter~DowncastWriter#breakContainer breakContainer} is that `breakAttributes` breaks all\n     * {@link module:engine/view/attributeelement~AttributeElement attribute elements} that are ancestors of given `position`,\n     * up to the first encountered {@link module:engine/view/containerelement~ContainerElement container element}.\n     * `breakContainer` assumes that given `position` is directly in container element and breaks that container element.\n     *\n     * @see module:engine/view/attributeelement~AttributeElement\n     * @see module:engine/view/containerelement~ContainerElement\n     * @see module:engine/view/downcastwriter~DowncastWriter#breakAttributes\n     * @param {module:engine/view/position~Position} position Position where to break element.\n     * @returns {module:engine/view/position~Position} Position between broken elements. If element has not been broken,\n     * the returned position is placed either before it or after it.\n     */\n\n  }, {\n    key: \"breakContainer\",\n    value: function breakContainer(position) {\n      var element = position.parent;\n\n      if (!element.is('containerElement')) {\n        /**\n         * Trying to break an element which is not a container element.\n         *\n         * @error view-writer-break-non-container-element\n         */\n        throw new CKEditorError('view-writer-break-non-container-element: Trying to break an element which is not a container element.', this.document);\n      }\n\n      if (!element.parent) {\n        /**\n         * Trying to break root element.\n         *\n         * @error view-writer-break-root\n         */\n        throw new CKEditorError('view-writer-break-root: Trying to break root element.', this.document);\n      }\n\n      if (position.isAtStart) {\n        return Position._createBefore(element);\n      } else if (!position.isAtEnd) {\n        var newElement = element._clone(false);\n\n        this.insert(Position._createAfter(element), newElement);\n        var sourceRange = new Range(position, Position._createAt(element, 'end'));\n        var targetPosition = new Position(newElement, 0);\n        this.move(sourceRange, targetPosition);\n      }\n\n      return Position._createAfter(element);\n    }\n    /**\n     * Merges {@link module:engine/view/attributeelement~AttributeElement attribute elements}. It also merges text nodes if needed.\n     * Only {@link module:engine/view/attributeelement~AttributeElement#isSimilar similar} attribute elements can be merged.\n     *\n     * In following examples `<p>` is a container and `<b>` is an attribute element:\n     *\n     *        <p>foo[]bar</p> -> <p>foo{}bar</p>\n     *        <p><b>foo</b>[]<b>bar</b></p> -> <p><b>foo{}bar</b></p>\n     *        <p><b foo=\"bar\">a</b>[]<b foo=\"baz\">b</b></p> -> <p><b foo=\"bar\">a</b>[]<b foo=\"baz\">b</b></p>\n     *\n     * It will also take care about empty attributes when merging:\n     *\n     *        <p><b>[]</b></p> -> <p>[]</p>\n     *        <p><b>foo</b><i>[]</i><b>bar</b></p> -> <p><b>foo{}bar</b></p>\n     *\n     * **Note:** Difference between {@link module:engine/view/downcastwriter~DowncastWriter#mergeAttributes mergeAttributes} and\n     * {@link module:engine/view/downcastwriter~DowncastWriter#mergeContainers mergeContainers} is that `mergeAttributes` merges two\n     * {@link module:engine/view/attributeelement~AttributeElement attribute elements} or {@link module:engine/view/text~Text text nodes}\n     * while `mergeContainer` merges two {@link module:engine/view/containerelement~ContainerElement container elements}.\n     *\n     * @see module:engine/view/attributeelement~AttributeElement\n     * @see module:engine/view/containerelement~ContainerElement\n     * @see module:engine/view/downcastwriter~DowncastWriter#mergeContainers\n     * @param {module:engine/view/position~Position} position Merge position.\n     * @returns {module:engine/view/position~Position} Position after merge.\n     */\n\n  }, {\n    key: \"mergeAttributes\",\n    value: function mergeAttributes(position) {\n      var positionOffset = position.offset;\n      var positionParent = position.parent; // When inside text node - nothing to merge.\n\n      if (positionParent.is('text')) {\n        return position;\n      } // When inside empty attribute - remove it.\n\n\n      if (positionParent.is('attributeElement') && positionParent.childCount === 0) {\n        var parent = positionParent.parent;\n        var offset = positionParent.index;\n\n        positionParent._remove();\n\n        this._removeFromClonedElementsGroup(positionParent);\n\n        return this.mergeAttributes(new Position(parent, offset));\n      }\n\n      var nodeBefore = positionParent.getChild(positionOffset - 1);\n      var nodeAfter = positionParent.getChild(positionOffset); // Position should be placed between two nodes.\n\n      if (!nodeBefore || !nodeAfter) {\n        return position;\n      } // When position is between two text nodes.\n\n\n      if (nodeBefore.is('text') && nodeAfter.is('text')) {\n        return mergeTextNodes(nodeBefore, nodeAfter);\n      } // When position is between two same attribute elements.\n      else if (nodeBefore.is('attributeElement') && nodeAfter.is('attributeElement') && nodeBefore.isSimilar(nodeAfter)) {\n          // Move all children nodes from node placed after selection and remove that node.\n          var count = nodeBefore.childCount;\n\n          nodeBefore._appendChild(nodeAfter.getChildren());\n\n          nodeAfter._remove();\n\n          this._removeFromClonedElementsGroup(nodeAfter); // New position is located inside the first node, before new nodes.\n          // Call this method recursively to merge again if needed.\n\n\n          return this.mergeAttributes(new Position(nodeBefore, count));\n        }\n\n      return position;\n    }\n    /**\n     * Merges two {@link module:engine/view/containerelement~ContainerElement container elements} that are before and after given position.\n     * Precisely, the element after the position is removed and it's contents are moved to element before the position.\n     *\n     *        <p>foo</p>^<p>bar</p> -> <p>foo^bar</p>\n     *        <div>foo</div>^<p>bar</p> -> <div>foo^bar</div>\n     *\n     * **Note:** Difference between {@link module:engine/view/downcastwriter~DowncastWriter#mergeAttributes mergeAttributes} and\n     * {@link module:engine/view/downcastwriter~DowncastWriter#mergeContainers mergeContainers} is that `mergeAttributes` merges two\n     * {@link module:engine/view/attributeelement~AttributeElement attribute elements} or {@link module:engine/view/text~Text text nodes}\n     * while `mergeContainer` merges two {@link module:engine/view/containerelement~ContainerElement container elements}.\n     *\n     * @see module:engine/view/attributeelement~AttributeElement\n     * @see module:engine/view/containerelement~ContainerElement\n     * @see module:engine/view/downcastwriter~DowncastWriter#mergeAttributes\n     * @param {module:engine/view/position~Position} position Merge position.\n     * @returns {module:engine/view/position~Position} Position after merge.\n     */\n\n  }, {\n    key: \"mergeContainers\",\n    value: function mergeContainers(position) {\n      var prev = position.nodeBefore;\n      var next = position.nodeAfter;\n\n      if (!prev || !next || !prev.is('containerElement') || !next.is('containerElement')) {\n        /**\n         * Element before and after given position cannot be merged.\n         *\n         * @error view-writer-merge-containers-invalid-position\n         */\n        throw new CKEditorError('view-writer-merge-containers-invalid-position: ' + 'Element before and after given position cannot be merged.', this.document);\n      }\n\n      var lastChild = prev.getChild(prev.childCount - 1);\n      var newPosition = lastChild instanceof Text ? Position._createAt(lastChild, 'end') : Position._createAt(prev, 'end');\n      this.move(Range._createIn(next), Position._createAt(prev, 'end'));\n      this.remove(Range._createOn(next));\n      return newPosition;\n    }\n    /**\n     * Insert node or nodes at specified position. Takes care about breaking attributes before insertion\n     * and merging them afterwards.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-insert-invalid-node` when nodes to insert\n     * contains instances that are not {@link module:engine/view/text~Text Texts},\n     * {@link module:engine/view/attributeelement~AttributeElement AttributeElements},\n     * {@link module:engine/view/containerelement~ContainerElement ContainerElements},\n     * {@link module:engine/view/emptyelement~EmptyElement EmptyElements} or\n     * {@link module:engine/view/uielement~UIElement UIElements}.\n     *\n     * @param {module:engine/view/position~Position} position Insertion position.\n     * @param {module:engine/view/text~Text|module:engine/view/attributeelement~AttributeElement|\n     * module:engine/view/containerelement~ContainerElement|module:engine/view/emptyelement~EmptyElement|\n     * module:engine/view/uielement~UIElement|Iterable.<module:engine/view/text~Text|\n     * module:engine/view/attributeelement~AttributeElement|module:engine/view/containerelement~ContainerElement|\n     * module:engine/view/emptyelement~EmptyElement|module:engine/view/uielement~UIElement>} nodes Node or nodes to insert.\n     * @returns {module:engine/view/range~Range} Range around inserted nodes.\n     */\n\n  }, {\n    key: \"insert\",\n    value: function insert(position, nodes) {\n      nodes = isIterable(nodes) ? _toConsumableArray(nodes) : [nodes]; // Check if nodes to insert are instances of AttributeElements, ContainerElements, EmptyElements, UIElements or Text.\n\n      validateNodesToInsert(nodes, this.document);\n      var container = getParentContainer(position);\n\n      if (!container) {\n        /**\n         * Position's parent container cannot be found.\n         *\n         * @error view-writer-invalid-position-container\n         */\n        throw new CKEditorError('view-writer-invalid-position-container', this.document);\n      }\n\n      var insertionPosition = this._breakAttributes(position, true);\n\n      var length = container._insertChild(insertionPosition.offset, nodes);\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = nodes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var node = _step.value;\n\n          this._addToClonedElementsGroup(node);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      var endPosition = insertionPosition.getShiftedBy(length);\n      var start = this.mergeAttributes(insertionPosition); // When no nodes were inserted - return collapsed range.\n\n      if (length === 0) {\n        return new Range(start, start);\n      } else {\n        // If start position was merged - move end position.\n        if (!start.isEqual(insertionPosition)) {\n          endPosition.offset--;\n        }\n\n        var end = this.mergeAttributes(endPosition);\n        return new Range(start, end);\n      }\n    }\n    /**\n     * Removes provided range from the container.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when\n     * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions are not placed inside\n     * same parent container.\n     *\n     * @param {module:engine/view/range~Range|module:engine/view/item~Item} rangeOrItem Range to remove from container\n     * or an {@link module:engine/view/item~Item item} to remove. If range is provided, after removing, it will be updated\n     * to a collapsed range showing the new position.\n     * @returns {module:engine/view/documentfragment~DocumentFragment} Document fragment containing removed nodes.\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(rangeOrItem) {\n      var range = rangeOrItem instanceof Range ? rangeOrItem : Range._createOn(rangeOrItem);\n      validateRangeContainer(range, this.document); // If range is collapsed - nothing to remove.\n\n      if (range.isCollapsed) {\n        return new DocumentFragment();\n      } // Break attributes at range start and end.\n\n\n      var _this$_breakAttribute = this._breakAttributesRange(range, true),\n          breakStart = _this$_breakAttribute.start,\n          breakEnd = _this$_breakAttribute.end;\n\n      var parentContainer = breakStart.parent;\n      var count = breakEnd.offset - breakStart.offset; // Remove nodes in range.\n\n      var removed = parentContainer._removeChildren(breakStart.offset, count);\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = removed[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var node = _step2.value;\n\n          this._removeFromClonedElementsGroup(node);\n        } // Merge after removing.\n\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      var mergePosition = this.mergeAttributes(breakStart);\n      range.start = mergePosition;\n      range.end = mergePosition.clone(); // Return removed nodes.\n\n      return new DocumentFragment(removed);\n    }\n    /**\n     * Removes matching elements from given range.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when\n     * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions are not placed inside\n     * same parent container.\n     *\n     * @param {module:engine/view/range~Range} range Range to clear.\n     * @param {module:engine/view/element~Element} element Element to remove.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear(range, element) {\n      validateRangeContainer(range, this.document); // Create walker on given range.\n      // We walk backward because when we remove element during walk it modifies range end position.\n\n      var walker = range.getWalker({\n        direction: 'backward',\n        ignoreElementEnd: true\n      }); // Let's walk.\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = walker[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var current = _step3.value;\n          var item = current.item;\n          var rangeToRemove = void 0; // When current item matches to the given element.\n\n          if (item.is('element') && element.isSimilar(item)) {\n            // Create range on this element.\n            rangeToRemove = Range._createOn(item); // When range starts inside Text or TextProxy element.\n          } else if (!current.nextPosition.isAfter(range.start) && item.is('textProxy')) {\n            // We need to check if parent of this text matches to given element.\n            var parentElement = item.getAncestors().find(function (ancestor) {\n              return ancestor.is('element') && element.isSimilar(ancestor);\n            }); // If it is then create range inside this element.\n\n            if (parentElement) {\n              rangeToRemove = Range._createIn(parentElement);\n            }\n          } // If we have found element to remove.\n\n\n          if (rangeToRemove) {\n            // We need to check if element range stick out of the given range and truncate if it is.\n            if (rangeToRemove.end.isAfter(range.end)) {\n              rangeToRemove.end = range.end;\n            }\n\n            if (rangeToRemove.start.isBefore(range.start)) {\n              rangeToRemove.start = range.start;\n            } // At the end we remove range with found element.\n\n\n            this.remove(rangeToRemove);\n          }\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n            _iterator3[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n    /**\n     * Moves nodes from provided range to target position.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when\n     * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions are not placed inside\n     * same parent container.\n     *\n     * @param {module:engine/view/range~Range} sourceRange Range containing nodes to move.\n     * @param {module:engine/view/position~Position} targetPosition Position to insert.\n     * @returns {module:engine/view/range~Range} Range in target container. Inserted nodes are placed between\n     * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions.\n     */\n\n  }, {\n    key: \"move\",\n    value: function move(sourceRange, targetPosition) {\n      var nodes;\n\n      if (targetPosition.isAfter(sourceRange.end)) {\n        targetPosition = this._breakAttributes(targetPosition, true);\n        var parent = targetPosition.parent;\n        var countBefore = parent.childCount;\n        sourceRange = this._breakAttributesRange(sourceRange, true);\n        nodes = this.remove(sourceRange);\n        targetPosition.offset += parent.childCount - countBefore;\n      } else {\n        nodes = this.remove(sourceRange);\n      }\n\n      return this.insert(targetPosition, nodes);\n    }\n    /**\n        * Wraps elements within range with provided {@link module:engine/view/attributeelement~AttributeElement AttributeElement}.\n        * If a collapsed range is provided, it will be wrapped only if it is equal to view selection.\n        *\n        * If a collapsed range was passed and is same as selection, the selection\n        * will be moved to the inside of the wrapped attribute element.\n        *\n        * Throws {@link module:utils/ckeditorerror~CKEditorError} `view-writer-invalid-range-container`\n        * when {@link module:engine/view/range~Range#start}\n        * and {@link module:engine/view/range~Range#end} positions are not placed inside same parent container.\n        *\n        * Throws {@link module:utils/ckeditorerror~CKEditorError} `view-writer-wrap-invalid-attribute` when passed attribute element is not\n        * an instance of {@link module:engine/view/attributeelement~AttributeElement AttributeElement}.\n        *\n        * Throws {@link module:utils/ckeditorerror~CKEditorError} `view-writer-wrap-nonselection-collapsed-range` when passed range\n        * is collapsed and different than view selection.\n        *\n        * @param {module:engine/view/range~Range} range Range to wrap.\n        * @param {module:engine/view/attributeelement~AttributeElement} attribute Attribute element to use as wrapper.\n        * @returns {module:engine/view/range~Range} range Range after wrapping, spanning over wrapping attribute element.\n       */\n\n  }, {\n    key: \"wrap\",\n    value: function wrap(range, attribute) {\n      if (!(attribute instanceof AttributeElement)) {\n        throw new CKEditorError('view-writer-wrap-invalid-attribute', this.document);\n      }\n\n      validateRangeContainer(range, this.document);\n\n      if (!range.isCollapsed) {\n        // Non-collapsed range. Wrap it with the attribute element.\n        return this._wrapRange(range, attribute);\n      } else {\n        // Collapsed range. Wrap position.\n        var position = range.start;\n\n        if (position.parent.is('element') && !_hasNonUiChildren(position.parent)) {\n          position = position.getLastMatchingPosition(function (value) {\n            return value.item.is('uiElement');\n          });\n        }\n\n        position = this._wrapPosition(position, attribute);\n        var viewSelection = this.document.selection; // If wrapping position is equal to view selection, move view selection inside wrapping attribute element.\n\n        if (viewSelection.isCollapsed && viewSelection.getFirstPosition().isEqual(range.start)) {\n          this.setSelection(position);\n        }\n\n        return new Range(position);\n      }\n    }\n    /**\n     * Unwraps nodes within provided range from attribute element.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when\n     * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions are not placed inside\n     * same parent container.\n     *\n     * @param {module:engine/view/range~Range} range\n     * @param {module:engine/view/attributeelement~AttributeElement} attribute\n     */\n\n  }, {\n    key: \"unwrap\",\n    value: function unwrap(range, attribute) {\n      if (!(attribute instanceof AttributeElement)) {\n        /**\n         * Attribute element need to be instance of attribute element.\n         *\n         * @error view-writer-unwrap-invalid-attribute\n         */\n        throw new CKEditorError('view-writer-unwrap-invalid-attribute', this.document);\n      }\n\n      validateRangeContainer(range, this.document); // If range is collapsed - nothing to unwrap.\n\n      if (range.isCollapsed) {\n        return range;\n      } // Break attributes at range start and end.\n\n\n      var _this$_breakAttribute2 = this._breakAttributesRange(range, true),\n          breakStart = _this$_breakAttribute2.start,\n          breakEnd = _this$_breakAttribute2.end;\n\n      var parentContainer = breakStart.parent; // Unwrap children located between break points.\n\n      var newRange = this._unwrapChildren(parentContainer, breakStart.offset, breakEnd.offset, attribute); // Merge attributes at the both ends and return a new range.\n\n\n      var start = this.mergeAttributes(newRange.start); // If start position was merged - move end position back.\n\n      if (!start.isEqual(newRange.start)) {\n        newRange.end.offset--;\n      }\n\n      var end = this.mergeAttributes(newRange.end);\n      return new Range(start, end);\n    }\n    /**\n     * Renames element by creating a copy of renamed element but with changed name and then moving contents of the\n     * old element to the new one. Keep in mind that this will invalidate all {@link module:engine/view/position~Position positions} which\n     * has renamed element as {@link module:engine/view/position~Position#parent a parent}.\n     *\n     * New element has to be created because `Element#tagName` property in DOM is readonly.\n     *\n     * Since this function creates a new element and removes the given one, the new element is returned to keep reference.\n     *\n     * @param {String} newName New name for element.\n     * @param {module:engine/view/containerelement~ContainerElement} viewElement Element to be renamed.\n     */\n\n  }, {\n    key: \"rename\",\n    value: function rename(newName, viewElement) {\n      var newElement = new ContainerElement(newName, viewElement.getAttributes());\n      this.insert(Position._createAfter(viewElement), newElement);\n      this.move(Range._createIn(viewElement), Position._createAt(newElement, 0));\n      this.remove(Range._createOn(viewElement));\n      return newElement;\n    }\n    /**\n     * Cleans up memory by removing obsolete cloned elements group from the writer.\n     *\n     * Should be used whenever all {@link module:engine/view/attributeelement~AttributeElement attribute elements}\n     * with the same {@link module:engine/view/attributeelement~AttributeElement#id id} are going to be removed from the view and\n     * the group will no longer be needed.\n     *\n     * Cloned elements group are not removed automatically in case if the group is still needed after all its elements\n     * were removed from the view.\n     *\n     * Keep in mind that group names are equal to the `id` property of the attribute element.\n     *\n     * @param {String} groupName Name of the group to clear.\n     */\n\n  }, {\n    key: \"clearClonedElementsGroup\",\n    value: function clearClonedElementsGroup(groupName) {\n      this._cloneGroups[\"delete\"](groupName);\n    }\n    /**\n     * Creates position at the given location. The location can be specified as:\n     *\n     * * a {@link module:engine/view/position~Position position},\n     * * parent element and offset (offset defaults to `0`),\n     * * parent element and `'end'` (sets position at the end of that element),\n     * * {@link module:engine/view/item~Item view item} and `'before'` or `'after'` (sets position before or after given view item).\n     *\n     * This method is a shortcut to other constructors such as:\n     *\n     * * {@link #createPositionBefore},\n     * * {@link #createPositionAfter},\n     *\n     * @param {module:engine/view/item~Item|module:engine/model/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n     * first parameter is a {@link module:engine/view/item~Item view item}.\n     */\n\n  }, {\n    key: \"createPositionAt\",\n    value: function createPositionAt(itemOrPosition, offset) {\n      return Position._createAt(itemOrPosition, offset);\n    }\n    /**\n     * Creates a new position after given view item.\n     *\n     * @param {module:engine/view/item~Item} item View item after which the position should be located.\n     * @returns {module:engine/view/position~Position}\n     */\n\n  }, {\n    key: \"createPositionAfter\",\n    value: function createPositionAfter(item) {\n      return Position._createAfter(item);\n    }\n    /**\n     * Creates a new position before given view item.\n     *\n     * @param {module:engine/view/item~Item} item View item before which the position should be located.\n     * @returns {module:engine/view/position~Position}\n     */\n\n  }, {\n    key: \"createPositionBefore\",\n    value: function createPositionBefore(item) {\n      return Position._createBefore(item);\n    }\n    /**\n     * Creates a range spanning from `start` position to `end` position.\n     *\n     * **Note:** This factory method creates it's own {@link module:engine/view/position~Position} instances basing on passed values.\n     *\n     * @param {module:engine/view/position~Position} start Start position.\n     * @param {module:engine/view/position~Position} [end] End position. If not set, range will be collapsed at `start` position.\n     * @returns {module:engine/view/range~Range}\n     */\n\n  }, {\n    key: \"createRange\",\n    value: function createRange(start, end) {\n      return new Range(start, end);\n    }\n    /**\n     * Creates a range that starts before given {@link module:engine/view/item~Item view item} and ends after it.\n     *\n     * @param {module:engine/view/item~Item} item\n     * @returns {module:engine/view/range~Range}\n     */\n\n  }, {\n    key: \"createRangeOn\",\n    value: function createRangeOn(item) {\n      return Range._createOn(item);\n    }\n    /**\n     * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n     * that element and ends after the last child of that element.\n     *\n     * @param {module:engine/view/element~Element} element Element which is a parent for the range.\n     * @returns {module:engine/view/range~Range}\n     */\n\n  }, {\n    key: \"createRangeIn\",\n    value: function createRangeIn(element) {\n      return Range._createIn(element);\n    }\n    /**\n     Creates new {@link module:engine/view/selection~Selection} instance.\n     *\n     * \t\t// Creates empty selection without ranges.\n     *\t\tconst selection = writer.createSelection();\n     *\n     *\t\t// Creates selection at the given range.\n     *\t\tconst range = writer.createRange( start, end );\n     *\t\tconst selection = writer.createSelection( range );\n     *\n     *\t\t// Creates selection at the given ranges\n     * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n     *\t\tconst selection = writer.createSelection( ranges );\n     *\n     *\t\t// Creates selection from the other selection.\n     *\t\tconst otherSelection = writer.createSelection();\n     *\t\tconst selection = writer.createSelection( otherSelection );\n     *\n     *\t\t// Creates selection from the document selection.\n     *\t\tconst selection = writer.createSelection( editor.editing.view.document.selection );\n     *\n     * \t\t// Creates selection at the given position.\n     *\t\tconst position = writer.createPositionFromPath( root, path );\n     *\t\tconst selection = writer.createSelection( position );\n     *\n     *\t\t// Creates collapsed selection at the position of given item and offset.\n     *\t\tconst paragraph = writer.createContainerElement( 'paragraph' );\n     *\t\tconst selection = writer.createSelection( paragraph, offset );\n     *\n     *\t\t// Creates a range inside an {@link module:engine/view/element~Element element} which starts before the\n     *\t\t// first child of that element and ends after the last child of that element.\n     *\t\tconst selection = writer.createSelection( paragraph, 'in' );\n     *\n     *\t\t// Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends\n     *\t\t// just after the item.\n     *\t\tconst selection = writer.createSelection( paragraph, 'on' );\n     *\n     * `Selection`'s constructor allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n     *\n     *\t\t// Creates backward selection.\n     *\t\tconst selection = writer.createSelection( range, { backward: true } );\n     *\n     * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n     * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n     * represented in other way, for example by applying proper CSS class.\n     *\n     * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\n     * (and be  properly handled by screen readers).\n     *\n     *\t\t// Creates fake selection with label.\n     *\t\tconst selection = writer.createSelection( range, { fake: true, label: 'foo' } );\n     *\n     * @param {module:engine/view/selection~Selectable} [selectable=null]\n     * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Offset or place when selectable is an `Item`.\n     * @param {Object} [options]\n     * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n     * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n     * @param {String} [options.label] Label for the fake selection.\n     * @returns {module:engine/view/selection~Selection}\n     */\n\n  }, {\n    key: \"createSelection\",\n    value: function createSelection(selectable, placeOrOffset, options) {\n      return new Selection(selectable, placeOrOffset, options);\n    }\n    /**\n     * Wraps children with provided `wrapElement`. Only children contained in `parent` element between\n     * `startOffset` and `endOffset` will be wrapped.\n     *\n     * @private\n     * @param {module:engine/view/element~Element} parent\n     * @param {Number} startOffset\n     * @param {Number} endOffset\n     * @param {module:engine/view/element~Element} wrapElement\n     */\n\n  }, {\n    key: \"_wrapChildren\",\n    value: function _wrapChildren(parent, startOffset, endOffset, wrapElement) {\n      var i = startOffset;\n      var wrapPositions = [];\n\n      while (i < endOffset) {\n        var child = parent.getChild(i);\n        var isText = child.is('text');\n        var isAttribute = child.is('attributeElement');\n        var isEmpty = child.is('emptyElement');\n        var isUI = child.is('uiElement'); //\n        // (In all examples, assume that `wrapElement` is `<span class=\"foo\">` element.)\n        //\n        // Check if `wrapElement` can be joined with the wrapped element. One of requirements is having same name.\n        // If possible, join elements.\n        //\n        // <p><span class=\"bar\">abc</span></p>  -->  <p><span class=\"foo bar\">abc</span></p>\n        //\n\n        if (isAttribute && this._wrapAttributeElement(wrapElement, child)) {\n          wrapPositions.push(new Position(parent, i));\n        } //\n        // Wrap the child if it is not an attribute element or if it is an attribute element that should be inside\n        // `wrapElement` (due to priority).\n        //\n        // <p>abc</p>                   -->  <p><span class=\"foo\">abc</span></p>\n        // <p><strong>abc</strong></p>  -->  <p><span class=\"foo\"><strong>abc</strong></span></p>\n        //\n        else if (isText || isEmpty || isUI || isAttribute && shouldABeOutsideB(wrapElement, child)) {\n            // Clone attribute.\n            var newAttribute = wrapElement._clone(); // Wrap current node with new attribute.\n\n\n            child._remove();\n\n            newAttribute._appendChild(child);\n\n            parent._insertChild(i, newAttribute);\n\n            this._addToClonedElementsGroup(newAttribute);\n\n            wrapPositions.push(new Position(parent, i));\n          } //\n          // If other nested attribute is found and it wasn't wrapped (see above), continue wrapping inside it.\n          //\n          // <p><a href=\"foo.html\">abc</a></p>  -->  <p><a href=\"foo.html\"><span class=\"foo\">abc</span></a></p>\n          //\n          else if (isAttribute) {\n              this._wrapChildren(child, 0, child.childCount, wrapElement);\n            }\n\n        i++;\n      } // Merge at each wrap.\n\n\n      var offsetChange = 0;\n\n      for (var _i = 0, _wrapPositions = wrapPositions; _i < _wrapPositions.length; _i++) {\n        var position = _wrapPositions[_i];\n        position.offset -= offsetChange; // Do not merge with elements outside selected children.\n\n        if (position.offset == startOffset) {\n          continue;\n        }\n\n        var newPosition = this.mergeAttributes(position); // If nodes were merged - other merge offsets will change.\n\n        if (!newPosition.isEqual(position)) {\n          offsetChange++;\n          endOffset--;\n        }\n      }\n\n      return Range._createFromParentsAndOffsets(parent, startOffset, parent, endOffset);\n    }\n    /**\n     * Unwraps children from provided `unwrapElement`. Only children contained in `parent` element between\n     * `startOffset` and `endOffset` will be unwrapped.\n     *\n     * @private\n     * @param {module:engine/view/element~Element} parent\n     * @param {Number} startOffset\n     * @param {Number} endOffset\n     * @param {module:engine/view/element~Element} unwrapElement\n     */\n\n  }, {\n    key: \"_unwrapChildren\",\n    value: function _unwrapChildren(parent, startOffset, endOffset, unwrapElement) {\n      var i = startOffset;\n      var unwrapPositions = []; // Iterate over each element between provided offsets inside parent.\n      // We don't use tree walker or range iterator because we will be removing and merging potentially multiple nodes,\n      // so it could get messy. It is safer to it manually in this case.\n\n      while (i < endOffset) {\n        var child = parent.getChild(i); // Skip all text nodes. There should be no container element's here either.\n\n        if (!child.is('attributeElement')) {\n          i++;\n          continue;\n        } //\n        // (In all examples, assume that `unwrapElement` is `<span class=\"foo\">` element.)\n        //\n        // If the child is similar to the given attribute element, unwrap it - it will be completely removed.\n        //\n        // <p><span class=\"foo\">abc</span>xyz</p>  -->  <p>abcxyz</p>\n        //\n\n\n        if (child.isSimilar(unwrapElement)) {\n          var unwrapped = child.getChildren();\n          var count = child.childCount; // Replace wrapper element with its children\n\n          child._remove();\n\n          parent._insertChild(i, unwrapped);\n\n          this._removeFromClonedElementsGroup(child); // Save start and end position of moved items.\n\n\n          unwrapPositions.push(new Position(parent, i), new Position(parent, i + count)); // Skip elements that were unwrapped. Assuming there won't be another element to unwrap in child elements.\n\n          i += count;\n          endOffset += count - 1;\n          continue;\n        } //\n        // If the child is not similar but is an attribute element, try partial unwrapping - remove the same attributes/styles/classes.\n        // Partial unwrapping will happen only if the elements have the same name.\n        //\n        // <p><span class=\"foo bar\">abc</span>xyz</p>  -->  <p><span class=\"bar\">abc</span>xyz</p>\n        // <p><i class=\"foo\">abc</i>xyz</p>            -->  <p><i class=\"foo\">abc</i>xyz</p>\n        //\n\n\n        if (this._unwrapAttributeElement(unwrapElement, child)) {\n          unwrapPositions.push(new Position(parent, i), new Position(parent, i + 1));\n          i++;\n          continue;\n        } //\n        // If other nested attribute is found, look through it's children for elements to unwrap.\n        //\n        // <p><i><span class=\"foo\">abc</span></i><p>  -->  <p><i>abc</i><p>\n        //\n\n\n        this._unwrapChildren(child, 0, child.childCount, unwrapElement);\n\n        i++;\n      } // Merge at each unwrap.\n\n\n      var offsetChange = 0;\n\n      for (var _i2 = 0, _unwrapPositions = unwrapPositions; _i2 < _unwrapPositions.length; _i2++) {\n        var position = _unwrapPositions[_i2];\n        position.offset -= offsetChange; // Do not merge with elements outside selected children.\n\n        if (position.offset == startOffset || position.offset == endOffset) {\n          continue;\n        }\n\n        var newPosition = this.mergeAttributes(position); // If nodes were merged - other merge offsets will change.\n\n        if (!newPosition.isEqual(position)) {\n          offsetChange++;\n          endOffset--;\n        }\n      }\n\n      return Range._createFromParentsAndOffsets(parent, startOffset, parent, endOffset);\n    }\n    /**\n     * Helper function for `view.writer.wrap`. Wraps range with provided attribute element.\n     * This method will also merge newly added attribute element with its siblings whenever possible.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError} `view-writer-wrap-invalid-attribute` when passed attribute element is not\n     * an instance of {@link module:engine/view/attributeelement~AttributeElement AttributeElement}.\n     *\n     * @private\n     * @param {module:engine/view/range~Range} range\n     * @param {module:engine/view/attributeelement~AttributeElement} attribute\n     * @returns {module:engine/view/range~Range} New range after wrapping, spanning over wrapping attribute element.\n     */\n\n  }, {\n    key: \"_wrapRange\",\n    value: function _wrapRange(range, attribute) {\n      // Break attributes at range start and end.\n      var _this$_breakAttribute3 = this._breakAttributesRange(range, true),\n          breakStart = _this$_breakAttribute3.start,\n          breakEnd = _this$_breakAttribute3.end;\n\n      var parentContainer = breakStart.parent; // Wrap all children with attribute.\n\n      var newRange = this._wrapChildren(parentContainer, breakStart.offset, breakEnd.offset, attribute); // Merge attributes at the both ends and return a new range.\n\n\n      var start = this.mergeAttributes(newRange.start); // If start position was merged - move end position back.\n\n      if (!start.isEqual(newRange.start)) {\n        newRange.end.offset--;\n      }\n\n      var end = this.mergeAttributes(newRange.end);\n      return new Range(start, end);\n    }\n    /**\n     * Helper function for {@link #wrap}. Wraps position with provided attribute element.\n     * This method will also merge newly added attribute element with its siblings whenever possible.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError} `view-writer-wrap-invalid-attribute` when passed attribute element is not\n     * an instance of {@link module:engine/view/attributeelement~AttributeElement AttributeElement}.\n     *\n     * @private\n     * @param {module:engine/view/position~Position} position\n     * @param {module:engine/view/attributeelement~AttributeElement} attribute\n     * @returns {module:engine/view/position~Position} New position after wrapping.\n     */\n\n  }, {\n    key: \"_wrapPosition\",\n    value: function _wrapPosition(position, attribute) {\n      // Return same position when trying to wrap with attribute similar to position parent.\n      if (attribute.isSimilar(position.parent)) {\n        return movePositionToTextNode(position.clone());\n      } // When position is inside text node - break it and place new position between two text nodes.\n\n\n      if (position.parent.is('text')) {\n        position = breakTextNode(position);\n      } // Create fake element that will represent position, and will not be merged with other attributes.\n\n\n      var fakePosition = this.createAttributeElement();\n      fakePosition._priority = Number.POSITIVE_INFINITY;\n\n      fakePosition.isSimilar = function () {\n        return false;\n      }; // Insert fake element in position location.\n\n\n      position.parent._insertChild(position.offset, fakePosition); // Range around inserted fake attribute element.\n\n\n      var wrapRange = new Range(position, position.getShiftedBy(1)); // Wrap fake element with attribute (it will also merge if possible).\n\n      this.wrap(wrapRange, attribute); // Remove fake element and place new position there.\n\n      var newPosition = new Position(fakePosition.parent, fakePosition.index);\n\n      fakePosition._remove(); // If position is placed between text nodes - merge them and return position inside.\n\n\n      var nodeBefore = newPosition.nodeBefore;\n      var nodeAfter = newPosition.nodeAfter;\n\n      if (nodeBefore instanceof Text && nodeAfter instanceof Text) {\n        return mergeTextNodes(nodeBefore, nodeAfter);\n      } // If position is next to text node - move position inside.\n\n\n      return movePositionToTextNode(newPosition);\n    }\n    /**\n     * \tWraps one {@link module:engine/view/attributeelement~AttributeElement AttributeElement} into another by\n     * \tmerging them if possible. When merging is possible - all attributes, styles and classes are moved from wrapper\n     * \telement to element being wrapped.\n     *\n     * \t@private\n     * \t@param {module:engine/view/attributeelement~AttributeElement} wrapper Wrapper AttributeElement.\n     * \t@param {module:engine/view/attributeelement~AttributeElement} toWrap AttributeElement to wrap using wrapper element.\n     * \t@returns {Boolean} Returns `true` if elements are merged.\n     */\n\n  }, {\n    key: \"_wrapAttributeElement\",\n    value: function _wrapAttributeElement(wrapper, toWrap) {\n      if (!canBeJoined(wrapper, toWrap)) {\n        return false;\n      } // Can't merge if name or priority differs.\n\n\n      if (wrapper.name !== toWrap.name || wrapper.priority !== toWrap.priority) {\n        return false;\n      } // Check if attributes can be merged.\n\n\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = wrapper.getAttributeKeys()[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var key = _step4.value;\n\n          // Classes and styles should be checked separately.\n          if (key === 'class' || key === 'style') {\n            continue;\n          } // If some attributes are different we cannot wrap.\n\n\n          if (toWrap.hasAttribute(key) && toWrap.getAttribute(key) !== wrapper.getAttribute(key)) {\n            return false;\n          }\n        } // Check if styles can be merged.\n\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4[\"return\"] != null) {\n            _iterator4[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = wrapper.getStyleNames()[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var _key = _step5.value;\n\n          if (toWrap.hasStyle(_key) && toWrap.getStyle(_key) !== wrapper.getStyle(_key)) {\n            return false;\n          }\n        } // Move all attributes/classes/styles from wrapper to wrapped AttributeElement.\n\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5[\"return\"] != null) {\n            _iterator5[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = wrapper.getAttributeKeys()[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var _key2 = _step6.value;\n\n          // Classes and styles should be checked separately.\n          if (_key2 === 'class' || _key2 === 'style') {\n            continue;\n          } // Move only these attributes that are not present - other are similar.\n\n\n          if (!toWrap.hasAttribute(_key2)) {\n            this.setAttribute(_key2, wrapper.getAttribute(_key2), toWrap);\n          }\n        }\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6[\"return\"] != null) {\n            _iterator6[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion7 = true;\n      var _didIteratorError7 = false;\n      var _iteratorError7 = undefined;\n\n      try {\n        for (var _iterator7 = wrapper.getStyleNames()[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n          var _key3 = _step7.value;\n\n          if (!toWrap.hasStyle(_key3)) {\n            this.setStyle(_key3, wrapper.getStyle(_key3), toWrap);\n          }\n        }\n      } catch (err) {\n        _didIteratorError7 = true;\n        _iteratorError7 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion7 && _iterator7[\"return\"] != null) {\n            _iterator7[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError7) {\n            throw _iteratorError7;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion8 = true;\n      var _didIteratorError8 = false;\n      var _iteratorError8 = undefined;\n\n      try {\n        for (var _iterator8 = wrapper.getClassNames()[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n          var _key4 = _step8.value;\n\n          if (!toWrap.hasClass(_key4)) {\n            this.addClass(_key4, toWrap);\n          }\n        }\n      } catch (err) {\n        _didIteratorError8 = true;\n        _iteratorError8 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion8 && _iterator8[\"return\"] != null) {\n            _iterator8[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError8) {\n            throw _iteratorError8;\n          }\n        }\n      }\n\n      return true;\n    }\n    /**\n     * Unwraps {@link module:engine/view/attributeelement~AttributeElement AttributeElement} from another by removing\n     * corresponding attributes, classes and styles. All attributes, classes and styles from wrapper should be present\n     * inside element being unwrapped.\n     *\n     * @private\n     * @param {module:engine/view/attributeelement~AttributeElement} wrapper Wrapper AttributeElement.\n     * @param {module:engine/view/attributeelement~AttributeElement} toUnwrap AttributeElement to unwrap using wrapper element.\n     * @returns {Boolean} Returns `true` if elements are unwrapped.\n     **/\n\n  }, {\n    key: \"_unwrapAttributeElement\",\n    value: function _unwrapAttributeElement(wrapper, toUnwrap) {\n      if (!canBeJoined(wrapper, toUnwrap)) {\n        return false;\n      } // Can't unwrap if name or priority differs.\n\n\n      if (wrapper.name !== toUnwrap.name || wrapper.priority !== toUnwrap.priority) {\n        return false;\n      } // Check if AttributeElement has all wrapper attributes.\n\n\n      var _iteratorNormalCompletion9 = true;\n      var _didIteratorError9 = false;\n      var _iteratorError9 = undefined;\n\n      try {\n        for (var _iterator9 = wrapper.getAttributeKeys()[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n          var key = _step9.value;\n\n          // Classes and styles should be checked separately.\n          if (key === 'class' || key === 'style') {\n            continue;\n          } // If some attributes are missing or different we cannot unwrap.\n\n\n          if (!toUnwrap.hasAttribute(key) || toUnwrap.getAttribute(key) !== wrapper.getAttribute(key)) {\n            return false;\n          }\n        } // Check if AttributeElement has all wrapper classes.\n\n      } catch (err) {\n        _didIteratorError9 = true;\n        _iteratorError9 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion9 && _iterator9[\"return\"] != null) {\n            _iterator9[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError9) {\n            throw _iteratorError9;\n          }\n        }\n      }\n\n      if (!toUnwrap.hasClass.apply(toUnwrap, _toConsumableArray(wrapper.getClassNames()))) {\n        return false;\n      } // Check if AttributeElement has all wrapper styles.\n\n\n      var _iteratorNormalCompletion10 = true;\n      var _didIteratorError10 = false;\n      var _iteratorError10 = undefined;\n\n      try {\n        for (var _iterator10 = wrapper.getStyleNames()[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n          var _key5 = _step10.value;\n\n          // If some styles are missing or different we cannot unwrap.\n          if (!toUnwrap.hasStyle(_key5) || toUnwrap.getStyle(_key5) !== wrapper.getStyle(_key5)) {\n            return false;\n          }\n        } // Remove all wrapper's attributes from unwrapped element.\n\n      } catch (err) {\n        _didIteratorError10 = true;\n        _iteratorError10 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion10 && _iterator10[\"return\"] != null) {\n            _iterator10[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError10) {\n            throw _iteratorError10;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion11 = true;\n      var _didIteratorError11 = false;\n      var _iteratorError11 = undefined;\n\n      try {\n        for (var _iterator11 = wrapper.getAttributeKeys()[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n          var _key6 = _step11.value;\n\n          // Classes and styles should be checked separately.\n          if (_key6 === 'class' || _key6 === 'style') {\n            continue;\n          }\n\n          this.removeAttribute(_key6, toUnwrap);\n        } // Remove all wrapper's classes from unwrapped element.\n\n      } catch (err) {\n        _didIteratorError11 = true;\n        _iteratorError11 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion11 && _iterator11[\"return\"] != null) {\n            _iterator11[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError11) {\n            throw _iteratorError11;\n          }\n        }\n      }\n\n      this.removeClass(Array.from(wrapper.getClassNames()), toUnwrap); // Remove all wrapper's styles from unwrapped element.\n\n      this.removeStyle(Array.from(wrapper.getStyleNames()), toUnwrap);\n      return true;\n    }\n    /**\n     * Helper function used by other `DowncastWriter` methods. Breaks attribute elements at the boundaries of given range.\n     *\n     * @private\n     * @param {module:engine/view/range~Range} range Range which `start` and `end` positions will be used to break attributes.\n     * @param {Boolean} [forceSplitText=false] If set to `true`, will break text nodes even if they are directly in container element.\n     * This behavior will result in incorrect view state, but is needed by other view writing methods which then fixes view state.\n     * @returns {module:engine/view/range~Range} New range with located at break positions.\n     */\n\n  }, {\n    key: \"_breakAttributesRange\",\n    value: function _breakAttributesRange(range) {\n      var forceSplitText = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var rangeStart = range.start;\n      var rangeEnd = range.end;\n      validateRangeContainer(range, this.document); // Break at the collapsed position. Return new collapsed range.\n\n      if (range.isCollapsed) {\n        var position = this._breakAttributes(range.start, forceSplitText);\n\n        return new Range(position, position);\n      }\n\n      var breakEnd = this._breakAttributes(rangeEnd, forceSplitText);\n\n      var count = breakEnd.parent.childCount;\n\n      var breakStart = this._breakAttributes(rangeStart, forceSplitText); // Calculate new break end offset.\n\n\n      breakEnd.offset += breakEnd.parent.childCount - count;\n      return new Range(breakStart, breakEnd);\n    }\n    /**\n     * Helper function used by other `DowncastWriter` methods. Breaks attribute elements at given position.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-cannot-break-empty-element` when break position\n     * is placed inside {@link module:engine/view/emptyelement~EmptyElement EmptyElement}.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-cannot-break-ui-element` when break position\n     * is placed inside {@link module:engine/view/uielement~UIElement UIElement}.\n     *\n     * @private\n     * @param {module:engine/view/position~Position} position Position where to break attributes.\n     * @param {Boolean} [forceSplitText=false] If set to `true`, will break text nodes even if they are directly in container element.\n     * This behavior will result in incorrect view state, but is needed by other view writing methods which then fixes view state.\n     * @returns {module:engine/view/position~Position} New position after breaking the attributes.\n     */\n\n  }, {\n    key: \"_breakAttributes\",\n    value: function _breakAttributes(position) {\n      var forceSplitText = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var positionOffset = position.offset;\n      var positionParent = position.parent; // If position is placed inside EmptyElement - throw an exception as we cannot break inside.\n\n      if (position.parent.is('emptyElement')) {\n        /**\n         * Cannot break inside EmptyElement instance.\n         *\n         * @error view-writer-cannot-break-empty-element\n         */\n        throw new CKEditorError('view-writer-cannot-break-empty-element', this.document);\n      } // If position is placed inside UIElement - throw an exception as we cannot break inside.\n\n\n      if (position.parent.is('uiElement')) {\n        /**\n         * Cannot break inside UIElement instance.\n         *\n         * @error view-writer-cannot-break-ui-element\n         */\n        throw new CKEditorError('view-writer-cannot-break-ui-element', this.document);\n      } // There are no attributes to break and text nodes breaking is not forced.\n\n\n      if (!forceSplitText && positionParent.is('text') && isContainerOrFragment(positionParent.parent)) {\n        return position.clone();\n      } // Position's parent is container, so no attributes to break.\n\n\n      if (isContainerOrFragment(positionParent)) {\n        return position.clone();\n      } // Break text and start again in new position.\n\n\n      if (positionParent.is('text')) {\n        return this._breakAttributes(breakTextNode(position), forceSplitText);\n      }\n\n      var length = positionParent.childCount; // <p>foo<b><u>bar{}</u></b></p>\n      // <p>foo<b><u>bar</u>[]</b></p>\n      // <p>foo<b><u>bar</u></b>[]</p>\n\n      if (positionOffset == length) {\n        var newPosition = new Position(positionParent.parent, positionParent.index + 1);\n        return this._breakAttributes(newPosition, forceSplitText);\n      } else {\n        // <p>foo<b><u>{}bar</u></b></p>\n        // <p>foo<b>[]<u>bar</u></b></p>\n        // <p>foo{}<b><u>bar</u></b></p>\n        if (positionOffset === 0) {\n          var _newPosition = new Position(positionParent.parent, positionParent.index);\n\n          return this._breakAttributes(_newPosition, forceSplitText);\n        } // <p>foo<b><u>b{}ar</u></b></p>\n        // <p>foo<b><u>b[]ar</u></b></p>\n        // <p>foo<b><u>b</u>[]<u>ar</u></b></p>\n        // <p>foo<b><u>b</u></b>[]<b><u>ar</u></b></p>\n        else {\n            var offsetAfter = positionParent.index + 1; // Break element.\n\n            var clonedNode = positionParent._clone(); // Insert cloned node to position's parent node.\n\n\n            positionParent.parent._insertChild(offsetAfter, clonedNode);\n\n            this._addToClonedElementsGroup(clonedNode); // Get nodes to move.\n\n\n            var count = positionParent.childCount - positionOffset;\n\n            var nodesToMove = positionParent._removeChildren(positionOffset, count); // Move nodes to cloned node.\n\n\n            clonedNode._appendChild(nodesToMove); // Create new position to work on.\n\n\n            var _newPosition2 = new Position(positionParent.parent, offsetAfter);\n\n            return this._breakAttributes(_newPosition2, forceSplitText);\n          }\n      }\n    }\n    /**\n     * Stores the information that an {@link module:engine/view/attributeelement~AttributeElement attribute element} was\n     * added to the tree. Saves the reference to the group in the given element and updates the group, so other elements\n     * from the group now keep a reference to the given attribute element.\n     *\n     * The clones group can be obtained using {@link module:engine/view/attributeelement~AttributeElement#getElementsWithSameId}.\n     *\n     * Does nothing if added element has no {@link module:engine/view/attributeelement~AttributeElement#id id}.\n     *\n     * @private\n     * @param {module:engine/view/attributeelement~AttributeElement} element Attribute element to save.\n     */\n\n  }, {\n    key: \"_addToClonedElementsGroup\",\n    value: function _addToClonedElementsGroup(element) {\n      // Add only if the element is in document tree.\n      if (!element.root.is('rootElement')) {\n        return;\n      } // Traverse the element's children recursively to find other attribute elements that also might got inserted.\n      // The loop is at the beginning so we can make fast returns later in the code.\n\n\n      if (element.is('element')) {\n        var _iteratorNormalCompletion12 = true;\n        var _didIteratorError12 = false;\n        var _iteratorError12 = undefined;\n\n        try {\n          for (var _iterator12 = element.getChildren()[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n            var child = _step12.value;\n\n            this._addToClonedElementsGroup(child);\n          }\n        } catch (err) {\n          _didIteratorError12 = true;\n          _iteratorError12 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion12 && _iterator12[\"return\"] != null) {\n              _iterator12[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError12) {\n              throw _iteratorError12;\n            }\n          }\n        }\n      }\n\n      var id = element.id;\n\n      if (!id) {\n        return;\n      }\n\n      var group = this._cloneGroups.get(id);\n\n      if (!group) {\n        group = new Set();\n\n        this._cloneGroups.set(id, group);\n      }\n\n      group.add(element);\n      element._clonesGroup = group;\n    }\n    /**\n     * Removes all the information about the given {@link module:engine/view/attributeelement~AttributeElement attribute element}\n     * from its clones group.\n     *\n     * Keep in mind, that the element will still keep a reference to the group (but the group will not keep a reference to it).\n     * This allows to reference the whole group even if the element was already removed from the tree.\n     *\n     * Does nothing if the element has no {@link module:engine/view/attributeelement~AttributeElement#id id}.\n     *\n     * @private\n     * @param {module:engine/view/attributeelement~AttributeElement} element Attribute element to remove.\n     */\n\n  }, {\n    key: \"_removeFromClonedElementsGroup\",\n    value: function _removeFromClonedElementsGroup(element) {\n      // Traverse the element's children recursively to find other attribute elements that also got removed.\n      // The loop is at the beginning so we can make fast returns later in the code.\n      if (element.is('element')) {\n        var _iteratorNormalCompletion13 = true;\n        var _didIteratorError13 = false;\n        var _iteratorError13 = undefined;\n\n        try {\n          for (var _iterator13 = element.getChildren()[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n            var child = _step13.value;\n\n            this._removeFromClonedElementsGroup(child);\n          }\n        } catch (err) {\n          _didIteratorError13 = true;\n          _iteratorError13 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion13 && _iterator13[\"return\"] != null) {\n              _iterator13[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError13) {\n              throw _iteratorError13;\n            }\n          }\n        }\n      }\n\n      var id = element.id;\n\n      if (!id) {\n        return;\n      }\n\n      var group = this._cloneGroups.get(id);\n\n      if (!group) {\n        return;\n      }\n\n      group[\"delete\"](element); // Not removing group from element on purpose!\n      // If other parts of code have reference to this element, they will be able to get references to other elements from the group.\n    }\n  }]);\n\n  return DowncastWriter;\n}(); // Helper function for `view.writer.wrap`. Checks if given element has any children that are not ui elements.\n\n\nexport { DowncastWriter as default };\n\nfunction _hasNonUiChildren(parent) {\n  return Array.from(parent.getChildren()).some(function (child) {\n    return !child.is('uiElement');\n  });\n}\n/**\n * Attribute element need to be instance of attribute element.\n *\n * @error view-writer-wrap-invalid-attribute\n */\n// Returns first parent container of specified {@link module:engine/view/position~Position Position}.\n// Position's parent node is checked as first, then next parents are checked.\n// Note that {@link module:engine/view/documentfragment~DocumentFragment DocumentFragment} is treated like a container.\n//\n// @param {module:engine/view/position~Position} position Position used as a start point to locate parent container.\n// @returns {module:engine/view/containerelement~ContainerElement|module:engine/view/documentfragment~DocumentFragment|undefined}\n// Parent container element or `undefined` if container is not found.\n\n\nfunction getParentContainer(position) {\n  var parent = position.parent;\n\n  while (!isContainerOrFragment(parent)) {\n    if (!parent) {\n      return undefined;\n    }\n\n    parent = parent.parent;\n  }\n\n  return parent;\n} // Checks if first {@link module:engine/view/attributeelement~AttributeElement AttributeElement} provided to the function\n// can be wrapped otuside second element. It is done by comparing elements'\n// {@link module:engine/view/attributeelement~AttributeElement#priority priorities}, if both have same priority\n// {@link module:engine/view/element~Element#getIdentity identities} are compared.\n//\n// @param {module:engine/view/attributeelement~AttributeElement} a\n// @param {module:engine/view/attributeelement~AttributeElement} b\n// @returns {Boolean}\n\n\nfunction shouldABeOutsideB(a, b) {\n  if (a.priority < b.priority) {\n    return true;\n  } else if (a.priority > b.priority) {\n    return false;\n  } // When priorities are equal and names are different - use identities.\n\n\n  return a.getIdentity() < b.getIdentity();\n} // Returns new position that is moved to near text node. Returns same position if there is no text node before of after\n// specified position.\n//\n//\t\t<p>foo[]</p>  ->  <p>foo{}</p>\n//\t\t<p>[]foo</p>  ->  <p>{}foo</p>\n//\n// @param {module:engine/view/position~Position} position\n// @returns {module:engine/view/position~Position} Position located inside text node or same position if there is no text nodes\n// before or after position location.\n\n\nfunction movePositionToTextNode(position) {\n  var nodeBefore = position.nodeBefore;\n\n  if (nodeBefore && nodeBefore.is('text')) {\n    return new Position(nodeBefore, nodeBefore.data.length);\n  }\n\n  var nodeAfter = position.nodeAfter;\n\n  if (nodeAfter && nodeAfter.is('text')) {\n    return new Position(nodeAfter, 0);\n  }\n\n  return position;\n} // Breaks text node into two text nodes when possible.\n//\n//\t\t<p>foo{}bar</p> -> <p>foo[]bar</p>\n//\t\t<p>{}foobar</p> -> <p>[]foobar</p>\n//\t\t<p>foobar{}</p> -> <p>foobar[]</p>\n//\n// @param {module:engine/view/position~Position} position Position that need to be placed inside text node.\n// @returns {module:engine/view/position~Position} New position after breaking text node.\n\n\nfunction breakTextNode(position) {\n  if (position.offset == position.parent.data.length) {\n    return new Position(position.parent.parent, position.parent.index + 1);\n  }\n\n  if (position.offset === 0) {\n    return new Position(position.parent.parent, position.parent.index);\n  } // Get part of the text that need to be moved.\n\n\n  var textToMove = position.parent.data.slice(position.offset); // Leave rest of the text in position's parent.\n\n  position.parent._data = position.parent.data.slice(0, position.offset); // Insert new text node after position's parent text node.\n\n  position.parent.parent._insertChild(position.parent.index + 1, new Text(textToMove)); // Return new position between two newly created text nodes.\n\n\n  return new Position(position.parent.parent, position.parent.index + 1);\n} // Merges two text nodes into first node. Removes second node and returns merge position.\n//\n// @param {module:engine/view/text~Text} t1 First text node to merge. Data from second text node will be moved at the end of\n// this text node.\n// @param {module:engine/view/text~Text} t2 Second text node to merge. This node will be removed after merging.\n// @returns {module:engine/view/position~Position} Position after merging text nodes.\n\n\nfunction mergeTextNodes(t1, t2) {\n  // Merge text data into first text node and remove second one.\n  var nodeBeforeLength = t1.data.length;\n  t1._data += t2.data;\n\n  t2._remove();\n\n  return new Position(t1, nodeBeforeLength);\n} // Checks if provided nodes are valid to insert. Checks if each node is an instance of\n// {@link module:engine/view/text~Text Text} or {@link module:engine/view/attributeelement~AttributeElement AttributeElement},\n// {@link module:engine/view/containerelement~ContainerElement ContainerElement},\n// {@link module:engine/view/emptyelement~EmptyElement EmptyElement} or\n// {@link module:engine/view/uielement~UIElement UIElement}.\n//\n// Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-insert-invalid-node` when nodes to insert\n// contains instances that are not {@link module:engine/view/text~Text Texts},\n// {@link module:engine/view/emptyelement~EmptyElement EmptyElements},\n// {@link module:engine/view/uielement~UIElement UIElements},\n// {@link module:engine/view/attributeelement~AttributeElement AttributeElements} or\n// {@link module:engine/view/containerelement~ContainerElement ContainerElements}.\n//\n// @param Iterable.<module:engine/view/text~Text|module:engine/view/attributeelement~AttributeElement\n// |module:engine/view/containerelement~ContainerElement> nodes\n// @param {Object} errorContext\n\n\nfunction validateNodesToInsert(nodes, errorContext) {\n  var _iteratorNormalCompletion14 = true;\n  var _didIteratorError14 = false;\n  var _iteratorError14 = undefined;\n\n  try {\n    var _loop = function _loop() {\n      var node = _step14.value;\n\n      if (!validNodesToInsert.some(function (validNode) {\n        return node instanceof validNode;\n      })) {\n        // eslint-disable-line no-use-before-define\n\n        /**\n         * Inserted nodes should be valid to insert. of {@link module:engine/view/attributeelement~AttributeElement AttributeElement},\n         * {@link module:engine/view/containerelement~ContainerElement ContainerElement},\n         * {@link module:engine/view/emptyelement~EmptyElement EmptyElement},\n         * {@link module:engine/view/uielement~UIElement UIElement}, {@link module:engine/view/text~Text Text}.\n         *\n         * @error view-writer-insert-invalid-node\n         */\n        throw new CKEditorError('view-writer-insert-invalid-node', errorContext);\n      }\n\n      if (!node.is('text')) {\n        validateNodesToInsert(node.getChildren(), errorContext);\n      }\n    };\n\n    for (var _iterator14 = nodes[Symbol.iterator](), _step14; !(_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done); _iteratorNormalCompletion14 = true) {\n      _loop();\n    }\n  } catch (err) {\n    _didIteratorError14 = true;\n    _iteratorError14 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion14 && _iterator14[\"return\"] != null) {\n        _iterator14[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError14) {\n        throw _iteratorError14;\n      }\n    }\n  }\n}\n\nvar validNodesToInsert = [Text, AttributeElement, ContainerElement, EmptyElement, UIElement]; // Checks if node is ContainerElement or DocumentFragment, because in most cases they should be treated the same way.\n//\n// @param {module:engine/view/node~Node} node\n// @returns {Boolean} Returns `true` if node is instance of ContainerElement or DocumentFragment.\n\nfunction isContainerOrFragment(node) {\n  return node && (node.is('containerElement') || node.is('documentFragment'));\n} // Checks if {@link module:engine/view/range~Range#start range start} and {@link module:engine/view/range~Range#end range end} are placed\n// inside same {@link module:engine/view/containerelement~ContainerElement container element}.\n// Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when validation fails.\n//\n// @param {module:engine/view/range~Range} range\n// @param {Object} errorContext\n\n\nfunction validateRangeContainer(range, errorContext) {\n  var startContainer = getParentContainer(range.start);\n  var endContainer = getParentContainer(range.end);\n\n  if (!startContainer || !endContainer || startContainer !== endContainer) {\n    /**\n     * Range container is invalid. This can happen if {@link module:engine/view/range~Range#start range start} and\n     * {@link module:engine/view/range~Range#end range end} positions are not placed inside same container or\n     * parent container for these positions cannot be found.\n     *\n     * @error view-writer-invalid-range-container\n     */\n    throw new CKEditorError('view-writer-invalid-range-container', errorContext);\n  }\n} // Checks if two attribute elements can be joined together. Elements can be joined together if, and only if\n// they do not have ids specified.\n//\n// @private\n// @param {module:engine/view/element~Element} a\n// @param {module:engine/view/element~Element} b\n// @returns {Boolean}\n\n\nfunction canBeJoined(a, b) {\n  return a.id === null && b.id === null;\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/istext\n */\n\n/**\n * Checks if the object is a native DOM Text node.\n *\n * @param {*} obj\n * @returns {Boolean}\n */\nexport default function isText(obj) {\n  return Object.prototype.toString.call(obj) == '[object Text]';\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* globals window */\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\nimport isText from '@ckeditor/ckeditor5-utils/src/dom/istext';\n/**\n * Set of utils related to block and inline fillers handling.\n *\n * Browsers do not allow to put caret in elements which does not have height. Because of it, we need to fill all\n * empty elements which should be selectable with elements or characters called \"fillers\". Unfortunately there is no one\n * universal filler, this is why two types are uses:\n *\n * * Block filler is an element which fill block elements, like `<p>`. CKEditor uses `<br>` as a block filler during the editing,\n * as browsers do natively. So instead of an empty `<p>` there will be `<p><br></p>`. The advantage of block filler is that\n * it is transparent for the selection, so when the caret is before the `<br>` and user presses right arrow he will be\n * moved to the next paragraph, not after the `<br>`. The disadvantage is that it breaks a block, so it can not be used\n * in the middle of a line of text. The {@link module:engine/view/filler~BR_FILLER `<br>` filler} can be replaced with any other\n * character in the data output, for instance {@link module:engine/view/filler~NBSP_FILLER non-breaking space}.\n *\n * * Inline filler is a filler which does not break a line of text, so it can be used inside the text, for instance in the empty\n * `<b>` surrendered by text: `foo<b></b>bar`, if we want to put the caret there. CKEditor uses a sequence of the zero-width\n * spaces as an {@link module:engine/view/filler~INLINE_FILLER inline filler} having the predetermined\n * {@link module:engine/view/filler~INLINE_FILLER_LENGTH length}. A sequence is used, instead of a single character to\n * avoid treating random zero-width spaces as the inline filler. Disadvantage of the inline filler is that it is not\n * transparent for the selection. The arrow key moves the caret between zero-width spaces characters, so the additional\n * code is needed to handle the caret.\n *\n * Both inline and block fillers are handled by the {@link module:engine/view/renderer~Renderer renderer} and are not present in the\n * view.\n *\n * @module engine/view/filler\n */\n\n/**\n * `<br>` filler creator. This is a function which creates `<br data-cke-filler=\"true\">` element.\n * It defines how the filler is created.\n *\n * @see module:engine/view/filler~NBSP_FILLER\n * @function\n */\n\nexport var BR_FILLER = function BR_FILLER(domDocument) {\n  var fillerBr = domDocument.createElement('br');\n  fillerBr.dataset.ckeFiller = true;\n  return fillerBr;\n};\n/**\n * Non-breaking space filler creator. This is a function which creates `&nbsp;` text node.\n * It defines how the filler is created.\n *\n * @see module:engine/view/filler~BR_FILLER\n * @function\n */\n\nexport var NBSP_FILLER = function NBSP_FILLER(domDocument) {\n  return domDocument.createTextNode(\"\\xA0\");\n};\n/**\n * Length of the {@link module:engine/view/filler~INLINE_FILLER INLINE_FILLER}.\n */\n\nexport var INLINE_FILLER_LENGTH = 7;\n/**\n * Inline filler which is sequence of the zero width spaces.\n */\n\nexport var INLINE_FILLER = '';\n\nfor (var i = 0; i < INLINE_FILLER_LENGTH; i++) {\n  INLINE_FILLER += \"\\u200B\";\n}\n/**\n * Checks if the node is a text node which starts with the {@link module:engine/view/filler~INLINE_FILLER inline filler}.\n *\n *\t\tstartsWithFiller( document.createTextNode( INLINE_FILLER ) ); // true\n *\t\tstartsWithFiller( document.createTextNode( INLINE_FILLER + 'foo' ) ); // true\n *\t\tstartsWithFiller( document.createTextNode( 'foo' ) ); // false\n *\t\tstartsWithFiller( document.createElement( 'p' ) ); // false\n *\n * @param {Node} domNode DOM node.\n * @returns {Boolean} True if the text node starts with the {@link module:engine/view/filler~INLINE_FILLER inline filler}.\n */\n\n\nexport function startsWithFiller(domNode) {\n  return isText(domNode) && domNode.data.substr(0, INLINE_FILLER_LENGTH) === INLINE_FILLER;\n}\n/**\n * Checks if the text node contains only the {@link module:engine/view/filler~INLINE_FILLER inline filler}.\n *\n *\t\tisInlineFiller( document.createTextNode( INLINE_FILLER ) ); // true\n *\t\tisInlineFiller( document.createTextNode( INLINE_FILLER + 'foo' ) ); // false\n *\n * @param {Text} domText DOM text node.\n * @returns {Boolean} True if the text node contains only the {@link module:engine/view/filler~INLINE_FILLER inline filler}.\n */\n\nexport function isInlineFiller(domText) {\n  return domText.data.length == INLINE_FILLER_LENGTH && startsWithFiller(domText);\n}\n/**\n * Get string data from the text node, removing an {@link module:engine/view/filler~INLINE_FILLER inline filler} from it,\n * if text node contains it.\n *\n *\t\tgetDataWithoutFiller( document.createTextNode( INLINE_FILLER + 'foo' ) ) == 'foo' // true\n *\t\tgetDataWithoutFiller( document.createTextNode( 'foo' ) ) == 'foo' // true\n *\n * @param {Text} domText DOM text node, possible with inline filler.\n * @returns {String} Data without filler.\n */\n\nexport function getDataWithoutFiller(domText) {\n  if (startsWithFiller(domText)) {\n    return domText.data.slice(INLINE_FILLER_LENGTH);\n  } else {\n    return domText.data;\n  }\n} // Cache block fillers templates to improve performance.\n\nvar templateBlockFillers = new WeakMap();\n/**\n * Checks if the node is an instance of the block filler of the given type.\n *\n *\t\tconst brFillerInstance = BR_FILLER( document );\n *\t\tisBlockFiller( brFillerInstance, BR_FILLER ); // true\n *\n * @param {Node} domNode DOM node to check.\n * @param {Function} blockFiller Block filler creator.\n * @returns {Boolean} True if text node contains only {@link module:engine/view/filler~INLINE_FILLER inline filler}.\n */\n\nexport function isBlockFiller(domNode, blockFiller) {\n  var templateBlockFiller = templateBlockFillers.get(blockFiller);\n\n  if (!templateBlockFiller) {\n    templateBlockFiller = blockFiller(window.document);\n    templateBlockFillers.set(blockFiller, templateBlockFiller);\n  }\n\n  return domNode.isEqualNode(templateBlockFiller);\n}\n/**\n * Assign key observer which move cursor from the end of the inline filler to the beginning of it when\n * the left arrow is pressed, so the filler does not break navigation.\n *\n * @param {module:engine/view/view~View} view View controller instance we should inject quirks handling on.\n */\n\nexport function injectQuirksHandling(view) {\n  view.document.on('keydown', jumpOverInlineFiller);\n} // Move cursor from the end of the inline filler to the beginning of it when, so the filler does not break navigation.\n\nfunction jumpOverInlineFiller(evt, data) {\n  if (data.keyCode == keyCodes.arrowleft) {\n    var domSelection = data.domTarget.ownerDocument.defaultView.getSelection();\n\n    if (domSelection.rangeCount == 1 && domSelection.getRangeAt(0).collapsed) {\n      var domParent = domSelection.getRangeAt(0).startContainer;\n      var domOffset = domSelection.getRangeAt(0).startOffset;\n\n      if (startsWithFiller(domParent) && domOffset <= INLINE_FILLER_LENGTH) {\n        domSelection.collapse(domParent, 0);\n      }\n    }\n  }\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/fastdiff\n */\n\n/**\n * Finds positions of the first and last change in the given string/array and generates a set of changes:\n *\n *\t\tfastDiff( '12a', '12xyza' );\n *\t\t// [ { index: 2, type: 'insert', values: [ 'x', 'y', 'z' ] } ]\n *\n *\t\tfastDiff( '12a', '12aa' );\n *\t\t// [ { index: 3, type: 'insert', values: [ 'a' ] } ]\n *\n *\t\tfastDiff( '12xyza', '12a' );\n *\t\t// [ { index: 2, type: 'delete', howMany: 3 } ]\n *\n *\t\tfastDiff( [ '1', '2', 'a', 'a' ], [ '1', '2', 'a' ] );\n *\t\t// [ { index: 3, type: 'delete', howMany: 1 } ]\n *\n *\t\tfastDiff( [ '1', '2', 'a', 'b', 'c', '3' ], [ '2', 'a', 'b' ] );\n *\t\t// [ { index: 0, type: 'insert', values: [ '2', 'a', 'b' ] }, { index: 3, type: 'delete', howMany: 6 } ]\n *\n * Passed arrays can contain any type of data, however to compare them correctly custom comparator function\n * should be passed as a third parameter:\n *\n *\t\tfastDiff( [ { value: 1 }, { value: 2 } ], [ { value: 1 }, { value: 3 } ], ( a, b ) => {\n *\t\t\treturn a.value === b.value;\n *\t\t} );\n *\t\t// [ { index: 1, type: 'insert', values: [ { value: 3 } ] }, { index: 2, type: 'delete', howMany: 1 } ]\n *\n * The resulted set of changes can be applied to the input in order to transform it into the output, for example:\n *\n *\t\tlet input = '12abc3';\n *\t\tconst output = '2ab';\n *\t\tconst changes = fastDiff( input, output );\n *\n *\t\tchanges.forEach( change => {\n *\t\t\tif ( change.type == 'insert' ) {\n *\t\t\t\tinput = input.substring( 0, change.index ) + change.values.join( '' ) + input.substring( change.index );\n *\t\t\t} else if ( change.type == 'delete' ) {\n *\t\t\t\tinput = input.substring( 0, change.index ) + input.substring( change.index + change.howMany );\n *\t\t\t}\n *\t\t} );\n *\n *\t\t// input equals output now\n *\n * or in case of arrays:\n *\n *\t\tlet input = [ '1', '2', 'a', 'b', 'c', '3' ];\n *\t\tconst output = [ '2', 'a', 'b' ];\n *\t\tconst changes = fastDiff( input, output );\n *\n *\t\tchanges.forEach( change => {\n *\t\t\tif ( change.type == 'insert' ) {\n *\t\t\t\tinput = input.slice( 0, change.index ).concat( change.values, input.slice( change.index ) );\n *\t\t\t} else if ( change.type == 'delete' ) {\n *\t\t\t\tinput = input.slice( 0, change.index ).concat( input.slice( change.index + change.howMany ) );\n *\t\t\t}\n *\t\t} );\n *\n *\t\t// input equals output now\n *\n * By passing `true` as the fourth parameter (`atomicChanges`) the output of this function will become compatible with\n * the {@link module:utils/diff~diff `diff()`} function:\n *\n *\t\tfastDiff( '12a', '12xyza' );\n *\t\t// [ 'equal', 'equal', 'insert', 'insert', 'insert', 'equal' ]\n *\n * The default output format of this function is compatible with the output format of\n * {@link module:utils/difftochanges~diffToChanges `diffToChanges()`}. The `diffToChanges()` input format is, in turn,\n * compatible with the output of {@link module:utils/diff~diff `diff()`}:\n *\n *\t\tconst a = '1234';\n *\t\tconst b = '12xyz34';\n *\n *\t\t// Both calls will return the same results (grouped changes format).\n *\t\tfastDiff( a, b );\n *\t\tdiffToChanges( diff( a, b ) );\n *\n *\t\t// Again, both calls will return the same results (atomic changes format).\n *\t\tfastDiff( a, b, null, true );\n *\t\tdiff( a, b );\n *\n *\n * @param {Array|String} a Input array or string.\n * @param {Array|String} b Input array or string.\n * @param {Function} [cmp] Optional function used to compare array values, by default `===` (strict equal operator) is used.\n * @param {Boolean} [atomicChanges=false] Whether an array of `inset|delete|equal` operations should\n * be returned instead of changes set. This makes this function compatible with {@link module:utils/diff~diff `diff()`}.\n * @returns {Array} Array of changes.\n */\nexport default function fastDiff(a, b, cmp) {\n  var atomicChanges = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n  // Set the comparator function.\n  cmp = cmp || function (a, b) {\n    return a === b;\n  }; // Transform text or any iterable into arrays for easier, consistent processing.\n\n\n  if (!Array.isArray(a)) {\n    a = Array.from(a);\n  }\n\n  if (!Array.isArray(b)) {\n    b = Array.from(b);\n  } // Find first and last change.\n\n\n  var changeIndexes = findChangeBoundaryIndexes(a, b, cmp); // Transform into changes array.\n\n  return atomicChanges ? changeIndexesToAtomicChanges(changeIndexes, b.length) : changeIndexesToChanges(b, changeIndexes);\n} // Finds position of the first and last change in the given arrays. For example:\n//\n//\t\tconst indexes = findChangeBoundaryIndexes( [ '1', '2', '3', '4' ], [ '1', '3', '4', '2', '4' ] );\n//\t\tconsole.log( indexes ); // { firstIndex: 1, lastIndexOld: 3, lastIndexNew: 4 }\n//\n// The above indexes means that in the first array the modified part is `1[23]4` and in the second array it is `1[342]4`.\n// Based on such indexes, array with `insert`/`delete` operations which allows transforming first value into the second one\n// can be generated.\n//\n// @param {Array} arr1\n// @param {Array} arr2\n// @param {Function} cmp Comparator function.\n// @returns {Object}\n// @returns {Number} return.firstIndex Index of the first change in both values (always the same for both).\n// @returns {Number} result.lastIndexOld Index of the last common value in `arr1`.\n// @returns {Number} result.lastIndexNew Index of the last common value in `arr2`.\n\nfunction findChangeBoundaryIndexes(arr1, arr2, cmp) {\n  // Find the first difference between passed values.\n  var firstIndex = findFirstDifferenceIndex(arr1, arr2, cmp); // If arrays are equal return -1 indexes object.\n\n  if (firstIndex === -1) {\n    return {\n      firstIndex: -1,\n      lastIndexOld: -1,\n      lastIndexNew: -1\n    };\n  } // Remove the common part of each value and reverse them to make it simpler to find the last difference between them.\n\n\n  var oldArrayReversed = cutAndReverse(arr1, firstIndex);\n  var newArrayReversed = cutAndReverse(arr2, firstIndex); // Find the first difference between reversed values.\n  // It should be treated as \"how many elements from the end the last difference occurred\".\n  //\n  // For example:\n  //\n  // \t\t\t\tinitial\t->\tafter cut\t-> reversed:\n  // oldValue:\t'321ba'\t->\t'21ba'\t\t-> 'ab12'\n  // newValue:\t'31xba'\t->\t'1xba'\t\t-> 'abx1'\n  // lastIndex:\t\t\t\t\t\t\t-> 2\n  //\n  // So the last change occurred two characters from the end of the arrays.\n\n  var lastIndex = findFirstDifferenceIndex(oldArrayReversed, newArrayReversed, cmp); // Use `lastIndex` to calculate proper offset, starting from the beginning (`lastIndex` kind of starts from the end).\n\n  var lastIndexOld = arr1.length - lastIndex;\n  var lastIndexNew = arr2.length - lastIndex;\n  return {\n    firstIndex: firstIndex,\n    lastIndexOld: lastIndexOld,\n    lastIndexNew: lastIndexNew\n  };\n} // Returns a first index on which given arrays differ. If both arrays are the same, -1 is returned.\n//\n// @param {Array} arr1\n// @param {Array} arr2\n// @param {Function} cmp Comparator function.\n// @returns {Number}\n\n\nfunction findFirstDifferenceIndex(arr1, arr2, cmp) {\n  for (var i = 0; i < Math.max(arr1.length, arr2.length); i++) {\n    if (arr1[i] === undefined || arr2[i] === undefined || !cmp(arr1[i], arr2[i])) {\n      return i;\n    }\n  }\n\n  return -1; // Return -1 if arrays are equal.\n} // Returns a copy of the given array with `howMany` elements removed starting from the beginning and in reversed order.\n//\n// @param {Array} arr Array to be processed.\n// @param {Number} howMany How many elements from array beginning to remove.\n// @returns {Array} Shortened and reversed array.\n\n\nfunction cutAndReverse(arr, howMany) {\n  return arr.slice(howMany).reverse();\n} // Generates changes array based on change indexes from `findChangeBoundaryIndexes` function. This function will\n// generate array with 0 (no changes), 1 (deletion or insertion) or 2 records (insertion and deletion).\n//\n// @param {Array} newArray New array for which change indexes were calculated.\n// @param {Object} changeIndexes Change indexes object from `findChangeBoundaryIndexes` function.\n// @returns {Array.<Object>} Array of changes compatible with {@link module:utils/difftochanges~diffToChanges} format.\n\n\nfunction changeIndexesToChanges(newArray, changeIndexes) {\n  var result = [];\n  var firstIndex = changeIndexes.firstIndex,\n      lastIndexOld = changeIndexes.lastIndexOld,\n      lastIndexNew = changeIndexes.lastIndexNew; // Order operations as 'insert', 'delete' array to keep compatibility with {@link module:utils/difftochanges~diffToChanges}\n  // in most cases. However, 'diffToChanges' does not stick to any order so in some cases\n  // (for example replacing '12345' with 'abcd') it will generate 'delete', 'insert' order.\n\n  if (lastIndexNew - firstIndex > 0) {\n    result.push({\n      index: firstIndex,\n      type: 'insert',\n      values: newArray.slice(firstIndex, lastIndexNew)\n    });\n  }\n\n  if (lastIndexOld - firstIndex > 0) {\n    result.push({\n      index: firstIndex + (lastIndexNew - firstIndex),\n      // Increase index of what was inserted.\n      type: 'delete',\n      howMany: lastIndexOld - firstIndex\n    });\n  }\n\n  return result;\n} // Generates array with set `equal|insert|delete` operations based on change indexes from `findChangeBoundaryIndexes` function.\n//\n// @param {Object} changeIndexes Change indexes object from `findChangeBoundaryIndexes` function.\n// @param {Number} newLength Length of the new array on which `findChangeBoundaryIndexes` calculated change indexes.\n// @returns {Array.<String>} Array of changes compatible with {@link module:utils/diff~diff} format.\n\n\nfunction changeIndexesToAtomicChanges(changeIndexes, newLength) {\n  var firstIndex = changeIndexes.firstIndex,\n      lastIndexOld = changeIndexes.lastIndexOld,\n      lastIndexNew = changeIndexes.lastIndexNew; // No changes.\n\n  if (firstIndex === -1) {\n    return Array(newLength).fill('equal');\n  }\n\n  var result = [];\n\n  if (firstIndex > 0) {\n    result = result.concat(Array(firstIndex).fill('equal'));\n  }\n\n  if (lastIndexNew - firstIndex > 0) {\n    result = result.concat(Array(lastIndexNew - firstIndex).fill('insert'));\n  }\n\n  if (lastIndexOld - firstIndex > 0) {\n    result = result.concat(Array(lastIndexOld - firstIndex).fill('delete'));\n  }\n\n  if (lastIndexNew < newLength) {\n    result = result.concat(Array(newLength - lastIndexNew).fill('equal'));\n  }\n\n  return result;\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/diff\n */\nimport fastDiff from '../src/fastdiff'; // The following code is based on the \"O(NP) Sequence Comparison Algorithm\"\n// by Sun Wu, Udi Manber, Gene Myers, Webb Miller.\n\n/**\n * Calculates the difference between two arrays or strings producing an array containing a list of changes\n * necessary to transform input into output.\n *\n *\t\tdiff( 'aba', 'acca' ); // [ 'equal', 'insert', 'insert', 'delete', 'equal' ]\n *\n * This function is based on the \"O(NP) Sequence Comparison Algorithm\" by Sun Wu, Udi Manber, Gene Myers, Webb Miller.\n * Unfortunately, while it gives the most precise results, its to complex for longer strings/arrow (above 200 items).\n * Therefore, `diff()` automatically switches to {@link module:utils/fastdiff~fastDiff `fastDiff()`} when detecting\n * such a scenario. The return formats of both functions are identical.\n *\n * @param {Array|String} a Input array or string.\n * @param {Array|String} b Output array or string.\n * @param {Function} [cmp] Optional function used to compare array values, by default === is used.\n * @returns {Array} Array of changes.\n */\n\nexport default function diff(a, b, cmp) {\n  // Set the comparator function.\n  cmp = cmp || function (a, b) {\n    return a === b;\n  };\n\n  var aLength = a.length;\n  var bLength = b.length; // Perform `fastDiff` for longer strings/arrays (see #269).\n\n  if (aLength > 200 || bLength > 200 || aLength + bLength > 300) {\n    return diff.fastDiff(a, b, cmp, true);\n  } // Temporary action type statics.\n\n\n  var _insert, _delete; // Swapped the arrays to use the shorter one as the first one.\n\n\n  if (bLength < aLength) {\n    var tmp = a;\n    a = b;\n    b = tmp; // We swap the action types as well.\n\n    _insert = 'delete';\n    _delete = 'insert';\n  } else {\n    _insert = 'insert';\n    _delete = 'delete';\n  }\n\n  var m = a.length;\n  var n = b.length;\n  var delta = n - m; // Edit scripts, for each diagonal.\n\n  var es = {}; // Furthest points, the furthest y we can get on each diagonal.\n\n  var fp = {};\n\n  function snake(k) {\n    // We use -1 as an alternative below to handle initial values ( instead of filling the fp with -1 first ).\n    // Furthest points (y) on the diagonal below k.\n    var y1 = (fp[k - 1] !== undefined ? fp[k - 1] : -1) + 1; // Furthest points (y) on the diagonal above k.\n\n    var y2 = fp[k + 1] !== undefined ? fp[k + 1] : -1; // The way we should go to get further.\n\n    var dir = y1 > y2 ? -1 : 1; // Clone previous changes array (if any).\n\n    if (es[k + dir]) {\n      es[k] = es[k + dir].slice(0);\n    } // Create changes array.\n\n\n    if (!es[k]) {\n      es[k] = [];\n    } // Push the action.\n\n\n    es[k].push(y1 > y2 ? _insert : _delete); // Set the beginning coordinates.\n\n    var y = Math.max(y1, y2);\n    var x = y - k; // Traverse the diagonal as long as the values match.\n\n    while (x < m && y < n && cmp(a[x], b[y])) {\n      x++;\n      y++; // Push no change action.\n\n      es[k].push('equal');\n    }\n\n    return y;\n  }\n\n  var p = 0;\n  var k; // Traverse the graph until we reach the end of the longer string.\n\n  do {\n    // Updates furthest points and edit scripts for diagonals below delta.\n    for (k = -p; k < delta; k++) {\n      fp[k] = snake(k);\n    } // Updates furthest points and edit scripts for diagonals above delta.\n\n\n    for (k = delta + p; k > delta; k--) {\n      fp[k] = snake(k);\n    } // Updates furthest point and edit script for the delta diagonal.\n    // note that the delta diagonal is the one which goes through the sink (m, n).\n\n\n    fp[delta] = snake(delta);\n    p++;\n  } while (fp[delta] !== n); // Return the final list of edit changes.\n  // We remove the first item that represents the action for the injected nulls.\n\n\n  return es[delta].slice(1);\n} // Store the API in static property to easily overwrite it in tests.\n// Too bad dependency injection does not work in Webpack + ES 6 (const) + Babel.\n\ndiff.fastDiff = fastDiff;","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/insertat\n */\n\n/**\n * Inserts node to the parent at given index.\n *\n * @param {Element} parentElement Parent element.\n * @param {Number} index Insertions index.\n * @param {Node} nodeToInsert Node to insert.\n */\nexport default function insertAt(parentElement, index, nodeToInsert) {\n  parentElement.insertBefore(nodeToInsert, parentElement.childNodes[index] || null);\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/remove\n */\n\n/**\n * Removes given node from parent.\n *\n * @param {Node} node Node to remove.\n */\nexport default function remove(node) {\n  var parent = node.parentNode;\n\n  if (parent) {\n    parent.removeChild(node);\n  }\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/isnode\n */\n\n/**\n * Checks if the object is a native DOM Node.\n *\n * @param {*} obj\n * @returns {Boolean}\n */\nexport default function isNode(obj) {\n  if (obj) {\n    if (obj.defaultView) {\n      return obj instanceof obj.defaultView.Document;\n    } else if (obj.ownerDocument && obj.ownerDocument.defaultView) {\n      return obj instanceof obj.ownerDocument.defaultView.Node;\n    }\n  }\n\n  return false;\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* globals Node */\n\n/**\n * @module engine/view/renderer\n */\nimport ViewText from './text';\nimport ViewPosition from './position';\nimport { INLINE_FILLER, INLINE_FILLER_LENGTH, startsWithFiller, isInlineFiller, isBlockFiller } from './filler';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport diff from '@ckeditor/ckeditor5-utils/src/diff';\nimport insertAt from '@ckeditor/ckeditor5-utils/src/dom/insertat';\nimport remove from '@ckeditor/ckeditor5-utils/src/dom/remove';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport isText from '@ckeditor/ckeditor5-utils/src/dom/istext';\nimport isNode from '@ckeditor/ckeditor5-utils/src/dom/isnode';\nimport fastDiff from '@ckeditor/ckeditor5-utils/src/fastdiff';\nimport env from '@ckeditor/ckeditor5-utils/src/env';\n/**\n * Renderer is responsible for updating the DOM structure and the DOM selection based on\n * the {@link module:engine/view/renderer~Renderer#markToSync information about updated view nodes}.\n * In other words, it renders the view to the DOM.\n *\n * Its main responsibility is to make only the necessary, minimal changes to the DOM. However, unlike in many\n * virtual DOM implementations, the primary reason for doing minimal changes is not the performance but ensuring\n * that native editing features such as text composition, autocompletion, spell checking, selection's x-index are\n * affected as little as possible.\n *\n * Renderer uses {@link module:engine/view/domconverter~DomConverter} to transform view nodes and positions\n * to and from the DOM.\n */\n\nvar Renderer =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a renderer instance.\n   *\n   * @param {module:engine/view/domconverter~DomConverter} domConverter Converter instance.\n   * @param {module:engine/view/documentselection~DocumentSelection} selection View selection.\n   */\n  function Renderer(domConverter, selection) {\n    _classCallCheck(this, Renderer);\n\n    /**\n     * Set of DOM Documents instances.\n     *\n     * @readonly\n     * @member {Set.<Document>}\n     */\n    this.domDocuments = new Set();\n    /**\n     * Converter instance.\n     *\n     * @readonly\n     * @member {module:engine/view/domconverter~DomConverter}\n     */\n\n    this.domConverter = domConverter;\n    /**\n     * Set of nodes which attributes changed and may need to be rendered.\n     *\n     * @readonly\n     * @member {Set.<module:engine/view/node~Node>}\n     */\n\n    this.markedAttributes = new Set();\n    /**\n     * Set of elements which child lists changed and may need to be rendered.\n     *\n     * @readonly\n     * @member {Set.<module:engine/view/node~Node>}\n     */\n\n    this.markedChildren = new Set();\n    /**\n     * Set of text nodes which text data changed and may need to be rendered.\n     *\n     * @readonly\n     * @member {Set.<module:engine/view/node~Node>}\n     */\n\n    this.markedTexts = new Set();\n    /**\n     * View selection. Renderer updates DOM selection based on the view selection.\n     *\n     * @readonly\n     * @member {module:engine/view/documentselection~DocumentSelection}\n     */\n\n    this.selection = selection;\n    /**\n     * Indicates if the view document is focused and selection can be rendered. Selection will not be rendered if\n     * this is set to `false`.\n     *\n     * @member {Boolean}\n     */\n\n    this.isFocused = false;\n    /**\n     * The text node in which the inline filler was rendered.\n     *\n     * @private\n     * @member {Text}\n     */\n\n    this._inlineFiller = null;\n    /**\n     * DOM element containing fake selection.\n     *\n     * @private\n     * @type {null|HTMLElement}\n     */\n\n    this._fakeSelectionContainer = null;\n  }\n  /**\n   * Marks a view node to be updated in the DOM by {@link #render `render()`}.\n   *\n   * Note that only view nodes whose parents have corresponding DOM elements need to be marked to be synchronized.\n   *\n   * @see #markedAttributes\n   * @see #markedChildren\n   * @see #markedTexts\n   *\n   * @param {module:engine/view/document~ChangeType} type Type of the change.\n   * @param {module:engine/view/node~Node} node Node to be marked.\n   */\n\n\n  _createClass(Renderer, [{\n    key: \"markToSync\",\n    value: function markToSync(type, node) {\n      if (type === 'text') {\n        if (this.domConverter.mapViewToDom(node.parent)) {\n          this.markedTexts.add(node);\n        }\n      } else {\n        // If the node has no DOM element it is not rendered yet,\n        // its children/attributes do not need to be marked to be sync.\n        if (!this.domConverter.mapViewToDom(node)) {\n          return;\n        }\n\n        if (type === 'attributes') {\n          this.markedAttributes.add(node);\n        } else if (type === 'children') {\n          this.markedChildren.add(node);\n        } else {\n          /**\n           * Unknown type passed to Renderer.markToSync.\n           *\n           * @error renderer-unknown-type\n           */\n          throw new CKEditorError('view-renderer-unknown-type: Unknown type passed to Renderer.markToSync.', this);\n        }\n      }\n    }\n    /**\n     * Renders all buffered changes ({@link #markedAttributes}, {@link #markedChildren} and {@link #markedTexts}) and\n     * the current view selection (if needed) to the DOM by applying a minimal set of changes to it.\n     *\n     * Renderer tries not to break the text composition (e.g. IME) and x-index of the selection,\n     * so it does as little as it is needed to update the DOM.\n     *\n     * Renderer also handles {@link module:engine/view/filler fillers}. Especially, it checks if the inline filler is needed\n     * at the selection position and adds or removes it. To prevent breaking text composition inline filler will not be\n     * removed as long as the selection is in the text node which needed it at first.\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var inlineFillerPosition; // Refresh mappings.\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.markedChildren[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var element = _step.value;\n\n          this._updateChildrenMappings(element);\n        } // There was inline filler rendered in the DOM but it's not\n        // at the selection position any more, so we can remove it\n        // (cause even if it's needed, it must be placed in another location).\n\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      if (this._inlineFiller && !this._isSelectionInInlineFiller()) {\n        this._removeInlineFiller();\n      } // If we've got the filler, let's try to guess its position in the view.\n\n\n      if (this._inlineFiller) {\n        inlineFillerPosition = this._getInlineFillerPosition();\n      } // Otherwise, if it's needed, create it at the selection position.\n      else if (this._needsInlineFillerAtSelection()) {\n          inlineFillerPosition = this.selection.getFirstPosition(); // Do not use `markToSync` so it will be added even if the parent is already added.\n\n          this.markedChildren.add(inlineFillerPosition.parent);\n        }\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.markedAttributes[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var _element = _step2.value;\n\n          this._updateAttrs(_element);\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.markedChildren[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var _element2 = _step3.value;\n\n          this._updateChildren(_element2, {\n            inlineFillerPosition: inlineFillerPosition\n          });\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n            _iterator3[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = this.markedTexts[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var node = _step4.value;\n\n          if (!this.markedChildren.has(node.parent) && this.domConverter.mapViewToDom(node.parent)) {\n            this._updateText(node, {\n              inlineFillerPosition: inlineFillerPosition\n            });\n          }\n        } // Check whether the inline filler is required and where it really is in the DOM.\n        // At this point in most cases it will be in the DOM, but there are exceptions.\n        // For example, if the inline filler was deep in the created DOM structure, it will not be created.\n        // Similarly, if it was removed at the beginning of this function and then neither text nor children were updated,\n        // it will not be present.\n        // Fix those and similar scenarios.\n\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4[\"return\"] != null) {\n            _iterator4[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      if (inlineFillerPosition) {\n        var fillerDomPosition = this.domConverter.viewPositionToDom(inlineFillerPosition);\n        var domDocument = fillerDomPosition.parent.ownerDocument;\n\n        if (!startsWithFiller(fillerDomPosition.parent)) {\n          // Filler has not been created at filler position. Create it now.\n          this._inlineFiller = addInlineFiller(domDocument, fillerDomPosition.parent, fillerDomPosition.offset);\n        } else {\n          // Filler has been found, save it.\n          this._inlineFiller = fillerDomPosition.parent;\n        }\n      } else {\n        // There is no filler needed.\n        this._inlineFiller = null;\n      }\n\n      this._updateSelection();\n\n      this._updateFocus();\n\n      this.markedTexts.clear();\n      this.markedAttributes.clear();\n      this.markedChildren.clear();\n    }\n    /**\n     * Updates mappings of view element's children.\n     *\n     * Children that were replaced in the view structure by similar elements (same tag name) are treated as 'replaced'.\n     * This means that their mappings can be updated so the new view elements are mapped to the existing DOM elements.\n     * Thanks to that these elements do not need to be re-rendered completely.\n     *\n     * @private\n     * @param {module:engine/view/node~Node} viewElement The view element whose children mappings will be updated.\n     */\n\n  }, {\n    key: \"_updateChildrenMappings\",\n    value: function _updateChildrenMappings(viewElement) {\n      var domElement = this.domConverter.mapViewToDom(viewElement);\n\n      if (!domElement) {\n        // If there is no `domElement` it means that it was already removed from DOM and there is no need to process it.\n        return;\n      }\n\n      var actualDomChildren = this.domConverter.mapViewToDom(viewElement).childNodes;\n      var expectedDomChildren = Array.from(this.domConverter.viewChildrenToDom(viewElement, domElement.ownerDocument, {\n        withChildren: false\n      }));\n\n      var diff = this._diffNodeLists(actualDomChildren, expectedDomChildren);\n\n      var actions = this._findReplaceActions(diff, actualDomChildren, expectedDomChildren);\n\n      if (actions.indexOf('replace') !== -1) {\n        var counter = {\n          equal: 0,\n          insert: 0,\n          \"delete\": 0\n        };\n        var _iteratorNormalCompletion5 = true;\n        var _didIteratorError5 = false;\n        var _iteratorError5 = undefined;\n\n        try {\n          for (var _iterator5 = actions[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n            var action = _step5.value;\n\n            if (action === 'replace') {\n              var insertIndex = counter.equal + counter.insert;\n              var deleteIndex = counter.equal + counter[\"delete\"];\n              var viewChild = viewElement.getChild(insertIndex); // The 'uiElement' is a special one and its children are not stored in a view (#799),\n              // so we cannot use it with replacing flow (since it uses view children during rendering\n              // which will always result in rendering empty element).\n\n              if (viewChild && !viewChild.is('uiElement')) {\n                this._updateElementMappings(viewChild, actualDomChildren[deleteIndex]);\n              }\n\n              remove(expectedDomChildren[insertIndex]);\n              counter.equal++;\n            } else {\n              counter[action]++;\n            }\n          }\n        } catch (err) {\n          _didIteratorError5 = true;\n          _iteratorError5 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion5 && _iterator5[\"return\"] != null) {\n              _iterator5[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError5) {\n              throw _iteratorError5;\n            }\n          }\n        }\n      }\n    }\n    /**\n     * Updates mappings of a given view element.\n     *\n     * @private\n     * @param {module:engine/view/node~Node} viewElement The view element whose mappings will be updated.\n     * @param {Node} domElement The DOM element representing the given view element.\n     */\n\n  }, {\n    key: \"_updateElementMappings\",\n    value: function _updateElementMappings(viewElement, domElement) {\n      // Remap 'DomConverter' bindings.\n      this.domConverter.unbindDomElement(domElement);\n      this.domConverter.bindElements(domElement, viewElement); // View element may have children which needs to be updated, but are not marked, mark them to update.\n\n      this.markedChildren.add(viewElement); // Because we replace new view element mapping with the existing one, the corresponding DOM element\n      // will not be rerendered. The new view element may have different attributes than the previous one.\n      // Since its corresponding DOM element will not be rerendered, new attributes will not be added\n      // to the DOM, so we need to mark it here to make sure its attributes gets updated. See #1427 for more\n      // detailed case study.\n      // Also there are cases where replaced element is removed from the view structure and then has\n      // its attributes changed or removed. In such cases the element will not be present in `markedAttributes`\n      // and also may be the same (`element.isSimilar()`) as the reused element not having its attributes updated.\n      // To prevent such situations we always mark reused element to have its attributes rerenderd (#1560).\n\n      this.markedAttributes.add(viewElement);\n    }\n    /**\n     * Gets the position of the inline filler based on the current selection.\n     * Here, we assume that we know that the filler is needed and\n     * {@link #_isSelectionInInlineFiller is at the selection position}, and, since it is needed,\n     * it is somewhere at the selection position.\n     *\n     * Note: The filler position cannot be restored based on the filler's DOM text node, because\n     * when this method is called (before rendering), the bindings will often be broken. View-to-DOM\n     * bindings are only dependable after rendering.\n     *\n     * @private\n     * @returns {module:engine/view/position~Position}\n     */\n\n  }, {\n    key: \"_getInlineFillerPosition\",\n    value: function _getInlineFillerPosition() {\n      var firstPos = this.selection.getFirstPosition();\n\n      if (firstPos.parent.is('text')) {\n        return ViewPosition._createBefore(this.selection.getFirstPosition().parent);\n      } else {\n        return firstPos;\n      }\n    }\n    /**\n     * Returns `true` if the selection has not left the inline filler's text node.\n     * If it is `true`, it means that the filler had been added for a reason and the selection did not\n     * leave the filler's text node. For example, the user can be in the middle of a composition so it should not be touched.\n     *\n     * @private\n     * @returns {Boolean} `true` if the inline filler and selection are in the same place.\n     */\n\n  }, {\n    key: \"_isSelectionInInlineFiller\",\n    value: function _isSelectionInInlineFiller() {\n      if (this.selection.rangeCount != 1 || !this.selection.isCollapsed) {\n        return false;\n      } // Note, we can't check if selection's position equals position of the\n      // this._inlineFiller node, because of #663. We may not be able to calculate\n      // the filler's position in the view at this stage.\n      // Instead, we check it the other way – whether selection is anchored in\n      // that text node or next to it.\n      // Possible options are:\n      // \"FILLER{}\"\n      // \"FILLERadded-text{}\"\n\n\n      var selectionPosition = this.selection.getFirstPosition();\n      var position = this.domConverter.viewPositionToDom(selectionPosition);\n\n      if (position && isText(position.parent) && startsWithFiller(position.parent)) {\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Removes the inline filler.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_removeInlineFiller\",\n    value: function _removeInlineFiller() {\n      var domFillerNode = this._inlineFiller; // Something weird happened and the stored node doesn't contain the filler's text.\n\n      if (!startsWithFiller(domFillerNode)) {\n        /**\n         * The inline filler node was lost. Most likely, something overwrote the filler text node\n         * in the DOM.\n         *\n         * @error view-renderer-filler-was-lost\n         */\n        throw new CKEditorError('view-renderer-filler-was-lost: The inline filler node was lost.', this);\n      }\n\n      if (isInlineFiller(domFillerNode)) {\n        domFillerNode.parentNode.removeChild(domFillerNode);\n      } else {\n        domFillerNode.data = domFillerNode.data.substr(INLINE_FILLER_LENGTH);\n      }\n\n      this._inlineFiller = null;\n    }\n    /**\n     * Checks if the inline {@link module:engine/view/filler filler} should be added.\n     *\n     * @private\n     * @returns {Boolean} `true` if the inline filler should be added.\n     */\n\n  }, {\n    key: \"_needsInlineFillerAtSelection\",\n    value: function _needsInlineFillerAtSelection() {\n      if (this.selection.rangeCount != 1 || !this.selection.isCollapsed) {\n        return false;\n      }\n\n      var selectionPosition = this.selection.getFirstPosition();\n      var selectionParent = selectionPosition.parent;\n      var selectionOffset = selectionPosition.offset; // If there is no DOM root we do not care about fillers.\n\n      if (!this.domConverter.mapViewToDom(selectionParent.root)) {\n        return false;\n      }\n\n      if (!selectionParent.is('element')) {\n        return false;\n      } // Prevent adding inline filler inside elements with contenteditable=false.\n      // https://github.com/ckeditor/ckeditor5-engine/issues/1170\n\n\n      if (!isEditable(selectionParent)) {\n        return false;\n      } // We have block filler, we do not need inline one.\n\n\n      if (selectionOffset === selectionParent.getFillerOffset()) {\n        return false;\n      }\n\n      var nodeBefore = selectionPosition.nodeBefore;\n      var nodeAfter = selectionPosition.nodeAfter;\n\n      if (nodeBefore instanceof ViewText || nodeAfter instanceof ViewText) {\n        return false;\n      }\n\n      return true;\n    }\n    /**\n     * Checks if text needs to be updated and possibly updates it.\n     *\n     * @private\n     * @param {module:engine/view/text~Text} viewText View text to update.\n     * @param {Object} options\n     * @param {module:engine/view/position~Position} options.inlineFillerPosition The position where the inline\n     * filler should be rendered.\n     */\n\n  }, {\n    key: \"_updateText\",\n    value: function _updateText(viewText, options) {\n      var domText = this.domConverter.findCorrespondingDomText(viewText);\n      var newDomText = this.domConverter.viewToDom(viewText, domText.ownerDocument);\n      var actualText = domText.data;\n      var expectedText = newDomText.data;\n      var filler = options.inlineFillerPosition;\n\n      if (filler && filler.parent == viewText.parent && filler.offset == viewText.index) {\n        expectedText = INLINE_FILLER + expectedText;\n      }\n\n      if (actualText != expectedText) {\n        var actions = fastDiff(actualText, expectedText);\n        var _iteratorNormalCompletion6 = true;\n        var _didIteratorError6 = false;\n        var _iteratorError6 = undefined;\n\n        try {\n          for (var _iterator6 = actions[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n            var action = _step6.value;\n\n            if (action.type === 'insert') {\n              domText.insertData(action.index, action.values.join(''));\n            } else {\n              // 'delete'\n              domText.deleteData(action.index, action.howMany);\n            }\n          }\n        } catch (err) {\n          _didIteratorError6 = true;\n          _iteratorError6 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion6 && _iterator6[\"return\"] != null) {\n              _iterator6[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError6) {\n              throw _iteratorError6;\n            }\n          }\n        }\n      }\n    }\n    /**\n     * Checks if attribute list needs to be updated and possibly updates it.\n     *\n     * @private\n     * @param {module:engine/view/element~Element} viewElement The view element to update.\n     */\n\n  }, {\n    key: \"_updateAttrs\",\n    value: function _updateAttrs(viewElement) {\n      var domElement = this.domConverter.mapViewToDom(viewElement);\n\n      if (!domElement) {\n        // If there is no `domElement` it means that 'viewElement' is outdated as its mapping was updated\n        // in 'this._updateChildrenMappings()'. There is no need to process it as new view element which\n        // replaced old 'viewElement' mapping was also added to 'this.markedAttributes'\n        // in 'this._updateChildrenMappings()' so it will be processed separately.\n        return;\n      }\n\n      var domAttrKeys = Array.from(domElement.attributes).map(function (attr) {\n        return attr.name;\n      });\n      var viewAttrKeys = viewElement.getAttributeKeys(); // Add or overwrite attributes.\n\n      var _iteratorNormalCompletion7 = true;\n      var _didIteratorError7 = false;\n      var _iteratorError7 = undefined;\n\n      try {\n        for (var _iterator7 = viewAttrKeys[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n          var key = _step7.value;\n          domElement.setAttribute(key, viewElement.getAttribute(key));\n        } // Remove from DOM attributes which do not exists in the view.\n\n      } catch (err) {\n        _didIteratorError7 = true;\n        _iteratorError7 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion7 && _iterator7[\"return\"] != null) {\n            _iterator7[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError7) {\n            throw _iteratorError7;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion8 = true;\n      var _didIteratorError8 = false;\n      var _iteratorError8 = undefined;\n\n      try {\n        for (var _iterator8 = domAttrKeys[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n          var _key = _step8.value;\n\n          if (!viewElement.hasAttribute(_key)) {\n            domElement.removeAttribute(_key);\n          }\n        }\n      } catch (err) {\n        _didIteratorError8 = true;\n        _iteratorError8 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion8 && _iterator8[\"return\"] != null) {\n            _iterator8[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError8) {\n            throw _iteratorError8;\n          }\n        }\n      }\n    }\n    /**\n     * Checks if elements child list needs to be updated and possibly updates it.\n     *\n     * @private\n     * @param {module:engine/view/element~Element} viewElement View element to update.\n     * @param {Object} options\n     * @param {module:engine/view/position~Position} options.inlineFillerPosition The position where the inline\n     * filler should be rendered.\n     */\n\n  }, {\n    key: \"_updateChildren\",\n    value: function _updateChildren(viewElement, options) {\n      var domElement = this.domConverter.mapViewToDom(viewElement);\n\n      if (!domElement) {\n        // If there is no `domElement` it means that it was already removed from DOM.\n        // There is no need to process it. It will be processed when re-inserted.\n        return;\n      }\n\n      var inlineFillerPosition = options.inlineFillerPosition;\n      var actualDomChildren = this.domConverter.mapViewToDom(viewElement).childNodes;\n      var expectedDomChildren = Array.from(this.domConverter.viewChildrenToDom(viewElement, domElement.ownerDocument, {\n        bind: true,\n        inlineFillerPosition: inlineFillerPosition\n      })); // Inline filler element has to be created as it is present in the DOM, but not in the view. It is required\n      // during diffing so text nodes could be compared correctly and also during rendering to maintain\n      // proper order and indexes while updating the DOM.\n\n      if (inlineFillerPosition && inlineFillerPosition.parent === viewElement) {\n        addInlineFiller(domElement.ownerDocument, expectedDomChildren, inlineFillerPosition.offset);\n      }\n\n      var diff = this._diffNodeLists(actualDomChildren, expectedDomChildren);\n\n      var i = 0;\n      var nodesToUnbind = new Set();\n      var _iteratorNormalCompletion9 = true;\n      var _didIteratorError9 = false;\n      var _iteratorError9 = undefined;\n\n      try {\n        for (var _iterator9 = diff[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n          var action = _step9.value;\n\n          if (action === 'insert') {\n            insertAt(domElement, i, expectedDomChildren[i]);\n            i++;\n          } else if (action === 'delete') {\n            nodesToUnbind.add(actualDomChildren[i]);\n            remove(actualDomChildren[i]);\n          } else {\n            // 'equal'\n            // Force updating text nodes inside elements which did not change and do not need to be re-rendered (#1125).\n            this._markDescendantTextToSync(this.domConverter.domToView(expectedDomChildren[i]));\n\n            i++;\n          }\n        } // Unbind removed nodes. When node does not have a parent it means that it was removed from DOM tree during\n        // comparision with the expected DOM. We don't need to check child nodes, because if child node was reinserted,\n        // it was moved to DOM tree out of the removed node.\n\n      } catch (err) {\n        _didIteratorError9 = true;\n        _iteratorError9 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion9 && _iterator9[\"return\"] != null) {\n            _iterator9[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError9) {\n            throw _iteratorError9;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion10 = true;\n      var _didIteratorError10 = false;\n      var _iteratorError10 = undefined;\n\n      try {\n        for (var _iterator10 = nodesToUnbind[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n          var node = _step10.value;\n\n          if (!node.parentNode) {\n            this.domConverter.unbindDomElement(node);\n          }\n        }\n      } catch (err) {\n        _didIteratorError10 = true;\n        _iteratorError10 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion10 && _iterator10[\"return\"] != null) {\n            _iterator10[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError10) {\n            throw _iteratorError10;\n          }\n        }\n      }\n    }\n    /**\n     * Shorthand for diffing two arrays or node lists of DOM nodes.\n     *\n     * @private\n     * @param {Array.<Node>|NodeList} actualDomChildren Actual DOM children\n     * @param {Array.<Node>|NodeList} expectedDomChildren Expected DOM children.\n     * @returns {Array.<String>} The list of actions based on the {@link module:utils/diff~diff} function.\n     */\n\n  }, {\n    key: \"_diffNodeLists\",\n    value: function _diffNodeLists(actualDomChildren, expectedDomChildren) {\n      actualDomChildren = filterOutFakeSelectionContainer(actualDomChildren, this._fakeSelectionContainer);\n      return diff(actualDomChildren, expectedDomChildren, sameNodes.bind(null, this.domConverter.blockFiller));\n    }\n    /**\n     * Finds DOM nodes that were replaced with the similar nodes (same tag name) in the view. All nodes are compared\n     * within one `insert`/`delete` action group, for example:\n     *\n     * \t\tActual DOM:\t\t<p><b>Foo</b>Bar<i>Baz</i><b>Bax</b></p>\n     * \t\tExpected DOM:\t<p>Bar<b>123</b><i>Baz</i><b>456</b></p>\n     * \t\tInput actions:\t[ insert, insert, delete, delete, equal, insert, delete ]\n     * \t\tOutput actions:\t[ insert, replace, delete, equal, replace ]\n     *\n     * @private\n     * @param {Array.<String>} actions Actions array which is a result of the {@link module:utils/diff~diff} function.\n     * @param {Array.<Node>|NodeList} actualDom Actual DOM children\n     * @param {Array.<Node>} expectedDom Expected DOM children.\n     * @returns {Array.<String>} Actions array modified with the `replace` actions.\n     */\n\n  }, {\n    key: \"_findReplaceActions\",\n    value: function _findReplaceActions(actions, actualDom, expectedDom) {\n      // If there is no both 'insert' and 'delete' actions, no need to check for replaced elements.\n      if (actions.indexOf('insert') === -1 || actions.indexOf('delete') === -1) {\n        return actions;\n      }\n\n      var newActions = [];\n      var actualSlice = [];\n      var expectedSlice = [];\n      var counter = {\n        equal: 0,\n        insert: 0,\n        \"delete\": 0\n      };\n      var _iteratorNormalCompletion11 = true;\n      var _didIteratorError11 = false;\n      var _iteratorError11 = undefined;\n\n      try {\n        for (var _iterator11 = actions[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n          var action = _step11.value;\n\n          if (action === 'insert') {\n            expectedSlice.push(expectedDom[counter.equal + counter.insert]);\n          } else if (action === 'delete') {\n            actualSlice.push(actualDom[counter.equal + counter[\"delete\"]]);\n          } else {\n            // equal\n            newActions = newActions.concat(diff(actualSlice, expectedSlice, areSimilar).map(function (x) {\n              return x === 'equal' ? 'replace' : x;\n            }));\n            newActions.push('equal'); // Reset stored elements on 'equal'.\n\n            actualSlice = [];\n            expectedSlice = [];\n          }\n\n          counter[action]++;\n        }\n      } catch (err) {\n        _didIteratorError11 = true;\n        _iteratorError11 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion11 && _iterator11[\"return\"] != null) {\n            _iterator11[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError11) {\n            throw _iteratorError11;\n          }\n        }\n      }\n\n      return newActions.concat(diff(actualSlice, expectedSlice, areSimilar).map(function (x) {\n        return x === 'equal' ? 'replace' : x;\n      }));\n    }\n    /**\n     * Marks text nodes to be synchronized.\n     *\n     * If a text node is passed, it will be marked. If an element is passed, all descendant text nodes inside it will be marked.\n     *\n     * @private\n     * @param {module:engine/view/node~Node} viewNode View node to sync.\n     */\n\n  }, {\n    key: \"_markDescendantTextToSync\",\n    value: function _markDescendantTextToSync(viewNode) {\n      if (!viewNode) {\n        return;\n      }\n\n      if (viewNode.is('text')) {\n        this.markedTexts.add(viewNode);\n      } else if (viewNode.is('element')) {\n        var _iteratorNormalCompletion12 = true;\n        var _didIteratorError12 = false;\n        var _iteratorError12 = undefined;\n\n        try {\n          for (var _iterator12 = viewNode.getChildren()[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n            var child = _step12.value;\n\n            this._markDescendantTextToSync(child);\n          }\n        } catch (err) {\n          _didIteratorError12 = true;\n          _iteratorError12 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion12 && _iterator12[\"return\"] != null) {\n              _iterator12[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError12) {\n              throw _iteratorError12;\n            }\n          }\n        }\n      }\n    }\n    /**\n     * Checks if the selection needs to be updated and possibly updates it.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_updateSelection\",\n    value: function _updateSelection() {\n      // If there is no selection - remove DOM and fake selections.\n      if (this.selection.rangeCount === 0) {\n        this._removeDomSelection();\n\n        this._removeFakeSelection();\n\n        return;\n      }\n\n      var domRoot = this.domConverter.mapViewToDom(this.selection.editableElement); // Do nothing if there is no focus, or there is no DOM element corresponding to selection's editable element.\n\n      if (!this.isFocused || !domRoot) {\n        return;\n      } // Render selection.\n\n\n      if (this.selection.isFake) {\n        this._updateFakeSelection(domRoot);\n      } else {\n        this._removeFakeSelection();\n\n        this._updateDomSelection(domRoot);\n      }\n    }\n    /**\n     * Updates the fake selection.\n     *\n     * @private\n     * @param {HTMLElement} domRoot A valid DOM root where the fake selection container should be added.\n     */\n\n  }, {\n    key: \"_updateFakeSelection\",\n    value: function _updateFakeSelection(domRoot) {\n      var domDocument = domRoot.ownerDocument;\n      var container = this._fakeSelectionContainer; // Create fake selection container if one does not exist.\n\n      if (!container) {\n        this._fakeSelectionContainer = container = domDocument.createElement('div');\n        Object.assign(container.style, {\n          position: 'fixed',\n          top: 0,\n          left: '-9999px',\n          // See https://github.com/ckeditor/ckeditor5/issues/752.\n          width: '42px'\n        }); // Fill it with a text node so we can update it later.\n\n        container.textContent = \"\\xA0\";\n      }\n\n      if (!container.parentElement || container.parentElement != domRoot) {\n        domRoot.appendChild(container);\n      } // Update contents.\n\n\n      container.textContent = this.selection.fakeSelectionLabel || \"\\xA0\"; // Update selection.\n\n      var domSelection = domDocument.getSelection();\n      var domRange = domDocument.createRange();\n      domSelection.removeAllRanges();\n      domRange.selectNodeContents(container);\n      domSelection.addRange(domRange); // Bind fake selection container with current selection.\n\n      this.domConverter.bindFakeSelection(container, this.selection);\n    }\n    /**\n     * Updates the DOM selection.\n     *\n     * @private\n     * @param {HTMLElement} domRoot A valid DOM root where the DOM selection should be rendered.\n     */\n\n  }, {\n    key: \"_updateDomSelection\",\n    value: function _updateDomSelection(domRoot) {\n      var domSelection = domRoot.ownerDocument.defaultView.getSelection(); // Let's check whether DOM selection needs updating at all.\n\n      if (!this._domSelectionNeedsUpdate(domSelection)) {\n        return;\n      } // Multi-range selection is not available in most browsers, and, at least in Chrome, trying to\n      // set such selection, that is not continuous, throws an error. Because of that, we will just use anchor\n      // and focus of view selection.\n      // Since we are not supporting multi-range selection, we also do not need to check if proper editable is\n      // selected. If there is any editable selected, it is okay (editable is taken from selection anchor).\n\n\n      var anchor = this.domConverter.viewPositionToDom(this.selection.anchor);\n      var focus = this.domConverter.viewPositionToDom(this.selection.focus); // Focus the new editing host.\n      // Otherwise, FF may throw an error (https://github.com/ckeditor/ckeditor5/issues/721).\n\n      domRoot.focus();\n      domSelection.collapse(anchor.parent, anchor.offset);\n      domSelection.extend(focus.parent, focus.offset); // Firefox–specific hack (https://github.com/ckeditor/ckeditor5-engine/issues/1439).\n\n      if (env.isGecko) {\n        fixGeckoSelectionAfterBr(focus, domSelection);\n      }\n    }\n    /**\n     * Checks whether a given DOM selection needs to be updated.\n     *\n     * @private\n     * @param {Selection} domSelection The DOM selection to check.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"_domSelectionNeedsUpdate\",\n    value: function _domSelectionNeedsUpdate(domSelection) {\n      if (!this.domConverter.isDomSelectionCorrect(domSelection)) {\n        // Current DOM selection is in incorrect position. We need to update it.\n        return true;\n      }\n\n      var oldViewSelection = domSelection && this.domConverter.domSelectionToView(domSelection);\n\n      if (oldViewSelection && this.selection.isEqual(oldViewSelection)) {\n        return false;\n      } // If selection is not collapsed, it does not need to be updated if it is similar.\n\n\n      if (!this.selection.isCollapsed && this.selection.isSimilar(oldViewSelection)) {\n        // Selection did not changed and is correct, do not update.\n        return false;\n      } // Selections are not similar.\n\n\n      return true;\n    }\n    /**\n     * Removes the DOM selection.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_removeDomSelection\",\n    value: function _removeDomSelection() {\n      var _iteratorNormalCompletion13 = true;\n      var _didIteratorError13 = false;\n      var _iteratorError13 = undefined;\n\n      try {\n        for (var _iterator13 = this.domDocuments[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n          var doc = _step13.value;\n          var domSelection = doc.getSelection();\n\n          if (domSelection.rangeCount) {\n            var activeDomElement = doc.activeElement;\n            var viewElement = this.domConverter.mapDomToView(activeDomElement);\n\n            if (activeDomElement && viewElement) {\n              doc.getSelection().removeAllRanges();\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError13 = true;\n        _iteratorError13 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion13 && _iterator13[\"return\"] != null) {\n            _iterator13[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError13) {\n            throw _iteratorError13;\n          }\n        }\n      }\n    }\n    /**\n     * Removes the fake selection.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_removeFakeSelection\",\n    value: function _removeFakeSelection() {\n      var container = this._fakeSelectionContainer;\n\n      if (container) {\n        container.remove();\n      }\n    }\n    /**\n     * Checks if focus needs to be updated and possibly updates it.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_updateFocus\",\n    value: function _updateFocus() {\n      if (this.isFocused) {\n        var editable = this.selection.editableElement;\n\n        if (editable) {\n          this.domConverter.focus(editable);\n        }\n      }\n    }\n  }]);\n\n  return Renderer;\n}();\n\nexport { Renderer as default };\nmix(Renderer, ObservableMixin); // Checks if provided element is editable.\n//\n// @private\n// @param {module:engine/view/element~Element} element\n// @returns {Boolean}\n\nfunction isEditable(element) {\n  if (element.getAttribute('contenteditable') == 'false') {\n    return false;\n  }\n\n  var parent = element.findAncestor(function (element) {\n    return element.hasAttribute('contenteditable');\n  });\n  return !parent || parent.getAttribute('contenteditable') == 'true';\n} // Adds inline filler at a given position.\n//\n// The position can be given as an array of DOM nodes and an offset in that array,\n// or a DOM parent element and an offset in that element.\n//\n// @private\n// @param {Document} domDocument\n// @param {Element|Array.<Node>} domParentOrArray\n// @param {Number} offset\n// @returns {Text} The DOM text node that contains an inline filler.\n\n\nfunction addInlineFiller(domDocument, domParentOrArray, offset) {\n  var childNodes = domParentOrArray instanceof Array ? domParentOrArray : domParentOrArray.childNodes;\n  var nodeAfterFiller = childNodes[offset];\n\n  if (isText(nodeAfterFiller)) {\n    nodeAfterFiller.data = INLINE_FILLER + nodeAfterFiller.data;\n    return nodeAfterFiller;\n  } else {\n    var fillerNode = domDocument.createTextNode(INLINE_FILLER);\n\n    if (Array.isArray(domParentOrArray)) {\n      childNodes.splice(offset, 0, fillerNode);\n    } else {\n      insertAt(domParentOrArray, offset, fillerNode);\n    }\n\n    return fillerNode;\n  }\n} // Whether two DOM nodes should be considered as similar.\n// Nodes are considered similar if they have the same tag name.\n//\n// @private\n// @param {Node} node1\n// @param {Node} node2\n// @returns {Boolean}\n\n\nfunction areSimilar(node1, node2) {\n  return isNode(node1) && isNode(node2) && !isText(node1) && !isText(node2) && node1.tagName.toLowerCase() === node2.tagName.toLowerCase();\n} // Whether two dom nodes should be considered as the same.\n// Two nodes which are considered the same are:\n//\n//\t\t* Text nodes with the same text.\n//\t\t* Element nodes represented by the same object.\n//\t\t* Two block filler elements.\n//\n// @private\n// @param {Function} blockFiller Block filler creator function, see {@link module:engine/view/domconverter~DomConverter#blockFiller}.\n// @param {Node} node1\n// @param {Node} node2\n// @returns {Boolean}\n\n\nfunction sameNodes(blockFiller, actualDomChild, expectedDomChild) {\n  // Elements.\n  if (actualDomChild === expectedDomChild) {\n    return true;\n  } // Texts.\n  else if (isText(actualDomChild) && isText(expectedDomChild)) {\n      return actualDomChild.data === expectedDomChild.data;\n    } // Block fillers.\n    else if (isBlockFiller(actualDomChild, blockFiller) && isBlockFiller(expectedDomChild, blockFiller)) {\n        return true;\n      } // Not matching types.\n\n\n  return false;\n} // The following is a Firefox–specific hack (https://github.com/ckeditor/ckeditor5-engine/issues/1439).\n// When the native DOM selection is at the end of the block and preceded by <br /> e.g.\n//\n//\t\t<p>foo<br/>[]</p>\n//\n// which happens a lot when using the soft line break, the browser fails to (visually) move the\n// caret to the new line. A quick fix is as simple as force–refreshing the selection with the same range.\n\n\nfunction fixGeckoSelectionAfterBr(focus, domSelection) {\n  var parent = focus.parent; // This fix works only when the focus point is at the very end of an element.\n  // There is no point in running it in cases unrelated to the browser bug.\n\n  if (parent.nodeType != Node.ELEMENT_NODE || focus.offset != parent.childNodes.length - 1) {\n    return;\n  }\n\n  var childAtOffset = parent.childNodes[focus.offset]; // To stay on the safe side, the fix being as specific as possible, it targets only the\n  // selection which is at the very end of the element and preceded by <br />.\n\n  if (childAtOffset && childAtOffset.tagName == 'BR') {\n    domSelection.addRange(domSelection.getRangeAt(0));\n  }\n}\n\nfunction filterOutFakeSelectionContainer(domChildList, fakeSelectionContainer) {\n  var childList = Array.from(domChildList);\n\n  if (childList.length == 0 || !fakeSelectionContainer) {\n    return childList;\n  }\n\n  var last = childList[childList.length - 1];\n\n  if (last == fakeSelectionContainer) {\n    childList.pop();\n  }\n\n  return childList;\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* globals window, document */\n\n/**\n * @module utils/dom/global\n */\n\n/**\n * A helper (module) giving an access to the global DOM objects such as `window` and\n * `document`. Accessing these objects using this helper allows easy and bulletproof\n * testing, i.e. stubbing native properties:\n *\n *\t\timport global from 'ckeditor5/utils/dom/global.js';\n *\n *\t\t// This stub will work for any code using global module.\n *\t\ttestUtils.sinon.stub( global, 'window', {\n *\t\t\tinnerWidth: 10000\n *\t\t} );\n *\n *\t\tconsole.log( global.window.innerWidth );\n */\nexport default {\n  window: window,\n  document: document\n};","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/indexof\n */\n\n/**\n * Returns index of the node in the parent element.\n *\n * @param {Node} node Node which index is tested.\n * @returns {Number} Index of the node in the parent element. Returns 0 if node has no parent.\n */\nexport default function indexOf(node) {\n  var index = 0;\n\n  while (node.previousSibling) {\n    node = node.previousSibling;\n    index++;\n  }\n\n  return index;\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* globals Node */\n\n/**\n * @module utils/dom/getancestors\n */\n\n/**\n * Returns all ancestors of given DOM node, starting from the top-most (root). Includes the given node itself. If the\n * node is a part of `DocumentFragment` that `DocumentFragment` will be returned. In contrary, if the node is\n * appended to a `Document`, that `Document` will not be returned (algorithms operating on DOM tree care for `Document#documentElement`\n * at most, which will be returned).\n *\n * @param {Node} node DOM node.\n * @returns {Array.<Node|DocumentFragment>} Array of given `node` parents.\n */\nexport default function getAncestors(node) {\n  var nodes = []; // We are interested in `Node`s `DocumentFragment`s only.\n\n  while (node && node.nodeType != Node.DOCUMENT_NODE) {\n    nodes.unshift(node);\n    node = node.parentNode;\n  }\n\n  return nodes;\n}","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/domconverter\n */\n\n/* globals document, Node, NodeFilter, Text */\nimport ViewText from './text';\nimport ViewElement from './element';\nimport ViewPosition from './position';\nimport ViewRange from './range';\nimport ViewSelection from './selection';\nimport ViewDocumentFragment from './documentfragment';\nimport ViewTreeWalker from './treewalker';\nimport { BR_FILLER, INLINE_FILLER_LENGTH, isBlockFiller, isInlineFiller, startsWithFiller, getDataWithoutFiller } from './filler';\nimport global from '@ckeditor/ckeditor5-utils/src/dom/global';\nimport indexOf from '@ckeditor/ckeditor5-utils/src/dom/indexof';\nimport getAncestors from '@ckeditor/ckeditor5-utils/src/dom/getancestors';\nimport getCommonAncestor from '@ckeditor/ckeditor5-utils/src/dom/getcommonancestor';\nimport isText from '@ckeditor/ckeditor5-utils/src/dom/istext';\nimport { isElement } from 'lodash-es';\n/**\n * DomConverter is a set of tools to do transformations between DOM nodes and view nodes. It also handles\n * {@link module:engine/view/domconverter~DomConverter#bindElements binding} these nodes.\n *\n * The instance of DOMConverter is available in {@link module:engine/view/view~View#domConverter `editor.editing.view.domConverter`}.\n *\n * DomConverter does not check which nodes should be rendered (use {@link module:engine/view/renderer~Renderer}), does not keep a\n * state of a tree nor keeps synchronization between tree view and DOM tree (use {@link module:engine/view/document~Document}).\n *\n * DomConverter keeps DOM elements to View element bindings, so when the converter will be destroyed, the binding will\n * be lost. Two converters will keep separate binding maps, so one tree view can be bound with two DOM trees.\n */\n\nvar DomConverter =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates DOM converter.\n   *\n   * @param {Object} options Object with configuration options.\n   * @param {Function} [options.blockFiller=module:engine/view/filler~BR_FILLER] Block filler creator.\n   */\n  function DomConverter() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, DomConverter);\n\n    // Using WeakMap prevent memory leaks: when the converter will be destroyed all referenced between View and DOM\n    // will be removed. Also because it is a *Weak*Map when both view and DOM elements will be removed referenced\n    // will be also removed, isn't it brilliant?\n    //\n    // Yes, PJ. It is.\n    //\n    // You guys so smart.\n    //\n    // I've been here. Seen stuff. Afraid of code now.\n\n    /**\n     * Block {@link module:engine/view/filler filler} creator, which is used to create all block fillers during the\n     * view to DOM conversion and to recognize block fillers during the DOM to view conversion.\n     *\n     * @readonly\n     * @member {Function} module:engine/view/domconverter~DomConverter#blockFiller\n     */\n    this.blockFiller = options.blockFiller || BR_FILLER;\n    /**\n     * Tag names of DOM `Element`s which are considered pre-formatted elements.\n     *\n     * @readonly\n     * @member {Array.<String>} module:engine/view/domconverter~DomConverter#preElements\n     */\n\n    this.preElements = ['pre'];\n    /**\n     * Tag names of DOM `Element`s which are considered block elements.\n     *\n     * @readonly\n     * @member {Array.<String>} module:engine/view/domconverter~DomConverter#blockElements\n     */\n\n    this.blockElements = ['p', 'div', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'];\n    /**\n     * DOM to View mapping.\n     *\n     * @private\n     * @member {WeakMap} module:engine/view/domconverter~DomConverter#_domToViewMapping\n     */\n\n    this._domToViewMapping = new WeakMap();\n    /**\n     * View to DOM mapping.\n     *\n     * @private\n     * @member {WeakMap} module:engine/view/domconverter~DomConverter#_viewToDomMapping\n     */\n\n    this._viewToDomMapping = new WeakMap();\n    /**\n     * Holds mapping between fake selection containers and corresponding view selections.\n     *\n     * @private\n     * @member {WeakMap} module:engine/view/domconverter~DomConverter#_fakeSelectionMapping\n     */\n\n    this._fakeSelectionMapping = new WeakMap();\n  }\n  /**\n   * Binds given DOM element that represents fake selection to {@link module:engine/view/documentselection~DocumentSelection\n   * document selection}. Document selection copy is stored and can be retrieved by\n   * {@link module:engine/view/domconverter~DomConverter#fakeSelectionToView} method.\n   *\n   * @param {HTMLElement} domElement\n   * @param {module:engine/view/documentselection~DocumentSelection} viewDocumentSelection\n   */\n\n\n  _createClass(DomConverter, [{\n    key: \"bindFakeSelection\",\n    value: function bindFakeSelection(domElement, viewDocumentSelection) {\n      this._fakeSelectionMapping.set(domElement, new ViewSelection(viewDocumentSelection));\n    }\n    /**\n     * Returns {@link module:engine/view/selection~Selection view selection} instance corresponding to\n     * given DOM element that represents fake selection. Returns `undefined` if binding to given DOM element does not exists.\n     *\n     * @param {HTMLElement} domElement\n     * @returns {module:engine/view/selection~Selection|undefined}\n     */\n\n  }, {\n    key: \"fakeSelectionToView\",\n    value: function fakeSelectionToView(domElement) {\n      return this._fakeSelectionMapping.get(domElement);\n    }\n    /**\n     * Binds DOM and View elements, so it will be possible to get corresponding elements using\n     * {@link module:engine/view/domconverter~DomConverter#mapDomToView} and\n     * {@link module:engine/view/domconverter~DomConverter#mapViewToDom}.\n     *\n     * @param {HTMLElement} domElement DOM element to bind.\n     * @param {module:engine/view/element~Element} viewElement View element to bind.\n     */\n\n  }, {\n    key: \"bindElements\",\n    value: function bindElements(domElement, viewElement) {\n      this._domToViewMapping.set(domElement, viewElement);\n\n      this._viewToDomMapping.set(viewElement, domElement);\n    }\n    /**\n     * Unbinds given `domElement` from the view element it was bound to. Unbinding is deep, meaning that all children of\n     * `domElement` will be unbound too.\n     *\n     * @param {HTMLElement} domElement DOM element to unbind.\n     */\n\n  }, {\n    key: \"unbindDomElement\",\n    value: function unbindDomElement(domElement) {\n      var viewElement = this._domToViewMapping.get(domElement);\n\n      if (viewElement) {\n        this._domToViewMapping[\"delete\"](domElement);\n\n        this._viewToDomMapping[\"delete\"](viewElement); // Use Array.from because of MS Edge (#923).\n\n\n        for (var _i = 0, _Array$from = Array.from(domElement.childNodes); _i < _Array$from.length; _i++) {\n          var child = _Array$from[_i];\n          this.unbindDomElement(child);\n        }\n      }\n    }\n    /**\n     * Binds DOM and View document fragments, so it will be possible to get corresponding document fragments using\n     * {@link module:engine/view/domconverter~DomConverter#mapDomToView} and\n     * {@link module:engine/view/domconverter~DomConverter#mapViewToDom}.\n     *\n     * @param {DocumentFragment} domFragment DOM document fragment to bind.\n     * @param {module:engine/view/documentfragment~DocumentFragment} viewFragment View document fragment to bind.\n     */\n\n  }, {\n    key: \"bindDocumentFragments\",\n    value: function bindDocumentFragments(domFragment, viewFragment) {\n      this._domToViewMapping.set(domFragment, viewFragment);\n\n      this._viewToDomMapping.set(viewFragment, domFragment);\n    }\n    /**\n     * Converts view to DOM. For all text nodes, not bound elements and document fragments new items will\n     * be created. For bound elements and document fragments function will return corresponding items.\n     *\n     * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} viewNode\n     * View node or document fragment to transform.\n     * @param {Document} domDocument Document which will be used to create DOM nodes.\n     * @param {Object} [options] Conversion options.\n     * @param {Boolean} [options.bind=false] Determines whether new elements will be bound.\n     * @param {Boolean} [options.withChildren=true] If `true`, node's and document fragment's children will be converted too.\n     * @returns {Node|DocumentFragment} Converted node or DocumentFragment.\n     */\n\n  }, {\n    key: \"viewToDom\",\n    value: function viewToDom(viewNode, domDocument) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      if (viewNode.is('text')) {\n        var textData = this._processDataFromViewText(viewNode);\n\n        return domDocument.createTextNode(textData);\n      } else {\n        if (this.mapViewToDom(viewNode)) {\n          return this.mapViewToDom(viewNode);\n        }\n\n        var domElement;\n\n        if (viewNode.is('documentFragment')) {\n          // Create DOM document fragment.\n          domElement = domDocument.createDocumentFragment();\n\n          if (options.bind) {\n            this.bindDocumentFragments(domElement, viewNode);\n          }\n        } else if (viewNode.is('uiElement')) {\n          // UIElement has its own render() method (see #799).\n          domElement = viewNode.render(domDocument);\n\n          if (options.bind) {\n            this.bindElements(domElement, viewNode);\n          }\n\n          return domElement;\n        } else {\n          // Create DOM element.\n          domElement = domDocument.createElement(viewNode.name);\n\n          if (options.bind) {\n            this.bindElements(domElement, viewNode);\n          } // Copy element's attributes.\n\n\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = viewNode.getAttributeKeys()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var key = _step.value;\n              domElement.setAttribute(key, viewNode.getAttribute(key));\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n                _iterator[\"return\"]();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n        }\n\n        if (options.withChildren || options.withChildren === undefined) {\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = this.viewChildrenToDom(viewNode, domDocument, options)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var child = _step2.value;\n              domElement.appendChild(child);\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n                _iterator2[\"return\"]();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n        }\n\n        return domElement;\n      }\n    }\n    /**\n     * Converts children of the view element to DOM using the\n     * {@link module:engine/view/domconverter~DomConverter#viewToDom} method.\n     * Additionally, this method adds block {@link module:engine/view/filler filler} to the list of children, if needed.\n     *\n     * @param {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment} viewElement Parent view element.\n     * @param {Document} domDocument Document which will be used to create DOM nodes.\n     * @param {Object} options See {@link module:engine/view/domconverter~DomConverter#viewToDom} options parameter.\n     * @returns {Iterable.<Node>} DOM nodes.\n     */\n\n  }, {\n    key: \"viewChildrenToDom\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function viewChildrenToDom(viewElement, domDocument) {\n      var options,\n          fillerPositionOffset,\n          offset,\n          _iteratorNormalCompletion3,\n          _didIteratorError3,\n          _iteratorError3,\n          _iterator3,\n          _step3,\n          childView,\n          _args = arguments;\n\n      return regeneratorRuntime.wrap(function viewChildrenToDom$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n              fillerPositionOffset = viewElement.getFillerOffset && viewElement.getFillerOffset();\n              offset = 0;\n              _iteratorNormalCompletion3 = true;\n              _didIteratorError3 = false;\n              _iteratorError3 = undefined;\n              _context.prev = 6;\n              _iterator3 = viewElement.getChildren()[Symbol.iterator]();\n\n            case 8:\n              if (_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done) {\n                _context.next = 19;\n                break;\n              }\n\n              childView = _step3.value;\n\n              if (!(fillerPositionOffset === offset)) {\n                _context.next = 13;\n                break;\n              }\n\n              _context.next = 13;\n              return this.blockFiller(domDocument);\n\n            case 13:\n              _context.next = 15;\n              return this.viewToDom(childView, domDocument, options);\n\n            case 15:\n              offset++;\n\n            case 16:\n              _iteratorNormalCompletion3 = true;\n              _context.next = 8;\n              break;\n\n            case 19:\n              _context.next = 25;\n              break;\n\n            case 21:\n              _context.prev = 21;\n              _context.t0 = _context[\"catch\"](6);\n              _didIteratorError3 = true;\n              _iteratorError3 = _context.t0;\n\n            case 25:\n              _context.prev = 25;\n              _context.prev = 26;\n\n              if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n                _iterator3[\"return\"]();\n              }\n\n            case 28:\n              _context.prev = 28;\n\n              if (!_didIteratorError3) {\n                _context.next = 31;\n                break;\n              }\n\n              throw _iteratorError3;\n\n            case 31:\n              return _context.finish(28);\n\n            case 32:\n              return _context.finish(25);\n\n            case 33:\n              if (!(fillerPositionOffset === offset)) {\n                _context.next = 36;\n                break;\n              }\n\n              _context.next = 36;\n              return this.blockFiller(domDocument);\n\n            case 36:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, viewChildrenToDom, this, [[6, 21, 25, 33], [26,, 28, 32]]);\n    })\n    /**\n     * Converts view {@link module:engine/view/range~Range} to DOM range.\n     * Inline and block {@link module:engine/view/filler fillers} are handled during the conversion.\n     *\n     * @param {module:engine/view/range~Range} viewRange View range.\n     * @returns {Range} DOM range.\n     */\n\n  }, {\n    key: \"viewRangeToDom\",\n    value: function viewRangeToDom(viewRange) {\n      var domStart = this.viewPositionToDom(viewRange.start);\n      var domEnd = this.viewPositionToDom(viewRange.end);\n      var domRange = document.createRange();\n      domRange.setStart(domStart.parent, domStart.offset);\n      domRange.setEnd(domEnd.parent, domEnd.offset);\n      return domRange;\n    }\n    /**\n     * Converts view {@link module:engine/view/position~Position} to DOM parent and offset.\n     *\n     * Inline and block {@link module:engine/view/filler fillers} are handled during the conversion.\n     * If the converted position is directly before inline filler it is moved inside the filler.\n     *\n     * @param {module:engine/view/position~Position} viewPosition View position.\n     * @returns {Object|null} position DOM position or `null` if view position could not be converted to DOM.\n     * @returns {Node} position.parent DOM position parent.\n     * @returns {Number} position.offset DOM position offset.\n     */\n\n  }, {\n    key: \"viewPositionToDom\",\n    value: function viewPositionToDom(viewPosition) {\n      var viewParent = viewPosition.parent;\n\n      if (viewParent.is('text')) {\n        var domParent = this.findCorrespondingDomText(viewParent);\n\n        if (!domParent) {\n          // Position is in a view text node that has not been rendered to DOM yet.\n          return null;\n        }\n\n        var offset = viewPosition.offset;\n\n        if (startsWithFiller(domParent)) {\n          offset += INLINE_FILLER_LENGTH;\n        }\n\n        return {\n          parent: domParent,\n          offset: offset\n        };\n      } else {\n        // viewParent is instance of ViewElement.\n        var _domParent, domBefore, domAfter;\n\n        if (viewPosition.offset === 0) {\n          _domParent = this.mapViewToDom(viewParent);\n\n          if (!_domParent) {\n            // Position is in a view element that has not been rendered to DOM yet.\n            return null;\n          }\n\n          domAfter = _domParent.childNodes[0];\n        } else {\n          var nodeBefore = viewPosition.nodeBefore;\n          domBefore = nodeBefore.is('text') ? this.findCorrespondingDomText(nodeBefore) : this.mapViewToDom(viewPosition.nodeBefore);\n\n          if (!domBefore) {\n            // Position is after a view element that has not been rendered to DOM yet.\n            return null;\n          }\n\n          _domParent = domBefore.parentNode;\n          domAfter = domBefore.nextSibling;\n        } // If there is an inline filler at position return position inside the filler. We should never return\n        // the position before the inline filler.\n\n\n        if (isText(domAfter) && startsWithFiller(domAfter)) {\n          return {\n            parent: domAfter,\n            offset: INLINE_FILLER_LENGTH\n          };\n        }\n\n        var _offset = domBefore ? indexOf(domBefore) + 1 : 0;\n\n        return {\n          parent: _domParent,\n          offset: _offset\n        };\n      }\n    }\n    /**\n     * Converts DOM to view. For all text nodes, not bound elements and document fragments new items will\n     * be created. For bound elements and document fragments function will return corresponding items. For\n     * {@link module:engine/view/filler fillers} `null` will be returned.\n     * For all DOM elements rendered by {@link module:engine/view/uielement~UIElement} that UIElement will be returned.\n     *\n     * @param {Node|DocumentFragment} domNode DOM node or document fragment to transform.\n     * @param {Object} [options] Conversion options.\n     * @param {Boolean} [options.bind=false] Determines whether new elements will be bound.\n     * @param {Boolean} [options.withChildren=true] If `true`, node's and document fragment's children will be converted too.\n     * @param {Boolean} [options.keepOriginalCase=false] If `false`, node's tag name will be converter to lower case.\n     * @returns {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment|null} Converted node or document fragment\n     * or `null` if DOM node is a {@link module:engine/view/filler filler} or the given node is an empty text node.\n     */\n\n  }, {\n    key: \"domToView\",\n    value: function domToView(domNode) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (isBlockFiller(domNode, this.blockFiller)) {\n        return null;\n      } // When node is inside UIElement return that UIElement as it's view representation.\n\n\n      var uiElement = this.getParentUIElement(domNode, this._domToViewMapping);\n\n      if (uiElement) {\n        return uiElement;\n      }\n\n      if (isText(domNode)) {\n        if (isInlineFiller(domNode)) {\n          return null;\n        } else {\n          var textData = this._processDataFromDomText(domNode);\n\n          return textData === '' ? null : new ViewText(textData);\n        }\n      } else if (this.isComment(domNode)) {\n        return null;\n      } else {\n        if (this.mapDomToView(domNode)) {\n          return this.mapDomToView(domNode);\n        }\n\n        var viewElement;\n\n        if (this.isDocumentFragment(domNode)) {\n          // Create view document fragment.\n          viewElement = new ViewDocumentFragment();\n\n          if (options.bind) {\n            this.bindDocumentFragments(domNode, viewElement);\n          }\n        } else {\n          // Create view element.\n          var viewName = options.keepOriginalCase ? domNode.tagName : domNode.tagName.toLowerCase();\n          viewElement = new ViewElement(viewName);\n\n          if (options.bind) {\n            this.bindElements(domNode, viewElement);\n          } // Copy element's attributes.\n\n\n          var attrs = domNode.attributes;\n\n          for (var i = attrs.length - 1; i >= 0; i--) {\n            viewElement._setAttribute(attrs[i].name, attrs[i].value);\n          }\n        }\n\n        if (options.withChildren || options.withChildren === undefined) {\n          var _iteratorNormalCompletion4 = true;\n          var _didIteratorError4 = false;\n          var _iteratorError4 = undefined;\n\n          try {\n            for (var _iterator4 = this.domChildrenToView(domNode, options)[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n              var child = _step4.value;\n\n              viewElement._appendChild(child);\n            }\n          } catch (err) {\n            _didIteratorError4 = true;\n            _iteratorError4 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion4 && _iterator4[\"return\"] != null) {\n                _iterator4[\"return\"]();\n              }\n            } finally {\n              if (_didIteratorError4) {\n                throw _iteratorError4;\n              }\n            }\n          }\n        }\n\n        return viewElement;\n      }\n    }\n    /**\n     * Converts children of the DOM element to view nodes using\n     * the {@link module:engine/view/domconverter~DomConverter#domToView} method.\n     * Additionally this method omits block {@link module:engine/view/filler filler}, if it exists in the DOM parent.\n     *\n     * @param {HTMLElement} domElement Parent DOM element.\n     * @param {Object} options See {@link module:engine/view/domconverter~DomConverter#domToView} options parameter.\n     * @returns {Iterable.<module:engine/view/node~Node>} View nodes.\n     */\n\n  }, {\n    key: \"domChildrenToView\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function domChildrenToView(domElement) {\n      var options,\n          i,\n          domChild,\n          viewChild,\n          _args2 = arguments;\n      return regeneratorRuntime.wrap(function domChildrenToView$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              options = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {};\n              i = 0;\n\n            case 2:\n              if (!(i < domElement.childNodes.length)) {\n                _context2.next = 11;\n                break;\n              }\n\n              domChild = domElement.childNodes[i];\n              viewChild = this.domToView(domChild, options);\n\n              if (!(viewChild !== null)) {\n                _context2.next = 8;\n                break;\n              }\n\n              _context2.next = 8;\n              return viewChild;\n\n            case 8:\n              i++;\n              _context2.next = 2;\n              break;\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, domChildrenToView, this);\n    })\n    /**\n     * Converts DOM selection to view {@link module:engine/view/selection~Selection}.\n     * Ranges which cannot be converted will be omitted.\n     *\n     * @param {Selection} domSelection DOM selection.\n     * @returns {module:engine/view/selection~Selection} View selection.\n     */\n\n  }, {\n    key: \"domSelectionToView\",\n    value: function domSelectionToView(domSelection) {\n      // DOM selection might be placed in fake selection container.\n      // If container contains fake selection - return corresponding view selection.\n      if (domSelection.rangeCount === 1) {\n        var container = domSelection.getRangeAt(0).startContainer; // The DOM selection might be moved to the text node inside the fake selection container.\n\n        if (isText(container)) {\n          container = container.parentNode;\n        }\n\n        var viewSelection = this.fakeSelectionToView(container);\n\n        if (viewSelection) {\n          return viewSelection;\n        }\n      }\n\n      var isBackward = this.isDomSelectionBackward(domSelection);\n      var viewRanges = [];\n\n      for (var i = 0; i < domSelection.rangeCount; i++) {\n        // DOM Range have correct start and end, no matter what is the DOM Selection direction. So we don't have to fix anything.\n        var domRange = domSelection.getRangeAt(i);\n        var viewRange = this.domRangeToView(domRange);\n\n        if (viewRange) {\n          viewRanges.push(viewRange);\n        }\n      }\n\n      return new ViewSelection(viewRanges, {\n        backward: isBackward\n      });\n    }\n    /**\n     * Converts DOM Range to view {@link module:engine/view/range~Range}.\n     * If the start or end position can not be converted `null` is returned.\n     *\n     * @param {Range} domRange DOM range.\n     * @returns {module:engine/view/range~Range|null} View range.\n     */\n\n  }, {\n    key: \"domRangeToView\",\n    value: function domRangeToView(domRange) {\n      var viewStart = this.domPositionToView(domRange.startContainer, domRange.startOffset);\n      var viewEnd = this.domPositionToView(domRange.endContainer, domRange.endOffset);\n\n      if (viewStart && viewEnd) {\n        return new ViewRange(viewStart, viewEnd);\n      }\n\n      return null;\n    }\n    /**\n     * Converts DOM parent and offset to view {@link module:engine/view/position~Position}.\n     *\n     * If the position is inside a {@link module:engine/view/filler filler} which has no corresponding view node,\n     * position of the filler will be converted and returned.\n     *\n     * If the position is inside DOM element rendered by {@link module:engine/view/uielement~UIElement}\n     * that position will be converted to view position before that UIElement.\n     *\n     * If structures are too different and it is not possible to find corresponding position then `null` will be returned.\n     *\n     * @param {Node} domParent DOM position parent.\n     * @param {Number} domOffset DOM position offset.\n     * @returns {module:engine/view/position~Position} viewPosition View position.\n     */\n\n  }, {\n    key: \"domPositionToView\",\n    value: function domPositionToView(domParent, domOffset) {\n      if (isBlockFiller(domParent, this.blockFiller)) {\n        return this.domPositionToView(domParent.parentNode, indexOf(domParent));\n      } // If position is somewhere inside UIElement - return position before that element.\n\n\n      var viewElement = this.mapDomToView(domParent);\n\n      if (viewElement && viewElement.is('uiElement')) {\n        return ViewPosition._createBefore(viewElement);\n      }\n\n      if (isText(domParent)) {\n        if (isInlineFiller(domParent)) {\n          return this.domPositionToView(domParent.parentNode, indexOf(domParent));\n        }\n\n        var viewParent = this.findCorrespondingViewText(domParent);\n        var offset = domOffset;\n\n        if (!viewParent) {\n          return null;\n        }\n\n        if (startsWithFiller(domParent)) {\n          offset -= INLINE_FILLER_LENGTH;\n          offset = offset < 0 ? 0 : offset;\n        }\n\n        return new ViewPosition(viewParent, offset);\n      } // domParent instanceof HTMLElement.\n      else {\n          if (domOffset === 0) {\n            var _viewParent = this.mapDomToView(domParent);\n\n            if (_viewParent) {\n              return new ViewPosition(_viewParent, 0);\n            }\n          } else {\n            var domBefore = domParent.childNodes[domOffset - 1];\n            var viewBefore = isText(domBefore) ? this.findCorrespondingViewText(domBefore) : this.mapDomToView(domBefore); // TODO #663\n\n            if (viewBefore && viewBefore.parent) {\n              return new ViewPosition(viewBefore.parent, viewBefore.index + 1);\n            }\n          }\n\n          return null;\n        }\n    }\n    /**\n     * Returns corresponding view {@link module:engine/view/element~Element Element} or\n     * {@link module:engine/view/documentfragment~DocumentFragment} for provided DOM element or\n     * document fragment. If there is no view item {@link module:engine/view/domconverter~DomConverter#bindElements bound}\n     * to the given DOM - `undefined` is returned.\n     * For all DOM elements rendered by {@link module:engine/view/uielement~UIElement} that UIElement will be returned.\n     *\n     * @param {DocumentFragment|Element} domElementOrDocumentFragment DOM element or document fragment.\n     * @returns {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment|undefined}\n     * Corresponding view element, document fragment or `undefined` if no element was bound.\n     */\n\n  }, {\n    key: \"mapDomToView\",\n    value: function mapDomToView(domElementOrDocumentFragment) {\n      return this.getParentUIElement(domElementOrDocumentFragment) || this._domToViewMapping.get(domElementOrDocumentFragment);\n    }\n    /**\n     * Finds corresponding text node. Text nodes are not {@link module:engine/view/domconverter~DomConverter#bindElements bound},\n     * corresponding text node is returned based on the sibling or parent.\n     *\n     * If the directly previous sibling is a {@link module:engine/view/domconverter~DomConverter#bindElements bound} element, it is used\n     * to find the corresponding text node.\n     *\n     * If this is a first child in the parent and the parent is a {@link module:engine/view/domconverter~DomConverter#bindElements bound}\n     * element, it is used to find the corresponding text node.\n     *\n     * For all text nodes rendered by {@link module:engine/view/uielement~UIElement} that UIElement will be returned.\n     *\n     * Otherwise `null` is returned.\n     *\n     * Note that for the block or inline {@link module:engine/view/filler filler} this method returns `null`.\n     *\n     * @param {Text} domText DOM text node.\n     * @returns {module:engine/view/text~Text|null} Corresponding view text node or `null`, if it was not possible to find a\n     * corresponding node.\n     */\n\n  }, {\n    key: \"findCorrespondingViewText\",\n    value: function findCorrespondingViewText(domText) {\n      if (isInlineFiller(domText)) {\n        return null;\n      } // If DOM text was rendered by UIElement - return that element.\n\n\n      var uiElement = this.getParentUIElement(domText);\n\n      if (uiElement) {\n        return uiElement;\n      }\n\n      var previousSibling = domText.previousSibling; // Try to use previous sibling to find the corresponding text node.\n\n      if (previousSibling) {\n        if (!this.isElement(previousSibling)) {\n          // The previous is text or comment.\n          return null;\n        }\n\n        var viewElement = this.mapDomToView(previousSibling);\n\n        if (viewElement) {\n          var nextSibling = viewElement.nextSibling; // It might be filler which has no corresponding view node.\n\n          if (nextSibling instanceof ViewText) {\n            return viewElement.nextSibling;\n          } else {\n            return null;\n          }\n        }\n      } // Try to use parent to find the corresponding text node.\n      else {\n          var _viewElement = this.mapDomToView(domText.parentNode);\n\n          if (_viewElement) {\n            var firstChild = _viewElement.getChild(0); // It might be filler which has no corresponding view node.\n\n\n            if (firstChild instanceof ViewText) {\n              return firstChild;\n            } else {\n              return null;\n            }\n          }\n        }\n\n      return null;\n    }\n    /**\n     * Returns corresponding DOM item for provided {@link module:engine/view/element~Element Element} or\n     * {@link module:engine/view/documentfragment~DocumentFragment DocumentFragment}.\n     * To find a corresponding text for {@link module:engine/view/text~Text view Text instance}\n     * use {@link #findCorrespondingDomText}.\n     *\n     * @param {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment} viewNode\n     * View element or document fragment.\n     * @returns {Node|DocumentFragment|undefined} Corresponding DOM node or document fragment.\n     */\n\n  }, {\n    key: \"mapViewToDom\",\n    value: function mapViewToDom(documentFragmentOrElement) {\n      return this._viewToDomMapping.get(documentFragmentOrElement);\n    }\n    /**\n     * Finds corresponding text node. Text nodes are not {@link module:engine/view/domconverter~DomConverter#bindElements bound},\n     * corresponding text node is returned based on the sibling or parent.\n     *\n     * If the directly previous sibling is a {@link module:engine/view/domconverter~DomConverter#bindElements bound} element, it is used\n     * to find the corresponding text node.\n     *\n     * If this is a first child in the parent and the parent is a {@link module:engine/view/domconverter~DomConverter#bindElements bound}\n     * element, it is used to find the corresponding text node.\n     *\n     * Otherwise `null` is returned.\n     *\n     * @param {module:engine/view/text~Text} viewText View text node.\n     * @returns {Text|null} Corresponding DOM text node or `null`, if it was not possible to find a corresponding node.\n     */\n\n  }, {\n    key: \"findCorrespondingDomText\",\n    value: function findCorrespondingDomText(viewText) {\n      var previousSibling = viewText.previousSibling; // Try to use previous sibling to find the corresponding text node.\n\n      if (previousSibling && this.mapViewToDom(previousSibling)) {\n        return this.mapViewToDom(previousSibling).nextSibling;\n      } // If this is a first node, try to use parent to find the corresponding text node.\n\n\n      if (!previousSibling && viewText.parent && this.mapViewToDom(viewText.parent)) {\n        return this.mapViewToDom(viewText.parent).childNodes[0];\n      }\n\n      return null;\n    }\n    /**\n     * Focuses DOM editable that is corresponding to provided {@link module:engine/view/editableelement~EditableElement}.\n     *\n     * @param {module:engine/view/editableelement~EditableElement} viewEditable\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus(viewEditable) {\n      var domEditable = this.mapViewToDom(viewEditable);\n\n      if (domEditable && domEditable.ownerDocument.activeElement !== domEditable) {\n        // Save the scrollX and scrollY positions before the focus.\n        var _global$window = global.window,\n            scrollX = _global$window.scrollX,\n            scrollY = _global$window.scrollY;\n        var scrollPositions = []; // Save all scrollLeft and scrollTop values starting from domEditable up to\n        // document#documentElement.\n\n        forEachDomNodeAncestor(domEditable, function (node) {\n          var scrollLeft = node.scrollLeft,\n              scrollTop = node.scrollTop;\n          scrollPositions.push([scrollLeft, scrollTop]);\n        });\n        domEditable.focus(); // Restore scrollLeft and scrollTop values starting from domEditable up to\n        // document#documentElement.\n        // https://github.com/ckeditor/ckeditor5-engine/issues/951\n        // https://github.com/ckeditor/ckeditor5-engine/issues/957\n\n        forEachDomNodeAncestor(domEditable, function (node) {\n          var _scrollPositions$shif = scrollPositions.shift(),\n              _scrollPositions$shif2 = _slicedToArray(_scrollPositions$shif, 2),\n              scrollLeft = _scrollPositions$shif2[0],\n              scrollTop = _scrollPositions$shif2[1];\n\n          node.scrollLeft = scrollLeft;\n          node.scrollTop = scrollTop;\n        }); // Restore the scrollX and scrollY positions after the focus.\n        // https://github.com/ckeditor/ckeditor5-engine/issues/951\n\n        global.window.scrollTo(scrollX, scrollY);\n      }\n    }\n    /**\n     * Returns `true` when `node.nodeType` equals `Node.ELEMENT_NODE`.\n     *\n     * @param {Node} node Node to check.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isElement\",\n    value: function isElement(node) {\n      return node && node.nodeType == Node.ELEMENT_NODE;\n    }\n    /**\n     * Returns `true` when `node.nodeType` equals `Node.DOCUMENT_FRAGMENT_NODE`.\n     *\n     * @param {Node} node Node to check.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isDocumentFragment\",\n    value: function isDocumentFragment(node) {\n      return node && node.nodeType == Node.DOCUMENT_FRAGMENT_NODE;\n    }\n    /**\n     * Returns `true` when `node.nodeType` equals `Node.COMMENT_NODE`.\n     *\n     * @param {Node} node Node to check.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isComment\",\n    value: function isComment(node) {\n      return node && node.nodeType == Node.COMMENT_NODE;\n    }\n    /**\n     * Returns `true` if given selection is a backward selection, that is, if it's `focus` is before `anchor`.\n     *\n     * @param {Selection} DOM Selection instance to check.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isDomSelectionBackward\",\n    value: function isDomSelectionBackward(selection) {\n      if (selection.isCollapsed) {\n        return false;\n      } // Since it takes multiple lines of code to check whether a \"DOM Position\" is before/after another \"DOM Position\",\n      // we will use the fact that range will collapse if it's end is before it's start.\n\n\n      var range = document.createRange();\n      range.setStart(selection.anchorNode, selection.anchorOffset);\n      range.setEnd(selection.focusNode, selection.focusOffset);\n      var backward = range.collapsed;\n      range.detach();\n      return backward;\n    }\n    /**\n     * Returns parent {@link module:engine/view/uielement~UIElement} for provided DOM node. Returns `null` if there is no\n     * parent UIElement.\n     *\n     * @param {Node} domNode\n     * @returns {module:engine/view/uielement~UIElement|null}\n     */\n\n  }, {\n    key: \"getParentUIElement\",\n    value: function getParentUIElement(domNode) {\n      var ancestors = getAncestors(domNode); // Remove domNode from the list.\n\n      ancestors.pop();\n\n      while (ancestors.length) {\n        var _domNode = ancestors.pop();\n\n        var viewNode = this._domToViewMapping.get(_domNode);\n\n        if (viewNode && viewNode.is('uiElement')) {\n          return viewNode;\n        }\n      }\n\n      return null;\n    }\n    /**\n     * Checks if given selection's boundaries are at correct places.\n     *\n     * The following places are considered as incorrect for selection boundaries:\n     * * before or in the middle of the inline filler sequence,\n     * * inside the DOM element which represents {@link module:engine/view/uielement~UIElement a view ui element}.\n     *\n     * @param {Selection} domSelection DOM Selection object to be checked.\n     * @returns {Boolean} `true` if the given selection is at a correct place, `false` otherwise.\n     */\n\n  }, {\n    key: \"isDomSelectionCorrect\",\n    value: function isDomSelectionCorrect(domSelection) {\n      return this._isDomSelectionPositionCorrect(domSelection.anchorNode, domSelection.anchorOffset) && this._isDomSelectionPositionCorrect(domSelection.focusNode, domSelection.focusOffset);\n    }\n    /**\n     * Checks if the given DOM position is a correct place for selection boundary. See {@link #isDomSelectionCorrect}.\n     *\n     * @private\n     * @param {Element} domParent Position parent.\n     * @param {Number} offset Position offset.\n     * @returns {Boolean} `true` if given position is at a correct place for selection boundary, `false` otherwise.\n     */\n\n  }, {\n    key: \"_isDomSelectionPositionCorrect\",\n    value: function _isDomSelectionPositionCorrect(domParent, offset) {\n      // If selection is before or in the middle of inline filler string, it is incorrect.\n      if (isText(domParent) && startsWithFiller(domParent) && offset < INLINE_FILLER_LENGTH) {\n        // Selection in a text node, at wrong position (before or in the middle of filler).\n        return false;\n      }\n\n      if (this.isElement(domParent) && startsWithFiller(domParent.childNodes[offset])) {\n        // Selection in an element node, before filler text node.\n        return false;\n      }\n\n      var viewParent = this.mapDomToView(domParent); // If selection is in `view.UIElement`, it is incorrect. Note that `mapDomToView()` returns `view.UIElement`\n      // also for any dom element that is inside the view ui element (so we don't need to perform any additional checks).\n\n      if (viewParent && viewParent.is('uiElement')) {\n        return false;\n      }\n\n      return true;\n    }\n    /**\n     * Takes text data from a given {@link module:engine/view/text~Text#data} and processes it so\n     * it is correctly displayed in the DOM.\n     *\n     * Following changes are done:\n     *\n     * * a space at the beginning is changed to `&nbsp;` if this is the first text node in its container\n     * element or if a previous text node ends with a space character,\n     * * space at the end of the text node is changed to `&nbsp;` if there are two spaces at the end of a node or if next node\n     * starts with a space or if it is the last text node in its container,\n     * * remaining spaces are replaced to a chain of spaces and `&nbsp;` (e.g. `'x   x'` becomes `'x &nbsp; x'`).\n     *\n     * Content of {@link #preElements} is not processed.\n     *\n     * @private\n     * @param {module:engine/view/text~Text} node View text node to process.\n     * @returns {String} Processed text data.\n     */\n\n  }, {\n    key: \"_processDataFromViewText\",\n    value: function _processDataFromViewText(node) {\n      var _this = this;\n\n      var data = node.data; // If any of node ancestors has a name which is in `preElements` array, then currently processed\n      // view text node is (will be) in preformatted element. We should not change whitespaces then.\n\n      if (node.getAncestors().some(function (parent) {\n        return _this.preElements.includes(parent.name);\n      })) {\n        return data;\n      } // 1. Replace the first space with a nbsp if the previous node ends with a space or there is no previous node\n      // (container element boundary).\n\n\n      if (data.charAt(0) == ' ') {\n        var prevNode = this._getTouchingViewTextNode(node, false);\n\n        var prevEndsWithSpace = prevNode && this._nodeEndsWithSpace(prevNode);\n\n        if (prevEndsWithSpace || !prevNode) {\n          data = \"\\xA0\" + data.substr(1);\n        }\n      } // 2. Replace the last space with nbsp if there are two spaces at the end or if the next node starts with space or there is no\n      // next node (container element boundary).\n      //\n      // Keep in mind that Firefox prefers $nbsp; before tag, not inside it:\n      //\n      // Foo <span>&nbsp;bar</span>  <-- bad.\n      // Foo&nbsp;<span> bar</span>  <-- good.\n      //\n      // More here: https://github.com/ckeditor/ckeditor5-engine/issues/1747.\n\n\n      if (data.charAt(data.length - 1) == ' ') {\n        var nextNode = this._getTouchingViewTextNode(node, true);\n\n        if (data.charAt(data.length - 2) == ' ' || !nextNode || nextNode.data.charAt(0) == ' ') {\n          data = data.substr(0, data.length - 1) + \"\\xA0\";\n        }\n      } // 3. Create space+nbsp pairs.\n\n\n      return data.replace(/ {2}/g, \" \\xA0\");\n    }\n    /**\n     * Checks whether given node ends with a space character after changing appropriate space characters to `&nbsp;`s.\n     *\n     * @private\n     * @param {module:engine/view/text~Text} node Node to check.\n     * @returns {Boolean} `true` if given `node` ends with space, `false` otherwise.\n     */\n\n  }, {\n    key: \"_nodeEndsWithSpace\",\n    value: function _nodeEndsWithSpace(node) {\n      var _this2 = this;\n\n      if (node.getAncestors().some(function (parent) {\n        return _this2.preElements.includes(parent.name);\n      })) {\n        return false;\n      }\n\n      var data = this._processDataFromViewText(node);\n\n      return data.charAt(data.length - 1) == ' ';\n    }\n    /**\n     * Takes text data from native `Text` node and processes it to a correct {@link module:engine/view/text~Text view text node} data.\n     *\n     * Following changes are done:\n     *\n     * * multiple whitespaces are replaced to a single space,\n     * * space at the beginning of a text node is removed if it is the first text node in its container\n     * element or if the previous text node ends with a space character,\n     * * space at the end of the text node is removed if there are two spaces at the end of a node or if next node\n     * starts with a space or if it is the last text node in its container\n     * * nbsps are converted to spaces.\n     *\n     * @param {Node} node DOM text node to process.\n     * @returns {String} Processed data.\n     * @private\n     */\n\n  }, {\n    key: \"_processDataFromDomText\",\n    value: function _processDataFromDomText(node) {\n      var data = node.data;\n\n      if (_hasDomParentOfType(node, this.preElements)) {\n        return getDataWithoutFiller(node);\n      } // Change all consecutive whitespace characters (from the [ \\n\\t\\r] set –\n      // see https://github.com/ckeditor/ckeditor5-engine/issues/822#issuecomment-311670249) to a single space character.\n      // That's how multiple whitespaces are treated when rendered, so we normalize those whitespaces.\n      // We're replacing 1+ (and not 2+) to also normalize singular \\n\\t\\r characters (#822).\n\n\n      data = data.replace(/[ \\n\\t\\r]{1,}/g, ' ');\n\n      var prevNode = this._getTouchingInlineDomNode(node, false);\n\n      var nextNode = this._getTouchingInlineDomNode(node, true);\n\n      var shouldLeftTrim = this._checkShouldLeftTrimDomText(prevNode);\n\n      var shouldRightTrim = this._checkShouldRightTrimDomText(node, nextNode); // If the previous dom text node does not exist or it ends by whitespace character, remove space character from the beginning\n      // of this text node. Such space character is treated as a whitespace.\n\n\n      if (shouldLeftTrim) {\n        data = data.replace(/^ /, '');\n      } // If the next text node does not exist remove space character from the end of this text node.\n\n\n      if (shouldRightTrim) {\n        data = data.replace(/ $/, '');\n      } // At the beginning and end of a block element, Firefox inserts normal space + <br> instead of non-breaking space.\n      // This means that the text node starts/end with normal space instead of non-breaking space.\n      // This causes a problem because the normal space would be removed in `.replace` calls above. To prevent that,\n      // the inline filler is removed only after the data is initially processed (by the `.replace` above). See ckeditor5#692.\n\n\n      data = getDataWithoutFiller(new Text(data)); // At this point we should have removed all whitespaces from DOM text data.\n      //\n      // Now, We will reverse the process that happens in `_processDataFromViewText`.\n      //\n      // We have to change &nbsp; chars, that were in DOM text data because of rendering reasons, to spaces.\n      // First, change all ` \\u00A0` pairs (space + &nbsp;) to two spaces. DOM converter changes two spaces from model/view to\n      // ` \\u00A0` to ensure proper rendering. Since here we convert back, we recognize those pairs and change them back to `  `.\n\n      data = data.replace(/ \\u00A0/g, '  '); // Then, let's change the last nbsp to a space.\n\n      if (/( |\\u00A0)\\u00A0$/.test(data) || !nextNode || nextNode.data && nextNode.data.charAt(0) == ' ') {\n        data = data.replace(/\\u00A0$/, ' ');\n      } // Then, change &nbsp; character that is at the beginning of the text node to space character.\n      // We do that replacement only if this is the first node or the previous node ends on whitespace character.\n\n\n      if (shouldLeftTrim) {\n        data = data.replace(/^\\u00A0/, ' ');\n      } // At this point, all whitespaces should be removed and all &nbsp; created for rendering reasons should be\n      // changed to normal space. All left &nbsp; are &nbsp; inserted intentionally.\n\n\n      return data;\n    }\n    /**\n     * Helper function which checks if a DOM text node, preceded by the given `prevNode` should\n     * be trimmed from the left side.\n     *\n     * @param {Node} prevNode\n     */\n\n  }, {\n    key: \"_checkShouldLeftTrimDomText\",\n    value: function _checkShouldLeftTrimDomText(prevNode) {\n      if (!prevNode) {\n        return true;\n      }\n\n      if (isElement(prevNode)) {\n        return true;\n      }\n\n      return /[^\\S\\u00A0]/.test(prevNode.data.charAt(prevNode.data.length - 1));\n    }\n    /**\n     * Helper function which checks if a DOM text node, succeeded by the given `nextNode` should\n     * be trimmed from the right side.\n     *\n     * @param {Node} node\n     * @param {Node} nextNode\n     */\n\n  }, {\n    key: \"_checkShouldRightTrimDomText\",\n    value: function _checkShouldRightTrimDomText(node, nextNode) {\n      if (nextNode) {\n        return false;\n      }\n\n      return !startsWithFiller(node);\n    }\n    /**\n     * Helper function. For given {@link module:engine/view/text~Text view text node}, it finds previous or next sibling\n     * that is contained in the same container element. If there is no such sibling, `null` is returned.\n     *\n     * @param {module:engine/view/text~Text} node Reference node.\n     * @param {Boolean} getNext\n     * @returns {module:engine/view/text~Text|null} Touching text node or `null` if there is no next or previous touching text node.\n     */\n\n  }, {\n    key: \"_getTouchingViewTextNode\",\n    value: function _getTouchingViewTextNode(node, getNext) {\n      var treeWalker = new ViewTreeWalker({\n        startPosition: getNext ? ViewPosition._createAfter(node) : ViewPosition._createBefore(node),\n        direction: getNext ? 'forward' : 'backward'\n      });\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = treeWalker[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var value = _step5.value;\n\n          // ViewContainerElement is found on a way to next ViewText node, so given `node` was first/last\n          // text node in its container element.\n          if (value.item.is('containerElement')) {\n            return null;\n          } // <br> found – it works like a block boundary, so do not scan further.\n          else if (value.item.is('br')) {\n              return null;\n            } // Found a text node in the same container element.\n            else if (value.item.is('textProxy')) {\n                return value.item;\n              }\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5[\"return\"] != null) {\n            _iterator5[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      return null;\n    }\n    /**\n     * Helper function. For the given text node, it finds the closest touching node which is either\n     * a text node or a `<br>`. The search is terminated at block element boundaries and if a matching node\n     * wasn't found so far, `null` is returned.\n     *\n     * In the following DOM structure:\n     *\n     *\t\t<p>foo<b>bar</b><br>bom</p>\n     *\n     * * `foo` doesn't have its previous touching inline node (`null` is returned),\n     * * `foo`'s next touching inline node is `bar`\n     * * `bar`'s next touching inline node is `<br>`\n     *\n     * This method returns text nodes and `<br>` elements because these types of nodes affect how\n     * spaces in the given text node need to be converted.\n     *\n     * @private\n     * @param {Text} node\n     * @param {Boolean} getNext\n     * @returns {Text|Element|null}\n     */\n\n  }, {\n    key: \"_getTouchingInlineDomNode\",\n    value: function _getTouchingInlineDomNode(node, getNext) {\n      if (!node.parentNode) {\n        return null;\n      }\n\n      var direction = getNext ? 'nextNode' : 'previousNode';\n      var document = node.ownerDocument;\n      var topmostParent = getAncestors(node)[0];\n      var treeWalker = document.createTreeWalker(topmostParent, NodeFilter.SHOW_TEXT | NodeFilter.SHOW_ELEMENT, {\n        acceptNode: function acceptNode(node) {\n          if (isText(node)) {\n            return NodeFilter.FILTER_ACCEPT;\n          }\n\n          if (node.tagName == 'BR') {\n            return NodeFilter.FILTER_ACCEPT;\n          }\n\n          return NodeFilter.FILTER_SKIP;\n        }\n      });\n      treeWalker.currentNode = node;\n      var touchingNode = treeWalker[direction]();\n\n      if (touchingNode !== null) {\n        var lca = getCommonAncestor(node, touchingNode); // If there is common ancestor between the text node and next/prev text node,\n        // and there are no block elements on a way from the text node to that ancestor,\n        // and there are no block elements on a way from next/prev text node to that ancestor...\n\n        if (lca && !_hasDomParentOfType(node, this.blockElements, lca) && !_hasDomParentOfType(touchingNode, this.blockElements, lca)) {\n          // Then they are in the same container element.\n          return touchingNode;\n        }\n      }\n\n      return null;\n    }\n  }]);\n\n  return DomConverter;\n}(); // Helper function.\n// Used to check if given native `Element` or `Text` node has parent with tag name from `types` array.\n//\n// @param {Node} node\n// @param {Array.<String>} types\n// @param {Boolean} [boundaryParent] Can be given if parents should be checked up to a given element (excluding that element).\n// @returns {Boolean} `true` if such parent exists or `false` if it does not.\n\n\nexport { DomConverter as default };\n\nfunction _hasDomParentOfType(node, types, boundaryParent) {\n  var parents = getAncestors(node);\n\n  if (boundaryParent) {\n    parents = parents.slice(parents.indexOf(boundaryParent) + 1);\n  }\n\n  return parents.some(function (parent) {\n    return parent.tagName && types.includes(parent.tagName.toLowerCase());\n  });\n} // A helper that executes given callback for each DOM node's ancestor, starting from the given node\n// and ending in document#documentElement.\n//\n// @param {Node} node\n// @param {Function} callback A callback to be executed for each ancestor.\n\n\nfunction forEachDomNodeAncestor(node, callback) {\n  while (node && node != global.document) {\n    callback(node);\n    node = node.parentNode;\n  }\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/getcommonancestor\n */\nimport getAncestors from './getancestors';\n/**\n * Searches and returns the lowest common ancestor of two given nodes.\n *\n * @param {Node} nodeA First node.\n * @param {Node} nodeB Second node.\n * @returns {Node|DocumentFragment|Document|null} Lowest common ancestor of both nodes or `null` if nodes do not have a common ancestor.\n */\n\nexport default function getCommonAncestor(nodeA, nodeB) {\n  var ancestorsA = getAncestors(nodeA);\n  var ancestorsB = getAncestors(nodeB);\n  var i = 0; // It does not matter which array is shorter.\n\n  while (ancestorsA[i] == ancestorsB[i] && ancestorsA[i]) {\n    i++;\n  }\n\n  return i === 0 ? null : ancestorsA[i - 1];\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/iswindow\n */\n\n/**\n * Checks if the object is a native DOM Window.\n *\n * @param {*} obj\n * @returns {Boolean}\n */\nexport default function isWindow(obj) {\n  var stringifiedObject = Object.prototype.toString.apply(obj); // Returns `true` for the `window` object in browser environments.\n\n  if (stringifiedObject == '[object Window]') {\n    return true;\n  } // Returns `true` for the `window` object in the Electron environment.\n\n\n  if (stringifiedObject == '[object global]') {\n    return true;\n  }\n\n  return false;\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/emittermixin\n */\nimport { default as EmitterMixin, _getEmitterListenedTo, _setEmitterId } from '../emittermixin';\nimport uid from '../uid';\nimport isNode from './isnode';\nimport isWindow from './iswindow';\nimport { extend } from 'lodash-es';\n/**\n * Mixin that injects the DOM events API into its host. It provides the API\n * compatible with {@link module:utils/emittermixin~EmitterMixin}.\n *\n * DOM emitter mixin is by default available in the {@link module:ui/view~View} class,\n * but it can also be mixed into any other class:\n *\n *\t\timport mix from '../utils/mix.js';\n *\t\timport DomEmitterMixin from '../utils/dom/emittermixin.js';\n *\n *\t\tclass SomeView {}\n *\t\tmix( SomeView, DomEmitterMixin );\n *\n *\t\tconst view = new SomeView();\n *\t\tview.listenTo( domElement, ( evt, domEvt ) => {\n *\t\t\tconsole.log( evt, domEvt );\n *\t\t} );\n *\n * @mixin EmitterMixin\n * @mixes module:utils/emittermixin~EmitterMixin\n * @implements module:utils/dom/emittermixin~Emitter\n */\n\nvar DomEmitterMixin = extend({}, EmitterMixin, {\n  /**\n   * Registers a callback function to be executed when an event is fired in a specific Emitter or DOM Node.\n   * It is backwards compatible with {@link module:utils/emittermixin~EmitterMixin#listenTo}.\n   *\n   * @param {module:utils/emittermixin~Emitter|Node} emitter The object that fires the event.\n   * @param {String} event The name of the event.\n   * @param {Function} callback The function to be called on event.\n   * @param {Object} [options={}] Additional options.\n   * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of this event callback. The higher\n   * the priority value the sooner the callback will be fired. Events having the same priority are called in the\n   * order they were added.\n   * @param {Boolean} [options.useCapture=false] Indicates that events of this type will be dispatched to the registered\n   * listener before being dispatched to any EventTarget beneath it in the DOM tree.\n   */\n  listenTo: function listenTo(emitter) {\n    var _EmitterMixin$listenT;\n\n    for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      rest[_key - 1] = arguments[_key];\n    }\n\n    // Check if emitter is an instance of DOM Node. If so, replace the argument with\n    // corresponding ProxyEmitter (or create one if not existing).\n    if (isNode(emitter) || isWindow(emitter)) {\n      var proxy = this._getProxyEmitter(emitter) || new ProxyEmitter(emitter);\n      proxy.attach.apply(proxy, rest);\n      emitter = proxy;\n    } // Execute parent class method with Emitter (or ProxyEmitter) instance.\n\n\n    (_EmitterMixin$listenT = EmitterMixin.listenTo).call.apply(_EmitterMixin$listenT, [this, emitter].concat(rest));\n  },\n\n  /**\n   * Stops listening for events. It can be used at different levels:\n   * It is backwards compatible with {@link module:utils/emittermixin~EmitterMixin#listenTo}.\n   *\n   * * To stop listening to a specific callback.\n   * * To stop listening to a specific event.\n   * * To stop listening to all events fired by a specific object.\n   * * To stop listening to all events fired by all object.\n   *\n   * @param {module:utils/emittermixin~Emitter|Node} [emitter] The object to stop listening to. If omitted, stops it for all objects.\n   * @param {String} [event] (Requires the `emitter`) The name of the event to stop listening to. If omitted, stops it\n   * for all events from `emitter`.\n   * @param {Function} [callback] (Requires the `event`) The function to be removed from the call list for the given\n   * `event`.\n   */\n  stopListening: function stopListening(emitter, event, callback) {\n    // Check if emitter is an instance of DOM Node. If so, replace the argument with corresponding ProxyEmitter.\n    if (isNode(emitter) || isWindow(emitter)) {\n      var proxy = this._getProxyEmitter(emitter); // Element has no listeners.\n\n\n      if (!proxy) {\n        return;\n      }\n\n      emitter = proxy;\n    } // Execute parent class method with Emitter (or ProxyEmitter) instance.\n\n\n    EmitterMixin.stopListening.call(this, emitter, event, callback);\n\n    if (emitter instanceof ProxyEmitter) {\n      emitter.detach(event);\n    }\n  },\n\n  /**\n   * Retrieves ProxyEmitter instance for given DOM Node residing in this Host.\n   *\n   * @pivate\n   * @param {Node} node DOM Node of the ProxyEmitter.\n   * @returns {module:utils/dom/emittermixin~ProxyEmitter} ProxyEmitter instance or null.\n   */\n  _getProxyEmitter: function _getProxyEmitter(node) {\n    return _getEmitterListenedTo(this, getNodeUID(node));\n  }\n});\nexport default DomEmitterMixin;\n/**\n * Creates a ProxyEmitter instance. Such an instance is a bridge between a DOM Node firing events\n * and any Host listening to them. It is backwards compatible with {@link module:utils/emittermixin~EmitterMixin#on}.\n *\n *                                  listenTo( click, ... )\n *                    +-----------------------------------------+\n *                    |              stopListening( ... )       |\n *     +----------------------------+                           |             addEventListener( click, ... )\n *     | Host                       |                           |   +---------------------------------------------+\n *     +----------------------------+                           |   |       removeEventListener( click, ... )     |\n *     | _listeningTo: {            |                +----------v-------------+                                   |\n *     |   UID: {                   |                | ProxyEmitter           |                                   |\n *     |     emitter: ProxyEmitter, |                +------------------------+                      +------------v----------+\n *     |     callbacks: {           |                | events: {              |                      | Node (HTMLElement)    |\n *     |       click: [ callbacks ] |                |   click: [ callbacks ] |                      +-----------------------+\n *     |     }                      |                | },                     |                      | data-ck-expando: UID  |\n *     |   }                        |                | _domNode: Node,        |                      +-----------------------+\n *     | }                          |                | _domListeners: {},     |                                   |\n *     | +------------------------+ |                | _emitterId: UID        |                                   |\n *     | | DomEmitterMixin        | |                +--------------^---------+                                   |\n *     | +------------------------+ |                           |   |                                             |\n *     +--------------^-------------+                           |   +---------------------------------------------+\n *                    |                                         |                  click (DOM Event)\n *                    +-----------------------------------------+\n *                                fire( click, DOM Event )\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n * @implements module:utils/dom/emittermixin~Emitter\n * @private\n */\n\nvar ProxyEmitter =\n/**\n * @param {Node} node DOM Node that fires events.\n * @returns {Object} ProxyEmitter instance bound to the DOM Node.\n */\nfunction ProxyEmitter(node) {\n  _classCallCheck(this, ProxyEmitter);\n\n  // Set emitter ID to match DOM Node \"expando\" property.\n  _setEmitterId(this, getNodeUID(node)); // Remember the DOM Node this ProxyEmitter is bound to.\n\n\n  this._domNode = node;\n};\n\nextend(ProxyEmitter.prototype, EmitterMixin, {\n  /**\n   * Collection of native DOM listeners.\n   *\n   * @private\n   * @member {Object} module:utils/dom/emittermixin~ProxyEmitter#_domListeners\n   */\n\n  /**\n   * Registers a callback function to be executed when an event is fired.\n   *\n   * It attaches a native DOM listener to the DOM Node. When fired,\n   * a corresponding Emitter event will also fire with DOM Event object as an argument.\n   *\n   * @method module:utils/dom/emittermixin~ProxyEmitter#attach\n   * @param {String} event The name of the event.\n   * @param {Function} callback The function to be called on event.\n   * @param {Object} [options={}] Additional options.\n   * @param {Boolean} [options.useCapture=false] Indicates that events of this type will be dispatched to the registered\n   * listener before being dispatched to any EventTarget beneath it in the DOM tree.\n   */\n  attach: function attach(event, callback) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    // If the DOM Listener for given event already exist it is pointless\n    // to attach another one.\n    if (this._domListeners && this._domListeners[event]) {\n      return;\n    }\n\n    var domListener = this._createDomListener(event, !!options.useCapture); // Attach the native DOM listener to DOM Node.\n\n\n    this._domNode.addEventListener(event, domListener, !!options.useCapture);\n\n    if (!this._domListeners) {\n      this._domListeners = {};\n    } // Store the native DOM listener in this ProxyEmitter. It will be helpful\n    // when stopping listening to the event.\n\n\n    this._domListeners[event] = domListener;\n  },\n\n  /**\n   * Stops executing the callback on the given event.\n   *\n   * @method module:utils/dom/emittermixin~ProxyEmitter#detach\n   * @param {String} event The name of the event.\n   */\n  detach: function detach(event) {\n    var events; // Remove native DOM listeners which are orphans. If no callbacks\n    // are awaiting given event, detach native DOM listener from DOM Node.\n    // See: {@link attach}.\n\n    if (this._domListeners[event] && (!(events = this._events[event]) || !events.callbacks.length)) {\n      this._domListeners[event].removeListener();\n    }\n  },\n\n  /**\n   * Creates a native DOM listener callback. When the native DOM event\n   * is fired it will fire corresponding event on this ProxyEmitter.\n   * Note: A native DOM Event is passed as an argument.\n   *\n   * @private\n   * @method module:utils/dom/emittermixin~ProxyEmitter#_createDomListener\n   * @param {String} event The name of the event.\n   * @param {Boolean} useCapture Indicates whether the listener was created for capturing event.\n   * @returns {Function} The DOM listener callback.\n   */\n  _createDomListener: function _createDomListener(event, useCapture) {\n    var _this = this;\n\n    var domListener = function domListener(domEvt) {\n      _this.fire(event, domEvt);\n    }; // Supply the DOM listener callback with a function that will help\n    // detach it from the DOM Node, when it is no longer necessary.\n    // See: {@link detach}.\n\n\n    domListener.removeListener = function () {\n      _this._domNode.removeEventListener(event, domListener, useCapture);\n\n      delete _this._domListeners[event];\n    };\n\n    return domListener;\n  }\n}); // Gets an unique DOM Node identifier. The identifier will be set if not defined.\n//\n// @private\n// @param {Node} node\n// @returns {String} UID for given DOM Node.\n\nfunction getNodeUID(node) {\n  return node['data-ck-expando'] || (node['data-ck-expando'] = uid());\n}\n/**\n * Interface representing classes which mix in {@link module:utils/dom/emittermixin~EmitterMixin}.\n *\n * @interface Emitter\n */","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/observer\n */\nimport DomEmitterMixin from '@ckeditor/ckeditor5-utils/src/dom/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n/**\n * Abstract base observer class. Observers are classes which listen to DOM events, do the preliminary\n * processing and fire events on the {@link module:engine/view/document~Document} objects.\n * Observers can also add features to the view, for instance by updating its status or marking elements\n * which need refresh on DOM events.\n *\n * @abstract\n */\n\nvar Observer =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of the observer.\n   *\n   * @param {module:engine/view/view~View} view\n   */\n  function Observer(view) {\n    _classCallCheck(this, Observer);\n\n    /**\n     * Instance of the view controller.\n     *\n     * @readonly\n     * @member {module:engine/view/view~View}\n     */\n    this.view = view;\n    /**\n     * Reference to the {@link module:engine/view/document~Document} object.\n     *\n     * @readonly\n     * @member {module:engine/view/document~Document}\n     */\n\n    this.document = view.document;\n    /**\n     * State of the observer. If it is disabled events will not be fired.\n     *\n     * @readonly\n     * @member {Boolean}\n     */\n\n    this.isEnabled = false;\n  }\n  /**\n   * Enables the observer. This method is called when the observer is registered to the\n   * {@link module:engine/view/view~View} and after {@link module:engine/view/view~View#forceRender rendering}\n   * (all observers are {@link #disable disabled} before rendering).\n   *\n   * A typical use case for disabling observers is that mutation observers need to be disabled for the rendering.\n   * However, a child class may not need to be disabled, so it can implement an empty method.\n   *\n   * @see module:engine/view/observer/observer~Observer#disable\n   */\n\n\n  _createClass(Observer, [{\n    key: \"enable\",\n    value: function enable() {\n      this.isEnabled = true;\n    }\n    /**\n     * Disables the observer. This method is called before\n     * {@link module:engine/view/view~View#forceRender rendering} to prevent firing events during rendering.\n     *\n     * @see module:engine/view/observer/observer~Observer#enable\n     */\n\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      this.isEnabled = false;\n    }\n    /**\n     * Disables and destroys the observer, among others removes event listeners created by the observer.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.disable();\n      this.stopListening();\n    }\n    /**\n     * Starts observing the given root element.\n     *\n     * @method #observe\n     * @param {HTMLElement} domElement\n     * @param {String} name The name of the root element.\n     */\n\n  }]);\n\n  return Observer;\n}();\n\nexport { Observer as default };\nmix(Observer, DomEmitterMixin);","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nexport default setCacheAdd;\n","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nexport default setCacheHas;\n","import MapCache from './_MapCache.js';\nimport setCacheAdd from './_setCacheAdd.js';\nimport setCacheHas from './_setCacheHas.js';\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nexport default SetCache;\n","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport default arraySome;\n","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nexport default cacheHas;\n","import SetCache from './_SetCache.js';\nimport arraySome from './_arraySome.js';\nimport cacheHas from './_cacheHas.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nexport default equalArrays;\n","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nexport default mapToArray;\n","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nexport default setToArray;\n","import Symbol from './_Symbol.js';\nimport Uint8Array from './_Uint8Array.js';\nimport eq from './eq.js';\nimport equalArrays from './_equalArrays.js';\nimport mapToArray from './_mapToArray.js';\nimport setToArray from './_setToArray.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nexport default equalByTag;\n","import getAllKeys from './_getAllKeys.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nexport default equalObjects;\n","import Stack from './_Stack.js';\nimport equalArrays from './_equalArrays.js';\nimport equalByTag from './_equalByTag.js';\nimport equalObjects from './_equalObjects.js';\nimport getTag from './_getTag.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nexport default baseIsEqualDeep;\n","import baseIsEqualDeep from './_baseIsEqualDeep.js';\nimport isObjectLike from './isObjectLike.js';\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nexport default baseIsEqual;\n","import baseIsEqual from './_baseIsEqual.js';\n\n/**\n * This method is like `_.isEqual` except that it accepts `customizer` which\n * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n * are handled by the method instead. The `customizer` is invoked with up to\n * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * function isGreeting(value) {\n *   return /^h(?:i|ello)$/.test(value);\n * }\n *\n * function customizer(objValue, othValue) {\n *   if (isGreeting(objValue) && isGreeting(othValue)) {\n *     return true;\n *   }\n * }\n *\n * var array = ['hello', 'goodbye'];\n * var other = ['hi', 'goodbye'];\n *\n * _.isEqualWith(array, other, customizer);\n * // => true\n */\nfunction isEqualWith(value, other, customizer) {\n  customizer = typeof customizer == 'function' ? customizer : undefined;\n  var result = customizer ? customizer(value, other) : undefined;\n  return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n}\n\nexport default isEqualWith;\n","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/mutationobserver\n */\n\n/* globals window */\nimport Observer from './observer';\nimport ViewSelection from '../selection';\nimport { startsWithFiller, getDataWithoutFiller } from '../filler';\nimport { isEqualWith } from 'lodash-es';\n/**\n * Mutation observer class observes changes in the DOM, fires {@link module:engine/view/document~Document#event:mutations} event, mark view\n * elements as changed and call {@link module:engine/view/renderer~Renderer#render}.\n * Because all mutated nodes are marked as \"to be rendered\" and the\n * {@link module:engine/view/renderer~Renderer#render} is called, all changes will be reverted, unless the mutation will be handled by the\n * {@link module:engine/view/document~Document#event:mutations} event listener. It means user will see only handled changes, and the editor\n * will block all changes which are not handled.\n *\n * Mutation Observer also take care of reducing number of mutations which are fired. It removes duplicates and\n * mutations on elements which do not have corresponding view elements. Also\n * {@link module:engine/view/observer/mutationobserver~MutatedText text mutation} is fired only if parent element do not change child list.\n *\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\n *\n * @extends module:engine/view/observer/observer~Observer\n */\n\nvar MutationObserver =\n/*#__PURE__*/\nfunction (_Observer) {\n  _inherits(MutationObserver, _Observer);\n\n  function MutationObserver(view) {\n    var _this;\n\n    _classCallCheck(this, MutationObserver);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MutationObserver).call(this, view));\n    /**\n     * Native mutation observer config.\n     *\n     * @private\n     * @member {Object}\n     */\n\n    _this._config = {\n      childList: true,\n      characterData: true,\n      characterDataOldValue: true,\n      subtree: true\n    };\n    /**\n     * Reference to the {@link module:engine/view/view~View#domConverter}.\n     *\n     * @member {module:engine/view/domconverter~DomConverter}\n     */\n\n    _this.domConverter = view.domConverter;\n    /**\n     * Reference to the {@link module:engine/view/view~View#_renderer}.\n     *\n     * @member {module:engine/view/renderer~Renderer}\n     */\n\n    _this.renderer = view._renderer;\n    /**\n     * Observed DOM elements.\n     *\n     * @private\n     * @member {Array.<HTMLElement>}\n     */\n\n    _this._domElements = [];\n    /**\n     * Native mutation observer.\n     *\n     * @private\n     * @member {MutationObserver}\n     */\n\n    _this._mutationObserver = new window.MutationObserver(_this._onMutations.bind(_assertThisInitialized(_this)));\n    return _this;\n  }\n  /**\n   * Synchronously fires {@link module:engine/view/document~Document#event:mutations} event with all mutations in record queue.\n   * At the same time empties the queue so mutations will not be fired twice.\n   */\n\n\n  _createClass(MutationObserver, [{\n    key: \"flush\",\n    value: function flush() {\n      this._onMutations(this._mutationObserver.takeRecords());\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"observe\",\n    value: function observe(domElement) {\n      this._domElements.push(domElement);\n\n      if (this.isEnabled) {\n        this._mutationObserver.observe(domElement, this._config);\n      }\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      _get(_getPrototypeOf(MutationObserver.prototype), \"enable\", this).call(this);\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this._domElements[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var domElement = _step.value;\n\n          this._mutationObserver.observe(domElement, this._config);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      _get(_getPrototypeOf(MutationObserver.prototype), \"disable\", this).call(this);\n\n      this._mutationObserver.disconnect();\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(MutationObserver.prototype), \"destroy\", this).call(this);\n\n      this._mutationObserver.disconnect();\n    }\n    /**\n     * Handles mutations. Deduplicates, mark view elements to sync, fire event and call render.\n     *\n     * @private\n     * @param {Array.<Object>} domMutations Array of native mutations.\n     */\n\n  }, {\n    key: \"_onMutations\",\n    value: function _onMutations(domMutations) {\n      // As a result of this.flush() we can have an empty collection.\n      if (domMutations.length === 0) {\n        return;\n      }\n\n      var domConverter = this.domConverter; // Use map and set for deduplication.\n\n      var mutatedTexts = new Map();\n      var mutatedElements = new Set(); // Handle `childList` mutations first, so we will be able to check if the `characterData` mutation is in the\n      // element with changed structure anyway.\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = domMutations[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var mutation = _step2.value;\n\n          if (mutation.type === 'childList') {\n            var element = domConverter.mapDomToView(mutation.target); // Do not collect mutations from UIElements.\n\n            if (element && element.is('uiElement')) {\n              continue;\n            }\n\n            if (element && !this._isBogusBrMutation(mutation)) {\n              mutatedElements.add(element);\n            }\n          }\n        } // Handle `characterData` mutations later, when we have the full list of nodes which changed structure.\n\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = domMutations[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var _mutation = _step3.value;\n\n          var _element = domConverter.mapDomToView(_mutation.target); // Do not collect mutations from UIElements.\n\n\n          if (_element && _element.is('uiElement')) {\n            continue;\n          }\n\n          if (_mutation.type === 'characterData') {\n            var text = domConverter.findCorrespondingViewText(_mutation.target);\n\n            if (text && !mutatedElements.has(text.parent)) {\n              // Use text as a key, for deduplication. If there will be another mutation on the same text element\n              // we will have only one in the map.\n              mutatedTexts.set(text, {\n                type: 'text',\n                oldText: text.data,\n                newText: getDataWithoutFiller(_mutation.target),\n                node: text\n              });\n            } // When we added first letter to the text node which had only inline filler, for the DOM it is mutation\n            // on text, but for the view, where filler text node did not existed, new text node was created, so we\n            // need to fire 'children' mutation instead of 'text'.\n            else if (!text && startsWithFiller(_mutation.target)) {\n                mutatedElements.add(domConverter.mapDomToView(_mutation.target.parentNode));\n              }\n          }\n        } // Now we build the list of mutations to fire and mark elements. We did not do it earlier to avoid marking the\n        // same node multiple times in case of duplication.\n        // List of mutations we will fire.\n\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n            _iterator3[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      var viewMutations = [];\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = mutatedTexts.values()[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var mutatedText = _step4.value;\n          this.renderer.markToSync('text', mutatedText.node);\n          viewMutations.push(mutatedText);\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4[\"return\"] != null) {\n            _iterator4[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = mutatedElements[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var viewElement = _step5.value;\n          var domElement = domConverter.mapViewToDom(viewElement);\n          var viewChildren = Array.from(viewElement.getChildren());\n          var newViewChildren = Array.from(domConverter.domChildrenToView(domElement, {\n            withChildren: false\n          })); // It may happen that as a result of many changes (sth was inserted and then removed),\n          // both elements haven't really changed. #1031\n\n          if (!isEqualWith(viewChildren, newViewChildren, sameNodes)) {\n            this.renderer.markToSync('children', viewElement);\n            viewMutations.push({\n              type: 'children',\n              oldChildren: viewChildren,\n              newChildren: newViewChildren,\n              node: viewElement\n            });\n          }\n        } // Retrieve `domSelection` using `ownerDocument` of one of mutated nodes.\n        // There should not be simultaneous mutation in multiple documents, so it's fine.\n\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5[\"return\"] != null) {\n            _iterator5[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      var domSelection = domMutations[0].target.ownerDocument.getSelection();\n      var viewSelection = null;\n\n      if (domSelection && domSelection.anchorNode) {\n        // If `domSelection` is inside a dom node that is already bound to a view node from view tree, get\n        // corresponding selection in the view and pass it together with `viewMutations`. The `viewSelection` may\n        // be used by features handling mutations.\n        // Only one range is supported.\n        var viewSelectionAnchor = domConverter.domPositionToView(domSelection.anchorNode, domSelection.anchorOffset);\n        var viewSelectionFocus = domConverter.domPositionToView(domSelection.focusNode, domSelection.focusOffset); // Anchor and focus has to be properly mapped to view.\n\n        if (viewSelectionAnchor && viewSelectionFocus) {\n          viewSelection = new ViewSelection(viewSelectionAnchor);\n          viewSelection.setFocus(viewSelectionFocus);\n        }\n      }\n\n      this.document.fire('mutations', viewMutations, viewSelection); // If nothing changes on `mutations` event, at this point we have \"dirty DOM\" (changed) and de-synched\n      // view (which has not been changed). In order to \"reset DOM\" we render the view again.\n\n      this.view.forceRender();\n\n      function sameNodes(child1, child2) {\n        // First level of comparison (array of children vs array of children) – use the Lodash's default behavior.\n        if (Array.isArray(child1)) {\n          return;\n        } // Elements.\n\n\n        if (child1 === child2) {\n          return true;\n        } // Texts.\n        else if (child1.is('text') && child2.is('text')) {\n            return child1.data === child2.data;\n          } // Not matching types.\n\n\n        return false;\n      }\n    }\n    /**\n     * Checks if mutation was generated by the browser inserting bogus br on the end of the block element.\n     * Such mutations are generated while pressing space or performing native spellchecker correction\n     * on the end of the block element in Firefox browser.\n     *\n     * @private\n     * @param {Object} mutation Native mutation object.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"_isBogusBrMutation\",\n    value: function _isBogusBrMutation(mutation) {\n      var addedNode = null; // Check if mutation added only one node on the end of its parent.\n\n      if (mutation.nextSibling === null && mutation.removedNodes.length === 0 && mutation.addedNodes.length == 1) {\n        addedNode = this.domConverter.domToView(mutation.addedNodes[0], {\n          withChildren: false\n        });\n      }\n\n      return addedNode && addedNode.is('element', 'br');\n    }\n  }]);\n\n  return MutationObserver;\n}(Observer);\n/**\n * Fired when mutation occurred. If tree view is not changed on this event, DOM will be reverted to the state before\n * mutation, so all changes which should be applied, should be handled on this event.\n *\n * Introduced by {@link module:engine/view/observer/mutationobserver~MutationObserver}.\n *\n * Note that because {@link module:engine/view/observer/mutationobserver~MutationObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/mutationobserver~MutationObserver\n * @event module:engine/view/document~Document#event:mutations\n * @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|module:engine/view/observer/mutationobserver~MutatedChildren>}\n * viewMutations Array of mutations.\n * For mutated texts it will be {@link module:engine/view/observer/mutationobserver~MutatedText} and for mutated elements it will be\n * {@link module:engine/view/observer/mutationobserver~MutatedChildren}. You can recognize the type based on the `type` property.\n * @param {module:engine/view/selection~Selection|null} viewSelection View selection that is a result of converting DOM selection to view.\n * Keep in\n * mind that the DOM selection is already \"updated\", meaning that it already acknowledges changes done in mutation.\n */\n\n/**\n * Mutation item for text.\n *\n * @see module:engine/view/document~Document#event:mutations\n * @see module:engine/view/observer/mutationobserver~MutatedChildren\n *\n * @typedef {Object} module:engine/view/observer/mutationobserver~MutatedText\n *\n * @property {String} type For text mutations it is always 'text'.\n * @property {module:engine/view/text~Text} node Mutated text node.\n * @property {String} oldText Old text.\n * @property {String} newText New text.\n */\n\n/**\n * Mutation item for child nodes.\n *\n * @see module:engine/view/document~Document#event:mutations\n * @see module:engine/view/observer/mutationobserver~MutatedText\n *\n * @typedef {Object} module:engine/view/observer/mutationobserver~MutatedChildren\n *\n * @property {String} type For child nodes mutations it is always 'children'.\n * @property {module:engine/view/element~Element} node Parent of the mutated children.\n * @property {Array.<module:engine/view/node~Node>} oldChildren Old child nodes.\n * @property {Array.<module:engine/view/node~Node>} newChildren New child nodes.\n */\n\n\nexport { MutationObserver as default };","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/domeventdata\n */\nimport { extend } from 'lodash-es';\n/**\n * Information about a DOM event in context of the {@link module:engine/view/document~Document}.\n * It wraps the native event, which usually should not be used as the wrapper contains\n * additional data (like key code for keyboard events).\n */\n\nvar DomEventData =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {module:engine/view/view~View} view The instance of the view controller.\n   * @param {Event} domEvent The DOM event.\n   * @param {Object} [additionalData] Additional properties that the instance should contain.\n   */\n  function DomEventData(view, domEvent, additionalData) {\n    _classCallCheck(this, DomEventData);\n\n    /**\n     * Instance of the view controller.\n     *\n     * @readonly\n     * @member {module:engine/view/view~View} module:engine/view/observer/observer~Observer.DomEvent#view\n     */\n    this.view = view;\n    /**\n     * The instance of the document.\n     *\n     * @readonly\n     * @member {module:engine/view/document~Document} module:engine/view/observer/observer~Observer.DomEvent#document\n     */\n\n    this.document = view.document;\n    /**\n     * The DOM event.\n     *\n     * @readonly\n     * @member {Event} module:engine/view/observer/observer~Observer.DomEvent#domEvent\n     */\n\n    this.domEvent = domEvent;\n    /**\n     * The DOM target.\n     *\n     * @readonly\n     * @member {HTMLElement} module:engine/view/observer/observer~Observer.DomEvent#target\n     */\n\n    this.domTarget = domEvent.target;\n    extend(this, additionalData);\n  }\n  /**\n   * The tree view element representing the target.\n   *\n   * @readonly\n   * @type module:engine/view/element~Element\n   */\n\n\n  _createClass(DomEventData, [{\n    key: \"preventDefault\",\n\n    /**\n     * Prevents the native's event default action.\n     */\n    value: function preventDefault() {\n      this.domEvent.preventDefault();\n    }\n    /**\n     * Stops native event propagation.\n     */\n\n  }, {\n    key: \"stopPropagation\",\n    value: function stopPropagation() {\n      this.domEvent.stopPropagation();\n    }\n  }, {\n    key: \"target\",\n    get: function get() {\n      return this.view.domConverter.mapDomToView(this.domTarget);\n    }\n  }]);\n\n  return DomEventData;\n}();\n\nexport { DomEventData as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/domeventobserver\n */\nimport Observer from './observer';\nimport DomEventData from './domeventdata';\n/**\n * Base class for DOM event observers. This class handles\n * {@link module:engine/view/observer/observer~Observer#observe adding} listeners to DOM elements,\n * {@link module:engine/view/observer/observer~Observer#disable disabling} and\n * {@link module:engine/view/observer/observer~Observer#enable re-enabling} events.\n * Child class needs to define\n * {@link module:engine/view/observer/domeventobserver~DomEventObserver#domEventType DOM event type} and\n * {@link module:engine/view/observer/domeventobserver~DomEventObserver#onDomEvent callback}.\n *\n * For instance:\n *\n *\t\tclass ClickObserver extends DomEventObserver {\n *\t\t\t// It can also be defined as a normal property in the constructor.\n *\t\t\tget domEventType() {\n *\t\t\t\treturn 'click';\n *\t\t\t}\n *\n *\t\t\tonDomEvent( domEvent ) {\n *\t\t\t\tthis.fire( 'click', domEvent );\n *\t\t\t}\n *\t\t}\n *\n * @extends module:engine/view/observer/observer~Observer\n */\n\nvar DomEventObserver =\n/*#__PURE__*/\nfunction (_Observer) {\n  _inherits(DomEventObserver, _Observer);\n\n  /**\n   * Type of the DOM event the observer should listen on. Array of types can be defined\n   * if the obsever should listen to multiple DOM events.\n   *\n   * @readonly\n   * @member {String|Array.<String>} #domEventType\n   */\n\n  /**\n   * Callback which should be called when the DOM event occurred. Note that the callback will not be called if\n   * observer {@link #isEnabled is not enabled}.\n   *\n   * @see #domEventType\n   * @abstract\n   * @method #onDomEvent\n   */\n\n  /**\n   * @inheritDoc\n   */\n  function DomEventObserver(view) {\n    var _this;\n\n    _classCallCheck(this, DomEventObserver);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DomEventObserver).call(this, view));\n    /**\n     * If set to `true` DOM events will be listened on the capturing phase.\n     * Default value is `false`.\n     *\n     * @member {Boolean}\n     */\n\n    _this.useCapture = false;\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(DomEventObserver, [{\n    key: \"observe\",\n    value: function observe(domElement) {\n      var _this2 = this;\n\n      var types = typeof this.domEventType == 'string' ? [this.domEventType] : this.domEventType;\n      types.forEach(function (type) {\n        _this2.listenTo(domElement, type, function (eventInfo, domEvent) {\n          if (_this2.isEnabled) {\n            _this2.onDomEvent(domEvent);\n          }\n        }, {\n          useCapture: _this2.useCapture\n        });\n      });\n    }\n    /**\n     * Calls `Document#fire()` if observer {@link #isEnabled is enabled}.\n     *\n     * @see module:utils/emittermixin~EmitterMixin#fire\n     * @param {String} eventType The event type (name).\n     * @param {Event} domEvent The DOM event.\n     * @param {Object} [additionalData] The additional data which should extend the\n     * {@link module:engine/view/observer/domeventdata~DomEventData event data} object.\n     */\n\n  }, {\n    key: \"fire\",\n    value: function fire(eventType, domEvent, additionalData) {\n      if (this.isEnabled) {\n        this.document.fire(eventType, new DomEventData(this.view, domEvent, additionalData));\n      }\n    }\n  }]);\n\n  return DomEventObserver;\n}(Observer);\n\nexport { DomEventObserver as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/keyobserver\n */\nimport DomEventObserver from './domeventobserver';\nimport { getCode } from '@ckeditor/ckeditor5-utils/src/keyboard';\n/**\n * Observer for events connected with pressing keyboard keys.\n *\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\n\nvar KeyObserver =\n/*#__PURE__*/\nfunction (_DomEventObserver) {\n  _inherits(KeyObserver, _DomEventObserver);\n\n  function KeyObserver(view) {\n    var _this;\n\n    _classCallCheck(this, KeyObserver);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(KeyObserver).call(this, view));\n    _this.domEventType = ['keydown', 'keyup'];\n    return _this;\n  }\n\n  _createClass(KeyObserver, [{\n    key: \"onDomEvent\",\n    value: function onDomEvent(domEvt) {\n      this.fire(domEvt.type, domEvt, {\n        keyCode: domEvt.keyCode,\n        altKey: domEvt.altKey,\n        ctrlKey: domEvt.ctrlKey || domEvt.metaKey,\n        shiftKey: domEvt.shiftKey,\n\n        get keystroke() {\n          return getCode(this);\n        }\n\n      });\n    }\n  }]);\n\n  return KeyObserver;\n}(DomEventObserver);\n/**\n * Fired when a key has been pressed.\n *\n * Introduced by {@link module:engine/view/observer/keyobserver~KeyObserver}.\n *\n * Note that because {@link module:engine/view/observer/keyobserver~KeyObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/keyobserver~KeyObserver\n * @event module:engine/view/document~Document#event:keydown\n * @param {module:engine/view/observer/keyobserver~KeyEventData} keyEventData\n */\n\n/**\n * Fired when a key has been released.\n *\n * Introduced by {@link module:engine/view/observer/keyobserver~KeyObserver}.\n *\n * Note that because {@link module:engine/view/observer/keyobserver~KeyObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/keyobserver~KeyObserver\n * @event module:engine/view/document~Document#event:keyup\n * @param {module:engine/view/observer/keyobserver~KeyEventData} keyEventData\n */\n\n/**\n * The value of both events - {@link module:engine/view/document~Document#event:keydown} and\n * {@link module:engine/view/document~Document#event:keyup}.\n *\n * @class module:engine/view/observer/keyobserver~KeyEventData\n * @extends module:engine/view/observer/domeventdata~DomEventData\n * @implements module:utils/keyboard~KeystrokeInfo\n */\n\n/**\n * Code of the whole keystroke. See {@link module:utils/keyboard~getCode}.\n *\n * @readonly\n * @member {Number} module:engine/view/observer/keyobserver~KeyEventData#keystroke\n */\n\n\nexport { KeyObserver as default };","import root from './_root.js';\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nexport default now;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","import isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import isObject from './isObject.js';\nimport now from './now.js';\nimport toNumber from './toNumber.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nexport default debounce;\n","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/fakeselectionobserver\n */\nimport Observer from './observer';\nimport ViewSelection from '../selection';\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\nimport { debounce } from 'lodash-es';\n/**\n * Fake selection observer class. If view selection is fake it is placed in dummy DOM container. This observer listens\n * on {@link module:engine/view/document~Document#event:keydown keydown} events and handles moving fake view selection to the correct place\n * if arrow keys are pressed.\n * Fires {@link module:engine/view/document~Document#event:selectionChange selectionChange event} simulating natural behaviour of\n * {@link module:engine/view/observer/selectionobserver~SelectionObserver SelectionObserver}.\n *\n * @extends module:engine/view/observer/observer~Observer.Observer\n */\n\nvar FakeSelectionObserver =\n/*#__PURE__*/\nfunction (_Observer) {\n  _inherits(FakeSelectionObserver, _Observer);\n\n  /**\n   * Creates new FakeSelectionObserver instance.\n   *\n   * @param {module:engine/view/view~View} view\n   */\n  function FakeSelectionObserver(view) {\n    var _this;\n\n    _classCallCheck(this, FakeSelectionObserver);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FakeSelectionObserver).call(this, view));\n    /**\n     * Fires debounced event `selectionChangeDone`. It uses `lodash#debounce` method to delay function call.\n     *\n     * @private\n     * @param {Object} data Selection change data.\n     * @method #_fireSelectionChangeDoneDebounced\n     */\n\n    _this._fireSelectionChangeDoneDebounced = debounce(function (data) {\n      return _this.document.fire('selectionChangeDone', data);\n    }, 200);\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(FakeSelectionObserver, [{\n    key: \"observe\",\n    value: function observe() {\n      var _this2 = this;\n\n      var document = this.document;\n      document.on('keydown', function (eventInfo, data) {\n        var selection = document.selection;\n\n        if (selection.isFake && _isArrowKeyCode(data.keyCode) && _this2.isEnabled) {\n          // Prevents default key down handling - no selection change will occur.\n          data.preventDefault();\n\n          _this2._handleSelectionMove(data.keyCode);\n        }\n      }, {\n        priority: 'lowest'\n      });\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(FakeSelectionObserver.prototype), \"destroy\", this).call(this);\n\n      this._fireSelectionChangeDoneDebounced.cancel();\n    }\n    /**\n     * Handles collapsing view selection according to given key code. If left or up key is provided - new selection will be\n     * collapsed to left. If right or down key is pressed - new selection will be collapsed to right.\n     *\n     * This method fires {@link module:engine/view/document~Document#event:selectionChange} and\n     * {@link module:engine/view/document~Document#event:selectionChangeDone} events imitating behaviour of\n     * {@link module:engine/view/observer/selectionobserver~SelectionObserver}.\n     *\n     * @private\n     * @param {Number} keyCode\n     * @fires module:engine/view/document~Document#event:selectionChange\n     * @fires module:engine/view/document~Document#event:selectionChangeDone\n     */\n\n  }, {\n    key: \"_handleSelectionMove\",\n    value: function _handleSelectionMove(keyCode) {\n      var selection = this.document.selection;\n      var newSelection = new ViewSelection(selection.getRanges(), {\n        backward: selection.isBackward,\n        fake: false\n      }); // Left or up arrow pressed - move selection to start.\n\n      if (keyCode == keyCodes.arrowleft || keyCode == keyCodes.arrowup) {\n        newSelection.setTo(newSelection.getFirstPosition());\n      } // Right or down arrow pressed - move selection to end.\n\n\n      if (keyCode == keyCodes.arrowright || keyCode == keyCodes.arrowdown) {\n        newSelection.setTo(newSelection.getLastPosition());\n      }\n\n      var data = {\n        oldSelection: selection,\n        newSelection: newSelection,\n        domSelection: null\n      }; // Fire dummy selection change event.\n\n      this.document.fire('selectionChange', data); // Call` #_fireSelectionChangeDoneDebounced` every time when `selectionChange` event is fired.\n      // This function is debounced what means that `selectionChangeDone` event will be fired only when\n      // defined int the function time will elapse since the last time the function was called.\n      // So `selectionChangeDone` will be fired when selection will stop changing.\n\n      this._fireSelectionChangeDoneDebounced(data);\n    }\n  }]);\n\n  return FakeSelectionObserver;\n}(Observer); // Checks if one of the arrow keys is pressed.\n//\n// @private\n// @param {Number} keyCode\n// @returns {Boolean}\n\n\nexport { FakeSelectionObserver as default };\n\nfunction _isArrowKeyCode(keyCode) {\n  return keyCode == keyCodes.arrowright || keyCode == keyCodes.arrowleft || keyCode == keyCodes.arrowup || keyCode == keyCodes.arrowdown;\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/selectionobserver\n */\n\n/* global setInterval, clearInterval */\nimport Observer from './observer';\nimport MutationObserver from './mutationobserver';\nimport log from '@ckeditor/ckeditor5-utils/src/log';\nimport { debounce } from 'lodash-es';\n/**\n * Selection observer class observes selection changes in the document. If selection changes on the document this\n * observer checks if there are any mutations and if DOM selection is different than the\n * {@link module:engine/view/document~Document#selection view selection}. Selection observer fires\n * {@link module:engine/view/document~Document#event:selectionChange} event only if selection change was the only change in the document\n * and DOM selection is different then the view selection.\n *\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\n *\n * @see module:engine/view/observer/mutationobserver~MutationObserver\n * @extends module:engine/view/observer/observer~Observer\n */\n\nvar SelectionObserver =\n/*#__PURE__*/\nfunction (_Observer) {\n  _inherits(SelectionObserver, _Observer);\n\n  function SelectionObserver(view) {\n    var _this;\n\n    _classCallCheck(this, SelectionObserver);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SelectionObserver).call(this, view));\n    /**\n     * Instance of the mutation observer. Selection observer calls\n     * {@link module:engine/view/observer/mutationobserver~MutationObserver#flush} to ensure that the mutations will be handled\n     * before the {@link module:engine/view/document~Document#event:selectionChange} event is fired.\n     *\n     * @readonly\n     * @member {module:engine/view/observer/mutationobserver~MutationObserver}\n     * module:engine/view/observer/selectionobserver~SelectionObserver#mutationObserver\n     */\n\n    _this.mutationObserver = view.getObserver(MutationObserver);\n    /**\n     * Reference to the view {@link module:engine/view/documentselection~DocumentSelection} object used to compare\n     * new selection with it.\n     *\n     * @readonly\n     * @member {module:engine/view/documentselection~DocumentSelection}\n     * module:engine/view/observer/selectionobserver~SelectionObserver#selection\n     */\n\n    _this.selection = _this.document.selection;\n    /* eslint-disable max-len */\n\n    /**\n     * Reference to the {@link module:engine/view/view~View#domConverter}.\n     *\n     * @readonly\n     * @member {module:engine/view/domconverter~DomConverter} module:engine/view/observer/selectionobserver~SelectionObserver#domConverter\n     */\n\n    /* eslint-enable max-len */\n\n    _this.domConverter = view.domConverter;\n    /**\n     * Set of documents which have added \"selectionchange\" listener to avoid adding listener twice to the same\n     * document.\n     *\n     * @private\n     * @member {WeakSet.<Document>} module:engine/view/observer/selectionobserver~SelectionObserver#_documents\n     */\n\n    _this._documents = new WeakSet();\n    /**\n     * Fires debounced event `selectionChangeDone`. It uses `lodash#debounce` method to delay function call.\n     *\n     * @private\n     * @param {Object} data Selection change data.\n     * @method #_fireSelectionChangeDoneDebounced\n     */\n\n    _this._fireSelectionChangeDoneDebounced = debounce(function (data) {\n      return _this.document.fire('selectionChangeDone', data);\n    }, 200);\n    _this._clearInfiniteLoopInterval = setInterval(function () {\n      return _this._clearInfiniteLoop();\n    }, 1000);\n    /**\n     * Private property to check if the code does not enter infinite loop.\n     *\n     * @private\n     * @member {Number} module:engine/view/observer/selectionobserver~SelectionObserver#_loopbackCounter\n     */\n\n    _this._loopbackCounter = 0;\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(SelectionObserver, [{\n    key: \"observe\",\n    value: function observe(domElement) {\n      var _this2 = this;\n\n      var domDocument = domElement.ownerDocument; // Add listener once per each document.\n\n      if (this._documents.has(domDocument)) {\n        return;\n      }\n\n      this.listenTo(domDocument, 'selectionchange', function () {\n        _this2._handleSelectionChange(domDocument);\n      });\n\n      this._documents.add(domDocument);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(SelectionObserver.prototype), \"destroy\", this).call(this);\n\n      clearInterval(this._clearInfiniteLoopInterval);\n\n      this._fireSelectionChangeDoneDebounced.cancel();\n    }\n    /**\n     * Selection change listener. {@link module:engine/view/observer/mutationobserver~MutationObserver#flush Flush} mutations, check if\n     * selection changes and fires {@link module:engine/view/document~Document#event:selectionChange} event on every change\n     * and {@link module:engine/view/document~Document#event:selectionChangeDone} when selection stop changing.\n     *\n     * @private\n     * @param {Document} domDocument DOM document.\n     */\n\n  }, {\n    key: \"_handleSelectionChange\",\n    value: function _handleSelectionChange(domDocument) {\n      // Selection is handled when document is not focused but is read-only. This is because in read-only\n      // mode contenteditable is set as false and editor won't receive focus but we still need to know\n      // selection position.\n      if (!this.isEnabled || !this.document.isFocused && !this.document.isReadOnly) {\n        return;\n      } // Ensure the mutation event will be before selection event on all browsers.\n\n\n      this.mutationObserver.flush(); // If there were mutations then the view will be re-rendered by the mutation observer and selection\n      // will be updated, so selections will equal and event will not be fired, as expected.\n\n      var domSelection = domDocument.defaultView.getSelection();\n      var newViewSelection = this.domConverter.domSelectionToView(domSelection);\n\n      if (this.selection.isEqual(newViewSelection) && this.domConverter.isDomSelectionCorrect(domSelection)) {\n        return;\n      } // Ensure we are not in the infinite loop (#400).\n      // This counter is reset each second. 60 selection changes in 1 second is enough high number\n      // to be very difficult (impossible) to achieve using just keyboard keys (during normal editor use).\n\n\n      if (++this._loopbackCounter > 60) {\n        /**\n         * Selection change observer detected an infinite rendering loop.\n         * Most probably you try to put the selection in the position which is not allowed\n         * by the browser and browser fixes it automatically what causes `selectionchange` event on\n         * which a loopback through a model tries to re-render the wrong selection and again.\n         *\n         * @error selectionchange-infinite-loop\n         */\n        log.warn('selectionchange-infinite-loop: Selection change observer detected an infinite rendering loop.');\n        return;\n      }\n\n      if (this.selection.isSimilar(newViewSelection)) {\n        // If selection was equal and we are at this point of algorithm, it means that it was incorrect.\n        // Just re-render it, no need to fire any events, etc.\n        this.view.forceRender();\n      } else {\n        var data = {\n          oldSelection: this.selection,\n          newSelection: newViewSelection,\n          domSelection: domSelection\n        }; // Prepare data for new selection and fire appropriate events.\n\n        this.document.fire('selectionChange', data); // Call` #_fireSelectionChangeDoneDebounced` every time when `selectionChange` event is fired.\n        // This function is debounced what means that `selectionChangeDone` event will be fired only when\n        // defined int the function time will elapse since the last time the function was called.\n        // So `selectionChangeDone` will be fired when selection will stop changing.\n\n        this._fireSelectionChangeDoneDebounced(data);\n      }\n    }\n    /**\n     * Clears `SelectionObserver` internal properties connected with preventing infinite loop.\n     *\n     * @protected\n     */\n\n  }, {\n    key: \"_clearInfiniteLoop\",\n    value: function _clearInfiniteLoop() {\n      this._loopbackCounter = 0;\n    }\n  }]);\n\n  return SelectionObserver;\n}(Observer);\n/**\n * Fired when selection has changed. This event is fired only when the selection change was the only change that happened\n * in the document, and old selection is different then the new selection.\n *\n * Introduced by {@link module:engine/view/observer/selectionobserver~SelectionObserver}.\n *\n * Note that because {@link module:engine/view/observer/selectionobserver~SelectionObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/selectionobserver~SelectionObserver\n * @event module:engine/view/document~Document#event:selectionChange\n * @param {Object} data\n * @param {module:engine/view/documentselection~DocumentSelection} data.oldSelection Old View selection which is\n * {@link module:engine/view/document~Document#selection}.\n * @param {module:engine/view/selection~Selection} data.newSelection New View selection which is converted DOM selection.\n * @param {Selection} data.domSelection Native DOM selection.\n */\n\n/**\n * Fired when selection stops changing.\n *\n * Introduced by {@link module:engine/view/observer/selectionobserver~SelectionObserver}.\n *\n * Note that because {@link module:engine/view/observer/selectionobserver~SelectionObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/selectionobserver~SelectionObserver\n * @event module:engine/view/document~Document#event:selectionChangeDone\n * @param {Object} data\n * @param {module:engine/view/documentselection~DocumentSelection} data.oldSelection Old View selection which is\n * {@link module:engine/view/document~Document#selection}.\n * @param {module:engine/view/selection~Selection} data.newSelection New View selection which is converted DOM selection.\n * @param {Selection} data.domSelection Native DOM selection.\n */\n\n\nexport { SelectionObserver as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/focusobserver\n */\n\n/* globals setTimeout, clearTimeout */\nimport DomEventObserver from './domeventobserver';\n/**\n * {@link module:engine/view/document~Document#event:focus Focus}\n * and {@link module:engine/view/document~Document#event:blur blur} events observer.\n * Focus observer handle also {@link module:engine/view/rooteditableelement~RootEditableElement#isFocused isFocused} property of the\n * {@link module:engine/view/rooteditableelement~RootEditableElement root elements}.\n *\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\n\nvar FocusObserver =\n/*#__PURE__*/\nfunction (_DomEventObserver) {\n  _inherits(FocusObserver, _DomEventObserver);\n\n  function FocusObserver(view) {\n    var _this;\n\n    _classCallCheck(this, FocusObserver);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FocusObserver).call(this, view));\n    _this.domEventType = ['focus', 'blur'];\n    _this.useCapture = true;\n    var document = _this.document;\n    document.on('focus', function () {\n      document.isFocused = true; // Unfortunately native `selectionchange` event is fired asynchronously.\n      // We need to wait until `SelectionObserver` handle the event and then render. Otherwise rendering will\n      // overwrite new DOM selection with selection from the view.\n      // See https://github.com/ckeditor/ckeditor5-engine/issues/795 for more details.\n      // Long timeout is needed to solve #676 and https://github.com/ckeditor/ckeditor5-engine/issues/1157 issues.\n\n      _this._renderTimeoutId = setTimeout(function () {\n        return view.forceRender();\n      }, 50);\n    });\n    document.on('blur', function (evt, data) {\n      var selectedEditable = document.selection.editableElement;\n\n      if (selectedEditable === null || selectedEditable === data.target) {\n        document.isFocused = false; // Re-render the document to update view elements.\n\n        view.forceRender();\n      }\n    });\n    /**\n     * Identifier of the timeout currently used by focus listener to delay rendering execution.\n     *\n     * @private\n     * @member {Number} #_renderTimeoutId\n     */\n\n    return _this;\n  }\n\n  _createClass(FocusObserver, [{\n    key: \"onDomEvent\",\n    value: function onDomEvent(domEvent) {\n      this.fire(domEvent.type, domEvent);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this._renderTimeoutId) {\n        clearTimeout(this._renderTimeoutId);\n      }\n\n      _get(_getPrototypeOf(FocusObserver.prototype), \"destroy\", this).call(this);\n    }\n  }]);\n\n  return FocusObserver;\n}(DomEventObserver);\n/**\n * Fired when one of the editables gets focus.\n *\n * Introduced by {@link module:engine/view/observer/focusobserver~FocusObserver}.\n *\n * Note that because {@link module:engine/view/observer/focusobserver~FocusObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/focusobserver~FocusObserver\n * @event module:engine/view/document~Document#event:focus\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n\n/**\n * Fired when one of the editables loses focus.\n *\n * Introduced by {@link module:engine/view/observer/focusobserver~FocusObserver}.\n *\n * Note that because {@link module:engine/view/observer/focusobserver~FocusObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/focusobserver~FocusObserver\n * @event module:engine/view/document~Document#event:blur\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n\n\nexport { FocusObserver as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/compositionobserver\n */\nimport DomEventObserver from './domeventobserver';\n/**\n * {@link module:engine/view/document~Document#event:compositionstart Compositionstart},\n * {@link module:engine/view/document~Document#event:compositionupdate compositionupdate} and\n * {@link module:engine/view/document~Document#event:compositionend compositionend} events observer.\n *\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\n\nvar CompositionObserver =\n/*#__PURE__*/\nfunction (_DomEventObserver) {\n  _inherits(CompositionObserver, _DomEventObserver);\n\n  function CompositionObserver(view) {\n    var _this;\n\n    _classCallCheck(this, CompositionObserver);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CompositionObserver).call(this, view));\n    _this.domEventType = ['compositionstart', 'compositionupdate', 'compositionend'];\n    var document = _this.document;\n    document.on('compositionstart', function () {\n      document.isComposing = true;\n    });\n    document.on('compositionend', function () {\n      document.isComposing = false;\n    });\n    return _this;\n  }\n\n  _createClass(CompositionObserver, [{\n    key: \"onDomEvent\",\n    value: function onDomEvent(domEvent) {\n      this.fire(domEvent.type, domEvent);\n    }\n  }]);\n\n  return CompositionObserver;\n}(DomEventObserver);\n/**\n * Fired when composition starts inside one of the editables.\n *\n * Introduced by {@link module:engine/view/observer/compositionobserver~CompositionObserver}.\n *\n * Note that because {@link module:engine/view/observer/compositionobserver~CompositionObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/compositionobserver~CompositionObserver\n * @event module:engine/view/document~Document#event:compositionstart\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n\n/**\n * Fired when composition is updated inside one of the editables.\n *\n * Introduced by {@link module:engine/view/observer/compositionobserver~CompositionObserver}.\n *\n * Note that because {@link module:engine/view/observer/compositionobserver~CompositionObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/compositionobserver~CompositionObserver\n * @event module:engine/view/document~Document#event:compositionupdate\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n\n/**\n * Fired when composition ends inside one of the editables.\n *\n * Introduced by {@link module:engine/view/observer/compositionobserver~CompositionObserver}.\n *\n * Note that because {@link module:engine/view/observer/compositionobserver~CompositionObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/compositionobserver~CompositionObserver\n * @event module:engine/view/document~Document#event:compositionend\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n\n\nexport { CompositionObserver as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/observer/inputobserver\n */\nimport DomEventObserver from './domeventobserver';\n/**\n * Observer for events connected with data input.\n *\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\n\nvar InputObserver =\n/*#__PURE__*/\nfunction (_DomEventObserver) {\n  _inherits(InputObserver, _DomEventObserver);\n\n  function InputObserver(view) {\n    var _this;\n\n    _classCallCheck(this, InputObserver);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InputObserver).call(this, view));\n    _this.domEventType = ['beforeinput'];\n    return _this;\n  }\n\n  _createClass(InputObserver, [{\n    key: \"onDomEvent\",\n    value: function onDomEvent(domEvent) {\n      this.fire(domEvent.type, domEvent);\n    }\n  }]);\n\n  return InputObserver;\n}(DomEventObserver);\n/**\n * Fired before browser inputs (or deletes) some data.\n *\n * This event is available only on browsers which support DOM `beforeinput` event.\n *\n * Introduced by {@link module:engine/view/observer/inputobserver~InputObserver}.\n *\n * Note that because {@link module:engine/view/observer/inputobserver~InputObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/inputobserver~InputObserver\n * @event module:engine/view/document~Document#event:beforeinput\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n\n\nexport { InputObserver as default };","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/isrange\n */\n\n/**\n * Checks if the object is a native DOM Range.\n *\n * @param {*} obj\n * @returns {Boolean}\n */\nexport default function isRange(obj) {\n  return Object.prototype.toString.apply(obj) == '[object Range]';\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/getborderwidths\n */\n\n/**\n * Returns an object containing CSS border widths of a specified HTML element.\n *\n * @param {HTMLElement} element An element which has CSS borders.\n * @returns {Object} An object containing `top`, `left`, `right` and `bottom` properties\n * with numerical values of the `border-[top,left,right,bottom]-width` CSS styles.\n */\nexport default function getBorderWidths(element) {\n  // Call getComputedStyle on the window the element document belongs to.\n  var style = element.ownerDocument.defaultView.getComputedStyle(element);\n  return {\n    top: parseInt(style.borderTopWidth, 10),\n    right: parseInt(style.borderRightWidth, 10),\n    bottom: parseInt(style.borderBottomWidth, 10),\n    left: parseInt(style.borderLeftWidth, 10)\n  };\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/rect\n */\nimport isRange from './isrange';\nimport isWindow from './iswindow';\nimport getBorderWidths from './getborderwidths';\nimport log from '../log';\nimport isText from './istext';\nimport { isElement } from 'lodash-es';\nvar rectProperties = ['top', 'right', 'bottom', 'left', 'width', 'height'];\n/**\n * A helper class representing a `ClientRect` object, e.g. value returned by\n * the native `object.getBoundingClientRect()` method. Provides a set of methods\n * to manipulate the rect and compare it against other rect instances.\n */\n\nvar Rect =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of rect.\n   *\n   *\t\t// Rect of an HTMLElement.\n   *\t\tconst rectA = new Rect( document.body );\n   *\n   *\t\t// Rect of a DOM Range.\n   *\t\tconst rectB = new Rect( document.getSelection().getRangeAt( 0 ) );\n   *\n   *\t\t// Rect of a window (web browser viewport).\n   *\t\tconst rectC = new Rect( window );\n   *\n   *\t\t// Rect out of an object.\n   *\t\tconst rectD = new Rect( { top: 0, right: 10, bottom: 10, left: 0, width: 10, height: 10 } );\n   *\n   *\t\t// Rect out of another Rect instance.\n   *\t\tconst rectE = new Rect( rectD );\n   *\n   *\t\t// Rect out of a ClientRect.\n   *\t\tconst rectF = new Rect( document.body.getClientRects().item( 0 ) );\n   *\n   * **Note**: By default a rect of an HTML element includes its CSS borders and scrollbars (if any)\n   * ant the rect of a `window` includes scrollbars too. Use {@link #excludeScrollbarsAndBorders}\n   * to get the inner part of the rect.\n   *\n   * @param {HTMLElement|Range|Window|ClientRect|module:utils/dom/rect~Rect|Object} source A source object to create the rect.\n   */\n  function Rect(source) {\n    _classCallCheck(this, Rect);\n\n    var isSourceRange = isRange(source);\n    /**\n     * The object this rect is for.\n     *\n     * @protected\n     * @readonly\n     * @member {HTMLElement|Range|ClientRect|module:utils/dom/rect~Rect|Object} #_source\n     */\n\n    Object.defineProperty(this, '_source', {\n      // If the source is a Rect instance, copy it's #_source.\n      value: source._source || source,\n      writable: true,\n      enumerable: false\n    });\n\n    if (isElement(source) || isSourceRange) {\n      var sourceNode = isSourceRange ? source.startContainer : source;\n\n      if (!sourceNode.ownerDocument || !sourceNode.ownerDocument.body.contains(sourceNode)) {\n        /**\n         * The `Rect` class depends on `getBoundingClientRect` and `getClientRects` DOM methods.\n         * If the {@link #constructor source} of a rect in an HTML element or a DOM range but it does\n         * not belong to any rendered DOM tree, these methods will fail to obtain the geometry and\n         * the rect instance makes little sense to the features using it.\n         *\n         * To get rid of this warning make sure the source passed to the constructor\n         * is a descendant of `window.document.body`.\n         *\n         * @error rect-source-not-in-dom\n         * @param {String} source The source of the Rect instance.\n         */\n        log.warn('rect-source-not-in-dom: The source of this rect does not belong to any rendered DOM tree.', {\n          source: source\n        });\n      }\n\n      if (isSourceRange) {\n        copyRectProperties(this, Rect.getDomRangeRects(source)[0]);\n      } else {\n        copyRectProperties(this, source.getBoundingClientRect());\n      }\n    } else if (isWindow(source)) {\n      var innerWidth = source.innerWidth,\n          innerHeight = source.innerHeight;\n      copyRectProperties(this, {\n        top: 0,\n        right: innerWidth,\n        bottom: innerHeight,\n        left: 0,\n        width: innerWidth,\n        height: innerHeight\n      });\n    } else {\n      copyRectProperties(this, source);\n    }\n    /**\n     * The \"top\" value of the rect.\n     *\n     * @readonly\n     * @member {Number} #top\n     */\n\n    /**\n     * The \"right\" value of the rect.\n     *\n     * @readonly\n     * @member {Number} #right\n     */\n\n    /**\n     * The \"bottom\" value of the rect.\n     *\n     * @readonly\n     * @member {Number} #bottom\n     */\n\n    /**\n     * The \"left\" value of the rect.\n     *\n     * @readonly\n     * @member {Number} #left\n     */\n\n    /**\n     * The \"width\" value of the rect.\n     *\n     * @readonly\n     * @member {Number} #width\n     */\n\n    /**\n     * The \"height\" value of the rect.\n     *\n     * @readonly\n     * @member {Number} #height\n     */\n\n  }\n  /**\n   * Returns a clone of the rect.\n   *\n   * @returns {module:utils/dom/rect~Rect} A cloned rect.\n   */\n\n\n  _createClass(Rect, [{\n    key: \"clone\",\n    value: function clone() {\n      return new Rect(this);\n    }\n    /**\n     * Moves the rect so that its upper–left corner lands in desired `[ x, y ]` location.\n     *\n     * @param {Number} x Desired horizontal location.\n     * @param {Number} y Desired vertical location.\n     * @returns {module:utils/dom/rect~Rect} A rect which has been moved.\n     */\n\n  }, {\n    key: \"moveTo\",\n    value: function moveTo(x, y) {\n      this.top = y;\n      this.right = x + this.width;\n      this.bottom = y + this.height;\n      this.left = x;\n      return this;\n    }\n    /**\n     * Moves the rect in–place by a dedicated offset.\n     *\n     * @param {Number} x A horizontal offset.\n     * @param {Number} y A vertical offset\n     * @returns {module:utils/dom/rect~Rect} A rect which has been moved.\n     */\n\n  }, {\n    key: \"moveBy\",\n    value: function moveBy(x, y) {\n      this.top += y;\n      this.right += x;\n      this.left += x;\n      this.bottom += y;\n      return this;\n    }\n    /**\n     * Returns a new rect a a result of intersection with another rect.\n     *\n     * @param {module:utils/dom/rect~Rect} anotherRect\n     * @returns {module:utils/dom/rect~Rect}\n     */\n\n  }, {\n    key: \"getIntersection\",\n    value: function getIntersection(anotherRect) {\n      var rect = {\n        top: Math.max(this.top, anotherRect.top),\n        right: Math.min(this.right, anotherRect.right),\n        bottom: Math.min(this.bottom, anotherRect.bottom),\n        left: Math.max(this.left, anotherRect.left)\n      };\n      rect.width = rect.right - rect.left;\n      rect.height = rect.bottom - rect.top;\n\n      if (rect.width < 0 || rect.height < 0) {\n        return null;\n      } else {\n        return new Rect(rect);\n      }\n    }\n    /**\n     * Returns the area of intersection with another rect.\n     *\n     * @param {module:utils/dom/rect~Rect} anotherRect [description]\n     * @returns {Number} Area of intersection.\n     */\n\n  }, {\n    key: \"getIntersectionArea\",\n    value: function getIntersectionArea(anotherRect) {\n      var rect = this.getIntersection(anotherRect);\n\n      if (rect) {\n        return rect.getArea();\n      } else {\n        return 0;\n      }\n    }\n    /**\n     * Returns the area of the rect.\n     *\n     * @returns {Number}\n     */\n\n  }, {\n    key: \"getArea\",\n    value: function getArea() {\n      return this.width * this.height;\n    }\n    /**\n     * Returns a new rect, a part of the original rect, which is actually visible to the user,\n     * e.g. an original rect cropped by parent element rects which have `overflow` set in CSS\n     * other than `\"visible\"`.\n     *\n     * If there's no such visible rect, which is when the rect is limited by one or many of\n     * the ancestors, `null` is returned.\n     *\n     * @returns {module:utils/dom/rect~Rect|null} A visible rect instance or `null`, if there's none.\n     */\n\n  }, {\n    key: \"getVisible\",\n    value: function getVisible() {\n      var source = this._source;\n      var visibleRect = this.clone(); // There's no ancestor to crop <body> with the overflow.\n\n      if (!isBody(source)) {\n        var parent = source.parentNode || source.commonAncestorContainer; // Check the ancestors all the way up to the <body>.\n\n        while (parent && !isBody(parent)) {\n          var parentRect = new Rect(parent);\n          var intersectionRect = visibleRect.getIntersection(parentRect);\n\n          if (intersectionRect) {\n            if (intersectionRect.getArea() < visibleRect.getArea()) {\n              // Reduce the visible rect to the intersection.\n              visibleRect = intersectionRect;\n            }\n          } else {\n            // There's no intersection, the rect is completely invisible.\n            return null;\n          }\n\n          parent = parent.parentNode;\n        }\n      }\n\n      return visibleRect;\n    }\n    /**\n     * Checks if all property values ({@link #top}, {@link #left}, {@link #right},\n     * {@link #bottom}, {@link #width} and {@link #height}) are the equal in both rect\n     * instances.\n     *\n     * @param {module:utils/dom/rect~Rect} rect A rect instance to compare with.\n     * @returns {Boolean} `true` when Rects are equal. `false` otherwise.\n     */\n\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(anotherRect) {\n      for (var _i = 0, _rectProperties = rectProperties; _i < _rectProperties.length; _i++) {\n        var prop = _rectProperties[_i];\n\n        if (this[prop] !== anotherRect[prop]) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n    /**\n     * Checks whether a rect fully contains another rect instance.\n     *\n     * @param {module:utils/dom/rect~Rect} anotherRect\n     * @returns {Boolean} `true` if contains, `false` otherwise.\n     */\n\n  }, {\n    key: \"contains\",\n    value: function contains(anotherRect) {\n      var intersectRect = this.getIntersection(anotherRect);\n      return !!(intersectRect && intersectRect.isEqual(anotherRect));\n    }\n    /**\n     * Excludes scrollbars and CSS borders from the rect.\n     *\n     * * Borders are removed when {@link #_source} is an HTML element.\n     * * Scrollbars are excluded from HTML elements and the `window`.\n     *\n     * @returns {module:utils/dom/rect~Rect} A rect which has been updated.\n     */\n\n  }, {\n    key: \"excludeScrollbarsAndBorders\",\n    value: function excludeScrollbarsAndBorders() {\n      var source = this._source;\n      var scrollBarWidth, scrollBarHeight;\n\n      if (isWindow(source)) {\n        scrollBarWidth = source.innerWidth - source.document.documentElement.clientWidth;\n        scrollBarHeight = source.innerHeight - source.document.documentElement.clientHeight;\n      } else {\n        var borderWidths = getBorderWidths(this._source);\n        scrollBarWidth = source.offsetWidth - source.clientWidth;\n        scrollBarHeight = source.offsetHeight - source.clientHeight;\n        this.moveBy(borderWidths.left, borderWidths.top);\n      } // Assuming LTR scrollbars. TODO: RTL.\n\n\n      this.width -= scrollBarWidth;\n      this.right -= scrollBarWidth;\n      this.height -= scrollBarHeight;\n      this.bottom -= scrollBarHeight;\n      return this;\n    }\n    /**\n     * Returns an array of rects of the given native DOM Range.\n     *\n     * @param {Range} range A native DOM range.\n     * @returns {Array.<module:utils/dom/rect~Rect>} DOM Range rects.\n     */\n\n  }], [{\n    key: \"getDomRangeRects\",\n    value: function getDomRangeRects(range) {\n      var rects = []; // Safari does not iterate over ClientRectList using for...of loop.\n\n      var clientRects = Array.from(range.getClientRects());\n\n      if (clientRects.length) {\n        for (var _i2 = 0, _clientRects = clientRects; _i2 < _clientRects.length; _i2++) {\n          var rect = _clientRects[_i2];\n          rects.push(new Rect(rect));\n        }\n      } // If there's no client rects for the Range, use parent container's bounding rect\n      // instead and adjust rect's width to simulate the actual geometry of such range.\n      // https://github.com/ckeditor/ckeditor5-utils/issues/153\n      // https://github.com/ckeditor/ckeditor5-ui/issues/317\n      else {\n          var startContainer = range.startContainer;\n\n          if (isText(startContainer)) {\n            startContainer = startContainer.parentNode;\n          }\n\n          var _rect = new Rect(startContainer.getBoundingClientRect());\n\n          _rect.right = _rect.left;\n          _rect.width = 0;\n          rects.push(_rect);\n        }\n\n      return rects;\n    }\n  }]);\n\n  return Rect;\n}(); // Acquires all the rect properties from the passed source.\n//\n// @private\n// @param {module:utils/dom/rect~Rect} rect\n// @param {ClientRect|module:utils/dom/rect~Rect|Object} source\n\n\nexport { Rect as default };\n\nfunction copyRectProperties(rect, source) {\n  for (var _i3 = 0, _rectProperties2 = rectProperties; _i3 < _rectProperties2.length; _i3++) {\n    var p = _rectProperties2[_i3];\n    rect[p] = source[p];\n  }\n} // Checks if provided object is a <body> HTML element.\n//\n// @private\n// @param {HTMLElement|Range} elementOrRange\n// @returns {Boolean}\n\n\nfunction isBody(elementOrRange) {\n  if (!isElement(elementOrRange)) {\n    return false;\n  }\n\n  return elementOrRange === elementOrRange.ownerDocument.body;\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/scroll\n */\nimport isRange from './isrange';\nimport Rect from './rect';\nimport isText from './istext';\nvar utils = {};\n/**\n * Makes any page `HTMLElement` or `Range` (`target`) visible inside the browser viewport.\n * This helper will scroll all `target` ancestors and the web browser viewport to reveal the target to\n * the user. If the `target` is already visible, nothing will happen.\n *\n * @param {HTMLElement|Range} options.target A target, which supposed to become visible to the user.\n * @param {Number} [options.viewportOffset] An offset from the edge of the viewport (in pixels)\n * the `target` will be moved by when the viewport is scrolled. It enhances the user experience\n * by keeping the `target` some distance from the edge of the viewport and thus making it easier to\n * read or edit by the user.\n */\n\nexport function scrollViewportToShowTarget(_ref) {\n  var target = _ref.target,\n      _ref$viewportOffset = _ref.viewportOffset,\n      viewportOffset = _ref$viewportOffset === void 0 ? 0 : _ref$viewportOffset;\n  var targetWindow = getWindow(target);\n  var currentWindow = targetWindow;\n  var currentFrame = null; // Iterate over all windows, starting from target's parent window up to window#top.\n\n  while (currentWindow) {\n    var firstAncestorToScroll = void 0; // Let's scroll target's ancestors first to reveal it. Then, once the ancestor scrolls\n    // settled down, the algorithm can eventually scroll the viewport of the current window.\n    //\n    // Note: If the current window is target's **original** window (e.g. the first one),\n    // start scrolling the closest parent of the target. If not, scroll the closest parent\n    // of an iframe that resides in the current window.\n\n    if (currentWindow == targetWindow) {\n      firstAncestorToScroll = getParentElement(target);\n    } else {\n      firstAncestorToScroll = getParentElement(currentFrame);\n    } // Scroll the target's ancestors first. Once done, scrolling the viewport is easy.\n\n\n    scrollAncestorsToShowRect(firstAncestorToScroll, function () {\n      // Note: If the target does not belong to the current window **directly**,\n      // i.e. it resides in an iframe belonging to the window, obtain the target's rect\n      // in the coordinates of the current window. By default, a Rect returns geometry\n      // relative to the current window's viewport. To make it work in a parent window,\n      // it must be shifted.\n      return getRectRelativeToWindow(target, currentWindow);\n    }); // Obtain the rect of the target after it has been scrolled within its ancestors.\n    // It's time to scroll the viewport.\n\n    var targetRect = getRectRelativeToWindow(target, currentWindow);\n    scrollWindowToShowRect(currentWindow, targetRect, viewportOffset);\n\n    if (currentWindow.parent != currentWindow) {\n      // Keep the reference to the <iframe> element the \"previous current window\" was\n      // rendered within. It will be useful to re–calculate the rect of the target\n      // in the parent window's relative geometry. The target's rect must be shifted\n      // by it's iframe's position.\n      currentFrame = currentWindow.frameElement;\n      currentWindow = currentWindow.parent; // If the current window has some parent but frameElement is inaccessible, then they have\n      // different domains/ports and, due to security reasons, accessing and scrolling\n      // the parent window won't be possible.\n      // See https://github.com/ckeditor/ckeditor5/issues/930.\n\n      if (!currentFrame) {\n        return;\n      }\n    } else {\n      currentWindow = null;\n    }\n  }\n}\n/**\n * Makes any page `HTMLElement` or `Range` (target) visible within its scrollable ancestors,\n * e.g. if they have `overflow: scroll` CSS style.\n *\n * @param {HTMLElement|Range} target A target, which supposed to become visible to the user.\n */\n\nexport function scrollAncestorsToShowTarget(target) {\n  var targetParent = getParentElement(target);\n  scrollAncestorsToShowRect(targetParent, function () {\n    return new Rect(target);\n  });\n} // TODO: Using a property value shorthand in the top of the file\n// causes JSDoc to throw errors. See https://github.com/cksource/docs-builder/issues/75.\n\nObject.assign(utils, {\n  scrollViewportToShowTarget: scrollViewportToShowTarget,\n  scrollAncestorsToShowTarget: scrollAncestorsToShowTarget\n}); // Makes a given rect visible within its parent window.\n//\n// Note: Avoid the situation where the caret is still in the viewport, but totally\n// at the edge of it. In such situation, if it moved beyond the viewport in the next\n// action e.g. after paste, the scrolling would move it to the viewportOffset level\n// and it all would look like the caret visually moved up/down:\n//\n// 1.\n//\t\t| foo[]\n//\t\t|                                    <--- N px of space below the caret\n//\t\t+---------------------------------...\n//\n// 2. *paste*\n// 3.\n//\t\t|\n//\t\t|\n//\t\t+-foo-----------------------------...\n//\t\t  bar[]                              <--- caret below viewport, scrolling...\n//\n// 4. *scrolling*\n// 5.\n//\t\t|\n//\t\t| foo\n//\t\t| bar[]                              <--- caret precisely at the edge\n//\t\t+---------------------------------...\n//\n// To prevent this, this method checks the rects moved by the viewportOffset to cover\n// the upper/lower edge of the viewport. It makes sure if the action repeats, there's\n// no twitching – it's a purely visual improvement:\n//\n// 5. (after fix)\n//\t\t|\n//\t\t| foo\n//\t\t| bar[]\n//\t\t|                                    <--- N px of space below the caret\n//\t\t+---------------------------------...\n//\n// @private\n// @param {Window} window A window which is scrolled to reveal the rect.\n// @param {module:utils/dom/rect~Rect} rect A rect which is to be revealed.\n// @param {Number} viewportOffset See scrollViewportToShowTarget.\n\nfunction scrollWindowToShowRect(window, rect, viewportOffset) {\n  var targetShiftedDownRect = rect.clone().moveBy(0, viewportOffset);\n  var targetShiftedUpRect = rect.clone().moveBy(0, -viewportOffset);\n  var viewportRect = new Rect(window).excludeScrollbarsAndBorders();\n  var rects = [targetShiftedUpRect, targetShiftedDownRect];\n\n  if (!rects.every(function (rect) {\n    return viewportRect.contains(rect);\n  })) {\n    var scrollX = window.scrollX,\n        scrollY = window.scrollY;\n\n    if (isAbove(targetShiftedUpRect, viewportRect)) {\n      scrollY -= viewportRect.top - rect.top + viewportOffset;\n    } else if (isBelow(targetShiftedDownRect, viewportRect)) {\n      scrollY += rect.bottom - viewportRect.bottom + viewportOffset;\n    } // TODO: Web browsers scroll natively to place the target in the middle\n    // of the viewport. It's not a very popular case, though.\n\n\n    if (isLeftOf(rect, viewportRect)) {\n      scrollX -= viewportRect.left - rect.left + viewportOffset;\n    } else if (isRightOf(rect, viewportRect)) {\n      scrollX += rect.right - viewportRect.right + viewportOffset;\n    }\n\n    window.scrollTo(scrollX, scrollY);\n  }\n} // Recursively scrolls element ancestors to visually reveal a rect.\n//\n// @private\n// @param {HTMLElement} A parent The first ancestors to start scrolling.\n// @param {Function} getRect A function which returns the Rect, which is to be revealed.\n\n\nfunction scrollAncestorsToShowRect(parent, getRect) {\n  var parentWindow = getWindow(parent);\n  var parentRect, targetRect;\n\n  while (parent != parentWindow.document.body) {\n    targetRect = getRect();\n    parentRect = new Rect(parent).excludeScrollbarsAndBorders();\n\n    if (!parentRect.contains(targetRect)) {\n      if (isAbove(targetRect, parentRect)) {\n        parent.scrollTop -= parentRect.top - targetRect.top;\n      } else if (isBelow(targetRect, parentRect)) {\n        parent.scrollTop += targetRect.bottom - parentRect.bottom;\n      }\n\n      if (isLeftOf(targetRect, parentRect)) {\n        parent.scrollLeft -= parentRect.left - targetRect.left;\n      } else if (isRightOf(targetRect, parentRect)) {\n        parent.scrollLeft += targetRect.right - parentRect.right;\n      }\n    }\n\n    parent = parent.parentNode;\n  }\n} // Determines if a given `Rect` extends beyond the bottom edge of the second `Rect`.\n//\n// @private\n// @param {module:utils/dom/rect~Rect} firstRect\n// @param {module:utils/dom/rect~Rect} secondRect\n\n\nfunction isBelow(firstRect, secondRect) {\n  return firstRect.bottom > secondRect.bottom;\n} // Determines if a given `Rect` extends beyond the top edge of the second `Rect`.\n//\n// @private\n// @param {module:utils/dom/rect~Rect} firstRect\n// @param {module:utils/dom/rect~Rect} secondRect\n\n\nfunction isAbove(firstRect, secondRect) {\n  return firstRect.top < secondRect.top;\n} // Determines if a given `Rect` extends beyond the left edge of the second `Rect`.\n//\n// @private\n// @param {module:utils/dom/rect~Rect} firstRect\n// @param {module:utils/dom/rect~Rect} secondRect\n\n\nfunction isLeftOf(firstRect, secondRect) {\n  return firstRect.left < secondRect.left;\n} // Determines if a given `Rect` extends beyond the right edge of the second `Rect`.\n//\n// @private\n// @param {module:utils/dom/rect~Rect} firstRect\n// @param {module:utils/dom/rect~Rect} secondRect\n\n\nfunction isRightOf(firstRect, secondRect) {\n  return firstRect.right > secondRect.right;\n} // Returns the closest window of an element or range.\n//\n// @private\n// @param {HTMLElement|Range} firstRect\n// @returns {Window}\n\n\nfunction getWindow(elementOrRange) {\n  if (isRange(elementOrRange)) {\n    return elementOrRange.startContainer.ownerDocument.defaultView;\n  } else {\n    return elementOrRange.ownerDocument.defaultView;\n  }\n} // Returns the closest parent of an element or DOM range.\n//\n// @private\n// @param {HTMLElement|Range} firstRect\n// @returns {HTMLelement}\n\n\nfunction getParentElement(elementOrRange) {\n  if (isRange(elementOrRange)) {\n    var parent = elementOrRange.commonAncestorContainer; // If a Range is attached to the Text, use the closest element ancestor.\n\n    if (isText(parent)) {\n      parent = parent.parentNode;\n    }\n\n    return parent;\n  } else {\n    return elementOrRange.parentNode;\n  }\n} // Returns the rect of an element or range residing in an iframe.\n// The result rect is relative to the geometry of the passed window instance.\n//\n// @private\n// @param {HTMLElement|Range} target Element or range which rect should be returned.\n// @param {Window} relativeWindow A window the rect should be relative to.\n// @returns {module:utils/dom/rect~Rect}\n\n\nfunction getRectRelativeToWindow(target, relativeWindow) {\n  var targetWindow = getWindow(target);\n  var rect = new Rect(target);\n\n  if (targetWindow === relativeWindow) {\n    return rect;\n  } else {\n    var currentWindow = targetWindow;\n\n    while (currentWindow != relativeWindow) {\n      var frame = currentWindow.frameElement;\n      var frameRect = new Rect(frame).excludeScrollbarsAndBorders();\n      rect.moveBy(frameRect.left, frameRect.top);\n      currentWindow = currentWindow.parent;\n    }\n  }\n\n  return rect;\n}","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/view\n */\nimport Document from './document';\nimport DowncastWriter from './downcastwriter';\nimport Renderer from './renderer';\nimport DomConverter from './domconverter';\nimport Position from './position';\nimport Range from './range';\nimport Selection from './selection';\nimport MutationObserver from './observer/mutationobserver';\nimport KeyObserver from './observer/keyobserver';\nimport FakeSelectionObserver from './observer/fakeselectionobserver';\nimport SelectionObserver from './observer/selectionobserver';\nimport FocusObserver from './observer/focusobserver';\nimport CompositionObserver from './observer/compositionobserver';\nimport InputObserver from './observer/inputobserver';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport log from '@ckeditor/ckeditor5-utils/src/log';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport { scrollViewportToShowTarget } from '@ckeditor/ckeditor5-utils/src/dom/scroll';\nimport { injectUiElementHandling } from './uielement';\nimport { injectQuirksHandling } from './filler';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport env from '@ckeditor/ckeditor5-utils/src/env';\n/**\n * Editor's view controller class. Its main responsibility is DOM - View management for editing purposes, to provide\n * abstraction over the DOM structure and events and hide all browsers quirks.\n *\n * View controller renders view document to DOM whenever view structure changes. To determine when view can be rendered,\n * all changes need to be done using the {@link module:engine/view/view~View#change} method, using\n * {@link module:engine/view/downcastwriter~DowncastWriter}:\n *\n *\t\tview.change( writer => {\n *\t\t\twriter.insert( position, writer.createText( 'foo' ) );\n *\t\t} );\n *\n * View controller also register {@link module:engine/view/observer/observer~Observer observers} which observes changes\n * on DOM and fire events on the {@link module:engine/view/document~Document Document}.\n * Note that the following observers are added by the class constructor and are always available:\n *\n * * {@link module:engine/view/observer/mutationobserver~MutationObserver},\n * * {@link module:engine/view/observer/selectionobserver~SelectionObserver},\n * * {@link module:engine/view/observer/focusobserver~FocusObserver},\n * * {@link module:engine/view/observer/keyobserver~KeyObserver},\n * * {@link module:engine/view/observer/fakeselectionobserver~FakeSelectionObserver}.\n * * {@link module:engine/view/observer/compositionobserver~CompositionObserver}.\n *\n * This class also {@link module:engine/view/view~View#attachDomRoot binds the DOM and the view elements}.\n *\n * If you do not need full a DOM - view management, and only want to transform a tree of view elements to a tree of DOM\n * elements you do not need this controller. You can use the {@link module:engine/view/domconverter~DomConverter DomConverter} instead.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\n\nvar View =\n/*#__PURE__*/\nfunction () {\n  function View() {\n    var _this = this;\n\n    _classCallCheck(this, View);\n\n    /**\n     * Instance of the {@link module:engine/view/document~Document} associated with this view controller.\n     *\n     * @readonly\n     * @type {module:engine/view/document~Document}\n     */\n    this.document = new Document();\n    /**\n     * Instance of the {@link module:engine/view/domconverter~DomConverter domConverter} used by\n     * {@link module:engine/view/view~View#_renderer renderer}\n     * and {@link module:engine/view/observer/observer~Observer observers}.\n     *\n     * @readonly\n     * @type {module:engine/view/domconverter~DomConverter}\n     */\n\n    this.domConverter = new DomConverter();\n    /**\n     * Roots of the DOM tree. Map on the `HTMLElement`s with roots names as keys.\n     *\n     * @readonly\n     * @type {Map.<String, HTMLElement>}\n     */\n\n    this.domRoots = new Map();\n    /**\n     * Used to prevent calling {@link #forceRender} and {@link #change} during rendering view to the DOM.\n     *\n     * @readonly\n     * @member {Boolean} #isRenderingInProgress\n     */\n\n    this.set('isRenderingInProgress', false);\n    /**\n     * Instance of the {@link module:engine/view/renderer~Renderer renderer}.\n     *\n     * @protected\n     * @type {module:engine/view/renderer~Renderer}\n     */\n\n    this._renderer = new Renderer(this.domConverter, this.document.selection);\n\n    this._renderer.bind('isFocused').to(this.document);\n    /**\n     * A DOM root attributes cache. It saves the initial values of DOM root attributes before the DOM element\n     * is {@link module:engine/view/view~View#attachDomRoot attached} to the view so later on, when\n     * the view is destroyed ({@link module:engine/view/view~View#detachDomRoot}), they can be easily restored.\n     * This way, the DOM element can go back to the (clean) state as if the editing view never used it.\n     *\n     * @private\n     * @member {WeakMap.<HTMLElement,Object>}\n     */\n\n\n    this._initialDomRootAttributes = new WeakMap();\n    /**\n     * Map of registered {@link module:engine/view/observer/observer~Observer observers}.\n     *\n     * @private\n     * @type {Map.<Function, module:engine/view/observer/observer~Observer>}\n     */\n\n    this._observers = new Map();\n    /**\n     * Is set to `true` when {@link #change view changes} are currently in progress.\n     *\n     * @private\n     * @type {Boolean}\n     */\n\n    this._ongoingChange = false;\n    /**\n     * Used to prevent calling {@link #forceRender} and {@link #change} during rendering view to the DOM.\n     *\n     * @private\n     * @type {Boolean}\n     */\n\n    this._postFixersInProgress = false;\n    /**\n     * Internal flag to temporary disable rendering. See the usage in the {@link #_disableRendering}.\n     *\n     * @private\n     * @type {Boolean}\n     */\n\n    this._renderingDisabled = false;\n    /**\n     * Internal flag that disables rendering when there are no changes since the last rendering.\n     * It stores information about changed selection and changed elements from attached document roots.\n     *\n     * @private\n     * @type {Boolean}\n     */\n\n    this._hasChangedSinceTheLastRendering = false;\n    /**\n     * DowncastWriter instance used in {@link #change change method} callbacks.\n     *\n     * @private\n     * @type {module:engine/view/downcastwriter~DowncastWriter}\n     */\n\n    this._writer = new DowncastWriter(this.document); // Add default observers.\n\n    this.addObserver(MutationObserver);\n    this.addObserver(SelectionObserver);\n    this.addObserver(FocusObserver);\n    this.addObserver(KeyObserver);\n    this.addObserver(FakeSelectionObserver);\n    this.addObserver(CompositionObserver);\n\n    if (env.isAndroid) {\n      this.addObserver(InputObserver);\n    } // Inject quirks handlers.\n\n\n    injectQuirksHandling(this);\n    injectUiElementHandling(this); // Use 'normal' priority so that rendering is performed as first when using that priority.\n\n    this.on('render', function () {\n      _this._render(); // Informs that layout has changed after render.\n\n\n      _this.document.fire('layoutChanged'); // Reset the `_hasChangedSinceTheLastRendering` flag after rendering.\n\n\n      _this._hasChangedSinceTheLastRendering = false;\n    }); // Listen to the document selection changes directly.\n\n    this.listenTo(this.document.selection, 'change', function () {\n      _this._hasChangedSinceTheLastRendering = true;\n    });\n  }\n  /**\n   * Attaches a DOM root element to the view element and enable all observers on that element.\n   * Also {@link module:engine/view/renderer~Renderer#markToSync mark element} to be synchronized\n   * with the view what means that all child nodes will be removed and replaced with content of the view root.\n   *\n   * This method also will change view element name as the same as tag name of given dom root.\n   * Name is always transformed to lower case.\n   *\n   * **Note:** Use {@link #detachDomRoot `detachDomRoot()`} to revert this action.\n   *\n   * @param {Element} domRoot DOM root element.\n   * @param {String} [name='main'] Name of the root.\n   */\n\n\n  _createClass(View, [{\n    key: \"attachDomRoot\",\n    value: function attachDomRoot(domRoot) {\n      var _this2 = this;\n\n      var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'main';\n      var viewRoot = this.document.getRoot(name); // Set view root name the same as DOM root tag name.\n\n      viewRoot._name = domRoot.tagName.toLowerCase();\n      var initialDomRootAttributes = {}; // 1. Copy and cache the attributes to remember the state of the element before attaching.\n      //    The cached attributes will be restored in detachDomRoot() so the element goes to the\n      //    clean state as if the editing view never used it.\n      // 2. Apply the attributes using the view writer, so they all go under the control of the engine.\n      //    The editing view takes over the attribute management completely because various\n      //    features (e.g. addPlaceholder()) require dynamic changes of those attributes and they\n      //    cannot be managed by the engine and the UI library at the same time.\n\n      for (var _i = 0, _Array$from = Array.from(domRoot.attributes); _i < _Array$from.length; _i++) {\n        var _Array$from$_i = _Array$from[_i],\n            _name = _Array$from$_i.name,\n            value = _Array$from$_i.value;\n        initialDomRootAttributes[_name] = value; // Do not use writer.setAttribute() for the class attribute. The EditableUIView class\n        // and its descendants could have already set some using the writer.addClass() on the view\n        // document root. They haven't been rendered yet so they are not present in the DOM root.\n        // Using writer.setAttribute( 'class', ... ) would override them completely.\n\n        if (_name === 'class') {\n          this._writer.addClass(value.split(' '), viewRoot);\n        } else {\n          this._writer.setAttribute(_name, value, viewRoot);\n        }\n      }\n\n      this._initialDomRootAttributes.set(domRoot, initialDomRootAttributes);\n\n      var updateContenteditableAttribute = function updateContenteditableAttribute() {\n        _this2._writer.setAttribute('contenteditable', !viewRoot.isReadOnly, viewRoot);\n\n        if (viewRoot.isReadOnly) {\n          _this2._writer.addClass('ck-read-only', viewRoot);\n        } else {\n          _this2._writer.removeClass('ck-read-only', viewRoot);\n        }\n      }; // Set initial value.\n\n\n      updateContenteditableAttribute();\n      this.domRoots.set(name, domRoot);\n      this.domConverter.bindElements(domRoot, viewRoot);\n\n      this._renderer.markToSync('children', viewRoot);\n\n      this._renderer.markToSync('attributes', viewRoot);\n\n      this._renderer.domDocuments.add(domRoot.ownerDocument);\n\n      viewRoot.on('change:children', function (evt, node) {\n        return _this2._renderer.markToSync('children', node);\n      });\n      viewRoot.on('change:attributes', function (evt, node) {\n        return _this2._renderer.markToSync('attributes', node);\n      });\n      viewRoot.on('change:text', function (evt, node) {\n        return _this2._renderer.markToSync('text', node);\n      });\n      viewRoot.on('change:isReadOnly', function () {\n        return _this2.change(updateContenteditableAttribute);\n      });\n      viewRoot.on('change', function () {\n        _this2._hasChangedSinceTheLastRendering = true;\n      });\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this._observers.values()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var observer = _step.value;\n          observer.observe(domRoot, name);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n    /**\n     * Detaches a DOM root element from the view element and restores its attributes to the state before\n     * {@link #attachDomRoot `attachDomRoot()`}.\n     *\n     * @param {String} name Name of the root to detach.\n     */\n\n  }, {\n    key: \"detachDomRoot\",\n    value: function detachDomRoot(name) {\n      var domRoot = this.domRoots.get(name); // Remove all root attributes so the DOM element is \"bare\".\n\n      Array.from(domRoot.attributes).forEach(function (_ref) {\n        var name = _ref.name;\n        return domRoot.removeAttribute(name);\n      });\n\n      var initialDomRootAttributes = this._initialDomRootAttributes.get(domRoot); // Revert all view root attributes back to the state before attachDomRoot was called.\n\n\n      for (var attribute in initialDomRootAttributes) {\n        domRoot.setAttribute(attribute, initialDomRootAttributes[attribute]);\n      }\n\n      this.domRoots[\"delete\"](name);\n      this.domConverter.unbindDomElement(domRoot);\n    }\n    /**\n     * Gets DOM root element.\n     *\n     * @param {String} [name='main']  Name of the root.\n     * @returns {Element} DOM root element instance.\n     */\n\n  }, {\n    key: \"getDomRoot\",\n    value: function getDomRoot() {\n      var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'main';\n      return this.domRoots.get(name);\n    }\n    /**\n     * Creates observer of the given type if not yet created, {@link module:engine/view/observer/observer~Observer#enable enables} it\n     * and {@link module:engine/view/observer/observer~Observer#observe attaches} to all existing and future\n     * {@link #domRoots DOM roots}.\n     *\n     * Note: Observers are recognized by their constructor (classes). A single observer will be instantiated and used only\n     * when registered for the first time. This means that features and other components can register a single observer\n     * multiple times without caring whether it has been already added or not.\n     *\n     * @param {Function} Observer The constructor of an observer to add.\n     * Should create an instance inheriting from {@link module:engine/view/observer/observer~Observer}.\n     * @returns {module:engine/view/observer/observer~Observer} Added observer instance.\n     */\n\n  }, {\n    key: \"addObserver\",\n    value: function addObserver(Observer) {\n      var observer = this._observers.get(Observer);\n\n      if (observer) {\n        return observer;\n      }\n\n      observer = new Observer(this);\n\n      this._observers.set(Observer, observer);\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.domRoots[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var _step2$value = _slicedToArray(_step2.value, 2),\n              name = _step2$value[0],\n              domElement = _step2$value[1];\n\n          observer.observe(domElement, name);\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      observer.enable();\n      return observer;\n    }\n    /**\n     * Returns observer of the given type or `undefined` if such observer has not been added yet.\n     *\n     * @param {Function} Observer The constructor of an observer to get.\n     * @returns {module:engine/view/observer/observer~Observer|undefined} Observer instance or undefined.\n     */\n\n  }, {\n    key: \"getObserver\",\n    value: function getObserver(Observer) {\n      return this._observers.get(Observer);\n    }\n    /**\n     * Disables all added observers.\n     */\n\n  }, {\n    key: \"disableObservers\",\n    value: function disableObservers() {\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this._observers.values()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var observer = _step3.value;\n          observer.disable();\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n            _iterator3[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n    /**\n     * Enables all added observers.\n     */\n\n  }, {\n    key: \"enableObservers\",\n    value: function enableObservers() {\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = this._observers.values()[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var observer = _step4.value;\n          observer.enable();\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4[\"return\"] != null) {\n            _iterator4[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n    }\n    /**\n     * Scrolls the page viewport and {@link #domRoots} with their ancestors to reveal the\n     * caret, if not already visible to the user.\n     */\n\n  }, {\n    key: \"scrollToTheSelection\",\n    value: function scrollToTheSelection() {\n      var range = this.document.selection.getFirstRange();\n\n      if (range) {\n        scrollViewportToShowTarget({\n          target: this.domConverter.viewRangeToDom(range),\n          viewportOffset: 20\n        });\n      }\n    }\n    /**\n     * It will focus DOM element representing {@link module:engine/view/editableelement~EditableElement EditableElement}\n     * that is currently having selection inside.\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      if (!this.document.isFocused) {\n        var editable = this.document.selection.editableElement;\n\n        if (editable) {\n          this.domConverter.focus(editable);\n          this.forceRender();\n        } else {\n          /**\n           * Before focusing view document, selection should be placed inside one of the view's editables.\n           * Normally its selection will be converted from model document (which have default selection), but\n           * when using view document on its own, we need to manually place selection before focusing it.\n           *\n           * @error view-focus-no-selection\n           */\n          log.warn('view-focus-no-selection: There is no selection in any editable to focus.');\n        }\n      }\n    }\n    /**\n     * The `change()` method is the primary way of changing the view. You should use it to modify any node in the view tree.\n     * It makes sure that after all changes are made the view is rendered to the DOM (assuming that the view will be changed\n     * inside the callback). It prevents situations when the DOM is updated when the view state is not yet correct. It allows\n     * to nest calls one inside another and still performs a single rendering after all those changes are made.\n     * It also returns the return value of its callback.\n     *\n     *\t\tconst text = view.change( writer => {\n     *\t\t\tconst newText = writer.createText( 'foo' );\n     *\t\t\twriter.insert( position1, newText );\n     *\n     *\t\t\tview.change( writer => {\n     *\t\t\t\twriter.insert( position2, writer.createText( 'bar' ) );\n     *\t\t\t} );\n     *\n     * \t\t\twriter.remove( range );\n     *\n     * \t\t\treturn newText;\n     *\t\t} );\n     *\n     * When the outermost change block is done and rendering to the DOM is over the\n     * {@link module:engine/view/view~View#event:render `View#render`} event is fired.\n     *\n     * This method throws a `applying-view-changes-on-rendering` error when\n     * the change block is used after rendering to the DOM has started.\n     *\n     * @param {Function} callback Callback function which may modify the view.\n     * @returns {*} Value returned by the callback.\n     */\n\n  }, {\n    key: \"change\",\n    value: function change(callback) {\n      if (this.isRenderingInProgress || this._postFixersInProgress) {\n        /**\n         * Thrown when there is an attempt to make changes to the view tree when it is in incorrect state. This may\n         * cause some unexpected behaviour and inconsistency between the DOM and the view.\n         * This may be caused by:\n         *\n         * * calling {@link #change} or {@link #forceRender} during rendering process,\n         * * calling {@link #change} or {@link #forceRender} inside of\n         *   {@link module:engine/view/document~Document#registerPostFixer post-fixer function}.\n         *\n         * @error cannot-change-view-tree\n         */\n        throw new CKEditorError('cannot-change-view-tree: ' + 'Attempting to make changes to the view when it is in an incorrect state: rendering or post-fixers are in progress. ' + 'This may cause some unexpected behavior and inconsistency between the DOM and the view.', this);\n      } // Recursive call to view.change() method - execute listener immediately.\n\n\n      if (this._ongoingChange) {\n        return callback(this._writer);\n      } // This lock will assure that all recursive calls to view.change() will end up in same block - one \"render\"\n      // event for all nested calls.\n\n\n      this._ongoingChange = true;\n      var callbackResult = callback(this._writer);\n      this._ongoingChange = false; // This lock is used by editing controller to render changes from outer most model.change() once. As plugins might call\n      // view.change() inside model.change() block - this will ensures that postfixers and rendering are called once after all changes.\n      // Also, we don't need to render anything if there're no changes since last rendering.\n\n      if (!this._renderingDisabled && this._hasChangedSinceTheLastRendering) {\n        this._postFixersInProgress = true;\n\n        this.document._callPostFixers(this._writer);\n\n        this._postFixersInProgress = false;\n        this.fire('render');\n      }\n\n      return callbackResult;\n    }\n    /**\n     * Forces rendering {@link module:engine/view/document~Document view document} to DOM. If any view changes are\n     * currently in progress, rendering will start after all {@link #change change blocks} are processed.\n     *\n     * Note that this method is dedicated for special cases. All view changes should be wrapped in the {@link #change}\n     * block and the view will automatically check whether it needs to render DOM or not.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `applying-view-changes-on-rendering` when\n     * trying to re-render when rendering to DOM has already started.\n     */\n\n  }, {\n    key: \"forceRender\",\n    value: function forceRender() {\n      this._hasChangedSinceTheLastRendering = true;\n      this.change(function () {});\n    }\n    /**\n     * Destroys this instance. Makes sure that all observers are destroyed and listeners removed.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = this._observers.values()[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var observer = _step5.value;\n          observer.destroy();\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5[\"return\"] != null) {\n            _iterator5[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      this.document.destroy();\n      this.stopListening();\n    }\n    /**\n     * Creates position at the given location. The location can be specified as:\n     *\n     * * a {@link module:engine/view/position~Position position},\n     * * parent element and offset (offset defaults to `0`),\n     * * parent element and `'end'` (sets position at the end of that element),\n     * * {@link module:engine/view/item~Item view item} and `'before'` or `'after'` (sets position before or after given view item).\n     *\n     * This method is a shortcut to other constructors such as:\n     *\n     * * {@link #createPositionBefore},\n     * * {@link #createPositionAfter},\n     *\n     * @param {module:engine/view/item~Item|module:engine/model/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n     * first parameter is a {@link module:engine/view/item~Item view item}.\n     */\n\n  }, {\n    key: \"createPositionAt\",\n    value: function createPositionAt(itemOrPosition, offset) {\n      return Position._createAt(itemOrPosition, offset);\n    }\n    /**\n     * Creates a new position after given view item.\n     *\n     * @param {module:engine/view/item~Item} item View item after which the position should be located.\n     * @returns {module:engine/view/position~Position}\n     */\n\n  }, {\n    key: \"createPositionAfter\",\n    value: function createPositionAfter(item) {\n      return Position._createAfter(item);\n    }\n    /**\n     * Creates a new position before given view item.\n     *\n     * @param {module:engine/view/item~Item} item View item before which the position should be located.\n     * @returns {module:engine/view/position~Position}\n     */\n\n  }, {\n    key: \"createPositionBefore\",\n    value: function createPositionBefore(item) {\n      return Position._createBefore(item);\n    }\n    /**\n     * Creates a range spanning from `start` position to `end` position.\n     *\n     * **Note:** This factory method creates it's own {@link module:engine/view/position~Position} instances basing on passed values.\n     *\n     * @param {module:engine/view/position~Position} start Start position.\n     * @param {module:engine/view/position~Position} [end] End position. If not set, range will be collapsed at `start` position.\n     * @returns {module:engine/view/range~Range}\n     */\n\n  }, {\n    key: \"createRange\",\n    value: function createRange(start, end) {\n      return new Range(start, end);\n    }\n    /**\n     * Creates a range that starts before given {@link module:engine/view/item~Item view item} and ends after it.\n     *\n     * @param {module:engine/view/item~Item} item\n     * @returns {module:engine/view/range~Range}\n     */\n\n  }, {\n    key: \"createRangeOn\",\n    value: function createRangeOn(item) {\n      return Range._createOn(item);\n    }\n    /**\n     * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n     * that element and ends after the last child of that element.\n     *\n     * @param {module:engine/view/element~Element} element Element which is a parent for the range.\n     * @returns {module:engine/view/range~Range}\n     */\n\n  }, {\n    key: \"createRangeIn\",\n    value: function createRangeIn(element) {\n      return Range._createIn(element);\n    }\n    /**\n     Creates new {@link module:engine/view/selection~Selection} instance.\n     *\n     * \t\t// Creates empty selection without ranges.\n     *\t\tconst selection = view.createSelection();\n     *\n     *\t\t// Creates selection at the given range.\n     *\t\tconst range = view.createRange( start, end );\n     *\t\tconst selection = view.createSelection( range );\n     *\n     *\t\t// Creates selection at the given ranges\n     * \t\tconst ranges = [ view.createRange( start1, end2 ), view.createRange( star2, end2 ) ];\n     *\t\tconst selection = view.createSelection( ranges );\n     *\n     *\t\t// Creates selection from the other selection.\n     *\t\tconst otherSelection = view.createSelection();\n     *\t\tconst selection = view.createSelection( otherSelection );\n     *\n     *\t\t// Creates selection from the document selection.\n     *\t\tconst selection = view.createSelection( editor.editing.view.document.selection );\n     *\n     * \t\t// Creates selection at the given position.\n     *\t\tconst position = view.createPositionFromPath( root, path );\n     *\t\tconst selection = view.createSelection( position );\n     *\n     *\t\t// Creates collapsed selection at the position of given item and offset.\n     *\t\tconst paragraph = view.createContainerElement( 'paragraph' );\n     *\t\tconst selection = view.createSelection( paragraph, offset );\n     *\n     *\t\t// Creates a range inside an {@link module:engine/view/element~Element element} which starts before the\n     *\t\t// first child of that element and ends after the last child of that element.\n     *\t\tconst selection = view.createSelection( paragraph, 'in' );\n     *\n     *\t\t// Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends\n     *\t\t// just after the item.\n     *\t\tconst selection = view.createSelection( paragraph, 'on' );\n     *\n     * `Selection`'s factory method allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n     *\n     *\t\t// Creates backward selection.\n     *\t\tconst selection = view.createSelection( range, { backward: true } );\n     *\n     * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n     * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n     * represented in other way, for example by applying proper CSS class.\n     *\n     * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\n     * (and be  properly handled by screen readers).\n     *\n     *\t\t// Creates fake selection with label.\n     *\t\tconst selection = view.createSelection( range, { fake: true, label: 'foo' } );\n     *\n     * @param {module:engine/view/selection~Selectable} [selectable=null]\n     * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Offset or place when selectable is an `Item`.\n     * @param {Object} [options]\n     * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n     * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n     * @param {String} [options.label] Label for the fake selection.\n     * @returns {module:engine/view/selection~Selection}\n     */\n\n  }, {\n    key: \"createSelection\",\n    value: function createSelection(selectable, placeOrOffset, options) {\n      return new Selection(selectable, placeOrOffset, options);\n    }\n    /**\n     * Disables or enables rendering. If the flag is set to `true` then the rendering will be disabled.\n     * If the flag is set to `false` and if there was some change in the meantime, then the rendering action will be performed.\n     *\n     * @protected\n     * @param {Boolean} flag A flag indicates whether the rendering should be disabled.\n     */\n\n  }, {\n    key: \"_disableRendering\",\n    value: function _disableRendering(flag) {\n      this._renderingDisabled = flag;\n\n      if (flag == false) {\n        // Render when you stop blocking rendering.\n        this.change(function () {});\n      }\n    }\n    /**\n     * Renders all changes. In order to avoid triggering the observers (e.g. mutations) all observers are disabled\n     * before rendering and re-enabled after that.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      this.isRenderingInProgress = true;\n      this.disableObservers();\n\n      this._renderer.render();\n\n      this.enableObservers();\n      this.isRenderingInProgress = false;\n    }\n    /**\n     * Fired after a topmost {@link module:engine/view/view~View#change change block} and all\n     * {@link module:engine/view/document~Document#registerPostFixer post-fixers} are executed.\n     *\n     * Actual rendering is performed as a first listener on 'normal' priority.\n     *\n     *\t\tview.on( 'render', () => {\n     *\t\t\t// Rendering to the DOM is complete.\n     *\t\t} );\n     *\n     * This event is useful when you want to update interface elements after the rendering, e.g. position of the\n     * balloon panel. If you wants to change view structure use\n     * {@link module:engine/view/document~Document#registerPostFixer post-fixers}.\n     *\n     * @event module:engine/view/view~View#event:render\n     */\n\n  }]);\n\n  return View;\n}();\n\nexport { View as default };\nmix(View, ObservableMixin);","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/tomap\n */\nimport objectToMap from './objecttomap';\nimport { isPlainObject } from 'lodash-es';\n/**\n * Transforms object or iterable to map. Iterable needs to be in the format acceptable by the `Map` constructor.\n *\n *\t\tmap = toMap( { 'foo': 1, 'bar': 2 } );\n *\t\tmap = toMap( [ [ 'foo', 1 ], [ 'bar', 2 ] ] );\n *\t\tmap = toMap( anotherMap );\n *\n * @param {Object|Iterable} data Object or iterable to transform.\n * @returns {Map} Map created from data.\n */\n\nexport default function toMap(data) {\n  if (isPlainObject(data)) {\n    return objectToMap(data);\n  } else {\n    return new Map(data);\n  }\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/node\n */\nimport toMap from '@ckeditor/ckeditor5-utils/src/tomap';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays'; // To check if component is loaded more than once.\n\nimport '@ckeditor/ckeditor5-utils/src/version';\n/**\n * Model node. Most basic structure of model tree.\n *\n * This is an abstract class that is a base for other classes representing different nodes in model.\n *\n * **Note:** If a node is detached from the model tree, you can manipulate it using it's API.\n * However, it is **very important** that nodes already attached to model tree should be only changed through\n * {@link module:engine/model/writer~Writer Writer API}.\n *\n * Changes done by `Node` methods, like {@link module:engine/model/element~Element#_insertChild _insertChild} or\n * {@link module:engine/model/node~Node#_setAttribute _setAttribute}\n * do not generate {@link module:engine/model/operation/operation~Operation operations}\n * which are essential for correct editor work if you modify nodes in {@link module:engine/model/document~Document document} root.\n *\n * The flow of working on `Node` (and classes that inherits from it) is as such:\n * 1. You can create a `Node` instance, modify it using it's API.\n * 2. Add `Node` to the model using `Batch` API.\n * 3. Change `Node` that was already added to the model using `Batch` API.\n *\n * Similarly, you cannot use `Batch` API on a node that has not been added to the model tree, with the exception\n * of {@link module:engine/model/writer~Writer#insert inserting} that node to the model tree.\n *\n * Be aware that using {@link module:engine/model/writer~Writer#remove remove from Batch API} does not allow to use `Node` API because\n * the information about `Node` is still kept in model document.\n *\n * In case of {@link module:engine/model/element~Element element node}, adding and removing children also counts as changing a node and\n * follows same rules.\n */\n\nvar Node =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a model node.\n   *\n   * This is an abstract class, so this constructor should not be used directly.\n   *\n   * @abstract\n   * @param {Object} [attrs] Node's attributes. See {@link module:utils/tomap~toMap} for a list of accepted values.\n   */\n  function Node(attrs) {\n    _classCallCheck(this, Node);\n\n    /**\n     * Parent of this node. It could be {@link module:engine/model/element~Element}\n     * or {@link module:engine/model/documentfragment~DocumentFragment}.\n     * Equals to `null` if the node has no parent.\n     *\n     * @readonly\n     * @member {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment|null}\n     */\n    this.parent = null;\n    /**\n     * Attributes set on this node.\n     *\n     * @private\n     * @member {Map} module:engine/model/node~Node#_attrs\n     */\n\n    this._attrs = toMap(attrs);\n  }\n  /**\n   * Index of this node in it's parent or `null` if the node has no parent.\n   *\n   * Accessing this property throws an error if this node's parent element does not contain it.\n   * This means that model tree got broken.\n   *\n   * @readonly\n   * @type {Number|null}\n   */\n\n\n  _createClass(Node, [{\n    key: \"getPath\",\n\n    /**\n     * Gets path to the node. The path is an array containing starting offsets of consecutive ancestors of this node,\n     * beginning from {@link module:engine/model/node~Node#root root}, down to this node's starting offset. The path can be used to\n     * create {@link module:engine/model/position~Position Position} instance.\n     *\n     *\t\tconst abc = new Text( 'abc' );\n     *\t\tconst foo = new Text( 'foo' );\n     *\t\tconst h1 = new Element( 'h1', null, new Text( 'header' ) );\n     *\t\tconst p = new Element( 'p', null, [ abc, foo ] );\n     *\t\tconst div = new Element( 'div', null, [ h1, p ] );\n     *\t\tfoo.getPath(); // Returns [ 1, 3 ]. `foo` is in `p` which is in `div`. `p` starts at offset 1, while `foo` at 3.\n     *\t\th1.getPath(); // Returns [ 0 ].\n     *\t\tdiv.getPath(); // Returns [].\n     *\n     * @returns {Array.<Number>} The path.\n     */\n    value: function getPath() {\n      var path = [];\n      var node = this; // eslint-disable-line consistent-this\n\n      while (node.parent) {\n        path.unshift(node.startOffset);\n        node = node.parent;\n      }\n\n      return path;\n    }\n    /**\n     * Returns ancestors array of this node.\n     *\n     * @param {Object} options Options object.\n     * @param {Boolean} [options.includeSelf=false] When set to `true` this node will be also included in parent's array.\n     * @param {Boolean} [options.parentFirst=false] When set to `true`, array will be sorted from node's parent to root element,\n     * otherwise root element will be the first item in the array.\n     * @returns {Array} Array with ancestors.\n     */\n\n  }, {\n    key: \"getAncestors\",\n    value: function getAncestors() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        includeSelf: false,\n        parentFirst: false\n      };\n      var ancestors = [];\n      var parent = options.includeSelf ? this : this.parent;\n\n      while (parent) {\n        ancestors[options.parentFirst ? 'push' : 'unshift'](parent);\n        parent = parent.parent;\n      }\n\n      return ancestors;\n    }\n    /**\n     * Returns a {@link module:engine/model/element~Element} or {@link module:engine/model/documentfragment~DocumentFragment}\n     * which is a common ancestor of both nodes.\n     *\n     * @param {module:engine/model/node~Node} node The second node.\n     * @param {Object} options Options object.\n     * @param {Boolean} [options.includeSelf=false] When set to `true` both nodes will be considered \"ancestors\" too.\n     * Which means that if e.g. node A is inside B, then their common ancestor will be B.\n     * @returns {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment|null}\n     */\n\n  }, {\n    key: \"getCommonAncestor\",\n    value: function getCommonAncestor(node) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var ancestorsA = this.getAncestors(options);\n      var ancestorsB = node.getAncestors(options);\n      var i = 0;\n\n      while (ancestorsA[i] == ancestorsB[i] && ancestorsA[i]) {\n        i++;\n      }\n\n      return i === 0 ? null : ancestorsA[i - 1];\n    }\n    /**\n     * Returns whether this node is before given node. `false` is returned if nodes are in different trees (for example,\n     * in different {@link module:engine/model/documentfragment~DocumentFragment}s).\n     *\n     * @param {module:engine/model/node~Node} node Node to compare with.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isBefore\",\n    value: function isBefore(node) {\n      // Given node is not before this node if they are same.\n      if (this == node) {\n        return false;\n      } // Return `false` if it is impossible to compare nodes.\n\n\n      if (this.root !== node.root) {\n        return false;\n      }\n\n      var thisPath = this.getPath();\n      var nodePath = node.getPath();\n      var result = compareArrays(thisPath, nodePath);\n\n      switch (result) {\n        case 'prefix':\n          return true;\n\n        case 'extension':\n          return false;\n\n        default:\n          return thisPath[result] < nodePath[result];\n      }\n    }\n    /**\n     * Returns whether this node is after given node. `false` is returned if nodes are in different trees (for example,\n     * in different {@link module:engine/model/documentfragment~DocumentFragment}s).\n     *\n     * @param {module:engine/model/node~Node} node Node to compare with.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isAfter\",\n    value: function isAfter(node) {\n      // Given node is not before this node if they are same.\n      if (this == node) {\n        return false;\n      } // Return `false` if it is impossible to compare nodes.\n\n\n      if (this.root !== node.root) {\n        return false;\n      } // In other cases, just check if the `node` is before, and return the opposite.\n\n\n      return !this.isBefore(node);\n    }\n    /**\n     * Checks if the node has an attribute with given key.\n     *\n     * @param {String} key Key of attribute to check.\n     * @returns {Boolean} `true` if attribute with given key is set on node, `false` otherwise.\n     */\n\n  }, {\n    key: \"hasAttribute\",\n    value: function hasAttribute(key) {\n      return this._attrs.has(key);\n    }\n    /**\n     * Gets an attribute value for given key or `undefined` if that attribute is not set on node.\n     *\n     * @param {String} key Key of attribute to look for.\n     * @returns {*} Attribute value or `undefined`.\n     */\n\n  }, {\n    key: \"getAttribute\",\n    value: function getAttribute(key) {\n      return this._attrs.get(key);\n    }\n    /**\n     * Returns iterator that iterates over this node's attributes.\n     *\n     * Attributes are returned as arrays containing two items. First one is attribute key and second is attribute value.\n     * This format is accepted by native `Map` object and also can be passed in `Node` constructor.\n     *\n     * @returns {Iterable.<*>}\n     */\n\n  }, {\n    key: \"getAttributes\",\n    value: function getAttributes() {\n      return this._attrs.entries();\n    }\n    /**\n     * Returns iterator that iterates over this node's attribute keys.\n     *\n     * @returns {Iterable.<String>}\n     */\n\n  }, {\n    key: \"getAttributeKeys\",\n    value: function getAttributeKeys() {\n      return this._attrs.keys();\n    }\n    /**\n     * Converts `Node` to plain object and returns it.\n     *\n     * @returns {Object} `Node` converted to plain object.\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = {}; // Serializes attributes to the object.\n      // attributes = { a: 'foo', b: 1, c: true }.\n\n      if (this._attrs.size) {\n        json.attributes = Array.from(this._attrs).reduce(function (result, attr) {\n          result[attr[0]] = attr[1];\n          return result;\n        }, {});\n      }\n\n      return json;\n    }\n    /**\n     * Creates a copy of this node, that is a node with exactly same attributes, and returns it.\n     *\n     * @protected\n     * @returns {module:engine/model/node~Node} Node with same attributes as this node.\n     */\n\n  }, {\n    key: \"_clone\",\n    value: function _clone() {\n      return new Node(this._attrs);\n    }\n    /**\n     * Removes this node from it's parent.\n     *\n     * @see module:engine/model/writer~Writer#remove\n     * @protected\n     */\n\n  }, {\n    key: \"_remove\",\n    value: function _remove() {\n      this.parent._removeChildren(this.index);\n    }\n    /**\n     * Sets attribute on the node. If attribute with the same key already is set, it's value is overwritten.\n     *\n     * @see module:engine/model/writer~Writer#setAttribute\n     * @protected\n     * @param {String} key Key of attribute to set.\n     * @param {*} value Attribute value.\n     */\n\n  }, {\n    key: \"_setAttribute\",\n    value: function _setAttribute(key, value) {\n      this._attrs.set(key, value);\n    }\n    /**\n     * Removes all attributes from the node and sets given attributes.\n     *\n     * @see module:engine/model/writer~Writer#setAttributes\n     * @protected\n     * @param {Object} [attrs] Attributes to set. See {@link module:utils/tomap~toMap} for a list of accepted values.\n     */\n\n  }, {\n    key: \"_setAttributesTo\",\n    value: function _setAttributesTo(attrs) {\n      this._attrs = toMap(attrs);\n    }\n    /**\n     * Removes an attribute with given key from the node.\n     *\n     * @see module:engine/model/writer~Writer#removeAttribute\n     * @protected\n     * @param {String} key Key of attribute to remove.\n     * @returns {Boolean} `true` if the attribute was set on the element, `false` otherwise.\n     */\n\n  }, {\n    key: \"_removeAttribute\",\n    value: function _removeAttribute(key) {\n      return this._attrs[\"delete\"](key);\n    }\n    /**\n     * Removes all attributes from the node.\n     *\n     * @see module:engine/model/writer~Writer#clearAttributes\n     * @protected\n     */\n\n  }, {\n    key: \"_clearAttributes\",\n    value: function _clearAttributes() {\n      this._attrs.clear();\n    }\n    /**\n     * Checks whether given model tree object is of given type.\n     *\n     * This method is useful when processing model tree objects that are of unknown type. For example, a function\n     * may return {@link module:engine/model/documentfragment~DocumentFragment} or {@link module:engine/model/node~Node}\n     * that can be either text node or element. This method can be used to check what kind of object is returned.\n     *\n     *\t\tobj.is( 'node' ); // true for any node, false for document fragment and text fragment\n     *\t\tobj.is( 'documentFragment' ); // true for document fragment, false for any node\n     *\t\tobj.is( 'element' ); // true for any element, false for text node or document fragment\n     *\t\tobj.is( 'element', 'paragraph' ); // true only for element which name is 'paragraph'\n     *\t\tobj.is( 'paragraph' ); // shortcut for obj.is( 'element', 'paragraph' )\n     *\t\tobj.is( 'text' ); // true for text node, false for element and document fragment\n     *\t\tobj.is( 'textProxy' ); // true for text proxy object\n     *\n     * @method #is\n     * @param {'element'|'rootElement'|'text'|'textProxy'|'documentFragment'} type\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"is\",\n    value: function is(type) {\n      return type == 'node';\n    }\n  }, {\n    key: \"index\",\n    get: function get() {\n      var pos;\n\n      if (!this.parent) {\n        return null;\n      }\n\n      if ((pos = this.parent.getChildIndex(this)) === null) {\n        throw new CKEditorError('model-node-not-found-in-parent: The node\\'s parent does not contain this node.', this);\n      }\n\n      return pos;\n    }\n    /**\n     * Offset at which this node starts in it's parent. It is equal to the sum of {@link #offsetSize offsetSize}\n     * of all it's previous siblings. Equals to `null` if node has no parent.\n     *\n     * Accessing this property throws an error if this node's parent element does not contain it.\n     * This means that model tree got broken.\n     *\n     * @readonly\n     * @type {Number|null}\n     */\n\n  }, {\n    key: \"startOffset\",\n    get: function get() {\n      var pos;\n\n      if (!this.parent) {\n        return null;\n      }\n\n      if ((pos = this.parent.getChildStartOffset(this)) === null) {\n        throw new CKEditorError('model-node-not-found-in-parent: The node\\'s parent does not contain this node.', this);\n      }\n\n      return pos;\n    }\n    /**\n     * Offset size of this node. Represents how much \"offset space\" is occupied by the node in it's parent.\n     * It is important for {@link module:engine/model/position~Position position}. When node has `offsetSize` greater than `1`, position\n     * can be placed between that node start and end. `offsetSize` greater than `1` is for nodes that represents more\n     * than one entity, i.e. {@link module:engine/model/text~Text text node}.\n     *\n     * @readonly\n     * @type {Number}\n     */\n\n  }, {\n    key: \"offsetSize\",\n    get: function get() {\n      return 1;\n    }\n    /**\n     * Offset at which this node ends in it's parent. It is equal to the sum of this node's\n     * {@link module:engine/model/node~Node#startOffset start offset} and {@link #offsetSize offset size}.\n     * Equals to `null` if the node has no parent.\n     *\n     * @readonly\n     * @type {Number|null}\n     */\n\n  }, {\n    key: \"endOffset\",\n    get: function get() {\n      if (!this.parent) {\n        return null;\n      }\n\n      return this.startOffset + this.offsetSize;\n    }\n    /**\n     * Node's next sibling or `null` if the node is a last child of it's parent or if the node has no parent.\n     *\n     * @readonly\n     * @type {module:engine/model/node~Node|null}\n     */\n\n  }, {\n    key: \"nextSibling\",\n    get: function get() {\n      var index = this.index;\n      return index !== null && this.parent.getChild(index + 1) || null;\n    }\n    /**\n     * Node's previous sibling or `null` if the node is a first child of it's parent or if the node has no parent.\n     *\n     * @readonly\n     * @type {module:engine/model/node~Node|null}\n     */\n\n  }, {\n    key: \"previousSibling\",\n    get: function get() {\n      var index = this.index;\n      return index !== null && this.parent.getChild(index - 1) || null;\n    }\n    /**\n     * The top-most ancestor of the node. If node has no parent it is the root itself. If the node is a part\n     * of {@link module:engine/model/documentfragment~DocumentFragment}, it's `root` is equal to that `DocumentFragment`.\n     *\n     * @readonly\n     * @type {module:engine/model/node~Node|module:engine/model/documentfragment~DocumentFragment}\n     */\n\n  }, {\n    key: \"root\",\n    get: function get() {\n      var root = this; // eslint-disable-line consistent-this\n\n      while (root.parent) {\n        root = root.parent;\n      }\n\n      return root;\n    }\n    /**\n     * {@link module:engine/model/document~Document Document} that owns this node or `null` if the node has no parent or is inside\n     * a {@link module:engine/model/documentfragment~DocumentFragment DocumentFragment}.\n     *\n     * @readonly\n     * @type {module:engine/model/document~Document|null}\n     */\n\n  }, {\n    key: \"document\",\n    get: function get() {\n      // This is a top element of a sub-tree.\n      if (this.root == this) {\n        return null;\n      } // Root may be `DocumentFragment` which does not have document property.\n\n\n      return this.root.document || null;\n    }\n  }]);\n\n  return Node;\n}();\n/**\n * The node's parent does not contain this node.\n *\n * This error may be thrown from corrupted trees.\n *\n * @error model-node-not-found-in-parent\n */\n\n\nexport { Node as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/text\n */\nimport Node from './node';\n/**\n * Model text node. Type of {@link module:engine/model/node~Node node} that contains {@link module:engine/model/text~Text#data text data}.\n *\n * **Important:** see {@link module:engine/model/node~Node} to read about restrictions using `Text` and `Node` API.\n *\n * **Note:** keep in mind that `Text` instances might indirectly got removed from model tree when model is changed.\n * This happens when {@link module:engine/model/writer~Writer model writer} is used to change model and the text node is merged with\n * another text node. Then, both text nodes are removed and a new text node is inserted into the model. Because of\n * this behavior, keeping references to `Text` is not recommended. Instead, consider creating\n * {@link module:engine/model/liveposition~LivePosition live position} placed before the text node.\n *\n * @extends {module:engine/model/node~Node}\n */\n\nvar Text =\n/*#__PURE__*/\nfunction (_Node) {\n  _inherits(Text, _Node);\n\n  /**\n   * Creates a text node.\n   *\n   * **Note:** Constructor of this class shouldn't be used directly in the code.\n   * Use the {@link module:engine/model/writer~Writer#createText} method instead.\n   *\n   * @protected\n   * @param {String} data Node's text.\n   * @param {Object} [attrs] Node's attributes. See {@link module:utils/tomap~toMap} for a list of accepted values.\n   */\n  function Text(data, attrs) {\n    var _this;\n\n    _classCallCheck(this, Text);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Text).call(this, attrs));\n    /**\n     * Text data contained in this text node.\n     *\n     * @protected\n     * @type {String}\n     */\n\n    _this._data = data || '';\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(Text, [{\n    key: \"is\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function is(type) {\n      return type == 'text' || _get(_getPrototypeOf(Text.prototype), \"is\", this).call(this, type);\n    }\n    /**\n     * Converts `Text` instance to plain object and returns it.\n     *\n     * @returns {Object} `Text` instance converted to plain object.\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = _get(_getPrototypeOf(Text.prototype), \"toJSON\", this).call(this);\n\n      json.data = this.data;\n      return json;\n    }\n    /**\n     * Creates a copy of this text node and returns it. Created text node has same text data and attributes as original text node.\n     *\n     * @protected\n     * @returns {module:engine/model/text~Text} `Text` instance created using given plain object.\n     */\n\n  }, {\n    key: \"_clone\",\n    value: function _clone() {\n      return new Text(this.data, this.getAttributes());\n    }\n    /**\n     * Creates a `Text` instance from given plain object (i.e. parsed JSON string).\n     *\n     * @param {Object} json Plain object to be converted to `Text`.\n     * @returns {module:engine/model/text~Text} `Text` instance created using given plain object.\n     */\n\n  }, {\n    key: \"offsetSize\",\n    get: function get() {\n      return this.data.length;\n    }\n    /**\n     * Returns a text data contained in the node.\n     *\n     * @readonly\n     * @type {String}\n     */\n\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this._data;\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      return new Text(json.data, json.attributes);\n    }\n  }]);\n\n  return Text;\n}(Node);\n\nexport { Text as default };","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/textproxy\n */\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * `TextProxy` represents a part of {@link module:engine/model/text~Text text node}.\n *\n * Since {@link module:engine/model/position~Position positions} can be placed between characters of a text node,\n * {@link module:engine/model/range~Range ranges} may contain only parts of text nodes. When {@link module:engine/model/range~Range#getItems\n * getting items}\n * contained in such range, we need to represent a part of that text node, since returning the whole text node would be incorrect.\n * `TextProxy` solves this issue.\n *\n * `TextProxy` has an API similar to {@link module:engine/model/text~Text Text} and allows to do most of the common tasks performed\n * on model nodes.\n *\n * **Note:** Some `TextProxy` instances may represent whole text node, not just a part of it.\n * See {@link module:engine/model/textproxy~TextProxy#isPartial}.\n *\n * **Note:** `TextProxy` is not an instance of {@link module:engine/model/node~Node node}. Keep this in mind when using it as a\n * parameter of methods.\n *\n * **Note:** `TextProxy` is a readonly interface. If you want to perform changes on model data represented by a `TextProxy`\n * use {@link module:engine/model/writer~Writer model writer API}.\n *\n * **Note:** `TextProxy` instances are created on the fly, basing on the current state of model. Because of this, it is\n * highly unrecommended to store references to `TextProxy` instances. `TextProxy` instances are not refreshed when\n * model changes, so they might get invalidated. Instead, consider creating {@link module:engine/model/liveposition~LivePosition live\n * position}.\n *\n * `TextProxy` instances are created by {@link module:engine/model/treewalker~TreeWalker model tree walker}. You should not need to create\n * an instance of this class by your own.\n */\n\nvar TextProxy =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a text proxy.\n   *\n   * @protected\n   * @param {module:engine/model/text~Text} textNode Text node which part is represented by this text proxy.\n   * @param {Number} offsetInText Offset in {@link module:engine/model/textproxy~TextProxy#textNode text node} from which the text proxy\n   * starts.\n   * @param {Number} length Text proxy length, that is how many text node's characters, starting from `offsetInText` it represents.\n   * @constructor\n   */\n  function TextProxy(textNode, offsetInText, length) {\n    _classCallCheck(this, TextProxy);\n\n    /**\n     * Text node which part is represented by this text proxy.\n     *\n     * @readonly\n     * @member {module:engine/model/text~Text}\n     */\n    this.textNode = textNode;\n\n    if (offsetInText < 0 || offsetInText > textNode.offsetSize) {\n      /**\n       * Given `offsetInText` value is incorrect.\n       *\n       * @error model-textproxy-wrong-offsetintext\n       */\n      throw new CKEditorError('model-textproxy-wrong-offsetintext: Given offsetInText value is incorrect.', this);\n    }\n\n    if (length < 0 || offsetInText + length > textNode.offsetSize) {\n      /**\n       * Given `length` value is incorrect.\n       *\n       * @error model-textproxy-wrong-length\n       */\n      throw new CKEditorError('model-textproxy-wrong-length: Given length value is incorrect.', this);\n    }\n    /**\n     * Text data represented by this text proxy.\n     *\n     * @readonly\n     * @member {String}\n     */\n\n\n    this.data = textNode.data.substring(offsetInText, offsetInText + length);\n    /**\n     * Offset in {@link module:engine/model/textproxy~TextProxy#textNode text node} from which the text proxy starts.\n     *\n     * @readonly\n     * @member {Number}\n     */\n\n    this.offsetInText = offsetInText;\n  }\n  /**\n   * Offset at which this text proxy starts in it's parent.\n   *\n   * @see module:engine/model/node~Node#startOffset\n   * @readonly\n   * @type {Number}\n   */\n\n\n  _createClass(TextProxy, [{\n    key: \"is\",\n\n    /**\n     * Checks whether given model tree object is of given type.\n     *\n     * Read more in {@link module:engine/model/node~Node#is}.\n     *\n     * @param {String} type\n     * @returns {Boolean}\n     */\n    value: function is(type) {\n      return type == 'textProxy';\n    }\n    /**\n     * Gets path to this text proxy.\n     *\n     * @see module:engine/model/node~Node#getPath\n     * @returns {Array.<Number>}\n     */\n\n  }, {\n    key: \"getPath\",\n    value: function getPath() {\n      var path = this.textNode.getPath();\n\n      if (path.length > 0) {\n        path[path.length - 1] += this.offsetInText;\n      }\n\n      return path;\n    }\n    /**\n     * Returns ancestors array of this text proxy.\n     *\n     * @param {Object} options Options object.\n     * @param {Boolean} [options.includeSelf=false] When set to `true` this text proxy will be also included in parent's array.\n     * @param {Boolean} [options.parentFirst=false] When set to `true`, array will be sorted from text proxy parent to root element,\n     * otherwise root element will be the first item in the array.\n     * @returns {Array} Array with ancestors.\n     */\n\n  }, {\n    key: \"getAncestors\",\n    value: function getAncestors() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        includeSelf: false,\n        parentFirst: false\n      };\n      var ancestors = [];\n      var parent = options.includeSelf ? this : this.parent;\n\n      while (parent) {\n        ancestors[options.parentFirst ? 'push' : 'unshift'](parent);\n        parent = parent.parent;\n      }\n\n      return ancestors;\n    }\n    /**\n     * Checks if this text proxy has an attribute for given key.\n     *\n     * @param {String} key Key of attribute to check.\n     * @returns {Boolean} `true` if attribute with given key is set on text proxy, `false` otherwise.\n     */\n\n  }, {\n    key: \"hasAttribute\",\n    value: function hasAttribute(key) {\n      return this.textNode.hasAttribute(key);\n    }\n    /**\n     * Gets an attribute value for given key or `undefined` if that attribute is not set on text proxy.\n     *\n     * @param {String} key Key of attribute to look for.\n     * @returns {*} Attribute value or `undefined`.\n     */\n\n  }, {\n    key: \"getAttribute\",\n    value: function getAttribute(key) {\n      return this.textNode.getAttribute(key);\n    }\n    /**\n     * Returns iterator that iterates over this node's attributes. Attributes are returned as arrays containing two\n     * items. First one is attribute key and second is attribute value.\n     *\n     * This format is accepted by native `Map` object and also can be passed in `Node` constructor.\n     *\n     * @returns {Iterable.<*>}\n     */\n\n  }, {\n    key: \"getAttributes\",\n    value: function getAttributes() {\n      return this.textNode.getAttributes();\n    }\n    /**\n     * Returns iterator that iterates over this node's attribute keys.\n     *\n     * @returns {Iterable.<String>}\n     */\n\n  }, {\n    key: \"getAttributeKeys\",\n    value: function getAttributeKeys() {\n      return this.textNode.getAttributeKeys();\n    }\n  }, {\n    key: \"startOffset\",\n    get: function get() {\n      return this.textNode.startOffset !== null ? this.textNode.startOffset + this.offsetInText : null;\n    }\n    /**\n     * Offset size of this text proxy. Equal to the number of characters represented by the text proxy.\n     *\n     * @see module:engine/model/node~Node#offsetSize\n     * @readonly\n     * @type {Number}\n     */\n\n  }, {\n    key: \"offsetSize\",\n    get: function get() {\n      return this.data.length;\n    }\n    /**\n     * Offset at which this text proxy ends in it's parent.\n     *\n     * @see module:engine/model/node~Node#endOffset\n     * @readonly\n     * @type {Number}\n     */\n\n  }, {\n    key: \"endOffset\",\n    get: function get() {\n      return this.startOffset !== null ? this.startOffset + this.offsetSize : null;\n    }\n    /**\n     * Flag indicating whether `TextProxy` instance covers only part of the original {@link module:engine/model/text~Text text node}\n     * (`true`) or the whole text node (`false`).\n     *\n     * This is `false` when text proxy starts at the very beginning of {@link module:engine/model/textproxy~TextProxy#textNode textNode}\n     * ({@link module:engine/model/textproxy~TextProxy#offsetInText offsetInText} equals `0`) and text proxy sizes is equal to\n     * text node size.\n     *\n     * @readonly\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isPartial\",\n    get: function get() {\n      return this.offsetSize !== this.textNode.offsetSize;\n    }\n    /**\n     * Parent of this text proxy, which is same as parent of text node represented by this text proxy.\n     *\n     * @readonly\n     * @type {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment|null}\n     */\n\n  }, {\n    key: \"parent\",\n    get: function get() {\n      return this.textNode.parent;\n    }\n    /**\n     * Root of this text proxy, which is same as root of text node represented by this text proxy.\n     *\n     * @readonly\n     * @type {module:engine/model/node~Node|module:engine/model/documentfragment~DocumentFragment}\n     */\n\n  }, {\n    key: \"root\",\n    get: function get() {\n      return this.textNode.root;\n    }\n    /**\n     * {@link module:engine/model/document~Document Document} that owns text node represented by this text proxy or `null` if the text node\n     * has no parent or is inside a {@link module:engine/model/documentfragment~DocumentFragment DocumentFragment}.\n     *\n     * @readonly\n     * @type {module:engine/model/document~Document|null}\n     */\n\n  }, {\n    key: \"document\",\n    get: function get() {\n      return this.textNode.document;\n    }\n  }]);\n\n  return TextProxy;\n}();\n\nexport { TextProxy as default };","function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/nodelist\n */\nimport Node from './node';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * Provides an interface to operate on a list of {@link module:engine/model/node~Node nodes}. `NodeList` is used internally\n * in classes like {@link module:engine/model/element~Element Element}\n * or {@link module:engine/model/documentfragment~DocumentFragment DocumentFragment}.\n */\n\nvar NodeList =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an empty node list.\n   *\n   * @protected\n   * @param {Iterable.<module:engine/model/node~Node>} nodes Nodes contained in this node list.\n   */\n  function NodeList(nodes) {\n    _classCallCheck(this, NodeList);\n\n    /**\n     * Nodes contained in this node list.\n     *\n     * @private\n     * @member {Array.<module:engine/model/node~Node>}\n     */\n    this._nodes = [];\n\n    if (nodes) {\n      this._insertNodes(0, nodes);\n    }\n  }\n  /**\n   * Iterable interface.\n   *\n   * Iterates over all nodes contained inside this node list.\n   *\n   * @returns {Iterable.<module:engine/model/node~Node>}\n   */\n\n\n  _createClass(NodeList, [{\n    key: Symbol.iterator,\n    value: function value() {\n      return this._nodes[Symbol.iterator]();\n    }\n    /**\n     * Number of nodes contained inside this node list.\n     *\n     * @readonly\n     * @type {Number}\n     */\n\n  }, {\n    key: \"getNode\",\n\n    /**\n     * Gets the node at the given index. Returns `null` if incorrect index was passed.\n     *\n     * @param {Number} index Index of node.\n     * @returns {module:engine/model/node~Node|null} Node at given index.\n     */\n    value: function getNode(index) {\n      return this._nodes[index] || null;\n    }\n    /**\n     * Returns an index of the given node. Returns `null` if given node is not inside this node list.\n     *\n     * @param {module:engine/model/node~Node} node Child node to look for.\n     * @returns {Number|null} Child node's index.\n     */\n\n  }, {\n    key: \"getNodeIndex\",\n    value: function getNodeIndex(node) {\n      var index = this._nodes.indexOf(node);\n\n      return index == -1 ? null : index;\n    }\n    /**\n     * Returns the starting offset of given node. Starting offset is equal to the sum of\n     * {@link module:engine/model/node~Node#offsetSize offset sizes} of all nodes that are before this node in this node list.\n     *\n     * @param {module:engine/model/node~Node} node Node to look for.\n     * @returns {Number|null} Node's starting offset.\n     */\n\n  }, {\n    key: \"getNodeStartOffset\",\n    value: function getNodeStartOffset(node) {\n      var index = this.getNodeIndex(node);\n      return index === null ? null : this._nodes.slice(0, index).reduce(function (sum, node) {\n        return sum + node.offsetSize;\n      }, 0);\n    }\n    /**\n     * Converts index to offset in node list.\n     *\n     * Returns starting offset of a node that is at given index. Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError}\n     * `model-nodelist-index-out-of-bounds` if given index is less than `0` or more than {@link #length}.\n     *\n     * @param {Number} index Node's index.\n     * @returns {Number} Node's starting offset.\n     */\n\n  }, {\n    key: \"indexToOffset\",\n    value: function indexToOffset(index) {\n      if (index == this._nodes.length) {\n        return this.maxOffset;\n      }\n\n      var node = this._nodes[index];\n\n      if (!node) {\n        /**\n         * Given index cannot be found in the node list.\n         *\n         * @error nodelist-index-out-of-bounds\n         */\n        throw new CKEditorError('model-nodelist-index-out-of-bounds: Given index cannot be found in the node list.', this);\n      }\n\n      return this.getNodeStartOffset(node);\n    }\n    /**\n     * Converts offset in node list to index.\n     *\n     * Returns index of a node that occupies given offset. Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError}\n     * `model-nodelist-offset-out-of-bounds` if given offset is less than `0` or more than {@link #maxOffset}.\n     *\n     * @param {Number} offset Offset to look for.\n     * @returns {Number} Index of a node that occupies given offset.\n     */\n\n  }, {\n    key: \"offsetToIndex\",\n    value: function offsetToIndex(offset) {\n      var totalOffset = 0;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this._nodes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var node = _step.value;\n\n          if (offset >= totalOffset && offset < totalOffset + node.offsetSize) {\n            return this.getNodeIndex(node);\n          }\n\n          totalOffset += node.offsetSize;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      if (totalOffset != offset) {\n        /**\n         * Given offset cannot be found in the node list.\n         *\n         * @error model-nodelist-offset-out-of-bounds\n         * @param {Number} offset\n         * @param {module:engine/model/nodelist~NodeList} nodeList Stringified node list.\n         */\n        throw new CKEditorError('model-nodelist-offset-out-of-bounds: Given offset cannot be found in the node list.', this, {\n          offset: offset,\n          nodeList: this\n        });\n      }\n\n      return this.length;\n    }\n    /**\n     * Inserts given nodes at given index.\n     *\n     * @protected\n     * @param {Number} index Index at which nodes should be inserted.\n     * @param {Iterable.<module:engine/model/node~Node>} nodes Nodes to be inserted.\n     */\n\n  }, {\n    key: \"_insertNodes\",\n    value: function _insertNodes(index, nodes) {\n      var _this$_nodes;\n\n      // Validation.\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = nodes[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var node = _step2.value;\n\n          if (!(node instanceof Node)) {\n            /**\n             * Trying to insert an object which is not a Node instance.\n             *\n             * @error nodelist-insertNodes-not-node\n             */\n            throw new CKEditorError('model-nodelist-insertNodes-not-node: Trying to insert an object which is not a Node instance.', this);\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      (_this$_nodes = this._nodes).splice.apply(_this$_nodes, [index, 0].concat(_toConsumableArray(nodes)));\n    }\n    /**\n     * Removes one or more nodes starting at the given index.\n     *\n     * @protected\n     * @param {Number} indexStart Index of the first node to remove.\n     * @param {Number} [howMany=1] Number of nodes to remove.\n     * @returns {Array.<module:engine/model/node~Node>} Array containing removed nodes.\n     */\n\n  }, {\n    key: \"_removeNodes\",\n    value: function _removeNodes(indexStart) {\n      var howMany = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      return this._nodes.splice(indexStart, howMany);\n    }\n    /**\n     * Converts `NodeList` instance to an array containing nodes that were inserted in the node list. Nodes\n     * are also converted to their plain object representation.\n     *\n     * @returns {Array.<module:engine/model/node~Node>} `NodeList` instance converted to `Array`.\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this._nodes.map(function (node) {\n        return node.toJSON();\n      });\n    }\n  }, {\n    key: \"length\",\n    get: function get() {\n      return this._nodes.length;\n    }\n    /**\n     * Sum of {@link module:engine/model/node~Node#offsetSize offset sizes} of all nodes contained inside this node list.\n     *\n     * @readonly\n     * @type {Number}\n     */\n\n  }, {\n    key: \"maxOffset\",\n    get: function get() {\n      return this._nodes.reduce(function (sum, node) {\n        return sum + node.offsetSize;\n      }, 0);\n    }\n  }]);\n\n  return NodeList;\n}();\n\nexport { NodeList as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/element\n */\nimport Node from './node';\nimport NodeList from './nodelist';\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\n/**\n * Model element. Type of {@link module:engine/model/node~Node node} that has a {@link module:engine/model/element~Element#name name} and\n * {@link module:engine/model/element~Element#getChildren child nodes}.\n *\n * **Important**: see {@link module:engine/model/node~Node} to read about restrictions using `Element` and `Node` API.\n *\n * @extends {module:engine/model/node~Node}\n */\n\nvar Element =\n/*#__PURE__*/\nfunction (_Node) {\n  _inherits(Element, _Node);\n\n  /**\n   * Creates a model element.\n   *\n   * **Note:** Constructor of this class shouldn't be used directly in the code.\n   * Use the {@link module:engine/model/writer~Writer#createElement} method instead.\n   *\n   * @protected\n   * @param {String} name Element's name.\n   * @param {Object} [attrs] Element's attributes. See {@link module:utils/tomap~toMap} for a list of accepted values.\n   * @param {module:engine/model/node~Node|Iterable.<module:engine/model/node~Node>} [children]\n   * One or more nodes to be inserted as children of created element.\n   */\n  function Element(name, attrs, children) {\n    var _this;\n\n    _classCallCheck(this, Element);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Element).call(this, attrs));\n    /**\n     * Element name.\n     *\n     * @readonly\n     * @member {String} module:engine/model/element~Element#name\n     */\n\n    _this.name = name;\n    /**\n     * List of children nodes.\n     *\n     * @private\n     * @member {module:engine/model/nodelist~NodeList} module:engine/model/element~Element#_children\n     */\n\n    _this._children = new NodeList();\n\n    if (children) {\n      _this._insertChild(0, children);\n    }\n\n    return _this;\n  }\n  /**\n   * Number of this element's children.\n   *\n   * @readonly\n   * @type {Number}\n   */\n\n\n  _createClass(Element, [{\n    key: \"is\",\n\n    /**\n     * Checks whether this model object is of the given type.\n     *\n     *\t\tobj.name; // 'listItem'\n     *\t\tobj instanceof Element; // true\n     *\n     *\t\tobj.is( 'element' ); // true\n     *\t\tobj.is( 'listItem' ); // true\n     *\t\tobj.is( 'element', 'listItem' ); // true\n     *\t\tobj.is( 'text' ); // false\n     *\t\tobj.is( 'element', 'image' ); // false\n     *\n     * Read more in {@link module:engine/model/node~Node#is `Node#is()`}.\n     *\n     * @param {String} type Type to check when `name` parameter is present.\n     * Otherwise, it acts like the `name` parameter.\n     * @param {String} [name] Element name.\n     * @returns {Boolean}\n     */\n    value: function is(type) {\n      var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (!name) {\n        return type == 'element' || type == this.name || _get(_getPrototypeOf(Element.prototype), \"is\", this).call(this, type);\n      } else {\n        return type == 'element' && name == this.name;\n      }\n    }\n    /**\n     * Gets the child at the given index.\n     *\n     * @param {Number} index Index of child.\n     * @returns {module:engine/model/node~Node} Child node.\n     */\n\n  }, {\n    key: \"getChild\",\n    value: function getChild(index) {\n      return this._children.getNode(index);\n    }\n    /**\n     * Returns an iterator that iterates over all of this element's children.\n     *\n     * @returns {Iterable.<module:engine/model/node~Node>}\n     */\n\n  }, {\n    key: \"getChildren\",\n    value: function getChildren() {\n      return this._children[Symbol.iterator]();\n    }\n    /**\n     * Returns an index of the given child node. Returns `null` if given node is not a child of this element.\n     *\n     * @param {module:engine/model/node~Node} node Child node to look for.\n     * @returns {Number} Child node's index in this element.\n     */\n\n  }, {\n    key: \"getChildIndex\",\n    value: function getChildIndex(node) {\n      return this._children.getNodeIndex(node);\n    }\n    /**\n     * Returns the starting offset of given child. Starting offset is equal to the sum of\n     * {@link module:engine/model/node~Node#offsetSize offset sizes} of all node's siblings that are before it. Returns `null` if\n     * given node is not a child of this element.\n     *\n     * @param {module:engine/model/node~Node} node Child node to look for.\n     * @returns {Number} Child node's starting offset.\n     */\n\n  }, {\n    key: \"getChildStartOffset\",\n    value: function getChildStartOffset(node) {\n      return this._children.getNodeStartOffset(node);\n    }\n    /**\n     * Returns index of a node that occupies given offset. If given offset is too low, returns `0`. If given offset is\n     * too high, returns {@link module:engine/model/element~Element#getChildIndex index after last child}.\n     *\n     *\t\tconst textNode = new Text( 'foo' );\n     *\t\tconst pElement = new Element( 'p' );\n     *\t\tconst divElement = new Element( [ textNode, pElement ] );\n     *\t\tdivElement.offsetToIndex( -1 ); // Returns 0, because offset is too low.\n     *\t\tdivElement.offsetToIndex( 0 ); // Returns 0, because offset 0 is taken by `textNode` which is at index 0.\n     *\t\tdivElement.offsetToIndex( 1 ); // Returns 0, because `textNode` has `offsetSize` equal to 3, so it occupies offset 1 too.\n     *\t\tdivElement.offsetToIndex( 2 ); // Returns 0.\n     *\t\tdivElement.offsetToIndex( 3 ); // Returns 1.\n     *\t\tdivElement.offsetToIndex( 4 ); // Returns 2. There are no nodes at offset 4, so last available index is returned.\n     *\n     * @param {Number} offset Offset to look for.\n     * @returns {Number}\n     */\n\n  }, {\n    key: \"offsetToIndex\",\n    value: function offsetToIndex(offset) {\n      return this._children.offsetToIndex(offset);\n    }\n    /**\n     * Returns a descendant node by its path relative to this element.\n     *\n     *\t\t// <this>a<b>c</b></this>\n     *\t\tthis.getNodeByPath( [ 0 ] );     // -> \"a\"\n     *\t\tthis.getNodeByPath( [ 1 ] );     // -> <b>\n     *\t\tthis.getNodeByPath( [ 1, 0 ] );  // -> \"c\"\n     *\n     * @param {Array.<Number>} relativePath Path of the node to find, relative to this element.\n     * @returns {module:engine/model/node~Node}\n     */\n\n  }, {\n    key: \"getNodeByPath\",\n    value: function getNodeByPath(relativePath) {\n      var node = this; // eslint-disable-line consistent-this\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = relativePath[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var index = _step.value;\n          node = node.getChild(node.offsetToIndex(index));\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return node;\n    }\n    /**\n     * Converts `Element` instance to plain object and returns it. Takes care of converting all of this element's children.\n     *\n     * @returns {Object} `Element` instance converted to plain object.\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = _get(_getPrototypeOf(Element.prototype), \"toJSON\", this).call(this);\n\n      json.name = this.name;\n\n      if (this._children.length > 0) {\n        json.children = [];\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = this._children[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var node = _step2.value;\n            json.children.push(node.toJSON());\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n              _iterator2[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }\n\n      return json;\n    }\n    /**\n     * Creates a copy of this element and returns it. Created element has the same name and attributes as the original element.\n     * If clone is deep, the original element's children are also cloned. If not, then empty element is removed.\n     *\n     * @protected\n     * @param {Boolean} [deep=false] If set to `true` clones element and all its children recursively. When set to `false`,\n     * element will be cloned without any child.\n     */\n\n  }, {\n    key: \"_clone\",\n    value: function _clone() {\n      var deep = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var children = deep ? Array.from(this._children).map(function (node) {\n        return node._clone(true);\n      }) : null;\n      return new Element(this.name, this.getAttributes(), children);\n    }\n    /**\n     * {@link module:engine/model/element~Element#_insertChild Inserts} one or more nodes at the end of this element.\n     *\n     * @see module:engine/model/writer~Writer#append\n     * @protected\n     * @param {module:engine/model/item~Item|Iterable.<module:engine/model/item~Item>} nodes Nodes to be inserted.\n     */\n\n  }, {\n    key: \"_appendChild\",\n    value: function _appendChild(nodes) {\n      this._insertChild(this.childCount, nodes);\n    }\n    /**\n     * Inserts one or more nodes at the given index and sets {@link module:engine/model/node~Node#parent parent} of these nodes\n     * to this element.\n     *\n     * @see module:engine/model/writer~Writer#insert\n     * @protected\n     * @param {Number} index Index at which nodes should be inserted.\n     * @param {module:engine/model/item~Item|Iterable.<module:engine/model/item~Item>} items Items to be inserted.\n     */\n\n  }, {\n    key: \"_insertChild\",\n    value: function _insertChild(index, items) {\n      var nodes = normalize(items);\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = nodes[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var node = _step3.value;\n\n          // If node that is being added to this element is already inside another element, first remove it from the old parent.\n          if (node.parent !== null) {\n            node._remove();\n          }\n\n          node.parent = this;\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n            _iterator3[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      this._children._insertNodes(index, nodes);\n    }\n    /**\n     * Removes one or more nodes starting at the given index and sets\n     * {@link module:engine/model/node~Node#parent parent} of these nodes to `null`.\n     *\n     * @see module:engine/model/writer~Writer#remove\n     * @protected\n     * @param {Number} index Index of the first node to remove.\n     * @param {Number} [howMany=1] Number of nodes to remove.\n     * @returns {Array.<module:engine/model/node~Node>} Array containing removed nodes.\n     */\n\n  }, {\n    key: \"_removeChildren\",\n    value: function _removeChildren(index) {\n      var howMany = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n      var nodes = this._children._removeNodes(index, howMany);\n\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = nodes[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var node = _step4.value;\n          node.parent = null;\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4[\"return\"] != null) {\n            _iterator4[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      return nodes;\n    }\n    /**\n     * Creates an `Element` instance from given plain object (i.e. parsed JSON string).\n     * Converts `Element` children to proper nodes.\n     *\n     * @param {Object} json Plain object to be converted to `Element`.\n     * @returns {module:engine/model/element~Element} `Element` instance created using given plain object.\n     */\n\n  }, {\n    key: \"childCount\",\n    get: function get() {\n      return this._children.length;\n    }\n    /**\n     * Sum of {@link module:engine/model/node~Node#offsetSize offset sizes} of all of this element's children.\n     *\n     * @readonly\n     * @type {Number}\n     */\n\n  }, {\n    key: \"maxOffset\",\n    get: function get() {\n      return this._children.maxOffset;\n    }\n    /**\n     * Is `true` if there are no nodes inside this element, `false` otherwise.\n     *\n     * @readonly\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isEmpty\",\n    get: function get() {\n      return this.childCount === 0;\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      var children = null;\n\n      if (json.children) {\n        children = [];\n        var _iteratorNormalCompletion5 = true;\n        var _didIteratorError5 = false;\n        var _iteratorError5 = undefined;\n\n        try {\n          for (var _iterator5 = json.children[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n            var child = _step5.value;\n\n            if (child.name) {\n              // If child has name property, it is an Element.\n              children.push(Element.fromJSON(child));\n            } else {\n              // Otherwise, it is a Text node.\n              children.push(Text.fromJSON(child));\n            }\n          }\n        } catch (err) {\n          _didIteratorError5 = true;\n          _iteratorError5 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion5 && _iterator5[\"return\"] != null) {\n              _iterator5[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError5) {\n              throw _iteratorError5;\n            }\n          }\n        }\n      }\n\n      return new Element(json.name, json.attributes, children);\n    }\n  }]);\n\n  return Element;\n}(Node); // Converts strings to Text and non-iterables to arrays.\n//\n// @param {String|module:engine/model/item~Item|Iterable.<String|module:engine/model/item~Item>}\n// @returns {Iterable.<module:engine/model/node~Node>}\n\n\nexport { Element as default };\n\nfunction normalize(nodes) {\n  // Separate condition because string is iterable.\n  if (typeof nodes == 'string') {\n    return [new Text(nodes)];\n  }\n\n  if (!isIterable(nodes)) {\n    nodes = [nodes];\n  } // Array.from to enable .map() on non-arrays.\n\n\n  return Array.from(nodes).map(function (node) {\n    if (typeof node == 'string') {\n      return new Text(node);\n    }\n\n    if (node instanceof TextProxy) {\n      return new Text(node.data, node.getAttributes());\n    }\n\n    return node;\n  });\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/treewalker\n */\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport Element from './element';\nimport Position from './position';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * Position iterator class. It allows to iterate forward and backward over the document.\n */\n\nvar TreeWalker =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a range iterator. All parameters are optional, but you have to specify either `boundaries` or `startPosition`.\n   *\n   * @constructor\n   * @param {Object} [options={}] Object with configuration.\n   * @param {'forward'|'backward'} [options.direction='forward'] Walking direction.\n   * @param {module:engine/model/range~Range} [options.boundaries=null] Range to define boundaries of the iterator.\n   * @param {module:engine/model/position~Position} [options.startPosition] Starting position.\n   * @param {Boolean} [options.singleCharacters=false] Flag indicating whether all consecutive characters with the same attributes\n   * should be returned one by one as multiple {@link module:engine/model/textproxy~TextProxy} (`true`) objects or as one\n   * {@link module:engine/model/textproxy~TextProxy} (`false`).\n   * @param {Boolean} [options.shallow=false] Flag indicating whether iterator should enter elements or not. If the\n   * iterator is shallow child nodes of any iterated node will not be returned along with `elementEnd` tag.\n   * @param {Boolean} [options.ignoreElementEnd=false] Flag indicating whether iterator should ignore `elementEnd`\n   * tags. If the option is true walker will not return a parent node of start position. If this option is `true`\n   * each {@link module:engine/model/element~Element} will be returned once, while if the option is `false` they might be returned\n   * twice: for `'elementStart'` and `'elementEnd'`.\n   */\n  function TreeWalker() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, TreeWalker);\n\n    if (!options.boundaries && !options.startPosition) {\n      /**\n       * Neither boundaries nor starting position of a `TreeWalker` have been defined.\n       *\n       * @error model-tree-walker-no-start-position\n       */\n      throw new CKEditorError('model-tree-walker-no-start-position: Neither boundaries nor starting position have been defined.', null);\n    }\n\n    var direction = options.direction || 'forward';\n\n    if (direction != 'forward' && direction != 'backward') {\n      throw new CKEditorError('model-tree-walker-unknown-direction: Only `backward` and `forward` direction allowed.', options, {\n        direction: direction\n      });\n    }\n    /**\n     * Walking direction. Defaults `'forward'`.\n     *\n     * @readonly\n     * @member {'backward'|'forward'} module:engine/model/treewalker~TreeWalker#direction\n     */\n\n\n    this.direction = direction;\n    /**\n     * Iterator boundaries.\n     *\n     * When the iterator is walking `'forward'` on the end of boundary or is walking `'backward'`\n     * on the start of boundary, then `{ done: true }` is returned.\n     *\n     * If boundaries are not defined they are set before first and after last child of the root node.\n     *\n     * @readonly\n     * @member {module:engine/model/range~Range} module:engine/model/treewalker~TreeWalker#boundaries\n     */\n\n    this.boundaries = options.boundaries || null;\n    /**\n     * Iterator position. This is always static position, even if the initial position was a\n     * {@link module:engine/model/liveposition~LivePosition live position}. If start position is not defined then position depends\n     * on {@link #direction}. If direction is `'forward'` position starts form the beginning, when direction\n     * is `'backward'` position starts from the end.\n     *\n     * @readonly\n     * @member {module:engine/model/position~Position} module:engine/model/treewalker~TreeWalker#position\n     */\n\n    if (options.startPosition) {\n      this.position = options.startPosition.clone();\n    } else {\n      this.position = Position._createAt(this.boundaries[this.direction == 'backward' ? 'end' : 'start']);\n    } // Reset position stickiness in case it was set to other value, as the stickiness is kept after cloning.\n\n\n    this.position.stickiness = 'toNone';\n    /**\n     * Flag indicating whether all consecutive characters with the same attributes should be\n     * returned as one {@link module:engine/model/textproxy~TextProxy} (`true`) or one by one (`false`).\n     *\n     * @readonly\n     * @member {Boolean} module:engine/model/treewalker~TreeWalker#singleCharacters\n     */\n\n    this.singleCharacters = !!options.singleCharacters;\n    /**\n     * Flag indicating whether iterator should enter elements or not. If the iterator is shallow child nodes of any\n     * iterated node will not be returned along with `elementEnd` tag.\n     *\n     * @readonly\n     * @member {Boolean} module:engine/model/treewalker~TreeWalker#shallow\n     */\n\n    this.shallow = !!options.shallow;\n    /**\n     * Flag indicating whether iterator should ignore `elementEnd` tags. If the option is true walker will not\n     * return a parent node of the start position. If this option is `true` each {@link module:engine/model/element~Element} will\n     * be returned once, while if the option is `false` they might be returned twice:\n     * for `'elementStart'` and `'elementEnd'`.\n     *\n     * @readonly\n     * @member {Boolean} module:engine/model/treewalker~TreeWalker#ignoreElementEnd\n     */\n\n    this.ignoreElementEnd = !!options.ignoreElementEnd;\n    /**\n     * Start boundary cached for optimization purposes.\n     *\n     * @private\n     * @member {module:engine/model/element~Element} module:engine/model/treewalker~TreeWalker#_boundaryStartParent\n     */\n\n    this._boundaryStartParent = this.boundaries ? this.boundaries.start.parent : null;\n    /**\n     * End boundary cached for optimization purposes.\n     *\n     * @private\n     * @member {module:engine/model/element~Element} module:engine/model/treewalker~TreeWalker#_boundaryEndParent\n     */\n\n    this._boundaryEndParent = this.boundaries ? this.boundaries.end.parent : null;\n    /**\n     * Parent of the most recently visited node. Cached for optimization purposes.\n     *\n     * @private\n     * @member {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment}\n     * module:engine/model/treewalker~TreeWalker#_visitedParent\n     */\n\n    this._visitedParent = this.position.parent;\n  }\n  /**\n   * Iterable interface.\n   *\n   * @returns {Iterable.<module:engine/model/treewalker~TreeWalkerValue>}\n   */\n\n\n  _createClass(TreeWalker, [{\n    key: Symbol.iterator,\n    value: function value() {\n      return this;\n    }\n    /**\n     * Moves {@link #position} in the {@link #direction} skipping values as long as the callback function returns `true`.\n     *\n     * For example:\n     *\n     * \t\twalker.skip( value => value.type == 'text' ); // <paragraph>[]foo</paragraph> -> <paragraph>foo[]</paragraph>\n     * \t\twalker.skip( () => true ); // Move the position to the end: <paragraph>[]foo</paragraph> -> <paragraph>foo</paragraph>[]\n     * \t\twalker.skip( () => false ); // Do not move the position.\n     *\n     * @param {Function} skip Callback function. Gets {@link module:engine/model/treewalker~TreeWalkerValue} and should\n     * return `true` if the value should be skipped or `false` if not.\n     */\n\n  }, {\n    key: \"skip\",\n    value: function skip(_skip) {\n      var done, value, prevPosition, prevVisitedParent;\n\n      do {\n        prevPosition = this.position;\n        prevVisitedParent = this._visitedParent;\n\n        var _this$next = this.next();\n\n        done = _this$next.done;\n        value = _this$next.value;\n      } while (!done && _skip(value));\n\n      if (!done) {\n        this.position = prevPosition;\n        this._visitedParent = prevVisitedParent;\n      }\n    }\n    /**\n     * Gets the next tree walker's value.\n     *\n     * @returns {module:engine/model/treewalker~TreeWalkerValue} Next tree walker's value.\n     */\n\n  }, {\n    key: \"next\",\n    value: function next() {\n      if (this.direction == 'forward') {\n        return this._next();\n      } else {\n        return this._previous();\n      }\n    }\n    /**\n     * Makes a step forward in model. Moves the {@link #position} to the next position and returns the encountered value.\n     *\n     * @private\n     * @returns {Object}\n     * @returns {Boolean} return.done True if iterator is done.\n     * @returns {module:engine/model/treewalker~TreeWalkerValue} return.value Information about taken step.\n     */\n\n  }, {\n    key: \"_next\",\n    value: function _next() {\n      var previousPosition = this.position;\n      var position = this.position.clone();\n      var parent = this._visitedParent; // We are at the end of the root.\n\n      if (parent.parent === null && position.offset === parent.maxOffset) {\n        return {\n          done: true\n        };\n      } // We reached the walker boundary.\n\n\n      if (parent === this._boundaryEndParent && position.offset == this.boundaries.end.offset) {\n        return {\n          done: true\n        };\n      }\n\n      var node = position.textNode ? position.textNode : position.nodeAfter;\n\n      if (node instanceof Element) {\n        if (!this.shallow) {\n          // Manual operations on path internals for optimization purposes. Here and in the rest of the method.\n          position.path.push(0);\n          this._visitedParent = node;\n        } else {\n          position.offset++;\n        }\n\n        this.position = position;\n        return formatReturnValue('elementStart', node, previousPosition, position, 1);\n      } else if (node instanceof Text) {\n        var charactersCount;\n\n        if (this.singleCharacters) {\n          charactersCount = 1;\n        } else {\n          var offset = node.endOffset;\n\n          if (this._boundaryEndParent == parent && this.boundaries.end.offset < offset) {\n            offset = this.boundaries.end.offset;\n          }\n\n          charactersCount = offset - position.offset;\n        }\n\n        var offsetInTextNode = position.offset - node.startOffset;\n        var item = new TextProxy(node, offsetInTextNode, charactersCount);\n        position.offset += charactersCount;\n        this.position = position;\n        return formatReturnValue('text', item, previousPosition, position, charactersCount);\n      } else {\n        // `node` is not set, we reached the end of current `parent`.\n        position.path.pop();\n        position.offset++;\n        this.position = position;\n        this._visitedParent = parent.parent;\n\n        if (this.ignoreElementEnd) {\n          return this._next();\n        } else {\n          return formatReturnValue('elementEnd', parent, previousPosition, position);\n        }\n      }\n    }\n    /**\n     * Makes a step backward in model. Moves the {@link #position} to the previous position and returns the encountered value.\n     *\n     * @private\n     * @returns {Object}\n     * @returns {Boolean} return.done True if iterator is done.\n     * @returns {module:engine/model/treewalker~TreeWalkerValue} return.value Information about taken step.\n     */\n\n  }, {\n    key: \"_previous\",\n    value: function _previous() {\n      var previousPosition = this.position;\n      var position = this.position.clone();\n      var parent = this._visitedParent; // We are at the beginning of the root.\n\n      if (parent.parent === null && position.offset === 0) {\n        return {\n          done: true\n        };\n      } // We reached the walker boundary.\n\n\n      if (parent == this._boundaryStartParent && position.offset == this.boundaries.start.offset) {\n        return {\n          done: true\n        };\n      } // Get node just before current position\n\n\n      var node = position.textNode ? position.textNode : position.nodeBefore;\n\n      if (node instanceof Element) {\n        position.offset--;\n\n        if (!this.shallow) {\n          position.path.push(node.maxOffset);\n          this.position = position;\n          this._visitedParent = node;\n\n          if (this.ignoreElementEnd) {\n            return this._previous();\n          } else {\n            return formatReturnValue('elementEnd', node, previousPosition, position);\n          }\n        } else {\n          this.position = position;\n          return formatReturnValue('elementStart', node, previousPosition, position, 1);\n        }\n      } else if (node instanceof Text) {\n        var charactersCount;\n\n        if (this.singleCharacters) {\n          charactersCount = 1;\n        } else {\n          var offset = node.startOffset;\n\n          if (this._boundaryStartParent == parent && this.boundaries.start.offset > offset) {\n            offset = this.boundaries.start.offset;\n          }\n\n          charactersCount = position.offset - offset;\n        }\n\n        var offsetInTextNode = position.offset - node.startOffset;\n        var item = new TextProxy(node, offsetInTextNode - charactersCount, charactersCount);\n        position.offset -= charactersCount;\n        this.position = position;\n        return formatReturnValue('text', item, previousPosition, position, charactersCount);\n      } else {\n        // `node` is not set, we reached the beginning of current `parent`.\n        position.path.pop();\n        this.position = position;\n        this._visitedParent = parent.parent;\n        return formatReturnValue('elementStart', parent, previousPosition, position, 1);\n      }\n    }\n  }]);\n\n  return TreeWalker;\n}();\n\nexport { TreeWalker as default };\n\nfunction formatReturnValue(type, item, previousPosition, nextPosition, length) {\n  return {\n    done: false,\n    value: {\n      type: type,\n      item: item,\n      previousPosition: previousPosition,\n      nextPosition: nextPosition,\n      length: length\n    }\n  };\n}\n/**\n * Type of the step made by {@link module:engine/model/treewalker~TreeWalker}.\n * Possible values: `'elementStart'` if walker is at the beginning of a node, `'elementEnd'` if walker is at the end of node,\n * `'character'` if walker traversed over a character, or `'text'` if walker traversed over multiple characters (available in\n * character merging mode, see {@link module:engine/model/treewalker~TreeWalker#constructor}).\n *\n * @typedef {'elementStart'|'elementEnd'|'character'|'text'} module:engine/model/treewalker~TreeWalkerValueType\n */\n\n/**\n * Object returned by {@link module:engine/model/treewalker~TreeWalker} when traversing tree model.\n *\n * @typedef {Object} module:engine/model/treewalker~TreeWalkerValue\n * @property {module:engine/model/treewalker~TreeWalkerValueType} type\n * @property {module:engine/model/item~Item} item Item between old and new positions of {@link module:engine/model/treewalker~TreeWalker}.\n * @property {module:engine/model/position~Position} previousPosition Previous position of the iterator.\n * * Forward iteration: For `'elementEnd'` it is the last position inside the element. For all other types it is the\n * position before the item.\n * * Backward iteration: For `'elementStart'` it is the first position inside the element. For all other types it is\n * the position after item.\n * @property {module:engine/model/position~Position} nextPosition Next position of the iterator.\n * * Forward iteration: For `'elementStart'` it is the first position inside the element. For all other types it is\n * the position after the item.\n * * Backward iteration: For `'elementEnd'` it is last position inside element. For all other types it is the position\n * before the item.\n * @property {Number} [length] Length of the item. For `'elementStart'` and `'character'` it is 1. For `'text'` it is\n * the length of the text. For `'elementEnd'` it is `undefined`.\n */\n\n/**\n * Tree walking directions.\n *\n * @typedef {'forward'|'backward'} module:engine/view/treewalker~TreeWalkerDirection\n */","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nexport default last;\n","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/position\n */\nimport TreeWalker from './treewalker';\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport Text from './text';\nimport { last } from 'lodash-es'; // To check if component is loaded more than once.\n\nimport '@ckeditor/ckeditor5-utils/src/version';\n/**\n * Represents a position in the model tree.\n *\n * A position is represented by its {@link module:engine/model/position~Position#root} and\n * a {@link module:engine/model/position~Position#path} in that root.\n *\n * You can create position instances via its constructor or the `createPosition*()` factory methods of\n * {@link module:engine/model/model~Model} and {@link module:engine/model/writer~Writer}.\n *\n * **Note:** Position is based on offsets, not indexes. This means that a position between two text nodes\n * `foo` and `bar` has offset `3`, not `1`. See {@link module:engine/model/position~Position#path} for more information.\n *\n * Since a position in the model is represented by a {@link module:engine/model/position~Position#root position root} and\n * {@link module:engine/model/position~Position#path position path} it is possible to create positions placed in non-existing places.\n * This requirement is important for operational transformation algorithms.\n *\n * Also, {@link module:engine/model/operation/operation~Operation operations}\n * kept in the {@link module:engine/model/document~Document#history document history}\n * are storing positions (and ranges) which were correct when those operations were applied, but may not be correct\n * after the document has changed.\n *\n * When changes are applied to the model, it may also happen that {@link module:engine/model/position~Position#parent position parent}\n * will change even if position path has not changed. Keep in mind, that if a position leads to non-existing element,\n * {@link module:engine/model/position~Position#parent} and some other properties and methods will throw errors.\n *\n * In most cases, position with wrong path is caused by an error in code, but it is sometimes needed, as described above.\n */\n\nvar Position =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a position.\n   *\n   * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} root Root of the position.\n   * @param {Array.<Number>} path Position path. See {@link module:engine/model/position~Position#path}.\n   * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone'] Position stickiness.\n   * See {@link module:engine/model/position~PositionStickiness}.\n   */\n  function Position(root, path) {\n    var stickiness = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'toNone';\n\n    _classCallCheck(this, Position);\n\n    if (!root.is('element') && !root.is('documentFragment')) {\n      /**\n       * Position root is invalid.\n       *\n       * Positions can only be anchored in elements or document fragments.\n       *\n       * @error model-position-root-invalid\n       */\n      throw new CKEditorError('model-position-root-invalid: Position root invalid.', root);\n    }\n\n    if (!(path instanceof Array) || path.length === 0) {\n      /**\n       * Position path must be an array with at least one item.\n       *\n       * @error model-position-path-incorrect\n       * @param path\n       */\n      throw new CKEditorError('model-position-path-incorrect: Position path must be an array with at least one item.', root, {\n        path: path\n      });\n    } // Normalize the root and path (if element was passed).\n\n\n    path = root.getPath().concat(path);\n    root = root.root;\n    /**\n     * Root of the position path.\n     *\n     * @readonly\n     * @member {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment}\n     * module:engine/model/position~Position#root\n     */\n\n    this.root = root;\n    /**\n     * Position of the node in the tree. **Path contains offsets, not indexes.**\n     *\n     * Position can be placed before, after or in a {@link module:engine/model/node~Node node} if that node has\n     * {@link module:engine/model/node~Node#offsetSize} greater than `1`. Items in position path are\n     * {@link module:engine/model/node~Node#startOffset starting offsets} of position ancestors, starting from direct root children,\n     * down to the position offset in it's parent.\n     *\n     *\t\t ROOT\n     *\t\t  |- P            before: [ 0 ]         after: [ 1 ]\n     *\t\t  |- UL           before: [ 1 ]         after: [ 2 ]\n     *\t\t     |- LI        before: [ 1, 0 ]      after: [ 1, 1 ]\n     *\t\t     |  |- foo    before: [ 1, 0, 0 ]   after: [ 1, 0, 3 ]\n     *\t\t     |- LI        before: [ 1, 1 ]      after: [ 1, 2 ]\n     *\t\t        |- bar    before: [ 1, 1, 0 ]   after: [ 1, 1, 3 ]\n     *\n     * `foo` and `bar` are representing {@link module:engine/model/text~Text text nodes}. Since text nodes has offset size\n     * greater than `1` you can place position offset between their start and end:\n     *\n     *\t\t ROOT\n     *\t\t  |- P\n     *\t\t  |- UL\n     *\t\t     |- LI\n     *\t\t     |  |- f^o|o  ^ has path: [ 1, 0, 1 ]   | has path: [ 1, 0, 2 ]\n     *\t\t     |- LI\n     *\t\t        |- b^a|r  ^ has path: [ 1, 1, 1 ]   | has path: [ 1, 1, 2 ]\n     *\n     * @readonly\n     * @member {Array.<Number>} module:engine/model/position~Position#path\n     */\n\n    this.path = path;\n    /**\n     * Position stickiness. See {@link module:engine/model/position~PositionStickiness}.\n     *\n     * @member {module:engine/model/position~PositionStickiness} module:engine/model/position~Position#stickiness\n     */\n\n    this.stickiness = stickiness;\n  }\n  /**\n   * Offset at which this position is located in its {@link module:engine/model/position~Position#parent parent}. It is equal\n   * to the last item in position {@link module:engine/model/position~Position#path path}.\n   *\n   * @type {Number}\n   */\n\n\n  _createClass(Position, [{\n    key: \"compareWith\",\n\n    /**\n     * Checks whether this position is before or after given position.\n     *\n     * This method is safe to use it on non-existing positions (for example during operational transformation).\n     *\n     * @param {module:engine/model/position~Position} otherPosition Position to compare with.\n     * @returns {module:engine/model/position~PositionRelation}\n     */\n    value: function compareWith(otherPosition) {\n      if (this.root != otherPosition.root) {\n        return 'different';\n      }\n\n      var result = compareArrays(this.path, otherPosition.path);\n\n      switch (result) {\n        case 'same':\n          return 'same';\n\n        case 'prefix':\n          return 'before';\n\n        case 'extension':\n          return 'after';\n\n        default:\n          return this.path[result] < otherPosition.path[result] ? 'before' : 'after';\n      }\n    }\n    /**\n     * Gets the farthest position which matches the callback using\n     * {@link module:engine/model/treewalker~TreeWalker TreeWalker}.\n     *\n     * For example:\n     *\n     * \t\tgetLastMatchingPosition( value => value.type == 'text' );\n     * \t\t// <paragraph>[]foo</paragraph> -> <paragraph>foo[]</paragraph>\n     *\n     * \t\tgetLastMatchingPosition( value => value.type == 'text', { direction: 'backward' } );\n     * \t\t// <paragraph>foo[]</paragraph> -> <paragraph>[]foo</paragraph>\n     *\n     * \t\tgetLastMatchingPosition( value => false );\n     * \t\t// Do not move the position.\n     *\n     * @param {Function} skip Callback function. Gets {@link module:engine/model/treewalker~TreeWalkerValue} and should\n     * return `true` if the value should be skipped or `false` if not.\n     * @param {Object} options Object with configuration options. See {@link module:engine/model/treewalker~TreeWalker}.\n     *\n     * @returns {module:engine/model/position~Position} The position after the last item which matches the `skip` callback test.\n     */\n\n  }, {\n    key: \"getLastMatchingPosition\",\n    value: function getLastMatchingPosition(skip) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      options.startPosition = this;\n      var treeWalker = new TreeWalker(options);\n      treeWalker.skip(skip);\n      return treeWalker.position;\n    }\n    /**\n     * Returns a path to this position's parent. Parent path is equal to position {@link module:engine/model/position~Position#path path}\n     * but without the last item.\n     *\n     * This method is safe to use it on non-existing positions (for example during operational transformation).\n     *\n     * @returns {Array.<Number>} Path to the parent.\n     */\n\n  }, {\n    key: \"getParentPath\",\n    value: function getParentPath() {\n      return this.path.slice(0, -1);\n    }\n    /**\n     * Returns ancestors array of this position, that is this position's parent and its ancestors.\n     *\n     * @returns {Array.<module:engine/model/item~Item>} Array with ancestors.\n     */\n\n  }, {\n    key: \"getAncestors\",\n    value: function getAncestors() {\n      if (this.parent.is('documentFragment')) {\n        return [this.parent];\n      } else {\n        return this.parent.getAncestors({\n          includeSelf: true\n        });\n      }\n    }\n    /**\n     * Returns the slice of two position {@link #path paths} which is identical. The {@link #root roots}\n     * of these two paths must be identical.\n     *\n     * This method is safe to use it on non-existing positions (for example during operational transformation).\n     *\n     * @param {module:engine/model/position~Position} position The second position.\n     * @returns {Array.<Number>} The common path.\n     */\n\n  }, {\n    key: \"getCommonPath\",\n    value: function getCommonPath(position) {\n      if (this.root != position.root) {\n        return [];\n      } // We find on which tree-level start and end have the lowest common ancestor\n\n\n      var cmp = compareArrays(this.path, position.path); // If comparison returned string it means that arrays are same.\n\n      var diffAt = typeof cmp == 'string' ? Math.min(this.path.length, position.path.length) : cmp;\n      return this.path.slice(0, diffAt);\n    }\n    /**\n     * Returns an {@link module:engine/model/element~Element} or {@link module:engine/model/documentfragment~DocumentFragment}\n     * which is a common ancestor of both positions. The {@link #root roots} of these two positions must be identical.\n     *\n     * @param {module:engine/model/position~Position} position The second position.\n     * @returns {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment|null}\n     */\n\n  }, {\n    key: \"getCommonAncestor\",\n    value: function getCommonAncestor(position) {\n      var ancestorsA = this.getAncestors();\n      var ancestorsB = position.getAncestors();\n      var i = 0;\n\n      while (ancestorsA[i] == ancestorsB[i] && ancestorsA[i]) {\n        i++;\n      }\n\n      return i === 0 ? null : ancestorsA[i - 1];\n    }\n    /**\n     * Returns a new instance of `Position`, that has same {@link #parent parent} but it's offset\n     * is shifted by `shift` value (can be a negative value).\n     *\n     * This method is safe to use it on non-existing positions (for example during operational transformation).\n     *\n     * @param {Number} shift Offset shift. Can be a negative value.\n     * @returns {module:engine/model/position~Position} Shifted position.\n     */\n\n  }, {\n    key: \"getShiftedBy\",\n    value: function getShiftedBy(shift) {\n      var shifted = this.clone();\n      var offset = shifted.offset + shift;\n      shifted.offset = offset < 0 ? 0 : offset;\n      return shifted;\n    }\n    /**\n     * Checks whether this position is after given position.\n     *\n     * This method is safe to use it on non-existing positions (for example during operational transformation).\n     *\n     * @see module:engine/model/position~Position#isBefore\n     * @param {module:engine/model/position~Position} otherPosition Position to compare with.\n     * @returns {Boolean} True if this position is after given position.\n     */\n\n  }, {\n    key: \"isAfter\",\n    value: function isAfter(otherPosition) {\n      return this.compareWith(otherPosition) == 'after';\n    }\n    /**\n     * Checks whether this position is before given position.\n     *\n     * **Note:** watch out when using negation of the value returned by this method, because the negation will also\n     * be `true` if positions are in different roots and you might not expect this. You should probably use\n     * `a.isAfter( b ) || a.isEqual( b )` or `!a.isBefore( p ) && a.root == b.root` in most scenarios. If your\n     * condition uses multiple `isAfter` and `isBefore` checks, build them so they do not use negated values, i.e.:\n     *\n     *\t\tif ( a.isBefore( b ) && c.isAfter( d ) ) {\n     *\t\t\t// do A.\n     *\t\t} else {\n     *\t\t\t// do B.\n     *\t\t}\n     *\n     * or, if you have only one if-branch:\n     *\n     *\t\tif ( !( a.isBefore( b ) && c.isAfter( d ) ) {\n     *\t\t\t// do B.\n     *\t\t}\n     *\n     * rather than:\n     *\n     *\t\tif ( !a.isBefore( b ) || && !c.isAfter( d ) ) {\n     *\t\t\t// do B.\n     *\t\t} else {\n     *\t\t\t// do A.\n     *\t\t}\n     *\n     * This method is safe to use it on non-existing positions (for example during operational transformation).\n     *\n     * @param {module:engine/model/position~Position} otherPosition Position to compare with.\n     * @returns {Boolean} True if this position is before given position.\n     */\n\n  }, {\n    key: \"isBefore\",\n    value: function isBefore(otherPosition) {\n      return this.compareWith(otherPosition) == 'before';\n    }\n    /**\n     * Checks whether this position is equal to given position.\n     *\n     * This method is safe to use it on non-existing positions (for example during operational transformation).\n     *\n     * @param {module:engine/model/position~Position} otherPosition Position to compare with.\n     * @returns {Boolean} True if positions are same.\n     */\n\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(otherPosition) {\n      return this.compareWith(otherPosition) == 'same';\n    }\n    /**\n     * Checks whether this position is touching given position. Positions touch when there are no text nodes\n     * or empty nodes in a range between them. Technically, those positions are not equal but in many cases\n     * they are very similar or even indistinguishable.\n     *\n     * @param {module:engine/model/position~Position} otherPosition Position to compare with.\n     * @returns {Boolean} True if positions touch.\n     */\n\n  }, {\n    key: \"isTouching\",\n    value: function isTouching(otherPosition) {\n      var left = null;\n      var right = null;\n      var compare = this.compareWith(otherPosition);\n\n      switch (compare) {\n        case 'same':\n          return true;\n\n        case 'before':\n          left = Position._createAt(this);\n          right = Position._createAt(otherPosition);\n          break;\n\n        case 'after':\n          left = Position._createAt(otherPosition);\n          right = Position._createAt(this);\n          break;\n\n        default:\n          return false;\n      } // Cached for optimization purposes.\n\n\n      var leftParent = left.parent;\n\n      while (left.path.length + right.path.length) {\n        if (left.isEqual(right)) {\n          return true;\n        }\n\n        if (left.path.length > right.path.length) {\n          if (left.offset !== leftParent.maxOffset) {\n            return false;\n          }\n\n          left.path = left.path.slice(0, -1);\n          leftParent = leftParent.parent;\n          left.offset++;\n        } else {\n          if (right.offset !== 0) {\n            return false;\n          }\n\n          right.path = right.path.slice(0, -1);\n        }\n      }\n    }\n    /**\n     * Checks if two positions are in the same parent.\n     *\n     * This method is safe to use it on non-existing positions (for example during operational transformation).\n     *\n     * @param {module:engine/model/position~Position} position Position to compare with.\n     * @returns {Boolean} `true` if positions have the same parent, `false` otherwise.\n     */\n\n  }, {\n    key: \"hasSameParentAs\",\n    value: function hasSameParentAs(position) {\n      if (this.root !== position.root) {\n        return false;\n      }\n\n      var thisParentPath = this.getParentPath();\n      var posParentPath = position.getParentPath();\n      return compareArrays(thisParentPath, posParentPath) == 'same';\n    }\n    /**\n     * Returns a copy of this position that is transformed by given `operation`.\n     *\n     * The new position's parameters are updated accordingly to the effect of the `operation`.\n     *\n     * For example, if `n` nodes are inserted before the position, the returned position {@link ~Position#offset} will be\n     * increased by `n`. If the position was in a merged element, it will be accordingly moved to the new element, etc.\n     *\n     * This method is safe to use it on non-existing positions (for example during operational transformation).\n     *\n     * @param {module:engine/model/operation/operation~Operation} operation Operation to transform by.\n     * @returns {module:engine/model/position~Position} Transformed position.\n     */\n\n  }, {\n    key: \"getTransformedByOperation\",\n    value: function getTransformedByOperation(operation) {\n      var result;\n\n      switch (operation.type) {\n        case 'insert':\n          result = this._getTransformedByInsertOperation(operation);\n          break;\n\n        case 'move':\n        case 'remove':\n        case 'reinsert':\n          result = this._getTransformedByMoveOperation(operation);\n          break;\n\n        case 'split':\n          result = this._getTransformedBySplitOperation(operation);\n          break;\n\n        case 'merge':\n          result = this._getTransformedByMergeOperation(operation);\n          break;\n\n        default:\n          result = Position._createAt(this);\n          break;\n      }\n\n      return result;\n    }\n    /**\n     * Returns a copy of this position transformed by an insert operation.\n     *\n     * @protected\n     * @param {module:engine/model/operation/insertoperation~InsertOperation} operation\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"_getTransformedByInsertOperation\",\n    value: function _getTransformedByInsertOperation(operation) {\n      return this._getTransformedByInsertion(operation.position, operation.howMany);\n    }\n    /**\n     * Returns a copy of this position transformed by a move operation.\n     *\n     * @protected\n     * @param {module:engine/model/operation/moveoperation~MoveOperation} operation\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"_getTransformedByMoveOperation\",\n    value: function _getTransformedByMoveOperation(operation) {\n      return this._getTransformedByMove(operation.sourcePosition, operation.targetPosition, operation.howMany);\n    }\n    /**\n     * Returns a copy of this position transformed by a split operation.\n     *\n     * @protected\n     * @param {module:engine/model/operation/splitoperation~SplitOperation} operation\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"_getTransformedBySplitOperation\",\n    value: function _getTransformedBySplitOperation(operation) {\n      var movedRange = operation.movedRange;\n      var isContained = movedRange.containsPosition(this) || movedRange.start.isEqual(this) && this.stickiness == 'toNext';\n\n      if (isContained) {\n        return this._getCombined(operation.splitPosition, operation.moveTargetPosition);\n      } else {\n        if (operation.graveyardPosition) {\n          return this._getTransformedByMove(operation.graveyardPosition, operation.insertionPosition, 1);\n        } else {\n          return this._getTransformedByInsertion(operation.insertionPosition, 1);\n        }\n      }\n    }\n    /**\n     * Returns a copy of this position transformed by merge operation.\n     *\n     * @protected\n     * @param {module:engine/model/operation/mergeoperation~MergeOperation} operation\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"_getTransformedByMergeOperation\",\n    value: function _getTransformedByMergeOperation(operation) {\n      var movedRange = operation.movedRange;\n      var isContained = movedRange.containsPosition(this) || movedRange.start.isEqual(this);\n      var pos;\n\n      if (isContained) {\n        pos = this._getCombined(operation.sourcePosition, operation.targetPosition);\n\n        if (operation.sourcePosition.isBefore(operation.targetPosition)) {\n          // Above happens during OT when the merged element is moved before the merged-to element.\n          pos = pos._getTransformedByDeletion(operation.deletionPosition, 1);\n        }\n      } else if (this.isEqual(operation.deletionPosition)) {\n        pos = Position._createAt(operation.deletionPosition);\n      } else {\n        pos = this._getTransformedByMove(operation.deletionPosition, operation.graveyardPosition, 1);\n      }\n\n      return pos;\n    }\n    /**\n     * Returns a copy of this position that is updated by removing `howMany` nodes starting from `deletePosition`.\n     * It may happen that this position is in a removed node. If that is the case, `null` is returned instead.\n     *\n     * @protected\n     * @param {module:engine/model/position~Position} deletePosition Position before the first removed node.\n     * @param {Number} howMany How many nodes are removed.\n     * @returns {module:engine/model/position~Position|null} Transformed position or `null`.\n     */\n\n  }, {\n    key: \"_getTransformedByDeletion\",\n    value: function _getTransformedByDeletion(deletePosition, howMany) {\n      var transformed = Position._createAt(this); // This position can't be affected if deletion was in a different root.\n\n\n      if (this.root != deletePosition.root) {\n        return transformed;\n      }\n\n      if (compareArrays(deletePosition.getParentPath(), this.getParentPath()) == 'same') {\n        // If nodes are removed from the node that is pointed by this position...\n        if (deletePosition.offset < this.offset) {\n          // And are removed from before an offset of that position...\n          if (deletePosition.offset + howMany > this.offset) {\n            // Position is in removed range, it's no longer in the tree.\n            return null;\n          } else {\n            // Decrement the offset accordingly.\n            transformed.offset -= howMany;\n          }\n        }\n      } else if (compareArrays(deletePosition.getParentPath(), this.getParentPath()) == 'prefix') {\n        // If nodes are removed from a node that is on a path to this position...\n        var i = deletePosition.path.length - 1;\n\n        if (deletePosition.offset <= this.path[i]) {\n          // And are removed from before next node of that path...\n          if (deletePosition.offset + howMany > this.path[i]) {\n            // If the next node of that path is removed return null\n            // because the node containing this position got removed.\n            return null;\n          } else {\n            // Otherwise, decrement index on that path.\n            transformed.path[i] -= howMany;\n          }\n        }\n      }\n\n      return transformed;\n    }\n    /**\n     * Returns a copy of this position that is updated by inserting `howMany` nodes at `insertPosition`.\n     *\n     * @protected\n     * @param {module:engine/model/position~Position} insertPosition Position where nodes are inserted.\n     * @param {Number} howMany How many nodes are inserted.\n     * @returns {module:engine/model/position~Position} Transformed position.\n     */\n\n  }, {\n    key: \"_getTransformedByInsertion\",\n    value: function _getTransformedByInsertion(insertPosition, howMany) {\n      var transformed = Position._createAt(this); // This position can't be affected if insertion was in a different root.\n\n\n      if (this.root != insertPosition.root) {\n        return transformed;\n      }\n\n      if (compareArrays(insertPosition.getParentPath(), this.getParentPath()) == 'same') {\n        // If nodes are inserted in the node that is pointed by this position...\n        if (insertPosition.offset < this.offset || insertPosition.offset == this.offset && this.stickiness != 'toPrevious') {\n          // And are inserted before an offset of that position...\n          // \"Push\" this positions offset.\n          transformed.offset += howMany;\n        }\n      } else if (compareArrays(insertPosition.getParentPath(), this.getParentPath()) == 'prefix') {\n        // If nodes are inserted in a node that is on a path to this position...\n        var i = insertPosition.path.length - 1;\n\n        if (insertPosition.offset <= this.path[i]) {\n          // And are inserted before next node of that path...\n          // \"Push\" the index on that path.\n          transformed.path[i] += howMany;\n        }\n      }\n\n      return transformed;\n    }\n    /**\n     * Returns a copy of this position that is updated by moving `howMany` nodes from `sourcePosition` to `targetPosition`.\n     *\n     * @protected\n     * @param {module:engine/model/position~Position} sourcePosition Position before the first element to move.\n     * @param {module:engine/model/position~Position} targetPosition Position where moved elements will be inserted.\n     * @param {Number} howMany How many consecutive nodes to move, starting from `sourcePosition`.\n     * @returns {module:engine/model/position~Position} Transformed position.\n     */\n\n  }, {\n    key: \"_getTransformedByMove\",\n    value: function _getTransformedByMove(sourcePosition, targetPosition, howMany) {\n      // Update target position, as it could be affected by nodes removal.\n      targetPosition = targetPosition._getTransformedByDeletion(sourcePosition, howMany);\n\n      if (sourcePosition.isEqual(targetPosition)) {\n        // If `targetPosition` is equal to `sourcePosition` this isn't really any move. Just return position as it is.\n        return Position._createAt(this);\n      } // Moving a range removes nodes from their original position. We acknowledge this by proper transformation.\n\n\n      var transformed = this._getTransformedByDeletion(sourcePosition, howMany);\n\n      var isMoved = transformed === null || sourcePosition.isEqual(this) && this.stickiness == 'toNext' || sourcePosition.getShiftedBy(howMany).isEqual(this) && this.stickiness == 'toPrevious';\n\n      if (isMoved) {\n        // This position is inside moved range (or sticks to it).\n        // In this case, we calculate a combination of this position, move source position and target position.\n        return this._getCombined(sourcePosition, targetPosition);\n      } else {\n        // This position is not inside a removed range.\n        //\n        // In next step, we simply reflect inserting `howMany` nodes, which might further affect the position.\n        return transformed._getTransformedByInsertion(targetPosition, howMany);\n      }\n    }\n    /**\n     * Returns a new position that is a combination of this position and given positions.\n     *\n     * The combined position is a copy of this position transformed by moving a range starting at `source` position\n     * to the `target` position. It is expected that this position is inside the moved range.\n     *\n     * Example:\n     *\n     *\t\tlet original = model.createPositionFromPath( root, [ 2, 3, 1 ] );\n     *\t\tlet source = model.createPositionFromPath( root, [ 2, 2 ] );\n     *\t\tlet target = model.createPositionFromPath( otherRoot, [ 1, 1, 3 ] );\n     *\t\toriginal._getCombined( source, target ); // path is [ 1, 1, 4, 1 ], root is `otherRoot`\n     *\n     * Explanation:\n     *\n     * We have a position `[ 2, 3, 1 ]` and move some nodes from `[ 2, 2 ]` to `[ 1, 1, 3 ]`. The original position\n     * was inside moved nodes and now should point to the new place. The moved nodes will be after\n     * positions `[ 1, 1, 3 ]`, `[ 1, 1, 4 ]`, `[ 1, 1, 5 ]`. Since our position was in the second moved node,\n     * the transformed position will be in a sub-tree of a node at `[ 1, 1, 4 ]`. Looking at original path, we\n     * took care of `[ 2, 3 ]` part of it. Now we have to add the rest of the original path to the transformed path.\n     * Finally, the transformed position will point to `[ 1, 1, 4, 1 ]`.\n     *\n     * @protected\n     * @param {module:engine/model/position~Position} source Beginning of the moved range.\n     * @param {module:engine/model/position~Position} target Position where the range is moved.\n     * @returns {module:engine/model/position~Position} Combined position.\n     */\n\n  }, {\n    key: \"_getCombined\",\n    value: function _getCombined(source, target) {\n      var i = source.path.length - 1; // The first part of a path to combined position is a path to the place where nodes were moved.\n\n      var combined = Position._createAt(target);\n\n      combined.stickiness = this.stickiness; // Then we have to update the rest of the path.\n      // Fix the offset because this position might be after `from` position and we have to reflect that.\n\n      combined.offset = combined.offset + this.path[i] - source.offset; // Then, add the rest of the path.\n      // If this position is at the same level as `from` position nothing will get added.\n\n      combined.path = combined.path.concat(this.path.slice(i + 1));\n      return combined;\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        root: this.root.toJSON(),\n        path: Array.from(this.path),\n        stickiness: this.stickiness\n      };\n    }\n    /**\n     * Returns a new position that is equal to current position.\n     *\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new this.constructor(this.root, this.path, this.stickiness);\n    }\n    /**\n     * Creates position at the given location. The location can be specified as:\n     *\n     * * a {@link module:engine/model/position~Position position},\n     * * parent element and offset (offset defaults to `0`),\n     * * parent element and `'end'` (sets position at the end of that element),\n     * * {@link module:engine/model/item~Item model item} and `'before'` or `'after'` (sets position before or after given model item).\n     *\n     * This method is a shortcut to other factory methods such as:\n     *\n     * * {@link module:engine/model/position~Position._createBefore},\n     * * {@link module:engine/model/position~Position._createAfter}.\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when the\n     * first parameter is a {@link module:engine/model/item~Item model item}.\n     * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone'] Position stickiness. Used only when the\n     * first parameter is a {@link module:engine/model/item~Item model item}.\n     * @protected\n     */\n\n  }, {\n    key: \"offset\",\n    get: function get() {\n      return last(this.path);\n    }\n    /**\n     * @param {Number} newOffset\n     */\n    ,\n    set: function set(newOffset) {\n      this.path[this.path.length - 1] = newOffset;\n    }\n    /**\n     * Parent element of this position.\n     *\n     * Keep in mind that `parent` value is calculated when the property is accessed.\n     * If {@link module:engine/model/position~Position#path position path}\n     * leads to a non-existing element, `parent` property will throw error.\n     *\n     * Also it is a good idea to cache `parent` property if it is used frequently in an algorithm (i.e. in a long loop).\n     *\n     * @readonly\n     * @type {module:engine/model/element~Element}\n     */\n\n  }, {\n    key: \"parent\",\n    get: function get() {\n      var parent = this.root;\n\n      for (var i = 0; i < this.path.length - 1; i++) {\n        parent = parent.getChild(parent.offsetToIndex(this.path[i]));\n      }\n\n      return parent;\n    }\n    /**\n     * Position {@link module:engine/model/position~Position#offset offset} converted to an index in position's parent node. It is\n     * equal to the {@link module:engine/model/node~Node#index index} of a node after this position. If position is placed\n     * in text node, position index is equal to the index of that text node.\n     *\n     * @readonly\n     * @type {Number}\n     */\n\n  }, {\n    key: \"index\",\n    get: function get() {\n      return this.parent.offsetToIndex(this.offset);\n    }\n    /**\n     * Returns {@link module:engine/model/text~Text text node} instance in which this position is placed or `null` if this\n     * position is not in a text node.\n     *\n     * @readonly\n     * @type {module:engine/model/text~Text|null}\n     */\n\n  }, {\n    key: \"textNode\",\n    get: function get() {\n      var node = this.parent.getChild(this.index);\n      return node instanceof Text && node.startOffset < this.offset ? node : null;\n    }\n    /**\n     * Node directly after this position or `null` if this position is in text node.\n     *\n     * @readonly\n     * @type {module:engine/model/node~Node|null}\n     */\n\n  }, {\n    key: \"nodeAfter\",\n    get: function get() {\n      return this.textNode === null ? this.parent.getChild(this.index) : null;\n    }\n    /**\n     * Node directly before this position or `null` if this position is in text node.\n     *\n     * @readonly\n     * @type {Node}\n     */\n\n  }, {\n    key: \"nodeBefore\",\n    get: function get() {\n      return this.textNode === null ? this.parent.getChild(this.index - 1) : null;\n    }\n    /**\n     * Is `true` if position is at the beginning of its {@link module:engine/model/position~Position#parent parent}, `false` otherwise.\n     *\n     * @readonly\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isAtStart\",\n    get: function get() {\n      return this.offset === 0;\n    }\n    /**\n     * Is `true` if position is at the end of its {@link module:engine/model/position~Position#parent parent}, `false` otherwise.\n     *\n     * @readonly\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isAtEnd\",\n    get: function get() {\n      return this.offset == this.parent.maxOffset;\n    }\n  }], [{\n    key: \"_createAt\",\n    value: function _createAt(itemOrPosition, offset) {\n      var stickiness = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'toNone';\n\n      if (itemOrPosition instanceof Position) {\n        return new Position(itemOrPosition.root, itemOrPosition.path, itemOrPosition.stickiness);\n      } else {\n        var node = itemOrPosition;\n\n        if (offset == 'end') {\n          offset = node.maxOffset;\n        } else if (offset == 'before') {\n          return this._createBefore(node, stickiness);\n        } else if (offset == 'after') {\n          return this._createAfter(node, stickiness);\n        } else if (offset !== 0 && !offset) {\n          /**\n           * {@link module:engine/model/model~Model#createPositionAt `Model#createPositionAt()`}\n           * requires the offset to be specified when the first parameter is a model item.\n           *\n           * @error model-createPositionAt-offset-required\n           */\n          throw new CKEditorError('model-createPositionAt-offset-required: ' + 'Model#createPositionAt() requires the offset when the first parameter is a model item.', [this, itemOrPosition]);\n        }\n\n        if (!node.is('element') && !node.is('documentFragment')) {\n          /**\n           * Position parent have to be a model element or model document fragment.\n           *\n           * @error model-position-parent-incorrect\n           */\n          throw new CKEditorError('model-position-parent-incorrect: Position parent have to be a element or document fragment.', [this, itemOrPosition]);\n        }\n\n        var path = node.getPath();\n        path.push(offset);\n        return new this(node.root, path, stickiness);\n      }\n    }\n    /**\n     * Creates a new position, after given {@link module:engine/model/item~Item model item}.\n     *\n     * @param {module:engine/model/item~Item} item Item after which the position should be placed.\n     * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone'] Position stickiness.\n     * @returns {module:engine/model/position~Position}\n     * @protected\n     */\n\n  }, {\n    key: \"_createAfter\",\n    value: function _createAfter(item, stickiness) {\n      if (!item.parent) {\n        /**\n         * You can not make a position after a root element.\n         *\n         * @error model-position-after-root\n         * @param {module:engine/model/item~Item} root\n         */\n        throw new CKEditorError('model-position-after-root: You cannot make a position after root.', [this, item], {\n          root: item\n        });\n      }\n\n      return this._createAt(item.parent, item.endOffset, stickiness);\n    }\n    /**\n     * Creates a new position, before the given {@link module:engine/model/item~Item model item}.\n     *\n     * @param {module:engine/model/item~Item} item Item before which the position should be placed.\n     * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone'] Position stickiness.\n     * @returns {module:engine/model/position~Position}\n     * @protected\n     */\n\n  }, {\n    key: \"_createBefore\",\n    value: function _createBefore(item, stickiness) {\n      if (!item.parent) {\n        /**\n         * You can not make a position before a root element.\n         *\n         * @error model-position-before-root\n         * @param {module:engine/model/item~Item} root\n         */\n        throw new CKEditorError('model-position-before-root: You cannot make a position before root.', item, {\n          root: item\n        });\n      }\n\n      return this._createAt(item.parent, item.startOffset, stickiness);\n    }\n    /**\n     * Creates a `Position` instance from given plain object (i.e. parsed JSON string).\n     *\n     * @param {Object} json Plain object to be converted to `Position`.\n     * @param {module:engine/model/document~Document} doc Document object that will be position owner.\n     * @returns {module:engine/model/position~Position} `Position` instance created using given plain object.\n     */\n\n  }, {\n    key: \"fromJSON\",\n    value: function fromJSON(json, doc) {\n      if (json.root === '$graveyard') {\n        var pos = new Position(doc.graveyard, json.path);\n        pos.stickiness = json.stickiness;\n        return pos;\n      }\n\n      if (!doc.getRoot(json.root)) {\n        /**\n         * Cannot create position for document. Root with specified name does not exist.\n         *\n         * @error model-position-fromjson-no-root\n         * @param {String} rootName\n         */\n        throw new CKEditorError('model-position-fromjson-no-root: Cannot create position for document. Root with specified name does not exist.', doc, {\n          rootName: json.root\n        });\n      }\n\n      return new Position(doc.getRoot(json.root), json.path, json.stickiness);\n    }\n  }]);\n\n  return Position;\n}();\n/**\n * A flag indicating whether this position is `'before'` or `'after'` or `'same'` as given position.\n * If positions are in different roots `'different'` flag is returned.\n *\n * @typedef {String} module:engine/model/position~PositionRelation\n */\n\n/**\n * Represents how position is \"sticking\" with neighbour nodes. Used to define how position should be transformed (moved)\n * in edge cases. Possible values: `'toNone'`, `'toNext'`, `'toPrevious'`.\n *\n * Examples:\n *\n *\t\tInsert. Position is at | and nodes are inserted at the same position, marked as ^:\n *\n *\t\t- sticks to none:           <p>f^|oo</p>  ->  <p>fbar|oo</p>\n *\t\t- sticks to next node:      <p>f^|oo</p>  ->  <p>fbar|oo</p>\n *\t\t- sticks to previous node:  <p>f|^oo</p>  ->  <p>f|baroo</p>\n *\n *\n *\t\tMove. Position is at | and range [oo] is moved to position ^:\n *\n *\t\t- sticks to none:           <p>f|[oo]</p><p>b^ar</p>  ->  <p>f|</p><p>booar</p>\n *\t\t- sticks to none:           <p>f[oo]|</p><p>b^ar</p>  ->  <p>f|</p><p>booar</p>\n *\n *\t\t- sticks to next node:      <p>f|[oo]</p><p>b^ar</p>  ->  <p>f</p><p>b|ooar</p>\n *\t\t- sticks to next node:      <p>f[oo]|</p><p>b^ar</p>  ->  <p>f|</p><p>booar</p>\n *\n *\t\t- sticks to previous node:  <p>f|[oo]</p><p>b^ar</p>  ->  <p>f|</p><p>booar</p>\n *\t\t- sticks to previous node:  <p>f[oo]|</p><p>b^ar</p>  ->  <p>f</p><p>boo|ar</p>\n *\n * @typedef {String} module:engine/model/position~PositionStickiness\n */\n\n\nexport { Position as default };","function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/range\n */\nimport Position from './position';\nimport TreeWalker from './treewalker';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\n/**\n * Represents a range in the model tree.\n *\n * A range is defined by its {@link module:engine/model/range~Range#start} and {@link module:engine/model/range~Range#end}\n * positions.\n *\n * You can create range instances via its constructor or the `createRange*()` factory methods of\n * {@link module:engine/model/model~Model} and {@link module:engine/model/writer~Writer}.\n */\n\nvar Range =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a range spanning from `start` position to `end` position.\n   *\n   * @param {module:engine/model/position~Position} start Start position.\n   * @param {module:engine/model/position~Position} [end] End position. If not set, range will be collapsed at `start` position.\n   */\n  function Range(start) {\n    var end = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    _classCallCheck(this, Range);\n\n    /**\n     * Start position.\n     *\n     * @readonly\n     * @member {module:engine/model/position~Position}\n     */\n    this.start = Position._createAt(start);\n    /**\n     * End position.\n     *\n     * @readonly\n     * @member {module:engine/model/position~Position}\n     */\n\n    this.end = end ? Position._createAt(end) : Position._createAt(start); // If the range is collapsed, treat in a similar way as a position and set its boundaries stickiness to 'toNone'.\n    // In other case, make the boundaries stick to the \"inside\" of the range.\n\n    this.start.stickiness = this.isCollapsed ? 'toNone' : 'toNext';\n    this.end.stickiness = this.isCollapsed ? 'toNone' : 'toPrevious';\n  }\n  /**\n   * Iterable interface.\n   *\n   * Iterates over all {@link module:engine/model/item~Item items} that are in this range and returns\n   * them together with additional information like length or {@link module:engine/model/position~Position positions},\n   * grouped as {@link module:engine/model/treewalker~TreeWalkerValue}.\n   * It iterates over all {@link module:engine/model/textproxy~TextProxy text contents} that are inside the range\n   * and all the {@link module:engine/model/element~Element}s that are entered into when iterating over this range.\n   *\n   * This iterator uses {@link module:engine/model/treewalker~TreeWalker} with `boundaries` set to this range\n   * and `ignoreElementEnd` option set to `true`.\n   *\n   * @returns {Iterable.<module:engine/model/treewalker~TreeWalkerValue>}\n   */\n\n\n  _createClass(Range, [{\n    key: Symbol.iterator,\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function value() {\n      return regeneratorRuntime.wrap(function value$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.delegateYield(new TreeWalker({\n                boundaries: this,\n                ignoreElementEnd: true\n              }), \"t0\", 1);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, value, this);\n    })\n    /**\n     * Returns whether the range is collapsed, that is if {@link #start} and\n     * {@link #end} positions are equal.\n     *\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"containsPosition\",\n\n    /**\n     * Checks whether this range contains given {@link module:engine/model/position~Position position}.\n     *\n     * @param {module:engine/model/position~Position} position Position to check.\n     * @returns {Boolean} `true` if given {@link module:engine/model/position~Position position} is contained\n     * in this range,`false` otherwise.\n     */\n    value: function containsPosition(position) {\n      return position.isAfter(this.start) && position.isBefore(this.end);\n    }\n    /**\n     * Checks whether this range contains given {@link ~Range range}.\n     *\n     * @param {module:engine/model/range~Range} otherRange Range to check.\n     * @param {Boolean} [loose=false] Whether the check is loose or strict. If the check is strict (`false`), compared range cannot\n     * start or end at the same position as this range boundaries. If the check is loose (`true`), compared range can start, end or\n     * even be equal to this range. Note that collapsed ranges are always compared in strict mode.\n     * @returns {Boolean} `true` if given {@link ~Range range} boundaries are contained by this range, `false` otherwise.\n     */\n\n  }, {\n    key: \"containsRange\",\n    value: function containsRange(otherRange) {\n      var loose = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (otherRange.isCollapsed) {\n        loose = false;\n      }\n\n      var containsStart = this.containsPosition(otherRange.start) || loose && this.start.isEqual(otherRange.start);\n      var containsEnd = this.containsPosition(otherRange.end) || loose && this.end.isEqual(otherRange.end);\n      return containsStart && containsEnd;\n    }\n    /**\n     * Checks whether given {@link module:engine/model/item~Item} is inside this range.\n     *\n     * @param {module:engine/model/item~Item} item Model item to check.\n     */\n\n  }, {\n    key: \"containsItem\",\n    value: function containsItem(item) {\n      var pos = Position._createBefore(item);\n\n      return this.containsPosition(pos) || this.start.isEqual(pos);\n    }\n    /**\n     * Two ranges are equal if their {@link #start} and {@link #end} positions are equal.\n     *\n     * @param {module:engine/model/range~Range} otherRange Range to compare with.\n     * @returns {Boolean} `true` if ranges are equal, `false` otherwise.\n     */\n\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(otherRange) {\n      return this.start.isEqual(otherRange.start) && this.end.isEqual(otherRange.end);\n    }\n    /**\n     * Checks and returns whether this range intersects with given range.\n     *\n     * @param {module:engine/model/range~Range} otherRange Range to compare with.\n     * @returns {Boolean} `true` if ranges intersect, `false` otherwise.\n     */\n\n  }, {\n    key: \"isIntersecting\",\n    value: function isIntersecting(otherRange) {\n      return this.start.isBefore(otherRange.end) && this.end.isAfter(otherRange.start);\n    }\n    /**\n     * Computes which part(s) of this {@link ~Range range} is not a part of given {@link ~Range range}.\n     * Returned array contains zero, one or two {@link ~Range ranges}.\n     *\n     * Examples:\n     *\n     *\t\tlet range = model.createRange(\n     *\t\t\tmodel.createPositionFromPath( root, [ 2, 7 ] ),\n     *\t\t\tmodel.createPositionFromPath( root, [ 4, 0, 1 ] )\n     *\t\t);\n     *\t\tlet otherRange = model.createRange( model.createPositionFromPath( root, [ 1 ] ), model.createPositionFromPath( root, [ 5 ] ) );\n     *\t\tlet transformed = range.getDifference( otherRange );\n     *\t\t// transformed array has no ranges because `otherRange` contains `range`\n     *\n     *\t\totherRange = model.createRange( model.createPositionFromPath( root, [ 1 ] ), model.createPositionFromPath( root, [ 3 ] ) );\n     *\t\ttransformed = range.getDifference( otherRange );\n     *\t\t// transformed array has one range: from [ 3 ] to [ 4, 0, 1 ]\n     *\n     *\t\totherRange = model.createRange( model.createPositionFromPath( root, [ 3 ] ), model.createPositionFromPath( root, [ 4 ] ) );\n     *\t\ttransformed = range.getDifference( otherRange );\n     *\t\t// transformed array has two ranges: from [ 2, 7 ] to [ 3 ] and from [ 4 ] to [ 4, 0, 1 ]\n     *\n     * @param {module:engine/model/range~Range} otherRange Range to differentiate against.\n     * @returns {Array.<module:engine/model/range~Range>} The difference between ranges.\n     */\n\n  }, {\n    key: \"getDifference\",\n    value: function getDifference(otherRange) {\n      var ranges = [];\n\n      if (this.isIntersecting(otherRange)) {\n        // Ranges intersect.\n        if (this.containsPosition(otherRange.start)) {\n          // Given range start is inside this range. This means that we have to\n          // add shrunken range - from the start to the middle of this range.\n          ranges.push(new Range(this.start, otherRange.start));\n        }\n\n        if (this.containsPosition(otherRange.end)) {\n          // Given range end is inside this range. This means that we have to\n          // add shrunken range - from the middle of this range to the end.\n          ranges.push(new Range(otherRange.end, this.end));\n        }\n      } else {\n        // Ranges do not intersect, return the original range.\n        ranges.push(new Range(this.start, this.end));\n      }\n\n      return ranges;\n    }\n    /**\n     * Returns an intersection of this {@link ~Range range} and given {@link ~Range range}.\n     * Intersection is a common part of both of those ranges. If ranges has no common part, returns `null`.\n     *\n     * Examples:\n     *\n     *\t\tlet range = model.createRange(\n     *\t\t\tmodel.createPositionFromPath( root, [ 2, 7 ] ),\n     *\t\t\tmodel.createPositionFromPath( root, [ 4, 0, 1 ] )\n     *\t\t);\n     *\t\tlet otherRange = model.createRange( model.createPositionFromPath( root, [ 1 ] ), model.createPositionFromPath( root, [ 2 ] ) );\n     *\t\tlet transformed = range.getIntersection( otherRange ); // null - ranges have no common part\n     *\n     *\t\totherRange = model.createRange( model.createPositionFromPath( root, [ 3 ] ), model.createPositionFromPath( root, [ 5 ] ) );\n     *\t\ttransformed = range.getIntersection( otherRange ); // range from [ 3 ] to [ 4, 0, 1 ]\n     *\n     * @param {module:engine/model/range~Range} otherRange Range to check for intersection.\n     * @returns {module:engine/model/range~Range|null} A common part of given ranges or `null` if ranges have no common part.\n     */\n\n  }, {\n    key: \"getIntersection\",\n    value: function getIntersection(otherRange) {\n      if (this.isIntersecting(otherRange)) {\n        // Ranges intersect, so a common range will be returned.\n        // At most, it will be same as this range.\n        var commonRangeStart = this.start;\n        var commonRangeEnd = this.end;\n\n        if (this.containsPosition(otherRange.start)) {\n          // Given range start is inside this range. This means thaNt we have to\n          // shrink common range to the given range start.\n          commonRangeStart = otherRange.start;\n        }\n\n        if (this.containsPosition(otherRange.end)) {\n          // Given range end is inside this range. This means that we have to\n          // shrink common range to the given range end.\n          commonRangeEnd = otherRange.end;\n        }\n\n        return new Range(commonRangeStart, commonRangeEnd);\n      } // Ranges do not intersect, so they do not have common part.\n\n\n      return null;\n    }\n    /**\n     * Computes and returns the smallest set of {@link #isFlat flat} ranges, that covers this range in whole.\n     *\n     * See an example of a model structure (`[` and `]` are range boundaries):\n     *\n     *\t\troot                                                            root\n     *\t\t |- element DIV                         DIV             P2              P3             DIV\n     *\t\t |   |- element H                   H        P1        f o o           b a r       H         P4\n     *\t\t |   |   |- \"fir[st\"             fir[st     lorem                               se]cond     ipsum\n     *\t\t |   |- element P1\n     *\t\t |   |   |- \"lorem\"                                              ||\n     *\t\t |- element P2                                                   ||\n     *\t\t |   |- \"foo\"                                                    VV\n     *\t\t |- element P3\n     *\t\t |   |- \"bar\"                                                   root\n     *\t\t |- element DIV                         DIV             [P2             P3]             DIV\n     *\t\t |   |- element H                   H       [P1]       f o o           b a r        H         P4\n     *\t\t |   |   |- \"se]cond\"            fir[st]    lorem                               [se]cond     ipsum\n     *\t\t |   |- element P4\n     *\t\t |   |   |- \"ipsum\"\n     *\n     * As it can be seen, letters contained in the range are: `stloremfoobarse`, spread across different parents.\n     * We are looking for minimal set of flat ranges that contains the same nodes.\n     *\n     * Minimal flat ranges for above range `( [ 0, 0, 3 ], [ 3, 0, 2 ] )` will be:\n     *\n     *\t\t( [ 0, 0, 3 ], [ 0, 0, 5 ] ) = \"st\"\n     *\t\t( [ 0, 1 ], [ 0, 2 ] ) = element P1 (\"lorem\")\n     *\t\t( [ 1 ], [ 3 ] ) = element P2, element P3 (\"foobar\")\n     *\t\t( [ 3, 0, 0 ], [ 3, 0, 2 ] ) = \"se\"\n     *\n     * **Note:** if an {@link module:engine/model/element~Element element} is not wholly contained in this range, it won't be returned\n     * in any of the returned flat ranges. See in the example how `H` elements at the beginning and at the end of the range\n     * were omitted. Only their parts that were wholly in the range were returned.\n     *\n     * **Note:** this method is not returning flat ranges that contain no nodes.\n     *\n     * @returns {Array.<module:engine/model/range~Range>} Array of flat ranges covering this range.\n     */\n\n  }, {\n    key: \"getMinimalFlatRanges\",\n    value: function getMinimalFlatRanges() {\n      var ranges = [];\n      var diffAt = this.start.getCommonPath(this.end).length;\n\n      var pos = Position._createAt(this.start);\n\n      var posParent = pos.parent; // Go up.\n\n      while (pos.path.length > diffAt + 1) {\n        var howMany = posParent.maxOffset - pos.offset;\n\n        if (howMany !== 0) {\n          ranges.push(new Range(pos, pos.getShiftedBy(howMany)));\n        }\n\n        pos.path = pos.path.slice(0, -1);\n        pos.offset++;\n        posParent = posParent.parent;\n      } // Go down.\n\n\n      while (pos.path.length <= this.end.path.length) {\n        var offset = this.end.path[pos.path.length - 1];\n\n        var _howMany = offset - pos.offset;\n\n        if (_howMany !== 0) {\n          ranges.push(new Range(pos, pos.getShiftedBy(_howMany)));\n        }\n\n        pos.offset = offset;\n        pos.path.push(0);\n      }\n\n      return ranges;\n    }\n    /**\n     * Creates a {@link module:engine/model/treewalker~TreeWalker TreeWalker} instance with this range as a boundary.\n     *\n     * For example, to iterate over all items in the entire document root:\n     *\n     *\t\t// Create a range spanning over the entire root content:\n     *\t\tconst range = editor.model.createRangeIn( editor.model.document.getRoot() );\n     *\n     *\t\t// Iterate over all items in this range:\n     *\t\tfor ( const value of range.getWalker() ) {\n     *\t\t\tconsole.log( value.item );\n     *\t\t}\n     *\n     * @param {Object} options Object with configuration options. See {@link module:engine/model/treewalker~TreeWalker}.\n     * @param {module:engine/model/position~Position} [options.startPosition]\n     * @param {Boolean} [options.singleCharacters=false]\n     * @param {Boolean} [options.shallow=false]\n     * @param {Boolean} [options.ignoreElementEnd=false]\n     */\n\n  }, {\n    key: \"getWalker\",\n    value: function getWalker() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      options.boundaries = this;\n      return new TreeWalker(options);\n    }\n    /**\n     * Returns an iterator that iterates over all {@link module:engine/model/item~Item items} that are in this range and returns\n     * them.\n     *\n     * This method uses {@link module:engine/model/treewalker~TreeWalker} with `boundaries` set to this range and `ignoreElementEnd` option\n     * set to `true`. However it returns only {@link module:engine/model/item~Item model items},\n     * not {@link module:engine/model/treewalker~TreeWalkerValue}.\n     *\n     * You may specify additional options for the tree walker. See {@link module:engine/model/treewalker~TreeWalker} for\n     * a full list of available options.\n     *\n     * @method getItems\n     * @param {Object} options Object with configuration options. See {@link module:engine/model/treewalker~TreeWalker}.\n     * @returns {Iterable.<module:engine/model/item~Item>}\n     */\n\n  }, {\n    key: \"getItems\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function getItems() {\n      var options,\n          treeWalker,\n          _iteratorNormalCompletion,\n          _didIteratorError,\n          _iteratorError,\n          _iterator,\n          _step,\n          _value,\n          _args2 = arguments;\n\n      return regeneratorRuntime.wrap(function getItems$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              options = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {};\n              options.boundaries = this;\n              options.ignoreElementEnd = true;\n              treeWalker = new TreeWalker(options);\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _iteratorError = undefined;\n              _context2.prev = 7;\n              _iterator = treeWalker[Symbol.iterator]();\n\n            case 9:\n              if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                _context2.next = 16;\n                break;\n              }\n\n              _value = _step.value;\n              _context2.next = 13;\n              return _value.item;\n\n            case 13:\n              _iteratorNormalCompletion = true;\n              _context2.next = 9;\n              break;\n\n            case 16:\n              _context2.next = 22;\n              break;\n\n            case 18:\n              _context2.prev = 18;\n              _context2.t0 = _context2[\"catch\"](7);\n              _didIteratorError = true;\n              _iteratorError = _context2.t0;\n\n            case 22:\n              _context2.prev = 22;\n              _context2.prev = 23;\n\n              if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n                _iterator[\"return\"]();\n              }\n\n            case 25:\n              _context2.prev = 25;\n\n              if (!_didIteratorError) {\n                _context2.next = 28;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 28:\n              return _context2.finish(25);\n\n            case 29:\n              return _context2.finish(22);\n\n            case 30:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, getItems, this, [[7, 18, 22, 30], [23,, 25, 29]]);\n    })\n    /**\n     * Returns an iterator that iterates over all {@link module:engine/model/position~Position positions} that are boundaries or\n     * contained in this range.\n     *\n     * This method uses {@link module:engine/model/treewalker~TreeWalker} with `boundaries` set to this range. However it returns only\n     * {@link module:engine/model/position~Position positions}, not {@link module:engine/model/treewalker~TreeWalkerValue}.\n     *\n     * You may specify additional options for the tree walker. See {@link module:engine/model/treewalker~TreeWalker} for\n     * a full list of available options.\n     *\n     * @param {Object} options Object with configuration options. See {@link module:engine/model/treewalker~TreeWalker}.\n     * @returns {Iterable.<module:engine/model/position~Position>}\n     */\n\n  }, {\n    key: \"getPositions\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function getPositions() {\n      var options,\n          treeWalker,\n          _iteratorNormalCompletion2,\n          _didIteratorError2,\n          _iteratorError2,\n          _iterator2,\n          _step2,\n          _value2,\n          _args3 = arguments;\n\n      return regeneratorRuntime.wrap(function getPositions$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              options = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : {};\n              options.boundaries = this;\n              treeWalker = new TreeWalker(options);\n              _context3.next = 5;\n              return treeWalker.position;\n\n            case 5:\n              _iteratorNormalCompletion2 = true;\n              _didIteratorError2 = false;\n              _iteratorError2 = undefined;\n              _context3.prev = 8;\n              _iterator2 = treeWalker[Symbol.iterator]();\n\n            case 10:\n              if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {\n                _context3.next = 17;\n                break;\n              }\n\n              _value2 = _step2.value;\n              _context3.next = 14;\n              return _value2.nextPosition;\n\n            case 14:\n              _iteratorNormalCompletion2 = true;\n              _context3.next = 10;\n              break;\n\n            case 17:\n              _context3.next = 23;\n              break;\n\n            case 19:\n              _context3.prev = 19;\n              _context3.t0 = _context3[\"catch\"](8);\n              _didIteratorError2 = true;\n              _iteratorError2 = _context3.t0;\n\n            case 23:\n              _context3.prev = 23;\n              _context3.prev = 24;\n\n              if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n                _iterator2[\"return\"]();\n              }\n\n            case 26:\n              _context3.prev = 26;\n\n              if (!_didIteratorError2) {\n                _context3.next = 29;\n                break;\n              }\n\n              throw _iteratorError2;\n\n            case 29:\n              return _context3.finish(26);\n\n            case 30:\n              return _context3.finish(23);\n\n            case 31:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, getPositions, this, [[8, 19, 23, 31], [24,, 26, 30]]);\n    })\n    /**\n     * Returns a range that is a result of transforming this range by given `operation`.\n     *\n     * **Note:** transformation may break one range into multiple ranges (for example, when a part of the range is\n     * moved to a different part of document tree). For this reason, an array is returned by this method and it\n     * may contain one or more `Range` instances.\n     *\n     * @param {module:engine/model/operation/operation~Operation} operation Operation to transform range by.\n     * @returns {Array.<module:engine/model/range~Range>} Range which is the result of transformation.\n     */\n\n  }, {\n    key: \"getTransformedByOperation\",\n    value: function getTransformedByOperation(operation) {\n      switch (operation.type) {\n        case 'insert':\n          return this._getTransformedByInsertOperation(operation);\n\n        case 'move':\n        case 'remove':\n        case 'reinsert':\n          return this._getTransformedByMoveOperation(operation);\n\n        case 'split':\n          return [this._getTransformedBySplitOperation(operation)];\n\n        case 'merge':\n          return [this._getTransformedByMergeOperation(operation)];\n      }\n\n      return [new Range(this.start, this.end)];\n    }\n    /**\n     * Returns a range that is a result of transforming this range by multiple `operations`.\n     *\n     * @see ~Range#getTransformedByOperation\n     * @param {Iterable.<module:engine/model/operation/operation~Operation>} operations Operations to transform the range by.\n     * @returns {Array.<module:engine/model/range~Range>} Range which is the result of transformation.\n     */\n\n  }, {\n    key: \"getTransformedByOperations\",\n    value: function getTransformedByOperations(operations) {\n      var ranges = [new Range(this.start, this.end)];\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = operations[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var operation = _step3.value;\n\n          for (var _i = 0; _i < ranges.length; _i++) {\n            var result = ranges[_i].getTransformedByOperation(operation);\n\n            ranges.splice.apply(ranges, [_i, 1].concat(_toConsumableArray(result)));\n            _i += result.length - 1;\n          }\n        } // It may happen that a range is split into two, and then the part of second \"piece\" is moved into first\n        // \"piece\". In this case we will have incorrect third range, which should not be included in the result --\n        // because it is already included in the first \"piece\". In this loop we are looking for all such ranges that\n        // are inside other ranges and we simply remove them.\n\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n            _iterator3[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      for (var i = 0; i < ranges.length; i++) {\n        var range = ranges[i];\n\n        for (var j = i + 1; j < ranges.length; j++) {\n          var next = ranges[j];\n\n          if (range.containsRange(next) || next.containsRange(range) || range.isEqual(next)) {\n            ranges.splice(j, 1);\n          }\n        }\n      }\n\n      return ranges;\n    }\n    /**\n     * Returns an {@link module:engine/model/element~Element} or {@link module:engine/model/documentfragment~DocumentFragment}\n     * which is a common ancestor of the range's both ends (in which the entire range is contained).\n     *\n     * @returns {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment|null}\n     */\n\n  }, {\n    key: \"getCommonAncestor\",\n    value: function getCommonAncestor() {\n      return this.start.getCommonAncestor(this.end);\n    }\n    /**\n     * Converts `Range` to plain object and returns it.\n     *\n     * @returns {Object} `Node` converted to plain object.\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        start: this.start.toJSON(),\n        end: this.end.toJSON()\n      };\n    }\n    /**\n     * Returns a new range that is equal to current range.\n     *\n     * @returns {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new this.constructor(this.start, this.end);\n    }\n    /**\n     * Returns a result of transforming a copy of this range by insert operation.\n     *\n     * One or more ranges may be returned as a result of this transformation.\n     *\n     * @protected\n     * @param {module:engine/model/operation/insertoperation~InsertOperation} operation\n     * @returns {Array.<module:engine/model/range~Range>}\n     */\n\n  }, {\n    key: \"_getTransformedByInsertOperation\",\n    value: function _getTransformedByInsertOperation(operation) {\n      var spread = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return this._getTransformedByInsertion(operation.position, operation.howMany, spread);\n    }\n    /**\n     * Returns a result of transforming a copy of this range by move operation.\n     *\n     * One or more ranges may be returned as a result of this transformation.\n     *\n     * @protected\n     * @param {module:engine/model/operation/moveoperation~MoveOperation} operation\n     * @returns {Array.<module:engine/model/range~Range>}\n     */\n\n  }, {\n    key: \"_getTransformedByMoveOperation\",\n    value: function _getTransformedByMoveOperation(operation) {\n      var spread = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var sourcePosition = operation.sourcePosition;\n      var howMany = operation.howMany;\n      var targetPosition = operation.targetPosition;\n      return this._getTransformedByMove(sourcePosition, targetPosition, howMany, spread);\n    }\n    /**\n     * Returns a result of transforming a copy of this range by split operation.\n     *\n     * Always one range is returned. The transformation is done in a way to not break the range.\n     *\n     * @protected\n     * @param {module:engine/model/operation/splitoperation~SplitOperation} operation\n     * @returns {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"_getTransformedBySplitOperation\",\n    value: function _getTransformedBySplitOperation(operation) {\n      var start = this.start._getTransformedBySplitOperation(operation);\n\n      var end = this.end._getTransformedBySplitOperation(operation);\n\n      if (this.end.isEqual(operation.insertionPosition)) {\n        end = this.end.getShiftedBy(1);\n      } // Below may happen when range contains graveyard element used by split operation.\n\n\n      if (start.root != end.root) {\n        // End position was next to the moved graveyard element and was moved with it.\n        // Fix it by using old `end` which has proper `root`.\n        end = this.end.getShiftedBy(-1);\n      }\n\n      return new Range(start, end);\n    }\n    /**\n     * Returns a result of transforming a copy of this range by merge operation.\n     *\n     * Always one range is returned. The transformation is done in a way to not break the range.\n     *\n     * @protected\n     * @param {module:engine/model/operation/mergeoperation~MergeOperation} operation\n     * @returns {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"_getTransformedByMergeOperation\",\n    value: function _getTransformedByMergeOperation(operation) {\n      // Special case when the marker is set on \"the closing tag\" of an element. Marker can be set like that during\n      // transformations, especially when a content of a few block elements were removed. For example:\n      //\n      // {} is the transformed range, [] is the removed range.\n      // <p>F[o{o</p><p>B}ar</p><p>Xy]z</p>\n      //\n      // <p>Fo{o</p><p>B}ar</p><p>z</p>\n      // <p>F{</p><p>B}ar</p><p>z</p>\n      // <p>F{</p>}<p>z</p>\n      // <p>F{}z</p>\n      //\n      if (this.start.isEqual(operation.targetPosition) && this.end.isEqual(operation.deletionPosition)) {\n        return new Range(this.start);\n      }\n\n      var start = this.start._getTransformedByMergeOperation(operation);\n\n      var end = this.end._getTransformedByMergeOperation(operation);\n\n      if (start.root != end.root) {\n        // This happens when the end position was next to the merged (deleted) element.\n        // Then, the end position was moved to the graveyard root. In this case we need to fix\n        // the range cause its boundaries would be in different roots.\n        end = this.end.getShiftedBy(-1);\n      }\n\n      if (start.isAfter(end)) {\n        // This happens in three following cases:\n        //\n        // Case 1: Merge operation source position is before the target position (due to some transformations, OT, etc.)\n        //         This means that start can be moved before the end of the range.\n        //\n        // Before: <p>a{a</p><p>b}b</p><p>cc</p>\n        // Merge:  <p>b}b</p><p>cca{a</p>\n        // Fix:    <p>{b}b</p><p>ccaa</p>\n        //\n        // Case 2: Range start is before merged node but not directly.\n        //         Result should include all nodes that were in the original range.\n        //\n        // Before: <p>aa</p>{<p>cc</p><p>b}b</p>\n        // Merge:  <p>aab}b</p>{<p>cc</p>\n        // Fix:    <p>aa{bb</p><p>cc</p>}\n        //\n        //         The range is expanded by an additional `b` letter but it is better than dropping the whole `cc` paragraph.\n        //\n        // Case 3: Range start is directly before merged node.\n        //         Resulting range should include only nodes from the merged element:\n        //\n        // Before: <p>aa</p>{<p>b}b</p><p>cc</p>\n        // Merge:  <p>aab}b</p>{<p>cc</p>\n        // Fix:    <p>aa{b}b</p><p>cc</p>\n        //\n        if (operation.sourcePosition.isBefore(operation.targetPosition)) {\n          // Case 1.\n          start = Position._createAt(end);\n          start.offset = 0;\n        } else {\n          if (!operation.deletionPosition.isEqual(start)) {\n            // Case 2.\n            end = operation.deletionPosition;\n          } // In both case 2 and 3 start is at the end of the merge-to element.\n\n\n          start = operation.targetPosition;\n        }\n\n        return new Range(start, end);\n      }\n\n      return new Range(start, end);\n    }\n    /**\n     * Returns an array containing one or two {@link ~Range ranges} that are a result of transforming this\n     * {@link ~Range range} by inserting `howMany` nodes at `insertPosition`. Two {@link ~Range ranges} are\n     * returned if the insertion was inside this {@link ~Range range} and `spread` is set to `true`.\n     *\n     * Examples:\n     *\n     *\t\tlet range = model.createRange(\n     *\t\t\tmodel.createPositionFromPath( root, [ 2, 7 ] ),\n     *\t\t\tmodel.createPositionFromPath( root, [ 4, 0, 1 ] )\n     *\t\t);\n     *\t\tlet transformed = range._getTransformedByInsertion( model.createPositionFromPath( root, [ 1 ] ), 2 );\n     *\t\t// transformed array has one range from [ 4, 7 ] to [ 6, 0, 1 ]\n     *\n     *\t\ttransformed = range._getTransformedByInsertion( model.createPositionFromPath( root, [ 4, 0, 0 ] ), 4 );\n     *\t\t// transformed array has one range from [ 2, 7 ] to [ 4, 0, 5 ]\n     *\n     *\t\ttransformed = range._getTransformedByInsertion( model.createPositionFromPath( root, [ 3, 2 ] ), 4 );\n     *\t\t// transformed array has one range, which is equal to original range\n     *\n     *\t\ttransformed = range._getTransformedByInsertion( model.createPositionFromPath( root, [ 3, 2 ] ), 4, true );\n     *\t\t// transformed array has two ranges: from [ 2, 7 ] to [ 3, 2 ] and from [ 3, 6 ] to [ 4, 0, 1 ]\n     *\n     * @protected\n     * @param {module:engine/model/position~Position} insertPosition Position where nodes are inserted.\n     * @param {Number} howMany How many nodes are inserted.\n     * @param {Boolean} [spread] Flag indicating whether this {~Range range} should be spread if insertion\n     * was inside the range. Defaults to `false`.\n     * @returns {Array.<module:engine/model/range~Range>} Result of the transformation.\n     */\n\n  }, {\n    key: \"_getTransformedByInsertion\",\n    value: function _getTransformedByInsertion(insertPosition, howMany) {\n      var spread = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      if (spread && this.containsPosition(insertPosition)) {\n        // Range has to be spread. The first part is from original start to the spread point.\n        // The other part is from spread point to the original end, but transformed by\n        // insertion to reflect insertion changes.\n        return [new Range(this.start, insertPosition), new Range(insertPosition.getShiftedBy(howMany), this.end._getTransformedByInsertion(insertPosition, howMany))];\n      } else {\n        var range = new Range(this.start, this.end);\n        range.start = range.start._getTransformedByInsertion(insertPosition, howMany);\n        range.end = range.end._getTransformedByInsertion(insertPosition, howMany);\n        return [range];\n      }\n    }\n    /**\n     * Returns an array containing {@link ~Range ranges} that are a result of transforming this\n     * {@link ~Range range} by moving `howMany` nodes from `sourcePosition` to `targetPosition`.\n     *\n     * @protected\n     * @param {module:engine/model/position~Position} sourcePosition Position from which nodes are moved.\n     * @param {module:engine/model/position~Position} targetPosition Position to where nodes are moved.\n     * @param {Number} howMany How many nodes are moved.\n     * @param {Boolean} [spread=false] Whether the range should be spread if the move points inside the range.\n     * @returns {Array.<module:engine/model/range~Range>} Result of the transformation.\n     */\n\n  }, {\n    key: \"_getTransformedByMove\",\n    value: function _getTransformedByMove(sourcePosition, targetPosition, howMany) {\n      var spread = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      // Special case for transforming a collapsed range. Just transform it like a position.\n      if (this.isCollapsed) {\n        var newPos = this.start._getTransformedByMove(sourcePosition, targetPosition, howMany);\n\n        return [new Range(newPos)];\n      } // Special case for transformation when a part of the range is moved towards the range.\n      //\n      // Examples:\n      //\n      // <div><p>ab</p><p>c[d</p></div><p>e]f</p> --> <div><p>ab</p></div><p>c[d</p><p>e]f</p>\n      // <p>e[f</p><div><p>a]b</p><p>cd</p></div> --> <p>e[f</p><p>a]b</p><div><p>cd</p></div>\n      //\n      // Without this special condition, the default algorithm leaves an \"artifact\" range from one of `differenceSet` parts:\n      //\n      // <div><p>ab</p><p>c[d</p></div><p>e]f</p> --> <div><p>ab</p>{</div>}<p>c[d</p><p>e]f</p>\n      //\n      // This special case is applied only if the range is to be kept together (not spread).\n\n\n      var moveRange = Range._createFromPositionAndShift(sourcePosition, howMany);\n\n      var insertPosition = targetPosition._getTransformedByDeletion(sourcePosition, howMany);\n\n      if (this.containsPosition(targetPosition) && !spread) {\n        if (moveRange.containsPosition(this.start) || moveRange.containsPosition(this.end)) {\n          var start = this.start._getTransformedByMove(sourcePosition, targetPosition, howMany);\n\n          var end = this.end._getTransformedByMove(sourcePosition, targetPosition, howMany);\n\n          return [new Range(start, end)];\n        }\n      } // Default algorithm.\n\n\n      var result;\n      var differenceSet = this.getDifference(moveRange);\n      var difference = null;\n      var common = this.getIntersection(moveRange);\n\n      if (differenceSet.length == 1) {\n        // `moveRange` and this range may intersect but may be separate.\n        difference = new Range(differenceSet[0].start._getTransformedByDeletion(sourcePosition, howMany), differenceSet[0].end._getTransformedByDeletion(sourcePosition, howMany));\n      } else if (differenceSet.length == 2) {\n        // `moveRange` is inside this range.\n        difference = new Range(this.start, this.end._getTransformedByDeletion(sourcePosition, howMany));\n      } // else, `moveRange` contains this range.\n\n\n      if (difference) {\n        result = difference._getTransformedByInsertion(insertPosition, howMany, common !== null || spread);\n      } else {\n        result = [];\n      }\n\n      if (common) {\n        var transformedCommon = new Range(common.start._getCombined(moveRange.start, insertPosition), common.end._getCombined(moveRange.start, insertPosition));\n\n        if (result.length == 2) {\n          result.splice(1, 0, transformedCommon);\n        } else {\n          result.push(transformedCommon);\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Returns a copy of this range that is transformed by deletion of `howMany` nodes from `deletePosition`.\n     *\n     * If the deleted range is intersecting with the transformed range, the transformed range will be shrank.\n     *\n     * If the deleted range contains transformed range, `null` will be returned.\n     *\n     * @protected\n     * @param {module:engine/model/position~Position} deletionPosition Position from which nodes are removed.\n     * @param {Number} howMany How many nodes are removed.\n     * @returns {module:engine/model/range~Range|null} Result of the transformation.\n     */\n\n  }, {\n    key: \"_getTransformedByDeletion\",\n    value: function _getTransformedByDeletion(deletePosition, howMany) {\n      var newStart = this.start._getTransformedByDeletion(deletePosition, howMany);\n\n      var newEnd = this.end._getTransformedByDeletion(deletePosition, howMany);\n\n      if (newStart == null && newEnd == null) {\n        return null;\n      }\n\n      if (newStart == null) {\n        newStart = deletePosition;\n      }\n\n      if (newEnd == null) {\n        newEnd = deletePosition;\n      }\n\n      return new Range(newStart, newEnd);\n    }\n    /**\n     * Creates a new range, spreading from specified {@link module:engine/model/position~Position position} to a position moved by\n     * given `shift`. If `shift` is a negative value, shifted position is treated as the beginning of the range.\n     *\n     * @protected\n     * @param {module:engine/model/position~Position} position Beginning of the range.\n     * @param {Number} shift How long the range should be.\n     * @returns {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"isCollapsed\",\n    get: function get() {\n      return this.start.isEqual(this.end);\n    }\n    /**\n     * Returns whether this range is flat, that is if {@link #start} position and\n     * {@link #end} position are in the same {@link module:engine/model/position~Position#parent}.\n     *\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isFlat\",\n    get: function get() {\n      var startParentPath = this.start.getParentPath();\n      var endParentPath = this.end.getParentPath();\n      return compareArrays(startParentPath, endParentPath) == 'same';\n    }\n    /**\n     * Range root element.\n     *\n     * @type {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment}\n     */\n\n  }, {\n    key: \"root\",\n    get: function get() {\n      return this.start.root;\n    }\n  }], [{\n    key: \"_createFromPositionAndShift\",\n    value: function _createFromPositionAndShift(position, shift) {\n      var start = position;\n      var end = position.getShiftedBy(shift);\n      return shift > 0 ? new this(start, end) : new this(end, start);\n    }\n    /**\n     * Creates a range inside an {@link module:engine/model/element~Element element} which starts before the first child of\n     * that element and ends after the last child of that element.\n     *\n     * @protected\n     * @param {module:engine/model/element~Element} element Element which is a parent for the range.\n     * @returns {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"_createIn\",\n    value: function _createIn(element) {\n      return new this(Position._createAt(element, 0), Position._createAt(element, element.maxOffset));\n    }\n    /**\n     * Creates a range that starts before given {@link module:engine/model/item~Item model item} and ends after it.\n     *\n     * @protected\n     * @param {module:engine/model/item~Item} item\n     * @returns {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"_createOn\",\n    value: function _createOn(item) {\n      return this._createFromPositionAndShift(Position._createBefore(item), item.offsetSize);\n    }\n    /**\n     * Combines all ranges from the passed array into a one range. At least one range has to be passed.\n     * Passed ranges must not have common parts.\n     *\n     * The first range from the array is a reference range. If other ranges start or end on the exactly same position where\n     * the reference range, they get combined into one range.\n     *\n     *\t\t[  ][]  [    ][ ][             ][ ][]  [  ]  // Passed ranges, shown sorted\n     *\t\t[    ]                                       // The result of the function if the first range was a reference range.\n     *\t            [                           ]        // The result of the function if the third-to-seventh range was a reference range.\n     *\t                                           [  ]  // The result of the function if the last range was a reference range.\n     *\n     * @param {Array.<module:engine/model/range~Range>} ranges Ranges to combine.\n     * @returns {module:engine/model/range~Range} Combined range.\n     */\n\n  }, {\n    key: \"_createFromRanges\",\n    value: function _createFromRanges(ranges) {\n      if (ranges.length === 0) {\n        /**\n         * At least one range has to be passed to\n         * {@link module:engine/model/range~Range._createFromRanges `Range._createFromRanges()`}.\n         *\n         * @error range-create-from-ranges-empty-array\n         */\n        throw new CKEditorError('range-create-from-ranges-empty-array: At least one range has to be passed.', null);\n      } else if (ranges.length == 1) {\n        return ranges[0].clone();\n      } // 1. Set the first range in `ranges` array as a reference range.\n      // If we are going to return just a one range, one of the ranges need to be the reference one.\n      // Other ranges will be stuck to that range, if possible.\n\n\n      var ref = ranges[0]; // 2. Sort all the ranges so it's easier to process them.\n\n      ranges.sort(function (a, b) {\n        return a.start.isAfter(b.start) ? 1 : -1;\n      }); // 3. Check at which index the reference range is now.\n\n      var refIndex = ranges.indexOf(ref); // 4. At this moment we don't need the original range.\n      // We are going to modify the result and we need to return a new instance of Range.\n      // We have to create a copy of the reference range.\n\n      var result = new this(ref.start, ref.end); // 5. Ranges should be checked and glued starting from the range that is closest to the reference range.\n      // Since ranges are sorted, start with the range with index that is closest to reference range index.\n\n      if (refIndex > 0) {\n        for (var i = refIndex - 1; true; i++) {\n          if (ranges[i].end.isEqual(result.start)) {\n            result.start = Position._createAt(ranges[i].start);\n          } else {\n            // If ranges are not starting/ending at the same position there is no point in looking further.\n            break;\n          }\n        }\n      } // 6. Ranges should be checked and glued starting from the range that is closest to the reference range.\n      // Since ranges are sorted, start with the range with index that is closest to reference range index.\n\n\n      for (var _i2 = refIndex + 1; _i2 < ranges.length; _i2++) {\n        if (ranges[_i2].start.isEqual(result.end)) {\n          result.end = Position._createAt(ranges[_i2].end);\n        } else {\n          // If ranges are not starting/ending at the same position there is no point in looking further.\n          break;\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Creates a `Range` instance from given plain object (i.e. parsed JSON string).\n     *\n     * @param {Object} json Plain object to be converted to `Range`.\n     * @param {module:engine/model/document~Document} doc Document object that will be range owner.\n     * @returns {module:engine/model/element~Element} `Range` instance created using given plain object.\n     */\n\n  }, {\n    key: \"fromJSON\",\n    value: function fromJSON(json, doc) {\n      return new this(Position.fromJSON(json.start, doc), Position.fromJSON(json.end, doc));\n    }\n  }]);\n\n  return Range;\n}();\n\nexport { Range as default };","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/conversion/mapper\n */\nimport ModelPosition from '../model/position';\nimport ModelRange from '../model/range';\nimport ViewPosition from '../view/position';\nimport ViewRange from '../view/range';\nimport ViewText from '../view/text';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n/**\n * Maps elements, positions and markers between {@link module:engine/view/document~Document the view} and\n * {@link module:engine/model/model the model}.\n *\n * The instance of the Mapper used for the editing pipeline is available in\n * {@link module:engine/controller/editingcontroller~EditingController#mapper `editor.editing.mapper`}.\n *\n * Mapper uses bound elements to find corresponding elements and positions, so, to get proper results,\n * all model elements should be {@link module:engine/conversion/mapper~Mapper#bindElements bound}.\n *\n * To map complex model to/from view relations, you may provide custom callbacks for\n * {@link module:engine/conversion/mapper~Mapper#event:modelToViewPosition modelToViewPosition event} and\n * {@link module:engine/conversion/mapper~Mapper#event:viewToModelPosition viewToModelPosition event} that are fired whenever\n * a position mapping request occurs.\n * Those events are fired by {@link module:engine/conversion/mapper~Mapper#toViewPosition toViewPosition}\n * and {@link module:engine/conversion/mapper~Mapper#toModelPosition toModelPosition} methods. `Mapper` adds it's own default callbacks\n * with `'lowest'` priority. To override default `Mapper` mapping, add custom callback with higher priority and\n * stop the event.\n */\n\nvar Mapper =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of the mapper.\n   */\n  function Mapper() {\n    var _this = this;\n\n    _classCallCheck(this, Mapper);\n\n    /**\n     * Model element to view element mapping.\n     *\n     * @private\n     * @member {WeakMap}\n     */\n    this._modelToViewMapping = new WeakMap();\n    /**\n     * View element to model element mapping.\n     *\n     * @private\n     * @member {WeakMap}\n     */\n\n    this._viewToModelMapping = new WeakMap();\n    /**\n     * A map containing callbacks between view element names and functions evaluating length of view elements\n     * in model.\n     *\n     * @private\n     * @member {Map}\n     */\n\n    this._viewToModelLengthCallbacks = new Map();\n    /**\n     * Model marker name to view elements mapping.\n     *\n     * Keys are `String`s while values are `Set`s with {@link module:engine/view/element~Element view elements}.\n     * One marker (name) can be mapped to multiple elements.\n     *\n     * @private\n     * @member {Map}\n     */\n\n    this._markerNameToElements = new Map(); // Default mapper algorithm for mapping model position to view position.\n\n    this.on('modelToViewPosition', function (evt, data) {\n      if (data.viewPosition) {\n        return;\n      }\n\n      var viewContainer = _this._modelToViewMapping.get(data.modelPosition.parent);\n\n      data.viewPosition = _this._findPositionIn(viewContainer, data.modelPosition.offset);\n    }, {\n      priority: 'low'\n    }); // Default mapper algorithm for mapping view position to model position.\n\n    this.on('viewToModelPosition', function (evt, data) {\n      if (data.modelPosition) {\n        return;\n      }\n\n      var viewBlock = _this.findMappedViewAncestor(data.viewPosition);\n\n      var modelParent = _this._viewToModelMapping.get(viewBlock);\n\n      var modelOffset = _this._toModelOffset(data.viewPosition.parent, data.viewPosition.offset, viewBlock);\n\n      data.modelPosition = ModelPosition._createAt(modelParent, modelOffset);\n    }, {\n      priority: 'low'\n    });\n  }\n  /**\n   * Marks model and view elements as corresponding. Corresponding elements can be retrieved by using\n   * the {@link module:engine/conversion/mapper~Mapper#toModelElement toModelElement} and\n   * {@link module:engine/conversion/mapper~Mapper#toViewElement toViewElement} methods.\n   * The information that elements are bound is also used to translate positions.\n   *\n   * @param {module:engine/model/element~Element} modelElement Model element.\n   * @param {module:engine/view/element~Element} viewElement View element.\n   */\n\n\n  _createClass(Mapper, [{\n    key: \"bindElements\",\n    value: function bindElements(modelElement, viewElement) {\n      this._modelToViewMapping.set(modelElement, viewElement);\n\n      this._viewToModelMapping.set(viewElement, modelElement);\n    }\n    /**\n     * Unbinds given {@link module:engine/view/element~Element view element} from the map.\n     *\n     * **Note:** view-to-model binding will be removed, if it existed. However, corresponding model-to-view binding\n     * will be removed only if model element is still bound to passed `viewElement`.\n     *\n     * This behavior lets for re-binding model element to another view element without fear of losing the new binding\n     * when the previously bound view element is unbound.\n     *\n     * @param {module:engine/view/element~Element} viewElement View element to unbind.\n     */\n\n  }, {\n    key: \"unbindViewElement\",\n    value: function unbindViewElement(viewElement) {\n      var modelElement = this.toModelElement(viewElement);\n\n      this._viewToModelMapping[\"delete\"](viewElement);\n\n      if (this._modelToViewMapping.get(modelElement) == viewElement) {\n        this._modelToViewMapping[\"delete\"](modelElement);\n      }\n    }\n    /**\n     * Unbinds given {@link module:engine/model/element~Element model element} from the map.\n     *\n     * **Note:** model-to-view binding will be removed, if it existed. However, corresponding view-to-model binding\n     * will be removed only if view element is still bound to passed `modelElement`.\n     *\n     * This behavior lets for re-binding view element to another model element without fear of losing the new binding\n     * when the previously bound model element is unbound.\n     *\n     * @param {module:engine/model/element~Element} modelElement Model element to unbind.\n     */\n\n  }, {\n    key: \"unbindModelElement\",\n    value: function unbindModelElement(modelElement) {\n      var viewElement = this.toViewElement(modelElement);\n\n      this._modelToViewMapping[\"delete\"](modelElement);\n\n      if (this._viewToModelMapping.get(viewElement) == modelElement) {\n        this._viewToModelMapping[\"delete\"](viewElement);\n      }\n    }\n    /**\n     * Binds given marker name with given {@link module:engine/view/element~Element view element}. The element\n     * will be added to the current set of elements bound with given marker name.\n     *\n     * @param {module:engine/view/element~Element} element Element to bind.\n     * @param {String} name Marker name.\n     */\n\n  }, {\n    key: \"bindElementToMarker\",\n    value: function bindElementToMarker(element, name) {\n      var elements = this._markerNameToElements.get(name) || new Set();\n      elements.add(element);\n\n      this._markerNameToElements.set(name, elements);\n    }\n    /**\n     * Unbinds all elements from given marker name.\n     *\n     * @param {String} name Marker name.\n     */\n\n  }, {\n    key: \"unbindElementsFromMarkerName\",\n    value: function unbindElementsFromMarkerName(name) {\n      this._markerNameToElements[\"delete\"](name);\n    }\n    /**\n     * Removes all model to view and view to model bindings.\n     */\n\n  }, {\n    key: \"clearBindings\",\n    value: function clearBindings() {\n      this._modelToViewMapping = new WeakMap();\n      this._viewToModelMapping = new WeakMap();\n      this._markerNameToElements = new Map();\n    }\n    /**\n     * Gets the corresponding model element.\n     *\n     * **Note:** {@link module:engine/view/uielement~UIElement} does not have corresponding element in model.\n     *\n     * @param {module:engine/view/element~Element} viewElement View element.\n     * @returns {module:engine/model/element~Element|undefined} Corresponding model element or `undefined` if not found.\n     */\n\n  }, {\n    key: \"toModelElement\",\n    value: function toModelElement(viewElement) {\n      return this._viewToModelMapping.get(viewElement);\n    }\n    /**\n     * Gets the corresponding view element.\n     *\n     * @param {module:engine/model/element~Element} modelElement Model element.\n     * @returns {module:engine/view/element~Element|undefined} Corresponding view element or `undefined` if not found.\n     */\n\n  }, {\n    key: \"toViewElement\",\n    value: function toViewElement(modelElement) {\n      return this._modelToViewMapping.get(modelElement);\n    }\n    /**\n     * Gets the corresponding model range.\n     *\n     * @param {module:engine/view/range~Range} viewRange View range.\n     * @returns {module:engine/model/range~Range} Corresponding model range.\n     */\n\n  }, {\n    key: \"toModelRange\",\n    value: function toModelRange(viewRange) {\n      return new ModelRange(this.toModelPosition(viewRange.start), this.toModelPosition(viewRange.end));\n    }\n    /**\n     * Gets the corresponding view range.\n     *\n     * @param {module:engine/model/range~Range} modelRange Model range.\n     * @returns {module:engine/view/range~Range} Corresponding view range.\n     */\n\n  }, {\n    key: \"toViewRange\",\n    value: function toViewRange(modelRange) {\n      return new ViewRange(this.toViewPosition(modelRange.start), this.toViewPosition(modelRange.end));\n    }\n    /**\n     * Gets the corresponding model position.\n     *\n     * @fires viewToModelPosition\n     * @param {module:engine/view/position~Position} viewPosition View position.\n     * @returns {module:engine/model/position~Position} Corresponding model position.\n     */\n\n  }, {\n    key: \"toModelPosition\",\n    value: function toModelPosition(viewPosition) {\n      var data = {\n        viewPosition: viewPosition,\n        mapper: this\n      };\n      this.fire('viewToModelPosition', data);\n      return data.modelPosition;\n    }\n    /**\n     * Gets the corresponding view position.\n     *\n     * @fires modelToViewPosition\n     * @param {module:engine/model/position~Position} modelPosition Model position.\n     * @param {Object} [options] Additional options for position mapping process.\n     * @param {Boolean} [options.isPhantom=false] Should be set to `true` if the model position to map is pointing to a place\n     * in model tree which no longer exists. For example, it could be an end of a removed model range.\n     * @returns {module:engine/view/position~Position} Corresponding view position.\n     */\n\n  }, {\n    key: \"toViewPosition\",\n    value: function toViewPosition(modelPosition) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        isPhantom: false\n      };\n      var data = {\n        modelPosition: modelPosition,\n        mapper: this,\n        isPhantom: options.isPhantom\n      };\n      this.fire('modelToViewPosition', data);\n      return data.viewPosition;\n    }\n    /**\n     * Gets all view elements bound to the given marker name.\n     *\n     * @param {String} name Marker name.\n     * @returns {Set.<module:engine/view/element~Element>|null} View elements bound with given marker name or `null`\n     * if no elements are bound to given marker name.\n     */\n\n  }, {\n    key: \"markerNameToElements\",\n    value: function markerNameToElements(name) {\n      var boundElements = this._markerNameToElements.get(name);\n\n      if (!boundElements) {\n        return null;\n      }\n\n      var elements = new Set();\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = boundElements[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var element = _step.value;\n\n          if (element.is('attributeElement')) {\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n              for (var _iterator2 = element.getElementsWithSameId()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                var clone = _step2.value;\n                elements.add(clone);\n              }\n            } catch (err) {\n              _didIteratorError2 = true;\n              _iteratorError2 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n                  _iterator2[\"return\"]();\n                }\n              } finally {\n                if (_didIteratorError2) {\n                  throw _iteratorError2;\n                }\n              }\n            }\n          } else {\n            elements.add(element);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return elements;\n    }\n    /**\n     * Registers a callback that evaluates the length in the model of a view element with given name.\n     *\n     * The callback is fired with one argument, which is a view element instance. The callback is expected to return\n     * a number representing the length of view element in model.\n     *\n     *\t\t// List item in view may contain nested list, which have other list items. In model though,\n     *\t\t// the lists are represented by flat structure. Because of those differences, length of list view element\n     *\t\t// may be greater than one. In the callback it's checked how many nested list items are in evaluated list item.\n     *\n     *\t\tfunction getViewListItemLength( element ) {\n     *\t\t\tlet length = 1;\n     *\n     *\t\t\tfor ( let child of element.getChildren() ) {\n     *\t\t\t\tif ( child.name == 'ul' || child.name == 'ol' ) {\n     *\t\t\t\t\tfor ( let item of child.getChildren() ) {\n     *\t\t\t\t\t\tlength += getViewListItemLength( item );\n     *\t\t\t\t\t}\n     *\t\t\t\t}\n     *\t\t\t}\n     *\n     *\t\t\treturn length;\n     *\t\t}\n     *\n     *\t\tmapper.registerViewToModelLength( 'li', getViewListItemLength );\n     *\n     * @param {String} viewElementName Name of view element for which callback is registered.\n     * @param {Function} lengthCallback Function return a length of view element instance in model.\n     */\n\n  }, {\n    key: \"registerViewToModelLength\",\n    value: function registerViewToModelLength(viewElementName, lengthCallback) {\n      this._viewToModelLengthCallbacks.set(viewElementName, lengthCallback);\n    }\n    /**\n     * For given `viewPosition`, finds and returns the closest ancestor of this position that has a mapping to\n     * the model.\n     *\n     * @param {module:engine/view/position~Position} viewPosition Position for which mapped ancestor should be found.\n     * @returns {module:engine/view/element~Element}\n     */\n\n  }, {\n    key: \"findMappedViewAncestor\",\n    value: function findMappedViewAncestor(viewPosition) {\n      var parent = viewPosition.parent;\n\n      while (!this._viewToModelMapping.has(parent)) {\n        parent = parent.parent;\n      }\n\n      return parent;\n    }\n    /**\n     * Calculates model offset based on the view position and the block element.\n     *\n     * Example:\n     *\n     *\t\t<p>foo<b>ba|r</b></p> // _toModelOffset( b, 2, p ) -> 5\n     *\n     * Is a sum of:\n     *\n     *\t\t<p>foo|<b>bar</b></p> // _toModelOffset( p, 3, p ) -> 3\n     *\t\t<p>foo<b>ba|r</b></p> // _toModelOffset( b, 2, b ) -> 2\n     *\n     * @private\n     * @param {module:engine/view/element~Element} viewParent Position parent.\n     * @param {Number} viewOffset Position offset.\n     * @param {module:engine/view/element~Element} viewBlock Block used as a base to calculate offset.\n     * @returns {Number} Offset in the model.\n     */\n\n  }, {\n    key: \"_toModelOffset\",\n    value: function _toModelOffset(viewParent, viewOffset, viewBlock) {\n      if (viewBlock != viewParent) {\n        // See example.\n        var offsetToParentStart = this._toModelOffset(viewParent.parent, viewParent.index, viewBlock);\n\n        var offsetInParent = this._toModelOffset(viewParent, viewOffset, viewParent);\n\n        return offsetToParentStart + offsetInParent;\n      } // viewBlock == viewParent, so we need to calculate the offset in the parent element.\n      // If the position is a text it is simple (\"ba|r\" -> 2).\n\n\n      if (viewParent.is('text')) {\n        return viewOffset;\n      } // If the position is in an element we need to sum lengths of siblings ( <b> bar </b> foo | -> 3 + 3 = 6 ).\n\n\n      var modelOffset = 0;\n\n      for (var i = 0; i < viewOffset; i++) {\n        modelOffset += this.getModelLength(viewParent.getChild(i));\n      }\n\n      return modelOffset;\n    }\n    /**\n     * Gets the length of the view element in the model.\n     *\n     * The length is calculated as follows:\n     * * if {@link #registerViewToModelLength length mapping callback} is provided for given `viewNode` it is used to\n     * evaluate model length (`viewNode` is used as first and only parameter passed to the callback),\n     * * length of a {@link module:engine/view/text~Text text node} is equal to the length of it's\n     * {@link module:engine/view/text~Text#data data},\n     * * length of a {@link module:engine/view/uielement~UIElement ui element} is equal to 0,\n     * * length of a mapped {@link module:engine/view/element~Element element} is equal to 1,\n     * * length of a not-mapped {@link module:engine/view/element~Element element} is equal to the length of it's children.\n     *\n     * Examples:\n     *\n     *\t\tfoo                          -> 3 // Text length is equal to it's data length.\n     *\t\t<p>foo</p>                   -> 1 // Length of an element which is mapped is by default equal to 1.\n     *\t\t<b>foo</b>                   -> 3 // Length of an element which is not mapped is a length of its children.\n     *\t\t<div><p>x</p><p>y</p></div>  -> 2 // Assuming that <div> is not mapped and <p> are mapped.\n     *\n     * @param {module:engine/view/element~Element} viewNode View node.\n     * @returns {Number} Length of the node in the tree model.\n     */\n\n  }, {\n    key: \"getModelLength\",\n    value: function getModelLength(viewNode) {\n      if (this._viewToModelLengthCallbacks.get(viewNode.name)) {\n        var callback = this._viewToModelLengthCallbacks.get(viewNode.name);\n\n        return callback(viewNode);\n      } else if (this._viewToModelMapping.has(viewNode)) {\n        return 1;\n      } else if (viewNode.is('text')) {\n        return viewNode.data.length;\n      } else if (viewNode.is('uiElement')) {\n        return 0;\n      } else {\n        var len = 0;\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n          for (var _iterator3 = viewNode.getChildren()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n            var child = _step3.value;\n            len += this.getModelLength(child);\n          }\n        } catch (err) {\n          _didIteratorError3 = true;\n          _iteratorError3 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n              _iterator3[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError3) {\n              throw _iteratorError3;\n            }\n          }\n        }\n\n        return len;\n      }\n    }\n    /**\n     * Finds the position in the view node (or its children) with the expected model offset.\n     *\n     * Example:\n     *\n     *\t\t<p>fo<b>bar</b>bom</p> -> expected offset: 4\n     *\n     *\t\t_findPositionIn( p, 4 ):\n     *\t\t<p>|fo<b>bar</b>bom</p> -> expected offset: 4, actual offset: 0\n     *\t\t<p>fo|<b>bar</b>bom</p> -> expected offset: 4, actual offset: 2\n     *\t\t<p>fo<b>bar</b>|bom</p> -> expected offset: 4, actual offset: 5 -> we are too far\n     *\n     *\t\t_findPositionIn( b, 4 - ( 5 - 3 ) ):\n     *\t\t<p>fo<b>|bar</b>bom</p> -> expected offset: 2, actual offset: 0\n     *\t\t<p>fo<b>bar|</b>bom</p> -> expected offset: 2, actual offset: 3 -> we are too far\n     *\n     *\t\t_findPositionIn( bar, 2 - ( 3 - 3 ) ):\n     *\t\tWe are in the text node so we can simple find the offset.\n     *\t\t<p>fo<b>ba|r</b>bom</p> -> expected offset: 2, actual offset: 2 -> position found\n     *\n     * @private\n     * @param {module:engine/view/element~Element} viewParent Tree view element in which we are looking for the position.\n     * @param {Number} expectedOffset Expected offset.\n     * @returns {module:engine/view/position~Position} Found position.\n     */\n\n  }, {\n    key: \"_findPositionIn\",\n    value: function _findPositionIn(viewParent, expectedOffset) {\n      // Last scanned view node.\n      var viewNode; // Length of the last scanned view node.\n\n      var lastLength = 0;\n      var modelOffset = 0;\n      var viewOffset = 0; // In the text node it is simple: offset in the model equals offset in the text.\n\n      if (viewParent.is('text')) {\n        return new ViewPosition(viewParent, expectedOffset);\n      } // In other cases we add lengths of child nodes to find the proper offset.\n      // If it is smaller we add the length.\n\n\n      while (modelOffset < expectedOffset) {\n        viewNode = viewParent.getChild(viewOffset);\n        lastLength = this.getModelLength(viewNode);\n        modelOffset += lastLength;\n        viewOffset++;\n      } // If it equals we found the position.\n\n\n      if (modelOffset == expectedOffset) {\n        return this._moveViewPositionToTextNode(new ViewPosition(viewParent, viewOffset));\n      } // If it is higher we need to enter last child.\n      else {\n          // ( modelOffset - lastLength ) is the offset to the child we enter,\n          // so we subtract it from the expected offset to fine the offset in the child.\n          return this._findPositionIn(viewNode, expectedOffset - (modelOffset - lastLength));\n        }\n    }\n    /**\n     * Because we prefer positions in text nodes over positions next to text node moves view position to the text node\n     * if it was next to it.\n     *\n     *\t\t<p>[]<b>foo</b></p> -> <p>[]<b>foo</b></p> // do not touch if position is not directly next to text\n     *\t\t<p>foo[]<b>foo</b></p> -> <p>foo{}<b>foo</b></p> // move to text node\n     *\t\t<p><b>[]foo</b></p> -> <p><b>{}foo</b></p> // move to text node\n     *\n     * @private\n     * @param {module:engine/view/position~Position} viewPosition Position potentially next to text node.\n     * @returns {module:engine/view/position~Position} Position in text node if possible.\n     */\n\n  }, {\n    key: \"_moveViewPositionToTextNode\",\n    value: function _moveViewPositionToTextNode(viewPosition) {\n      // If the position is just after text node, put it at the end of that text node.\n      // If the position is just before text node, put it at the beginning of that text node.\n      var nodeBefore = viewPosition.nodeBefore;\n      var nodeAfter = viewPosition.nodeAfter;\n\n      if (nodeBefore instanceof ViewText) {\n        return new ViewPosition(nodeBefore, nodeBefore.data.length);\n      } else if (nodeAfter instanceof ViewText) {\n        return new ViewPosition(nodeAfter, 0);\n      } // Otherwise, just return the given position.\n\n\n      return viewPosition;\n    }\n    /**\n     * Fired for each model-to-view position mapping request. The purpose of this event is to enable custom model-to-view position\n     * mapping. Callbacks added to this event take {@link module:engine/model/position~Position model position} and are expected to\n     * calculate {@link module:engine/view/position~Position view position}. Calculated view position should be added as `viewPosition`\n     * value in `data` object that is passed as one of parameters to the event callback.\n     *\n     * \t\t// Assume that \"captionedImage\" model element is converted to <img> and following <span> elements in view,\n     * \t\t// and the model element is bound to <img> element. Force mapping model positions inside \"captionedImage\" to that\n     * \t\t// <span> element.\n     *\t\tmapper.on( 'modelToViewPosition', ( evt, data ) => {\n     *\t\t\tconst positionParent = modelPosition.parent;\n     *\n     *\t\t\tif ( positionParent.name == 'captionedImage' ) {\n     *\t\t\t\tconst viewImg = data.mapper.toViewElement( positionParent );\n     *\t\t\t\tconst viewCaption = viewImg.nextSibling; // The <span> element.\n     *\n     *\t\t\t\tdata.viewPosition = new ViewPosition( viewCaption, modelPosition.offset );\n     *\n     *\t\t\t\t// Stop the event if other callbacks should not modify calculated value.\n     *\t\t\t\tevt.stop();\n     *\t\t\t}\n     *\t\t} );\n     *\n     * **Note:** keep in mind that sometimes a \"phantom\" model position is being converted. \"Phantom\" model position is\n     * a position that points to a non-existing place in model. Such position might still be valid for conversion, though\n     * (it would point to a correct place in view when converted). One example of such situation is when a range is\n     * removed from model, there may be a need to map the range's end (which is no longer valid model position). To\n     * handle such situation, check `data.isPhantom` flag:\n     *\n     * \t\t// Assume that there is \"customElement\" model element and whenever position is before it, we want to move it\n     * \t\t// to the inside of the view element bound to \"customElement\".\n     *\t\tmapper.on( 'modelToViewPosition', ( evt, data ) => {\n     *\t\t\tif ( data.isPhantom ) {\n     *\t\t\t\treturn;\n     *\t\t\t}\n     *\n     *\t\t\t// Below line might crash for phantom position that does not exist in model.\n     *\t\t\tconst sibling = data.modelPosition.nodeBefore;\n     *\n     *\t\t\t// Check if this is the element we are interested in.\n     *\t\t\tif ( !sibling.is( 'customElement' ) ) {\n     *\t\t\t\treturn;\n     *\t\t\t}\n     *\n     *\t\t\tconst viewElement = data.mapper.toViewElement( sibling );\n     *\n     *\t\t\tdata.viewPosition = new ViewPosition( sibling, 0 );\n     *\n     *\t\t\tevt.stop();\n     *\t\t} );\n     *\n     * **Note:** default mapping callback is provided with `low` priority setting and does not cancel the event, so it is possible to\n     * attach a custom callback after default callback and also use `data.viewPosition` calculated by default callback\n     * (for example to fix it).\n     *\n     * **Note:** default mapping callback will not fire if `data.viewPosition` is already set.\n     *\n     * **Note:** these callbacks are called **very often**. For efficiency reasons, it is advised to use them only when position\n     * mapping between given model and view elements is unsolvable using just elements mapping and default algorithm. Also,\n     * the condition that checks if special case scenario happened should be as simple as possible.\n     *\n     * @event modelToViewPosition\n     * @param {Object} data Data pipeline object that can store and pass data between callbacks. The callback should add\n     * `viewPosition` value to that object with calculated {@link module:engine/view/position~Position view position}.\n     * @param {module:engine/conversion/mapper~Mapper} data.mapper Mapper instance that fired the event.\n     */\n\n    /**\n     * Fired for each view-to-model position mapping request. See {@link module:engine/conversion/mapper~Mapper#event:modelToViewPosition}.\n     *\n     * \t\t// See example in `modelToViewPosition` event description.\n     * \t\t// This custom mapping will map positions from <span> element next to <img> to the \"captionedImage\" element.\n     *\t\tmapper.on( 'viewToModelPosition', ( evt, data ) => {\n     *\t\t\tconst positionParent = viewPosition.parent;\n     *\n     *\t\t\tif ( positionParent.hasClass( 'image-caption' ) ) {\n     *\t\t\t\tconst viewImg = positionParent.previousSibling;\n     *\t\t\t\tconst modelImg = data.mapper.toModelElement( viewImg );\n     *\n     *\t\t\t\tdata.modelPosition = new ModelPosition( modelImg, viewPosition.offset );\n     *\t\t\t\tevt.stop();\n     *\t\t\t}\n     *\t\t} );\n     *\n     * **Note:** default mapping callback is provided with `low` priority setting and does not cancel the event, so it is possible to\n     * attach a custom callback after default callback and also use `data.modelPosition` calculated by default callback\n     * (for example to fix it).\n     *\n     * **Note:** default mapping callback will not fire if `data.modelPosition` is already set.\n     *\n     * **Note:** these callbacks are called **very often**. For efficiency reasons, it is advised to use them only when position\n     * mapping between given model and view elements is unsolvable using just elements mapping and default algorithm. Also,\n     * the condition that checks if special case scenario happened should be as simple as possible.\n     *\n     * @event viewToModelPosition\n     * @param {Object} data Data pipeline object that can store and pass data between callbacks. The callback should add\n     * `modelPosition` value to that object with calculated {@link module:engine/model/position~Position model position}.\n     * @param {module:engine/conversion/mapper~Mapper} data.mapper Mapper instance that fired the event.\n     */\n\n  }]);\n\n  return Mapper;\n}();\n\nexport { Mapper as default };\nmix(Mapper, EmitterMixin);","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/conversion/modelconsumable\n */\nimport TextProxy from '../model/textproxy';\n/**\n * Manages a list of consumable values for {@link module:engine/model/item~Item model items}.\n *\n * Consumables are various aspects of the model. A model item can be broken down into singular properties that might be\n * taken into consideration when converting that item.\n *\n * `ModelConsumable` is used by {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher} while analyzing changed\n * parts of {@link module:engine/model/document~Document the document}. The added / changed / removed model items are broken down\n * into singular properties (the item itself and it's attributes). All those parts are saved in `ModelConsumable`. Then,\n * during conversion, when given part of model item is converted (i.e. the view element has been inserted into the view,\n * but without attributes), consumable value is removed from `ModelConsumable`.\n *\n * For model items, `ModelConsumable` stores consumable values of one of following types: `insert`, `addattribute:<attributeKey>`,\n * `changeattributes:<attributeKey>`, `removeattributes:<attributeKey>`.\n *\n * In most cases, it is enough to let {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}\n * gather consumable values, so there is no need to use\n * {@link module:engine/conversion/modelconsumable~ModelConsumable#add add method} directly.\n * However, it is important to understand how consumable values can be\n * {@link module:engine/conversion/modelconsumable~ModelConsumable#consume consumed}.\n * See {@link module:engine/conversion/downcasthelpers default downcast converters} for more information.\n *\n * Keep in mind, that one conversion event may have multiple callbacks (converters) attached to it. Each of those is\n * able to convert one or more parts of the model. However, when one of those callbacks actually converts\n * something, other should not, because they would duplicate the results. Using `ModelConsumable` helps avoiding\n * this situation, because callbacks should only convert those values, which were not yet consumed from `ModelConsumable`.\n *\n * Consuming multiple values in a single callback:\n *\n *\t\t// Converter for custom `image` element that might have a `caption` element inside which changes\n *\t\t// how the image is displayed in the view:\n *\t\t//\n *\t\t// Model:\n *\t\t//\n *\t\t// [image]\n *\t\t//   └─ [caption]\n *\t\t//       └─ foo\n *\t\t//\n *\t\t// View:\n *\t\t//\n *\t\t// <figure>\n *\t\t//   ├─ <img />\n *\t\t//   └─ <caption>\n *\t\t//       └─ foo\n *\t\tmodelConversionDispatcher.on( 'insert:image', ( evt, data, conversionApi ) => {\n *\t\t\t// First, consume the `image` element.\n *\t\t\tconversionApi.consumable.consume( data.item, 'insert' );\n *\n *\t\t\t// Just create normal image element for the view.\n *\t\t\t// Maybe it will be \"decorated\" later.\n *\t\t\tconst viewImage = new ViewElement( 'img' );\n *\t\t\tconst insertPosition = conversionApi.mapper.toViewPosition( data.range.start );\n *\t\t\tconst viewWriter = conversionApi.writer;\n *\n *\t\t\t// Check if the `image` element has children.\n *\t\t\tif ( data.item.childCount > 0 ) {\n *\t\t\t\tconst modelCaption = data.item.getChild( 0 );\n *\n *\t\t\t\t// `modelCaption` insertion change is consumed from consumable values.\n *\t\t\t\t// It will not be converted by other converters, but it's children (probably some text) will be.\n *\t\t\t\t// Through mapping, converters for text will know where to insert contents of `modelCaption`.\n *\t\t\t\tif ( conversionApi.consumable.consume( modelCaption, 'insert' ) ) {\n *\t\t\t\t\tconst viewCaption = new ViewElement( 'figcaption' );\n *\n *\t\t\t\t\tconst viewImageHolder = new ViewElement( 'figure', null, [ viewImage, viewCaption ] );\n *\n *\t\t\t\t\tconversionApi.mapper.bindElements( modelCaption, viewCaption );\n *\t\t\t\t\tconversionApi.mapper.bindElements( data.item, viewImageHolder );\n *\t\t\t\t\tviewWriter.insert( insertPosition, viewImageHolder );\n *\t\t\t\t}\n *\t\t\t} else {\n *\t\t\t\tconversionApi.mapper.bindElements( data.item, viewImage );\n *\t\t\t\tviewWriter.insert( insertPosition, viewImage );\n *\t\t\t}\n *\n *\t\t\tevt.stop();\n *\t\t} );\n */\n\nvar ModelConsumable =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an empty consumables list.\n   */\n  function ModelConsumable() {\n    _classCallCheck(this, ModelConsumable);\n\n    /**\n     * Contains list of consumable values.\n     *\n     * @private\n     * @member {Map} module:engine/conversion/modelconsumable~ModelConsumable#_consumable\n     */\n    this._consumable = new Map();\n    /**\n     * For each {@link module:engine/model/textproxy~TextProxy} added to `ModelConsumable`, this registry holds parent\n     * of that `TextProxy` and start and end indices of that `TextProxy`. This allows identification of `TextProxy`\n     * instances that points to the same part of the model but are different instances. Each distinct `TextProxy`\n     * is given unique `Symbol` which is then registered as consumable. This process is transparent for `ModelConsumable`\n     * API user because whenever `TextProxy` is added, tested, consumed or reverted, internal mechanisms of\n     * `ModelConsumable` translates `TextProxy` to that unique `Symbol`.\n     *\n     * @private\n     * @member {Map} module:engine/conversion/modelconsumable~ModelConsumable#_textProxyRegistry\n     */\n\n    this._textProxyRegistry = new Map();\n  }\n  /**\n   * Adds a consumable value to the consumables list and links it with given model item.\n   *\n   *\t\tmodelConsumable.add( modelElement, 'insert' ); // Add `modelElement` insertion change to consumable values.\n   *\t\tmodelConsumable.add( modelElement, 'addAttribute:bold' ); // Add `bold` attribute insertion on `modelElement` change.\n   *\t\tmodelConsumable.add( modelElement, 'removeAttribute:bold' ); // Add `bold` attribute removal on `modelElement` change.\n   *\t\tmodelConsumable.add( modelSelection, 'selection' ); // Add `modelSelection` to consumable values.\n   *\t\tmodelConsumable.add( modelRange, 'range' ); // Add `modelRange` to consumable values.\n   *\n   * @param {module:engine/model/item~Item|module:engine/model/selection~Selection|module:engine/model/range~Range} item\n   * Model item, range or selection that has the consumable.\n   * @param {String} type Consumable type. Will be normalized to a proper form, that is either `<word>` or `<part>:<part>`.\n   * Second colon and everything after will be cut. Passing event name is a safe and good practice.\n   */\n\n\n  _createClass(ModelConsumable, [{\n    key: \"add\",\n    value: function add(item, type) {\n      type = _normalizeConsumableType(type);\n\n      if (item instanceof TextProxy) {\n        item = this._getSymbolForTextProxy(item);\n      }\n\n      if (!this._consumable.has(item)) {\n        this._consumable.set(item, new Map());\n      }\n\n      this._consumable.get(item).set(type, true);\n    }\n    /**\n     * Removes given consumable value from given model item.\n     *\n     *\t\tmodelConsumable.consume( modelElement, 'insert' ); // Remove `modelElement` insertion change from consumable values.\n     *\t\tmodelConsumable.consume( modelElement, 'addAttribute:bold' ); // Remove `bold` attribute insertion on `modelElement` change.\n     *\t\tmodelConsumable.consume( modelElement, 'removeAttribute:bold' ); // Remove `bold` attribute removal on `modelElement` change.\n     *\t\tmodelConsumable.consume( modelSelection, 'selection' ); // Remove `modelSelection` from consumable values.\n     *\t\tmodelConsumable.consume( modelRange, 'range' ); // Remove 'modelRange' from consumable values.\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/selection~Selection|module:engine/model/range~Range} item\n     * Model item, range or selection from which consumable will be consumed.\n     * @param {String} type Consumable type. Will be normalized to a proper form, that is either `<word>` or `<part>:<part>`.\n     * Second colon and everything after will be cut. Passing event name is a safe and good practice.\n     * @returns {Boolean} `true` if consumable value was available and was consumed, `false` otherwise.\n     */\n\n  }, {\n    key: \"consume\",\n    value: function consume(item, type) {\n      type = _normalizeConsumableType(type);\n\n      if (item instanceof TextProxy) {\n        item = this._getSymbolForTextProxy(item);\n      }\n\n      if (this.test(item, type)) {\n        this._consumable.get(item).set(type, false);\n\n        return true;\n      } else {\n        return false;\n      }\n    }\n    /**\n     * Tests whether there is a consumable value of given type connected with given model item.\n     *\n     *\t\tmodelConsumable.test( modelElement, 'insert' ); // Check for `modelElement` insertion change.\n     *\t\tmodelConsumable.test( modelElement, 'addAttribute:bold' ); // Check for `bold` attribute insertion on `modelElement` change.\n     *\t\tmodelConsumable.test( modelElement, 'removeAttribute:bold' ); // Check for `bold` attribute removal on `modelElement` change.\n     *\t\tmodelConsumable.test( modelSelection, 'selection' ); // Check if `modelSelection` is consumable.\n     *\t\tmodelConsumable.test( modelRange, 'range' ); // Check if `modelRange` is consumable.\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/selection~Selection|module:engine/model/range~Range} item\n     * Model item, range or selection to be tested.\n     * @param {String} type Consumable type. Will be normalized to a proper form, that is either `<word>` or `<part>:<part>`.\n     * Second colon and everything after will be cut. Passing event name is a safe and good practice.\n     * @returns {null|Boolean} `null` if such consumable was never added, `false` if the consumable values was\n     * already consumed or `true` if it was added and not consumed yet.\n     */\n\n  }, {\n    key: \"test\",\n    value: function test(item, type) {\n      type = _normalizeConsumableType(type);\n\n      if (item instanceof TextProxy) {\n        item = this._getSymbolForTextProxy(item);\n      }\n\n      var itemConsumables = this._consumable.get(item);\n\n      if (itemConsumables === undefined) {\n        return null;\n      }\n\n      var value = itemConsumables.get(type);\n\n      if (value === undefined) {\n        return null;\n      }\n\n      return value;\n    }\n    /**\n     * Reverts consuming of consumable value.\n     *\n     *\t\tmodelConsumable.revert( modelElement, 'insert' ); // Revert consuming `modelElement` insertion change.\n     *\t\tmodelConsumable.revert( modelElement, 'addAttribute:bold' ); // Revert consuming `bold` attribute insert from `modelElement`.\n     *\t\tmodelConsumable.revert( modelElement, 'removeAttribute:bold' ); // Revert consuming `bold` attribute remove from `modelElement`.\n     *\t\tmodelConsumable.revert( modelSelection, 'selection' ); // Revert consuming `modelSelection`.\n     *\t\tmodelConsumable.revert( modelRange, 'range' ); // Revert consuming `modelRange`.\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/selection~Selection|module:engine/model/range~Range} item\n     * Model item, range or selection to be reverted.\n     * @param {String} type Consumable type.\n     * @returns {null|Boolean} `true` if consumable has been reversed, `false` otherwise. `null` if the consumable has\n     * never been added.\n     */\n\n  }, {\n    key: \"revert\",\n    value: function revert(item, type) {\n      type = _normalizeConsumableType(type);\n\n      if (item instanceof TextProxy) {\n        item = this._getSymbolForTextProxy(item);\n      }\n\n      var test = this.test(item, type);\n\n      if (test === false) {\n        this._consumable.get(item).set(type, true);\n\n        return true;\n      } else if (test === true) {\n        return false;\n      }\n\n      return null;\n    }\n    /**\n     * Gets a unique symbol for passed {@link module:engine/model/textproxy~TextProxy} instance. All `TextProxy` instances that\n     * have same parent, same start index and same end index will get the same symbol.\n     *\n     * Used internally to correctly consume `TextProxy` instances.\n     *\n     * @private\n     * @param {module:engine/model/textproxy~TextProxy} textProxy `TextProxy` instance to get a symbol for.\n     * @returns {Symbol} Symbol representing all equal instances of `TextProxy`.\n     */\n\n  }, {\n    key: \"_getSymbolForTextProxy\",\n    value: function _getSymbolForTextProxy(textProxy) {\n      var symbol = null;\n\n      var startMap = this._textProxyRegistry.get(textProxy.startOffset);\n\n      if (startMap) {\n        var endMap = startMap.get(textProxy.endOffset);\n\n        if (endMap) {\n          symbol = endMap.get(textProxy.parent);\n        }\n      }\n\n      if (!symbol) {\n        symbol = this._addSymbolForTextProxy(textProxy.startOffset, textProxy.endOffset, textProxy.parent);\n      }\n\n      return symbol;\n    }\n    /**\n     * Adds a symbol for given properties that characterizes a {@link module:engine/model/textproxy~TextProxy} instance.\n     *\n     * Used internally to correctly consume `TextProxy` instances.\n     *\n     * @private\n     * @param {Number} startIndex Text proxy start index in it's parent.\n     * @param {Number} endIndex Text proxy end index in it's parent.\n     * @param {module:engine/model/element~Element} parent Text proxy parent.\n     * @returns {Symbol} Symbol generated for given properties.\n     */\n\n  }, {\n    key: \"_addSymbolForTextProxy\",\n    value: function _addSymbolForTextProxy(start, end, parent) {\n      var symbol = Symbol('textProxySymbol');\n      var startMap, endMap;\n      startMap = this._textProxyRegistry.get(start);\n\n      if (!startMap) {\n        startMap = new Map();\n\n        this._textProxyRegistry.set(start, startMap);\n      }\n\n      endMap = startMap.get(end);\n\n      if (!endMap) {\n        endMap = new Map();\n        startMap.set(end, endMap);\n      }\n\n      endMap.set(parent, symbol);\n      return symbol;\n    }\n  }]);\n\n  return ModelConsumable;\n}(); // Returns a normalized consumable type name from given string. A normalized consumable type name is a string that has\n// at most one colon, for example: `insert` or `addMarker:highlight`. If string to normalize has more \"parts\" (more colons),\n// the other parts are dropped, for example: `addattribute:bold:$text` -> `addattributes:bold`.\n//\n// @param {String} type Consumable type.\n// @returns {String} Normalized consumable type.\n\n\nexport { ModelConsumable as default };\n\nfunction _normalizeConsumableType(type) {\n  var parts = type.split(':');\n  return parts.length > 1 ? parts[0] + ':' + parts[1] : parts[0];\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/conversion/downcastdispatcher\n */\nimport Consumable from './modelconsumable';\nimport Range from '../model/range';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport { extend } from 'lodash-es';\n/**\n * `DowncastDispatcher` is a central point of downcasting (conversion from model to view), which is a process of reacting to changes\n * in the model and firing a set of events. Callbacks listening to those events are called converters. Those\n * converters role is to convert the model changes to changes in view (for example, adding view nodes or\n * changing attributes on view elements).\n *\n * During conversion process, `DowncastDispatcher` fires events, basing on state of the model and prepares\n * data for those events. It is important to understand that those events are connected with changes done on model,\n * for example: \"node has been inserted\" or \"attribute has changed\". This is in a contrary to upcasting (view to model conversion),\n * where we convert view state (view nodes) to a model tree.\n *\n * The events are prepared basing on a diff created by {@link module:engine/model/differ~Differ Differ}, which buffers them\n * and then passes to `DowncastDispatcher` as a diff between old model state and new model state.\n *\n * Note, that because changes are converted there is a need to have a mapping between model structure and view structure.\n * To map positions and elements during downcast (model to view conversion) use {@link module:engine/conversion/mapper~Mapper}.\n *\n * `DowncastDispatcher` fires following events for model tree changes:\n *\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:insert insert}\n * if a range of nodes has been inserted to the model tree,\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:remove remove}\n * if a range of nodes has been removed from the model tree,\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:attribute attribute}\n * if attribute has been added, changed or removed from a model node.\n *\n * For {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:insert insert}\n * and {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:attribute attribute},\n * `DowncastDispatcher` generates {@link module:engine/conversion/modelconsumable~ModelConsumable consumables}.\n * These are used to have a control over which changes has been already consumed. It is useful when some converters\n * overwrite other or converts multiple changes (for example converts insertion of an element and also converts that\n * element's attributes during insertion).\n *\n * Additionally, `DowncastDispatcher` fires events for {@link module:engine/model/markercollection~Marker marker} changes:\n *\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:addMarker} if a marker has been added,\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:removeMarker} if a marker has been removed.\n *\n * Note, that changing a marker is done through removing the marker from the old range, and adding on the new range,\n * so both those events are fired.\n *\n * Finally, `DowncastDispatcher` also handles firing events for {@link module:engine/model/selection model selection}\n * conversion:\n *\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:selection}\n * which converts selection from model to view,\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:attribute}\n * which is fired for every selection attribute,\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:addMarker}\n * which is fired for every marker which contains selection.\n *\n * Unlike model tree and markers, events for selection are not fired for changes but for selection state.\n *\n * When providing custom listeners for `DowncastDispatcher` remember to check whether given change has not been\n * {@link module:engine/conversion/modelconsumable~ModelConsumable#consume consumed} yet.\n *\n * When providing custom listeners for `DowncastDispatcher` keep in mind that any callback that had\n * {@link module:engine/conversion/modelconsumable~ModelConsumable#consume consumed} a value from a consumable and\n * converted the change should also stop the event (for efficiency purposes).\n *\n * When providing custom listeners for `DowncastDispatcher` remember to use provided\n * {@link module:engine/view/downcastwriter~DowncastWriter view downcast writer} to apply changes to the view document.\n *\n * Example of a custom converter for `DowncastDispatcher`:\n *\n *\t\t// We will convert inserting \"paragraph\" model element into the model.\n *\t\tdowncastDispatcher.on( 'insert:paragraph', ( evt, data, conversionApi ) => {\n *\t\t\t// Remember to check whether the change has not been consumed yet and consume it.\n *\t\t\tif ( conversionApi.consumable.consume( data.item, 'insert' ) ) {\n *\t\t\t\treturn;\n *\t\t\t}\n *\n *\t\t\t// Translate position in model to position in view.\n *\t\t\tconst viewPosition = conversionApi.mapper.toViewPosition( data.range.start );\n *\n *\t\t\t// Create <p> element that will be inserted in view at `viewPosition`.\n *\t\t\tconst viewElement = conversionApi.writer.createContainerElement( 'p' );\n *\n *\t\t\t// Bind the newly created view element to model element so positions will map accordingly in future.\n *\t\t\tconversionApi.mapper.bindElements( data.item, viewElement );\n *\n *\t\t\t// Add the newly created view element to the view.\n *\t\t\tconversionApi.writer.insert( viewPosition, viewElement );\n *\n *\t\t\t// Remember to stop the event propagation.\n *\t\t\tevt.stop();\n *\t\t} );\n */\n\nvar DowncastDispatcher =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a `DowncastDispatcher` instance.\n   *\n   * @see module:engine/conversion/downcastdispatcher~DowncastConversionApi\n   * @param {Object} [conversionApi] Additional properties for interface that will be passed to events fired\n   * by `DowncastDispatcher`.\n   */\n  function DowncastDispatcher() {\n    var conversionApi = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, DowncastDispatcher);\n\n    /**\n     * Interface passed by dispatcher to the events callbacks.\n     *\n     * @member {module:engine/conversion/downcastdispatcher~DowncastConversionApi}\n     */\n    this.conversionApi = extend({\n      dispatcher: this\n    }, conversionApi);\n  }\n  /**\n   * Takes {@link module:engine/model/differ~Differ model differ} object with buffered changes and fires conversion basing on it.\n   *\n   * @param {module:engine/model/differ~Differ} differ Differ object with buffered changes.\n   * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\n   */\n\n\n  _createClass(DowncastDispatcher, [{\n    key: \"convertChanges\",\n    value: function convertChanges(differ, writer) {\n      // Before the view is updated, remove markers which have changed.\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = differ.getMarkersToRemove()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var change = _step.value;\n          this.convertMarkerRemove(change.name, change.range, writer);\n        } // Convert changes that happened on model tree.\n\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = differ.getChanges()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var entry = _step2.value;\n\n          if (entry.type == 'insert') {\n            this.convertInsert(Range._createFromPositionAndShift(entry.position, entry.length), writer);\n          } else if (entry.type == 'remove') {\n            this.convertRemove(entry.position, entry.length, entry.name, writer);\n          } else {\n            // entry.type == 'attribute'.\n            this.convertAttribute(entry.range, entry.attributeKey, entry.attributeOldValue, entry.attributeNewValue, writer);\n          }\n        } // After the view is updated, convert markers which have changed.\n\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = differ.getMarkersToAdd()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var _change = _step3.value;\n          this.convertMarkerAdd(_change.name, _change.range, writer);\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n            _iterator3[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n    /**\n     * Starts conversion of a range insertion.\n     *\n     * For each node in the range, {@link #event:insert insert event is fired}. For each attribute on each node,\n     * {@link #event:attribute attribute event is fired}.\n     *\n     * @fires insert\n     * @fires attribute\n     * @param {module:engine/model/range~Range} range Inserted range.\n     * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\n     */\n\n  }, {\n    key: \"convertInsert\",\n    value: function convertInsert(range, writer) {\n      this.conversionApi.writer = writer; // Create a list of things that can be consumed, consisting of nodes and their attributes.\n\n      this.conversionApi.consumable = this._createInsertConsumable(range); // Fire a separate insert event for each node and text fragment contained in the range.\n\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = range[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var value = _step4.value;\n          var item = value.item;\n\n          var itemRange = Range._createFromPositionAndShift(value.previousPosition, value.length);\n\n          var data = {\n            item: item,\n            range: itemRange\n          };\n\n          this._testAndFire('insert', data); // Fire a separate addAttribute event for each attribute that was set on inserted items.\n          // This is important because most attributes converters will listen only to add/change/removeAttribute events.\n          // If we would not add this part, attributes on inserted nodes would not be converted.\n\n\n          var _iteratorNormalCompletion5 = true;\n          var _didIteratorError5 = false;\n          var _iteratorError5 = undefined;\n\n          try {\n            for (var _iterator5 = item.getAttributeKeys()[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n              var key = _step5.value;\n              data.attributeKey = key;\n              data.attributeOldValue = null;\n              data.attributeNewValue = item.getAttribute(key);\n\n              this._testAndFire(\"attribute:\".concat(key), data);\n            }\n          } catch (err) {\n            _didIteratorError5 = true;\n            _iteratorError5 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion5 && _iterator5[\"return\"] != null) {\n                _iterator5[\"return\"]();\n              }\n            } finally {\n              if (_didIteratorError5) {\n                throw _iteratorError5;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4[\"return\"] != null) {\n            _iterator4[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      this._clearConversionApi();\n    }\n    /**\n     * Fires conversion of a single node removal. Fires {@link #event:remove remove event} with provided data.\n     *\n     * @param {module:engine/model/position~Position} position Position from which node was removed.\n     * @param {Number} length Offset size of removed node.\n     * @param {String} name Name of removed node.\n     * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\n     */\n\n  }, {\n    key: \"convertRemove\",\n    value: function convertRemove(position, length, name, writer) {\n      this.conversionApi.writer = writer;\n      this.fire('remove:' + name, {\n        position: position,\n        length: length\n      }, this.conversionApi);\n\n      this._clearConversionApi();\n    }\n    /**\n     * Starts conversion of attribute change on given `range`.\n     *\n     * For each node in the given `range`, {@link #event:attribute attribute event} is fired with the passed data.\n     *\n     * @fires attribute\n     * @param {module:engine/model/range~Range} range Changed range.\n     * @param {String} key Key of the attribute that has changed.\n     * @param {*} oldValue Attribute value before the change or `null` if the attribute has not been set before.\n     * @param {*} newValue New attribute value or `null` if the attribute has been removed.\n     * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\n     */\n\n  }, {\n    key: \"convertAttribute\",\n    value: function convertAttribute(range, key, oldValue, newValue, writer) {\n      this.conversionApi.writer = writer; // Create a list with attributes to consume.\n\n      this.conversionApi.consumable = this._createConsumableForRange(range, \"attribute:\".concat(key)); // Create a separate attribute event for each node in the range.\n\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = range[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var value = _step6.value;\n          var item = value.item;\n\n          var itemRange = Range._createFromPositionAndShift(value.previousPosition, value.length);\n\n          var data = {\n            item: item,\n            range: itemRange,\n            attributeKey: key,\n            attributeOldValue: oldValue,\n            attributeNewValue: newValue\n          };\n\n          this._testAndFire(\"attribute:\".concat(key), data);\n        }\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6[\"return\"] != null) {\n            _iterator6[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n\n      this._clearConversionApi();\n    }\n    /**\n     * Starts model selection conversion.\n     *\n     * Fires events for given {@link module:engine/model/selection~Selection selection} to start selection conversion.\n     *\n     * @fires selection\n     * @fires addMarker\n     * @fires attribute\n     * @param {module:engine/model/selection~Selection} selection Selection to convert.\n     * @param {Array.<module:engine/model/markercollection~Marker>} markers Array of markers containing model markers.\n     * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\n     */\n\n  }, {\n    key: \"convertSelection\",\n    value: function convertSelection(selection, markers, writer) {\n      var markersAtSelection = Array.from(markers.getMarkersAtPosition(selection.getFirstPosition()));\n      this.conversionApi.writer = writer;\n      this.conversionApi.consumable = this._createSelectionConsumable(selection, markersAtSelection);\n      this.fire('selection', {\n        selection: selection\n      }, this.conversionApi);\n\n      if (!selection.isCollapsed) {\n        return;\n      }\n\n      for (var _i = 0, _markersAtSelection = markersAtSelection; _i < _markersAtSelection.length; _i++) {\n        var marker = _markersAtSelection[_i];\n        var markerRange = marker.getRange();\n\n        if (!shouldMarkerChangeBeConverted(selection.getFirstPosition(), marker, this.conversionApi.mapper)) {\n          continue;\n        }\n\n        var data = {\n          item: selection,\n          markerName: marker.name,\n          markerRange: markerRange\n        };\n\n        if (this.conversionApi.consumable.test(selection, 'addMarker:' + marker.name)) {\n          this.fire('addMarker:' + marker.name, data, this.conversionApi);\n        }\n      }\n\n      var _iteratorNormalCompletion7 = true;\n      var _didIteratorError7 = false;\n      var _iteratorError7 = undefined;\n\n      try {\n        for (var _iterator7 = selection.getAttributeKeys()[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n          var key = _step7.value;\n          var _data = {\n            item: selection,\n            range: selection.getFirstRange(),\n            attributeKey: key,\n            attributeOldValue: null,\n            attributeNewValue: selection.getAttribute(key)\n          }; // Do not fire event if the attribute has been consumed.\n\n          if (this.conversionApi.consumable.test(selection, 'attribute:' + _data.attributeKey)) {\n            this.fire('attribute:' + _data.attributeKey + ':$text', _data, this.conversionApi);\n          }\n        }\n      } catch (err) {\n        _didIteratorError7 = true;\n        _iteratorError7 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion7 && _iterator7[\"return\"] != null) {\n            _iterator7[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError7) {\n            throw _iteratorError7;\n          }\n        }\n      }\n\n      this._clearConversionApi();\n    }\n    /**\n     * Converts added marker. Fires {@link #event:addMarker addMarker} event for each item\n     * in marker's range. If range is collapsed single event is dispatched. See event description for more details.\n     *\n     * @fires addMarker\n     * @param {String} markerName Marker name.\n     * @param {module:engine/model/range~Range} markerRange Marker range.\n     * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\n     */\n\n  }, {\n    key: \"convertMarkerAdd\",\n    value: function convertMarkerAdd(markerName, markerRange, writer) {\n      // Do not convert if range is in graveyard or not in the document (e.g. in DocumentFragment).\n      if (!markerRange.root.document || markerRange.root.rootName == '$graveyard') {\n        return;\n      }\n\n      this.conversionApi.writer = writer; // In markers' case, event name == consumable name.\n\n      var eventName = 'addMarker:' + markerName; //\n      // First, fire an event for the whole marker.\n      //\n\n      var consumable = new Consumable();\n      consumable.add(markerRange, eventName);\n      this.conversionApi.consumable = consumable;\n      this.fire(eventName, {\n        markerName: markerName,\n        markerRange: markerRange\n      }, this.conversionApi); //\n      // Do not fire events for each item inside the range if the range got consumed.\n      //\n\n      if (!consumable.test(markerRange, eventName)) {\n        return;\n      } //\n      // Then, fire an event for each item inside the marker range.\n      //\n\n\n      this.conversionApi.consumable = this._createConsumableForRange(markerRange, eventName);\n      var _iteratorNormalCompletion8 = true;\n      var _didIteratorError8 = false;\n      var _iteratorError8 = undefined;\n\n      try {\n        for (var _iterator8 = markerRange.getItems()[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n          var item = _step8.value;\n\n          // Do not fire event for already consumed items.\n          if (!this.conversionApi.consumable.test(item, eventName)) {\n            continue;\n          }\n\n          var data = {\n            item: item,\n            range: Range._createOn(item),\n            markerName: markerName,\n            markerRange: markerRange\n          };\n          this.fire(eventName, data, this.conversionApi);\n        }\n      } catch (err) {\n        _didIteratorError8 = true;\n        _iteratorError8 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion8 && _iterator8[\"return\"] != null) {\n            _iterator8[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError8) {\n            throw _iteratorError8;\n          }\n        }\n      }\n\n      this._clearConversionApi();\n    }\n    /**\n     * Fires conversion of marker removal. Fires {@link #event:removeMarker removeMarker} event with provided data.\n     *\n     * @fires removeMarker\n     * @param {String} markerName Marker name.\n     * @param {module:engine/model/range~Range} markerRange Marker range.\n     * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\n     */\n\n  }, {\n    key: \"convertMarkerRemove\",\n    value: function convertMarkerRemove(markerName, markerRange, writer) {\n      // Do not convert if range is in graveyard or not in the document (e.g. in DocumentFragment).\n      if (!markerRange.root.document || markerRange.root.rootName == '$graveyard') {\n        return;\n      }\n\n      this.conversionApi.writer = writer;\n      this.fire('removeMarker:' + markerName, {\n        markerName: markerName,\n        markerRange: markerRange\n      }, this.conversionApi);\n\n      this._clearConversionApi();\n    }\n    /**\n     * Creates {@link module:engine/conversion/modelconsumable~ModelConsumable} with values to consume from given range,\n     * assuming that the range has just been inserted to the model.\n     *\n     * @private\n     * @param {module:engine/model/range~Range} range Inserted range.\n     * @returns {module:engine/conversion/modelconsumable~ModelConsumable} Values to consume.\n     */\n\n  }, {\n    key: \"_createInsertConsumable\",\n    value: function _createInsertConsumable(range) {\n      var consumable = new Consumable();\n      var _iteratorNormalCompletion9 = true;\n      var _didIteratorError9 = false;\n      var _iteratorError9 = undefined;\n\n      try {\n        for (var _iterator9 = range[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n          var value = _step9.value;\n          var item = value.item;\n          consumable.add(item, 'insert');\n          var _iteratorNormalCompletion10 = true;\n          var _didIteratorError10 = false;\n          var _iteratorError10 = undefined;\n\n          try {\n            for (var _iterator10 = item.getAttributeKeys()[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n              var key = _step10.value;\n              consumable.add(item, 'attribute:' + key);\n            }\n          } catch (err) {\n            _didIteratorError10 = true;\n            _iteratorError10 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion10 && _iterator10[\"return\"] != null) {\n                _iterator10[\"return\"]();\n              }\n            } finally {\n              if (_didIteratorError10) {\n                throw _iteratorError10;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError9 = true;\n        _iteratorError9 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion9 && _iterator9[\"return\"] != null) {\n            _iterator9[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError9) {\n            throw _iteratorError9;\n          }\n        }\n      }\n\n      return consumable;\n    }\n    /**\n     * Creates {@link module:engine/conversion/modelconsumable~ModelConsumable} with values to consume for given range.\n     *\n     * @private\n     * @param {module:engine/model/range~Range} range Affected range.\n     * @param {String} type Consumable type.\n     * @returns {module:engine/conversion/modelconsumable~ModelConsumable} Values to consume.\n     */\n\n  }, {\n    key: \"_createConsumableForRange\",\n    value: function _createConsumableForRange(range, type) {\n      var consumable = new Consumable();\n      var _iteratorNormalCompletion11 = true;\n      var _didIteratorError11 = false;\n      var _iteratorError11 = undefined;\n\n      try {\n        for (var _iterator11 = range.getItems()[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n          var item = _step11.value;\n          consumable.add(item, type);\n        }\n      } catch (err) {\n        _didIteratorError11 = true;\n        _iteratorError11 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion11 && _iterator11[\"return\"] != null) {\n            _iterator11[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError11) {\n            throw _iteratorError11;\n          }\n        }\n      }\n\n      return consumable;\n    }\n    /**\n     * Creates {@link module:engine/conversion/modelconsumable~ModelConsumable} with selection consumable values.\n     *\n     * @private\n     * @param {module:engine/model/selection~Selection} selection Selection to create consumable from.\n     * @param {Iterable.<module:engine/model/markercollection~Marker>} markers Markers which contains selection.\n     * @returns {module:engine/conversion/modelconsumable~ModelConsumable} Values to consume.\n     */\n\n  }, {\n    key: \"_createSelectionConsumable\",\n    value: function _createSelectionConsumable(selection, markers) {\n      var consumable = new Consumable();\n      consumable.add(selection, 'selection');\n      var _iteratorNormalCompletion12 = true;\n      var _didIteratorError12 = false;\n      var _iteratorError12 = undefined;\n\n      try {\n        for (var _iterator12 = markers[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n          var marker = _step12.value;\n          consumable.add(selection, 'addMarker:' + marker.name);\n        }\n      } catch (err) {\n        _didIteratorError12 = true;\n        _iteratorError12 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion12 && _iterator12[\"return\"] != null) {\n            _iterator12[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError12) {\n            throw _iteratorError12;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion13 = true;\n      var _didIteratorError13 = false;\n      var _iteratorError13 = undefined;\n\n      try {\n        for (var _iterator13 = selection.getAttributeKeys()[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n          var key = _step13.value;\n          consumable.add(selection, 'attribute:' + key);\n        }\n      } catch (err) {\n        _didIteratorError13 = true;\n        _iteratorError13 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion13 && _iterator13[\"return\"] != null) {\n            _iterator13[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError13) {\n            throw _iteratorError13;\n          }\n        }\n      }\n\n      return consumable;\n    }\n    /**\n     * Tests passed `consumable` to check whether given event can be fired and if so, fires it.\n     *\n     * @private\n     * @fires insert\n     * @fires attribute\n     * @param {String} type Event type.\n     * @param {Object} data Event data.\n     */\n\n  }, {\n    key: \"_testAndFire\",\n    value: function _testAndFire(type, data) {\n      if (!this.conversionApi.consumable.test(data.item, type)) {\n        // Do not fire event if the item was consumed.\n        return;\n      }\n\n      var name = data.item.name || '$text';\n      this.fire(type + ':' + name, data, this.conversionApi);\n    }\n    /**\n     * Clears conversion API object.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_clearConversionApi\",\n    value: function _clearConversionApi() {\n      delete this.conversionApi.writer;\n      delete this.conversionApi.consumable;\n    }\n    /**\n     * Fired for inserted nodes.\n     *\n     * `insert` is a namespace for a class of events. Names of actually called events follow this pattern:\n     * `insert:name`. `name` is either `'$text'`, when {@link module:engine/model/text~Text a text node} has been inserted,\n     * or {@link module:engine/model/element~Element#name name} of inserted element.\n     *\n     * This way listeners can either listen to a general `insert` event or specific event (for example `insert:paragraph`).\n     *\n     * @event insert\n     * @param {Object} data Additional information about the change.\n     * @param {module:engine/model/item~Item} data.item Inserted item.\n     * @param {module:engine/model/range~Range} data.range Range spanning over inserted item.\n     * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface\n     * to be used by callback, passed in `DowncastDispatcher` constructor.\n     */\n\n    /**\n     * Fired for removed nodes.\n     *\n     * `remove` is a namespace for a class of events. Names of actually called events follow this pattern:\n     * `remove:name`. `name` is either `'$text'`, when {@link module:engine/model/text~Text a text node} has been removed,\n     * or the {@link module:engine/model/element~Element#name name} of removed element.\n     *\n     * This way listeners can either listen to a general `remove` event or specific event (for example `remove:paragraph`).\n     *\n     * @event remove\n     * @param {Object} data Additional information about the change.\n     * @param {module:engine/model/position~Position} data.position Position from which the node has been removed.\n     * @param {Number} data.length Offset size of the removed node.\n     * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface\n     * to be used by callback, passed in `DowncastDispatcher` constructor.\n     */\n\n    /**\n     * Fired in the following cases:\n     *\n     * * when an attribute has been added, changed, or removed from a node,\n     * * when a node with an attribute is inserted,\n     * * when collapsed model selection attribute is converted.\n     *\n     * `attribute` is a namespace for a class of events. Names of actually called events follow this pattern:\n     * `attribute:attributeKey:name`. `attributeKey` is the key of added/changed/removed attribute.\n     * `name` is either `'$text'` if change was on {@link module:engine/model/text~Text a text node},\n     * or the {@link module:engine/model/element~Element#name name} of element which attribute has changed.\n     *\n     * This way listeners can either listen to a general `attribute:bold` event or specific event (for example `attribute:src:image`).\n     *\n     * @event attribute\n     * @param {Object} data Additional information about the change.\n     * @param {module:engine/model/item~Item|module:engine/model/documentselection~DocumentSelection} data.item Changed item\n     * or converted selection.\n     * @param {module:engine/model/range~Range} data.range Range spanning over changed item or selection range.\n     * @param {String} data.attributeKey Attribute key.\n     * @param {*} data.attributeOldValue Attribute value before the change. This is `null` when selection attribute is converted.\n     * @param {*} data.attributeNewValue New attribute value.\n     * @param {module:engine/conversion/modelconsumable~ModelConsumable} consumable Values to consume.\n     * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface\n     * to be used by callback, passed in `DowncastDispatcher` constructor.\n     */\n\n    /**\n     * Fired for {@link module:engine/model/selection~Selection selection} changes.\n     *\n     * @event selection\n     * @param {module:engine/model/selection~Selection} selection Selection that is converted.\n     * @param {module:engine/conversion/modelconsumable~ModelConsumable} consumable Values to consume.\n     * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface\n     * to be used by callback, passed in `DowncastDispatcher` constructor.\n     */\n\n    /**\n     * Fired when a new marker is added to the model. Also fired when collapsed model selection that is inside marker is converted.\n     *\n     * `addMarker` is a namespace for a class of events. Names of actually called events follow this pattern:\n     * `addMarker:markerName`. By specifying certain marker names, you can make the events even more gradual. For example,\n     * if markers are named `foo:abc`, `foo:bar`, then it is possible to listen to `addMarker:foo` or `addMarker:foo:abc` and\n     * `addMarker:foo:bar` events.\n     *\n     * If the marker range is not collapsed:\n     *\n     * * the event is fired for each item in the marker range one by one,\n     * * consumables object includes each item of the marker range and the consumable value is same as event name.\n     *\n     * If the marker range is collapsed:\n     *\n     * * there is only one event,\n     * * consumables object includes marker range with event name.\n     *\n     * If selection inside a marker is converted:\n     *\n     * * there is only one event,\n     * * consumables object includes selection instance with event name.\n     *\n     * @event addMarker\n     * @param {Object} data Additional information about the change.\n     * @param {module:engine/model/item~Item|module:engine/model/selection~Selection} data.item Item inside the new marker or\n     * the selection that is being converted.\n     * @param {module:engine/model/range~Range} [data.range] Range spanning over converted item. Available only in marker conversion, if\n     * the marker range was not collapsed.\n     * @param {module:engine/model/range~Range} data.markerRange Marker range.\n     * @param {String} data.markerName Marker name.\n     * @param {module:engine/conversion/modelconsumable~ModelConsumable} consumable Values to consume.\n     * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface\n     * to be used by callback, passed in `DowncastDispatcher` constructor.\n     */\n\n    /**\n     * Fired when marker is removed from the model.\n     *\n     * `removeMarker` is a namespace for a class of events. Names of actually called events follow this pattern:\n     * `removeMarker:markerName`. By specifying certain marker names, you can make the events even more gradual. For example,\n     * if markers are named `foo:abc`, `foo:bar`, then it is possible to listen to `removeMarker:foo` or `removeMarker:foo:abc` and\n     * `removeMarker:foo:bar` events.\n     *\n     * @event removeMarker\n     * @param {Object} data Additional information about the change.\n     * @param {module:engine/model/range~Range} data.markerRange Marker range.\n     * @param {String} data.markerName Marker name.\n     * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface\n     * to be used by callback, passed in `DowncastDispatcher` constructor.\n     */\n\n  }]);\n\n  return DowncastDispatcher;\n}();\n\nexport { DowncastDispatcher as default };\nmix(DowncastDispatcher, EmitterMixin); // Helper function, checks whether change of `marker` at `modelPosition` should be converted. Marker changes are not\n// converted if they happen inside an element with custom conversion method.\n//\n// @param {module:engine/model/position~Position} modelPosition\n// @param {module:engine/model/markercollection~Marker} marker\n// @param {module:engine/conversion/mapper~Mapper} mapper\n// @returns {Boolean}\n\nfunction shouldMarkerChangeBeConverted(modelPosition, marker, mapper) {\n  var range = marker.getRange();\n  var ancestors = Array.from(modelPosition.getAncestors());\n  ancestors.shift(); // Remove root element. It cannot be passed to `model.Range#containsItem`.\n\n  ancestors.reverse();\n  var hasCustomHandling = ancestors.some(function (element) {\n    if (range.containsItem(element)) {\n      var viewElement = mapper.toViewElement(element);\n      return !!viewElement.getCustomProperty('addHighlight');\n    }\n  });\n  return !hasCustomHandling;\n}\n/**\n * Conversion interface that is registered for given {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}\n * and is passed as one of parameters when {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher dispatcher}\n * fires it's events.\n *\n * @interface module:engine/conversion/downcastdispatcher~DowncastConversionApi\n */\n\n/**\n * The {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher} instance.\n *\n * @member {module:engine/conversion/downcastdispatcher~DowncastDispatcher} #dispatcher\n */\n\n/**\n * Stores information about what parts of processed model item are still waiting to be handled. After a piece of model item\n * was converted, appropriate consumable value should be {@link module:engine/conversion/modelconsumable~ModelConsumable#consume consumed}.\n *\n * @member {module:engine/conversion/modelconsumable~ModelConsumable} #consumable\n */\n\n/**\n * The {@link module:engine/conversion/mapper~Mapper} instance.\n *\n * @member {module:engine/conversion/mapper~Mapper} #mapper\n */\n\n/**\n * The {@link module:engine/view/downcastwriter~DowncastWriter} instance used to manipulate data during conversion.\n *\n * @member {module:engine/view/downcastwriter~DowncastWriter} #writer\n */","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/selection\n */\nimport Position from './position';\nimport Element from './element';\nimport Node from './node';\nimport Range from './range';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\n/**\n * Selection is a set of {@link module:engine/model/range~Range ranges}. It has a direction specified by its\n * {@link module:engine/model/selection~Selection#anchor anchor} and {@link module:engine/model/selection~Selection#focus focus}\n * (it can be {@link module:engine/model/selection~Selection#isBackward forward or backward}).\n * Additionally, selection may have its own attributes (think – whether text typed in in this selection\n * should have those attributes – e.g. whether you type a bolded text).\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n */\n\nvar Selection =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a new selection instance based on the given {@link module:engine/model/selection~Selectable selectable}\n   * or creates an empty selection if no arguments were passed.\n   *\n   *\t\t// Creates empty selection without ranges.\n   *\t\tconst selection = writer.createSelection();\n   *\n   *\t\t// Creates selection at the given range.\n   *\t\tconst range = writer.createRange( start, end );\n   *\t\tconst selection = writer.createSelection( range );\n   *\n   *\t\t// Creates selection at the given ranges\n   *\t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n   *\t\tconst selection = writer.createSelection( ranges );\n   *\n   *\t\t// Creates selection from the other selection.\n   *\t\t// Note: It doesn't copies selection attributes.\n   *\t\tconst otherSelection = writer.createSelection();\n   *\t\tconst selection = writer.createSelection( otherSelection );\n   *\n   *\t\t// Creates selection from the given document selection.\n   *\t\t// Note: It doesn't copies selection attributes.\n   *\t\tconst documentSelection = model.document.selection;\n   *\t\tconst selection = writer.createSelection( documentSelection );\n   *\n   *\t\t// Creates selection at the given position.\n   *\t\tconst position = writer.createPositionFromPath( root, path );\n   *\t\tconst selection = writer.createSelection( position );\n   *\n   *\t\t// Creates selection at the given offset in the given element.\n   *\t\tconst paragraph = writer.createElement( 'paragraph' );\n   *\t\tconst selection = writer.createSelection( paragraph, offset );\n   *\n   *\t\t// Creates a range inside an {@link module:engine/model/element~Element element} which starts before the\n   *\t\t// first child of that element and ends after the last child of that element.\n   *\t\tconst selection = writer.createSelection( paragraph, 'in' );\n   *\n   *\t\t// Creates a range on an {@link module:engine/model/item~Item item} which starts before the item and ends\n   *\t\t// just after the item.\n   *\t\tconst selection = writer.createSelection( paragraph, 'on' );\n   *\n   * Selection's constructor allow passing additional options (`'backward'`) as the last argument.\n   *\n   *\t\t// Creates backward selection.\n   *\t\tconst selection = writer.createSelection( range, { backward: true } );\n   *\n   * @param {module:engine/model/selection~Selectable} selectable\n   * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n   * @param {Object} [options]\n   * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n   */\n  function Selection(selectable, placeOrOffset, options) {\n    _classCallCheck(this, Selection);\n\n    /**\n     * Specifies whether the last added range was added as a backward or forward range.\n     *\n     * @private\n     * @type {Boolean}\n     */\n    this._lastRangeBackward = false;\n    /**\n     * Stores selection ranges.\n     *\n     * @protected\n     * @type {Array.<module:engine/model/range~Range>}\n     */\n\n    this._ranges = [];\n    /**\n     * List of attributes set on current selection.\n     *\n     * @protected\n     * @type {Map.<String,*>}\n     */\n\n    this._attrs = new Map();\n\n    if (selectable) {\n      this.setTo(selectable, placeOrOffset, options);\n    }\n  }\n  /**\n   * Selection anchor. Anchor is the position from which the selection was started. If a user is making a selection\n   * by dragging the mouse, the anchor is where the user pressed the mouse button (the beggining of the selection).\n   *\n   * Anchor and {@link #focus} define the direction of the selection, which is important\n   * when expanding/shrinking selection. The focus moves, while the anchor should remain in the same place.\n   *\n   * Anchor is always set to the {@link module:engine/model/range~Range#start start} or\n   * {@link module:engine/model/range~Range#end end} position of the last of selection's ranges. Whether it is\n   * the `start` or `end` depends on the specified `options.backward`. See the {@link #setTo `setTo()`} method.\n   *\n   * May be set to `null` if there are no ranges in the selection.\n   *\n   * @see #focus\n   * @readonly\n   * @type {module:engine/model/position~Position|null}\n   */\n\n\n  _createClass(Selection, [{\n    key: \"isEqual\",\n\n    /**\n     * Checks whether this selection is equal to the given selection. Selections are equal if they have the same directions,\n     * the same number of ranges and all ranges from one selection equal to ranges from the another selection.\n     *\n     * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} otherSelection\n     * Selection to compare with.\n     * @returns {Boolean} `true` if selections are equal, `false` otherwise.\n     */\n    value: function isEqual(otherSelection) {\n      if (this.rangeCount != otherSelection.rangeCount) {\n        return false;\n      } else if (this.rangeCount === 0) {\n        return true;\n      }\n\n      if (!this.anchor.isEqual(otherSelection.anchor) || !this.focus.isEqual(otherSelection.focus)) {\n        return false;\n      }\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this._ranges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var thisRange = _step.value;\n          var found = false;\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = otherSelection._ranges[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var otherRange = _step2.value;\n\n              if (thisRange.isEqual(otherRange)) {\n                found = true;\n                break;\n              }\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n                _iterator2[\"return\"]();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n\n          if (!found) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return true;\n    }\n    /**\n     * Returns an iterable object that iterates over copies of selection ranges.\n     *\n     * @returns {Iterable.<module:engine/model/range~Range>}\n     */\n\n  }, {\n    key: \"getRanges\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function getRanges() {\n      var _iteratorNormalCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, range;\n\n      return regeneratorRuntime.wrap(function getRanges$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _iteratorNormalCompletion3 = true;\n              _didIteratorError3 = false;\n              _iteratorError3 = undefined;\n              _context.prev = 3;\n              _iterator3 = this._ranges[Symbol.iterator]();\n\n            case 5:\n              if (_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done) {\n                _context.next = 12;\n                break;\n              }\n\n              range = _step3.value;\n              _context.next = 9;\n              return new Range(range.start, range.end);\n\n            case 9:\n              _iteratorNormalCompletion3 = true;\n              _context.next = 5;\n              break;\n\n            case 12:\n              _context.next = 18;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](3);\n              _didIteratorError3 = true;\n              _iteratorError3 = _context.t0;\n\n            case 18:\n              _context.prev = 18;\n              _context.prev = 19;\n\n              if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n                _iterator3[\"return\"]();\n              }\n\n            case 21:\n              _context.prev = 21;\n\n              if (!_didIteratorError3) {\n                _context.next = 24;\n                break;\n              }\n\n              throw _iteratorError3;\n\n            case 24:\n              return _context.finish(21);\n\n            case 25:\n              return _context.finish(18);\n\n            case 26:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, getRanges, this, [[3, 14, 18, 26], [19,, 21, 25]]);\n    })\n    /**\n     * Returns a copy of the first range in the selection.\n     * First range is the one which {@link module:engine/model/range~Range#start start} position\n     * {@link module:engine/model/position~Position#isBefore is before} start position of all other ranges\n     * (not to confuse with the first range added to the selection).\n     *\n     * Returns `null` if there are no ranges in selection.\n     *\n     * @returns {module:engine/model/range~Range|null}\n     */\n\n  }, {\n    key: \"getFirstRange\",\n    value: function getFirstRange() {\n      var first = null;\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = this._ranges[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var range = _step4.value;\n\n          if (!first || range.start.isBefore(first.start)) {\n            first = range;\n          }\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4[\"return\"] != null) {\n            _iterator4[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      return first ? new Range(first.start, first.end) : null;\n    }\n    /**\n     * Returns a copy of the last range in the selection.\n     * Last range is the one which {@link module:engine/model/range~Range#end end} position\n     * {@link module:engine/model/position~Position#isAfter is after} end position of all other ranges (not to confuse with the range most\n     * recently added to the selection).\n     *\n     * Returns `null` if there are no ranges in selection.\n     *\n     * @returns {module:engine/model/range~Range|null}\n     */\n\n  }, {\n    key: \"getLastRange\",\n    value: function getLastRange() {\n      var last = null;\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = this._ranges[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var range = _step5.value;\n\n          if (!last || range.end.isAfter(last.end)) {\n            last = range;\n          }\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5[\"return\"] != null) {\n            _iterator5[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      return last ? new Range(last.start, last.end) : null;\n    }\n    /**\n     * Returns the first position in the selection.\n     * First position is the position that {@link module:engine/model/position~Position#isBefore is before}\n     * any other position in the selection.\n     *\n     * Returns `null` if there are no ranges in selection.\n     *\n     * @returns {module:engine/model/position~Position|null}\n     */\n\n  }, {\n    key: \"getFirstPosition\",\n    value: function getFirstPosition() {\n      var first = this.getFirstRange();\n      return first ? first.start.clone() : null;\n    }\n    /**\n     * Returns the last position in the selection.\n     * Last position is the position that {@link module:engine/model/position~Position#isAfter is after}\n     * any other position in the selection.\n     *\n     * Returns `null` if there are no ranges in selection.\n     *\n     * @returns {module:engine/model/position~Position|null}\n     */\n\n  }, {\n    key: \"getLastPosition\",\n    value: function getLastPosition() {\n      var lastRange = this.getLastRange();\n      return lastRange ? lastRange.end.clone() : null;\n    }\n    /**\n     * Sets this selection's ranges and direction to the specified location based on the given\n     * {@link module:engine/model/selection~Selectable selectable}.\n     *\n     *\t\t// Removes all selection's ranges.\n     *\t\tselection.setTo( null );\n     *\n     *\t\t// Sets selection to the given range.\n     *\t\tconst range = writer.createRange( start, end );\n     *\t\tselection.setTo( range );\n     *\n     *\t\t// Sets selection to given ranges.\n     *\t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n     *\t\tselection.setTo( ranges );\n     *\n     *\t\t// Sets selection to other selection.\n     *\t\t// Note: It doesn't copies selection attributes.\n     *\t\tconst otherSelection = writer.createSelection();\n     *\t\tselection.setTo( otherSelection );\n     *\n     *\t\t// Sets selection to the given document selection.\n     *\t\t// Note: It doesn't copies selection attributes.\n     *\t\tconst documentSelection = new DocumentSelection( doc );\n     *\t\tselection.setTo( documentSelection );\n     *\n     *\t\t// Sets collapsed selection at the given position.\n     *\t\tconst position = writer.createPositionFromPath( root, path );\n     *\t\tselection.setTo( position );\n     *\n     *\t\t// Sets collapsed selection at the position of the given node and an offset.\n     *\t\tselection.setTo( paragraph, offset );\n     *\n     * Creates a range inside an {@link module:engine/model/element~Element element} which starts before the first child of\n    \t * that element and ends after the last child of that element.\n     *\n     *\t\tselection.setTo( paragraph, 'in' );\n     *\n     * Creates a range on an {@link module:engine/model/item~Item item} which starts before the item and ends just after the item.\n     *\n     *\t\tselection.setTo( paragraph, 'on' );\n     *\n     * `Selection#setTo()`' method allow passing additional options (`backward`) as the last argument.\n     *\n     *\t\t// Sets backward selection.\n     *\t\tconst selection = writer.createSelection( range, { backward: true } );\n     *\n     * @param {module:engine/model/selection~Selectable} selectable\n     * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n     * @param {Object} [options]\n     * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n     */\n\n  }, {\n    key: \"setTo\",\n    value: function setTo(selectable, placeOrOffset, options) {\n      if (selectable === null) {\n        this._setRanges([]);\n      } else if (selectable instanceof Selection) {\n        this._setRanges(selectable.getRanges(), selectable.isBackward);\n      } else if (selectable && typeof selectable.getRanges == 'function') {\n        // We assume that the selectable is a DocumentSelection.\n        // It can't be imported here, because it would lead to circular imports.\n        this._setRanges(selectable.getRanges(), selectable.isBackward);\n      } else if (selectable instanceof Range) {\n        this._setRanges([selectable], !!placeOrOffset && !!placeOrOffset.backward);\n      } else if (selectable instanceof Position) {\n        this._setRanges([new Range(selectable)]);\n      } else if (selectable instanceof Node) {\n        var backward = !!options && !!options.backward;\n        var range;\n\n        if (placeOrOffset == 'in') {\n          range = Range._createIn(selectable);\n        } else if (placeOrOffset == 'on') {\n          range = Range._createOn(selectable);\n        } else if (placeOrOffset !== undefined) {\n          range = new Range(Position._createAt(selectable, placeOrOffset));\n        } else {\n          /**\n           * selection.setTo requires the second parameter when the first parameter is a node.\n           *\n           * @error model-selection-setTo-required-second-parameter\n           */\n          throw new CKEditorError('model-selection-setTo-required-second-parameter: ' + 'selection.setTo requires the second parameter when the first parameter is a node.', [this, selectable]);\n        }\n\n        this._setRanges([range], backward);\n      } else if (isIterable(selectable)) {\n        // We assume that the selectable is an iterable of ranges.\n        this._setRanges(selectable, placeOrOffset && !!placeOrOffset.backward);\n      } else {\n        /**\n         * Cannot set the selection to the given place.\n         *\n         * Invalid parameters were specified when setting the selection. Common issues:\n         *\n         * * A {@link module:engine/model/textproxy~TextProxy} instance was passed instead of\n         * a real {@link module:engine/model/text~Text}.\n         * * View nodes were passed instead of model nodes.\n         * * `null`/`undefined` was passed.\n         *\n         * @error model-selection-setTo-not-selectable\n         */\n        throw new CKEditorError('model-selection-setTo-not-selectable: Cannot set the selection to the given place.', [this, selectable]);\n      }\n    }\n    /**\n     * Replaces all ranges that were added to the selection with given array of ranges. Last range of the array\n     * is treated like the last added range and is used to set {@link module:engine/model/selection~Selection#anchor} and\n     * {@link module:engine/model/selection~Selection#focus}. Accepts a flag describing in which direction the selection is made.\n     *\n     * @protected\n     * @fires change:range\n     * @param {Iterable.<module:engine/model/range~Range>} newRanges Ranges to set.\n     * @param {Boolean} [isLastBackward=false] Flag describing if last added range was selected forward - from start to end (`false`)\n     * or backward - from end to start (`true`).\n     */\n\n  }, {\n    key: \"_setRanges\",\n    value: function _setRanges(newRanges) {\n      var _this = this;\n\n      var isLastBackward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      newRanges = Array.from(newRanges); // Check whether there is any range in new ranges set that is different than all already added ranges.\n\n      var anyNewRange = newRanges.some(function (newRange) {\n        if (!(newRange instanceof Range)) {\n          /**\n           * Selection range set to an object that is not an instance of {@link module:engine/model/range~Range}.\n           *\n           * Only {@link module:engine/model/range~Range} instances can be used to set a selection.\n           * Common mistakes leading to this error are:\n           *\n           * * using DOM `Range` object,\n           * * incorrect CKEditor 5 installation with multiple `ckeditor5-engine` packages having different versions.\n           *\n           * @error model-selection-set-ranges-not-range\n           */\n          throw new CKEditorError('model-selection-set-ranges-not-range: ' + 'Selection range set to an object that is not an instance of model.Range.', [_this, newRanges]);\n        }\n\n        return _this._ranges.every(function (oldRange) {\n          return !oldRange.isEqual(newRange);\n        });\n      }); // Don't do anything if nothing changed.\n\n      if (newRanges.length === this._ranges.length && !anyNewRange) {\n        return;\n      }\n\n      this._removeAllRanges();\n\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = newRanges[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var range = _step6.value;\n\n          this._pushRange(range);\n        }\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6[\"return\"] != null) {\n            _iterator6[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n\n      this._lastRangeBackward = !!isLastBackward;\n      this.fire('change:range', {\n        directChange: true\n      });\n    }\n    /**\n     * Moves {@link module:engine/model/selection~Selection#focus} to the specified location.\n     *\n     * The location can be specified in the same form as\n     * {@link module:engine/model/writer~Writer#createPositionAt writer.createPositionAt()} parameters.\n     *\n     * @fires change:range\n     * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n     * first parameter is a {@link module:engine/model/item~Item model item}.\n     */\n\n  }, {\n    key: \"setFocus\",\n    value: function setFocus(itemOrPosition, offset) {\n      if (this.anchor === null) {\n        /**\n         * Cannot set selection focus if there are no ranges in selection.\n         *\n         * @error model-selection-setFocus-no-ranges\n         */\n        throw new CKEditorError('model-selection-setFocus-no-ranges: Cannot set selection focus if there are no ranges in selection.', [this, itemOrPosition]);\n      }\n\n      var newFocus = Position._createAt(itemOrPosition, offset);\n\n      if (newFocus.compareWith(this.focus) == 'same') {\n        return;\n      }\n\n      var anchor = this.anchor;\n\n      if (this._ranges.length) {\n        this._popRange();\n      }\n\n      if (newFocus.compareWith(anchor) == 'before') {\n        this._pushRange(new Range(newFocus, anchor));\n\n        this._lastRangeBackward = true;\n      } else {\n        this._pushRange(new Range(anchor, newFocus));\n\n        this._lastRangeBackward = false;\n      }\n\n      this.fire('change:range', {\n        directChange: true\n      });\n    }\n    /**\n     * Gets an attribute value for given key or `undefined` if that attribute is not set on the selection.\n     *\n     * @param {String} key Key of attribute to look for.\n     * @returns {*} Attribute value or `undefined`.\n     */\n\n  }, {\n    key: \"getAttribute\",\n    value: function getAttribute(key) {\n      return this._attrs.get(key);\n    }\n    /**\n     * Returns iterable that iterates over this selection's attributes.\n     *\n     * Attributes are returned as arrays containing two items. First one is attribute key and second is attribute value.\n     * This format is accepted by native `Map` object and also can be passed in `Node` constructor.\n     *\n     * @returns {Iterable.<*>}\n     */\n\n  }, {\n    key: \"getAttributes\",\n    value: function getAttributes() {\n      return this._attrs.entries();\n    }\n    /**\n     * Returns iterable that iterates over this selection's attribute keys.\n     *\n     * @returns {Iterable.<String>}\n     */\n\n  }, {\n    key: \"getAttributeKeys\",\n    value: function getAttributeKeys() {\n      return this._attrs.keys();\n    }\n    /**\n     * Checks if the selection has an attribute for given key.\n     *\n     * @param {String} key Key of attribute to check.\n     * @returns {Boolean} `true` if attribute with given key is set on selection, `false` otherwise.\n     */\n\n  }, {\n    key: \"hasAttribute\",\n    value: function hasAttribute(key) {\n      return this._attrs.has(key);\n    }\n    /**\n     * Removes an attribute with given key from the selection.\n     *\n     * If given attribute was set on the selection, fires the {@link #event:change:range} event with\n     * removed attribute key.\n     *\n     * @fires change:attribute\n     * @param {String} key Key of attribute to remove.\n     */\n\n  }, {\n    key: \"removeAttribute\",\n    value: function removeAttribute(key) {\n      if (this.hasAttribute(key)) {\n        this._attrs[\"delete\"](key);\n\n        this.fire('change:attribute', {\n          attributeKeys: [key],\n          directChange: true\n        });\n      }\n    }\n    /**\n     * Sets attribute on the selection. If attribute with the same key already is set, it's value is overwritten.\n     *\n     * If the attribute value has changed, fires the {@link #event:change:range} event with\n     * the attribute key.\n     *\n     * @fires change:attribute\n     * @param {String} key Key of attribute to set.\n     * @param {*} value Attribute value.\n     */\n\n  }, {\n    key: \"setAttribute\",\n    value: function setAttribute(key, value) {\n      if (this.getAttribute(key) !== value) {\n        this._attrs.set(key, value);\n\n        this.fire('change:attribute', {\n          attributeKeys: [key],\n          directChange: true\n        });\n      }\n    }\n    /**\n     * Returns the selected element. {@link module:engine/model/element~Element Element} is considered as selected if there is only\n     * one range in the selection, and that range contains exactly one element.\n     * Returns `null` if there is no selected element.\n     *\n     * @returns {module:engine/model/element~Element|null}\n     */\n\n  }, {\n    key: \"getSelectedElement\",\n    value: function getSelectedElement() {\n      if (this.rangeCount !== 1) {\n        return null;\n      }\n\n      var range = this.getFirstRange();\n      var nodeAfterStart = range.start.nodeAfter;\n      var nodeBeforeEnd = range.end.nodeBefore;\n      return nodeAfterStart instanceof Element && nodeAfterStart == nodeBeforeEnd ? nodeAfterStart : null;\n    }\n    /**\n     * Checks whether object is of given type following the convention set by\n     * {@link module:engine/model/node~Node#is `Node#is()`}.\n     *\n     *\t\tconst selection = new Selection( ... );\n     *\n     *\t\tselection.is( 'selection' ); // true\n     *\t\tselection.is( 'node' ); // false\n     *\t\tselection.is( 'element' ); // false\n     *\n     * @param {String} type\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"is\",\n    value: function is(type) {\n      return type == 'selection';\n    }\n    /**\n     * Gets elements of type \"block\" touched by the selection.\n     *\n     * This method's result can be used for example to apply block styling to all blocks covered by this selection.\n     *\n     * **Note:** `getSelectedBlocks()` always returns the deepest block.\n     *\n     * In this case the function will return exactly all 3 paragraphs:\n     *\n     *\t\t<paragraph>[a</paragraph>\n     *\t\t<quote>\n     *\t\t\t<paragraph>b</paragraph>\n     *\t\t</quote>\n     *\t\t<paragraph>c]d</paragraph>\n     *\n     * In this case the paragraph will also be returned, despite the collapsed selection:\n     *\n     *\t\t<paragraph>[]a</paragraph>\n     *\n     * **Special case**: If a selection ends at the beginning of a block, that block is not returned as from user perspective\n     * this block wasn't selected. See [#984](https://github.com/ckeditor/ckeditor5-engine/issues/984) for more details.\n     *\n     *\t\t<paragraph>[a</paragraph>\n     *\t\t<paragraph>b</paragraph>\n     *\t\t<paragraph>]c</paragraph> // this block will not be returned\n     *\n     * @returns {Iterable.<module:engine/model/element~Element>}\n     */\n\n  }, {\n    key: \"getSelectedBlocks\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function getSelectedBlocks() {\n      var visited, _iteratorNormalCompletion7, _didIteratorError7, _iteratorError7, _iterator7, _step7, range, startBlock, _iteratorNormalCompletion8, _didIteratorError8, _iteratorError8, _iterator8, _step8, value, endBlock;\n\n      return regeneratorRuntime.wrap(function getSelectedBlocks$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              visited = new WeakSet();\n              _iteratorNormalCompletion7 = true;\n              _didIteratorError7 = false;\n              _iteratorError7 = undefined;\n              _context2.prev = 4;\n              _iterator7 = this.getRanges()[Symbol.iterator]();\n\n            case 6:\n              if (_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done) {\n                _context2.next = 46;\n                break;\n              }\n\n              range = _step7.value;\n              startBlock = getParentBlock(range.start, visited);\n\n              if (!startBlock) {\n                _context2.next = 12;\n                break;\n              }\n\n              _context2.next = 12;\n              return startBlock;\n\n            case 12:\n              _iteratorNormalCompletion8 = true;\n              _didIteratorError8 = false;\n              _iteratorError8 = undefined;\n              _context2.prev = 15;\n              _iterator8 = range.getWalker()[Symbol.iterator]();\n\n            case 17:\n              if (_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done) {\n                _context2.next = 25;\n                break;\n              }\n\n              value = _step8.value;\n\n              if (!(value.type == 'elementEnd' && isUnvisitedBlockContainer(value.item, visited))) {\n                _context2.next = 22;\n                break;\n              }\n\n              _context2.next = 22;\n              return value.item;\n\n            case 22:\n              _iteratorNormalCompletion8 = true;\n              _context2.next = 17;\n              break;\n\n            case 25:\n              _context2.next = 31;\n              break;\n\n            case 27:\n              _context2.prev = 27;\n              _context2.t0 = _context2[\"catch\"](15);\n              _didIteratorError8 = true;\n              _iteratorError8 = _context2.t0;\n\n            case 31:\n              _context2.prev = 31;\n              _context2.prev = 32;\n\n              if (!_iteratorNormalCompletion8 && _iterator8[\"return\"] != null) {\n                _iterator8[\"return\"]();\n              }\n\n            case 34:\n              _context2.prev = 34;\n\n              if (!_didIteratorError8) {\n                _context2.next = 37;\n                break;\n              }\n\n              throw _iteratorError8;\n\n            case 37:\n              return _context2.finish(34);\n\n            case 38:\n              return _context2.finish(31);\n\n            case 39:\n              endBlock = getParentBlock(range.end, visited); // #984. Don't return the end block if the range ends right at its beginning.\n\n              if (!(endBlock && !range.end.isTouching(Position._createAt(endBlock, 0)))) {\n                _context2.next = 43;\n                break;\n              }\n\n              _context2.next = 43;\n              return endBlock;\n\n            case 43:\n              _iteratorNormalCompletion7 = true;\n              _context2.next = 6;\n              break;\n\n            case 46:\n              _context2.next = 52;\n              break;\n\n            case 48:\n              _context2.prev = 48;\n              _context2.t1 = _context2[\"catch\"](4);\n              _didIteratorError7 = true;\n              _iteratorError7 = _context2.t1;\n\n            case 52:\n              _context2.prev = 52;\n              _context2.prev = 53;\n\n              if (!_iteratorNormalCompletion7 && _iterator7[\"return\"] != null) {\n                _iterator7[\"return\"]();\n              }\n\n            case 55:\n              _context2.prev = 55;\n\n              if (!_didIteratorError7) {\n                _context2.next = 58;\n                break;\n              }\n\n              throw _iteratorError7;\n\n            case 58:\n              return _context2.finish(55);\n\n            case 59:\n              return _context2.finish(52);\n\n            case 60:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, getSelectedBlocks, this, [[4, 48, 52, 60], [15, 27, 31, 39], [32,, 34, 38], [53,, 55, 59]]);\n    })\n    /**\n     * Returns blocks that aren't nested in other selected blocks.\n     *\n     * In this case the method will return blocks A, B and E because C & D are children of block B:\n     *\n     *\t\t[<blockA></blockA>\n     *\t\t<blockB>\n     *\t\t\t<blockC></blockC>\n     *\t\t\t<blockD></blockD>\n     *\t\t</blockB>\n     *\t\t<blockE></blockE>]\n     *\n     * **Note:** To get all selected blocks use {@link #getSelectedBlocks `getSelectedBlocks()`}.\n     *\n     * @returns {Iterable.<module:engine/model/element~Element>}\n     */\n\n  }, {\n    key: \"getTopMostBlocks\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function getTopMostBlocks() {\n      var selected, _i, _selected, block, parentBlock;\n\n      return regeneratorRuntime.wrap(function getTopMostBlocks$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              selected = Array.from(this.getSelectedBlocks());\n              _i = 0, _selected = selected;\n\n            case 2:\n              if (!(_i < _selected.length)) {\n                _context3.next = 11;\n                break;\n              }\n\n              block = _selected[_i];\n              parentBlock = findAncestorBlock(block); // Filter out blocks that are nested in other selected blocks (like paragraphs in tables).\n\n              if (!(!parentBlock || !selected.includes(parentBlock))) {\n                _context3.next = 8;\n                break;\n              }\n\n              _context3.next = 8;\n              return block;\n\n            case 8:\n              _i++;\n              _context3.next = 2;\n              break;\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, getTopMostBlocks, this);\n    })\n    /**\n     * Checks whether the selection contains the entire content of the given element. This means that selection must start\n     * at a position {@link module:engine/model/position~Position#isTouching touching} the element's start and ends at position\n     * touching the element's end.\n     *\n     * By default, this method will check whether the entire content of the selection's current root is selected.\n     * Useful to check if e.g. the user has just pressed <kbd>Ctrl</kbd> + <kbd>A</kbd>.\n     *\n     * @param {module:engine/model/element~Element} [element=this.anchor.root]\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"containsEntireContent\",\n    value: function containsEntireContent() {\n      var element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.anchor.root;\n\n      var limitStartPosition = Position._createAt(element, 0);\n\n      var limitEndPosition = Position._createAt(element, 'end');\n\n      return limitStartPosition.isTouching(this.getFirstPosition()) && limitEndPosition.isTouching(this.getLastPosition());\n    }\n    /**\n     * Adds given range to internal {@link #_ranges ranges array}. Throws an error\n     * if given range is intersecting with any range that is already stored in this selection.\n     *\n     * @protected\n     * @param {module:engine/model/range~Range} range Range to add.\n     */\n\n  }, {\n    key: \"_pushRange\",\n    value: function _pushRange(range) {\n      this._checkRange(range);\n\n      this._ranges.push(new Range(range.start, range.end));\n    }\n    /**\n     * Checks if given range intersects with ranges that are already in the selection. Throws an error if it does.\n     *\n     * @protected\n     * @param {module:engine/model/range~Range} range Range to check.\n     */\n\n  }, {\n    key: \"_checkRange\",\n    value: function _checkRange(range) {\n      for (var i = 0; i < this._ranges.length; i++) {\n        if (range.isIntersecting(this._ranges[i])) {\n          /**\n           * Trying to add a range that intersects with another range in the selection.\n           *\n           * @error model-selection-range-intersects\n           * @param {module:engine/model/range~Range} addedRange Range that was added to the selection.\n           * @param {module:engine/model/range~Range} intersectingRange Range in the selection that intersects with `addedRange`.\n           */\n          throw new CKEditorError('model-selection-range-intersects: Trying to add a range that intersects with another range in the selection.', [this, range], {\n            addedRange: range,\n            intersectingRange: this._ranges[i]\n          });\n        }\n      }\n    }\n    /**\n     * Deletes ranges from internal range array. Uses {@link #_popRange _popRange} to\n     * ensure proper ranges removal.\n     *\n     * @protected\n     */\n\n  }, {\n    key: \"_removeAllRanges\",\n    value: function _removeAllRanges() {\n      while (this._ranges.length > 0) {\n        this._popRange();\n      }\n    }\n    /**\n     * Removes most recently added range from the selection.\n     *\n     * @protected\n     */\n\n  }, {\n    key: \"_popRange\",\n    value: function _popRange() {\n      this._ranges.pop();\n    }\n    /**\n     * Fired when selection range(s) changed.\n     *\n     * @event change:range\n     * @param {Boolean} directChange In case of {@link module:engine/model/selection~Selection} class it is always set\n     * to `true` which indicates that the selection change was caused by a direct use of selection's API.\n     * The {@link module:engine/model/documentselection~DocumentSelection}, however, may change because its position\n     * was directly changed through the {@link module:engine/model/writer~Writer writer} or because its position was\n     * changed because the structure of the model has been changed (which means an indirect change).\n     * The indirect change does not occur in case of normal (detached) selections because they are \"static\" (as \"not live\")\n     * which mean that they are not updated once the document changes.\n     */\n\n    /**\n     * Fired when selection attribute changed.\n     *\n     * @event change:attribute\n     * @param {Boolean} directChange In case of {@link module:engine/model/selection~Selection} class it is always set\n     * to `true` which indicates that the selection change was caused by a direct use of selection's API.\n     * The {@link module:engine/model/documentselection~DocumentSelection}, however, may change because its attributes\n     * were directly changed through the {@link module:engine/model/writer~Writer writer} or because its position was\n     * changed in the model and its attributes were refreshed (which means an indirect change).\n     * The indirect change does not occur in case of normal (detached) selections because they are \"static\" (as \"not live\")\n     * which mean that they are not updated once the document changes.\n     * @param {Array.<String>} attributeKeys Array containing keys of attributes that changed.\n     */\n\n  }, {\n    key: \"anchor\",\n    get: function get() {\n      if (this._ranges.length > 0) {\n        var range = this._ranges[this._ranges.length - 1];\n        return this._lastRangeBackward ? range.end : range.start;\n      }\n\n      return null;\n    }\n    /**\n     * Selection focus. Focus is the position where the selection ends. If a user is making a selection\n     * by dragging the mouse, the focus is where the mouse cursor is.\n     *\n     * May be set to `null` if there are no ranges in the selection.\n     *\n     * @see #anchor\n     * @readonly\n     * @type {module:engine/model/position~Position|null}\n     */\n\n  }, {\n    key: \"focus\",\n    get: function get() {\n      if (this._ranges.length > 0) {\n        var range = this._ranges[this._ranges.length - 1];\n        return this._lastRangeBackward ? range.start : range.end;\n      }\n\n      return null;\n    }\n    /**\n     * Whether the selection is collapsed. Selection is collapsed when there is exactly one range in it\n     * and it is collapsed.\n     *\n     * @readonly\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isCollapsed\",\n    get: function get() {\n      var length = this._ranges.length;\n\n      if (length === 1) {\n        return this._ranges[0].isCollapsed;\n      } else {\n        return false;\n      }\n    }\n    /**\n     * Returns the number of ranges in the selection.\n     *\n     * @readonly\n     * @type {Number}\n     */\n\n  }, {\n    key: \"rangeCount\",\n    get: function get() {\n      return this._ranges.length;\n    }\n    /**\n     * Specifies whether the selection's {@link #focus} precedes the selection's {@link #anchor}.\n     *\n     * @readonly\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isBackward\",\n    get: function get() {\n      return !this.isCollapsed && this._lastRangeBackward;\n    }\n  }]);\n\n  return Selection;\n}();\n\nexport { Selection as default };\nmix(Selection, EmitterMixin); // Checks whether the given element extends $block in the schema and has a parent (is not a root).\n// Marks it as already visited.\n\nfunction isUnvisitedBlockContainer(element, visited) {\n  if (visited.has(element)) {\n    return false;\n  }\n\n  visited.add(element);\n  return element.document.model.schema.isBlock(element) && element.parent;\n} // Finds the lowest element in position's ancestors which is a block.\n// It will search until first ancestor that is a limit element.\n// Marks all ancestors as already visited to not include any of them later on.\n\n\nfunction getParentBlock(position, visited) {\n  var schema = position.parent.document.model.schema;\n  var ancestors = position.parent.getAncestors({\n    parentFirst: true,\n    includeSelf: true\n  });\n  var hasParentLimit = false;\n  var block = ancestors.find(function (element) {\n    // Stop searching after first parent node that is limit element.\n    if (hasParentLimit) {\n      return false;\n    }\n\n    hasParentLimit = schema.isLimit(element);\n    return !hasParentLimit && isUnvisitedBlockContainer(element, visited);\n  }); // Mark all ancestors of this position's parent, because find() might've stopped early and\n  // the found block may be a child of another block.\n\n  ancestors.forEach(function (element) {\n    return visited.add(element);\n  });\n  return block;\n} // Returns first ancestor block of a node.\n//\n// @param {module:engine/model/node~Node} node\n// @returns {module:engine/model/node~Node|undefined}\n\n\nfunction findAncestorBlock(node) {\n  var schema = node.document.model.schema;\n  var parent = node.parent;\n\n  while (parent) {\n    if (schema.isBlock(parent)) {\n      return parent;\n    }\n\n    parent = parent.parent;\n  }\n}\n/**\n * An entity that is used to set selection.\n *\n * See also {@link module:engine/model/selection~Selection#setTo}\n *\n * @typedef {\n *     module:engine/model/selection~Selection|\n *     module:engine/model/documentselection~DocumentSelection|\n *     module:engine/model/position~Position|\n *     module:engine/model/range~Range|\n *     module:engine/model/node~Node|\n *     Iterable.<module:engine/model/range~Range>|\n *     null\n * } module:engine/model/selection~Selectable\n */","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/liverange\n */\nimport Range from './range';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n/**\n * `LiveRange` is a type of {@link module:engine/model/range~Range Range}\n * that updates itself as {@link module:engine/model/document~Document document}\n * is changed through operations. It may be used as a bookmark.\n *\n * **Note:** Be very careful when dealing with `LiveRange`. Each `LiveRange` instance bind events that might\n * have to be unbound. Use {@link module:engine/model/liverange~LiveRange#detach detach} whenever you don't need `LiveRange` anymore.\n */\n\nvar LiveRange =\n/*#__PURE__*/\nfunction (_Range) {\n  _inherits(LiveRange, _Range);\n\n  /**\n   * Creates a live range.\n   *\n   * @see module:engine/model/range~Range\n   */\n  function LiveRange(start, end) {\n    var _this;\n\n    _classCallCheck(this, LiveRange);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LiveRange).call(this, start, end));\n    bindWithDocument.call(_assertThisInitialized(_this));\n    return _this;\n  }\n  /**\n   * Unbinds all events previously bound by `LiveRange`. Use it whenever you don't need `LiveRange` instance\n   * anymore (i.e. when leaving scope in which it was declared or before re-assigning variable that was\n   * referring to it).\n   */\n\n\n  _createClass(LiveRange, [{\n    key: \"detach\",\n    value: function detach() {\n      this.stopListening();\n    }\n    /**\n     * Creates a {@link module:engine/model/range~Range range instance} that is equal to this live range.\n     *\n     * @returns {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"toRange\",\n    value: function toRange() {\n      return new Range(this.start, this.end);\n    }\n    /**\n     * Creates a `LiveRange` instance that is equal to the given range.\n     *\n     * @param {module:engine/model/range~Range} range\n     * @returns {module:engine/model/liverange~LiveRange}\n     */\n\n  }], [{\n    key: \"fromRange\",\n    value: function fromRange(range) {\n      return new LiveRange(range.start, range.end);\n    }\n    /**\n     * @see module:engine/model/range~Range._createIn\n     * @static\n     * @protected\n     * @method module:engine/model/liverange~LiveRange._createIn\n     * @param {module:engine/model/element~Element} element\n     * @returns {module:engine/model/liverange~LiveRange}\n     */\n\n    /**\n     * @see module:engine/model/range~Range._createOn\n     * @static\n     * @protected\n     * @method module:engine/model/liverange~LiveRange._createOn\n     * @param {module:engine/model/element~Element} element\n     * @returns {module:engine/model/liverange~LiveRange}\n     */\n\n    /**\n     * @see module:engine/model/range~Range._createFromPositionAndShift\n     * @static\n     * @protected\n     * @method module:engine/model/liverange~LiveRange._createFromPositionAndShift\n     * @param {module:engine/model/position~Position} position\n     * @param {Number} shift\n     * @returns {module:engine/model/liverange~LiveRange}\n     */\n\n    /**\n     * Fired when `LiveRange` instance boundaries have changed due to changes in the\n     * {@link module:engine/model/document~Document document}.\n     *\n     * @event change:range\n     * @param {module:engine/model/range~Range} oldRange Range with start and end position equal to start and end position of this live\n     * range before it got changed.\n     * @param {Object} data Object with additional information about the change.\n     * @param {module:engine/model/position~Position|null} data.deletionPosition Source position for remove and merge changes.\n     * Available if the range was moved to the graveyard root, `null` otherwise.\n     */\n\n    /**\n     * Fired when `LiveRange` instance boundaries have not changed after a change in {@link module:engine/model/document~Document document}\n     * but the change took place inside the range, effectively changing its content.\n     *\n     * @event change:content\n     * @param {module:engine/model/range~Range} range Range with start and end position equal to start and end position of\n     * change range.\n     * @param {Object} data Object with additional information about the change.\n     * @param {null} data.deletionPosition Due to the nature of this event, this property is always set to `null`. It is passed\n     * for compatibility with the {@link module:engine/model/liverange~LiveRange#event:change:range} event.\n     */\n\n  }]);\n\n  return LiveRange;\n}(Range); // Binds this `LiveRange` to the {@link module:engine/model/document~Document document}\n// that owns this range's {@link module:engine/model/range~Range#root root}.\n//\n// @private\n\n\nexport { LiveRange as default };\n\nfunction bindWithDocument() {\n  var _this2 = this;\n\n  this.listenTo(this.root.document.model, 'applyOperation', function (event, args) {\n    var operation = args[0];\n\n    if (!operation.isDocumentOperation) {\n      return;\n    }\n\n    transform.call(_this2, operation);\n  }, {\n    priority: 'low'\n  });\n} // Updates this range accordingly to the updates applied to the model. Bases on change events.\n//\n// @private\n// @param {module:engine/model/operation/operation~Operation} operation Executed operation.\n\n\nfunction transform(operation) {\n  // Transform the range by the operation. Join the result ranges if needed.\n  var ranges = this.getTransformedByOperation(operation);\n\n  var result = Range._createFromRanges(ranges);\n\n  var boundariesChanged = !result.isEqual(this);\n  var contentChanged = doesOperationChangeRangeContent(this, operation);\n  var deletionPosition = null;\n\n  if (boundariesChanged) {\n    // If range boundaries have changed, fire `change:range` event.\n    //\n    if (result.root.rootName == '$graveyard') {\n      // If the range was moved to the graveyard root, set `deletionPosition`.\n      if (operation.type == 'remove') {\n        deletionPosition = operation.sourcePosition;\n      } else {\n        // Merge operation.\n        deletionPosition = operation.deletionPosition;\n      }\n    }\n\n    var oldRange = this.toRange();\n    this.start = result.start;\n    this.end = result.end;\n    this.fire('change:range', oldRange, {\n      deletionPosition: deletionPosition\n    });\n  } else if (contentChanged) {\n    // If range boundaries have not changed, but there was change inside the range, fire `change:content` event.\n    this.fire('change:content', this.toRange(), {\n      deletionPosition: deletionPosition\n    });\n  }\n} // Checks whether given operation changes something inside the range (even if it does not change boundaries).\n//\n// @private\n// @param {module:engine/model/range~Range} range Range to check.\n// @param {module:engine/model/operation/operation~Operation} operation Executed operation.\n// @returns {Boolean}\n\n\nfunction doesOperationChangeRangeContent(range, operation) {\n  switch (operation.type) {\n    case 'insert':\n      return range.containsPosition(operation.position);\n\n    case 'move':\n    case 'remove':\n    case 'reinsert':\n    case 'merge':\n      return range.containsPosition(operation.sourcePosition) || range.start.isEqual(operation.sourcePosition) || range.containsPosition(operation.targetPosition);\n\n    case 'split':\n      return range.containsPosition(operation.splitPosition) || range.containsPosition(operation.insertionPosition);\n  }\n\n  return false;\n}\n\nmix(LiveRange, EmitterMixin);","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/documentselection\n */\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport Selection from './selection';\nimport LiveRange from './liverange';\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport toMap from '@ckeditor/ckeditor5-utils/src/tomap';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport log from '@ckeditor/ckeditor5-utils/src/log';\nimport uid from '@ckeditor/ckeditor5-utils/src/uid';\nvar storePrefix = 'selection:';\n/**\n * `DocumentSelection` is a special selection which is used as the\n * {@link module:engine/model/document~Document#selection document's selection}.\n * There can be only one instance of `DocumentSelection` per document.\n *\n * Document selection can only be changed by using the {@link module:engine/model/writer~Writer} instance\n * inside the {@link module:engine/model/model~Model#change `change()`} block, as it provides a secure way to modify model.\n *\n * `DocumentSelection` is automatically updated upon changes in the {@link module:engine/model/document~Document document}\n * to always contain valid ranges. Its attributes are inherited from the text unless set explicitly.\n *\n * Differences between {@link module:engine/model/selection~Selection} and `DocumentSelection` are:\n * * there is always a range in `DocumentSelection` - even if no ranges were added there is a \"default range\"\n * present in the selection,\n * * ranges added to this selection updates automatically when the document changes,\n * * attributes of `DocumentSelection` are updated automatically according to selection ranges.\n *\n * Since `DocumentSelection` uses {@link module:engine/model/liverange~LiveRange live ranges}\n * and is updated when {@link module:engine/model/document~Document document}\n * changes, it cannot be set on {@link module:engine/model/node~Node nodes}\n * that are inside {@link module:engine/model/documentfragment~DocumentFragment document fragment}.\n * If you need to represent a selection in document fragment,\n * use {@link module:engine/model/selection~Selection Selection class} instead.\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n */\n\nvar DocumentSelection =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an empty live selection for given {@link module:engine/model/document~Document}.\n   *\n   * @param {module:engine/model/document~Document} doc Document which owns this selection.\n   */\n  function DocumentSelection(doc) {\n    _classCallCheck(this, DocumentSelection);\n\n    /**\n     * Selection used internally by that class (`DocumentSelection` is a proxy to that selection).\n     *\n     * @protected\n     */\n    this._selection = new LiveSelection(doc);\n\n    this._selection.delegate('change:range').to(this);\n\n    this._selection.delegate('change:attribute').to(this);\n  }\n  /**\n   * Returns whether the selection is collapsed. Selection is collapsed when there is exactly one range which is\n   * collapsed.\n   *\n   * @readonly\n   * @type {Boolean}\n   */\n\n\n  _createClass(DocumentSelection, [{\n    key: \"getRanges\",\n\n    /**\n     * Returns an iterable that iterates over copies of selection ranges.\n     *\n     * @returns {Iterable.<module:engine/model/range~Range>}\n     */\n    value: function getRanges() {\n      return this._selection.getRanges();\n    }\n    /**\n     * Returns the first position in the selection.\n     * First position is the position that {@link module:engine/model/position~Position#isBefore is before}\n     * any other position in the selection.\n     *\n     * Returns `null` if there are no ranges in selection.\n     *\n     * @returns {module:engine/model/position~Position|null}\n     */\n\n  }, {\n    key: \"getFirstPosition\",\n    value: function getFirstPosition() {\n      return this._selection.getFirstPosition();\n    }\n    /**\n     * Returns the last position in the selection.\n     * Last position is the position that {@link module:engine/model/position~Position#isAfter is after}\n     * any other position in the selection.\n     *\n     * Returns `null` if there are no ranges in selection.\n     *\n     * @returns {module:engine/model/position~Position|null}\n     */\n\n  }, {\n    key: \"getLastPosition\",\n    value: function getLastPosition() {\n      return this._selection.getLastPosition();\n    }\n    /**\n     * Returns a copy of the first range in the selection.\n     * First range is the one which {@link module:engine/model/range~Range#start start} position\n     * {@link module:engine/model/position~Position#isBefore is before} start position of all other ranges\n     * (not to confuse with the first range added to the selection).\n     *\n     * Returns `null` if there are no ranges in selection.\n     *\n     * @returns {module:engine/model/range~Range|null}\n     */\n\n  }, {\n    key: \"getFirstRange\",\n    value: function getFirstRange() {\n      return this._selection.getFirstRange();\n    }\n    /**\n     * Returns a copy of the last range in the selection.\n     * Last range is the one which {@link module:engine/model/range~Range#end end} position\n     * {@link module:engine/model/position~Position#isAfter is after} end position of all other ranges (not to confuse with the range most\n     * recently added to the selection).\n     *\n     * Returns `null` if there are no ranges in selection.\n     *\n     * @returns {module:engine/model/range~Range|null}\n     */\n\n  }, {\n    key: \"getLastRange\",\n    value: function getLastRange() {\n      return this._selection.getLastRange();\n    }\n    /**\n     * Gets elements of type \"block\" touched by the selection.\n     *\n     * This method's result can be used for example to apply block styling to all blocks covered by this selection.\n     *\n     * **Note:** `getSelectedBlocks()` always returns the deepest block.\n     *\n     * In this case the function will return exactly all 3 paragraphs:\n     *\n     *\t\t<paragraph>[a</paragraph>\n     *\t\t<quote>\n     *\t\t\t<paragraph>b</paragraph>\n     *\t\t</quote>\n     *\t\t<paragraph>c]d</paragraph>\n     *\n     * In this case the paragraph will also be returned, despite the collapsed selection:\n     *\n     *\t\t<paragraph>[]a</paragraph>\n     *\n     * **Special case**: If a selection ends at the beginning of a block, that block is not returned as from user perspective\n     * this block wasn't selected. See [#984](https://github.com/ckeditor/ckeditor5-engine/issues/984) for more details.\n     *\n     *\t\t<paragraph>[a</paragraph>\n     *\t\t<paragraph>b</paragraph>\n     *\t\t<paragraph>]c</paragraph> // this block will not be returned\n     *\n     * @returns {Iterable.<module:engine/model/element~Element>}\n     */\n\n  }, {\n    key: \"getSelectedBlocks\",\n    value: function getSelectedBlocks() {\n      return this._selection.getSelectedBlocks();\n    }\n    /**\n     * Returns blocks that aren't nested in other selected blocks.\n     *\n     * In this case the method will return blocks A, B and E because C & D are children of block B:\n     *\n     *\t\t[<blockA></blockA>\n     *\t\t<blockB>\n     *\t\t\t<blockC></blockC>\n     *\t\t\t<blockD></blockD>\n     *\t\t</blockB>\n     *\t\t<blockE></blockE>]\n     *\n     * **Note:** To get all selected blocks use {@link #getSelectedBlocks `getSelectedBlocks()`}.\n     *\n     * @returns {Iterable.<module:engine/model/element~Element>}\n     */\n\n  }, {\n    key: \"getTopMostBlocks\",\n    value: function getTopMostBlocks() {\n      return this._selection.getTopMostBlocks();\n    }\n    /**\n     * Returns the selected element. {@link module:engine/model/element~Element Element} is considered as selected if there is only\n     * one range in the selection, and that range contains exactly one element.\n     * Returns `null` if there is no selected element.\n     *\n     * @returns {module:engine/model/element~Element|null}\n     */\n\n  }, {\n    key: \"getSelectedElement\",\n    value: function getSelectedElement() {\n      return this._selection.getSelectedElement();\n    }\n    /**\n     * Checks whether the selection contains the entire content of the given element. This means that selection must start\n     * at a position {@link module:engine/model/position~Position#isTouching touching} the element's start and ends at position\n     * touching the element's end.\n     *\n     * By default, this method will check whether the entire content of the selection's current root is selected.\n     * Useful to check if e.g. the user has just pressed <kbd>Ctrl</kbd> + <kbd>A</kbd>.\n     *\n     * @param {module:engine/model/element~Element} [element=this.anchor.root]\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"containsEntireContent\",\n    value: function containsEntireContent(element) {\n      return this._selection.containsEntireContent(element);\n    }\n    /**\n     * Unbinds all events previously bound by document selection.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._selection.destroy();\n    }\n    /**\n     * Returns iterable that iterates over this selection's attribute keys.\n     *\n     * @returns {Iterable.<String>}\n     */\n\n  }, {\n    key: \"getAttributeKeys\",\n    value: function getAttributeKeys() {\n      return this._selection.getAttributeKeys();\n    }\n    /**\n     * Returns iterable that iterates over this selection's attributes.\n     *\n     * Attributes are returned as arrays containing two items. First one is attribute key and second is attribute value.\n     * This format is accepted by native `Map` object and also can be passed in `Node` constructor.\n     *\n     * @returns {Iterable.<*>}\n     */\n\n  }, {\n    key: \"getAttributes\",\n    value: function getAttributes() {\n      return this._selection.getAttributes();\n    }\n    /**\n     * Gets an attribute value for given key or `undefined` if that attribute is not set on the selection.\n     *\n     * @param {String} key Key of attribute to look for.\n     * @returns {*} Attribute value or `undefined`.\n     */\n\n  }, {\n    key: \"getAttribute\",\n    value: function getAttribute(key) {\n      return this._selection.getAttribute(key);\n    }\n    /**\n     * Checks if the selection has an attribute for given key.\n     *\n     * @param {String} key Key of attribute to check.\n     * @returns {Boolean} `true` if attribute with given key is set on selection, `false` otherwise.\n     */\n\n  }, {\n    key: \"hasAttribute\",\n    value: function hasAttribute(key) {\n      return this._selection.hasAttribute(key);\n    }\n    /**\n     * Refreshes selection attributes and markers according to the current position in the model.\n     */\n\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      this._selection._updateMarkers();\n\n      this._selection._updateAttributes(false);\n    }\n    /**\n     * Checks whether object is of given type following the convention set by\n     * {@link module:engine/model/node~Node#is `Node#is()`}.\n     *\n     *\t\tconst selection = new DocumentSelection( ... );\n     *\n     *\t\tselection.is( 'selection' ); // true\n     *\t\tselection.is( 'documentSelection' ); // true\n     *\t\tselection.is( 'node' ); // false\n     *\t\tselection.is( 'element' ); // false\n     *\n     * @param {String} type\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"is\",\n    value: function is(type) {\n      return type == 'selection' || type == 'documentSelection';\n    }\n    /**\n     * Moves {@link module:engine/model/documentselection~DocumentSelection#focus} to the specified location.\n     * Should be used only within the {@link module:engine/model/writer~Writer#setSelectionFocus} method.\n     *\n     * The location can be specified in the same form as\n     * {@link module:engine/model/writer~Writer#createPositionAt writer.createPositionAt()} parameters.\n     *\n     * @see module:engine/model/writer~Writer#setSelectionFocus\n     * @protected\n     * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n     * first parameter is a {@link module:engine/model/item~Item model item}.\n     */\n\n  }, {\n    key: \"_setFocus\",\n    value: function _setFocus(itemOrPosition, offset) {\n      this._selection.setFocus(itemOrPosition, offset);\n    }\n    /**\n     * Sets this selection's ranges and direction to the specified location based on the given\n     * {@link module:engine/model/selection~Selectable selectable}.\n     * Should be used only within the {@link module:engine/model/writer~Writer#setSelection} method.\n     *\n     * @see module:engine/model/writer~Writer#setSelection\n     * @protected\n     * @param {module:engine/model/selection~Selectable} selectable\n     * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n     * @param {Object} [options]\n     * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n     */\n\n  }, {\n    key: \"_setTo\",\n    value: function _setTo(selectable, placeOrOffset, options) {\n      this._selection.setTo(selectable, placeOrOffset, options);\n    }\n    /**\n     * Sets attribute on the selection. If attribute with the same key already is set, it's value is overwritten.\n     * Should be used only within the {@link module:engine/model/writer~Writer#setSelectionAttribute} method.\n     *\n     * @see module:engine/model/writer~Writer#setSelectionAttribute\n     * @protected\n     * @param {String} key Key of the attribute to set.\n     * @param {*} value Attribute value.\n     */\n\n  }, {\n    key: \"_setAttribute\",\n    value: function _setAttribute(key, value) {\n      this._selection.setAttribute(key, value);\n    }\n    /**\n     * Removes an attribute with given key from the selection.\n     * If the given attribute was set on the selection, fires the {@link module:engine/model/selection~Selection#event:change:range}\n     * event with removed attribute key.\n     * Should be used only within the {@link module:engine/model/writer~Writer#removeSelectionAttribute} method.\n     *\n     * @see module:engine/model/writer~Writer#removeSelectionAttribute\n     * @protected\n     * @param {String} key Key of the attribute to remove.\n     */\n\n  }, {\n    key: \"_removeAttribute\",\n    value: function _removeAttribute(key) {\n      this._selection.removeAttribute(key);\n    }\n    /**\n     * Returns an iterable that iterates through all selection attributes stored in current selection's parent.\n     *\n     * @protected\n     * @returns {Iterable.<*>}\n     */\n\n  }, {\n    key: \"_getStoredAttributes\",\n    value: function _getStoredAttributes() {\n      return this._selection._getStoredAttributes();\n    }\n    /**\n     * Temporarily changes the gravity of the selection from the left to the right.\n     *\n     * The gravity defines from which direction the selection inherits its attributes. If it's the default left\n     * gravity, the selection (after being moved by the the user) inherits attributes from its left hand side.\n     * This method allows to temporarily override this behavior by forcing the gravity to the right.\n     *\n     * It returns an unique identifier which is required to restore the gravity. It guarantees the symmetry\n     * of the process.\n     *\n     * @see module:engine/model/writer~Writer#overrideSelectionGravity\n     * @protected\n     * @returns {String} The unique id which allows restoring the gravity.\n     */\n\n  }, {\n    key: \"_overrideGravity\",\n    value: function _overrideGravity() {\n      return this._selection.overrideGravity();\n    }\n    /**\n     * Restores the {@link ~DocumentSelection#_overrideGravity overridden gravity}.\n     *\n     * Restoring the gravity is only possible using the unique identifier returned by\n     * {@link ~DocumentSelection#_overrideGravity}. Note that the gravity remains overridden as long as won't be restored\n     * the same number of times it was overridden.\n     *\n     * @see module:engine/model/writer~Writer#restoreSelectionGravity\n     * @protected\n     * @param {String} uid The unique id returned by {@link #_overrideGravity}.\n     */\n\n  }, {\n    key: \"_restoreGravity\",\n    value: function _restoreGravity(uid) {\n      this._selection.restoreGravity(uid);\n    }\n    /**\n     * Generates and returns an attribute key for selection attributes store, basing on original attribute key.\n     *\n     * @protected\n     * @param {String} key Attribute key to convert.\n     * @returns {String} Converted attribute key, applicable for selection store.\n     */\n\n  }, {\n    key: \"isCollapsed\",\n    get: function get() {\n      return this._selection.isCollapsed;\n    }\n    /**\n     * Selection anchor. Anchor may be described as a position where the most recent part of the selection starts.\n     * Together with {@link #focus} they define the direction of selection, which is important\n     * when expanding/shrinking selection. Anchor is always {@link module:engine/model/range~Range#start start} or\n     * {@link module:engine/model/range~Range#end end} position of the most recently added range.\n     *\n     * Is set to `null` if there are no ranges in selection.\n     *\n     * @see #focus\n     * @readonly\n     * @type {module:engine/model/position~Position|null}\n     */\n\n  }, {\n    key: \"anchor\",\n    get: function get() {\n      return this._selection.anchor;\n    }\n    /**\n     * Selection focus. Focus is a position where the selection ends.\n     *\n     * Is set to `null` if there are no ranges in selection.\n     *\n     * @see #anchor\n     * @readonly\n     * @type {module:engine/model/position~Position|null}\n     */\n\n  }, {\n    key: \"focus\",\n    get: function get() {\n      return this._selection.focus;\n    }\n    /**\n     * Returns number of ranges in selection.\n     *\n     * @readonly\n     * @type {Number}\n     */\n\n  }, {\n    key: \"rangeCount\",\n    get: function get() {\n      return this._selection.rangeCount;\n    }\n    /**\n     * Describes whether `Documentselection` has own range(s) set, or if it is defaulted to\n     * {@link module:engine/model/document~Document#_getDefaultRange document's default range}.\n     *\n     * @readonly\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"hasOwnRange\",\n    get: function get() {\n      return this._selection.hasOwnRange;\n    }\n    /**\n     * Specifies whether the {@link #focus}\n     * precedes {@link #anchor}.\n     *\n     * @readonly\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isBackward\",\n    get: function get() {\n      return this._selection.isBackward;\n    }\n    /**\n     * Describes whether the gravity is overridden (using {@link module:engine/model/writer~Writer#overrideSelectionGravity}) or not.\n     *\n     * Note that the gravity remains overridden as long as will not be restored the same number of times as it was overridden.\n     *\n     * @readonly\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isGravityOverridden\",\n    get: function get() {\n      return this._selection.isGravityOverridden;\n    }\n    /**\n     * A collection of selection markers.\n     * Marker is a selection marker when selection range is inside the marker range.\n     *\n     * @readonly\n     * @type {module:utils/collection~Collection.<module:engine/model/markercollection~Marker>}\n     */\n\n  }, {\n    key: \"markers\",\n    get: function get() {\n      return this._selection.markers;\n    }\n    /**\n     * Used for the compatibility with the {@link module:engine/model/selection~Selection#isEqual} method.\n     *\n     * @protected\n     */\n\n  }, {\n    key: \"_ranges\",\n    get: function get() {\n      return this._selection._ranges;\n    }\n  }], [{\n    key: \"_getStoreAttributeKey\",\n    value: function _getStoreAttributeKey(key) {\n      return storePrefix + key;\n    }\n    /**\n     * Checks whether the given attribute key is an attribute stored on an element.\n     *\n     * @protected\n     * @param {String} key\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"_isStoreAttributeKey\",\n    value: function _isStoreAttributeKey(key) {\n      return key.startsWith(storePrefix);\n    }\n  }]);\n\n  return DocumentSelection;\n}();\n\nexport { DocumentSelection as default };\nmix(DocumentSelection, EmitterMixin);\n/**\n * Fired when selection range(s) changed.\n *\n * @event change:range\n * @param {Boolean} directChange In case of {@link module:engine/model/selection~Selection} class it is always set\n * to `true` which indicates that the selection change was caused by a direct use of selection's API.\n * The {@link module:engine/model/documentselection~DocumentSelection}, however, may change because its position\n * was directly changed through the {@link module:engine/model/writer~Writer writer} or because its position was\n * changed because the structure of the model has been changed (which means an indirect change).\n * The indirect change does not occur in case of normal (detached) selections because they are \"static\" (as \"not live\")\n * which mean that they are not updated once the document changes.\n */\n\n/**\n * Fired when selection attribute changed.\n *\n * @event change:attribute\n * @param {Boolean} directChange In case of {@link module:engine/model/selection~Selection} class it is always set\n * to `true` which indicates that the selection change was caused by a direct use of selection's API.\n * The {@link module:engine/model/documentselection~DocumentSelection}, however, may change because its attributes\n * were directly changed through the {@link module:engine/model/writer~Writer writer} or because its position was\n * changed in the model and its attributes were refreshed (which means an indirect change).\n * The indirect change does not occur in case of normal (detached) selections because they are \"static\" (as \"not live\")\n * which mean that they are not updated once the document changes.\n * @param {Array.<String>} attributeKeys Array containing keys of attributes that changed.\n */\n// `LiveSelection` is used internally by {@link module:engine/model/documentselection~DocumentSelection} and shouldn't be used directly.\n//\n// LiveSelection` is automatically updated upon changes in the {@link module:engine/model/document~Document document}\n// to always contain valid ranges. Its attributes are inherited from the text unless set explicitly.\n//\n// Differences between {@link module:engine/model/selection~Selection} and `LiveSelection` are:\n// * there is always a range in `LiveSelection` - even if no ranges were added there is a \"default range\"\n// present in the selection,\n// * ranges added to this selection updates automatically when the document changes,\n// * attributes of `LiveSelection` are updated automatically according to selection ranges.\n//\n// @extends module:engine/model/selection~Selection\n//\n\nvar LiveSelection =\n/*#__PURE__*/\nfunction (_Selection) {\n  _inherits(LiveSelection, _Selection);\n\n  // Creates an empty live selection for given {@link module:engine/model/document~Document}.\n  // @param {module:engine/model/document~Document} doc Document which owns this selection.\n  function LiveSelection(doc) {\n    var _this;\n\n    _classCallCheck(this, LiveSelection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LiveSelection).call(this)); // List of selection markers.\n    // Marker is a selection marker when selection range is inside the marker range.\n    //\n    // @type {module:utils/collection~Collection}\n\n    _this.markers = new Collection({\n      idProperty: 'name'\n    }); // Document which owns this selection.\n    //\n    // @protected\n    // @member {module:engine/model/model~Model}\n\n    _this._model = doc.model; // Document which owns this selection.\n    //\n    // @protected\n    // @member {module:engine/model/document~Document}\n\n    _this._document = doc; // Keeps mapping of attribute name to priority with which the attribute got modified (added/changed/removed)\n    // last time. Possible values of priority are: `'low'` and `'normal'`.\n    //\n    // Priorities are used by internal `LiveSelection` mechanisms. All attributes set using `LiveSelection`\n    // attributes API are set with `'normal'` priority.\n    //\n    // @private\n    // @member {Map} module:engine/model/liveselection~LiveSelection#_attributePriority\n\n    _this._attributePriority = new Map(); // Contains data required to fix ranges which have been moved to the graveyard.\n    // @private\n    // @member {Array} module:engine/model/liveselection~LiveSelection#_fixGraveyardRangesData\n\n    _this._fixGraveyardRangesData = []; // Flag that informs whether the selection ranges have changed. It is changed on true when `LiveRange#change:range` event is fired.\n    // @private\n    // @member {Array} module:engine/model/liveselection~LiveSelection#_hasChangedRange\n\n    _this._hasChangedRange = false; // Each overriding gravity adds an UID to the set and each removal removes it.\n    // Gravity is overridden when there's at least one UID in the set.\n    // Gravity is restored when the set is empty.\n    // This is to prevent conflicts when gravity is overridden by more than one feature at the same time.\n    // @private\n    // @type {Set}\n\n    _this._overriddenGravityRegister = new Set(); // Ensure selection is correct after each operation.\n\n    _this.listenTo(_this._model, 'applyOperation', function (evt, args) {\n      var operation = args[0];\n\n      if (!operation.isDocumentOperation || operation.type == 'marker' || operation.type == 'rename' || operation.type == 'noop') {\n        return;\n      }\n\n      while (_this._fixGraveyardRangesData.length) {\n        var _this$_fixGraveyardRa = _this._fixGraveyardRangesData.shift(),\n            liveRange = _this$_fixGraveyardRa.liveRange,\n            sourcePosition = _this$_fixGraveyardRa.sourcePosition;\n\n        _this._fixGraveyardSelection(liveRange, sourcePosition);\n      }\n\n      if (_this._hasChangedRange) {\n        _this._hasChangedRange = false;\n\n        _this.fire('change:range', {\n          directChange: false\n        });\n      }\n    }, {\n      priority: 'lowest'\n    }); // Ensure selection is correct and up to date after each range change.\n\n\n    _this.on('change:range', function () {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _this.getRanges()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var range = _step.value;\n\n          if (!_this._document._validateSelectionRange(range)) {\n            /**\n             * Range from {@link module:engine/model/documentselection~DocumentSelection document selection}\n             * starts or ends at incorrect position.\n             *\n             * @error document-selection-wrong-position\n             * @param {module:engine/model/range~Range} range\n             */\n            throw new CKEditorError('document-selection-wrong-position: Range from document selection starts or ends at incorrect position.', _assertThisInitialized(_this), {\n              range: range\n            });\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }); // Update markers data stored by the selection after each marker change.\n\n\n    _this.listenTo(_this._model.markers, 'update', function () {\n      return _this._updateMarkers();\n    }); // Ensure selection is up to date after each change block.\n\n\n    _this.listenTo(_this._document, 'change', function (evt, batch) {\n      clearAttributesStoredInElement(_this._model, batch);\n    });\n\n    return _this;\n  }\n\n  _createClass(LiveSelection, [{\n    key: \"destroy\",\n    // Unbinds all events previously bound by live selection.\n    value: function destroy() {\n      for (var i = 0; i < this._ranges.length; i++) {\n        this._ranges[i].detach();\n      }\n\n      this.stopListening();\n    }\n  }, {\n    key: \"getRanges\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function getRanges() {\n      return regeneratorRuntime.wrap(function getRanges$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!this._ranges.length) {\n                _context.next = 4;\n                break;\n              }\n\n              return _context.delegateYield(_get(_getPrototypeOf(LiveSelection.prototype), \"getRanges\", this).call(this), \"t0\", 2);\n\n            case 2:\n              _context.next = 6;\n              break;\n\n            case 4:\n              _context.next = 6;\n              return this._document._getDefaultRange();\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, getRanges, this);\n    })\n  }, {\n    key: \"getFirstRange\",\n    value: function getFirstRange() {\n      return _get(_getPrototypeOf(LiveSelection.prototype), \"getFirstRange\", this).call(this) || this._document._getDefaultRange();\n    }\n  }, {\n    key: \"getLastRange\",\n    value: function getLastRange() {\n      return _get(_getPrototypeOf(LiveSelection.prototype), \"getLastRange\", this).call(this) || this._document._getDefaultRange();\n    }\n  }, {\n    key: \"setTo\",\n    value: function setTo(selectable, optionsOrPlaceOrOffset, options) {\n      _get(_getPrototypeOf(LiveSelection.prototype), \"setTo\", this).call(this, selectable, optionsOrPlaceOrOffset, options);\n\n      this._updateAttributes(true);\n    }\n  }, {\n    key: \"setFocus\",\n    value: function setFocus(itemOrPosition, offset) {\n      _get(_getPrototypeOf(LiveSelection.prototype), \"setFocus\", this).call(this, itemOrPosition, offset);\n\n      this._updateAttributes(true);\n    }\n  }, {\n    key: \"setAttribute\",\n    value: function setAttribute(key, value) {\n      if (this._setAttribute(key, value)) {\n        // Fire event with exact data.\n        var attributeKeys = [key];\n        this.fire('change:attribute', {\n          attributeKeys: attributeKeys,\n          directChange: true\n        });\n      }\n    }\n  }, {\n    key: \"removeAttribute\",\n    value: function removeAttribute(key) {\n      if (this._removeAttribute(key)) {\n        // Fire event with exact data.\n        var attributeKeys = [key];\n        this.fire('change:attribute', {\n          attributeKeys: attributeKeys,\n          directChange: true\n        });\n      }\n    }\n  }, {\n    key: \"overrideGravity\",\n    value: function overrideGravity() {\n      var overrideUid = uid(); // Remember that another overriding has been requested. It will need to be removed\n      // before the gravity is to be restored.\n\n      this._overriddenGravityRegister.add(overrideUid);\n\n      if (this._overriddenGravityRegister.size === 1) {\n        this._updateAttributes(true);\n      }\n\n      return overrideUid;\n    }\n  }, {\n    key: \"restoreGravity\",\n    value: function restoreGravity(uid) {\n      if (!this._overriddenGravityRegister.has(uid)) {\n        /**\n         * Restoring gravity for an unknown UID is not possible. Make sure you are using a correct\n         * UID obtained from the {@link module:engine/model/writer~Writer#overrideSelectionGravity} to restore.\n         *\n         * @error document-selection-gravity-wrong-restore\n         * @param {String} uid The unique identifier returned by\n         * {@link module:engine/model/documentselection~DocumentSelection#_overrideGravity}.\n         */\n        throw new CKEditorError('document-selection-gravity-wrong-restore: Attempting to restore the selection gravity for an unknown UID.', this, {\n          uid: uid\n        });\n      }\n\n      this._overriddenGravityRegister[\"delete\"](uid); // Restore gravity only when all overriding have been restored.\n\n\n      if (!this.isGravityOverridden) {\n        this._updateAttributes(true);\n      }\n    }\n  }, {\n    key: \"_popRange\",\n    value: function _popRange() {\n      this._ranges.pop().detach();\n    }\n  }, {\n    key: \"_pushRange\",\n    value: function _pushRange(range) {\n      var liveRange = this._prepareRange(range); // `undefined` is returned when given `range` is in graveyard root.\n\n\n      if (liveRange) {\n        this._ranges.push(liveRange);\n      }\n    } // Prepares given range to be added to selection. Checks if it is correct,\n    // converts it to {@link module:engine/model/liverange~LiveRange LiveRange}\n    // and sets listeners listening to the range's change event.\n    //\n    // @private\n    // @param {module:engine/model/range~Range} range\n\n  }, {\n    key: \"_prepareRange\",\n    value: function _prepareRange(range) {\n      var _this2 = this;\n\n      this._checkRange(range);\n\n      if (range.root == this._document.graveyard) {\n        /**\n         * Trying to add a Range that is in the graveyard root. Range rejected.\n         *\n         * @warning model-selection-range-in-graveyard\n         */\n        log.warn('model-selection-range-in-graveyard: Trying to add a Range that is in the graveyard root. Range rejected.');\n        return;\n      }\n\n      var liveRange = LiveRange.fromRange(range);\n      liveRange.on('change:range', function (evt, oldRange, data) {\n        _this2._hasChangedRange = true; // If `LiveRange` is in whole moved to the graveyard, save necessary data. It will be fixed on `Model#applyOperation` event.\n\n        if (liveRange.root == _this2._document.graveyard) {\n          _this2._fixGraveyardRangesData.push({\n            liveRange: liveRange,\n            sourcePosition: data.deletionPosition\n          });\n        }\n      });\n      return liveRange;\n    }\n  }, {\n    key: \"_updateMarkers\",\n    value: function _updateMarkers() {\n      var markers = [];\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this._model.markers[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var marker = _step2.value;\n          var markerRange = marker.getRange();\n          var _iteratorNormalCompletion3 = true;\n          var _didIteratorError3 = false;\n          var _iteratorError3 = undefined;\n\n          try {\n            for (var _iterator3 = this.getRanges()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n              var selectionRange = _step3.value;\n\n              if (markerRange.containsRange(selectionRange, !selectionRange.isCollapsed)) {\n                markers.push(marker);\n              }\n            }\n          } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n                _iterator3[\"return\"]();\n              }\n            } finally {\n              if (_didIteratorError3) {\n                throw _iteratorError3;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      for (var _i = 0, _markers = markers; _i < _markers.length; _i++) {\n        var _marker = _markers[_i];\n\n        if (!this.markers.has(_marker)) {\n          this.markers.add(_marker);\n        }\n      }\n\n      for (var _i2 = 0, _Array$from = Array.from(this.markers); _i2 < _Array$from.length; _i2++) {\n        var _marker2 = _Array$from[_i2];\n\n        if (!markers.includes(_marker2)) {\n          this.markers.remove(_marker2);\n        }\n      }\n    } // Updates this selection attributes according to its ranges and the {@link module:engine/model/document~Document model document}.\n    //\n    // @protected\n    // @param {Boolean} clearAll\n    // @fires change:attribute\n\n  }, {\n    key: \"_updateAttributes\",\n    value: function _updateAttributes(clearAll) {\n      var newAttributes = toMap(this._getSurroundingAttributes());\n      var oldAttributes = toMap(this.getAttributes());\n\n      if (clearAll) {\n        // If `clearAll` remove all attributes and reset priorities.\n        this._attributePriority = new Map();\n        this._attrs = new Map();\n      } else {\n        // If not, remove only attributes added with `low` priority.\n        var _iteratorNormalCompletion4 = true;\n        var _didIteratorError4 = false;\n        var _iteratorError4 = undefined;\n\n        try {\n          for (var _iterator4 = this._attributePriority[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n            var _step4$value = _slicedToArray(_step4.value, 2),\n                key = _step4$value[0],\n                priority = _step4$value[1];\n\n            if (priority == 'low') {\n              this._attrs[\"delete\"](key);\n\n              this._attributePriority[\"delete\"](key);\n            }\n          }\n        } catch (err) {\n          _didIteratorError4 = true;\n          _iteratorError4 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion4 && _iterator4[\"return\"] != null) {\n              _iterator4[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError4) {\n              throw _iteratorError4;\n            }\n          }\n        }\n      }\n\n      this._setAttributesTo(newAttributes); // Let's evaluate which attributes really changed.\n\n\n      var changed = []; // First, loop through all attributes that are set on selection right now.\n      // Check which of them are different than old attributes.\n\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = this.getAttributes()[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var _step5$value = _slicedToArray(_step5.value, 2),\n              newKey = _step5$value[0],\n              newValue = _step5$value[1];\n\n          if (!oldAttributes.has(newKey) || oldAttributes.get(newKey) !== newValue) {\n            changed.push(newKey);\n          }\n        } // Then, check which of old attributes got removed.\n\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5[\"return\"] != null) {\n            _iterator5[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = oldAttributes[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var _step6$value = _slicedToArray(_step6.value, 1),\n              oldKey = _step6$value[0];\n\n          if (!this.hasAttribute(oldKey)) {\n            changed.push(oldKey);\n          }\n        } // Fire event with exact data (fire only if anything changed).\n\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6[\"return\"] != null) {\n            _iterator6[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n\n      if (changed.length > 0) {\n        this.fire('change:attribute', {\n          attributeKeys: changed,\n          directChange: false\n        });\n      }\n    } // Internal method for setting `LiveSelection` attribute. Supports attribute priorities (through `directChange`\n    // parameter).\n    //\n    // @private\n    // @param {String} key Attribute key.\n    // @param {*} value Attribute value.\n    // @param {Boolean} [directChange=true] `true` if the change is caused by `Selection` API, `false` if change\n    // is caused by `Batch` API.\n    // @returns {Boolean} Whether value has changed.\n\n  }, {\n    key: \"_setAttribute\",\n    value: function _setAttribute(key, value) {\n      var directChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var priority = directChange ? 'normal' : 'low';\n\n      if (priority == 'low' && this._attributePriority.get(key) == 'normal') {\n        // Priority too low.\n        return false;\n      }\n\n      var oldValue = _get(_getPrototypeOf(LiveSelection.prototype), \"getAttribute\", this).call(this, key); // Don't do anything if value has not changed.\n\n\n      if (oldValue === value) {\n        return false;\n      }\n\n      this._attrs.set(key, value); // Update priorities map.\n\n\n      this._attributePriority.set(key, priority);\n\n      return true;\n    } // Internal method for removing `LiveSelection` attribute. Supports attribute priorities (through `directChange`\n    // parameter).\n    //\n    // NOTE: Even if attribute is not present in the selection but is provided to this method, it's priority will\n    // be changed according to `directChange` parameter.\n    //\n    // @private\n    // @param {String} key Attribute key.\n    // @param {Boolean} [directChange=true] `true` if the change is caused by `Selection` API, `false` if change\n    // is caused by `Batch` API.\n    // @returns {Boolean} Whether attribute was removed. May not be true if such attributes didn't exist or the\n    // existing attribute had higher priority.\n\n  }, {\n    key: \"_removeAttribute\",\n    value: function _removeAttribute(key) {\n      var directChange = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var priority = directChange ? 'normal' : 'low';\n\n      if (priority == 'low' && this._attributePriority.get(key) == 'normal') {\n        // Priority too low.\n        return false;\n      } // Update priorities map.\n\n\n      this._attributePriority.set(key, priority); // Don't do anything if value has not changed.\n\n\n      if (!_get(_getPrototypeOf(LiveSelection.prototype), \"hasAttribute\", this).call(this, key)) {\n        return false;\n      }\n\n      this._attrs[\"delete\"](key);\n\n      return true;\n    } // Internal method for setting multiple `LiveSelection` attributes. Supports attribute priorities (through\n    // `directChange` parameter).\n    //\n    // @private\n    // @param {Map.<String,*>} attrs Iterable object containing attributes to be set.\n    // @returns {Set.<String>} Changed attribute keys.\n\n  }, {\n    key: \"_setAttributesTo\",\n    value: function _setAttributesTo(attrs) {\n      var changed = new Set();\n      var _iteratorNormalCompletion7 = true;\n      var _didIteratorError7 = false;\n      var _iteratorError7 = undefined;\n\n      try {\n        for (var _iterator7 = this.getAttributes()[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n          var _step7$value = _slicedToArray(_step7.value, 2),\n              oldKey = _step7$value[0],\n              oldValue = _step7$value[1];\n\n          // Do not remove attribute if attribute with same key and value is about to be set.\n          if (attrs.get(oldKey) === oldValue) {\n            continue;\n          } // All rest attributes will be removed so changed attributes won't change .\n\n\n          this._removeAttribute(oldKey, false);\n        }\n      } catch (err) {\n        _didIteratorError7 = true;\n        _iteratorError7 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion7 && _iterator7[\"return\"] != null) {\n            _iterator7[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError7) {\n            throw _iteratorError7;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion8 = true;\n      var _didIteratorError8 = false;\n      var _iteratorError8 = undefined;\n\n      try {\n        for (var _iterator8 = attrs[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n          var _step8$value = _slicedToArray(_step8.value, 2),\n              key = _step8$value[0],\n              value = _step8$value[1];\n\n          // Attribute may not be set because of attributes or because same key/value is already added.\n          var gotAdded = this._setAttribute(key, value, false);\n\n          if (gotAdded) {\n            changed.add(key);\n          }\n        }\n      } catch (err) {\n        _didIteratorError8 = true;\n        _iteratorError8 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion8 && _iterator8[\"return\"] != null) {\n            _iterator8[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError8) {\n            throw _iteratorError8;\n          }\n        }\n      }\n\n      return changed;\n    } // Returns an iterable that iterates through all selection attributes stored in current selection's parent.\n    //\n    // @protected\n    // @returns {Iterable.<*>}\n\n  }, {\n    key: \"_getStoredAttributes\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _getStoredAttributes() {\n      var selectionParent, _iteratorNormalCompletion9, _didIteratorError9, _iteratorError9, _iterator9, _step9, key, realKey;\n\n      return regeneratorRuntime.wrap(function _getStoredAttributes$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              selectionParent = this.getFirstPosition().parent;\n\n              if (!(this.isCollapsed && selectionParent.isEmpty)) {\n                _context2.next = 30;\n                break;\n              }\n\n              _iteratorNormalCompletion9 = true;\n              _didIteratorError9 = false;\n              _iteratorError9 = undefined;\n              _context2.prev = 5;\n              _iterator9 = selectionParent.getAttributeKeys()[Symbol.iterator]();\n\n            case 7:\n              if (_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done) {\n                _context2.next = 16;\n                break;\n              }\n\n              key = _step9.value;\n\n              if (!key.startsWith(storePrefix)) {\n                _context2.next = 13;\n                break;\n              }\n\n              realKey = key.substr(storePrefix.length);\n              _context2.next = 13;\n              return [realKey, selectionParent.getAttribute(key)];\n\n            case 13:\n              _iteratorNormalCompletion9 = true;\n              _context2.next = 7;\n              break;\n\n            case 16:\n              _context2.next = 22;\n              break;\n\n            case 18:\n              _context2.prev = 18;\n              _context2.t0 = _context2[\"catch\"](5);\n              _didIteratorError9 = true;\n              _iteratorError9 = _context2.t0;\n\n            case 22:\n              _context2.prev = 22;\n              _context2.prev = 23;\n\n              if (!_iteratorNormalCompletion9 && _iterator9[\"return\"] != null) {\n                _iterator9[\"return\"]();\n              }\n\n            case 25:\n              _context2.prev = 25;\n\n              if (!_didIteratorError9) {\n                _context2.next = 28;\n                break;\n              }\n\n              throw _iteratorError9;\n\n            case 28:\n              return _context2.finish(25);\n\n            case 29:\n              return _context2.finish(22);\n\n            case 30:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _getStoredAttributes, this, [[5, 18, 22, 30], [23,, 25, 29]]);\n    }) // Checks model text nodes that are closest to the selection's first position and returns attributes of first\n    // found element. If there are no text nodes in selection's first position parent, it returns selection\n    // attributes stored in that parent.\n    //\n    // @private\n    // @returns {Iterable.<*>} Collection of attributes.\n\n  }, {\n    key: \"_getSurroundingAttributes\",\n    value: function _getSurroundingAttributes() {\n      var position = this.getFirstPosition();\n      var schema = this._model.schema;\n      var attrs = null;\n\n      if (!this.isCollapsed) {\n        // 1. If selection is a range...\n        var range = this.getFirstRange(); // ...look for a first character node in that range and take attributes from it.\n\n        var _iteratorNormalCompletion10 = true;\n        var _didIteratorError10 = false;\n        var _iteratorError10 = undefined;\n\n        try {\n          for (var _iterator10 = range[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n            var value = _step10.value;\n\n            // If the item is an object, we don't want to get attributes from its children.\n            if (value.item.is('element') && schema.isObject(value.item)) {\n              break;\n            }\n\n            if (value.type == 'text') {\n              attrs = value.item.getAttributes();\n              break;\n            }\n          }\n        } catch (err) {\n          _didIteratorError10 = true;\n          _iteratorError10 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion10 && _iterator10[\"return\"] != null) {\n              _iterator10[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError10) {\n              throw _iteratorError10;\n            }\n          }\n        }\n      } else {\n        // 2. If the selection is a caret or the range does not contain a character node...\n        var nodeBefore = position.textNode ? position.textNode : position.nodeBefore;\n        var nodeAfter = position.textNode ? position.textNode : position.nodeAfter; // When gravity is overridden then don't take node before into consideration.\n\n        if (!this.isGravityOverridden) {\n          // ...look at the node before caret and take attributes from it if it is a character node.\n          attrs = getAttrsIfCharacter(nodeBefore);\n        } // 3. If not, look at the node after caret...\n\n\n        if (!attrs) {\n          attrs = getAttrsIfCharacter(nodeAfter);\n        } // 4. If not, try to find the first character on the left, that is in the same node.\n        // When gravity is overridden then don't take node before into consideration.\n\n\n        if (!this.isGravityOverridden && !attrs) {\n          var node = nodeBefore;\n\n          while (node && !attrs) {\n            node = node.previousSibling;\n            attrs = getAttrsIfCharacter(node);\n          }\n        } // 5. If not found, try to find the first character on the right, that is in the same node.\n\n\n        if (!attrs) {\n          var _node = nodeAfter;\n\n          while (_node && !attrs) {\n            _node = _node.nextSibling;\n            attrs = getAttrsIfCharacter(_node);\n          }\n        } // 6. If not found, selection should retrieve attributes from parent.\n\n\n        if (!attrs) {\n          attrs = this._getStoredAttributes();\n        }\n      }\n\n      return attrs;\n    } // Fixes a selection range after it ends up in graveyard root.\n    //\n    // @private\n    // @param {module:engine/model/liverange~LiveRange} liveRange The range from selection, that ended up in the graveyard root.\n    // @param {module:engine/model/position~Position} removedRangeStart Start position of a range which was removed.\n\n  }, {\n    key: \"_fixGraveyardSelection\",\n    value: function _fixGraveyardSelection(liveRange, removedRangeStart) {\n      // The start of the removed range is the closest position to the `liveRange` - the original selection range.\n      // This is a good candidate for a fixed selection range.\n      var positionCandidate = removedRangeStart.clone(); // Find a range that is a correct selection range and is closest to the start of removed range.\n\n      var selectionRange = this._model.schema.getNearestSelectionRange(positionCandidate); // Remove the old selection range before preparing and adding new selection range. This order is important,\n      // because new range, in some cases, may intersect with old range (it depends on `getNearestSelectionRange()` result).\n\n\n      var index = this._ranges.indexOf(liveRange);\n\n      this._ranges.splice(index, 1);\n\n      liveRange.detach(); // If nearest valid selection range has been found - add it in the place of old range.\n\n      if (selectionRange) {\n        // Check the range, convert it to live range, bind events, etc.\n        var newRange = this._prepareRange(selectionRange); // Add new range in the place of old range.\n\n\n        this._ranges.splice(index, 0, newRange);\n      } // If nearest valid selection range cannot be found - just removing the old range is fine.\n\n    }\n  }, {\n    key: \"isCollapsed\",\n    get: function get() {\n      var length = this._ranges.length;\n      return length === 0 ? this._document._getDefaultRange().isCollapsed : _get(_getPrototypeOf(LiveSelection.prototype), \"isCollapsed\", this);\n    }\n  }, {\n    key: \"anchor\",\n    get: function get() {\n      return _get(_getPrototypeOf(LiveSelection.prototype), \"anchor\", this) || this._document._getDefaultRange().start;\n    }\n  }, {\n    key: \"focus\",\n    get: function get() {\n      return _get(_getPrototypeOf(LiveSelection.prototype), \"focus\", this) || this._document._getDefaultRange().end;\n    }\n  }, {\n    key: \"rangeCount\",\n    get: function get() {\n      return this._ranges.length ? this._ranges.length : 1;\n    } // Describes whether `LiveSelection` has own range(s) set, or if it is defaulted to\n    // {@link module:engine/model/document~Document#_getDefaultRange document's default range}.\n    //\n    // @readonly\n    // @type {Boolean}\n\n  }, {\n    key: \"hasOwnRange\",\n    get: function get() {\n      return this._ranges.length > 0;\n    } // When set to `true` then selection attributes on node before the caret won't be taken\n    // into consideration while updating selection attributes.\n    //\n    // @protected\n    // @type {Boolean}\n\n  }, {\n    key: \"isGravityOverridden\",\n    get: function get() {\n      return !!this._overriddenGravityRegister.size;\n    }\n  }]);\n\n  return LiveSelection;\n}(Selection); // Helper function for {@link module:engine/model/liveselection~LiveSelection#_updateAttributes}.\n//\n// It takes model item, checks whether it is a text node (or text proxy) and, if so, returns it's attributes. If not, returns `null`.\n//\n// @param {module:engine/model/item~Item|null}  node\n// @returns {Boolean}\n\n\nfunction getAttrsIfCharacter(node) {\n  if (node instanceof TextProxy || node instanceof Text) {\n    return node.getAttributes();\n  }\n\n  return null;\n} // Removes selection attributes from element which is not empty anymore.\n//\n// @private\n// @param {module:engine/model/model~Model} model\n// @param {module:engine/model/batch~Batch} batch\n\n\nfunction clearAttributesStoredInElement(model, batch) {\n  var differ = model.document.differ;\n  var _iteratorNormalCompletion11 = true;\n  var _didIteratorError11 = false;\n  var _iteratorError11 = undefined;\n\n  try {\n    var _loop = function _loop() {\n      var entry = _step11.value;\n\n      if (entry.type != 'insert') {\n        return \"continue\";\n      }\n\n      var changeParent = entry.position.parent;\n      var isNoLongerEmpty = entry.length === changeParent.maxOffset;\n\n      if (isNoLongerEmpty) {\n        model.enqueueChange(batch, function (writer) {\n          var storedAttributes = Array.from(changeParent.getAttributeKeys()).filter(function (key) {\n            return key.startsWith(storePrefix);\n          });\n          var _iteratorNormalCompletion12 = true;\n          var _didIteratorError12 = false;\n          var _iteratorError12 = undefined;\n\n          try {\n            for (var _iterator12 = storedAttributes[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n              var key = _step12.value;\n              writer.removeAttribute(key, changeParent);\n            }\n          } catch (err) {\n            _didIteratorError12 = true;\n            _iteratorError12 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion12 && _iterator12[\"return\"] != null) {\n                _iterator12[\"return\"]();\n              }\n            } finally {\n              if (_didIteratorError12) {\n                throw _iteratorError12;\n              }\n            }\n          }\n        });\n      }\n    };\n\n    for (var _iterator11 = differ.getChanges()[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n      var _ret = _loop();\n\n      if (_ret === \"continue\") continue;\n    }\n  } catch (err) {\n    _didIteratorError11 = true;\n    _iteratorError11 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion11 && _iterator11[\"return\"] != null) {\n        _iterator11[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError11) {\n        throw _iteratorError11;\n      }\n    }\n  }\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/conversion/conversionhelpers\n */\n\n/**\n * Base class for conversion helpers.\n */\nvar ConversionHelpers =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a conversion helpers instance.\n   *\n   * @param {Array.<module:engine/conversion/downcastdispatcher~DowncastDispatcher|\n   * module:engine/conversion/upcastdispatcher~UpcastDispatcher>} dispatchers\n   */\n  function ConversionHelpers(dispatchers) {\n    _classCallCheck(this, ConversionHelpers);\n\n    this._dispatchers = dispatchers;\n  }\n  /**\n   * Registers a conversion helper.\n   *\n   * **Note**: See full usage example in the `{@link module:engine/conversion/conversion~Conversion#for conversion.for()}`\n   * method description.\n   *\n   * @param {Function} conversionHelper The function to be called on event.\n   * @returns {module:engine/conversion/downcasthelpers~DowncastHelpers|module:engine/conversion/upcasthelpers~UpcastHelpers}\n   */\n\n\n  _createClass(ConversionHelpers, [{\n    key: \"add\",\n    value: function add(conversionHelper) {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this._dispatchers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var dispatcher = _step.value;\n          conversionHelper(dispatcher);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return this;\n    }\n  }]);\n\n  return ConversionHelpers;\n}();\n\nexport { ConversionHelpers as default };","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nexport default cloneDeep;\n","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\nimport ModelRange from '../model/range';\nimport ModelSelection from '../model/selection';\nimport ModelElement from '../model/element';\nimport ViewAttributeElement from '../view/attributeelement';\nimport DocumentSelection from '../model/documentselection';\nimport ConversionHelpers from './conversionhelpers';\nimport log from '@ckeditor/ckeditor5-utils/src/log';\nimport { cloneDeep } from 'lodash-es';\n/**\n * Contains downcast (model-to-view) converters for {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}.\n *\n * @module engine/conversion/downcasthelpers\n */\n\n/**\n * Downcast conversion helper functions.\n *\n * @extends module:engine/conversion/conversionhelpers~ConversionHelpers\n */\n\nvar DowncastHelpers =\n/*#__PURE__*/\nfunction (_ConversionHelpers) {\n  _inherits(DowncastHelpers, _ConversionHelpers);\n\n  function DowncastHelpers() {\n    _classCallCheck(this, DowncastHelpers);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DowncastHelpers).apply(this, arguments));\n  }\n\n  _createClass(DowncastHelpers, [{\n    key: \"elementToElement\",\n\n    /**\n     * Model element to view element conversion helper.\n     *\n     * This conversion results in creating a view element. For example, model `<paragraph>Foo</paragraph>` becomes `<p>Foo</p>` in the view.\n     *\n     *\t\teditor.conversion.for( 'downcast' ).elementToElement( {\n     *\t\t\tmodel: 'paragraph',\n     *\t\t\tview: 'p'\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'downcast' ).elementToElement( {\n     *\t\t\tmodel: 'paragraph',\n     *\t\t\tview: 'div',\n     *\t\t\tconverterPriority: 'high'\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'downcast' ).elementToElement( {\n     *\t\t\tmodel: 'fancyParagraph',\n     *\t\t\tview: {\n     *\t\t\t\tname: 'p',\n     *\t\t\t\tclasses: 'fancy'\n     *\t\t\t}\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'downcast' ).elementToElement( {\n     *\t\t\tmodel: 'heading',\n     *\t\t\tview: ( modelElement, viewWriter ) => {\n     *\t\t\t\treturn viewWriter.createContainerElement( 'h' + modelElement.getAttribute( 'level' ) )\n     *\t\t\t}\n     *\t\t} );\n     *\n     * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n     * to the conversion process.\n     *\n     * @method #elementToElement\n     * @param {Object} config Conversion configuration.\n     * @param {String} config.model The name of the model element to convert.\n     * @param {module:engine/view/elementdefinition~ElementDefinition|Function} config.view A view element definition or a function\n     * that takes the model element and {@link module:engine/view/downcastwriter~DowncastWriter view downcast writer}\n     * as parameters and returns a view container element.\n     * @returns {module:engine/conversion/downcasthelpers~DowncastHelpers}\n     */\n    value: function elementToElement(config) {\n      return this.add(downcastElementToElement(config));\n    }\n    /**\n     * Model attribute to view element conversion helper.\n     *\n     * This conversion results in wrapping view nodes with a view attribute element. For example, a model text node with\n     * `\"Foo\"` as data and the `bold` attribute becomes `<strong>Foo</strong>` in the view.\n     *\n     *\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\n     *\t\t\tmodel: 'bold',\n     *\t\t\tview: 'strong'\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\n     *\t\t\tmodel: 'bold',\n     *\t\t\tview: 'b',\n     *\t\t\tconverterPriority: 'high'\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\n     *\t\t\tmodel: 'invert',\n     *\t\t\tview: {\n     *\t\t\t\tname: 'span',\n     *\t\t\t\tclasses: [ 'font-light', 'bg-dark' ]\n     *\t\t\t}\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\n     *\t\t\tmodel: {\n     *\t\t\t\tkey: 'fontSize',\n     *\t\t\t\tvalues: [ 'big', 'small' ]\n     *\t\t\t},\n     *\t\t\tview: {\n     *\t\t\t\tbig: {\n     *\t\t\t\t\tname: 'span',\n     *\t\t\t\t\tstyles: {\n     *\t\t\t\t\t\t'font-size': '1.2em'\n     *\t\t\t\t\t}\n     *\t\t\t\t},\n     *\t\t\t\tsmall: {\n     *\t\t\t\t\tname: 'span',\n     *\t\t\t\t\tstyles: {\n     *\t\t\t\t\t\t'font-size': '0.8em'\n     *\t\t\t\t\t}\n     *\t\t\t\t}\n     *\t\t\t}\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\n     *\t\t\tmodel: 'bold',\n     *\t\t\tview: ( modelAttributeValue, viewWriter ) => {\n     *\t\t\t\treturn viewWriter.createAttributeElement( 'span', {\n     *\t\t\t\t\tstyle: 'font-weight:' + modelAttributeValue\n     *\t\t\t\t} );\n     *\t\t\t}\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\n     *\t\t\tmodel: {\n     *\t\t\t\tkey: 'color',\n     *\t\t\t\tname: '$text'\n     *\t\t\t},\n     *\t\t\tview: ( modelAttributeValue, viewWriter ) => {\n     *\t\t\t\treturn viewWriter.createAttributeElement( 'span', {\n     *\t\t\t\t\tstyle: 'color:' + modelAttributeValue\n     *\t\t\t\t} );\n     *\t\t\t}\n     *\t\t} );\n     *\n     * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n     * to the conversion process.\n     *\n     * @method #attributeToElement\n     * @param {Object} config Conversion configuration.\n     * @param {String|Object} config.model The key of the attribute to convert from or a `{ key, values }` object. `values` is an array\n     * of `String`s with possible values if the model attribute is an enumerable.\n     * @param {module:engine/view/elementdefinition~ElementDefinition|Function|Object} config.view A view element definition or a function\n     * that takes the model attribute value and {@link module:engine/view/downcastwriter~DowncastWriter view downcast writer}\n     * as parameters and returns a view attribute element. If `config.model.values` is\n     * given, `config.view` should be an object assigning values from `config.model.values` to view element definitions or functions.\n     * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n     * @returns {module:engine/conversion/downcasthelpers~DowncastHelpers}\n     */\n\n  }, {\n    key: \"attributeToElement\",\n    value: function attributeToElement(config) {\n      return this.add(downcastAttributeToElement(config));\n    }\n    /**\n     * Model attribute to view attribute conversion helper.\n     *\n     * This conversion results in adding an attribute to a view node, basing on an attribute from a model node. For example,\n     * `<image src='foo.jpg'></image>` is converted to `<img src='foo.jpg'></img>`.\n     *\n     *\t\teditor.conversion.for( 'downcast' ).attributeToAttribute( {\n     *\t\t\tmodel: 'source',\n     *\t\t\tview: 'src'\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'downcast' ).attributeToAttribute( {\n     *\t\t\tmodel: 'source',\n     *\t\t\tview: 'href',\n     *\t\t\tconverterPriority: 'high'\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'downcast' ).attributeToAttribute( {\n     *\t\t\tmodel: {\n     *\t\t\t\tname: 'image',\n     *\t\t\t\tkey: 'source'\n     *\t\t\t},\n     *\t\t\tview: 'src'\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'downcast' ).attributeToAttribute( {\n     *\t\t\tmodel: {\n     *\t\t\t\tname: 'styled',\n     *\t\t\t\tvalues: [ 'dark', 'light' ]\n     *\t\t\t},\n     *\t\t\tview: {\n     *\t\t\t\tdark: {\n     *\t\t\t\t\tkey: 'class',\n     *\t\t\t\t\tvalue: [ 'styled', 'styled-dark' ]\n     *\t\t\t\t},\n     *\t\t\t\tlight: {\n     *\t\t\t\t\tkey: 'class',\n     *\t\t\t\t\tvalue: [ 'styled', 'styled-light' ]\n     *\t\t\t\t}\n     *\t\t\t}\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'downcast' ).attributeToAttribute( {\n     *\t\t\tmodel: 'styled',\n     *\t\t\tview: modelAttributeValue => ( { key: 'class', value: 'styled-' + modelAttributeValue } )\n     *\t\t} );\n     *\n     * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n     * to the conversion process.\n     *\n     * @method #attributeToAttribute\n     * @param {Object} config Conversion configuration.\n     * @param {String|Object} config.model The key of the attribute to convert from or a `{ key, values, [ name ] }` object describing\n     * the attribute key, possible values and, optionally, an element name to convert from.\n     * @param {String|Object|Function} config.view A view attribute key, or a `{ key, value }` object or a function that takes\n     * the model attribute value and returns a `{ key, value }` object. If `key` is `'class'`, `value` can be a `String` or an\n     * array of `String`s. If `key` is `'style'`, `value` is an object with key-value pairs. In other cases, `value` is a `String`.\n     * If `config.model.values` is set, `config.view` should be an object assigning values from `config.model.values` to\n     * `{ key, value }` objects or a functions.\n     * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n     * @returns {module:engine/conversion/downcasthelpers~DowncastHelpers}\n     */\n\n  }, {\n    key: \"attributeToAttribute\",\n    value: function attributeToAttribute(config) {\n      return this.add(downcastAttributeToAttribute(config));\n    }\n    /**\n     * Model marker to view element conversion helper.\n     *\n     * This conversion results in creating a view element on the boundaries of the converted marker. If the converted marker\n     * is collapsed, only one element is created. For example, model marker set like this: `<paragraph>F[oo b]ar</paragraph>`\n     * becomes `<p>F<span data-marker=\"search\"></span>oo b<span data-marker=\"search\"></span>ar</p>` in the view.\n     *\n     *\t\teditor.conversion.for( 'downcast' ).markerToElement( {\n     *\t\t\tmodel: 'search',\n     *\t\t\tview: 'marker-search'\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'downcast' ).markerToElement( {\n     *\t\t\tmodel: 'search',\n     *\t\t\tview: 'search-result',\n     *\t\t\tconverterPriority: 'high'\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'downcast' ).markerToElement( {\n     *\t\t\tmodel: 'search',\n     *\t\t\tview: {\n     *\t\t\t\tname: 'span',\n     *\t\t\t\tattributes: {\n     *\t\t\t\t\t'data-marker': 'search'\n     *\t\t\t\t}\n     *\t\t\t}\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'downcast' ).markerToElement( {\n     *\t\t\tmodel: 'search',\n     *\t\t\tview: ( markerData, viewWriter ) => {\n     *\t\t\t\treturn viewWriter.createUIElement( 'span', {\n     *\t\t\t\t\t'data-marker': 'search',\n     *\t\t\t\t\t'data-start': markerData.isOpening\n     *\t\t\t\t} );\n     *\t\t\t}\n     *\t\t} );\n     *\n     * If a function is passed as the `config.view` parameter, it will be used to generate both boundary elements. The function\n     * receives the `data` object as a parameter and should return an instance of the\n     * {@link module:engine/view/uielement~UIElement view UI element}. The `data` object and\n     * {@link module:engine/conversion/downcastdispatcher~DowncastConversionApi `conversionApi`} are passed from\n     * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:addMarker}. Additionally,\n     * the `data.isOpening` parameter is passed, which is set to `true` for the marker start boundary element, and `false` to\n     * the marker end boundary element.\n     *\n     * This kind of conversion is useful for saving data into the database, so it should be used in the data conversion pipeline.\n     *\n     * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n     * to the conversion process.\n     *\n     * @method #markerToElement\n     * @param {Object} config Conversion configuration.\n     * @param {String} config.model The name of the model marker (or model marker group) to convert.\n     * @param {module:engine/view/elementdefinition~ElementDefinition|Function} config.view A view element definition or a function\n     * that takes the model marker data as a parameter and returns a view UI element.\n     * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n     * @returns {module:engine/conversion/downcasthelpers~DowncastHelpers}\n     */\n\n  }, {\n    key: \"markerToElement\",\n    value: function markerToElement(config) {\n      return this.add(downcastMarkerToElement(config));\n    }\n    /**\n     * Model marker to highlight conversion helper.\n     *\n     * This conversion results in creating a highlight on view nodes. For this kind of conversion,\n     * {@link module:engine/conversion/downcasthelpers~HighlightDescriptor} should be provided.\n     *\n     * For text nodes, a `<span>` {@link module:engine/view/attributeelement~AttributeElement} is created and it wraps all text nodes\n     * in the converted marker range. For example, a model marker set like this: `<paragraph>F[oo b]ar</paragraph>` becomes\n     * `<p>F<span class=\"comment\">oo b</span>ar</p>` in the view.\n     *\n     * {@link module:engine/view/containerelement~ContainerElement} may provide a custom way of handling highlight. Most often,\n     * the element itself is given classes and attributes described in the highlight descriptor (instead of being wrapped in `<span>`).\n     * For example, a model marker set like this: `[<image src=\"foo.jpg\"></image>]` becomes `<img src=\"foo.jpg\" class=\"comment\"></img>`\n     * in the view.\n     *\n     * For container elements, the conversion is two-step. While the converter processes the highlight descriptor and passes it\n     * to a container element, it is the container element instance itself that applies values from the highlight descriptor.\n     * So, in a sense, the converter takes care of stating what should be applied on what, while the element decides how to apply that.\n     *\n     *\t\teditor.conversion.for( 'downcast' ).markerToHighlight( { model: 'comment', view: { classes: 'comment' } } );\n     *\n     *\t\teditor.conversion.for( 'downcast' ).markerToHighlight( {\n     *\t\t\tmodel: 'comment',\n     *\t\t\tview: { classes: 'new-comment' },\n     *\t\t\tconverterPriority: 'high'\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'downcast' ).markerToHighlight( {\n     *\t\t\tmodel: 'comment',\n     *\t\t\tview: data => {\n     *\t\t\t\t// Assuming that the marker name is in a form of comment:commentType.\n     *\t\t\t\tconst commentType = data.markerName.split( ':' )[ 1 ];\n     *\n     *\t\t\t\treturn {\n     *\t\t\t\t\tclasses: [ 'comment', 'comment-' + commentType ]\n     *\t\t\t\t};\n     *\t\t\t}\n     *\t\t} );\n     *\n     * If a function is passed as the `config.view` parameter, it will be used to generate the highlight descriptor. The function\n     * receives the `data` object as a parameter and should return a\n     * {@link module:engine/conversion/downcasthelpers~HighlightDescriptor highlight descriptor}.\n     * The `data` object properties are passed from {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:addMarker}.\n     *\n     * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n     * to the conversion process.\n     *\n     * @method #markerToHighlight\n     * @param {Object} config Conversion configuration.\n     * @param {String} config.model The name of the model marker (or model marker group) to convert.\n     * @param {module:engine/conversion/downcasthelpers~HighlightDescriptor|Function} config.view A highlight descriptor\n     * that will be used for highlighting or a function that takes the model marker data as a parameter and returns a highlight descriptor.\n     * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n     * @returns {module:engine/conversion/downcasthelpers~DowncastHelpers}\n     */\n\n  }, {\n    key: \"markerToHighlight\",\n    value: function markerToHighlight(config) {\n      return this.add(downcastMarkerToHighlight(config));\n    }\n  }]);\n\n  return DowncastHelpers;\n}(ConversionHelpers);\n/**\n * Function factory that creates a default downcast converter for text insertion changes.\n *\n * The converter automatically consumes the corresponding value from the consumables list and stops the event (see\n * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}).\n *\n *\t\tmodelDispatcher.on( 'insert:$text', insertText() );\n *\n * @returns {Function} Insert text event converter.\n */\n\n\nexport { DowncastHelpers as default };\nexport function insertText() {\n  return function (evt, data, conversionApi) {\n    if (!conversionApi.consumable.consume(data.item, 'insert')) {\n      return;\n    }\n\n    var viewWriter = conversionApi.writer;\n    var viewPosition = conversionApi.mapper.toViewPosition(data.range.start);\n    var viewText = viewWriter.createText(data.item.data);\n    viewWriter.insert(viewPosition, viewText);\n  };\n}\n/**\n * Function factory that creates a default downcast converter for node remove changes.\n *\n *\t\tmodelDispatcher.on( 'remove', remove() );\n *\n * @returns {Function} Remove event converter.\n */\n\nexport function remove() {\n  return function (evt, data, conversionApi) {\n    // Find view range start position by mapping model position at which the remove happened.\n    var viewStart = conversionApi.mapper.toViewPosition(data.position);\n    var modelEnd = data.position.getShiftedBy(data.length);\n    var viewEnd = conversionApi.mapper.toViewPosition(modelEnd, {\n      isPhantom: true\n    });\n    var viewRange = conversionApi.writer.createRange(viewStart, viewEnd); // Trim the range to remove in case some UI elements are on the view range boundaries.\n\n    var removed = conversionApi.writer.remove(viewRange.getTrimmed()); // After the range is removed, unbind all view elements from the model.\n    // Range inside view document fragment is used to unbind deeply.\n\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = conversionApi.writer.createRangeIn(removed).getItems()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var child = _step.value;\n        conversionApi.mapper.unbindViewElement(child);\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n          _iterator[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  };\n}\n/**\n * Creates a `<span>` {@link module:engine/view/attributeelement~AttributeElement view attribute element} from the information\n * provided by the {@link module:engine/conversion/downcasthelpers~HighlightDescriptor highlight descriptor} object. If a priority\n * is not provided in the descriptor, the default priority will be used.\n *\n * @param {module:engine/conversion/downcasthelpers~HighlightDescriptor} descriptor\n * @returns {module:engine/view/attributeelement~AttributeElement}\n */\n\nexport function createViewElementFromHighlightDescriptor(descriptor) {\n  var viewElement = new ViewAttributeElement('span', descriptor.attributes);\n\n  if (descriptor.classes) {\n    viewElement._addClass(descriptor.classes);\n  }\n\n  if (descriptor.priority) {\n    viewElement._priority = descriptor.priority;\n  }\n\n  viewElement._id = descriptor.id;\n  return viewElement;\n}\n/**\n * Function factory that creates a converter which converts a non-collapsed {@link module:engine/model/selection~Selection model selection}\n * to a {@link module:engine/view/documentselection~DocumentSelection view selection}. The converter consumes appropriate\n * value from the `consumable` object and maps model positions from the selection to view positions.\n *\n *\t\tmodelDispatcher.on( 'selection', convertRangeSelection() );\n *\n * @returns {Function} Selection converter.\n */\n\nexport function convertRangeSelection() {\n  return function (evt, data, conversionApi) {\n    var selection = data.selection;\n\n    if (selection.isCollapsed) {\n      return;\n    }\n\n    if (!conversionApi.consumable.consume(selection, 'selection')) {\n      return;\n    }\n\n    var viewRanges = [];\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n      for (var _iterator2 = selection.getRanges()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        var range = _step2.value;\n        var viewRange = conversionApi.mapper.toViewRange(range);\n        viewRanges.push(viewRange);\n      }\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n          _iterator2[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n\n    conversionApi.writer.setSelection(viewRanges, {\n      backward: selection.isBackward\n    });\n  };\n}\n/**\n * Function factory that creates a converter which converts a collapsed {@link module:engine/model/selection~Selection model selection} to\n * a {@link module:engine/view/documentselection~DocumentSelection view selection}. The converter consumes appropriate\n * value from the `consumable` object, maps the model selection position to the view position and breaks\n * {@link module:engine/view/attributeelement~AttributeElement attribute elements} at the selection position.\n *\n *\t\tmodelDispatcher.on( 'selection', convertCollapsedSelection() );\n *\n * An example of the view state before and after converting the collapsed selection:\n *\n *\t\t   <p><strong>f^oo<strong>bar</p>\n *\t\t-> <p><strong>f</strong>^<strong>oo</strong>bar</p>\n *\n * By breaking attribute elements like `<strong>`, the selection is in a correct element. Then, when the selection attribute is\n * converted, broken attributes might be merged again, or the position where the selection is may be wrapped\n * with different, appropriate attribute elements.\n *\n * See also {@link module:engine/conversion/downcasthelpers~clearAttributes} which does a clean-up\n * by merging attributes.\n *\n * @returns {Function} Selection converter.\n */\n\nexport function convertCollapsedSelection() {\n  return function (evt, data, conversionApi) {\n    var selection = data.selection;\n\n    if (!selection.isCollapsed) {\n      return;\n    }\n\n    if (!conversionApi.consumable.consume(selection, 'selection')) {\n      return;\n    }\n\n    var viewWriter = conversionApi.writer;\n    var modelPosition = selection.getFirstPosition();\n    var viewPosition = conversionApi.mapper.toViewPosition(modelPosition);\n    var brokenPosition = viewWriter.breakAttributes(viewPosition);\n    viewWriter.setSelection(brokenPosition);\n  };\n}\n/**\n * Function factory that creates a converter which clears artifacts after the previous\n * {@link module:engine/model/selection~Selection model selection} conversion. It removes all empty\n * {@link module:engine/view/attributeelement~AttributeElement view attribute elements} and merges sibling attributes at all start and end\n * positions of all ranges.\n *\n *\t\t   <p><strong>^</strong></p>\n *\t\t-> <p>^</p>\n *\n *\t\t   <p><strong>foo</strong>^<strong>bar</strong>bar</p>\n *\t\t-> <p><strong>foo^bar<strong>bar</p>\n *\n *\t\t   <p><strong>foo</strong><em>^</em><strong>bar</strong>bar</p>\n *\t\t-> <p><strong>foo^bar<strong>bar</p>\n *\n * This listener should be assigned before any converter for the new selection:\n *\n *\t\tmodelDispatcher.on( 'selection', clearAttributes() );\n *\n * See {@link module:engine/conversion/downcasthelpers~convertCollapsedSelection}\n * which does the opposite by breaking attributes in the selection position.\n *\n * @returns {Function} Selection converter.\n */\n\nexport function clearAttributes() {\n  return function (evt, data, conversionApi) {\n    var viewWriter = conversionApi.writer;\n    var viewSelection = viewWriter.document.selection;\n    var _iteratorNormalCompletion3 = true;\n    var _didIteratorError3 = false;\n    var _iteratorError3 = undefined;\n\n    try {\n      for (var _iterator3 = viewSelection.getRanges()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n        var range = _step3.value;\n\n        // Not collapsed selection should not have artifacts.\n        if (range.isCollapsed) {\n          // Position might be in the node removed by the view writer.\n          if (range.end.parent.document) {\n            conversionApi.writer.mergeAttributes(range.start);\n          }\n        }\n      }\n    } catch (err) {\n      _didIteratorError3 = true;\n      _iteratorError3 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n          _iterator3[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError3) {\n          throw _iteratorError3;\n        }\n      }\n    }\n\n    viewWriter.setSelection(null);\n  };\n}\n/**\n * Function factory that creates a converter which converts set/change/remove attribute changes from the model to the view.\n * It can also be used to convert selection attributes. In that case, an empty attribute element will be created and the\n * selection will be put inside it.\n *\n * Attributes from the model are converted to a view element that will be wrapping these view nodes that are bound to\n * model elements having the given attribute. This is useful for attributes like `bold` that may be set on text nodes in the model\n * but are represented as an element in the view:\n *\n *\t\t[paragraph]              MODEL ====> VIEW        <p>\n *\t\t\t|- a {bold: true}                             |- <b>\n *\t\t\t|- b {bold: true}                             |   |- ab\n *\t\t\t|- c                                          |- c\n *\n * Passed `Function` will be provided with the attribute value and then all the parameters of the\n * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:attribute `attribute` event}.\n * It is expected that the function returns an {@link module:engine/view/element~Element}.\n * The result of the function will be the wrapping element.\n * When the provided `Function` does not return any element, no conversion will take place.\n *\n * The converter automatically consumes the corresponding value from the consumables list and stops the event (see\n * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}).\n *\n *\t\tmodelDispatcher.on( 'attribute:bold', wrap( ( modelAttributeValue, viewWriter ) => {\n *\t\t\treturn viewWriter.createAttributeElement( 'strong' );\n *\t\t} );\n *\n * @protected\n * @param {Function} elementCreator Function returning a view element that will be used for wrapping.\n * @returns {Function} Set/change attribute converter.\n */\n\nexport function wrap(elementCreator) {\n  return function (evt, data, conversionApi) {\n    // Recreate current wrapping node. It will be used to unwrap view range if the attribute value has changed\n    // or the attribute was removed.\n    var oldViewElement = elementCreator(data.attributeOldValue, conversionApi.writer); // Create node to wrap with.\n\n    var newViewElement = elementCreator(data.attributeNewValue, conversionApi.writer);\n\n    if (!oldViewElement && !newViewElement) {\n      return;\n    }\n\n    if (!conversionApi.consumable.consume(data.item, evt.name)) {\n      return;\n    }\n\n    var viewWriter = conversionApi.writer;\n    var viewSelection = viewWriter.document.selection;\n\n    if (data.item instanceof ModelSelection || data.item instanceof DocumentSelection) {\n      // Selection attribute conversion.\n      viewWriter.wrap(viewSelection.getFirstRange(), newViewElement);\n    } else {\n      // Node attribute conversion.\n      var viewRange = conversionApi.mapper.toViewRange(data.range); // First, unwrap the range from current wrapper.\n\n      if (data.attributeOldValue !== null && oldViewElement) {\n        viewRange = viewWriter.unwrap(viewRange, oldViewElement);\n      }\n\n      if (data.attributeNewValue !== null && newViewElement) {\n        viewWriter.wrap(viewRange, newViewElement);\n      }\n    }\n  };\n}\n/**\n * Function factory that creates a converter which converts node insertion changes from the model to the view.\n * The function passed will be provided with all the parameters of the dispatcher's\n * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:insert `insert` event}.\n * It is expected that the function returns an {@link module:engine/view/element~Element}.\n * The result of the function will be inserted into the view.\n *\n * The converter automatically consumes the corresponding value from the consumables list, stops the event (see\n * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}) and binds the model and view elements.\n *\n *\t\tdowncastDispatcher.on(\n *\t\t\t'insert:myElem',\n *\t\t\tinsertElement( ( modelItem, viewWriter ) => {\n *\t\t\t\tconst text = viewWriter.createText( 'myText' );\n *\t\t\t\tconst myElem = viewWriter.createElement( 'myElem', { myAttr: 'my-' + modelItem.getAttribute( 'myAttr' ) }, text );\n *\n *\t\t\t\t// Do something fancy with `myElem` using `modelItem` or other parameters.\n *\n *\t\t\t\treturn myElem;\n *\t\t\t}\n *\t\t) );\n *\n * @protected\n * @param {Function} elementCreator Function returning a view element, which will be inserted.\n * @returns {Function} Insert element event converter.\n */\n\nexport function insertElement(elementCreator) {\n  return function (evt, data, conversionApi) {\n    var viewElement = elementCreator(data.item, conversionApi.writer);\n\n    if (!viewElement) {\n      return;\n    }\n\n    if (!conversionApi.consumable.consume(data.item, 'insert')) {\n      return;\n    }\n\n    var viewPosition = conversionApi.mapper.toViewPosition(data.range.start);\n    conversionApi.mapper.bindElements(data.item, viewElement);\n    conversionApi.writer.insert(viewPosition, viewElement);\n  };\n}\n/**\n * Function factory that creates a converter which converts marker adding change to the\n * {@link module:engine/view/uielement~UIElement view UI element}.\n *\n * The view UI element that will be added to the view depends on the passed parameter. See {@link ~insertElement}.\n * In case of a non-collapsed range, the UI element will not wrap nodes but separate elements will be placed at the beginning\n * and at the end of the range.\n *\n * This converter binds created UI elements with the marker name using {@link module:engine/conversion/mapper~Mapper#bindElementToMarker}.\n *\n * @protected\n * @param {module:engine/view/uielement~UIElement|Function} elementCreator A view UI element or a function returning the view element\n * that will be inserted.\n * @returns {Function} Insert element event converter.\n */\n\nexport function insertUIElement(elementCreator) {\n  return function (evt, data, conversionApi) {\n    // Create two view elements. One will be inserted at the beginning of marker, one at the end.\n    // If marker is collapsed, only \"opening\" element will be inserted.\n    data.isOpening = true;\n    var viewStartElement = elementCreator(data, conversionApi.writer);\n    data.isOpening = false;\n    var viewEndElement = elementCreator(data, conversionApi.writer);\n\n    if (!viewStartElement || !viewEndElement) {\n      return;\n    }\n\n    var markerRange = data.markerRange; // Marker that is collapsed has consumable build differently that non-collapsed one.\n    // For more information see `addMarker` event description.\n    // If marker's range is collapsed - check if it can be consumed.\n\n    if (markerRange.isCollapsed && !conversionApi.consumable.consume(markerRange, evt.name)) {\n      return;\n    } // If marker's range is not collapsed - consume all items inside.\n\n\n    var _iteratorNormalCompletion4 = true;\n    var _didIteratorError4 = false;\n    var _iteratorError4 = undefined;\n\n    try {\n      for (var _iterator4 = markerRange[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n        var value = _step4.value;\n\n        if (!conversionApi.consumable.consume(value.item, evt.name)) {\n          return;\n        }\n      }\n    } catch (err) {\n      _didIteratorError4 = true;\n      _iteratorError4 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion4 && _iterator4[\"return\"] != null) {\n          _iterator4[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError4) {\n          throw _iteratorError4;\n        }\n      }\n    }\n\n    var mapper = conversionApi.mapper;\n    var viewWriter = conversionApi.writer; // Add \"opening\" element.\n\n    viewWriter.insert(mapper.toViewPosition(markerRange.start), viewStartElement);\n    conversionApi.mapper.bindElementToMarker(viewStartElement, data.markerName); // Add \"closing\" element only if range is not collapsed.\n\n    if (!markerRange.isCollapsed) {\n      viewWriter.insert(mapper.toViewPosition(markerRange.end), viewEndElement);\n      conversionApi.mapper.bindElementToMarker(viewEndElement, data.markerName);\n    }\n\n    evt.stop();\n  };\n} // Function factory that returns a default downcast converter for removing a {@link module:engine/view/uielement~UIElement UI element}\n// basing on marker remove change.\n//\n// This converter unbinds elements from the marker name.\n//\n// @returns {Function} Removed UI element converter.\n\nfunction removeUIElement() {\n  return function (evt, data, conversionApi) {\n    var elements = conversionApi.mapper.markerNameToElements(data.markerName);\n\n    if (!elements) {\n      return;\n    }\n\n    conversionApi.mapper.unbindElementsFromMarkerName(data.markerName);\n    var _iteratorNormalCompletion5 = true;\n    var _didIteratorError5 = false;\n    var _iteratorError5 = undefined;\n\n    try {\n      for (var _iterator5 = elements[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n        var element = _step5.value;\n        conversionApi.writer.clear(conversionApi.writer.createRangeOn(element), element);\n      }\n    } catch (err) {\n      _didIteratorError5 = true;\n      _iteratorError5 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion5 && _iterator5[\"return\"] != null) {\n          _iterator5[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError5) {\n          throw _iteratorError5;\n        }\n      }\n    }\n\n    conversionApi.writer.clearClonedElementsGroup(data.markerName);\n    evt.stop();\n  };\n} // Function factory that creates a converter which converts set/change/remove attribute changes from the model to the view.\n//\n// Attributes from the model are converted to the view element attributes in the view. You may provide a custom function to generate\n// a key-value attribute pair to add/change/remove. If not provided, model attributes will be converted to view element\n// attributes on a one-to-one basis.\n//\n// *Note:** The provided attribute creator should always return the same `key` for a given attribute from the model.\n//\n// The converter automatically consumes the corresponding value from the consumables list and stops the event (see\n// {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}).\n//\n//\t\tmodelDispatcher.on( 'attribute:customAttr:myElem', changeAttribute( ( value, data ) => {\n//\t\t\t// Change attribute key from `customAttr` to `class` in the view.\n//\t\t\tconst key = 'class';\n//\t\t\tlet value = data.attributeNewValue;\n//\n//\t\t\t// Force attribute value to 'empty' if the model element is empty.\n//\t\t\tif ( data.item.childCount === 0 ) {\n//\t\t\t\tvalue = 'empty';\n//\t\t\t}\n//\n//\t\t\t// Return the key-value pair.\n//\t\t\treturn { key, value };\n//\t\t} ) );\n//\n// @param {Function} [attributeCreator] Function returning an object with two properties: `key` and `value`, which\n// represent the attribute key and attribute value to be set on a {@link module:engine/view/element~Element view element}.\n// The function is passed the model attribute value as the first parameter and additional data about the change as the second parameter.\n// @returns {Function} Set/change attribute converter.\n\n\nfunction changeAttribute(attributeCreator) {\n  return function (evt, data, conversionApi) {\n    var oldAttribute = attributeCreator(data.attributeOldValue, data);\n    var newAttribute = attributeCreator(data.attributeNewValue, data);\n\n    if (!oldAttribute && !newAttribute) {\n      return;\n    }\n\n    if (!conversionApi.consumable.consume(data.item, evt.name)) {\n      return;\n    }\n\n    var viewElement = conversionApi.mapper.toViewElement(data.item);\n    var viewWriter = conversionApi.writer; // If model item cannot be mapped to a view element, it means item is not an `Element` instance but a `TextProxy` node.\n    // Only elements can have attributes in a view so do not proceed for anything else (#1587).\n\n    if (!viewElement) {\n      /**\n       * This error occurs when a {@link module:engine/model/textproxy~TextProxy text node's} attribute is to be downcasted\n       * by {@link module:engine/conversion/conversion~Conversion#attributeToAttribute `Attribute to Attribute converter`}.\n       * In most cases it is caused by converters misconfiguration when only \"generic\" converter is defined:\n       *\n       *\t\teditor.conversion.for( 'downcast' ).attributeToAttribute( {\n       *\t\t\tmodel: 'attribute-name',\n       *\t\t\tview: 'attribute-name'\n       *\t\t} ) );\n       *\n       * and given attribute is used on text node, for example:\n       *\n       *\t\tmodel.change( writer => {\n       *\t\t\twriter.insertText( 'Foo', { 'attribute-name': 'bar' }, parent, 0 );\n       *\t\t} );\n       *\n       * In such cases, to convert the same attribute for both {@link module:engine/model/element~Element}\n       * and {@link module:engine/model/textproxy~TextProxy `Text`} nodes, text specific\n       * {@link module:engine/conversion/conversion~Conversion#attributeToElement `Attribute to Element converter`}\n       * with higher {@link module:utils/priorities~PriorityString priority} must also be defined:\n       *\n       *\t\teditor.conversion.for( 'downcast' ).attributeToElement( {\n       *\t\t\tmodel: {\n       *\t\t\t\tkey: 'attribute-name',\n       *\t\t\t\tname: '$text'\n       *\t\t\t},\n       *\t\t\tview: ( value, writer ) => {\n       *\t\t\t\treturn writer.createAttributeElement( 'span', { 'attribute-name': value } );\n       *\t\t\t},\n       *\t\t\tconverterPriority: 'high'\n       *\t\t} ) );\n       *\n       * @error conversion-attribute-to-attribute-on-text\n       */\n      log.warn('conversion-attribute-to-attribute-on-text: ' + 'Trying to convert text node\\'s attribute with attribute-to-attribute converter.');\n      return;\n    } // First remove the old attribute if there was one.\n\n\n    if (data.attributeOldValue !== null && oldAttribute) {\n      if (oldAttribute.key == 'class') {\n        var classes = Array.isArray(oldAttribute.value) ? oldAttribute.value : [oldAttribute.value];\n        var _iteratorNormalCompletion6 = true;\n        var _didIteratorError6 = false;\n        var _iteratorError6 = undefined;\n\n        try {\n          for (var _iterator6 = classes[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n            var className = _step6.value;\n            viewWriter.removeClass(className, viewElement);\n          }\n        } catch (err) {\n          _didIteratorError6 = true;\n          _iteratorError6 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion6 && _iterator6[\"return\"] != null) {\n              _iterator6[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError6) {\n              throw _iteratorError6;\n            }\n          }\n        }\n      } else if (oldAttribute.key == 'style') {\n        var keys = Object.keys(oldAttribute.value);\n\n        for (var _i = 0, _keys = keys; _i < _keys.length; _i++) {\n          var key = _keys[_i];\n          viewWriter.removeStyle(key, viewElement);\n        }\n      } else {\n        viewWriter.removeAttribute(oldAttribute.key, viewElement);\n      }\n    } // Then set the new attribute.\n\n\n    if (data.attributeNewValue !== null && newAttribute) {\n      if (newAttribute.key == 'class') {\n        var _classes = Array.isArray(newAttribute.value) ? newAttribute.value : [newAttribute.value];\n\n        var _iteratorNormalCompletion7 = true;\n        var _didIteratorError7 = false;\n        var _iteratorError7 = undefined;\n\n        try {\n          for (var _iterator7 = _classes[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n            var _className = _step7.value;\n            viewWriter.addClass(_className, viewElement);\n          }\n        } catch (err) {\n          _didIteratorError7 = true;\n          _iteratorError7 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion7 && _iterator7[\"return\"] != null) {\n              _iterator7[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError7) {\n              throw _iteratorError7;\n            }\n          }\n        }\n      } else if (newAttribute.key == 'style') {\n        var _keys2 = Object.keys(newAttribute.value);\n\n        for (var _i2 = 0, _keys3 = _keys2; _i2 < _keys3.length; _i2++) {\n          var _key = _keys3[_i2];\n          viewWriter.setStyle(_key, newAttribute.value[_key], viewElement);\n        }\n      } else {\n        viewWriter.setAttribute(newAttribute.key, newAttribute.value, viewElement);\n      }\n    }\n  };\n} // Function factory that creates a converter which converts the text inside marker's range. The converter wraps the text with\n// {@link module:engine/view/attributeelement~AttributeElement} created from the provided descriptor.\n// See {link module:engine/conversion/downcasthelpers~createViewElementFromHighlightDescriptor}.\n//\n// It can also be used to convert the selection that is inside a marker. In that case, an empty attribute element will be\n// created and the selection will be put inside it.\n//\n// If the highlight descriptor does not provide the `priority` property, `10` will be used.\n//\n// If the highlight descriptor does not provide the `id` property, the name of the marker will be used.\n//\n// This converter binds the created {@link module:engine/view/attributeelement~AttributeElement attribute elemens} with the marker name\n// using the {@link module:engine/conversion/mapper~Mapper#bindElementToMarker} method.\n//\n// @param {module:engine/conversion/downcasthelpers~HighlightDescriptor|Function} highlightDescriptor\n// @returns {Function}\n\n\nfunction highlightText(highlightDescriptor) {\n  return function (evt, data, conversionApi) {\n    if (!data.item) {\n      return;\n    }\n\n    if (!(data.item instanceof ModelSelection || data.item instanceof DocumentSelection) && !data.item.is('textProxy')) {\n      return;\n    }\n\n    var descriptor = prepareDescriptor(highlightDescriptor, data, conversionApi);\n\n    if (!descriptor) {\n      return;\n    }\n\n    if (!conversionApi.consumable.consume(data.item, evt.name)) {\n      return;\n    }\n\n    var viewElement = createViewElementFromHighlightDescriptor(descriptor);\n    var viewWriter = conversionApi.writer;\n    var viewSelection = viewWriter.document.selection;\n\n    if (data.item instanceof ModelSelection || data.item instanceof DocumentSelection) {\n      viewWriter.wrap(viewSelection.getFirstRange(), viewElement, viewSelection);\n    } else {\n      var viewRange = conversionApi.mapper.toViewRange(data.range);\n      var rangeAfterWrap = viewWriter.wrap(viewRange, viewElement);\n      var _iteratorNormalCompletion8 = true;\n      var _didIteratorError8 = false;\n      var _iteratorError8 = undefined;\n\n      try {\n        for (var _iterator8 = rangeAfterWrap.getItems()[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n          var element = _step8.value;\n\n          if (element.is('attributeElement') && element.isSimilar(viewElement)) {\n            conversionApi.mapper.bindElementToMarker(element, data.markerName); // One attribute element is enough, because all of them are bound together by the view writer.\n            // Mapper uses this binding to get all the elements no matter how many of them are registered in the mapper.\n\n            break;\n          }\n        }\n      } catch (err) {\n        _didIteratorError8 = true;\n        _iteratorError8 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion8 && _iterator8[\"return\"] != null) {\n            _iterator8[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError8) {\n            throw _iteratorError8;\n          }\n        }\n      }\n    }\n  };\n} // Converter function factory. It creates a function which applies the marker's highlight to an element inside the marker's range.\n//\n// The converter checks if an element has the `addHighlight` function stored as a\n// {@link module:engine/view/element~Element#_setCustomProperty custom property} and, if so, uses it to apply the highlight.\n// In such case the converter will consume all element's children, assuming that they were handled by the element itself.\n//\n// When the `addHighlight` custom property is not present, the element is not converted in any special way.\n// This means that converters will proceed to convert the element's child nodes.\n//\n// If the highlight descriptor does not provide the `priority` property, `10` will be used.\n//\n// If the highlight descriptor does not provide the `id` property, the name of the marker will be used.\n//\n// This converter binds altered {@link module:engine/view/containerelement~ContainerElement container elements} with the marker name using\n// the {@link module:engine/conversion/mapper~Mapper#bindElementToMarker} method.\n//\n// @param {module:engine/conversion/downcasthelpers~HighlightDescriptor|Function} highlightDescriptor\n// @returns {Function}\n\n\nfunction highlightElement(highlightDescriptor) {\n  return function (evt, data, conversionApi) {\n    if (!data.item) {\n      return;\n    }\n\n    if (!(data.item instanceof ModelElement)) {\n      return;\n    }\n\n    var descriptor = prepareDescriptor(highlightDescriptor, data, conversionApi);\n\n    if (!descriptor) {\n      return;\n    }\n\n    if (!conversionApi.consumable.test(data.item, evt.name)) {\n      return;\n    }\n\n    var viewElement = conversionApi.mapper.toViewElement(data.item);\n\n    if (viewElement && viewElement.getCustomProperty('addHighlight')) {\n      // Consume element itself.\n      conversionApi.consumable.consume(data.item, evt.name); // Consume all children nodes.\n\n      var _iteratorNormalCompletion9 = true;\n      var _didIteratorError9 = false;\n      var _iteratorError9 = undefined;\n\n      try {\n        for (var _iterator9 = ModelRange._createIn(data.item)[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n          var value = _step9.value;\n          conversionApi.consumable.consume(value.item, evt.name);\n        }\n      } catch (err) {\n        _didIteratorError9 = true;\n        _iteratorError9 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion9 && _iterator9[\"return\"] != null) {\n            _iterator9[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError9) {\n            throw _iteratorError9;\n          }\n        }\n      }\n\n      viewElement.getCustomProperty('addHighlight')(viewElement, descriptor, conversionApi.writer);\n      conversionApi.mapper.bindElementToMarker(viewElement, data.markerName);\n    }\n  };\n} // Function factory that creates a converter which converts the removing model marker to the view.\n//\n// Both text nodes and elements are handled by this converter but they are handled a bit differently.\n//\n// Text nodes are unwrapped using the {@link module:engine/view/attributeelement~AttributeElement attribute element} created from the\n// provided highlight descriptor. See {link module:engine/conversion/downcasthelpers~HighlightDescriptor}.\n//\n// For elements, the converter checks if an element has the `removeHighlight` function stored as a\n// {@link module:engine/view/element~Element#_setCustomProperty custom property}. If so, it uses it to remove the highlight.\n// In such case, the children of that element will not be converted.\n//\n// When `removeHighlight` is not present, the element is not converted in any special way.\n// The converter will proceed to convert the element's child nodes instead.\n//\n// If the highlight descriptor does not provide the `priority` property, `10` will be used.\n//\n// If the highlight descriptor does not provide the `id` property, the name of the marker will be used.\n//\n// This converter unbinds elements from the marker name.\n//\n// @param {module:engine/conversion/downcasthelpers~HighlightDescriptor|Function} highlightDescriptor\n// @returns {Function}\n\n\nfunction removeHighlight(highlightDescriptor) {\n  return function (evt, data, conversionApi) {\n    // This conversion makes sense only for non-collapsed range.\n    if (data.markerRange.isCollapsed) {\n      return;\n    }\n\n    var descriptor = prepareDescriptor(highlightDescriptor, data, conversionApi);\n\n    if (!descriptor) {\n      return;\n    } // View element that will be used to unwrap `AttributeElement`s.\n\n\n    var viewHighlightElement = createViewElementFromHighlightDescriptor(descriptor); // Get all elements bound with given marker name.\n\n    var elements = conversionApi.mapper.markerNameToElements(data.markerName);\n\n    if (!elements) {\n      return;\n    }\n\n    conversionApi.mapper.unbindElementsFromMarkerName(data.markerName);\n    var _iteratorNormalCompletion10 = true;\n    var _didIteratorError10 = false;\n    var _iteratorError10 = undefined;\n\n    try {\n      for (var _iterator10 = elements[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n        var element = _step10.value;\n\n        if (element.is('attributeElement')) {\n          conversionApi.writer.unwrap(conversionApi.writer.createRangeOn(element), viewHighlightElement);\n        } else {\n          // if element.is( 'containerElement' ).\n          element.getCustomProperty('removeHighlight')(element, descriptor.id, conversionApi.writer);\n        }\n      }\n    } catch (err) {\n      _didIteratorError10 = true;\n      _iteratorError10 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion10 && _iterator10[\"return\"] != null) {\n          _iterator10[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError10) {\n          throw _iteratorError10;\n        }\n      }\n    }\n\n    conversionApi.writer.clearClonedElementsGroup(data.markerName);\n    evt.stop();\n  };\n} // Model element to view element conversion helper.\n//\n// See {@link ~DowncastHelpers#elementToElement `.elementToElement()` downcast helper} for examples.\n//\n// @param {Object} config Conversion configuration.\n// @param {String} config.model The name of the model element to convert.\n// @param {module:engine/view/elementdefinition~ElementDefinition|Function} config.view A view element definition or a function\n// that takes the model element and {@link module:engine/view/downcastwriter~DowncastWriter view downcast writer}\n// as parameters and returns a view container element.\n// @returns {Function} Conversion helper.\n\n\nfunction downcastElementToElement(config) {\n  config = cloneDeep(config);\n  config.view = normalizeToElementConfig(config.view, 'container');\n  return function (dispatcher) {\n    dispatcher.on('insert:' + config.model, insertElement(config.view), {\n      priority: config.converterPriority || 'normal'\n    });\n  };\n} // Model attribute to view element conversion helper.\n//\n// See {@link ~DowncastHelpers#attributeToElement `.attributeToElement()` downcast helper} for examples.\n//\n// @param {Object} config Conversion configuration.\n// @param {String|Object} config.model The key of the attribute to convert from or a `{ key, values }` object. `values` is an array\n// of `String`s with possible values if the model attribute is an enumerable.\n// @param {module:engine/view/elementdefinition~ElementDefinition|Function|Object} config.view A view element definition or a function\n// that takes the model attribute value and {@link module:engine/view/downcastwriter~DowncastWriter view downcast writer}\n// as parameters and returns a view attribute element. If `config.model.values` is\n// given, `config.view` should be an object assigning values from `config.model.values` to view element definitions or functions.\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n// @returns {Function} Conversion helper.\n\n\nfunction downcastAttributeToElement(config) {\n  config = cloneDeep(config);\n  var modelKey = config.model.key ? config.model.key : config.model;\n  var eventName = 'attribute:' + modelKey;\n\n  if (config.model.name) {\n    eventName += ':' + config.model.name;\n  }\n\n  if (config.model.values) {\n    var _iteratorNormalCompletion11 = true;\n    var _didIteratorError11 = false;\n    var _iteratorError11 = undefined;\n\n    try {\n      for (var _iterator11 = config.model.values[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n        var modelValue = _step11.value;\n        config.view[modelValue] = normalizeToElementConfig(config.view[modelValue], 'attribute');\n      }\n    } catch (err) {\n      _didIteratorError11 = true;\n      _iteratorError11 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion11 && _iterator11[\"return\"] != null) {\n          _iterator11[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError11) {\n          throw _iteratorError11;\n        }\n      }\n    }\n  } else {\n    config.view = normalizeToElementConfig(config.view, 'attribute');\n  }\n\n  var elementCreator = getFromAttributeCreator(config);\n  return function (dispatcher) {\n    dispatcher.on(eventName, wrap(elementCreator), {\n      priority: config.converterPriority || 'normal'\n    });\n  };\n} // Model attribute to view attribute conversion helper.\n//\n// See {@link ~DowncastHelpers#attributeToAttribute `.attributeToAttribute()` downcast helper} for examples.\n//\n// @param {Object} config Conversion configuration.\n// @param {String|Object} config.model The key of the attribute to convert from or a `{ key, values, [ name ] }` object describing\n// the attribute key, possible values and, optionally, an element name to convert from.\n// @param {String|Object|Function} config.view A view attribute key, or a `{ key, value }` object or a function that takes\n// the model attribute value and returns a `{ key, value }` object. If `key` is `'class'`, `value` can be a `String` or an\n// array of `String`s. If `key` is `'style'`, `value` is an object with key-value pairs. In other cases, `value` is a `String`.\n// If `config.model.values` is set, `config.view` should be an object assigning values from `config.model.values` to\n// `{ key, value }` objects or a functions.\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n// @returns {Function} Conversion helper.\n\n\nfunction downcastAttributeToAttribute(config) {\n  config = cloneDeep(config);\n  var modelKey = config.model.key ? config.model.key : config.model;\n  var eventName = 'attribute:' + modelKey;\n\n  if (config.model.name) {\n    eventName += ':' + config.model.name;\n  }\n\n  if (config.model.values) {\n    var _iteratorNormalCompletion12 = true;\n    var _didIteratorError12 = false;\n    var _iteratorError12 = undefined;\n\n    try {\n      for (var _iterator12 = config.model.values[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n        var modelValue = _step12.value;\n        config.view[modelValue] = normalizeToAttributeConfig(config.view[modelValue]);\n      }\n    } catch (err) {\n      _didIteratorError12 = true;\n      _iteratorError12 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion12 && _iterator12[\"return\"] != null) {\n          _iterator12[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError12) {\n          throw _iteratorError12;\n        }\n      }\n    }\n  } else {\n    config.view = normalizeToAttributeConfig(config.view);\n  }\n\n  var elementCreator = getFromAttributeCreator(config);\n  return function (dispatcher) {\n    dispatcher.on(eventName, changeAttribute(elementCreator), {\n      priority: config.converterPriority || 'normal'\n    });\n  };\n} // Model marker to view element conversion helper.\n//\n// See {@link ~DowncastHelpers#markerToElement `.markerToElement()` downcast helper} for examples.\n//\n// @param {Object} config Conversion configuration.\n// @param {String} config.model The name of the model marker (or model marker group) to convert.\n// @param {module:engine/view/elementdefinition~ElementDefinition|Function} config.view A view element definition or a function\n// that takes the model marker data as a parameter and returns a view UI element.\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n// @returns {Function} Conversion helper.\n\n\nfunction downcastMarkerToElement(config) {\n  config = cloneDeep(config);\n  config.view = normalizeToElementConfig(config.view, 'ui');\n  return function (dispatcher) {\n    dispatcher.on('addMarker:' + config.model, insertUIElement(config.view), {\n      priority: config.converterPriority || 'normal'\n    });\n    dispatcher.on('removeMarker:' + config.model, removeUIElement(config.view), {\n      priority: config.converterPriority || 'normal'\n    });\n  };\n} // Model marker to highlight conversion helper.\n//\n// See {@link ~DowncastHelpers#markerToElement `.markerToElement()` downcast helper} for examples.\n//\n// @param {Object} config Conversion configuration.\n// @param {String} config.model The name of the model marker (or model marker group) to convert.\n// @param {module:engine/conversion/downcasthelpers~HighlightDescriptor|Function} config.view A highlight descriptor\n// that will be used for highlighting or a function that takes the model marker data as a parameter and returns a highlight descriptor.\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n// @returns {Function} Conversion helper.\n\n\nfunction downcastMarkerToHighlight(config) {\n  return function (dispatcher) {\n    dispatcher.on('addMarker:' + config.model, highlightText(config.view), {\n      priority: config.converterPriority || 'normal'\n    });\n    dispatcher.on('addMarker:' + config.model, highlightElement(config.view), {\n      priority: config.converterPriority || 'normal'\n    });\n    dispatcher.on('removeMarker:' + config.model, removeHighlight(config.view), {\n      priority: config.converterPriority || 'normal'\n    });\n  };\n} // Takes `config.view`, and if it is an {@link module:engine/view/elementdefinition~ElementDefinition}, converts it\n// to a function (because lower level converters accept only element creator functions).\n//\n// @param {module:engine/view/elementdefinition~ElementDefinition|Function} view View configuration.\n// @param {'container'|'attribute'|'ui'} viewElementType View element type to create.\n// @returns {Function} Element creator function to use in lower level converters.\n\n\nfunction normalizeToElementConfig(view, viewElementType) {\n  if (typeof view == 'function') {\n    // If `view` is already a function, don't do anything.\n    return view;\n  }\n\n  return function (modelData, viewWriter) {\n    return createViewElementFromDefinition(view, viewWriter, viewElementType);\n  };\n} // Creates a view element instance from the provided {@link module:engine/view/elementdefinition~ElementDefinition} and class.\n//\n// @param {module:engine/view/elementdefinition~ElementDefinition} viewElementDefinition\n// @param {module:engine/view/downcastwriter~DowncastWriter} viewWriter\n// @param {'container'|'attribute'|'ui'} viewElementType\n// @returns {module:engine/view/element~Element}\n\n\nfunction createViewElementFromDefinition(viewElementDefinition, viewWriter, viewElementType) {\n  if (typeof viewElementDefinition == 'string') {\n    // If `viewElementDefinition` is given as a `String`, normalize it to an object with `name` property.\n    viewElementDefinition = {\n      name: viewElementDefinition\n    };\n  }\n\n  var element;\n  var attributes = Object.assign({}, viewElementDefinition.attributes);\n\n  if (viewElementType == 'container') {\n    element = viewWriter.createContainerElement(viewElementDefinition.name, attributes);\n  } else if (viewElementType == 'attribute') {\n    var options = {\n      priority: viewElementDefinition.priority || ViewAttributeElement.DEFAULT_PRIORITY\n    };\n    element = viewWriter.createAttributeElement(viewElementDefinition.name, attributes, options);\n  } else {\n    // 'ui'.\n    element = viewWriter.createUIElement(viewElementDefinition.name, attributes);\n  }\n\n  if (viewElementDefinition.styles) {\n    var keys = Object.keys(viewElementDefinition.styles);\n\n    for (var _i3 = 0, _keys4 = keys; _i3 < _keys4.length; _i3++) {\n      var key = _keys4[_i3];\n      viewWriter.setStyle(key, viewElementDefinition.styles[key], element);\n    }\n  }\n\n  if (viewElementDefinition.classes) {\n    var classes = viewElementDefinition.classes;\n\n    if (typeof classes == 'string') {\n      viewWriter.addClass(classes, element);\n    } else {\n      var _iteratorNormalCompletion13 = true;\n      var _didIteratorError13 = false;\n      var _iteratorError13 = undefined;\n\n      try {\n        for (var _iterator13 = classes[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n          var className = _step13.value;\n          viewWriter.addClass(className, element);\n        }\n      } catch (err) {\n        _didIteratorError13 = true;\n        _iteratorError13 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion13 && _iterator13[\"return\"] != null) {\n            _iterator13[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError13) {\n            throw _iteratorError13;\n          }\n        }\n      }\n    }\n  }\n\n  return element;\n}\n\nfunction getFromAttributeCreator(config) {\n  if (config.model.values) {\n    return function (modelAttributeValue, viewWriter) {\n      var view = config.view[modelAttributeValue];\n\n      if (view) {\n        return view(modelAttributeValue, viewWriter);\n      }\n\n      return null;\n    };\n  } else {\n    return config.view;\n  }\n} // Takes the configuration, adds default parameters if they do not exist and normalizes other parameters to be used in downcast converters\n// for generating a view attribute.\n//\n// @param {Object} view View configuration.\n\n\nfunction normalizeToAttributeConfig(view) {\n  if (typeof view == 'string') {\n    return function (modelAttributeValue) {\n      return {\n        key: view,\n        value: modelAttributeValue\n      };\n    };\n  } else if (_typeof(view) == 'object') {\n    // { key, value, ... }\n    if (view.value) {\n      return function () {\n        return view;\n      };\n    } // { key, ... }\n    else {\n        return function (modelAttributeValue) {\n          return {\n            key: view.key,\n            value: modelAttributeValue\n          };\n        };\n      }\n  } else {\n    // function.\n    return view;\n  }\n} // Helper function for `highlight`. Prepares the actual descriptor object using value passed to the converter.\n\n\nfunction prepareDescriptor(highlightDescriptor, data, conversionApi) {\n  // If passed descriptor is a creator function, call it. If not, just use passed value.\n  var descriptor = typeof highlightDescriptor == 'function' ? highlightDescriptor(data, conversionApi) : highlightDescriptor;\n\n  if (!descriptor) {\n    return null;\n  } // Apply default descriptor priority.\n\n\n  if (!descriptor.priority) {\n    descriptor.priority = 10;\n  } // Default descriptor id is marker name.\n\n\n  if (!descriptor.id) {\n    descriptor.id = data.markerName;\n  }\n\n  return descriptor;\n}\n/**\n * An object describing how the marker highlight should be represented in the view.\n *\n * Each text node contained in a highlighted range will be wrapped in a `<span>`\n * {@link module:engine/view/attributeelement~AttributeElement view attribute element} with CSS class(es), attributes and a priority\n * described by this object.\n *\n * Additionally, each {@link module:engine/view/containerelement~ContainerElement container element} can handle displaying the highlight\n * separately by providing the `addHighlight` and `removeHighlight` custom properties. In this case:\n *\n *  * The `HighlightDescriptor` object is passed to the `addHighlight` function upon conversion and should be used to apply the highlight to\n *  the element.\n *  * The descriptor `id` is passed to the `removeHighlight` function upon conversion and should be used to remove the highlight with the\n *  given ID from the element.\n *\n * @typedef {Object} module:engine/conversion/downcasthelpers~HighlightDescriptor\n *\n * @property {String|Array.<String>} classes A CSS class or an array of classes to set. If the descriptor is used to\n * create an {@link module:engine/view/attributeelement~AttributeElement attribute element} over text nodes, these classes will be set\n * on that attribute element. If the descriptor is applied to an element, usually these classes will be set on that element, however,\n * this depends on how the element converts the descriptor.\n *\n * @property {String} [id] Descriptor identifier. If not provided, it defaults to the converted marker's name.\n *\n * @property {Number} [priority] Descriptor priority. If not provided, it defaults to `10`. If the descriptor is used to create\n * an {@link module:engine/view/attributeelement~AttributeElement attribute element}, it will be that element's\n * {@link module:engine/view/attributeelement~AttributeElement#priority priority}. If the descriptor is applied to an element,\n * the priority will be used to determine which descriptor is more important.\n *\n * @property {Object} [attributes] Attributes to set. If the descriptor is used to create\n * an {@link module:engine/view/attributeelement~AttributeElement attribute element} over text nodes, these attributes will be set on that\n * attribute element. If the descriptor is applied to an element, usually these attributes will be set on that element, however,\n * this depends on how the element converts the descriptor.\n */","function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\nimport Matcher from '../view/matcher';\nimport ModelRange from '../model/range';\nimport ConversionHelpers from './conversionhelpers';\nimport { cloneDeep } from 'lodash-es';\nimport ModelSelection from '../model/selection';\n/**\n * Contains {@link module:engine/view/view view} to {@link module:engine/model/model model} converters for\n * {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher}.\n *\n * @module engine/conversion/upcasthelpers\n */\n\n/**\n * Upcast conversion helper functions.\n *\n * @extends module:engine/conversion/conversionhelpers~ConversionHelpers\n */\n\nvar UpcastHelpers =\n/*#__PURE__*/\nfunction (_ConversionHelpers) {\n  _inherits(UpcastHelpers, _ConversionHelpers);\n\n  function UpcastHelpers() {\n    _classCallCheck(this, UpcastHelpers);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(UpcastHelpers).apply(this, arguments));\n  }\n\n  _createClass(UpcastHelpers, [{\n    key: \"elementToElement\",\n\n    /**\n     * View element to model element conversion helper.\n     *\n     * This conversion results in creating a model element. For example,\n     * view `<p>Foo</p>` becomes `<paragraph>Foo</paragraph>` in the model.\n     *\n     * Keep in mind that the element will be inserted only if it is allowed\n     * by {@link module:engine/model/schema~Schema schema} configuration.\n     *\n     *\t\teditor.conversion.for( 'upcast' ).elementToElement( {\n     *\t\t\tview: 'p',\n     *\t\t\tmodel: 'paragraph'\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'upcast' ).elementToElement( {\n     *\t\t\tview: 'p',\n     *\t\t\tmodel: 'paragraph',\n     *\t\t\tconverterPriority: 'high'\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'upcast' ).elementToElement( {\n     *\t\t\tview: {\n     *\t\t\t\tname: 'p',\n     *\t\t\t\tclasses: 'fancy'\n     *\t\t\t},\n     *\t\t\tmodel: 'fancyParagraph'\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'upcast' ).elementToElement( {\n     * \t\t\tview: {\n     *\t\t\t\tname: 'p',\n     *\t\t\t\tclasses: 'heading'\n     * \t\t\t},\n     * \t\t\tmodel: ( viewElement, modelWriter ) => {\n     * \t\t\t\treturn modelWriter.createElement( 'heading', { level: viewElement.getAttribute( 'data-level' ) } );\n     * \t\t\t}\n     * \t\t} );\n     *\n     * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n     * to the conversion process.\n     *\n     * @method #elementToElement\n     * @param {Object} config Conversion configuration.\n     * @param {module:engine/view/matcher~MatcherPattern} [config.view] Pattern matching all view elements which should be converted. If not\n     * set, the converter will fire for every view element.\n     * @param {String|module:engine/model/element~Element|Function} config.model Name of the model element, a model element\n     * instance or a function that takes a view element and returns a model element. The model element will be inserted in the model.\n     * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n     * @returns {module:engine/conversion/upcasthelpers~UpcastHelpers}\n     */\n    value: function elementToElement(config) {\n      return this.add(upcastElementToElement(config));\n    }\n    /**\n     * View element to model attribute conversion helper.\n     *\n     * This conversion results in setting an attribute on a model node. For example, view `<strong>Foo</strong>` becomes\n     * `Foo` {@link module:engine/model/text~Text model text node} with `bold` attribute set to `true`.\n     *\n     * This helper is meant to set a model attribute on all the elements that are inside the converted element:\n     *\n     *\t\t<strong>Foo</strong>   -->   <strong><p>Foo</p></strong>   -->   <paragraph><$text bold=\"true\">Foo</$text></paragraph>\n     *\n     * Above is a sample of HTML code, that goes through autoparagraphing (first step) and then is converted (second step).\n     * Even though `<strong>` is over `<p>` element, `bold=\"true\"` was added to the text. See\n     * {@link module:engine/conversion/upcasthelpers~UpcastHelpers#attributeToAttribute} for comparison.\n     *\n     * Keep in mind that the attribute will be set only if it is allowed by {@link module:engine/model/schema~Schema schema} configuration.\n     *\n     *\t\teditor.conversion.for( 'upcast' ).elementToAttribute( {\n     *\t\t\tview: 'strong',\n     *\t\t\tmodel: 'bold'\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'upcast' ).elementToAttribute( {\n     *\t\t\tview: 'strong',\n     *\t\t\tmodel: 'bold',\n     *\t\t\tconverterPriority: 'high'\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'upcast' ).elementToAttribute( {\n     *\t\t\tview: {\n     *\t\t\t\tname: 'span',\n     *\t\t\t\tclasses: 'bold'\n     *\t\t\t},\n     *\t\t\tmodel: 'bold'\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'upcast' ).elementToAttribute( {\n     *\t\t\tview: {\n     *\t\t\t\tname: 'span',\n     *\t\t\t\tclasses: [ 'styled', 'styled-dark' ]\n     *\t\t\t},\n     *\t\t\tmodel: {\n     *\t\t\t\tkey: 'styled',\n     *\t\t\t\tvalue: 'dark'\n     *\t\t\t}\n     *\t\t} );\n     *\n     * \t\teditor.conversion.for( 'upcast' ).elementToAttribute( {\n     *\t\t\tview: {\n     *\t\t\t\tname: 'span',\n     *\t\t\t\tstyles: {\n     *\t\t\t\t\t'font-size': /[\\s\\S]+/\n     *\t\t\t\t}\n     *\t\t\t},\n     *\t\t\tmodel: {\n     *\t\t\t\tkey: 'fontSize',\n     *\t\t\t\tvalue: viewElement => {\n     *\t\t\t\t\tconst fontSize = viewElement.getStyle( 'font-size' );\n     *\t\t\t\t\tconst value = fontSize.substr( 0, fontSize.length - 2 );\n     *\n     *\t\t\t\t\tif ( value <= 10 ) {\n     *\t\t\t\t\t\treturn 'small';\n     *\t\t\t\t\t} else if ( value > 12 ) {\n     *\t\t\t\t\t\treturn 'big';\n     *\t\t\t\t\t}\n     *\n     *\t\t\t\t\treturn null;\n     *\t\t\t\t}\n     *\t\t\t}\n     *\t\t} );\n     *\n     * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n     * to the conversion process.\n     *\n     * @method #elementToAttribute\n     * @param {Object} config Conversion configuration.\n     * @param {module:engine/view/matcher~MatcherPattern} config.view Pattern matching all view elements which should be converted.\n     * @param {String|Object} config.model Model attribute key or an object with `key` and `value` properties, describing\n     * the model attribute. `value` property may be set as a function that takes a view element and returns the value.\n     * If `String` is given, the model attribute value will be set to `true`.\n     * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n     * @returns {module:engine/conversion/upcasthelpers~UpcastHelpers}\n     */\n\n  }, {\n    key: \"elementToAttribute\",\n    value: function elementToAttribute(config) {\n      return this.add(upcastElementToAttribute(config));\n    }\n    /**\n     * View attribute to model attribute conversion helper.\n     *\n     * This conversion results in setting an attribute on a model node. For example, view `<img src=\"foo.jpg\"></img>` becomes\n     * `<image source=\"foo.jpg\"></image>` in the model.\n     *\n     * This helper is meant to convert view attributes from view elements which got converted to the model, so the view attribute\n     * is set only on the corresponding model node:\n     *\n     *\t\t<div class=\"dark\"><div>foo</div></div>    -->    <div dark=\"true\"><div>foo</div></div>\n     *\n     * Above, `class=\"dark\"` attribute is added only to the `<div>` elements that has it. This is in contrary to\n     * {@link module:engine/conversion/upcasthelpers~UpcastHelpers#elementToAttribute} which sets attributes for\n     * all the children in the model:\n     *\n     *\t\t<strong>Foo</strong>   -->   <strong><p>Foo</p></strong>   -->   <paragraph><$text bold=\"true\">Foo</$text></paragraph>\n     *\n     * Above is a sample of HTML code, that goes through autoparagraphing (first step) and then is converted (second step).\n     * Even though `<strong>` is over `<p>` element, `bold=\"true\"` was added to the text.\n     *\n     * Keep in mind that the attribute will be set only if it is allowed by {@link module:engine/model/schema~Schema schema} configuration.\n     *\n     *\t\teditor.conversion.for( 'upcast' ).attributeToAttribute( {\n     *\t\t\tview: 'src',\n     *\t\t\tmodel: 'source'\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'upcast' ).attributeToAttribute( {\n     *\t\t\tview: { key: 'src' },\n     *\t\t\tmodel: 'source'\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'upcast' ).attributeToAttribute( {\n     *\t\t\tview: { key: 'src' },\n     *\t\t\tmodel: 'source',\n     *\t\t\tconverterPriority: 'normal'\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'upcast' ).attributeToAttribute( {\n     *\t\t\tview: {\n     *\t\t\t\tkey: 'data-style',\n     *\t\t\t\tvalue: /[\\s\\S]+/\n     *\t\t\t},\n     *\t\t\tmodel: 'styled'\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'upcast' ).attributeToAttribute( {\n     *\t\t\tview: {\n     *\t\t\t\tname: 'img',\n     *\t\t\t\tkey: 'class',\n     *\t\t\t\tvalue: 'styled-dark'\n     *\t\t\t},\n     *\t\t\tmodel: {\n     *\t\t\t\tkey: 'styled',\n     *\t\t\t\tvalue: 'dark'\n     *\t\t\t}\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'upcast' ).attributeToAttribute( {\n     *\t\t\tview: {\n     *\t\t\t\tkey: 'class',\n     *\t\t\t\tvalue: /styled-[\\S]+/\n     *\t\t\t},\n     *\t\t\tmodel: {\n     *\t\t\t\tkey: 'styled'\n     *\t\t\t\tvalue: viewElement => {\n     *\t\t\t\t\tconst regexp = /styled-([\\S]+)/;\n     *\t\t\t\t\tconst match = viewElement.getAttribute( 'class' ).match( regexp );\n     *\n     *\t\t\t\t\treturn match[ 1 ];\n     *\t\t\t\t}\n     *\t\t\t}\n     *\t\t} );\n     *\n     * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n     * to the conversion process.\n     *\n     * @method #attributeToAttribute\n     * @param {Object} config Conversion configuration.\n     * @param {String|Object} config.view Specifies which view attribute will be converted. If a `String` is passed,\n     * attributes with given key will be converted. If an `Object` is passed, it must have a required `key` property,\n     * specifying view attribute key, and may have an optional `value` property, specifying view attribute value and optional `name`\n     * property specifying a view element name from/on which the attribute should be converted. `value` can be given as a `String`,\n     * a `RegExp` or a function callback, that takes view attribute value as the only parameter and returns `Boolean`.\n     * @param {String|Object} config.model Model attribute key or an object with `key` and `value` properties, describing\n     * the model attribute. `value` property may be set as a function that takes a view element and returns the value.\n     * If `String` is given, the model attribute value will be same as view attribute value.\n     * @param {module:utils/priorities~PriorityString} [config.converterPriority='low'] Converter priority.\n     * @returns {module:engine/conversion/upcasthelpers~UpcastHelpers}\n     */\n\n  }, {\n    key: \"attributeToAttribute\",\n    value: function attributeToAttribute(config) {\n      return this.add(upcastAttributeToAttribute(config));\n    }\n    /**\n     * View element to model marker conversion helper.\n     *\n     * This conversion results in creating a model marker. For example, if the marker was stored in a view as an element:\n     * `<p>Fo<span data-marker=\"comment\" data-comment-id=\"7\"></span>o</p><p>B<span data-marker=\"comment\" data-comment-id=\"7\"></span>ar</p>`,\n     * after the conversion is done, the marker will be available in\n     * {@link module:engine/model/model~Model#markers model document markers}.\n     *\n     *\t\teditor.conversion.for( 'upcast' ).elementToMarker( {\n     *\t\t\tview: 'marker-search',\n     *\t\t\tmodel: 'search'\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'upcast' ).elementToMarker( {\n     *\t\t\tview: 'marker-search',\n     *\t\t\tmodel: 'search',\n     *\t\t\tconverterPriority: 'high'\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'upcast' ).elementToMarker( {\n     *\t\t\tview: 'marker-search',\n     *\t\t\tmodel: viewElement => 'comment:' + viewElement.getAttribute( 'data-comment-id' )\n     *\t\t} );\n     *\n     *\t\teditor.conversion.for( 'upcast' ).elementToMarker( {\n     *\t\t\tview: {\n     *\t\t\t\tname: 'span',\n     *\t\t\t\tattributes: {\n     *\t\t\t\t\t'data-marker': 'search'\n     *\t\t\t\t}\n     *\t\t\t},\n     *\t\t\tmodel: 'search'\n     *\t\t} );\n     *\n     * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n     * to the conversion process.\n     *\n     * @method #elementToMarker\n     * @param {Object} config Conversion configuration.\n     * @param {module:engine/view/matcher~MatcherPattern} config.view Pattern matching all view elements which should be converted.\n     * @param {String|Function} config.model Name of the model marker, or a function that takes a view element and returns\n     * a model marker name.\n     * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n     * @returns {module:engine/conversion/upcasthelpers~UpcastHelpers}\n     */\n\n  }, {\n    key: \"elementToMarker\",\n    value: function elementToMarker(config) {\n      return this.add(upcastElementToMarker(config));\n    }\n  }]);\n\n  return UpcastHelpers;\n}(ConversionHelpers);\n/**\n * Function factory, creates a converter that converts {@link module:engine/view/documentfragment~DocumentFragment view document fragment}\n * or all children of {@link module:engine/view/element~Element} into\n * {@link module:engine/model/documentfragment~DocumentFragment model document fragment}.\n * This is the \"entry-point\" converter for upcast (view to model conversion). This converter starts the conversion of all children\n * of passed view document fragment. Those children {@link module:engine/view/node~Node view nodes} are then handled by other converters.\n *\n * This also a \"default\", last resort converter for all view elements that has not been converted by other converters.\n * When a view element is being converted to the model but it does not have converter specified, that view element\n * will be converted to {@link module:engine/model/documentfragment~DocumentFragment model document fragment} and returned.\n *\n * @returns {Function} Universal converter for view {@link module:engine/view/documentfragment~DocumentFragment fragments} and\n * {@link module:engine/view/element~Element elements} that returns\n * {@link module:engine/model/documentfragment~DocumentFragment model fragment} with children of converted view item.\n */\n\n\nexport { UpcastHelpers as default };\nexport function convertToModelFragment() {\n  return function (evt, data, conversionApi) {\n    // Second argument in `consumable.consume` is discarded for ViewDocumentFragment but is needed for ViewElement.\n    if (!data.modelRange && conversionApi.consumable.consume(data.viewItem, {\n      name: true\n    })) {\n      var _conversionApi$conver = conversionApi.convertChildren(data.viewItem, data.modelCursor),\n          modelRange = _conversionApi$conver.modelRange,\n          modelCursor = _conversionApi$conver.modelCursor;\n\n      data.modelRange = modelRange;\n      data.modelCursor = modelCursor;\n    }\n  };\n}\n/**\n * Function factory, creates a converter that converts {@link module:engine/view/text~Text} to {@link module:engine/model/text~Text}.\n *\n * @returns {Function} {@link module:engine/view/text~Text View text} converter.\n */\n\nexport function convertText() {\n  return function (evt, data, conversionApi) {\n    if (conversionApi.schema.checkChild(data.modelCursor, '$text')) {\n      if (conversionApi.consumable.consume(data.viewItem)) {\n        var text = conversionApi.writer.createText(data.viewItem.data);\n        conversionApi.writer.insert(text, data.modelCursor);\n        data.modelRange = ModelRange._createFromPositionAndShift(data.modelCursor, text.offsetSize);\n        data.modelCursor = data.modelRange.end;\n      }\n    }\n  };\n}\n/**\n * Function factory, creates a callback function which converts a {@link module:engine/view/selection~Selection\n * view selection} taken from the {@link module:engine/view/document~Document#event:selectionChange} event\n * and sets in on the {@link module:engine/model/document~Document#selection model}.\n *\n * **Note**: because there is no view selection change dispatcher nor any other advanced view selection to model\n * conversion mechanism, the callback should be set directly on view document.\n *\n *\t\tview.document.on( 'selectionChange', convertSelectionChange( modelDocument, mapper ) );\n *\n * @param {module:engine/model/model~Model} model Data model.\n * @param {module:engine/conversion/mapper~Mapper} mapper Conversion mapper.\n * @returns {Function} {@link module:engine/view/document~Document#event:selectionChange} callback function.\n */\n\nexport function convertSelectionChange(model, mapper) {\n  return function (evt, data) {\n    var viewSelection = data.newSelection;\n    var modelSelection = new ModelSelection();\n    var ranges = [];\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = viewSelection.getRanges()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var viewRange = _step.value;\n        ranges.push(mapper.toModelRange(viewRange));\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n          _iterator[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    modelSelection.setTo(ranges, {\n      backward: viewSelection.isBackward\n    });\n\n    if (!modelSelection.isEqual(model.document.selection)) {\n      model.change(function (writer) {\n        writer.setSelection(modelSelection);\n      });\n    }\n  };\n} // View element to model element conversion helper.\n//\n// See {@link ~UpcastHelpers#elementToElement `.elementToElement()` upcast helper} for examples.\n//\n// @param {Object} config Conversion configuration.\n// @param {module:engine/view/matcher~MatcherPattern} [config.view] Pattern matching all view elements which should be converted. If not\n// set, the converter will fire for every view element.\n// @param {String|module:engine/model/element~Element|Function} config.model Name of the model element, a model element\n// instance or a function that takes a view element and returns a model element. The model element will be inserted in the model.\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n// @returns {Function} Conversion helper.\n\nfunction upcastElementToElement(config) {\n  config = cloneDeep(config);\n  var converter = prepareToElementConverter(config);\n  var elementName = getViewElementNameFromConfig(config);\n  var eventName = elementName ? 'element:' + elementName : 'element';\n  return function (dispatcher) {\n    dispatcher.on(eventName, converter, {\n      priority: config.converterPriority || 'normal'\n    });\n  };\n} // View element to model attribute conversion helper.\n//\n// See {@link ~UpcastHelpers#elementToAttribute `.elementToAttribute()` upcast helper} for examples.\n//\n// @param {Object} config Conversion configuration.\n// @param {module:engine/view/matcher~MatcherPattern} config.view Pattern matching all view elements which should be converted.\n// @param {String|Object} config.model Model attribute key or an object with `key` and `value` properties, describing\n// the model attribute. `value` property may be set as a function that takes a view element and returns the value.\n// If `String` is given, the model attribute value will be set to `true`.\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n// @returns {Function} Conversion helper.\n\n\nfunction upcastElementToAttribute(config) {\n  config = cloneDeep(config);\n  normalizeModelAttributeConfig(config);\n  var converter = prepareToAttributeConverter(config, false);\n  var elementName = getViewElementNameFromConfig(config);\n  var eventName = elementName ? 'element:' + elementName : 'element';\n  return function (dispatcher) {\n    dispatcher.on(eventName, converter, {\n      priority: config.converterPriority || 'low'\n    });\n  };\n} // View attribute to model attribute conversion helper.\n//\n// See {@link ~UpcastHelpers#attributeToAttribute `.attributeToAttribute()` upcast helper} for examples.\n//\n// @param {Object} config Conversion configuration.\n// @param {String|Object} config.view Specifies which view attribute will be converted. If a `String` is passed,\n// attributes with given key will be converted. If an `Object` is passed, it must have a required `key` property,\n// specifying view attribute key, and may have an optional `value` property, specifying view attribute value and optional `name`\n// property specifying a view element name from/on which the attribute should be converted. `value` can be given as a `String`,\n// a `RegExp` or a function callback, that takes view attribute value as the only parameter and returns `Boolean`.\n// @param {String|Object} config.model Model attribute key or an object with `key` and `value` properties, describing\n// the model attribute. `value` property may be set as a function that takes a view element and returns the value.\n// If `String` is given, the model attribute value will be same as view attribute value.\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='low'] Converter priority.\n// @returns {Function} Conversion helper.\n\n\nfunction upcastAttributeToAttribute(config) {\n  config = cloneDeep(config);\n  var viewKey = null;\n\n  if (typeof config.view == 'string' || config.view.key) {\n    viewKey = normalizeViewAttributeKeyValueConfig(config);\n  }\n\n  normalizeModelAttributeConfig(config, viewKey);\n  var converter = prepareToAttributeConverter(config, true);\n  return function (dispatcher) {\n    dispatcher.on('element', converter, {\n      priority: config.converterPriority || 'low'\n    });\n  };\n} // View element to model marker conversion helper.\n//\n// See {@link ~UpcastHelpers#elementToMarker `.elementToMarker()` upcast helper} for examples.\n//\n// @param {Object} config Conversion configuration.\n// @param {module:engine/view/matcher~MatcherPattern} config.view Pattern matching all view elements which should be converted.\n// @param {String|Function} config.model Name of the model marker, or a function that takes a view element and returns\n// a model marker name.\n// @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n// @returns {Function} Conversion helper.\n\n\nfunction upcastElementToMarker(config) {\n  config = cloneDeep(config);\n  normalizeToMarkerConfig(config);\n  return upcastElementToElement(config);\n} // Helper function for from-view-element conversion. Checks if `config.view` directly specifies converted view element's name\n// and if so, returns it.\n//\n// @param {Object} config Conversion config.\n// @returns {String|null} View element name or `null` if name is not directly set.\n\n\nfunction getViewElementNameFromConfig(config) {\n  if (typeof config.view == 'string') {\n    return config.view;\n  }\n\n  if (_typeof(config.view) == 'object' && typeof config.view.name == 'string') {\n    return config.view.name;\n  }\n\n  return null;\n} // Helper for to-model-element conversion. Takes a config object and returns a proper converter function.\n//\n// @param {Object} config Conversion configuration.\n// @returns {Function} View to model converter.\n\n\nfunction prepareToElementConverter(config) {\n  var matcher = config.view ? new Matcher(config.view) : null;\n  return function (evt, data, conversionApi) {\n    var match = {}; // If `config.view` has not been passed do not try matching. In this case, the converter should fire for all elements.\n\n    if (matcher) {\n      // This will be usually just one pattern but we support matchers with many patterns too.\n      var matcherResult = matcher.match(data.viewItem); // If there is no match, this callback should not do anything.\n\n      if (!matcherResult) {\n        return;\n      }\n\n      match = matcherResult.match;\n    } // Force consuming element's name.\n\n\n    match.name = true; // Create model element basing on config.\n\n    var modelElement = getModelElement(config.model, data.viewItem, conversionApi.writer); // Do not convert if element building function returned falsy value.\n\n    if (!modelElement) {\n      return;\n    } // When element was already consumed then skip it.\n\n\n    if (!conversionApi.consumable.test(data.viewItem, match)) {\n      return;\n    } // Find allowed parent for element that we are going to insert.\n    // If current parent does not allow to insert element but one of the ancestors does\n    // then split nodes to allowed parent.\n\n\n    var splitResult = conversionApi.splitToAllowedParent(modelElement, data.modelCursor); // When there is no split result it means that we can't insert element to model tree, so let's skip it.\n\n    if (!splitResult) {\n      return;\n    } // Insert element on allowed position.\n\n\n    conversionApi.writer.insert(modelElement, splitResult.position); // Convert children and insert to element.\n\n    conversionApi.convertChildren(data.viewItem, conversionApi.writer.createPositionAt(modelElement, 0)); // Consume appropriate value from consumable values list.\n\n    conversionApi.consumable.consume(data.viewItem, match);\n    var parts = conversionApi.getSplitParts(modelElement); // Set conversion result range.\n\n    data.modelRange = new ModelRange(conversionApi.writer.createPositionBefore(modelElement), conversionApi.writer.createPositionAfter(parts[parts.length - 1])); // Now we need to check where the `modelCursor` should be.\n\n    if (splitResult.cursorParent) {\n      // If we split parent to insert our element then we want to continue conversion in the new part of the split parent.\n      //\n      // before: <allowed><notAllowed>foo[]</notAllowed></allowed>\n      // after:  <allowed><notAllowed>foo</notAllowed><converted></converted><notAllowed>[]</notAllowed></allowed>\n      data.modelCursor = conversionApi.writer.createPositionAt(splitResult.cursorParent, 0);\n    } else {\n      // Otherwise just continue after inserted element.\n      data.modelCursor = data.modelRange.end;\n    }\n  };\n} // Helper function for upcasting-to-element converter. Takes the model configuration, the converted view element\n// and a writer instance and returns a model element instance to be inserted in the model.\n//\n// @param {String|Function|module:engine/model/element~Element} model Model conversion configuration.\n// @param {module:engine/view/node~Node} input The converted view node.\n// @param {module:engine/model/writer~Writer} writer A writer instance to use to create the model element.\n\n\nfunction getModelElement(model, input, writer) {\n  if (model instanceof Function) {\n    return model(input, writer);\n  } else {\n    return writer.createElement(model);\n  }\n} // Helper function view-attribute-to-model-attribute helper. Normalizes `config.view` which was set as `String` or\n// as an `Object` with `key`, `value` and `name` properties. Normalized `config.view` has is compatible with\n// {@link module:engine/view/matcher~MatcherPattern}.\n//\n// @param {Object} config Conversion config.\n// @returns {String} Key of the converted view attribute.\n\n\nfunction normalizeViewAttributeKeyValueConfig(config) {\n  if (typeof config.view == 'string') {\n    config.view = {\n      key: config.view\n    };\n  }\n\n  var key = config.view.key;\n  var normalized;\n\n  if (key == 'class' || key == 'style') {\n    var keyName = key == 'class' ? 'classes' : 'styles';\n    normalized = _defineProperty({}, keyName, config.view.value);\n  } else {\n    var value = typeof config.view.value == 'undefined' ? /[\\s\\S]*/ : config.view.value;\n    normalized = {\n      attributes: _defineProperty({}, key, value)\n    };\n  }\n\n  if (config.view.name) {\n    normalized.name = config.view.name;\n  }\n\n  config.view = normalized;\n  return key;\n} // Helper function that normalizes `config.model` in from-model-attribute conversion. `config.model` can be set\n// as a `String`, an `Object` with only `key` property or an `Object` with `key` and `value` properties. Normalized\n// `config.model` is an `Object` with `key` and `value` properties.\n//\n// @param {Object} config Conversion config.\n// @param {String} viewAttributeKeyToCopy Key of the converted view attribute. If it is set, model attribute value\n// will be equal to view attribute value.\n\n\nfunction normalizeModelAttributeConfig(config) {\n  var viewAttributeKeyToCopy = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var defaultModelValue = viewAttributeKeyToCopy === null ? true : function (viewElement) {\n    return viewElement.getAttribute(viewAttributeKeyToCopy);\n  };\n  var key = _typeof(config.model) != 'object' ? config.model : config.model.key;\n  var value = _typeof(config.model) != 'object' || typeof config.model.value == 'undefined' ? defaultModelValue : config.model.value;\n  config.model = {\n    key: key,\n    value: value\n  };\n} // Helper for to-model-attribute conversion. Takes the model attribute name and conversion configuration and returns\n// a proper converter function.\n//\n// @param {String} modelAttributeKey The key of the model attribute to set on a model node.\n// @param {Object|Array.<Object>} config Conversion configuration. It is possible to provide multiple configurations in an array.\n// @param {Boolean} shallow If set to `true` the attribute will be set only on top-level nodes. Otherwise, it will be set\n// on all elements in the range.\n\n\nfunction prepareToAttributeConverter(config, shallow) {\n  var matcher = new Matcher(config.view);\n  return function (evt, data, conversionApi) {\n    var match = matcher.match(data.viewItem); // If there is no match, this callback should not do anything.\n\n    if (!match) {\n      return;\n    }\n\n    var modelKey = config.model.key;\n    var modelValue = typeof config.model.value == 'function' ? config.model.value(data.viewItem) : config.model.value; // Do not convert if attribute building function returned falsy value.\n\n    if (modelValue === null) {\n      return;\n    }\n\n    if (onlyViewNameIsDefined(config)) {\n      match.match.name = true;\n    } else {\n      // Do not test or consume `name` consumable.\n      delete match.match.name;\n    } // Try to consume appropriate values from consumable values list.\n\n\n    if (!conversionApi.consumable.test(data.viewItem, match.match)) {\n      return;\n    } // Since we are converting to attribute we need an range on which we will set the attribute.\n    // If the range is not created yet, we will create it.\n\n\n    if (!data.modelRange) {\n      // Convert children and set conversion result as a current data.\n      data = Object.assign(data, conversionApi.convertChildren(data.viewItem, data.modelCursor));\n    } // Set attribute on current `output`. `Schema` is checked inside this helper function.\n\n\n    var attributeWasSet = setAttributeOn(data.modelRange, {\n      key: modelKey,\n      value: modelValue\n    }, shallow, conversionApi);\n\n    if (attributeWasSet) {\n      conversionApi.consumable.consume(data.viewItem, match.match);\n    }\n  };\n} // Helper function that checks if element name should be consumed in attribute converters.\n//\n// @param {Object} config Conversion config.\n// @returns {Boolean}\n\n\nfunction onlyViewNameIsDefined(config) {\n  if (_typeof(config.view) == 'object' && !getViewElementNameFromConfig(config)) {\n    return false;\n  }\n\n  return !config.view.classes && !config.view.attributes && !config.view.styles;\n} // Helper function for to-model-attribute converter. Sets model attribute on given range. Checks {@link module:engine/model/schema~Schema}\n// to ensure proper model structure.\n//\n// @param {module:engine/model/range~Range} modelRange Model range on which attribute should be set.\n// @param {Object} modelAttribute Model attribute to set.\n// @param {module:engine/conversion/upcastdispatcher~UpcastConversionApi} conversionApi Conversion API.\n// @param {Boolean} shallow If set to `true` the attribute will be set only on top-level nodes. Otherwise, it will be set\n// on all elements in the range.\n// @returns {Boolean} `true` if attribute was set on at least one node from given `modelRange`.\n\n\nfunction setAttributeOn(modelRange, modelAttribute, shallow, conversionApi) {\n  var result = false; // Set attribute on each item in range according to Schema.\n\n  for (var _i = 0, _Array$from = Array.from(modelRange.getItems({\n    shallow: shallow\n  })); _i < _Array$from.length; _i++) {\n    var node = _Array$from[_i];\n\n    if (conversionApi.schema.checkAttribute(node, modelAttribute.key)) {\n      conversionApi.writer.setAttribute(modelAttribute.key, modelAttribute.value, node);\n      result = true;\n    }\n  }\n\n  return result;\n} // Helper function for upcasting-to-marker conversion. Takes the config in a format requested by `upcastElementToMarker()`\n// function and converts it to a format that is supported by `_upcastElementToElement()` function.\n//\n// @param {Object} config Conversion configuration.\n\n\nfunction normalizeToMarkerConfig(config) {\n  var oldModel = config.model;\n\n  config.model = function (viewElement, modelWriter) {\n    var markerName = typeof oldModel == 'string' ? oldModel : oldModel(viewElement);\n    return modelWriter.createElement('$marker', {\n      'data-name': markerName\n    });\n  };\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/controller/editingcontroller\n */\nimport RootEditableElement from '../view/rooteditableelement';\nimport View from '../view/view';\nimport Mapper from '../conversion/mapper';\nimport DowncastDispatcher from '../conversion/downcastdispatcher';\nimport { clearAttributes, convertCollapsedSelection, convertRangeSelection, insertText, remove } from '../conversion/downcasthelpers';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport { convertSelectionChange } from '../conversion/upcasthelpers';\n/**\n * Controller for the editing pipeline. The editing pipeline controls {@link ~EditingController#model model} rendering,\n * including selection handling. It also creates the {@link ~EditingController#view view} which builds a\n * browser-independent virtualization over the DOM elements. The editing controller also attaches default converters.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\n\nvar EditingController =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an editing controller instance.\n   *\n   * @param {module:engine/model/model~Model} model Editing model.\n   */\n  function EditingController(model) {\n    var _this = this;\n\n    _classCallCheck(this, EditingController);\n\n    /**\n     * Editor model.\n     *\n     * @readonly\n     * @member {module:engine/model/model~Model}\n     */\n    this.model = model;\n    /**\n     * Editing view controller.\n     *\n     * @readonly\n     * @member {module:engine/view/view~View}\n     */\n\n    this.view = new View();\n    /**\n     * Mapper which describes the model-view binding.\n     *\n     * @readonly\n     * @member {module:engine/conversion/mapper~Mapper}\n     */\n\n    this.mapper = new Mapper();\n    /**\n     * Downcast dispatcher that converts changes from the model to {@link #view the editing view}.\n     *\n     * @readonly\n     * @member {module:engine/conversion/downcastdispatcher~DowncastDispatcher} #downcastDispatcher\n     */\n\n    this.downcastDispatcher = new DowncastDispatcher({\n      mapper: this.mapper\n    });\n    var doc = this.model.document;\n    var selection = doc.selection;\n    var markers = this.model.markers; // When plugins listen on model changes (on selection change, post fixers, etc) and change the view as a result of\n    // model's change, they might trigger view rendering before the conversion is completed (e.g. before the selection\n    // is converted). We disable rendering for the length of the outermost model change() block to prevent that.\n    //\n    // See  https://github.com/ckeditor/ckeditor5-engine/issues/1528\n\n    this.listenTo(this.model, '_beforeChanges', function () {\n      _this.view._disableRendering(true);\n    }, {\n      priority: 'highest'\n    });\n    this.listenTo(this.model, '_afterChanges', function () {\n      _this.view._disableRendering(false);\n    }, {\n      priority: 'lowest'\n    }); // Whenever model document is changed, convert those changes to the view (using model.Document#differ).\n    // Do it on 'low' priority, so changes are converted after other listeners did their job.\n    // Also convert model selection.\n\n    this.listenTo(doc, 'change', function () {\n      _this.view.change(function (writer) {\n        _this.downcastDispatcher.convertChanges(doc.differ, writer);\n\n        _this.downcastDispatcher.convertSelection(selection, markers, writer);\n      });\n    }, {\n      priority: 'low'\n    }); // Convert selection from the view to the model when it changes in the view.\n\n    this.listenTo(this.view.document, 'selectionChange', convertSelectionChange(this.model, this.mapper)); // Attach default model converters.\n\n    this.downcastDispatcher.on('insert:$text', insertText(), {\n      priority: 'lowest'\n    });\n    this.downcastDispatcher.on('remove', remove(), {\n      priority: 'low'\n    }); // Attach default model selection converters.\n\n    this.downcastDispatcher.on('selection', clearAttributes(), {\n      priority: 'low'\n    });\n    this.downcastDispatcher.on('selection', convertRangeSelection(), {\n      priority: 'low'\n    });\n    this.downcastDispatcher.on('selection', convertCollapsedSelection(), {\n      priority: 'low'\n    }); // Binds {@link module:engine/view/document~Document#roots view roots collection} to\n    // {@link module:engine/model/document~Document#roots model roots collection} so creating\n    // model root automatically creates corresponding view root.\n\n    this.view.document.roots.bindTo(this.model.document.roots).using(function (root) {\n      // $graveyard is a special root that has no reflection in the view.\n      if (root.rootName == '$graveyard') {\n        return null;\n      }\n\n      var viewRoot = new RootEditableElement(root.name);\n      viewRoot.rootName = root.rootName;\n      viewRoot._document = _this.view.document;\n\n      _this.mapper.bindElements(root, viewRoot);\n\n      return viewRoot;\n    });\n  }\n  /**\n   * Removes all event listeners attached to the `EditingController`. Destroys all objects created\n   * by `EditingController` that need to be destroyed.\n   */\n\n\n  _createClass(EditingController, [{\n    key: \"destroy\",\n    value: function destroy() {\n      this.view.destroy();\n      this.stopListening();\n    }\n  }]);\n\n  return EditingController;\n}();\n\nexport { EditingController as default };\nmix(EditingController, ObservableMixin);","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module core/plugincollection\n */\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport log from '@ckeditor/ckeditor5-utils/src/log';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n/**\n * Manages a list of CKEditor plugins, including loading, resolving dependencies and initialization.\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n */\n\nvar PluginCollection =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of the PluginCollection class.\n   * Allows loading and initializing plugins and their dependencies.\n   *\n   * @param {module:core/editor/editor~Editor} editor\n   * @param {Array.<Function>} [availablePlugins] Plugins (constructors) which the collection will be able to use\n   * when {@link module:core/plugincollection~PluginCollection#init} is used with plugin names (strings, instead of constructors).\n   * Usually, the editor will pass its built-in plugins to the collection so they can later be\n   * used in `config.plugins` or `config.removePlugins` by names.\n   */\n  function PluginCollection(editor) {\n    var availablePlugins = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    _classCallCheck(this, PluginCollection);\n\n    /**\n     * @protected\n     * @member {module:core/editor/editor~Editor} module:core/plugin~PluginCollection#_editor\n     */\n    this._editor = editor;\n    /**\n     * Map of plugin constructors which can be retrieved by their names.\n     *\n     * @protected\n     * @member {Map.<String|Function,Function>} module:core/plugin~PluginCollection#_availablePlugins\n     */\n\n    this._availablePlugins = new Map();\n    /**\n     * @protected\n     * @member {Map} module:core/plugin~PluginCollection#_plugins\n     */\n\n    this._plugins = new Map();\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = availablePlugins[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var PluginConstructor = _step.value;\n\n        this._availablePlugins.set(PluginConstructor, PluginConstructor);\n\n        if (PluginConstructor.pluginName) {\n          this._availablePlugins.set(PluginConstructor.pluginName, PluginConstructor);\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n          _iterator[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  }\n  /**\n   * Iterable interface.\n   *\n   * Returns `[ PluginConstructor, pluginInstance ]` pairs.\n   *\n   * @returns {Iterable.<Array>}\n   */\n\n\n  _createClass(PluginCollection, [{\n    key: Symbol.iterator,\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function value() {\n      var _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, entry;\n\n      return regeneratorRuntime.wrap(function value$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _iteratorNormalCompletion2 = true;\n              _didIteratorError2 = false;\n              _iteratorError2 = undefined;\n              _context.prev = 3;\n              _iterator2 = this._plugins[Symbol.iterator]();\n\n            case 5:\n              if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {\n                _context.next = 13;\n                break;\n              }\n\n              entry = _step2.value;\n\n              if (!(typeof entry[0] == 'function')) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.next = 10;\n              return entry;\n\n            case 10:\n              _iteratorNormalCompletion2 = true;\n              _context.next = 5;\n              break;\n\n            case 13:\n              _context.next = 19;\n              break;\n\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](3);\n              _didIteratorError2 = true;\n              _iteratorError2 = _context.t0;\n\n            case 19:\n              _context.prev = 19;\n              _context.prev = 20;\n\n              if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n                _iterator2[\"return\"]();\n              }\n\n            case 22:\n              _context.prev = 22;\n\n              if (!_didIteratorError2) {\n                _context.next = 25;\n                break;\n              }\n\n              throw _iteratorError2;\n\n            case 25:\n              return _context.finish(22);\n\n            case 26:\n              return _context.finish(19);\n\n            case 27:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, value, this, [[3, 15, 19, 27], [20,, 22, 26]]);\n    })\n    /**\n     * Gets the plugin instance by its constructor or name.\n     *\n     *\t\t// Check if 'Clipboard' plugin was loaded.\n     *\t\tif ( editor.plugins.has( 'Clipboard' ) ) {\n     *\t\t\t// Get clipboard plugin instance\n     *\t\t\tconst clipboard = editor.plugins.get( 'Clipboard' );\n     *\n     *\t\t\tthis.listenTo( clipboard, 'inputTransformation', ( evt, data ) => {\n     *\t\t\t\t// Do something on clipboard input.\n     *\t\t\t} );\n     *\t\t}\n     *\n     * **Note**: This method will throw error if plugin is not loaded. Use `{@link #has editor.plugins.has()}`\n     * to check if plugin is available.\n     *\n     * @param {Function|String} key The plugin constructor or {@link module:core/plugin~PluginInterface.pluginName name}.\n     * @returns {module:core/plugin~PluginInterface}\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      var plugin = this._plugins.get(key);\n\n      if (!plugin) {\n        /**\n         * The plugin is not loaded and could not be obtained.\n         *\n         * Plugin classes (constructors) need to be provided to the editor and must be loaded before they can be obtained from\n         * the plugin collection.\n         * This is usually done in CKEditor 5 builds by setting the {@link module:core/editor/editor~Editor.builtinPlugins}\n         * property.\n         *\n         * **Note**: You can use `{@link module:core/plugincollection~PluginCollection#has editor.plugins.has()}`\n         * to check if plugin was loaded.\n         *\n         * @error plugincollection-plugin-not-loaded\n         * @param {String} plugin The name of the plugin which is not loaded.\n         */\n        var errorMsg = 'plugincollection-plugin-not-loaded: The requested plugin is not loaded.';\n        var pluginName = key;\n\n        if (typeof key == 'function') {\n          pluginName = key.pluginName || key.name;\n        }\n\n        throw new CKEditorError(errorMsg, this._editor, {\n          plugin: pluginName\n        });\n      }\n\n      return plugin;\n    }\n    /**\n     * Checks if plugin is loaded.\n     *\n     *\t\t// Check if 'Clipboard' plugin was loaded.\n     *\t\tif ( editor.plugins.has( 'Clipboard' ) ) {\n     *\t\t\t// Now use clipboard plugin instance:\n     *\t\t\tconst clipboard = editor.plugins.get( 'Clipboard' );\n     *\n     *\t\t\t// ...\n     *\t\t}\n     *\n     * @param {Function|String} key The plugin constructor or {@link module:core/plugin~PluginInterface.pluginName name}.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"has\",\n    value: function has(key) {\n      return this._plugins.has(key);\n    }\n    /**\n     * Initializes a set of plugins and adds them to the collection.\n     *\n     * @param {Array.<Function|String>} plugins An array of {@link module:core/plugin~PluginInterface plugin constructors}\n     * or {@link module:core/plugin~PluginInterface.pluginName plugin names}. The second option (names) works only if\n     * `availablePlugins` were passed to the {@link #constructor}.\n     * @param {Array.<String|Function>} [removePlugins] Names of plugins or plugin constructors\n     * that should not be loaded (despite being specified in the `plugins` array).\n     * @returns {Promise.<module:core/plugin~LoadedPlugins>} A promise which gets resolved once all plugins are loaded\n     * and available in the collection.\n     */\n\n  }, {\n    key: \"init\",\n    value: function init(plugins) {\n      var removePlugins = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      var that = this;\n      var editor = this._editor;\n      var loading = new Set();\n      var loaded = [];\n      var pluginConstructors = mapToAvailableConstructors(plugins);\n      var removePluginConstructors = mapToAvailableConstructors(removePlugins);\n      var missingPlugins = getMissingPluginNames(plugins);\n\n      if (missingPlugins) {\n        /**\n         * Some plugins are not available and could not be loaded.\n         *\n         * Plugin classes (constructors) need to be provided to the editor before they can be loaded by name.\n         * This is usually done in CKEditor 5 builds by setting the {@link module:core/editor/editor~Editor.builtinPlugins}\n         * property.\n         *\n         * **If you see this warning when using one of the {@glink builds/index CKEditor 5 Builds}**, it means\n         * that you try to enable a plugin which was not included in that build. This may be due to a typo\n         * in the plugin name or simply because that plugin is not a part of this build. In the latter scenario,\n         * read more about {@glink builds/guides/development/custom-builds custom builds}.\n         *\n         * **If you see this warning when using one of the editor creators directly** (not a build), then it means\n         * that you tried loading plugins by name. However, unlike CKEditor 4, CKEditor 5 does not implement a \"plugin loader\".\n         * This means that CKEditor 5 does not know where to load the plugin modules from. Therefore, you need to\n         * provide each plugin through reference (as a constructor function). Check out the examples in\n         * {@glink builds/guides/integration/advanced-setup#scenario-2-building-from-source \"Building from source\"}.\n         *\n         * @error plugincollection-plugin-not-found\n         * @param {Array.<String>} plugins The name of the plugins which could not be loaded.\n         */\n        var errorMsg = 'plugincollection-plugin-not-found: Some plugins are not available and could not be loaded.'; // Log the error so it's more visible on the console. Hopefully, for better DX.\n\n        log.error(errorMsg, {\n          plugins: missingPlugins\n        });\n        return Promise.reject(new CKEditorError(errorMsg, this._editor, {\n          plugins: missingPlugins\n        }));\n      }\n\n      return Promise.all(pluginConstructors.map(loadPlugin)).then(function () {\n        return initPlugins(loaded, 'init');\n      }).then(function () {\n        return initPlugins(loaded, 'afterInit');\n      }).then(function () {\n        return loaded;\n      });\n\n      function loadPlugin(PluginConstructor) {\n        if (removePluginConstructors.includes(PluginConstructor)) {\n          return;\n        } // The plugin is already loaded or being loaded - do nothing.\n\n\n        if (that._plugins.has(PluginConstructor) || loading.has(PluginConstructor)) {\n          return;\n        }\n\n        return instantiatePlugin(PluginConstructor)[\"catch\"](function (err) {\n          /**\n           * It was not possible to load the plugin.\n           *\n           * This is a generic error logged to the console when a JavaSript error is thrown during the initialization\n           * of one of the plugins.\n           *\n           * If you correctly handled the promise returned by the editor's `create()` method (like shown below)\n           * you will find the original error logged to the console, too:\n           *\n           *\t\tClassicEditor.create( document.getElementById( 'editor' ) )\n           *\t\t\t.then( editor => {\n           *\t\t\t\t// ...\n           * \t\t\t} )\n           *\t\t\t.catch( error => {\n           *\t\t\t\tconsole.error( error );\n           *\t\t\t} );\n           *\n           * @error plugincollection-load\n           * @param {String} plugin The name of the plugin that could not be loaded.\n           */\n          log.error('plugincollection-load: It was not possible to load the plugin.', {\n            plugin: PluginConstructor\n          });\n          throw err;\n        });\n      }\n\n      function initPlugins(loadedPlugins, method) {\n        return loadedPlugins.reduce(function (promise, plugin) {\n          if (!plugin[method]) {\n            return promise;\n          }\n\n          return promise.then(plugin[method].bind(plugin));\n        }, Promise.resolve());\n      }\n\n      function instantiatePlugin(PluginConstructor) {\n        return new Promise(function (resolve) {\n          loading.add(PluginConstructor);\n\n          if (PluginConstructor.requires) {\n            PluginConstructor.requires.forEach(function (RequiredPluginConstructorOrName) {\n              var RequiredPluginConstructor = getPluginConstructor(RequiredPluginConstructorOrName);\n\n              if (removePlugins.includes(RequiredPluginConstructor)) {\n                /**\n                 * Cannot load a plugin because one of its dependencies is listed in the `removePlugins` option.\n                 *\n                 * @error plugincollection-required\n                 * @param {Function} plugin The required plugin.\n                 * @param {Function} requiredBy The parent plugin.\n                 */\n                throw new CKEditorError('plugincollection-required: Cannot load a plugin because one of its dependencies is listed in' + 'the `removePlugins` option.', editor, {\n                  plugin: RequiredPluginConstructor,\n                  requiredBy: PluginConstructor\n                });\n              }\n\n              loadPlugin(RequiredPluginConstructor);\n            });\n          }\n\n          var plugin = new PluginConstructor(editor);\n\n          that._add(PluginConstructor, plugin);\n\n          loaded.push(plugin);\n          resolve();\n        });\n      }\n\n      function getPluginConstructor(PluginConstructorOrName) {\n        if (typeof PluginConstructorOrName == 'function') {\n          return PluginConstructorOrName;\n        }\n\n        return that._availablePlugins.get(PluginConstructorOrName);\n      }\n\n      function getMissingPluginNames(plugins) {\n        var missingPlugins = [];\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n          for (var _iterator3 = plugins[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n            var pluginNameOrConstructor = _step3.value;\n\n            if (!getPluginConstructor(pluginNameOrConstructor)) {\n              missingPlugins.push(pluginNameOrConstructor);\n            }\n          }\n        } catch (err) {\n          _didIteratorError3 = true;\n          _iteratorError3 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n              _iterator3[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError3) {\n              throw _iteratorError3;\n            }\n          }\n        }\n\n        return missingPlugins.length ? missingPlugins : null;\n      }\n\n      function mapToAvailableConstructors(plugins) {\n        return plugins.map(function (pluginNameOrConstructor) {\n          return getPluginConstructor(pluginNameOrConstructor);\n        }).filter(function (PluginConstructor) {\n          return !!PluginConstructor;\n        });\n      }\n    }\n    /**\n     * Destroys all loaded plugins.\n     *\n     * @returns {Promise}\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var promises = Array.from(this).map(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            pluginInstance = _ref2[1];\n\n        return pluginInstance;\n      }).filter(function (pluginInstance) {\n        return typeof pluginInstance.destroy == 'function';\n      }).map(function (pluginInstance) {\n        return pluginInstance.destroy();\n      });\n      return Promise.all(promises);\n    }\n    /**\n     * Adds the plugin to the collection. Exposed mainly for testing purposes.\n     *\n     * @protected\n     * @param {Function} PluginConstructor The plugin constructor.\n     * @param {module:core/plugin~PluginInterface} plugin The instance of the plugin.\n     */\n\n  }, {\n    key: \"_add\",\n    value: function _add(PluginConstructor, plugin) {\n      this._plugins.set(PluginConstructor, plugin);\n\n      var pluginName = PluginConstructor.pluginName;\n\n      if (!pluginName) {\n        return;\n      }\n\n      if (this._plugins.has(pluginName)) {\n        /**\n         * Two plugins with the same {@link module:core/plugin~PluginInterface.pluginName} were loaded.\n         * This will lead to runtime conflicts between these plugins.\n         *\n         * In practice, this warning usually means that new plugins were added to an existing CKEditor 5 build.\n         * Plugins should always be added to a source version of the editor (`@ckeditor/ckeditor5-editor-*`),\n         * not to an editor imported from one of the `@ckeditor/ckeditor5-build-*` packages.\n         *\n         * Check your import paths and the list of plugins passed to\n         * {@link module:core/editor/editor~Editor.create `Editor.create()`}\n         * or specified in {@link module:core/editor/editor~Editor.builtinPlugins `Editor.builtinPlugins`}.\n         *\n         * The second option is that your `node_modules/` directory contains duplicated versions of the same\n         * CKEditor 5 packages. Normally, on clean installations, npm deduplicates packages in `node_modules/`, so\n         * it may be enough to call `rm -rf node_modules && npm i`. However, if you installed conflicting versions\n         * of packages, their dependencies may need to be installed in more than one version which may lead to this\n         * warning.\n         *\n         * Technically speaking, this error occurs because after adding a plugin to an existing editor build\n         * dependencies of this plugin are being duplicated.\n         * They are already built into that editor build and now get added for the second time as dependencies\n         * of the plugin you are installing.\n         *\n         * Read more about {@glink builds/guides/integration/installing-plugins installing plugins}.\n         *\n         * @error plugincollection-plugin-name-conflict\n         * @param {String} pluginName The duplicated plugin name.\n         * @param {Function} plugin1 The first plugin constructor.\n         * @param {Function} plugin2 The second plugin constructor.\n         */\n        log.warn('plugincollection-plugin-name-conflict: Two plugins with the same name were loaded.', {\n          pluginName: pluginName,\n          plugin1: this._plugins.get(pluginName).constructor,\n          plugin2: PluginConstructor\n        });\n      } else {\n        this._plugins.set(pluginName, plugin);\n      }\n    }\n  }]);\n\n  return PluginCollection;\n}();\n\nexport { PluginCollection as default };\nmix(PluginCollection, EmitterMixin);","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module core/commandcollection\n */\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * Collection of commands. Its instance is available in {@link module:core/editor/editor~Editor#commands `editor.commands`}.\n */\n\nvar CommandCollection =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates collection instance.\n   */\n  function CommandCollection() {\n    _classCallCheck(this, CommandCollection);\n\n    /**\n     * Command map.\n     *\n     * @private\n     * @member {Map}\n     */\n    this._commands = new Map();\n  }\n  /**\n   * Registers a new command.\n   *\n   * @param {String} commandName The name of the command.\n   * @param {module:core/command~Command} command\n   */\n\n\n  _createClass(CommandCollection, [{\n    key: \"add\",\n    value: function add(commandName, command) {\n      this._commands.set(commandName, command);\n    }\n    /**\n     * Retrieves a command from the collection.\n     *\n     * @param {String} commandName The name of the command.\n     * @returns {module:core/command~Command}\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(commandName) {\n      return this._commands.get(commandName);\n    }\n    /**\n     * Executes a command.\n     *\n     * @param {String} commandName The name of the command.\n     * @param {*} [...commandParams] Command parameters.\n     */\n\n  }, {\n    key: \"execute\",\n    value: function execute(commandName) {\n      var command = this.get(commandName);\n\n      if (!command) {\n        /**\n         * Command does not exist.\n         *\n         * @error commandcollection-command-not-found\n         * @param {String} commandName Name of the command.\n         */\n        throw new CKEditorError('commandcollection-command-not-found: Command does not exist.', this, {\n          commandName: commandName\n        });\n      }\n\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      command.execute.apply(command, args);\n    }\n    /**\n     * Returns iterator of command names.\n     *\n     * @returns {Iterable.<String>}\n     */\n\n  }, {\n    key: \"names\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function names() {\n      return regeneratorRuntime.wrap(function names$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.delegateYield(this._commands.keys(), \"t0\", 1);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, names, this);\n    })\n    /**\n     * Returns iterator of command instances.\n     *\n     * @returns {Iterable.<module:core/command~Command>}\n     */\n\n  }, {\n    key: \"commands\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function commands() {\n      return regeneratorRuntime.wrap(function commands$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.delegateYield(this._commands.values(), \"t0\", 1);\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, commands, this);\n    })\n    /**\n     * Iterable interface.\n     *\n     * Returns `[ commandName, commandInstance ]` pairs.\n     *\n     * @returns {Iterable.<Array>}\n     */\n\n  }, {\n    key: Symbol.iterator,\n    value: function value() {\n      return this._commands[Symbol.iterator]();\n    }\n    /**\n     * Destroys all collection commands.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.commands()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var command = _step.value;\n          command.destroy();\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }]);\n\n  return CommandCollection;\n}();\n\nexport { CommandCollection as default };","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* globals window */\n\n/**\n * @module utils/translation-service\n */\n\n/* istanbul ignore else */\nif (!window.CKEDITOR_TRANSLATIONS) {\n  window.CKEDITOR_TRANSLATIONS = {};\n}\n/**\n * Adds translations to existing ones.\n * These translations will later be available for the {@link module:utils/translation-service~translate `translate()`} function.\n *\n *\t\tadd( 'pl', {\n *\t\t\t'OK': 'OK',\n *\t\t\t'Cancel [context: reject]': 'Anuluj'\n *\t\t} );\n *\n * If you cannot import this function from this module (e.g. because you use a CKEditor 5 build), then you can\n * still add translations by extending the global `window.CKEDITOR_TRANSLATIONS` object by using a function like\n * the one below:\n *\n *\t\tfunction addTranslations( language, translations ) {\n *\t\t\tif ( !window.CKEDITOR_TRANSLATIONS ) {\n *\t\t\t\twindow.CKEDITOR_TRANSLATIONS = {};\n *\t\t\t}\n *\n *\t\t\tconst dictionary = window.CKEDITOR_TRANSLATIONS[ language ] || ( window.CKEDITOR_TRANSLATIONS[ language ] = {} );\n *\n *\t\t\t// Extend the dictionary for the given language.\n *\t\t\tObject.assign( dictionary, translations );\n *\t\t}\n *\n * @param {String} language Target language.\n * @param {Object.<String, String>} translations Translations which will be added to the dictionary.\n */\n\n\nexport function add(language, translations) {\n  var dictionary = window.CKEDITOR_TRANSLATIONS[language] || (window.CKEDITOR_TRANSLATIONS[language] = {});\n  Object.assign(dictionary, translations);\n}\n/**\n * Translates string if the translation of the string was previously added to the dictionary.\n * See {@link module:utils/translation-service Translation Service}.\n * This happens in a multi-language mode were translation modules are created by the bundler.\n *\n * When no translation is defined in the dictionary or the dictionary doesn't exist this function returns\n * the original string without the `'[context: ]'` (happens in development and single-language modes).\n *\n * In a single-language mode (when values passed to `t()` were replaced with target language strings) the dictionary\n * is left empty, so this function will return the original strings always.\n *\n *\t\ttranslate( 'pl', 'Cancel [context: reject]' );\n *\n * @param {String} language Target language.\n * @param {String} translationKey String that will be translated.\n * @returns {String} Translated sentence.\n */\n\nexport function translate(language, translationKey) {\n  var numberOfLanguages = getNumberOfLanguages();\n\n  if (numberOfLanguages === 1) {\n    // Override the language to the only supported one.\n    // This can't be done in the `Locale` class, because the translations comes after the `Locale` class initialization.\n    language = Object.keys(window.CKEDITOR_TRANSLATIONS)[0];\n  }\n\n  if (numberOfLanguages === 0 || !hasTranslation(language, translationKey)) {\n    return translationKey.replace(/ \\[context: [^\\]]+\\]$/, '');\n  }\n\n  var dictionary = window.CKEDITOR_TRANSLATIONS[language]; // In case of missing translations we still need to cut off the `[context: ]` parts.\n\n  return dictionary[translationKey].replace(/ \\[context: [^\\]]+\\]$/, '');\n}\n/**\n * Clears dictionaries for test purposes.\n *\n * @protected\n */\n\nexport function _clear() {\n  window.CKEDITOR_TRANSLATIONS = {};\n} // Checks whether the dictionary exists and translation in that dictionary exists.\n\nfunction hasTranslation(language, translationKey) {\n  return language in window.CKEDITOR_TRANSLATIONS && translationKey in window.CKEDITOR_TRANSLATIONS[language];\n}\n\nfunction getNumberOfLanguages() {\n  return Object.keys(window.CKEDITOR_TRANSLATIONS).length;\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/locale\n */\nimport { translate } from './translation-service';\n/**\n * Represents the localization services.\n */\n\nvar Locale =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a new instance of the Locale class.\n   *\n   * @param {String} [language='en'] The language code in [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) format.\n   */\n  function Locale(language) {\n    var _this = this;\n\n    _classCallCheck(this, Locale);\n\n    /**\n     * The language code in [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) format.\n     *\n     * @readonly\n     * @member {String}\n     */\n    this.language = language || 'en';\n    /**\n     * Translates the given string to the {@link #language}. This method is also available in {@link module:core/editor/editor~Editor#t}\n     * and {@link module:ui/view~View#t}.\n     *\n     * The strings may contain placeholders (`%<index>`) for values which are passed as the second argument.\n     * `<index>` is the index in the `values` array.\n     *\n     *\t\teditor.t( 'Created file \"%0\" in %1ms.', [ fileName, timeTaken ] );\n     *\n     * This method's context is statically bound to Locale instance,\n     * so it can be called as a function:\n     *\n     *\t\tconst t = this.t;\n     *\t\tt( 'Label' );\n     *\n     * @method #t\n     * @param {String} str The string to translate.\n     * @param {String[]} [values] Values that should be used to interpolate the string.\n     */\n\n    this.t = function () {\n      return _this._t.apply(_this, arguments);\n    };\n  }\n  /**\n   * Base for the {@link #t} method.\n   *\n   * @private\n   */\n\n\n  _createClass(Locale, [{\n    key: \"_t\",\n    value: function _t(str, values) {\n      var translatedString = translate(this.language, str);\n\n      if (values) {\n        translatedString = translatedString.replace(/%(\\d+)/g, function (match, index) {\n          return index < values.length ? values[index] : match;\n        });\n      }\n\n      return translatedString;\n    }\n  }]);\n\n  return Locale;\n}();\n\nexport { Locale as default };","function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/conversion/viewconsumable\n */\nimport { isArray } from 'lodash-es';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * Class used for handling consumption of view {@link module:engine/view/element~Element elements},\n * {@link module:engine/view/text~Text text nodes} and {@link module:engine/view/documentfragment~DocumentFragment document fragments}.\n * Element's name and its parts (attributes, classes and styles) can be consumed separately. Consuming an element's name\n * does not consume its attributes, classes and styles.\n * To add items for consumption use {@link module:engine/conversion/viewconsumable~ViewConsumable#add add method}.\n * To test items use {@link module:engine/conversion/viewconsumable~ViewConsumable#test test method}.\n * To consume items use {@link module:engine/conversion/viewconsumable~ViewConsumable#consume consume method}.\n * To revert already consumed items use {@link module:engine/conversion/viewconsumable~ViewConsumable#revert revert method}.\n *\n *\t\tviewConsumable.add( element, { name: true } ); // Adds element's name as ready to be consumed.\n *\t\tviewConsumable.add( textNode ); // Adds text node for consumption.\n *\t\tviewConsumable.add( docFragment ); // Adds document fragment for consumption.\n *\t\tviewConsumable.test( element, { name: true }  ); // Tests if element's name can be consumed.\n *\t\tviewConsumable.test( textNode ); // Tests if text node can be consumed.\n *\t\tviewConsumable.test( docFragment ); // Tests if document fragment can be consumed.\n *\t\tviewConsumable.consume( element, { name: true }  ); // Consume element's name.\n *\t\tviewConsumable.consume( textNode ); // Consume text node.\n *\t\tviewConsumable.consume( docFragment ); // Consume document fragment.\n *\t\tviewConsumable.revert( element, { name: true }  ); // Revert already consumed element's name.\n *\t\tviewConsumable.revert( textNode ); // Revert already consumed text node.\n *\t\tviewConsumable.revert( docFragment ); // Revert already consumed document fragment.\n */\n\nvar ViewConsumable =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates new ViewConsumable.\n   */\n  function ViewConsumable() {\n    _classCallCheck(this, ViewConsumable);\n\n    /**\n     * Map of consumable elements. If {@link module:engine/view/element~Element element} is used as a key,\n     * {@link module:engine/conversion/viewconsumable~ViewElementConsumables ViewElementConsumables} instance is stored as value.\n     * For {@link module:engine/view/text~Text text nodes} and\n     * {@link module:engine/view/documentfragment~DocumentFragment document fragments} boolean value is stored as value.\n     *\n     * @protected\n     * @member {Map.<module:engine/conversion/viewconsumable~ViewElementConsumables|Boolean>}\n    */\n    this._consumables = new Map();\n  }\n  /**\n   * Adds {@link module:engine/view/element~Element view element}, {@link module:engine/view/text~Text text node} or\n   * {@link module:engine/view/documentfragment~DocumentFragment document fragment} as ready to be consumed.\n   *\n   *\t\tviewConsumable.add( p, { name: true } ); // Adds element's name to consume.\n   *\t\tviewConsumable.add( p, { attributes: 'name' } ); // Adds element's attribute.\n   *\t\tviewConsumable.add( p, { classes: 'foobar' } ); // Adds element's class.\n   *\t\tviewConsumable.add( p, { styles: 'color' } ); // Adds element's style\n   *\t\tviewConsumable.add( p, { attributes: 'name', styles: 'color' } ); // Adds attribute and style.\n   *\t\tviewConsumable.add( p, { classes: [ 'baz', 'bar' ] } ); // Multiple consumables can be provided.\n   *\t\tviewConsumable.add( textNode ); // Adds text node to consume.\n   *\t\tviewConsumable.add( docFragment ); // Adds document fragment to consume.\n   *\n   * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `viewconsumable-invalid-attribute` when `class` or `style`\n   * attribute is provided - it should be handled separately by providing actual style/class.\n   *\n   *\t\tviewConsumable.add( p, { attributes: 'style' } ); // This call will throw an exception.\n   *\t\tviewConsumable.add( p, { styles: 'color' } ); // This is properly handled style.\n   *\n   * @param {module:engine/view/element~Element|module:engine/view/text~Text|module:engine/view/documentfragment~DocumentFragment} element\n   * @param {Object} [consumables] Used only if first parameter is {@link module:engine/view/element~Element view element} instance.\n   * @param {Boolean} consumables.name If set to true element's name will be included.\n   * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names.\n   * @param {String|Array.<String>} consumables.classes Class name or array of class names.\n   * @param {String|Array.<String>} consumables.styles Style name or array of style names.\n   */\n\n\n  _createClass(ViewConsumable, [{\n    key: \"add\",\n    value: function add(element, consumables) {\n      var elementConsumables; // For text nodes and document fragments just mark them as consumable.\n\n      if (element.is('text') || element.is('documentFragment')) {\n        this._consumables.set(element, true);\n\n        return;\n      } // For elements create new ViewElementConsumables or update already existing one.\n\n\n      if (!this._consumables.has(element)) {\n        elementConsumables = new ViewElementConsumables();\n\n        this._consumables.set(element, elementConsumables);\n      } else {\n        elementConsumables = this._consumables.get(element);\n      }\n\n      elementConsumables.add(consumables);\n    }\n    /**\n     * Tests if {@link module:engine/view/element~Element view element}, {@link module:engine/view/text~Text text node} or\n     * {@link module:engine/view/documentfragment~DocumentFragment document fragment} can be consumed.\n     * It returns `true` when all items included in method's call can be consumed. Returns `false` when\n     * first already consumed item is found and `null` when first non-consumable item is found.\n     *\n     *\t\tviewConsumable.test( p, { name: true } ); // Tests element's name.\n     *\t\tviewConsumable.test( p, { attributes: 'name' } ); // Tests attribute.\n     *\t\tviewConsumable.test( p, { classes: 'foobar' } ); // Tests class.\n     *\t\tviewConsumable.test( p, { styles: 'color' } ); // Tests style.\n     *\t\tviewConsumable.test( p, { attributes: 'name', styles: 'color' } ); // Tests attribute and style.\n     *\t\tviewConsumable.test( p, { classes: [ 'baz', 'bar' ] } ); // Multiple consumables can be tested.\n     *\t\tviewConsumable.test( textNode ); // Tests text node.\n     *\t\tviewConsumable.test( docFragment ); // Tests document fragment.\n     *\n     * Testing classes and styles as attribute will test if all added classes/styles can be consumed.\n     *\n     *\t\tviewConsumable.test( p, { attributes: 'class' } ); // Tests if all added classes can be consumed.\n     *\t\tviewConsumable.test( p, { attributes: 'style' } ); // Tests if all added styles can be consumed.\n     *\n     * @param {module:engine/view/element~Element|module:engine/view/text~Text|module:engine/view/documentfragment~DocumentFragment} element\n     * @param {Object} [consumables] Used only if first parameter is {@link module:engine/view/element~Element view element} instance.\n     * @param {Boolean} consumables.name If set to true element's name will be included.\n     * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names.\n     * @param {String|Array.<String>} consumables.classes Class name or array of class names.\n     * @param {String|Array.<String>} consumables.styles Style name or array of style names.\n     * @returns {Boolean|null} Returns `true` when all items included in method's call can be consumed. Returns `false`\n     * when first already consumed item is found and `null` when first non-consumable item is found.\n     */\n\n  }, {\n    key: \"test\",\n    value: function test(element, consumables) {\n      var elementConsumables = this._consumables.get(element);\n\n      if (elementConsumables === undefined) {\n        return null;\n      } // For text nodes and document fragments return stored boolean value.\n\n\n      if (element.is('text') || element.is('documentFragment')) {\n        return elementConsumables;\n      } // For elements test consumables object.\n\n\n      return elementConsumables.test(consumables);\n    }\n    /**\n     * Consumes {@link module:engine/view/element~Element view element}, {@link module:engine/view/text~Text text node} or\n     * {@link module:engine/view/documentfragment~DocumentFragment document fragment}.\n     * It returns `true` when all items included in method's call can be consumed, otherwise returns `false`.\n     *\n     *\t\tviewConsumable.consume( p, { name: true } ); // Consumes element's name.\n     *\t\tviewConsumable.consume( p, { attributes: 'name' } ); // Consumes element's attribute.\n     *\t\tviewConsumable.consume( p, { classes: 'foobar' } ); // Consumes element's class.\n     *\t\tviewConsumable.consume( p, { styles: 'color' } ); // Consumes element's style.\n     *\t\tviewConsumable.consume( p, { attributes: 'name', styles: 'color' } ); // Consumes attribute and style.\n     *\t\tviewConsumable.consume( p, { classes: [ 'baz', 'bar' ] } ); // Multiple consumables can be consumed.\n     *\t\tviewConsumable.consume( textNode ); // Consumes text node.\n     *\t\tviewConsumable.consume( docFragment ); // Consumes document fragment.\n     *\n     * Consuming classes and styles as attribute will test if all added classes/styles can be consumed.\n     *\n     *\t\tviewConsumable.consume( p, { attributes: 'class' } ); // Consume only if all added classes can be consumed.\n     *\t\tviewConsumable.consume( p, { attributes: 'style' } ); // Consume only if all added styles can be consumed.\n     *\n     * @param {module:engine/view/element~Element|module:engine/view/text~Text|module:engine/view/documentfragment~DocumentFragment} element\n     * @param {Object} [consumables] Used only if first parameter is {@link module:engine/view/element~Element view element} instance.\n     * @param {Boolean} consumables.name If set to true element's name will be included.\n     * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names.\n     * @param {String|Array.<String>} consumables.classes Class name or array of class names.\n     * @param {String|Array.<String>} consumables.styles Style name or array of style names.\n     * @returns {Boolean} Returns `true` when all items included in method's call can be consumed,\n     * otherwise returns `false`.\n     */\n\n  }, {\n    key: \"consume\",\n    value: function consume(element, consumables) {\n      if (this.test(element, consumables)) {\n        if (element.is('text') || element.is('documentFragment')) {\n          // For text nodes and document fragments set value to false.\n          this._consumables.set(element, false);\n        } else {\n          // For elements - consume consumables object.\n          this._consumables.get(element).consume(consumables);\n        }\n\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Reverts {@link module:engine/view/element~Element view element}, {@link module:engine/view/text~Text text node} or\n     * {@link module:engine/view/documentfragment~DocumentFragment document fragment} so they can be consumed once again.\n     * Method does not revert items that were never previously added for consumption, even if they are included in\n     * method's call.\n     *\n     *\t\tviewConsumable.revert( p, { name: true } ); // Reverts element's name.\n     *\t\tviewConsumable.revert( p, { attributes: 'name' } ); // Reverts element's attribute.\n     *\t\tviewConsumable.revert( p, { classes: 'foobar' } ); // Reverts element's class.\n     *\t\tviewConsumable.revert( p, { styles: 'color' } ); // Reverts element's style.\n     *\t\tviewConsumable.revert( p, { attributes: 'name', styles: 'color' } ); // Reverts attribute and style.\n     *\t\tviewConsumable.revert( p, { classes: [ 'baz', 'bar' ] } ); // Multiple names can be reverted.\n     *\t\tviewConsumable.revert( textNode ); // Reverts text node.\n     *\t\tviewConsumable.revert( docFragment ); // Reverts document fragment.\n     *\n     * Reverting classes and styles as attribute will revert all classes/styles that were previously added for\n     * consumption.\n     *\n     *\t\tviewConsumable.revert( p, { attributes: 'class' } ); // Reverts all classes added for consumption.\n     *\t\tviewConsumable.revert( p, { attributes: 'style' } ); // Reverts all styles added for consumption.\n     *\n     * @param {module:engine/view/element~Element|module:engine/view/text~Text|module:engine/view/documentfragment~DocumentFragment} element\n     * @param {Object} [consumables] Used only if first parameter is {@link module:engine/view/element~Element view element} instance.\n     * @param {Boolean} consumables.name If set to true element's name will be included.\n     * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names.\n     * @param {String|Array.<String>} consumables.classes Class name or array of class names.\n     * @param {String|Array.<String>} consumables.styles Style name or array of style names.\n     */\n\n  }, {\n    key: \"revert\",\n    value: function revert(element, consumables) {\n      var elementConsumables = this._consumables.get(element);\n\n      if (elementConsumables !== undefined) {\n        if (element.is('text') || element.is('documentFragment')) {\n          // For text nodes and document fragments - set consumable to true.\n          this._consumables.set(element, true);\n        } else {\n          // For elements - revert items from consumables object.\n          elementConsumables.revert(consumables);\n        }\n      }\n    }\n    /**\n     * Creates consumable object from {@link module:engine/view/element~Element view element}. Consumable object will include\n     * element's name and all its attributes, classes and styles.\n     *\n     * @static\n     * @param {module:engine/view/element~Element} element\n     * @returns {Object} consumables\n     */\n\n  }], [{\n    key: \"consumablesFromElement\",\n    value: function consumablesFromElement(element) {\n      var consumables = {\n        name: true,\n        attributes: [],\n        classes: [],\n        styles: []\n      };\n      var attributes = element.getAttributeKeys();\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = attributes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var attribute = _step.value;\n\n          // Skip classes and styles - will be added separately.\n          if (attribute == 'style' || attribute == 'class') {\n            continue;\n          }\n\n          consumables.attributes.push(attribute);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      var classes = element.getClassNames();\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = classes[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var className = _step2.value;\n          consumables.classes.push(className);\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      var styles = element.getStyleNames();\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = styles[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var style = _step3.value;\n          consumables.styles.push(style);\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n            _iterator3[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      return consumables;\n    }\n    /**\n     * Creates {@link module:engine/conversion/viewconsumable~ViewConsumable ViewConsumable} instance from\n     * {@link module:engine/view/node~Node node} or {@link module:engine/view/documentfragment~DocumentFragment document fragment}.\n     * Instance will contain all elements, child nodes, attributes, styles and classes added for consumption.\n     *\n     * @static\n     * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} from View node or document fragment\n     * from which `ViewConsumable` will be created.\n     * @param {module:engine/conversion/viewconsumable~ViewConsumable} [instance] If provided, given `ViewConsumable` instance will be used\n     * to add all consumables. It will be returned instead of a new instance.\n     */\n\n  }, {\n    key: \"createFrom\",\n    value: function createFrom(from, instance) {\n      if (!instance) {\n        instance = new ViewConsumable();\n      }\n\n      if (from.is('text')) {\n        instance.add(from);\n        return instance;\n      } // Add `from` itself, if it is an element.\n\n\n      if (from.is('element')) {\n        instance.add(from, ViewConsumable.consumablesFromElement(from));\n      }\n\n      if (from.is('documentFragment')) {\n        instance.add(from);\n      }\n\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = from.getChildren()[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var child = _step4.value;\n          instance = ViewConsumable.createFrom(child, instance);\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4[\"return\"] != null) {\n            _iterator4[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      return instance;\n    }\n  }]);\n\n  return ViewConsumable;\n}();\n/**\n * This is a private helper-class for {@link module:engine/conversion/viewconsumable~ViewConsumable}.\n * It represents and manipulates consumable parts of a single {@link module:engine/view/element~Element}.\n *\n * @private\n */\n\n\nexport { ViewConsumable as default };\n\nvar ViewElementConsumables =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates ViewElementConsumables instance.\n   */\n  function ViewElementConsumables() {\n    _classCallCheck(this, ViewElementConsumables);\n\n    /**\n     * Flag indicating if name of the element can be consumed.\n     *\n     * @private\n     * @member {Boolean}\n     */\n    this._canConsumeName = null;\n    /**\n     * Contains maps of element's consumables: attributes, classes and styles.\n     *\n     * @private\n     * @member {Object}\n     */\n\n    this._consumables = {\n      attributes: new Map(),\n      styles: new Map(),\n      classes: new Map()\n    };\n  }\n  /**\n   * Adds consumable parts of the {@link module:engine/view/element~Element view element}.\n   * Element's name itself can be marked to be consumed (when element's name is consumed its attributes, classes and\n   * styles still could be consumed):\n   *\n   *\t\tconsumables.add( { name: true } );\n   *\n   * Attributes classes and styles:\n   *\n   *\t\tconsumables.add( { attributes: 'title', classes: 'foo', styles: 'color' } );\n   *\t\tconsumables.add( { attributes: [ 'title', 'name' ], classes: [ 'foo', 'bar' ] );\n   *\n   * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `viewconsumable-invalid-attribute` when `class` or `style`\n   * attribute is provided - it should be handled separately by providing `style` and `class` in consumables object.\n   *\n   * @param {Object} consumables Object describing which parts of the element can be consumed.\n   * @param {Boolean} consumables.name If set to `true` element's name will be added as consumable.\n   * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names to add as consumable.\n   * @param {String|Array.<String>} consumables.classes Class name or array of class names to add as consumable.\n   * @param {String|Array.<String>} consumables.styles Style name or array of style names to add as consumable.\n   */\n\n\n  _createClass(ViewElementConsumables, [{\n    key: \"add\",\n    value: function add(consumables) {\n      if (consumables.name) {\n        this._canConsumeName = true;\n      }\n\n      for (var type in this._consumables) {\n        if (type in consumables) {\n          this._add(type, consumables[type]);\n        }\n      }\n    }\n    /**\n     * Tests if parts of the {@link module:engine/view/node~Node view node} can be consumed.\n     *\n     * Element's name can be tested:\n     *\n     *\t\tconsumables.test( { name: true } );\n     *\n     * Attributes classes and styles:\n     *\n     *\t\tconsumables.test( { attributes: 'title', classes: 'foo', styles: 'color' } );\n     *\t\tconsumables.test( { attributes: [ 'title', 'name' ], classes: [ 'foo', 'bar' ] );\n     *\n     * @param {Object} consumables Object describing which parts of the element should be tested.\n     * @param {Boolean} consumables.name If set to `true` element's name will be tested.\n     * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names to test.\n     * @param {String|Array.<String>} consumables.classes Class name or array of class names to test.\n     * @param {String|Array.<String>} consumables.styles Style name or array of style names to test.\n     * @returns {Boolean|null} `true` when all tested items can be consumed, `null` when even one of the items\n     * was never marked for consumption and `false` when even one of the items was already consumed.\n     */\n\n  }, {\n    key: \"test\",\n    value: function test(consumables) {\n      // Check if name can be consumed.\n      if (consumables.name && !this._canConsumeName) {\n        return this._canConsumeName;\n      }\n\n      for (var type in this._consumables) {\n        if (type in consumables) {\n          var value = this._test(type, consumables[type]);\n\n          if (value !== true) {\n            return value;\n          }\n        }\n      } // Return true only if all can be consumed.\n\n\n      return true;\n    }\n    /**\n     * Consumes parts of {@link module:engine/view/element~Element view element}. This function does not check if consumable item\n     * is already consumed - it consumes all consumable items provided.\n     * Element's name can be consumed:\n     *\n     *\t\tconsumables.consume( { name: true } );\n     *\n     * Attributes classes and styles:\n     *\n     *\t\tconsumables.consume( { attributes: 'title', classes: 'foo', styles: 'color' } );\n     *\t\tconsumables.consume( { attributes: [ 'title', 'name' ], classes: [ 'foo', 'bar' ] );\n     *\n     * @param {Object} consumables Object describing which parts of the element should be consumed.\n     * @param {Boolean} consumables.name If set to `true` element's name will be consumed.\n     * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names to consume.\n     * @param {String|Array.<String>} consumables.classes Class name or array of class names to consume.\n     * @param {String|Array.<String>} consumables.styles Style name or array of style names to consume.\n     */\n\n  }, {\n    key: \"consume\",\n    value: function consume(consumables) {\n      if (consumables.name) {\n        this._canConsumeName = false;\n      }\n\n      for (var type in this._consumables) {\n        if (type in consumables) {\n          this._consume(type, consumables[type]);\n        }\n      }\n    }\n    /**\n     * Revert already consumed parts of {@link module:engine/view/element~Element view Element}, so they can be consumed once again.\n     * Element's name can be reverted:\n     *\n     *\t\tconsumables.revert( { name: true } );\n     *\n     * Attributes classes and styles:\n     *\n     *\t\tconsumables.revert( { attributes: 'title', classes: 'foo', styles: 'color' } );\n     *\t\tconsumables.revert( { attributes: [ 'title', 'name' ], classes: [ 'foo', 'bar' ] );\n     *\n     * @param {Object} consumables Object describing which parts of the element should be reverted.\n     * @param {Boolean} consumables.name If set to `true` element's name will be reverted.\n     * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names to revert.\n     * @param {String|Array.<String>} consumables.classes Class name or array of class names to revert.\n     * @param {String|Array.<String>} consumables.styles Style name or array of style names to revert.\n     */\n\n  }, {\n    key: \"revert\",\n    value: function revert(consumables) {\n      if (consumables.name) {\n        this._canConsumeName = true;\n      }\n\n      for (var type in this._consumables) {\n        if (type in consumables) {\n          this._revert(type, consumables[type]);\n        }\n      }\n    }\n    /**\n     * Helper method that adds consumables of a given type: attribute, class or style.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `viewconsumable-invalid-attribute` when `class` or `style`\n     * type is provided - it should be handled separately by providing actual style/class type.\n     *\n     * @private\n     * @param {String} type Type of the consumable item: `attributes`, `classes` or `styles`.\n     * @param {String|Array.<String>} item Consumable item or array of items.\n     */\n\n  }, {\n    key: \"_add\",\n    value: function _add(type, item) {\n      var items = isArray(item) ? item : [item];\n      var consumables = this._consumables[type];\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = items[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var name = _step5.value;\n\n          if (type === 'attributes' && (name === 'class' || name === 'style')) {\n            /**\n             * Class and style attributes should be handled separately in\n             * {@link module:engine/conversion/viewconsumable~ViewConsumable#add `ViewConsumable#add()`}.\n             *\n             * What you have done is trying to use:\n             *\n             *\t\tconsumables.add( { attributes: [ 'class', 'style' ] } );\n             *\n             * While each class and style should be registered separately:\n             *\n             *\t\tconsumables.add( { classes: 'some-class', styles: 'font-weight' } );\n             *\n             * @error viewconsumable-invalid-attribute\n             */\n            throw new CKEditorError('viewconsumable-invalid-attribute: Classes and styles should be handled separately.', this);\n          }\n\n          consumables.set(name, true);\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5[\"return\"] != null) {\n            _iterator5[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n    }\n    /**\n     * Helper method that tests consumables of a given type: attribute, class or style.\n     *\n     * @private\n     * @param {String} type Type of the consumable item: `attributes`, `classes` or `styles`.\n     * @param {String|Array.<String>} item Consumable item or array of items.\n     * @returns {Boolean|null} Returns `true` if all items can be consumed, `null` when one of the items cannot be\n     * consumed and `false` when one of the items is already consumed.\n     */\n\n  }, {\n    key: \"_test\",\n    value: function _test(type, item) {\n      var items = isArray(item) ? item : [item];\n      var consumables = this._consumables[type];\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = items[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var name = _step6.value;\n\n          if (type === 'attributes' && (name === 'class' || name === 'style')) {\n            var consumableName = name == 'class' ? 'classes' : 'styles'; // Check all classes/styles if class/style attribute is tested.\n\n            var value = this._test(consumableName, _toConsumableArray(this._consumables[consumableName].keys()));\n\n            if (value !== true) {\n              return value;\n            }\n          } else {\n            var _value = consumables.get(name); // Return null if attribute is not found.\n\n\n            if (_value === undefined) {\n              return null;\n            }\n\n            if (!_value) {\n              return false;\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6[\"return\"] != null) {\n            _iterator6[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n\n      return true;\n    }\n    /**\n     * Helper method that consumes items of a given type: attribute, class or style.\n     *\n     * @private\n     * @param {String} type Type of the consumable item: `attributes`, `classes` or `styles`.\n     * @param {String|Array.<String>} item Consumable item or array of items.\n     */\n\n  }, {\n    key: \"_consume\",\n    value: function _consume(type, item) {\n      var items = isArray(item) ? item : [item];\n      var consumables = this._consumables[type];\n      var _iteratorNormalCompletion7 = true;\n      var _didIteratorError7 = false;\n      var _iteratorError7 = undefined;\n\n      try {\n        for (var _iterator7 = items[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n          var name = _step7.value;\n\n          if (type === 'attributes' && (name === 'class' || name === 'style')) {\n            var consumableName = name == 'class' ? 'classes' : 'styles'; // If class or style is provided for consumption - consume them all.\n\n            this._consume(consumableName, _toConsumableArray(this._consumables[consumableName].keys()));\n          } else {\n            consumables.set(name, false);\n          }\n        }\n      } catch (err) {\n        _didIteratorError7 = true;\n        _iteratorError7 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion7 && _iterator7[\"return\"] != null) {\n            _iterator7[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError7) {\n            throw _iteratorError7;\n          }\n        }\n      }\n    }\n    /**\n     * Helper method that reverts items of a given type: attribute, class or style.\n     *\n     * @private\n     * @param {String} type Type of the consumable item: `attributes`, `classes` or , `styles`.\n     * @param {String|Array.<String>} item Consumable item or array of items.\n     */\n\n  }, {\n    key: \"_revert\",\n    value: function _revert(type, item) {\n      var items = isArray(item) ? item : [item];\n      var consumables = this._consumables[type];\n      var _iteratorNormalCompletion8 = true;\n      var _didIteratorError8 = false;\n      var _iteratorError8 = undefined;\n\n      try {\n        for (var _iterator8 = items[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n          var name = _step8.value;\n\n          if (type === 'attributes' && (name === 'class' || name === 'style')) {\n            var consumableName = name == 'class' ? 'classes' : 'styles'; // If class or style is provided for reverting - revert them all.\n\n            this._revert(consumableName, _toConsumableArray(this._consumables[consumableName].keys()));\n          } else {\n            var value = consumables.get(name);\n\n            if (value === false) {\n              consumables.set(name, true);\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError8 = true;\n        _iteratorError8 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion8 && _iterator8[\"return\"] != null) {\n            _iterator8[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError8) {\n            throw _iteratorError8;\n          }\n        }\n      }\n    }\n  }]);\n\n  return ViewElementConsumables;\n}();","var _marked =\n/*#__PURE__*/\nregeneratorRuntime.mark(combineWalkers),\n    _marked2 =\n/*#__PURE__*/\nregeneratorRuntime.mark(convertToMinimalFlatRanges);\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/schema\n */\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport Range from './range';\nimport Position from './position';\nimport Element from './element';\nimport Text from './text';\nimport TreeWalker from './treewalker';\n/**\n * The model's schema. It defines allowed and disallowed structures of nodes as well as nodes' attributes.\n * The schema is usually defined by features and based on them the editing framework and features\n * make decisions how to change and process the model.\n *\n * The instance of schema is available in {@link module:engine/model/model~Model#schema `editor.model.schema`}.\n *\n * Read more about the schema in:\n *\n * * {@glink framework/guides/architecture/editing-engine#schema \"Schema\"} section of the\n * {@glink framework/guides/architecture/editing-engine Introduction to the \"Editing engine architecture\"}.\n * * {@glink framework/guides/deep-dive/schema \"Schema\" deep dive} guide.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\n\nvar Schema =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates schema instance.\n   */\n  function Schema() {\n    var _this = this;\n\n    _classCallCheck(this, Schema);\n\n    this._sourceDefinitions = {};\n    /**\n     * A dictionary containing attribute properties.\n     *\n     * @private\n     * @member {Object.<String,String>}\n     */\n\n    this._attributeProperties = {};\n    this.decorate('checkChild');\n    this.decorate('checkAttribute');\n    this.on('checkAttribute', function (evt, args) {\n      args[0] = new SchemaContext(args[0]);\n    }, {\n      priority: 'highest'\n    });\n    this.on('checkChild', function (evt, args) {\n      args[0] = new SchemaContext(args[0]);\n      args[1] = _this.getDefinition(args[1]);\n    }, {\n      priority: 'highest'\n    });\n  }\n  /**\n   * Registers schema item. Can only be called once for every item name.\n   *\n   *\t\tschema.register( 'paragraph', {\n   *\t\t\tinheritAllFrom: '$block'\n   *\t\t} );\n   *\n   * @param {String} itemName\n   * @param {module:engine/model/schema~SchemaItemDefinition} definition\n   */\n\n\n  _createClass(Schema, [{\n    key: \"register\",\n    value: function register(itemName, definition) {\n      if (this._sourceDefinitions[itemName]) {\n        /**\n         * A single item cannot be registered twice in the schema.\n         *\n         * This situation may happen when:\n         *\n         * * Two or more plugins called {@link #register `register()`} with the same name. This will usually mean that\n         * there is a collision between plugins which try to use the same element in the model. Unfortunately,\n         * the only way to solve this is by modifying one of these plugins to use a unique model element name.\n         * * A single plugin was loaded twice. This happens when it is installed by npm/yarn in two versions\n         * and usually means one or more of the following issues:\n         *     * a version mismatch (two of your dependencies require two different versions of this plugin),\n         *     * incorrect imports (this plugin is somehow imported twice in a way which confuses webpack),\n         *     * mess in `node_modules/` (`rm -rf node_modules/` may help).\n         *\n         * **Note:** Check the logged `itemName` to better understand which plugin was duplicated/conflicting.\n         *\n         * @param itemName The name of the model element that is being registered twice.\n         * @error schema-cannot-register-item-twice\n         */\n        throw new CKEditorError('schema-cannot-register-item-twice: A single item cannot be registered twice in the schema.', this, {\n          itemName: itemName\n        });\n      }\n\n      this._sourceDefinitions[itemName] = [Object.assign({}, definition)];\n\n      this._clearCache();\n    }\n    /**\n     * Extends a {@link #register registered} item's definition.\n     *\n     * Extending properties such as `allowIn` will add more items to the existing properties,\n     * while redefining properties such as `isBlock` will override the previously defined ones.\n     *\n     *\t\tschema.register( 'foo', {\n     *\t\t\tallowIn: '$root',\n     *\t\t\tisBlock: true;\n     *\t\t} );\n     *\t\tschema.extend( 'foo', {\n     *\t\t\tallowIn: 'blockQuote',\n     *\t\t\tisBlock: false\n     *\t\t} );\n     *\n     *\t\tschema.getDefinition( 'foo' );\n     *\t\t//\t{\n     *\t\t//\t\tallowIn: [ '$root', 'blockQuote' ],\n     *\t\t// \t\tisBlock: false\n     *\t\t//\t}\n     *\n     * @param {String} itemName\n     * @param {module:engine/model/schema~SchemaItemDefinition} definition\n     */\n\n  }, {\n    key: \"extend\",\n    value: function extend(itemName, definition) {\n      if (!this._sourceDefinitions[itemName]) {\n        /**\n         * Cannot extend an item which was not registered yet.\n         *\n         * This error happens when a plugin tries to extend the schema definition of an item which was not\n         * {@link #register registered} yet.\n         *\n         * @param itemName The name of the model element which is being extended.\n         * @error schema-cannot-extend-missing-item\n         */\n        throw new CKEditorError('schema-cannot-extend-missing-item: Cannot extend an item which was not registered yet.', this, {\n          itemName: itemName\n        });\n      }\n\n      this._sourceDefinitions[itemName].push(Object.assign({}, definition));\n\n      this._clearCache();\n    }\n    /**\n     * Returns all registered items.\n     *\n     * @returns {Object.<String,module:engine/model/schema~SchemaCompiledItemDefinition>}\n     */\n\n  }, {\n    key: \"getDefinitions\",\n    value: function getDefinitions() {\n      if (!this._compiledDefinitions) {\n        this._compile();\n      }\n\n      return this._compiledDefinitions;\n    }\n    /**\n     * Returns a definition of the given item or `undefined` if item is not registered.\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/schema~SchemaContextItem|String} item\n     * @returns {module:engine/model/schema~SchemaCompiledItemDefinition}\n     */\n\n  }, {\n    key: \"getDefinition\",\n    value: function getDefinition(item) {\n      var itemName;\n\n      if (typeof item == 'string') {\n        itemName = item;\n      } else if (item.is && (item.is('text') || item.is('textProxy'))) {\n        itemName = '$text';\n      } // Element or module:engine/model/schema~SchemaContextItem.\n      else {\n          itemName = item.name;\n        }\n\n      return this.getDefinitions()[itemName];\n    }\n    /**\n     * Returns `true` if the given item is registered in the schema.\n     *\n     *\t\tschema.isRegistered( 'paragraph' ); // -> true\n     *\t\tschema.isRegistered( editor.model.document.getRoot() ); // -> true\n     *\t\tschema.isRegistered( 'foo' ); // -> false\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/schema~SchemaContextItem|String} item\n     */\n\n  }, {\n    key: \"isRegistered\",\n    value: function isRegistered(item) {\n      return !!this.getDefinition(item);\n    }\n    /**\n     * Returns `true` if the given item is defined to be\n     * a block by {@link module:engine/model/schema~SchemaItemDefinition}'s `isBlock` property.\n     *\n     *\t\tschema.isBlock( 'paragraph' ); // -> true\n     *\t\tschema.isBlock( '$root' ); // -> false\n     *\n     *\t\tconst paragraphElement = writer.createElement( 'paragraph' );\n     *\t\tschema.isBlock( paragraphElement ); // -> true\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/schema~SchemaContextItem|String} item\n     */\n\n  }, {\n    key: \"isBlock\",\n    value: function isBlock(item) {\n      var def = this.getDefinition(item);\n      return !!(def && def.isBlock);\n    }\n    /**\n     * Returns `true` if the given item is defined to be\n     * a limit element by {@link module:engine/model/schema~SchemaItemDefinition}'s `isLimit` or `isObject` property\n     * (all objects are also limits).\n     *\n     *\t\tschema.isLimit( 'paragraph' ); // -> false\n     *\t\tschema.isLimit( '$root' ); // -> true\n     *\t\tschema.isLimit( editor.model.document.getRoot() ); // -> true\n     *\t\tschema.isLimit( 'image' ); // -> true\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/schema~SchemaContextItem|String} item\n     */\n\n  }, {\n    key: \"isLimit\",\n    value: function isLimit(item) {\n      var def = this.getDefinition(item);\n\n      if (!def) {\n        return false;\n      }\n\n      return !!(def.isLimit || def.isObject);\n    }\n    /**\n     * Returns `true` if the given item is defined to be\n     * an object element by {@link module:engine/model/schema~SchemaItemDefinition}'s `isObject` property.\n     *\n     *\t\tschema.isObject( 'paragraph' ); // -> false\n     *\t\tschema.isObject( 'image' ); // -> true\n     *\n     *\t\tconst imageElement = writer.createElement( 'image' );\n     *\t\tschema.isObject( imageElement ); // -> true\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/schema~SchemaContextItem|String} item\n     */\n\n  }, {\n    key: \"isObject\",\n    value: function isObject(item) {\n      var def = this.getDefinition(item);\n      return !!(def && def.isObject);\n    }\n    /**\n     * Returns `true` if the given item is defined to be\n     * an inline element by {@link module:engine/model/schema~SchemaItemDefinition}'s `isInline` property.\n     *\n     *\t\tschema.isInline( 'paragraph' ); // -> false\n     *\t\tschema.isInline( 'softBreak' ); // -> true\n     *\n     *\t\tconst text = writer.createText('foo' );\n     *\t\tschema.isInline( text ); // -> true\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/schema~SchemaContextItem|String} item\n     */\n\n  }, {\n    key: \"isInline\",\n    value: function isInline(item) {\n      var def = this.getDefinition(item);\n      return !!(def && def.isInline);\n    }\n    /**\n     * Checks whether the given node (`child`) can be a child of the given context.\n     *\n     *\t\tschema.checkChild( model.document.getRoot(), paragraph ); // -> false\n     *\n     *\t\tschema.register( 'paragraph', {\n     *\t\t\tallowIn: '$root'\n     *\t\t} );\n     *\t\tschema.checkChild( model.document.getRoot(), paragraph ); // -> true\n     *\n     * Note: When verifying whether the given node can be a child of the given context, the\n     * schema also verifies the entire context &mdash; from its root to its last element. Therefore, it is possible\n     * for `checkChild()` to return `false` even though the context's last element can contain the checked child.\n     * It happens if one of the context's elements does not allow its child.\n     *\n     * @fires checkChild\n     * @param {module:engine/model/schema~SchemaContextDefinition} context The context in which the child will be checked.\n     * @param {module:engine/model/node~Node|String} def The child to check.\n     */\n\n  }, {\n    key: \"checkChild\",\n    value: function checkChild(context, def) {\n      // Note: context and child are already normalized here to a SchemaContext and SchemaCompiledItemDefinition.\n      if (!def) {\n        return false;\n      }\n\n      return this._checkContextMatch(def, context);\n    }\n    /**\n     * Checks whether the given attribute can be applied in the given context (on the last\n     * item of the context).\n     *\n     *\t\tschema.checkAttribute( textNode, 'bold' ); // -> false\n     *\n     *\t\tschema.extend( '$text', {\n     *\t\t\tallowAttributes: 'bold'\n     *\t\t} );\n     *\t\tschema.checkAttribute( textNode, 'bold' ); // -> true\n     *\n     * @fires checkAttribute\n     * @param {module:engine/model/schema~SchemaContextDefinition} context The context in which the attribute will be checked.\n     * @param {String} attributeName\n     */\n\n  }, {\n    key: \"checkAttribute\",\n    value: function checkAttribute(context, attributeName) {\n      var def = this.getDefinition(context.last);\n\n      if (!def) {\n        return false;\n      }\n\n      return def.allowAttributes.includes(attributeName);\n    }\n    /**\n     * Checks whether the given element (`elementToMerge`) can be merged with the specified base element (`positionOrBaseElement`).\n     *\n     * In other words &mdash; whether `elementToMerge`'s children {@link #checkChild are allowed} in the `positionOrBaseElement`.\n     *\n     * This check ensures that elements merged with {@link module:engine/model/writer~Writer#merge `Writer#merge()`}\n     * will be valid.\n     *\n     * Instead of elements, you can pass the instance of the {@link module:engine/model/position~Position} class as the\n     * `positionOrBaseElement`. It means that the elements before and after the position will be checked whether they can be merged.\n     *\n     * @param {module:engine/model/position~Position|module:engine/model/element~Element} positionOrBaseElement The position or base\n     * element to which the `elementToMerge` will be merged.\n     * @param {module:engine/model/element~Element} elementToMerge The element to merge. Required if `positionOrBaseElement` is an element.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"checkMerge\",\n    value: function checkMerge(positionOrBaseElement) {\n      var elementToMerge = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (positionOrBaseElement instanceof Position) {\n        var nodeBefore = positionOrBaseElement.nodeBefore;\n        var nodeAfter = positionOrBaseElement.nodeAfter;\n\n        if (!(nodeBefore instanceof Element)) {\n          /**\n           * The node before the merge position must be an element.\n           *\n           * @error schema-check-merge-no-element-before\n           */\n          throw new CKEditorError('schema-check-merge-no-element-before: The node before the merge position must be an element.', this);\n        }\n\n        if (!(nodeAfter instanceof Element)) {\n          /**\n           * The node after the merge position must be an element.\n           *\n           * @error schema-check-merge-no-element-after\n           */\n          throw new CKEditorError('schema-check-merge-no-element-after: The node after the merge position must be an element.', this);\n        }\n\n        return this.checkMerge(nodeBefore, nodeAfter);\n      }\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = elementToMerge.getChildren()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var child = _step.value;\n\n          if (!this.checkChild(positionOrBaseElement, child)) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return true;\n    }\n    /**\n     * Allows registering a callback to the {@link #checkChild} method calls.\n     *\n     * Callbacks allow you to implement rules which are not otherwise possible to achieve\n     * by using the declarative API of {@link module:engine/model/schema~SchemaItemDefinition}.\n     * For example, by using this method you can disallow elements in specific contexts.\n     *\n     * This method is a shorthand for using the {@link #event:checkChild} event. For even better control,\n     * you can use that event instead.\n     *\n     * Example:\n     *\n     *\t\t// Disallow heading1 directly inside a blockQuote.\n     *\t\tschema.addChildCheck( ( context, childDefinition ) => {\n     *\t\t\tif ( context.endsWith( 'blockQuote' ) && childDefinition.name == 'heading1' ) {\n     *\t\t\t\treturn false;\n     *\t\t\t}\n     *\t\t} );\n     *\n     * Which translates to:\n     *\n     *\t\tschema.on( 'checkChild', ( evt, args ) => {\n     *\t\t\tconst context = args[ 0 ];\n     *\t\t\tconst childDefinition = args[ 1 ];\n     *\n     *\t\t\tif ( context.endsWith( 'blockQuote' ) && childDefinition && childDefinition.name == 'heading1' ) {\n     *\t\t\t\t// Prevent next listeners from being called.\n     *\t\t\t\tevt.stop();\n     *\t\t\t\t// Set the checkChild()'s return value.\n     *\t\t\t\tevt.return = false;\n     *\t\t\t}\n     *\t\t}, { priority: 'high' } );\n     *\n     * @param {Function} callback The callback to be called. It is called with two parameters:\n     * {@link module:engine/model/schema~SchemaContext} (context) instance and\n     * {@link module:engine/model/schema~SchemaCompiledItemDefinition} (child-to-check definition).\n     * The callback may return `true/false` to override `checkChild()`'s return value. If it does not return\n     * a boolean value, the default algorithm (or other callbacks) will define `checkChild()`'s return value.\n     */\n\n  }, {\n    key: \"addChildCheck\",\n    value: function addChildCheck(callback) {\n      this.on('checkChild', function (evt, _ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            ctx = _ref2[0],\n            childDef = _ref2[1];\n\n        // checkChild() was called with a non-registered child.\n        // In 99% cases such check should return false, so not to overcomplicate all callbacks\n        // don't even execute them.\n        if (!childDef) {\n          return;\n        }\n\n        var retValue = callback(ctx, childDef);\n\n        if (typeof retValue == 'boolean') {\n          evt.stop();\n          evt[\"return\"] = retValue;\n        }\n      }, {\n        priority: 'high'\n      });\n    }\n    /**\n     * Allows registering a callback to the {@link #checkAttribute} method calls.\n     *\n     * Callbacks allow you to implement rules which are not otherwise possible to achieve\n     * by using the declarative API of {@link module:engine/model/schema~SchemaItemDefinition}.\n     * For example, by using this method you can disallow attribute if node to which it is applied\n     * is contained within some other element (e.g. you want to disallow `bold` on `$text` within `heading1`).\n     *\n     * This method is a shorthand for using the {@link #event:checkAttribute} event. For even better control,\n     * you can use that event instead.\n     *\n     * Example:\n     *\n     *\t\t// Disallow bold on $text inside heading1.\n     *\t\tschema.addAttributeCheck( ( context, attributeName ) => {\n     *\t\t\tif ( context.endsWith( 'heading1 $text' ) && attributeName == 'bold' ) {\n     *\t\t\t\treturn false;\n     *\t\t\t}\n     *\t\t} );\n     *\n     * Which translates to:\n     *\n     *\t\tschema.on( 'checkAttribute', ( evt, args ) => {\n     *\t\t\tconst context = args[ 0 ];\n     *\t\t\tconst attributeName = args[ 1 ];\n     *\n     *\t\t\tif ( context.endsWith( 'heading1 $text' ) && attributeName == 'bold' ) {\n     *\t\t\t\t// Prevent next listeners from being called.\n     *\t\t\t\tevt.stop();\n     *\t\t\t\t// Set the checkAttribute()'s return value.\n     *\t\t\t\tevt.return = false;\n     *\t\t\t}\n     *\t\t}, { priority: 'high' } );\n     *\n     * @param {Function} callback The callback to be called. It is called with two parameters:\n     * {@link module:engine/model/schema~SchemaContext} (context) instance and attribute name.\n     * The callback may return `true/false` to override `checkAttribute()`'s return value. If it does not return\n     * a boolean value, the default algorithm (or other callbacks) will define `checkAttribute()`'s return value.\n     */\n\n  }, {\n    key: \"addAttributeCheck\",\n    value: function addAttributeCheck(callback) {\n      this.on('checkAttribute', function (evt, _ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            ctx = _ref4[0],\n            attributeName = _ref4[1];\n\n        var retValue = callback(ctx, attributeName);\n\n        if (typeof retValue == 'boolean') {\n          evt.stop();\n          evt[\"return\"] = retValue;\n        }\n      }, {\n        priority: 'high'\n      });\n    }\n    /**\n     * This method allows assigning additional metadata to the model attributes. For example,\n     * {@link module:engine/model/schema~AttributeProperties `AttributeProperties#isFormatting` property} is\n     * used to mark formatting attributes (like `bold` or `italic`).\n     *\n     *\t\t// Mark bold as a formatting attribute.\n     *\t\tschema.setAttributeProperties( 'bold', {\n     *\t\t\tisFormatting: true\n     *\t\t} );\n     *\n     *\t\t// Override code not to be considered a formatting markup.\n     *\t\tschema.setAttributeProperties( 'code', {\n     *\t\t\tisFormatting: false\n     *\t\t} );\n     *\n     * Properties are not limited to members defined in the\n     * {@link module:engine/model/schema~AttributeProperties `AttributeProperties` type} and you can also use custom properties:\n     *\n     *\t\tschema.setAttributeProperties( 'blockQuote', {\n     *\t\t\tcustomProperty: 'value'\n     *\t\t} );\n     *\n     * Subsequent calls with the same attribute will extend its custom properties:\n     *\n     *\t\tschema.setAttributeProperties( 'blockQuote', {\n     *\t\t\tone: 1\n     *\t\t} );\n     *\n     *\t\tschema.setAttributeProperties( 'blockQuote', {\n     *\t\t\ttwo: 2\n     *\t\t} );\n     *\n     *\t\tconsole.log( schema.getAttributeProperties( 'blockQuote' ) );\n     *\t\t// Logs: { one: 1, two: 2 }\n     *\n     * @param {String} attributeName A name of the attribute to receive the properties.\n     * @param {module:engine/model/schema~AttributeProperties} properties A dictionary of properties.\n     */\n\n  }, {\n    key: \"setAttributeProperties\",\n    value: function setAttributeProperties(attributeName, properties) {\n      this._attributeProperties[attributeName] = Object.assign(this.getAttributeProperties(attributeName), properties);\n    }\n    /**\n     * Returns properties associated with a given model attribute. See {@link #setAttributeProperties `setAttributeProperties()`}.\n     *\n     * @param {String} attributeName A name of the attribute.\n     * @returns {module:engine/model/schema~AttributeProperties}\n     */\n\n  }, {\n    key: \"getAttributeProperties\",\n    value: function getAttributeProperties(attributeName) {\n      return this._attributeProperties[attributeName] || {};\n    }\n    /**\n     * Returns the lowest {@link module:engine/model/schema~Schema#isLimit limit element} containing the entire\n     * selection/range/position or the root otherwise.\n     *\n     * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection|\n     * module:engine/model/range~Range|module:engine/model/position~Position} selectionOrRangeOrPosition\n     * The selection/range/position to check.\n     * @returns {module:engine/model/element~Element} The lowest limit element containing\n     * the entire `selectionOrRangeOrPosition`.\n     */\n\n  }, {\n    key: \"getLimitElement\",\n    value: function getLimitElement(selectionOrRangeOrPosition) {\n      var element;\n\n      if (selectionOrRangeOrPosition instanceof Position) {\n        element = selectionOrRangeOrPosition.parent;\n      } else {\n        var ranges = selectionOrRangeOrPosition instanceof Range ? [selectionOrRangeOrPosition] : Array.from(selectionOrRangeOrPosition.getRanges()); // Find the common ancestor for all selection's ranges.\n\n        element = ranges.reduce(function (element, range) {\n          var rangeCommonAncestor = range.getCommonAncestor();\n\n          if (!element) {\n            return rangeCommonAncestor;\n          }\n\n          return element.getCommonAncestor(rangeCommonAncestor, {\n            includeSelf: true\n          });\n        }, null);\n      }\n\n      while (!this.isLimit(element)) {\n        if (element.parent) {\n          element = element.parent;\n        } else {\n          break;\n        }\n      }\n\n      return element;\n    }\n    /**\n     * Checks whether the attribute is allowed in selection:\n     *\n     * * if the selection is not collapsed, then checks if the attribute is allowed on any of nodes in that range,\n     * * if the selection is collapsed, then checks if on the selection position there's a text with the\n     * specified attribute allowed.\n     *\n     * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n     * Selection which will be checked.\n     * @param {String} attribute The name of the attribute to check.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"checkAttributeInSelection\",\n    value: function checkAttributeInSelection(selection, attribute) {\n      if (selection.isCollapsed) {\n        var firstPosition = selection.getFirstPosition();\n        var context = [].concat(_toConsumableArray(firstPosition.getAncestors()), [new Text('', selection.getAttributes())]); // Check whether schema allows for a text with the attribute in the selection.\n\n        return this.checkAttribute(context, attribute);\n      } else {\n        var ranges = selection.getRanges(); // For all ranges, check nodes in them until you find a node that is allowed to have the attribute.\n\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = ranges[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var range = _step2.value;\n            var _iteratorNormalCompletion3 = true;\n            var _didIteratorError3 = false;\n            var _iteratorError3 = undefined;\n\n            try {\n              for (var _iterator3 = range[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                var value = _step3.value;\n\n                if (this.checkAttribute(value.item, attribute)) {\n                  // If we found a node that is allowed to have the attribute, return true.\n                  return true;\n                }\n              }\n            } catch (err) {\n              _didIteratorError3 = true;\n              _iteratorError3 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n                  _iterator3[\"return\"]();\n                }\n              } finally {\n                if (_didIteratorError3) {\n                  throw _iteratorError3;\n                }\n              }\n            }\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n              _iterator2[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      } // If we haven't found such node, return false.\n\n\n      return false;\n    }\n    /**\n     * Transforms the given set of ranges into a set of ranges where the given attribute is allowed (and can be applied).\n     *\n     * @param {Array.<module:engine/model/range~Range>} ranges Ranges to be validated.\n     * @param {String} attribute The name of the attribute to check.\n     * @returns {Iterable.<module:engine/model/range~Range>} Ranges in which the attribute is allowed.\n     */\n\n  }, {\n    key: \"getValidRanges\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function getValidRanges(ranges, attribute) {\n      var _iteratorNormalCompletion4, _didIteratorError4, _iteratorError4, _iterator4, _step4, range;\n\n      return regeneratorRuntime.wrap(function getValidRanges$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              ranges = convertToMinimalFlatRanges(ranges);\n              _iteratorNormalCompletion4 = true;\n              _didIteratorError4 = false;\n              _iteratorError4 = undefined;\n              _context.prev = 4;\n              _iterator4 = ranges[Symbol.iterator]();\n\n            case 6:\n              if (_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done) {\n                _context.next = 12;\n                break;\n              }\n\n              range = _step4.value;\n              return _context.delegateYield(this._getValidRangesForRange(range, attribute), \"t0\", 9);\n\n            case 9:\n              _iteratorNormalCompletion4 = true;\n              _context.next = 6;\n              break;\n\n            case 12:\n              _context.next = 18;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t1 = _context[\"catch\"](4);\n              _didIteratorError4 = true;\n              _iteratorError4 = _context.t1;\n\n            case 18:\n              _context.prev = 18;\n              _context.prev = 19;\n\n              if (!_iteratorNormalCompletion4 && _iterator4[\"return\"] != null) {\n                _iterator4[\"return\"]();\n              }\n\n            case 21:\n              _context.prev = 21;\n\n              if (!_didIteratorError4) {\n                _context.next = 24;\n                break;\n              }\n\n              throw _iteratorError4;\n\n            case 24:\n              return _context.finish(21);\n\n            case 25:\n              return _context.finish(18);\n\n            case 26:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, getValidRanges, this, [[4, 14, 18, 26], [19,, 21, 25]]);\n    })\n    /**\n     * Basing on given `position`, finds and returns a {@link module:engine/model/range~Range range} which is\n     * nearest to that `position` and is a correct range for selection.\n     *\n     * The correct selection range might be collapsed when it is located in a position where the text node can be placed.\n     * Non-collapsed range is returned when selection can be placed around element marked as an \"object\" in\n     * the {@link module:engine/model/schema~Schema schema}.\n     *\n     * Direction of searching for the nearest correct selection range can be specified as:\n     *\n     * * `both` - searching will be performed in both ways,\n     * * `forward` - searching will be performed only forward,\n     * * `backward` - searching will be performed only backward.\n     *\n     * When valid selection range cannot be found, `null` is returned.\n     *\n     * @param {module:engine/model/position~Position} position Reference position where new selection range should be looked for.\n     * @param {'both'|'forward'|'backward'} [direction='both'] Search direction.\n     * @returns {module:engine/model/range~Range|null} Nearest selection range or `null` if one cannot be found.\n     */\n\n  }, {\n    key: \"getNearestSelectionRange\",\n    value: function getNearestSelectionRange(position) {\n      var direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'both';\n\n      // Return collapsed range if provided position is valid.\n      if (this.checkChild(position, '$text')) {\n        return new Range(position);\n      }\n\n      var backwardWalker, forwardWalker;\n\n      if (direction == 'both' || direction == 'backward') {\n        backwardWalker = new TreeWalker({\n          startPosition: position,\n          direction: 'backward'\n        });\n      }\n\n      if (direction == 'both' || direction == 'forward') {\n        forwardWalker = new TreeWalker({\n          startPosition: position\n        });\n      }\n\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = combineWalkers(backwardWalker, forwardWalker)[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var data = _step5.value;\n          var type = data.walker == backwardWalker ? 'elementEnd' : 'elementStart';\n          var value = data.value;\n\n          if (value.type == type && this.isObject(value.item)) {\n            return Range._createOn(value.item);\n          }\n\n          if (this.checkChild(value.nextPosition, '$text')) {\n            return new Range(value.nextPosition);\n          }\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5[\"return\"] != null) {\n            _iterator5[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      return null;\n    }\n    /**\n     * Tries to find position ancestors that allows to insert given node.\n     * It starts searching from the given position and goes node by node to the top of the model tree\n     * as long as {@link module:engine/model/schema~Schema#isLimit limit element},\n     * {@link module:engine/model/schema~Schema#isObject object element} or top-most ancestor won't be reached.\n     *\n     * @params {module:engine/model/position~Position} position Position from searching will start.\n     * @params {module:engine/model/node~Node|String} node Node for which allowed parent should be found or its name.\n     * @returns {module:engine/model/element~Element|null} element Allowed parent or null if nothing was found.\n     */\n\n  }, {\n    key: \"findAllowedParent\",\n    value: function findAllowedParent(position, node) {\n      var parent = position.parent;\n\n      while (parent) {\n        if (this.checkChild(parent, node)) {\n          return parent;\n        } // Do not split limit elements.\n\n\n        if (this.isLimit(parent)) {\n          return null;\n        }\n\n        parent = parent.parent;\n      }\n\n      return null;\n    }\n    /**\n     * Removes attributes disallowed by the schema.\n     *\n     * @param {Iterable.<module:engine/model/node~Node>} nodes Nodes that will be filtered.\n     * @param {module:engine/model/writer~Writer} writer\n     */\n\n  }, {\n    key: \"removeDisallowedAttributes\",\n    value: function removeDisallowedAttributes(nodes, writer) {\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = nodes[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var node = _step6.value;\n          var _iteratorNormalCompletion7 = true;\n          var _didIteratorError7 = false;\n          var _iteratorError7 = undefined;\n\n          try {\n            for (var _iterator7 = node.getAttributeKeys()[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n              var attribute = _step7.value;\n\n              if (!this.checkAttribute(node, attribute)) {\n                writer.removeAttribute(attribute, node);\n              }\n            }\n          } catch (err) {\n            _didIteratorError7 = true;\n            _iteratorError7 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion7 && _iterator7[\"return\"] != null) {\n                _iterator7[\"return\"]();\n              }\n            } finally {\n              if (_didIteratorError7) {\n                throw _iteratorError7;\n              }\n            }\n          }\n\n          if (node.is('element')) {\n            this.removeDisallowedAttributes(node.getChildren(), writer);\n          }\n        }\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6[\"return\"] != null) {\n            _iterator6[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n    }\n    /**\n     * Creates an instance of the schema context.\n     *\n     * @param {module:engine/model/schema~SchemaContextDefinition} context\n     * @returns {module:engine/model/schema~SchemaContext}\n     */\n\n  }, {\n    key: \"createContext\",\n    value: function createContext(context) {\n      return new SchemaContext(context);\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_clearCache\",\n    value: function _clearCache() {\n      this._compiledDefinitions = null;\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_compile\",\n    value: function _compile() {\n      var compiledDefinitions = {};\n      var sourceRules = this._sourceDefinitions;\n      var itemNames = Object.keys(sourceRules);\n\n      for (var _i2 = 0, _itemNames = itemNames; _i2 < _itemNames.length; _i2++) {\n        var itemName = _itemNames[_i2];\n        compiledDefinitions[itemName] = compileBaseItemRule(sourceRules[itemName], itemName);\n      }\n\n      for (var _i3 = 0, _itemNames2 = itemNames; _i3 < _itemNames2.length; _i3++) {\n        var _itemName = _itemNames2[_i3];\n        compileAllowContentOf(compiledDefinitions, _itemName);\n      }\n\n      for (var _i4 = 0, _itemNames3 = itemNames; _i4 < _itemNames3.length; _i4++) {\n        var _itemName2 = _itemNames3[_i4];\n        compileAllowWhere(compiledDefinitions, _itemName2);\n      }\n\n      for (var _i5 = 0, _itemNames4 = itemNames; _i5 < _itemNames4.length; _i5++) {\n        var _itemName3 = _itemNames4[_i5];\n        compileAllowAttributesOf(compiledDefinitions, _itemName3);\n        compileInheritPropertiesFrom(compiledDefinitions, _itemName3);\n      }\n\n      for (var _i6 = 0, _itemNames5 = itemNames; _i6 < _itemNames5.length; _i6++) {\n        var _itemName4 = _itemNames5[_i6];\n        cleanUpAllowIn(compiledDefinitions, _itemName4);\n        cleanUpAllowAttributes(compiledDefinitions, _itemName4);\n      }\n\n      this._compiledDefinitions = compiledDefinitions;\n    }\n    /**\n     * @private\n     * @param {module:engine/model/schema~SchemaCompiledItemDefinition} def\n     * @param {module:engine/model/schema~SchemaContext} context\n     * @param {Number} contextItemIndex\n     */\n\n  }, {\n    key: \"_checkContextMatch\",\n    value: function _checkContextMatch(def, context) {\n      var contextItemIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : context.length - 1;\n      var contextItem = context.getItem(contextItemIndex);\n\n      if (def.allowIn.includes(contextItem.name)) {\n        if (contextItemIndex == 0) {\n          return true;\n        } else {\n          var parentRule = this.getDefinition(contextItem);\n          return this._checkContextMatch(parentRule, context, contextItemIndex - 1);\n        }\n      } else {\n        return false;\n      }\n    }\n    /**\n     * Takes a flat range and an attribute name. Traverses the range recursively and deeply to find and return all ranges\n     * inside the given range on which the attribute can be applied.\n     *\n     * This is a helper function for {@link ~Schema#getValidRanges}.\n     *\n     * @private\n     * @param {module:engine/model/range~Range} range Range to process.\n     * @param {String} attribute The name of the attribute to check.\n     * @returns {Iterable.<module:engine/model/range~Range>} Ranges in which the attribute is allowed.\n     */\n\n  }, {\n    key: \"_getValidRangesForRange\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _getValidRangesForRange(range, attribute) {\n      var start, end, _iteratorNormalCompletion8, _didIteratorError8, _iteratorError8, _iterator8, _step8, item;\n\n      return regeneratorRuntime.wrap(function _getValidRangesForRange$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              start = range.start;\n              end = range.start;\n              _iteratorNormalCompletion8 = true;\n              _didIteratorError8 = false;\n              _iteratorError8 = undefined;\n              _context2.prev = 5;\n              _iterator8 = range.getItems({\n                shallow: true\n              })[Symbol.iterator]();\n\n            case 7:\n              if (_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done) {\n                _context2.next = 20;\n                break;\n              }\n\n              item = _step8.value;\n\n              if (!item.is('element')) {\n                _context2.next = 11;\n                break;\n              }\n\n              return _context2.delegateYield(this._getValidRangesForRange(Range._createIn(item), attribute), \"t0\", 11);\n\n            case 11:\n              if (this.checkAttribute(item, attribute)) {\n                _context2.next = 16;\n                break;\n              }\n\n              if (start.isEqual(end)) {\n                _context2.next = 15;\n                break;\n              }\n\n              _context2.next = 15;\n              return new Range(start, end);\n\n            case 15:\n              start = Position._createAfter(item);\n\n            case 16:\n              end = Position._createAfter(item);\n\n            case 17:\n              _iteratorNormalCompletion8 = true;\n              _context2.next = 7;\n              break;\n\n            case 20:\n              _context2.next = 26;\n              break;\n\n            case 22:\n              _context2.prev = 22;\n              _context2.t1 = _context2[\"catch\"](5);\n              _didIteratorError8 = true;\n              _iteratorError8 = _context2.t1;\n\n            case 26:\n              _context2.prev = 26;\n              _context2.prev = 27;\n\n              if (!_iteratorNormalCompletion8 && _iterator8[\"return\"] != null) {\n                _iterator8[\"return\"]();\n              }\n\n            case 29:\n              _context2.prev = 29;\n\n              if (!_didIteratorError8) {\n                _context2.next = 32;\n                break;\n              }\n\n              throw _iteratorError8;\n\n            case 32:\n              return _context2.finish(29);\n\n            case 33:\n              return _context2.finish(26);\n\n            case 34:\n              if (start.isEqual(end)) {\n                _context2.next = 37;\n                break;\n              }\n\n              _context2.next = 37;\n              return new Range(start, end);\n\n            case 37:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _getValidRangesForRange, this, [[5, 22, 26, 34], [27,, 29, 33]]);\n    })\n  }]);\n\n  return Schema;\n}();\n\nexport { Schema as default };\nmix(Schema, ObservableMixin);\n/**\n * Event fired when the {@link #checkChild} method is called. It allows plugging in\n * additional behavior – e.g. implementing rules which cannot be defined using the declarative\n * {@link module:engine/model/schema~SchemaItemDefinition} interface.\n *\n * **Note:** The {@link #addChildCheck} method is a more handy way to register callbacks. Internally,\n * it registers a listener to this event but comes with a simpler API and it is the recommended choice\n * in most of the cases.\n *\n * The {@link #checkChild} method fires an event because it is\n * {@link module:utils/observablemixin~ObservableMixin#decorate decorated} with it. Thanks to that you can\n * use this event in a various way, but the most important use case is overriding standard behaviour of the\n * `checkChild()` method. Let's see a typical listener template:\n *\n *\t\tschema.on( 'checkChild', ( evt, args ) => {\n *\t\t\tconst context = args[ 0 ];\n *\t\t\tconst childDefinition = args[ 1 ];\n *\t\t}, { priority: 'high' } );\n *\n * The listener is added with a `high` priority to be executed before the default method is really called. The `args` callback\n * parameter contains arguments passed to `checkChild( context, child )`. However, the `context` parameter is already\n * normalized to a {@link module:engine/model/schema~SchemaContext} instance and `child` to a\n * {@link module:engine/model/schema~SchemaCompiledItemDefinition} instance, so you don't have to worry about\n * the various ways how `context` and `child` may be passed to `checkChild()`.\n *\n * **Note:** `childDefinition` may be `undefined` if `checkChild()` was called with a non-registered element.\n *\n * So, in order to implement a rule \"disallow `heading1` in `blockQuote`\" you can add such a listener:\n *\n *\t\tschema.on( 'checkChild', ( evt, args ) => {\n *\t\t\tconst context = args[ 0 ];\n *\t\t\tconst childDefinition = args[ 1 ];\n *\n *\t\t\tif ( context.endsWith( 'blockQuote' ) && childDefinition && childDefinition.name == 'heading1' ) {\n *\t\t\t\t// Prevent next listeners from being called.\n *\t\t\t\tevt.stop();\n *\t\t\t\t// Set the checkChild()'s return value.\n *\t\t\t\tevt.return = false;\n *\t\t\t}\n *\t\t}, { priority: 'high' } );\n *\n * Allowing elements in specific contexts will be a far less common use case, because it's normally handled by\n * `allowIn` rule from {@link module:engine/model/schema~SchemaItemDefinition} but if you have a complex scenario\n * where `listItem` should be allowed only in element `foo` which must be in element `bar`, then this would be the way:\n *\n *\t\tschema.on( 'checkChild', ( evt, args ) => {\n *\t\t\tconst context = args[ 0 ];\n *\t\t\tconst childDefinition = args[ 1 ];\n *\n *\t\t\tif ( context.endsWith( 'bar foo' ) && childDefinition.name == 'listItem' ) {\n *\t\t\t\t// Prevent next listeners from being called.\n *\t\t\t\tevt.stop();\n *\t\t\t\t// Set the checkChild()'s return value.\n *\t\t\t\tevt.return = true;\n *\t\t\t}\n *\t\t}, { priority: 'high' } );\n *\n * @event checkChild\n * @param {Array} args The `checkChild()`'s arguments.\n */\n\n/**\n * Event fired when the {@link #checkAttribute} method is called. It allows plugging in\n * additional behavior – e.g. implementing rules which cannot be defined using the declarative\n * {@link module:engine/model/schema~SchemaItemDefinition} interface.\n *\n * **Note:** The {@link #addAttributeCheck} method is a more handy way to register callbacks. Internally,\n * it registers a listener to this event but comes with a simpler API and it is the recommended choice\n * in most of the cases.\n *\n * The {@link #checkAttribute} method fires an event because it's\n * {@link module:utils/observablemixin~ObservableMixin#decorate decorated} with it. Thanks to that you can\n * use this event in a various way, but the most important use case is overriding standard behaviour of the\n * `checkAttribute()` method. Let's see a typical listener template:\n *\n *\t\tschema.on( 'checkAttribute', ( evt, args ) => {\n *\t\t\tconst context = args[ 0 ];\n *\t\t\tconst attributeName = args[ 1 ];\n *\t\t}, { priority: 'high' } );\n *\n * The listener is added with a `high` priority to be executed before the default method is really called. The `args` callback\n * parameter contains arguments passed to `checkAttribute( context, attributeName )`. However, the `context` parameter is already\n * normalized to a {@link module:engine/model/schema~SchemaContext} instance, so you don't have to worry about\n * the various ways how `context` may be passed to `checkAttribute()`.\n *\n * So, in order to implement a rule \"disallow `bold` in a text which is in a `heading1` you can add such a listener:\n *\n *\t\tschema.on( 'checkAttribute', ( evt, args ) => {\n *\t\t\tconst context = args[ 0 ];\n *\t\t\tconst atributeName = args[ 1 ];\n *\n *\t\t\tif ( context.endsWith( 'heading1 $text' ) && attributeName == 'bold' ) {\n *\t\t\t\t// Prevent next listeners from being called.\n *\t\t\t\tevt.stop();\n *\t\t\t\t// Set the checkAttribute()'s return value.\n *\t\t\t\tevt.return = false;\n *\t\t\t}\n *\t\t}, { priority: 'high' } );\n *\n * Allowing attributes in specific contexts will be a far less common use case, because it's normally handled by\n * `allowAttributes` rule from {@link module:engine/model/schema~SchemaItemDefinition} but if you have a complex scenario\n * where `bold` should be allowed only in element `foo` which must be in element `bar`, then this would be the way:\n *\n *\t\tschema.on( 'checkAttribute', ( evt, args ) => {\n *\t\t\tconst context = args[ 0 ];\n *\t\t\tconst atributeName = args[ 1 ];\n *\n *\t\t\tif ( context.endsWith( 'bar foo $text' ) && attributeName == 'bold' ) {\n *\t\t\t\t// Prevent next listeners from being called.\n *\t\t\t\tevt.stop();\n *\t\t\t\t// Set the checkAttribute()'s return value.\n *\t\t\t\tevt.return = true;\n *\t\t\t}\n *\t\t}, { priority: 'high' } );\n *\n * @event checkAttribute\n * @param {Array} args The `checkAttribute()`'s arguments.\n */\n\n/**\n * A definition of a {@link module:engine/model/schema~Schema schema} item.\n *\n * You can define the following rules:\n *\n * * `allowIn` &ndash; A string or an array of strings. Defines in which other items this item will be allowed.\n * * `allowAttributes` &ndash; A string or an array of strings. Defines allowed attributes of the given item.\n * * `allowContentOf` &ndash; A string or an array of strings. Inherits \"allowed children\" from other items.\n * * `allowWhere` &ndash; A string or an array of strings. Inherits \"allowed in\" from other items.\n * * `allowAttributesOf` &ndash; A string or an array of strings. Inherits attributes from other items.\n * * `inheritTypesFrom` &ndash; A string or an array of strings. Inherits `is*` properties of other items.\n * * `inheritAllFrom` &ndash; A string. A shorthand for `allowContentOf`, `allowWhere`, `allowAttributesOf`, `inheritTypesFrom`.\n * * Additionally, you can define the following `is*` properties: `isBlock`, `isLimit`, `isObject`, `isInline`. Read about them below.\n *\n * # The is* properties\n *\n * There are 3 commonly used `is*` properties. Their role is to assign additional semantics to schema items.\n * You can define more properties but you will also need to implement support for them in the existing editor features.\n *\n * * `isBlock` &ndash; Whether this item is paragraph-like. Generally speaking, content is usually made out of blocks\n * like paragraphs, list items, images, headings, etc. All these elements are marked as blocks. A block\n * should not allow another block inside. Note: There is also the `$block` generic item which has `isBlock` set to `true`.\n * Most block type items will inherit from `$block` (through `inheritAllFrom`).\n * * `isLimit` &ndash; It can be understood as whether this element should not be split by <kbd>Enter</kbd>.\n * Examples of limit elements: `$root`, table cell, image caption, etc. In other words, all actions that happen inside\n * a limit element are limited to its content. **Note:** All objects (`isObject`) are treated as limit elements, too.\n * * `isObject` &ndash; Whether an item is \"self-contained\" and should be treated as a whole. Examples of object elements:\n * `image`, `table`, `video`, etc. **Note:** An object is also a limit, so\n * {@link module:engine/model/schema~Schema#isLimit `isLimit()`} returns `true` for object elements automatically.\n * * `isInline` &ndash; Whether an item is \"text-like\" and should be treated as an inline node. Examples of inline elements:\n * `$text`, `softBreak` (`<br>`), etc.\n *\n * # Generic items\n *\n * There are three basic generic items: `$root`, `$block` and `$text`.\n * They are defined as follows:\n *\n *\t\tthis.schema.register( '$root', {\n *\t\t\tisLimit: true\n *\t\t} );\n *\t\tthis.schema.register( '$block', {\n *\t\t\tallowIn: '$root',\n *\t\t\tisBlock: true\n *\t\t} );\n *\t\tthis.schema.register( '$text', {\n *\t\t\tallowIn: '$block',\n *\t\t\tisInline: true\n *\t\t} );\n *\n * They reflect typical editor content that is contained within one root, consists of several blocks\n * (paragraphs, lists items, headings, images) which, in turn, may contain text inside.\n *\n * By inheriting from the generic items you can define new items which will get extended by other editor features.\n * Read more about generic types in the {@glink framework/guides/deep-dive/schema Defining schema} guide.\n *\n * # Example definitions\n *\n * Allow `paragraph` in roots and block quotes:\n *\n *\t\tschema.register( 'paragraph', {\n *\t\t\tallowIn: [ '$root', 'blockQuote' ],\n *\t\t\tisBlock: true\n *\t\t} );\n *\n * Allow `paragraph` everywhere where `$block` is allowed (i.e. in `$root`):\n *\n *\t\tschema.register( 'paragraph', {\n *\t\t\tallowWhere: '$block',\n *\t\t\tisBlock: true\n *\t\t} );\n *\n * Make `image` a block object, which is allowed everywhere where `$block` is.\n * Also, allow `src` and `alt` attributes in it:\n *\n *\t\tschema.register( 'image', {\n *\t\t\tallowWhere: '$block',\n *\t\t\tallowAttributes: [ 'src', 'alt' ],\n *\t\t\tisBlock: true,\n *\t\t\tisObject: true\n *\t\t} );\n *\n * Make `caption` allowed in `image` and make it allow all the content of `$block`s (usually, `$text`).\n * Also, mark it as a limit element so it cannot be split:\n *\n *\t\tschema.register( 'caption', {\n *\t\t\tallowIn: 'image',\n *\t\t\tallowContentOf: '$block',\n *\t\t\tisLimit: true\n *\t\t} );\n *\n * Make `listItem` inherit all from `$block` but also allow additional attributes:\n *\n *\t\tschema.register( 'listItem', {\n *\t\t\tinheritAllFrom: '$block',\n *\t\t\tallowAttributes: [ 'listType', 'listIndent' ]\n *\t\t} );\n *\n * Which translates to:\n *\n *\t\tschema.register( 'listItem', {\n *\t\t\tallowWhere: '$block',\n *\t\t\tallowContentOf: '$block',\n *\t\t\tallowAttributesOf: '$block',\n *\t\t\tinheritTypesFrom: '$block',\n *\t\t\tallowAttributes: [ 'listType', 'listIndent' ]\n *\t\t} );\n *\n * # Tips\n *\n * * Check schema definitions of existing features to see how they are defined.\n * * If you want to publish your feature so other developers can use it, try to use\n * generic items as much as possible.\n * * Keep your model clean. Limit it to the actual data and store information in a normalized way.\n * * Remember about definining the `is*` properties. They do not affect the allowed structures, but they can\n * affect how the editor features treat your elements.\n *\n * @typedef {Object} module:engine/model/schema~SchemaItemDefinition\n */\n\n/**\n * A simplified version of {@link module:engine/model/schema~SchemaItemDefinition} after\n * compilation by the {@link module:engine/model/schema~Schema schema}.\n * Rules fed to the schema by {@link module:engine/model/schema~Schema#register}\n * and {@link module:engine/model/schema~Schema#extend} methods are defined in the\n * {@link module:engine/model/schema~SchemaItemDefinition} format.\n * Later on, they are compiled to `SchemaCompiledItemDefition` so when you use e.g.\n * the {@link module:engine/model/schema~Schema#getDefinition} method you get the compiled version.\n *\n * The compiled version contains only the following properties:\n *\n * * The `name` property,\n * * The `is*` properties,\n * * The `allowIn` array,\n * * The `allowAttributes` array.\n *\n * @typedef {Object} module:engine/model/schema~SchemaCompiledItemDefinition\n */\n\n/**\n * A schema context &mdash; a list of ancestors of a given position in the document.\n *\n * Considering such position:\n *\n *\t\t<$root>\n *\t\t\t<blockQuote>\n *\t\t\t\t<paragraph>\n *\t\t\t\t\t^\n *\t\t\t\t</paragraph>\n *\t\t\t</blockQuote>\n *\t\t</$root>\n *\n * The context of this position is its {@link module:engine/model/position~Position#getAncestors lists of ancestors}:\n *\n *\t\t[ rootElement, blockQuoteElement, paragraphElement ]\n *\n * Contexts are used in the {@link module:engine/model/schema~Schema#event:checkChild `Schema#checkChild`} and\n * {@link module:engine/model/schema~Schema#event:checkAttribute `Schema#checkAttribute`} events as a definition\n * of a place in the document where the check occurs. The context instances are created based on the first arguments\n * of the {@link module:engine/model/schema~Schema#checkChild `Schema#checkChild()`} and\n * {@link module:engine/model/schema~Schema#checkAttribute `Schema#checkAttribute()`} methods so when\n * using these methods you need to use {@link module:engine/model/schema~SchemaContextDefinition}s.\n */\n\nexport var SchemaContext =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of the context.\n   *\n   * @param {module:engine/model/schema~SchemaContextDefinition} context\n   */\n  function SchemaContext(context) {\n    _classCallCheck(this, SchemaContext);\n\n    if (context instanceof SchemaContext) {\n      return context;\n    }\n\n    if (typeof context == 'string') {\n      context = [context];\n    } else if (!Array.isArray(context)) {\n      // `context` is item or position.\n      // Position#getAncestors() doesn't accept any parameters but it works just fine here.\n      context = context.getAncestors({\n        includeSelf: true\n      });\n    }\n\n    if (context[0] && typeof context[0] != 'string' && context[0].is('documentFragment')) {\n      context.shift();\n    }\n\n    this._items = context.map(mapContextItem);\n  }\n  /**\n   * The number of items.\n   *\n   * @type {Number}\n   */\n\n\n  _createClass(SchemaContext, [{\n    key: Symbol.iterator,\n\n    /**\n     * Iterable interface.\n     *\n     * Iterates over all context items.\n     *\n     * @returns {Iterable.<module:engine/model/schema~SchemaContextItem>}\n     */\n    value: function value() {\n      return this._items[Symbol.iterator]();\n    }\n    /**\n     * Returns a new schema context instance with an additional item.\n     *\n     * Item can be added as:\n     *\n     * \t\tconst context = new SchemaContext( [ '$root' ] );\n     *\n     * \t\t// An element.\n     * \t\tconst fooElement = writer.createElement( 'fooElement' );\n     * \t\tconst newContext = context.push( fooElement ); // [ '$root', 'fooElement' ]\n     *\n     * \t\t// A text node.\n     * \t\tconst text = writer.createText( 'foobar' );\n     * \t\tconst newContext = context.push( text ); // [ '$root', '$text' ]\n     *\n     * \t\t// A string (element name).\n     * \t\tconst newContext = context.push( 'barElement' ); // [ '$root', 'barElement' ]\n     *\n     * **Note** {@link module:engine/model/node~Node} that is already in the model tree will be added as the only item\n     * (without ancestors).\n     *\n     * @param {String|module:engine/model/node~Node|Array<String|module:engine/model/node~Node>} item An item that will be added\n     * to the current context.\n     * @returns {module:engine/model/schema~SchemaContext} A new schema context instance with an additional item.\n     */\n\n  }, {\n    key: \"push\",\n    value: function push(item) {\n      var ctx = new SchemaContext([item]);\n      ctx._items = [].concat(_toConsumableArray(this._items), _toConsumableArray(ctx._items));\n      return ctx;\n    }\n    /**\n     * Gets an item on the given index.\n     *\n     * @returns {module:engine/model/schema~SchemaContextItem}\n     */\n\n  }, {\n    key: \"getItem\",\n    value: function getItem(index) {\n      return this._items[index];\n    }\n    /**\n     * Returns the names of items.\n     *\n     * @returns {Iterable.<String>}\n     */\n\n  }, {\n    key: \"getNames\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function getNames() {\n      return regeneratorRuntime.wrap(function getNames$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              return _context3.delegateYield(this._items.map(function (item) {\n                return item.name;\n              }), \"t0\", 1);\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, getNames, this);\n    })\n    /**\n     * Checks whether the context ends with the given nodes.\n     *\n     *\t\tconst ctx = new SchemaContext( [ rootElement, paragraphElement, textNode ] );\n     *\n     *\t\tctx.endsWith( '$text' ); // -> true\n     *\t\tctx.endsWith( 'paragraph $text' ); // -> true\n     *\t\tctx.endsWith( '$root' ); // -> false\n     *\t\tctx.endsWith( 'paragraph' ); // -> false\n     *\n     * @param {String} query\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"endsWith\",\n    value: function endsWith(query) {\n      return Array.from(this.getNames()).join(' ').endsWith(query);\n    }\n  }, {\n    key: \"length\",\n    get: function get() {\n      return this._items.length;\n    }\n    /**\n     * The last item (the lowest node).\n     *\n     * @type {module:engine/model/schema~SchemaContextItem}\n     */\n\n  }, {\n    key: \"last\",\n    get: function get() {\n      return this._items[this._items.length - 1];\n    }\n  }]);\n\n  return SchemaContext;\n}();\n/**\n * The definition of a {@link module:engine/model/schema~SchemaContext schema context}.\n *\n * Contexts can be created in multiple ways:\n *\n * * By defining a **node** – in this cases this node and all its ancestors will be used.\n * * By defining a **position** in the document – in this case all its ancestors will be used.\n * * By defining an **array of nodes** – in this case this array defines the entire context.\n * * By defining a **name of node** - in this case node will be \"mocked\". It is not recommended because context\n * will be unrealistic (e.g. attributes of these nodes are not specified). However, at times this may be the only\n * way to define the context (e.g. when checking some hypothetical situation).\n * * By defining an **array of node names** (potentially, mixed with real nodes) – The same as **name of node**\n * but it is possible to create a path.\n * * By defining a {@link module:engine/model/schema~SchemaContext} instance - in this case the same instance as provided\n * will be return.\n *\n * Examples of context definitions passed to the {@link module:engine/model/schema~Schema#checkChild `Schema#checkChild()`}\n * method:\n *\n *\t\t// Assuming that we have a $root > blockQuote > paragraph structure, the following code\n *\t\t// will check node 'foo' in the following context:\n *\t\t// [ rootElement, blockQuoteElement, paragraphElement ]\n *\t\tconst contextDefinition = paragraphElement;\n * \t\tconst childToCheck = 'foo';\n *\t\tschema.checkChild( contextDefinition, childToCheck );\n *\n *\t\t// Also check in [ rootElement, blockQuoteElement, paragraphElement ].\n *\t\tschema.checkChild( model.createPositionAt( paragraphElement, 0 ), 'foo' );\n *\n *\t\t// Check in [ rootElement, paragraphElement ].\n *\t\tschema.checkChild( [ rootElement, paragraphElement ], 'foo' );\n *\n *\t\t// Check only fakeParagraphElement.\n *\t\tschema.checkChild( 'paragraph', 'foo' );\n *\n *\t\t// Check in [ fakeRootElement, fakeBarElement, paragraphElement ].\n *\t\tschema.checkChild( [ '$root', 'bar', paragraphElement ], 'foo' );\n *\n * All these `checkChild()` calls will fire {@link module:engine/model/schema~Schema#event:checkChild `Schema#checkChild`}\n * events in which `args[ 0 ]` is an instance of the context. Therefore, you can write a listener like this:\n *\n *\t\tschema.on( 'checkChild', ( evt, args ) => {\n *\t\t\tconst ctx = args[ 0 ];\n *\n *\t\t\tconsole.log( Array.from( ctx.getNames() ) );\n *\t\t} );\n *\n * Which will log the following:\n *\n *\t\t[ '$root', 'blockQuote', 'paragraph' ]\n *\t\t[ '$root', 'paragraph' ]\n *\t\t[ '$root', 'bar', 'paragraph' ]\n *\n * Note: When using the {@link module:engine/model/schema~Schema#checkAttribute `Schema#checkAttribute()`} method\n * you may want to check whether a text node may have an attribute. A {@link module:engine/model/text~Text} is a\n * correct way to define a context so you can do this:\n *\n *\t\tschema.checkAttribute( textNode, 'bold' );\n *\n * But sometimes you want to check whether a text at a given position might've had some attribute,\n * in which case you can create a context by mising an array of elements with a `'$text'` string:\n *\n *\t\t// Check in [ rootElement, paragraphElement, textNode ].\n *\t\tschema.checkChild( [ ...positionInParagraph.getAncestors(), '$text' ], 'bold' );\n *\n * @typedef {module:engine/model/node~Node|module:engine/model/position~Position|module:engine/model/schema~SchemaContext|\n * String|Array.<String|module:engine/model/node~Node>} module:engine/model/schema~SchemaContextDefinition\n */\n\n/**\n * An item of the {@link module:engine/model/schema~SchemaContext schema context}.\n *\n * It contains 3 properties:\n *\n * * `name` – the name of this item,\n * * `* getAttributeKeys()` – a generator of keys of item attributes,\n * * `getAttribute( keyName )` – a method to get attribute values.\n *\n * The context item interface is a highly simplified version of {@link module:engine/model/node~Node} and its role\n * is to expose only the information which schema checks are able to provide (which is the name of the node and\n * node's attributes).\n *\n *\t\tschema.on( 'checkChild', ( evt, args ) => {\n *\t\t\tconst ctx = args[ 0 ];\n *\t\t\tconst firstItem = ctx.getItem( 0 );\n *\n *\t\t\tconsole.log( firstItem.name ); // -> '$root'\n *\t\t\tconsole.log( firstItem.getAttribute( 'foo' ) ); // -> 'bar'\n *\t\t\tconsole.log( Array.from( firstItem.getAttributeKeys() ) ); // -> [ 'foo', 'faa' ]\n *\t\t} );\n *\n * @typedef {Object} module:engine/model/schema~SchemaContextItem\n */\n\n/**\n * A structure containing additional metadata describing the attribute.\n *\n * See {@link module:engine/model/schema~Schema#setAttributeProperties `Schema#setAttributeProperties()`} for usage examples.\n *\n * @typedef {Object} module:engine/model/schema~AttributeProperties\n * @property {Boolean} [isFormatting] Indicates that the attribute should be considered as a visual formatting, like `bold`, `italic` or\n * `fontSize` rather than semantic attribute (such as `src`, `listType`, etc.). For example, it is used by the \"Remove format\" feature.\n */\n\nfunction compileBaseItemRule(sourceItemRules, itemName) {\n  var itemRule = {\n    name: itemName,\n    allowIn: [],\n    allowContentOf: [],\n    allowWhere: [],\n    allowAttributes: [],\n    allowAttributesOf: [],\n    inheritTypesFrom: []\n  };\n  copyTypes(sourceItemRules, itemRule);\n  copyProperty(sourceItemRules, itemRule, 'allowIn');\n  copyProperty(sourceItemRules, itemRule, 'allowContentOf');\n  copyProperty(sourceItemRules, itemRule, 'allowWhere');\n  copyProperty(sourceItemRules, itemRule, 'allowAttributes');\n  copyProperty(sourceItemRules, itemRule, 'allowAttributesOf');\n  copyProperty(sourceItemRules, itemRule, 'inheritTypesFrom');\n  makeInheritAllWork(sourceItemRules, itemRule);\n  return itemRule;\n}\n\nfunction compileAllowContentOf(compiledDefinitions, itemName) {\n  var _iteratorNormalCompletion9 = true;\n  var _didIteratorError9 = false;\n  var _iteratorError9 = undefined;\n\n  try {\n    for (var _iterator9 = compiledDefinitions[itemName].allowContentOf[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n      var allowContentOfItemName = _step9.value;\n\n      // The allowContentOf property may point to an unregistered element.\n      if (compiledDefinitions[allowContentOfItemName]) {\n        var allowedChildren = getAllowedChildren(compiledDefinitions, allowContentOfItemName);\n        allowedChildren.forEach(function (allowedItem) {\n          allowedItem.allowIn.push(itemName);\n        });\n      }\n    }\n  } catch (err) {\n    _didIteratorError9 = true;\n    _iteratorError9 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion9 && _iterator9[\"return\"] != null) {\n        _iterator9[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError9) {\n        throw _iteratorError9;\n      }\n    }\n  }\n\n  delete compiledDefinitions[itemName].allowContentOf;\n}\n\nfunction compileAllowWhere(compiledDefinitions, itemName) {\n  var _iteratorNormalCompletion10 = true;\n  var _didIteratorError10 = false;\n  var _iteratorError10 = undefined;\n\n  try {\n    for (var _iterator10 = compiledDefinitions[itemName].allowWhere[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n      var allowWhereItemName = _step10.value;\n      var inheritFrom = compiledDefinitions[allowWhereItemName]; // The allowWhere property may point to an unregistered element.\n\n      if (inheritFrom) {\n        var _compiledDefinitions$;\n\n        var allowedIn = inheritFrom.allowIn;\n\n        (_compiledDefinitions$ = compiledDefinitions[itemName].allowIn).push.apply(_compiledDefinitions$, _toConsumableArray(allowedIn));\n      }\n    }\n  } catch (err) {\n    _didIteratorError10 = true;\n    _iteratorError10 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion10 && _iterator10[\"return\"] != null) {\n        _iterator10[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError10) {\n        throw _iteratorError10;\n      }\n    }\n  }\n\n  delete compiledDefinitions[itemName].allowWhere;\n}\n\nfunction compileAllowAttributesOf(compiledDefinitions, itemName) {\n  var _iteratorNormalCompletion11 = true;\n  var _didIteratorError11 = false;\n  var _iteratorError11 = undefined;\n\n  try {\n    for (var _iterator11 = compiledDefinitions[itemName].allowAttributesOf[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n      var allowAttributeOfItem = _step11.value;\n      var inheritFrom = compiledDefinitions[allowAttributeOfItem];\n\n      if (inheritFrom) {\n        var _compiledDefinitions$2;\n\n        var inheritAttributes = inheritFrom.allowAttributes;\n\n        (_compiledDefinitions$2 = compiledDefinitions[itemName].allowAttributes).push.apply(_compiledDefinitions$2, _toConsumableArray(inheritAttributes));\n      }\n    }\n  } catch (err) {\n    _didIteratorError11 = true;\n    _iteratorError11 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion11 && _iterator11[\"return\"] != null) {\n        _iterator11[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError11) {\n        throw _iteratorError11;\n      }\n    }\n  }\n\n  delete compiledDefinitions[itemName].allowAttributesOf;\n}\n\nfunction compileInheritPropertiesFrom(compiledDefinitions, itemName) {\n  var item = compiledDefinitions[itemName];\n  var _iteratorNormalCompletion12 = true;\n  var _didIteratorError12 = false;\n  var _iteratorError12 = undefined;\n\n  try {\n    for (var _iterator12 = item.inheritTypesFrom[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n      var inheritPropertiesOfItem = _step12.value;\n      var inheritFrom = compiledDefinitions[inheritPropertiesOfItem];\n\n      if (inheritFrom) {\n        var typeNames = Object.keys(inheritFrom).filter(function (name) {\n          return name.startsWith('is');\n        });\n        var _iteratorNormalCompletion13 = true;\n        var _didIteratorError13 = false;\n        var _iteratorError13 = undefined;\n\n        try {\n          for (var _iterator13 = typeNames[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n            var name = _step13.value;\n\n            if (!(name in item)) {\n              item[name] = inheritFrom[name];\n            }\n          }\n        } catch (err) {\n          _didIteratorError13 = true;\n          _iteratorError13 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion13 && _iterator13[\"return\"] != null) {\n              _iterator13[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError13) {\n              throw _iteratorError13;\n            }\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError12 = true;\n    _iteratorError12 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion12 && _iterator12[\"return\"] != null) {\n        _iterator12[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError12) {\n        throw _iteratorError12;\n      }\n    }\n  }\n\n  delete item.inheritTypesFrom;\n} // Remove items which weren't registered (because it may break some checks or we'd need to complicate them).\n// Make sure allowIn doesn't contain repeated values.\n\n\nfunction cleanUpAllowIn(compiledDefinitions, itemName) {\n  var itemRule = compiledDefinitions[itemName];\n  var existingItems = itemRule.allowIn.filter(function (itemToCheck) {\n    return compiledDefinitions[itemToCheck];\n  });\n  itemRule.allowIn = Array.from(new Set(existingItems));\n}\n\nfunction cleanUpAllowAttributes(compiledDefinitions, itemName) {\n  var itemRule = compiledDefinitions[itemName];\n  itemRule.allowAttributes = Array.from(new Set(itemRule.allowAttributes));\n}\n\nfunction copyTypes(sourceItemRules, itemRule) {\n  var _iteratorNormalCompletion14 = true;\n  var _didIteratorError14 = false;\n  var _iteratorError14 = undefined;\n\n  try {\n    for (var _iterator14 = sourceItemRules[Symbol.iterator](), _step14; !(_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done); _iteratorNormalCompletion14 = true) {\n      var sourceItemRule = _step14.value;\n      var typeNames = Object.keys(sourceItemRule).filter(function (name) {\n        return name.startsWith('is');\n      });\n      var _iteratorNormalCompletion15 = true;\n      var _didIteratorError15 = false;\n      var _iteratorError15 = undefined;\n\n      try {\n        for (var _iterator15 = typeNames[Symbol.iterator](), _step15; !(_iteratorNormalCompletion15 = (_step15 = _iterator15.next()).done); _iteratorNormalCompletion15 = true) {\n          var name = _step15.value;\n          itemRule[name] = sourceItemRule[name];\n        }\n      } catch (err) {\n        _didIteratorError15 = true;\n        _iteratorError15 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion15 && _iterator15[\"return\"] != null) {\n            _iterator15[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError15) {\n            throw _iteratorError15;\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError14 = true;\n    _iteratorError14 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion14 && _iterator14[\"return\"] != null) {\n        _iterator14[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError14) {\n        throw _iteratorError14;\n      }\n    }\n  }\n}\n\nfunction copyProperty(sourceItemRules, itemRule, propertyName) {\n  var _iteratorNormalCompletion16 = true;\n  var _didIteratorError16 = false;\n  var _iteratorError16 = undefined;\n\n  try {\n    for (var _iterator16 = sourceItemRules[Symbol.iterator](), _step16; !(_iteratorNormalCompletion16 = (_step16 = _iterator16.next()).done); _iteratorNormalCompletion16 = true) {\n      var sourceItemRule = _step16.value;\n\n      if (typeof sourceItemRule[propertyName] == 'string') {\n        itemRule[propertyName].push(sourceItemRule[propertyName]);\n      } else if (Array.isArray(sourceItemRule[propertyName])) {\n        var _itemRule$propertyNam;\n\n        (_itemRule$propertyNam = itemRule[propertyName]).push.apply(_itemRule$propertyNam, _toConsumableArray(sourceItemRule[propertyName]));\n      }\n    }\n  } catch (err) {\n    _didIteratorError16 = true;\n    _iteratorError16 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion16 && _iterator16[\"return\"] != null) {\n        _iterator16[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError16) {\n        throw _iteratorError16;\n      }\n    }\n  }\n}\n\nfunction makeInheritAllWork(sourceItemRules, itemRule) {\n  var _iteratorNormalCompletion17 = true;\n  var _didIteratorError17 = false;\n  var _iteratorError17 = undefined;\n\n  try {\n    for (var _iterator17 = sourceItemRules[Symbol.iterator](), _step17; !(_iteratorNormalCompletion17 = (_step17 = _iterator17.next()).done); _iteratorNormalCompletion17 = true) {\n      var sourceItemRule = _step17.value;\n      var inheritFrom = sourceItemRule.inheritAllFrom;\n\n      if (inheritFrom) {\n        itemRule.allowContentOf.push(inheritFrom);\n        itemRule.allowWhere.push(inheritFrom);\n        itemRule.allowAttributesOf.push(inheritFrom);\n        itemRule.inheritTypesFrom.push(inheritFrom);\n      }\n    }\n  } catch (err) {\n    _didIteratorError17 = true;\n    _iteratorError17 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion17 && _iterator17[\"return\"] != null) {\n        _iterator17[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError17) {\n        throw _iteratorError17;\n      }\n    }\n  }\n}\n\nfunction getAllowedChildren(compiledDefinitions, itemName) {\n  var itemRule = compiledDefinitions[itemName];\n  return getValues(compiledDefinitions).filter(function (def) {\n    return def.allowIn.includes(itemRule.name);\n  });\n}\n\nfunction getValues(obj) {\n  return Object.keys(obj).map(function (key) {\n    return obj[key];\n  });\n}\n\nfunction mapContextItem(ctxItem) {\n  if (typeof ctxItem == 'string') {\n    return {\n      name: ctxItem,\n      getAttributeKeys:\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function getAttributeKeys() {\n        return regeneratorRuntime.wrap(function getAttributeKeys$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, getAttributeKeys);\n      }),\n      getAttribute: function getAttribute() {}\n    };\n  } else {\n    return {\n      // '$text' means text nodes and text proxies.\n      name: ctxItem.is('element') ? ctxItem.name : '$text',\n      getAttributeKeys:\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function getAttributeKeys() {\n        return regeneratorRuntime.wrap(function getAttributeKeys$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                return _context5.delegateYield(ctxItem.getAttributeKeys(), \"t0\", 1);\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, getAttributeKeys);\n      }),\n      getAttribute: function getAttribute(key) {\n        return ctxItem.getAttribute(key);\n      }\n    };\n  }\n} // Generator function returning values from provided walkers, switching between them at each iteration. If only one walker\n// is provided it will return data only from that walker.\n//\n// @param {module:engine/module/treewalker~TreeWalker} [backward] Walker iterating in backward direction.\n// @param {module:engine/module/treewalker~TreeWalker} [forward] Walker iterating in forward direction.\n// @returns {Iterable.<Object>} Object returned at each iteration contains `value` and `walker` (informing which walker returned\n// given value) fields.\n\n\nfunction combineWalkers(backward, forward) {\n  var done, step, _step18;\n\n  return regeneratorRuntime.wrap(function combineWalkers$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          done = false;\n\n        case 1:\n          if (done) {\n            _context6.next = 17;\n            break;\n          }\n\n          done = true;\n\n          if (!backward) {\n            _context6.next = 9;\n            break;\n          }\n\n          step = backward.next();\n\n          if (step.done) {\n            _context6.next = 9;\n            break;\n          }\n\n          done = false;\n          _context6.next = 9;\n          return {\n            walker: backward,\n            value: step.value\n          };\n\n        case 9:\n          if (!forward) {\n            _context6.next = 15;\n            break;\n          }\n\n          _step18 = forward.next();\n\n          if (_step18.done) {\n            _context6.next = 15;\n            break;\n          }\n\n          done = false;\n          _context6.next = 15;\n          return {\n            walker: forward,\n            value: _step18.value\n          };\n\n        case 15:\n          _context6.next = 1;\n          break;\n\n        case 17:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked);\n} // Takes an array of non-intersecting ranges. For each of them gets minimal flat ranges covering that range and returns\n// all those minimal flat ranges.\n//\n// @param {Array.<module:engine/model/range~Range>} ranges Ranges to process.\n// @returns {Iterable.<module:engine/model/range~Range>} Minimal flat ranges of given `ranges`.\n\n\nfunction convertToMinimalFlatRanges(ranges) {\n  var _iteratorNormalCompletion18, _didIteratorError18, _iteratorError18, _iterator18, _step19, range;\n\n  return regeneratorRuntime.wrap(function convertToMinimalFlatRanges$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _iteratorNormalCompletion18 = true;\n          _didIteratorError18 = false;\n          _iteratorError18 = undefined;\n          _context7.prev = 3;\n          _iterator18 = ranges[Symbol.iterator]();\n\n        case 5:\n          if (_iteratorNormalCompletion18 = (_step19 = _iterator18.next()).done) {\n            _context7.next = 11;\n            break;\n          }\n\n          range = _step19.value;\n          return _context7.delegateYield(range.getMinimalFlatRanges(), \"t0\", 8);\n\n        case 8:\n          _iteratorNormalCompletion18 = true;\n          _context7.next = 5;\n          break;\n\n        case 11:\n          _context7.next = 17;\n          break;\n\n        case 13:\n          _context7.prev = 13;\n          _context7.t1 = _context7[\"catch\"](3);\n          _didIteratorError18 = true;\n          _iteratorError18 = _context7.t1;\n\n        case 17:\n          _context7.prev = 17;\n          _context7.prev = 18;\n\n          if (!_iteratorNormalCompletion18 && _iterator18[\"return\"] != null) {\n            _iterator18[\"return\"]();\n          }\n\n        case 20:\n          _context7.prev = 20;\n\n          if (!_didIteratorError18) {\n            _context7.next = 23;\n            break;\n          }\n\n          throw _iteratorError18;\n\n        case 23:\n          return _context7.finish(20);\n\n        case 24:\n          return _context7.finish(17);\n\n        case 25:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked2, null, [[3, 13, 17, 25], [18,, 20, 24]]);\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/conversion/upcastdispatcher\n */\nimport ViewConsumable from './viewconsumable';\nimport ModelRange from '../model/range';\nimport ModelPosition from '../model/position';\nimport { SchemaContext } from '../model/schema';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n/**\n * `UpcastDispatcher` is a central point of {@link module:engine/view/view view} conversion, which is a process of\n * converting given {@link module:engine/view/documentfragment~DocumentFragment view document fragment} or\n * {@link module:engine/view/element~Element} into another structure.\n * In default application, {@link module:engine/view/view view} is converted to {@link module:engine/model/model}.\n *\n * During conversion process, for all {@link module:engine/view/node~Node view nodes} from the converted view document fragment,\n * `UpcastDispatcher` fires corresponding events. Special callbacks called \"converters\" should listen to\n * `UpcastDispatcher` for those events.\n *\n * Each callback, as the second argument, is passed a special object `data` that has `viewItem`, `modelCursor` and\n * `modelRange` properties. `viewItem` property contains {@link module:engine/view/node~Node view node} or\n * {@link module:engine/view/documentfragment~DocumentFragment view document fragment}\n * that is converted at the moment and might be handled by the callback. `modelRange` property should be used to save the result\n * of conversion and is always a {@link module:engine/model/range~Range} when conversion result is correct.\n * `modelCursor` property is a {@link module:engine/model/position~Position position} on which conversion result will be inserted\n * and is a context according to {@link module:engine/model/schema~Schema schema} will be checked before the conversion.\n * See also {@link ~UpcastDispatcher#convert}. It is also shared by reference by all callbacks listening to given event.\n *\n * The third parameter passed to a callback is an instance of {@link ~UpcastDispatcher}\n * which provides additional tools for converters.\n *\n * Examples of providing callbacks for `UpcastDispatcher`:\n *\n *\t\t// Converter for links (<a>).\n *\t\teditor.data.upcastDispatcher.on( 'element:a', ( evt, data, conversionApi ) => {\n *\t\t\tif ( conversionApi.consumable.consume( data.viewItem, { name: true, attributes: [ 'href' ] } ) ) {\n *\t\t\t\t// <a> element is inline and is represented by an attribute in the model.\n *\t\t\t\t// This is why we need to convert only children.\n *\t\t\t\tconst { modelRange } = conversionApi.convertChildren( data.viewItem, data.modelCursor );\n *\n *\t\t\t\tfor ( let item of modelRange.getItems() ) {\n *\t\t\t\t\tif ( conversionApi.schema.checkAttribute( item, 'linkHref' ) ) {\n *\t\t\t\t\t\tconversionApi.writer.setAttribute( 'linkHref', data.viewItem.getAttribute( 'href' ), item );\n *\t\t\t\t\t}\n *\t\t\t\t}\n *\t\t\t}\n *\t\t} );\n *\n *\t\t// Convert all elements which have no custom converter into paragraph (autoparagraphing).\n *  \teditor.data.upcastDispatcher.on( 'element', ( evt, data, conversionApi ) => {\n *  \t \t// When element is already consumed by higher priority converters then do nothing.\n *  \t \tif ( conversionApi.consumable.test( data.viewItem, { name: data.viewItem.name } ) ) {\n *  \t \t\t\tconst paragraph = conversionApi.writer.createElement( 'paragraph' );\n *\n *  \t \t\t\t// Find allowed parent for paragraph that we are going to insert. If current parent does not allow\n *  \t \t\t\t// to insert paragraph but one of the ancestors does then split nodes to allowed parent.\n *  \t \t\t\tconst splitResult = conversionApi.splitToAllowedParent( paragraph, data.modelCursor );\n *\n *  \t \t\t\t// When there is no split result it means that we can't insert paragraph in this position.\n *  \t \t\t\tif ( splitResult ) {\n *  \t \t\t\t\t// Insert paragraph in allowed position.\n *  \t \t\t\t\tconversionApi.writer.insert( paragraph, splitResult.position );\n *\n *  \t \t\t\t\t// Convert children to paragraph.\n *  \t \t\t\t\tconst { modelRange } = conversionApi.convertChildren(\n *  \t \t\t\t\t\tdata.viewItem,\n *  \t \t\t\t\t\tconversionApi.writer.createPositionAt( paragraph, 0 )\n *  \t \t\t\t\t);\n *\n * \t\t\t\t\t\t// Set as conversion result, attribute converters may use this property.\n *  \t \t\t\t\tdata.modelRange = conversionApi.writer.createRange(\n *  \t \t\t\t\t\tconversionApi.writer.createPositionBefore( paragraph ),\n *  \t \t\t\t\t\tmodelRange.end\n *  \t \t\t\t\t);\n *\n *  \t \t\t\t\t// Continue conversion inside paragraph.\n *  \t \t\t\t\tdata.modelCursor = data.modelRange.end;\n *  \t \t\t\t}\n *  \t \t\t}\n *  \t \t}\n *  \t }, { priority: 'low' } );\n *\n * Before each conversion process, `UpcastDispatcher` fires {@link ~UpcastDispatcher#event:viewCleanup}\n * event which can be used to prepare tree view for conversion.\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n * @fires viewCleanup\n * @fires element\n * @fires text\n * @fires documentFragment\n */\n\nvar UpcastDispatcher =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a `UpcastDispatcher` that operates using passed API.\n   *\n   * @see module:engine/conversion/upcastdispatcher~UpcastConversionApi\n   * @param {Object} [conversionApi] Additional properties for interface that will be passed to events fired\n   * by `UpcastDispatcher`.\n   */\n  function UpcastDispatcher() {\n    var conversionApi = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, UpcastDispatcher);\n\n    /**\n     * List of the elements that were created during splitting.\n     *\n     * After conversion process the list is cleared.\n     *\n     * @private\n     * @type {Map.<module:engine/model/element~Element,Array.<module:engine/model/element~Element>>}\n     */\n    this._splitParts = new Map();\n    /**\n     * Position in the temporary structure where the converted content is inserted. The structure reflect the context of\n     * the target position where the content will be inserted. This property is build based on the context parameter of the\n     * convert method.\n     *\n     * @private\n     * @type {module:engine/model/position~Position|null}\n     */\n\n    this._modelCursor = null;\n    /**\n     * Interface passed by dispatcher to the events callbacks.\n     *\n     * @member {module:engine/conversion/upcastdispatcher~UpcastConversionApi}\n     */\n\n    this.conversionApi = Object.assign({}, conversionApi); // `convertItem`, `convertChildren` and `splitToAllowedParent` are bound to this `UpcastDispatcher`\n    // instance and set on `conversionApi`. This way only a part of `UpcastDispatcher` API is exposed.\n\n    this.conversionApi.convertItem = this._convertItem.bind(this);\n    this.conversionApi.convertChildren = this._convertChildren.bind(this);\n    this.conversionApi.splitToAllowedParent = this._splitToAllowedParent.bind(this);\n    this.conversionApi.getSplitParts = this._getSplitParts.bind(this);\n  }\n  /**\n   * Starts the conversion process. The entry point for the conversion.\n   *\n   * @fires element\n   * @fires text\n   * @fires documentFragment\n   * @param {module:engine/view/documentfragment~DocumentFragment|module:engine/view/element~Element} viewItem\n   * Part of the view to be converted.\n   * @param {module:engine/model/writer~Writer} writer Instance of model writer.\n   * @param {module:engine/model/schema~SchemaContextDefinition} [context=['$root']] Elements will be converted according to this context.\n   * @returns {module:engine/model/documentfragment~DocumentFragment} Model data that is a result of the conversion process\n   * wrapped in `DocumentFragment`. Converted marker elements will be set as that document fragment's\n   * {@link module:engine/model/documentfragment~DocumentFragment#markers static markers map}.\n   */\n\n\n  _createClass(UpcastDispatcher, [{\n    key: \"convert\",\n    value: function convert(viewItem, writer) {\n      var context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ['$root'];\n      this.fire('viewCleanup', viewItem); // Create context tree and set position in the top element.\n      // Items will be converted according to this position.\n\n      this._modelCursor = createContextTree(context, writer); // Store writer in conversion as a conversion API\n      // to be sure that conversion process will use the same batch.\n\n      this.conversionApi.writer = writer; // Create consumable values list for conversion process.\n\n      this.conversionApi.consumable = ViewConsumable.createFrom(viewItem); // Custom data stored by converter for conversion process.\n\n      this.conversionApi.store = {}; // Do the conversion.\n\n      var _this$_convertItem = this._convertItem(viewItem, this._modelCursor),\n          modelRange = _this$_convertItem.modelRange; // Conversion result is always a document fragment so let's create it.\n\n\n      var documentFragment = writer.createDocumentFragment(); // When there is a conversion result.\n\n      if (modelRange) {\n        // Remove all empty elements that were create while splitting.\n        this._removeEmptyElements(); // Move all items that were converted in context tree to the document fragment.\n\n\n        for (var _i = 0, _Array$from = Array.from(this._modelCursor.parent.getChildren()); _i < _Array$from.length; _i++) {\n          var item = _Array$from[_i];\n          writer.append(item, documentFragment);\n        } // Extract temporary markers elements from model and set as static markers collection.\n\n\n        documentFragment.markers = extractMarkersFromModelFragment(documentFragment, writer);\n      } // Clear context position.\n\n\n      this._modelCursor = null; // Clear split elements lists.\n\n      this._splitParts.clear(); // Clear conversion API.\n\n\n      this.conversionApi.writer = null;\n      this.conversionApi.store = null; // Return fragment as conversion result.\n\n      return documentFragment;\n    }\n    /**\n     * @private\n     * @see module:engine/conversion/upcastdispatcher~UpcastConversionApi#convertItem\n     */\n\n  }, {\n    key: \"_convertItem\",\n    value: function _convertItem(viewItem, modelCursor) {\n      var data = Object.assign({\n        viewItem: viewItem,\n        modelCursor: modelCursor,\n        modelRange: null\n      });\n\n      if (viewItem.is('element')) {\n        this.fire('element:' + viewItem.name, data, this.conversionApi);\n      } else if (viewItem.is('text')) {\n        this.fire('text', data, this.conversionApi);\n      } else {\n        this.fire('documentFragment', data, this.conversionApi);\n      } // Handle incorrect conversion result.\n\n\n      if (data.modelRange && !(data.modelRange instanceof ModelRange)) {\n        /**\n         * Incorrect conversion result was dropped.\n         *\n         * {@link module:engine/model/range~Range Model range} should be a conversion result.\n         *\n         * @error view-conversion-dispatcher-incorrect-result\n         */\n        throw new CKEditorError('view-conversion-dispatcher-incorrect-result: Incorrect conversion result was dropped.', this);\n      }\n\n      return {\n        modelRange: data.modelRange,\n        modelCursor: data.modelCursor\n      };\n    }\n    /**\n     * @private\n     * @see module:engine/conversion/upcastdispatcher~UpcastConversionApi#convertChildren\n     */\n\n  }, {\n    key: \"_convertChildren\",\n    value: function _convertChildren(viewItem, modelCursor) {\n      var modelRange = new ModelRange(modelCursor);\n      var nextModelCursor = modelCursor;\n\n      for (var _i2 = 0, _Array$from2 = Array.from(viewItem.getChildren()); _i2 < _Array$from2.length; _i2++) {\n        var viewChild = _Array$from2[_i2];\n\n        var result = this._convertItem(viewChild, nextModelCursor);\n\n        if (result.modelRange instanceof ModelRange) {\n          modelRange.end = result.modelRange.end;\n          nextModelCursor = result.modelCursor;\n        }\n      }\n\n      return {\n        modelRange: modelRange,\n        modelCursor: nextModelCursor\n      };\n    }\n    /**\n     * @private\n     * @see module:engine/conversion/upcastdispatcher~UpcastConversionApi#splitToAllowedParent\n     */\n\n  }, {\n    key: \"_splitToAllowedParent\",\n    value: function _splitToAllowedParent(node, modelCursor) {\n      // Try to find allowed parent.\n      var allowedParent = this.conversionApi.schema.findAllowedParent(modelCursor, node); // When there is no parent that allows to insert node then return `null`.\n\n      if (!allowedParent) {\n        return null;\n      } // When current position parent allows to insert node then return this position.\n\n\n      if (allowedParent === modelCursor.parent) {\n        return {\n          position: modelCursor\n        };\n      } // When allowed parent is in context tree.\n\n\n      if (this._modelCursor.parent.getAncestors().includes(allowedParent)) {\n        return null;\n      } // Split element to allowed parent.\n\n\n      var splitResult = this.conversionApi.writer.split(modelCursor, allowedParent); // Using the range returned by `model.Writer#split`, we will pair original elements with their split parts.\n      //\n      // The range returned from the writer spans \"over the split\" or, precisely saying, from the end of the original element (the one\n      // that got split) to the beginning of the other part of that element:\n      //\n      // <limit><a><b><c>X[]Y</c></b><a></limit> ->\n      // <limit><a><b><c>X[</c></b></a><a><b><c>]Y</c></b></a>\n      //\n      // After the split there cannot be any full node between the positions in `splitRange`. The positions are touching.\n      // Also, because of how splitting works, it is easy to notice, that \"closing tags\" are in the reverse order than \"opening tags\".\n      // Also, since we split all those elements, each of them has to have the other part.\n      //\n      // With those observations in mind, we will pair the original elements with their split parts by saving \"closing tags\" and matching\n      // them with \"opening tags\" in the reverse order. For that we can use a stack.\n\n      var stack = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = splitResult.range.getWalker()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var treeWalkerValue = _step.value;\n\n          if (treeWalkerValue.type == 'elementEnd') {\n            stack.push(treeWalkerValue.item);\n          } else {\n            // There should not be any text nodes after the element is split, so the only other value is `elementStart`.\n            var originalPart = stack.pop();\n            var splitPart = treeWalkerValue.item;\n\n            this._registerSplitPair(originalPart, splitPart);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return {\n        position: splitResult.position,\n        cursorParent: splitResult.range.end.parent\n      };\n    }\n    /**\n     * Registers that `splitPart` element is a split part of the `originalPart` element.\n     *\n     * Data set by this method is used by {@link #_getSplitParts} and {@link #_removeEmptyElements}.\n     *\n     * @private\n     * @param {module:engine/model/element~Element} originalPart\n     * @param {module:engine/model/element~Element} splitPart\n     */\n\n  }, {\n    key: \"_registerSplitPair\",\n    value: function _registerSplitPair(originalPart, splitPart) {\n      if (!this._splitParts.has(originalPart)) {\n        this._splitParts.set(originalPart, [originalPart]);\n      }\n\n      var list = this._splitParts.get(originalPart);\n\n      this._splitParts.set(splitPart, list);\n\n      list.push(splitPart);\n    }\n    /**\n     * @private\n     * @see module:engine/conversion/upcastdispatcher~UpcastConversionApi#getSplitParts\n     */\n\n  }, {\n    key: \"_getSplitParts\",\n    value: function _getSplitParts(element) {\n      var parts;\n\n      if (!this._splitParts.has(element)) {\n        parts = [element];\n      } else {\n        parts = this._splitParts.get(element);\n      }\n\n      return parts;\n    }\n    /**\n     * Checks if there are any empty elements created while splitting and removes them.\n     *\n     * This method works recursively to re-check empty elements again after at least one element was removed in the initial call,\n     * as some elements might have become empty after other empty elements were removed from them.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_removeEmptyElements\",\n    value: function _removeEmptyElements() {\n      var anyRemoved = false;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this._splitParts.keys()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var element = _step2.value;\n\n          if (element.isEmpty) {\n            this.conversionApi.writer.remove(element);\n\n            this._splitParts[\"delete\"](element);\n\n            anyRemoved = true;\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      if (anyRemoved) {\n        this._removeEmptyElements();\n      }\n    }\n    /**\n     * Fired before the first conversion event, at the beginning of upcast (view to model conversion) process.\n     *\n     * @event viewCleanup\n     * @param {module:engine/view/documentfragment~DocumentFragment|module:engine/view/element~Element}\n     * viewItem Part of the view to be converted.\n     */\n\n    /**\n     * Fired when {@link module:engine/view/element~Element} is converted.\n     *\n     * `element` is a namespace event for a class of events. Names of actually called events follow this pattern:\n     * `element:<elementName>` where `elementName` is the name of converted element. This way listeners may listen to\n     * all elements conversion or to conversion of specific elements.\n     *\n     * @event element\n     * @param {Object} data Conversion data. Keep in mind that this object is shared by reference between all\n     * callbacks that will be called. This means that callbacks can override values if needed, and those values will\n     * be available in other callbacks.\n     * @param {module:engine/view/item~Item} data.viewItem Converted item.\n     * @param {module:engine/model/position~Position} data.modelCursor Position where a converter should start changes.\n     * Change this value for the next converter to tell where the conversion should continue.\n     * @param {module:engine/model/range~Range} data.modelRange The current state of conversion result. Every change to\n     * converted element should be reflected by setting or modifying this property.\n     * @param {module:engine/conversion/upcastdispatcher~UpcastConversionApi} conversionApi Conversion utilities to be used by callback.\n     */\n\n    /**\n     * Fired when {@link module:engine/view/text~Text} is converted.\n     *\n     * @event text\n     * @see #event:element\n     */\n\n    /**\n     * Fired when {@link module:engine/view/documentfragment~DocumentFragment} is converted.\n     *\n     * @event documentFragment\n     * @see #event:element\n     */\n\n  }]);\n\n  return UpcastDispatcher;\n}();\n\nexport { UpcastDispatcher as default };\nmix(UpcastDispatcher, EmitterMixin); // Traverses given model item and searches elements which marks marker range. Found element is removed from\n// DocumentFragment but path of this element is stored in a Map which is then returned.\n//\n// @param {module:engine/view/documentfragment~DocumentFragment|module:engine/view/node~Node} modelItem Fragment of model.\n// @returns {Map<String, module:engine/model/range~Range>} List of static markers.\n\nfunction extractMarkersFromModelFragment(modelItem, writer) {\n  var markerElements = new Set();\n  var markers = new Map(); // Create ModelTreeWalker.\n\n  var range = ModelRange._createIn(modelItem).getItems(); // Walk through DocumentFragment and collect marker elements.\n\n\n  var _iteratorNormalCompletion3 = true;\n  var _didIteratorError3 = false;\n  var _iteratorError3 = undefined;\n\n  try {\n    for (var _iterator3 = range[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n      var item = _step3.value;\n\n      // Check if current element is a marker.\n      if (item.name == '$marker') {\n        markerElements.add(item);\n      }\n    } // Walk through collected marker elements store its path and remove its from the DocumentFragment.\n\n  } catch (err) {\n    _didIteratorError3 = true;\n    _iteratorError3 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n        _iterator3[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError3) {\n        throw _iteratorError3;\n      }\n    }\n  }\n\n  var _iteratorNormalCompletion4 = true;\n  var _didIteratorError4 = false;\n  var _iteratorError4 = undefined;\n\n  try {\n    for (var _iterator4 = markerElements[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n      var markerElement = _step4.value;\n      var markerName = markerElement.getAttribute('data-name');\n      var currentPosition = writer.createPositionBefore(markerElement); // When marker of given name is not stored it means that we have found the beginning of the range.\n\n      if (!markers.has(markerName)) {\n        markers.set(markerName, new ModelRange(currentPosition.clone())); // Otherwise is means that we have found end of the marker range.\n      } else {\n        markers.get(markerName).end = currentPosition.clone();\n      } // Remove marker element from DocumentFragment.\n\n\n      writer.remove(markerElement);\n    }\n  } catch (err) {\n    _didIteratorError4 = true;\n    _iteratorError4 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion4 && _iterator4[\"return\"] != null) {\n        _iterator4[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError4) {\n        throw _iteratorError4;\n      }\n    }\n  }\n\n  return markers;\n} // Creates model fragment according to given context and returns position in the bottom (the deepest) element.\n\n\nfunction createContextTree(contextDefinition, writer) {\n  var position;\n  var _iteratorNormalCompletion5 = true;\n  var _didIteratorError5 = false;\n  var _iteratorError5 = undefined;\n\n  try {\n    for (var _iterator5 = new SchemaContext(contextDefinition)[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n      var item = _step5.value;\n      var attributes = {};\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = item.getAttributeKeys()[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var key = _step6.value;\n          attributes[key] = item.getAttribute(key);\n        }\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6[\"return\"] != null) {\n            _iterator6[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n\n      var current = writer.createElement(item.name, attributes);\n\n      if (position) {\n        writer.append(current, position);\n      }\n\n      position = ModelPosition._createAt(current, 0);\n    }\n  } catch (err) {\n    _didIteratorError5 = true;\n    _iteratorError5 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion5 && _iterator5[\"return\"] != null) {\n        _iterator5[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError5) {\n        throw _iteratorError5;\n      }\n    }\n  }\n\n  return position;\n}\n/**\n * Conversion interface that is registered for given {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher}\n * and is passed as one of parameters when {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher dispatcher}\n * fires it's events.\n *\n * @interface module:engine/conversion/upcastdispatcher~UpcastConversionApi\n */\n\n/**\n * Starts conversion of given item by firing an appropriate event.\n *\n * Every fired event is passed (as first parameter) an object with `modelRange` property. Every event may set and/or\n * modify that property. When all callbacks are done, the final value of `modelRange` property is returned by this method.\n * The `modelRange` must be {@link module:engine/model/range~Range model range} or `null` (as set by default).\n *\n * @method #convertItem\n * @fires module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:element\n * @fires module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:text\n * @fires module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:documentFragment\n * @param {module:engine/view/item~Item} viewItem Item to convert.\n * @param {module:engine/model/position~Position} modelCursor Position of conversion.\n * @returns {Object} result Conversion result.\n * @returns {module:engine/model/range~Range|null} result.modelRange Model range containing result of item conversion,\n * created and modified by callbacks attached to fired event, or `null` if the conversion result was incorrect.\n * @returns {module:engine/model/position~Position} result.modelCursor Position where conversion should be continued.\n */\n\n/**\n * Starts conversion of all children of given item by firing appropriate events for all those children.\n *\n * @method #convertChildren\n * @fires module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:element\n * @fires module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:text\n * @fires module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:documentFragment\n * @param {module:engine/view/item~Item} viewItem Element which children should be converted.\n * @param {module:engine/model/position~Position} modelCursor Position of conversion.\n * @returns {Object} result Conversion result.\n * @returns {module:engine/model/range~Range} result.modelRange Model range containing results of conversion of all children of given item.\n * When no children was converted then range is collapsed.\n * @returns {module:engine/model/position~Position} result.modelCursor Position where conversion should be continued.\n */\n\n/**\n * Checks {@link module:engine/model/schema~Schema schema} to find allowed parent for element that we are going to insert\n * starting from given position. If current parent does not allow to insert element but one of the ancestors does then\n * split nodes to allowed parent.\n *\n * If schema allows to insert node in given position, nothing is split and object with that position is returned.\n *\n * If it was not possible to find allowed parent, `null` is returned, nothing is split.\n *\n * Otherwise, ancestors are split and object with position and the copy of the split element is returned.\n *\n * For instance, if `<image>` is not allowed in `<paragraph>` but is allowed in `$root`:\n *\n *\t\t<paragraph>foo[]bar</paragraph>\n *\n *  \t-> split for `<image>` ->\n *\n *  \t<paragraph>foo</paragraph>[]<paragraph>bar</paragraph>\n *\n * In the sample above position between `<paragraph>` elements will be returned as `position` and the second `paragraph`\n * as `cursorParent`.\n *\n * @method #splitToAllowedParent\n * @param {module:engine/model/position~Position} position Position on which element is going to be inserted.\n * @param {module:engine/model/node~Node} node Node to insert.\n * @returns {Object|null} Split result. If it was not possible to find allowed position `null` is returned.\n * @returns {module:engine/model/position~Position} position between split elements.\n * @returns {module:engine/model/element~Element} [cursorParent] Element inside which cursor should be placed to\n * continue conversion. When element is not defined it means that there was no split.\n */\n\n/**\n * Returns all the split parts of given `element` that were created during upcasting through using {@link #splitToAllowedParent}.\n * It enables you to easily track those elements and continue processing them after they are split during their children conversion.\n *\n *\t\t<paragraph>Foo<image />bar<image />baz</paragraph> ->\n *\t\t<paragraph>Foo</paragraph><image /><paragraph>bar</paragraph><image /><paragraph>baz</paragraph>\n *\n * For a reference to any of above paragraphs, the function will return all three paragraphs (the original element included),\n * sorted in the order of their creation (the original element is the first one).\n *\n * If given `element` was not split, an array with single element is returned.\n *\n * Example of a usage in a converter code:\n *\n *\t\tconst myElement = conversionApi.writer.createElement( 'myElement' );\n *\n *\t\t// Children conversion may split `myElement`.\n *\t\tconversionApi.convertChildren( myElement, modelCursor );\n *\n *\t\tconst splitParts = conversionApi.getSplitParts( myElement );\n *\t\tconst lastSplitPart = splitParts[ splitParts.length - 1 ];\n *\n *\t\t// Setting `data.modelRange` basing on split parts:\n *\t\tdata.modelRange = conversionApi.writer.createRange(\n *\t\t\tconversionApi.writer.createPositionBefore( myElement ),\n *\t\t\tconversionApi.writer.createPositionAfter( lastSplitPart )\n *\t\t);\n *\n *\t\t// Setting `data.modelCursor` to continue after the last split element:\n *\t\tdata.modelCursor = conversionApi.writer.createPositionAfter( lastSplitPart );\n *\n * **Tip:** if you are unable to get a reference to the original element (for example because the code is split into multiple converters\n * or even classes) but it was already converted, you might want to check first element in `data.modelRange`. This is a common situation\n * if an attribute converter is separated from an element converter.\n *\n * @method #getSplitParts\n * @param {module:engine/model/element~Element} element\n * @returns {Array.<module:engine/model/element~Element>}\n */\n\n/**\n * Stores information about what parts of processed view item are still waiting to be handled. After a piece of view item\n * was converted, appropriate consumable value should be {@link module:engine/conversion/viewconsumable~ViewConsumable#consume consumed}.\n *\n * @member {module:engine/conversion/viewconsumable~ViewConsumable} #consumable\n */\n\n/**\n * Custom data stored by converters for conversion process. Custom properties of this object can be defined and use to\n * pass parameters between converters.\n *\n * The difference between this property and `data` parameter of\n * {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:element} is that `data` parameters allows you\n * to pass parameters within a single event and `store` within the whole conversion.\n *\n * @member {Object} #store\n */\n\n/**\n * The model's schema instance.\n *\n * @member {module:engine/model/schema~Schema} #schema\n */\n\n/**\n * The {@link module:engine/model/writer~Writer} instance used to manipulate data during conversion.\n *\n * @member {module:engine/model/writer~Writer} #writer\n */","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/controller/datacontroller\n */\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport Mapper from '../conversion/mapper';\nimport DowncastDispatcher from '../conversion/downcastdispatcher';\nimport { insertText } from '../conversion/downcasthelpers';\nimport UpcastDispatcher from '../conversion/upcastdispatcher';\nimport { convertText, convertToModelFragment } from '../conversion/upcasthelpers';\nimport ViewDocumentFragment from '../view/documentfragment';\nimport ViewDocument from '../view/document';\nimport ViewDowncastWriter from '../view/downcastwriter';\nimport ModelRange from '../model/range';\n/**\n * Controller for the data pipeline. The data pipeline controls how data is retrieved from the document\n * and set inside it. Hence, the controller features two methods which allow to {@link ~DataController#get get}\n * and {@link ~DataController#set set} data of the {@link ~DataController#model model}\n * using given:\n *\n * * {@link module:engine/dataprocessor/dataprocessor~DataProcessor data processor},\n * * downcast converters,\n * * upcast converters.\n *\n * An instance of the data controller is always available in the {@link module:core/editor/editor~Editor#data `editor.data`}\n * property:\n *\n *\t\teditor.data.get( { rootName: 'customRoot' } ); // -> '<p>Hello!</p>'\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\n\nvar DataController =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a data controller instance.\n   *\n   * @param {module:engine/model/model~Model} model Data model.\n   * @param {module:engine/dataprocessor/dataprocessor~DataProcessor} [dataProcessor] Data processor that should be used\n   * by the controller.\n   */\n  function DataController(model, dataProcessor) {\n    var _this = this;\n\n    _classCallCheck(this, DataController);\n\n    /**\n     * Data model.\n     *\n     * @readonly\n     * @member {module:engine/model/model~Model}\n     */\n    this.model = model;\n    /**\n     * Data processor used during the conversion.\n     *\n     * @readonly\n     * @member {module:engine/dataprocessor/dataprocessor~DataProcessor}\n     */\n\n    this.processor = dataProcessor;\n    /**\n     * Mapper used for the conversion. It has no permanent bindings, because they are created when getting data and\n     * cleared directly after the data are converted. However, the mapper is defined as a class property, because\n     * it needs to be passed to the `DowncastDispatcher` as a conversion API.\n     *\n     * @readonly\n     * @member {module:engine/conversion/mapper~Mapper}\n     */\n\n    this.mapper = new Mapper();\n    /**\n     * Downcast dispatcher used by the {@link #get get method}. Downcast converters should be attached to it.\n     *\n     * @readonly\n     * @member {module:engine/conversion/downcastdispatcher~DowncastDispatcher}\n     */\n\n    this.downcastDispatcher = new DowncastDispatcher({\n      mapper: this.mapper\n    });\n    this.downcastDispatcher.on('insert:$text', insertText(), {\n      priority: 'lowest'\n    });\n    /**\n     * Upcast dispatcher used by the {@link #set set method}. Upcast converters should be attached to it.\n     *\n     * @readonly\n     * @member {module:engine/conversion/upcastdispatcher~UpcastDispatcher}\n     */\n\n    this.upcastDispatcher = new UpcastDispatcher({\n      schema: model.schema\n    }); // Define default converters for text and elements.\n    //\n    // Note that if there is no default converter for the element it will be skipped, for instance `<b>foo</b>` will be\n    // converted to nothing. We add `convertToModelFragment` as a last converter so it converts children of that\n    // element to the document fragment so `<b>foo</b>` will be converted to `foo` if there is no converter for `<b>`.\n\n    this.upcastDispatcher.on('text', convertText(), {\n      priority: 'lowest'\n    });\n    this.upcastDispatcher.on('element', convertToModelFragment(), {\n      priority: 'lowest'\n    });\n    this.upcastDispatcher.on('documentFragment', convertToModelFragment(), {\n      priority: 'lowest'\n    });\n    this.decorate('init'); // Fire `ready` event when initialisation has completed. Such low level listener gives possibility\n    // to plug into initialisation pipeline without interrupting the initialisation flow.\n\n    this.on('init', function () {\n      _this.fire('ready');\n    }, {\n      priority: 'lowest'\n    });\n  }\n  /**\n   * Returns the model's data converted by downcast dispatchers attached to {@link #downcastDispatcher} and\n   * formatted by the {@link #processor data processor}.\n   *\n   * @param {Object} [options]\n   * @param {String} [options.rootName='main'] Root name.\n   * @param {String} [options.trim='empty'] Whether returned data should be trimmed. This option is set to `empty` by default,\n   * which means whenever editor content is considered empty, an empty string will be returned. To turn off trimming completely\n   * use `'none'`. In such cases exact content will be returned (for example `<p>&nbsp;</p>` for an empty editor).\n   * @returns {String} Output data.\n   */\n\n\n  _createClass(DataController, [{\n    key: \"get\",\n    value: function get(options) {\n      var _ref = options || {},\n          _ref$rootName = _ref.rootName,\n          rootName = _ref$rootName === void 0 ? 'main' : _ref$rootName,\n          _ref$trim = _ref.trim,\n          trim = _ref$trim === void 0 ? 'empty' : _ref$trim;\n\n      if (!this._checkIfRootsExists([rootName])) {\n        /**\n         * Cannot get data from a non-existing root. This error is thrown when {@link #get DataController#get() method}\n         * is called with non-existent root name. For example, if there is an editor instance with only `main` root,\n         * calling {@link #get} like:\n         *\n         *\t\tdata.get( { rootName: 'root2' } );\n         *\n         * will throw this error.\n         *\n         * @error datacontroller-get-non-existent-root\n         */\n        throw new CKEditorError('datacontroller-get-non-existent-root: Attempting to get data from a non-existing root.', this);\n      }\n\n      var root = this.model.document.getRoot(rootName);\n\n      if (trim === 'empty' && !this.model.hasContent(root, {\n        ignoreWhitespaces: true\n      })) {\n        return '';\n      }\n\n      return this.stringify(root);\n    }\n    /**\n     * Returns the content of the given {@link module:engine/model/element~Element model's element} or\n     * {@link module:engine/model/documentfragment~DocumentFragment model document fragment} converted by the downcast converters\n     * attached to {@link #downcastDispatcher} and formatted by the {@link #processor data processor}.\n     *\n     * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} modelElementOrFragment\n     * Element whose content will be stringified.\n     * @returns {String} Output data.\n     */\n\n  }, {\n    key: \"stringify\",\n    value: function stringify(modelElementOrFragment) {\n      // Model -> view.\n      var viewDocumentFragment = this.toView(modelElementOrFragment); // View -> data.\n\n      return this.processor.toData(viewDocumentFragment);\n    }\n    /**\n     * Returns the content of the given {@link module:engine/model/element~Element model element} or\n     * {@link module:engine/model/documentfragment~DocumentFragment model document fragment} converted by the downcast\n     * converters attached to {@link #downcastDispatcher} to a\n     * {@link module:engine/view/documentfragment~DocumentFragment view document fragment}.\n     *\n     * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} modelElementOrFragment\n     * Element or document fragment whose content will be converted.\n     * @returns {module:engine/view/documentfragment~DocumentFragment} Output view DocumentFragment.\n     */\n\n  }, {\n    key: \"toView\",\n    value: function toView(modelElementOrFragment) {\n      // Clear bindings so the call to this method gives correct results.\n      this.mapper.clearBindings(); // First, convert elements.\n\n      var modelRange = ModelRange._createIn(modelElementOrFragment);\n\n      var viewDocumentFragment = new ViewDocumentFragment(); // Create separate ViewDowncastWriter just for data conversion purposes.\n      // We have no view controller and rendering do DOM in DataController so view.change() block is not used here.\n\n      var viewWriter = new ViewDowncastWriter(new ViewDocument());\n      this.mapper.bindElements(modelElementOrFragment, viewDocumentFragment);\n      this.downcastDispatcher.convertInsert(modelRange, viewWriter);\n\n      if (!modelElementOrFragment.is('documentFragment')) {\n        // Then, if a document element is converted, convert markers.\n        // From all document markers, get those, which \"intersect\" with the converter element.\n        var markers = _getMarkersRelativeToElement(modelElementOrFragment);\n\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = markers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var _step$value = _slicedToArray(_step.value, 2),\n                name = _step$value[0],\n                range = _step$value[1];\n\n            this.downcastDispatcher.convertMarkerAdd(name, range, viewWriter);\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n              _iterator[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n\n      return viewDocumentFragment;\n    }\n    /**\n     * Sets initial input data parsed by the {@link #processor data processor} and\n     * converted by the {@link #upcastDispatcher view-to-model converters}.\n     * Initial data can be set only to document that {@link module:engine/model/document~Document#version} is equal 0.\n     *\n     * **Note** This method is {@link module:utils/observablemixin~ObservableMixin#decorate decorated} which is\n     * used by e.g. collaborative editing plugin that syncs remote data on init.\n     *\n     * When data is passed as a string it is initialized on a default `main` root:\n     *\n     *\t\tdataController.init( '<p>Foo</p>' ); // Initializes data on the `main` root.\n     *\n     * To initialize data on a different root or multiple roots at once, object containing `rootName` - `data` pairs should be passed:\n     *\n     *\t\tdataController.init( { main: '<p>Foo</p>', title: '<h1>Bar</h1>' } ); // Initializes data on the `main` and `title` roots.\n     *\n     * @fires init\n     * @param {String|Object.<String,String>} data Input data as a string or an object containing `rootName` - `data`\n     * pairs to initialize data on multiple roots at once.\n     * @returns {Promise} Promise that is resolved after the data is set on the editor.\n     */\n\n  }, {\n    key: \"init\",\n    value: function init(data) {\n      var _this2 = this;\n\n      if (this.model.document.version) {\n        /**\n         * Cannot set initial data to not empty {@link module:engine/model/document~Document}.\n         * Initial data should be set once, during {@link module:core/editor/editor~Editor} initialization,\n         * when the {@link module:engine/model/document~Document#version} is equal 0.\n         *\n         * @error datacontroller-init-document-not-empty\n         */\n        throw new CKEditorError('datacontroller-init-document-not-empty: Trying to set initial data to not empty document.', this);\n      }\n\n      var initialData = {};\n\n      if (typeof data === 'string') {\n        initialData.main = data; // Default root is 'main'. To initiate data on a different root, object should be passed.\n      } else {\n        initialData = data;\n      }\n\n      if (!this._checkIfRootsExists(Object.keys(initialData))) {\n        /**\n         * Cannot init data on a non-existing root. This error is thrown when {@link #init DataController#init() method}\n         * is called with non-existent root name. For example, if there is an editor instance with only `main` root,\n         * calling {@link #init} like:\n         *\n         * \t\tdata.init( { main: '<p>Foo</p>', root2: '<p>Bar</p>' } );\n         *\n         * will throw this error.\n         *\n         * @error datacontroller-init-non-existent-root\n         */\n        throw new CKEditorError('datacontroller-init-non-existent-root: Attempting to init data on a non-existing root.', this);\n      }\n\n      this.model.enqueueChange('transparent', function (writer) {\n        for (var _i2 = 0, _Object$keys = Object.keys(initialData); _i2 < _Object$keys.length; _i2++) {\n          var rootName = _Object$keys[_i2];\n\n          var modelRoot = _this2.model.document.getRoot(rootName);\n\n          writer.insert(_this2.parse(initialData[rootName], modelRoot), modelRoot, 0);\n        }\n      });\n      return Promise.resolve();\n    }\n    /**\n     * Sets input data parsed by the {@link #processor data processor} and\n     * converted by the {@link #upcastDispatcher view-to-model converters}.\n     * This method can be used any time to replace existing editor data by the new one without clearing the\n     * {@link module:engine/model/document~Document#history document history}.\n     *\n     * This method also creates a batch with all the changes applied. If all you need is to parse data, use\n     * the {@link #parse} method.\n     *\n     * When data is passed as a string it is set on a default `main` root:\n     *\n     *\t\tdataController.set( '<p>Foo</p>' ); // Sets data on the `main` root.\n     *\n     * To set data on a different root or multiple roots at once, object containing `rootName` - `data` pairs should be passed:\n     *\n     *\t\tdataController.set( { main: '<p>Foo</p>', title: '<h1>Bar</h1>' } ); // Sets data on the `main` and `title` roots.\n     *\n     * @param {String|Object.<String,String>} data Input data as a string or an object containing `rootName` - `data`\n     * pairs to set data on multiple roots at once.\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(data) {\n      var _this3 = this;\n\n      var newData = {};\n\n      if (typeof data === 'string') {\n        newData.main = data; // Default root is 'main'. To set data on a different root, object should be passed.\n      } else {\n        newData = data;\n      }\n\n      if (!this._checkIfRootsExists(Object.keys(newData))) {\n        /**\n         * Cannot set data on a non-existing root. This error is thrown when {@link #set DataController#set() method}\n         * is called with non-existent root name. For example, if there is an editor instance with only `main` root,\n         * calling {@link #set} like:\n         *\n         * \t\tdata.set( { main: '<p>Foo</p>', root2: '<p>Bar</p>' } );\n         *\n         * will throw this error.\n         *\n         * @error datacontroller-set-non-existent-root\n         */\n        throw new CKEditorError('datacontroller-set-non-existent-root: Attempting to set data on a non-existing root.', this);\n      }\n\n      this.model.enqueueChange('transparent', function (writer) {\n        writer.setSelection(null);\n        writer.removeSelectionAttribute(_this3.model.document.selection.getAttributeKeys());\n\n        for (var _i3 = 0, _Object$keys2 = Object.keys(newData); _i3 < _Object$keys2.length; _i3++) {\n          var rootName = _Object$keys2[_i3];\n\n          // Save to model.\n          var modelRoot = _this3.model.document.getRoot(rootName);\n\n          writer.remove(writer.createRangeIn(modelRoot));\n          writer.insert(_this3.parse(newData[rootName], modelRoot), modelRoot, 0);\n        }\n      });\n    }\n    /**\n     * Returns the data parsed by the {@link #processor data processor} and then converted by upcast converters\n     * attached to the {@link #upcastDispatcher}.\n     *\n     * @see #set\n     * @param {String} data Data to parse.\n     * @param {module:engine/model/schema~SchemaContextDefinition} [context='$root'] Base context in which the view will\n     * be converted to the model. See: {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher#convert}.\n     * @returns {module:engine/model/documentfragment~DocumentFragment} Parsed data.\n     */\n\n  }, {\n    key: \"parse\",\n    value: function parse(data) {\n      var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '$root';\n      // data -> view\n      var viewDocumentFragment = this.processor.toView(data); // view -> model\n\n      return this.toModel(viewDocumentFragment, context);\n    }\n    /**\n     * Returns the result of the given {@link module:engine/view/element~Element view element} or\n     * {@link module:engine/view/documentfragment~DocumentFragment view document fragment} converted by the\n     * {@link #upcastDispatcher view-to-model converters}, wrapped by {@link module:engine/model/documentfragment~DocumentFragment}.\n     *\n     * When marker elements were converted during the conversion process, it will be set as a document fragment's\n     * {@link module:engine/model/documentfragment~DocumentFragment#markers static markers map}.\n     *\n     * @param {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment} viewElementOrFragment\n     * Element or document fragment whose content will be converted.\n     * @param {module:engine/model/schema~SchemaContextDefinition} [context='$root'] Base context in which the view will\n     * be converted to the model. See: {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher#convert}.\n     * @returns {module:engine/model/documentfragment~DocumentFragment} Output document fragment.\n     */\n\n  }, {\n    key: \"toModel\",\n    value: function toModel(viewElementOrFragment) {\n      var _this4 = this;\n\n      var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '$root';\n      return this.model.change(function (writer) {\n        return _this4.upcastDispatcher.convert(viewElementOrFragment, writer, context);\n      });\n    }\n    /**\n     * Removes all event listeners set by the DataController.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.stopListening();\n    }\n    /**\n     * Checks if all provided root names are existing editor roots.\n     *\n     * @private\n     * @param {Array.<String>} rootNames Root names to check.\n     * @returns {Boolean} Whether all provided root names are existing editor roots.\n     */\n\n  }, {\n    key: \"_checkIfRootsExists\",\n    value: function _checkIfRootsExists(rootNames) {\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = rootNames[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var rootName = _step2.value;\n\n          if (!this.model.document.getRootNames().includes(rootName)) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return true;\n    }\n    /**\n     * Event fired once data initialisation has finished.\n     *\n     * @event ready\n     */\n\n    /**\n     * Event fired after {@link #init init() method} has been run. It can be {@link #listenTo listened to} to adjust/modify\n     * the initialisation flow. However, if the `init` event is stopped or prevented, the {@link #event:ready ready event}\n     * should be fired manually.\n     *\n     * The `init` event is fired by decorated {@link #init} method.\n     * See {@link module:utils/observablemixin~ObservableMixin#decorate} for more information and samples.\n     *\n     * @event init\n     */\n\n  }]);\n\n  return DataController;\n}();\n\nexport { DataController as default };\nmix(DataController, ObservableMixin); // Helper function for downcast conversion.\n//\n// Takes a document element (element that is added to a model document) and checks which markers are inside it\n// and which markers are containing it. If the marker is intersecting with element, the intersection is returned.\n\nfunction _getMarkersRelativeToElement(element) {\n  var result = [];\n  var doc = element.root.document;\n\n  if (!doc) {\n    return [];\n  }\n\n  var elementRange = ModelRange._createIn(element);\n\n  var _iteratorNormalCompletion3 = true;\n  var _didIteratorError3 = false;\n  var _iteratorError3 = undefined;\n\n  try {\n    for (var _iterator3 = doc.model.markers[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n      var marker = _step3.value;\n      var intersection = elementRange.getIntersection(marker.getRange());\n\n      if (intersection) {\n        result.push([marker.name, intersection]);\n      }\n    }\n  } catch (err) {\n    _didIteratorError3 = true;\n    _iteratorError3 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n        _iterator3[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError3) {\n        throw _iteratorError3;\n      }\n    }\n  }\n\n  return result;\n}","var _marked =\n/*#__PURE__*/\nregeneratorRuntime.mark(_getAllUpcastDefinitions),\n    _marked2 =\n/*#__PURE__*/\nregeneratorRuntime.mark(_getUpcastDefinition);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/conversion/conversion\n */\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport UpcastHelpers from './upcasthelpers';\nimport DowncastHelpers from './downcasthelpers';\n/**\n * A utility class that helps add converters to upcast and downcast dispatchers.\n *\n * We recommend reading the {@glink framework/guides/architecture/editing-engine Editing engine architecture} guide first to\n * understand the core concepts of the conversion mechanisms.\n *\n * An instance of the conversion manager is available in the\n * {@link module:core/editor/editor~Editor#conversion `editor.conversion`} property\n * and by default has the following groups of dispatchers (i.e. directions of conversion):\n *\n * * `downcast` (editing and data downcasts)\n * * `editingDowncast`\n * * `dataDowncast`\n * * `upcast`\n *\n * # One-way converters\n *\n * To add a converter to a specific group, use the {@link module:engine/conversion/conversion~Conversion#for `for()`}\n * method:\n *\n *\t\t// Add a converter to editing downcast and data downcast.\n *\t\teditor.conversion.for( 'downcast' ).elementToElement( config ) );\n *\n *\t\t// Add a converter to the data pipepline only:\n *\t\teditor.conversion.for( 'dataDowncast' ).elementToElement( dataConversionConfig ) );\n *\n *\t\t// And a slightly different one for the editing pipeline:\n *\t\teditor.conversion.for( 'editingDowncast' ).elementToElement( editingConversionConfig ) );\n *\n * See {@link module:engine/conversion/conversion~Conversion#for `for()`} method documentation to learn more about\n * available conversion helpers and how to use your custom ones.\n *\n * # Two-way converters\n *\n * Besides using one-way converters via the `for()` method, you can also use other methods available in this\n * class to add two-way converters (upcast and downcast):\n *\n * * {@link module:engine/conversion/conversion~Conversion#elementToElement `elementToElement()`} &ndash;\n * Model element to view element and vice versa.\n * * {@link module:engine/conversion/conversion~Conversion#attributeToElement `attributeToElement()`} &ndash;\n * Model attribute to view element and vice versa.\n * * {@link module:engine/conversion/conversion~Conversion#attributeToAttribute `attributeToAttribute()`} &ndash;\n * Model attribute to view element and vice versa.\n */\n\nvar Conversion =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a new conversion instance.\n   *\n   * @param {module:engine/conversion/downcastdispatcher~DowncastDispatcher|\n   * Array.<module:engine/conversion/downcastdispatcher~DowncastDispatcher>} downcastDispatchers\n   * @param {module:engine/conversion/upcastdispatcher~UpcastDispatcher|\n   * Array.<module:engine/conversion/upcastdispatcher~UpcastDispatcher>} upcastDispatchers\n   */\n  function Conversion(downcastDispatchers, upcastDispatchers) {\n    _classCallCheck(this, Conversion);\n\n    /**\n     * Maps dispatchers group name to ConversionHelpers instances.\n     *\n     * @private\n     * @member {Map.<String,module:engine/conversion/conversionhelpers~ConversionHelpers>}\n     */\n    this._helpers = new Map(); // Define default 'downcast' & 'upcast' dispatchers groups. Those groups are always available as two-way converters needs them.\n\n    this._downcast = Array.isArray(downcastDispatchers) ? downcastDispatchers : [downcastDispatchers];\n\n    this._createConversionHelpers({\n      name: 'downcast',\n      dispatchers: this._downcast,\n      isDowncast: true\n    });\n\n    this._upcast = Array.isArray(upcastDispatchers) ? upcastDispatchers : [upcastDispatchers];\n\n    this._createConversionHelpers({\n      name: 'upcast',\n      dispatchers: this._upcast,\n      isDowncast: false\n    });\n  }\n  /**\n   * Define an alias for registered dispatcher.\n   *\n   *\t\tconst conversion = new Conversion(\n   *\t\t\t[ dataDowncastDispatcher, editingDowncastDispatcher ],\n   *\t\t\tupcastDispatcher\n   *\t\t);\n   *\n   *\t\tconversion.addAlias( 'dataDowncast', dataDowncastDispatcher );\n   *\n   * @param {String} alias An alias of a dispatcher.\n   * @param {module:engine/conversion/downcastdispatcher~DowncastDispatcher|\n   * module:engine/conversion/upcastdispatcher~UpcastDispatcher} dispatcher Dispatcher which should have an alias.\n   */\n\n\n  _createClass(Conversion, [{\n    key: \"addAlias\",\n    value: function addAlias(alias, dispatcher) {\n      var isDowncast = this._downcast.includes(dispatcher);\n\n      var isUpcast = this._upcast.includes(dispatcher);\n\n      if (!isUpcast && !isDowncast) {\n        /**\n         * Trying to register and alias for a dispatcher that nas not been registered.\n         *\n         * @error conversion-add-alias-dispatcher-not-registered\n         */\n        throw new CKEditorError('conversion-add-alias-dispatcher-not-registered: ' + 'Trying to register and alias for a dispatcher that nas not been registered.', this);\n      }\n\n      this._createConversionHelpers({\n        name: alias,\n        dispatchers: [dispatcher],\n        isDowncast: isDowncast\n      });\n    }\n    /**\n     * Provides a chainable API to assign converters to conversion dispatchers group.\n     *\n     * If the given group name has not been registered, the\n     * {@link module:utils/ckeditorerror~CKEditorError `conversion-for-unknown-group` error} is thrown.\n     *\n     * You can use conversion helpers available directly in the `for()` chain or your custom ones via\n     * the {@link module:engine/conversion/conversionhelpers~ConversionHelpers#add `add()`} method.\n     *\n     * # Using bulit-in conversion helpers\n     *\n     * The `for()` chain comes with a set of conversion helpers which you can use like this:\n     *\n     *\t\teditor.conversion.for( 'downcast' )\n     *\t\t\t.elementToElement( config1 )        // Adds an element-to-element downcast converter.\n     *\t\t\t.attributeToElement( config2 );     // Adds an attribute-to-element downcast converter.\n     *\n     *\t\teditor.conversion.for( 'upcast' )\n     *\t\t\t.elementToAttribute( config3 );     // Adds an element-to-attribute upcast converter.\n     *\n     * Refer to the documentation of built-in conversion helpers to learn about their configuration options.\n     *\n     * * downcast (model-to-view) conversion helpers:\n     *\n     *\t* {@link module:engine/conversion/downcasthelpers~DowncastHelpers#elementToElement `elementToElement()`},\n     *\t* {@link module:engine/conversion/downcasthelpers~DowncastHelpers#attributeToElement `attributeToElement()`},\n     *\t* {@link module:engine/conversion/downcasthelpers~DowncastHelpers#attributeToAttribute `attributeToAttribute()`}.\n     *\t* {@link module:engine/conversion/downcasthelpers~DowncastHelpers#markerToElement `markerToElement()`}.\n     *\t* {@link module:engine/conversion/downcasthelpers~DowncastHelpers#markerToHighlight `markerToHighlight()`}.\n     *\n     * * upcast (view-to-model) conversion helpers:\n     *\n     *\t* {@link module:engine/conversion/upcasthelpers~UpcastHelpers#elementToElement `elementToElement()`},\n     *\t* {@link module:engine/conversion/upcasthelpers~UpcastHelpers#elementToAttribute `elementToAttribute()`},\n     *\t* {@link module:engine/conversion/upcasthelpers~UpcastHelpers#attributeToAttribute `attributeToAttribute()`}.\n     *\t* {@link module:engine/conversion/upcasthelpers~UpcastHelpers#elementToMarker `elementToMarker()`}.\n     *\n     * # Using custom conversion helpers\n     *\n     * If you need to implement a nontypical converter, you can do so by calling:\n     *\n     *\t\teditor.conversion.for( direction ).add( customHelper );\n     *\n     * The `.add()` method takes exactly one parameter, which is a function. This function should accept one parameter that\n     * is a dispatcher instance. The function should add an actual converter to the passed dispatcher instance.\n     *\n     * Example:\n     *\n     *\t\teditor.conversion.for( 'upcast' ).add( dispatcher => {\n     *\t\t\tdispatcher.on( 'element:a',  ( evt, data, conversionApi ) => {\n     *\t\t\t\t// Do something with a view <a> element.\n     *\t\t\t} );\n     *\t\t} );\n     *\n     * Refer to the documentation of {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher}\n     * and {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher} to learn how to write\n     * custom converters.\n     *\n     * @param {String} groupName The name of dispatchers group to add the converters to.\n     * @returns {module:engine/conversion/downcasthelpers~DowncastHelpers|module:engine/conversion/upcasthelpers~UpcastHelpers}\n     */\n\n  }, {\n    key: \"for\",\n    value: function _for(groupName) {\n      if (!this._helpers.has(groupName)) {\n        /**\n         * Trying to add a converter to an unknown dispatchers group.\n         *\n         * @error conversion-for-unknown-group\n         */\n        throw new CKEditorError('conversion-for-unknown-group: Trying to add a converter to an unknown dispatchers group.', this);\n      }\n\n      return this._helpers.get(groupName);\n    }\n    /**\n     * Sets up converters between the model and the view that convert a model element to a view element (and vice versa).\n     * For example, the model `<paragraph>Foo</paragraph>` is `<p>Foo</p>` in the view.\n     *\n     *\t\t// A simple conversion from the `paragraph` model element to the `<p>` view element (and vice versa).\n     *\t\teditor.conversion.elementToElement( { model: 'paragraph', view: 'p' } );\n     *\n     *\t\t// Override other converters by specifying a converter definition with a higher priority.\n     *\t\teditor.conversion.elementToElement( { model: 'paragraph', view: 'div', converterPriority: 'high' } );\n     *\n     *\t\t// View specified as an object instead of a string.\n     *\t\teditor.conversion.elementToElement( {\n     *\t\t\tmodel: 'fancyParagraph',\n     *\t\t\tview: {\n     *\t\t\t\tname: 'p',\n     *\t\t\t\tclasses: 'fancy'\n     *\t\t\t}\n     *\t\t} );\n     *\n     *\t\t// Use `upcastAlso` to define other view elements that should also be converted to a `paragraph` element.\n     *\t\teditor.conversion.elementToElement( {\n     *\t\t\tmodel: 'paragraph',\n     *\t\t\tview: 'p',\n     *\t\t\tupcastAlso: [\n     *\t\t\t\t'div',\n     *\t\t\t\t{\n     *\t\t\t\t\t// Any element with the `display: block` style.\n     *\t\t\t\t\tstyles: {\n     *\t\t\t\t\t\tdisplay: 'block'\n     *\t\t\t\t\t}\n     *\t\t\t\t}\n     *\t\t\t]\n     *\t\t} );\n     *\n     *\t\t// `upcastAlso` set as callback enables a conversion of a wide range of different view elements.\n     *\t\teditor.conversion.elementToElement( {\n     *\t\t\tmodel: 'heading',\n     *\t\t\tview: 'h2',\n     *\t\t\t// Convert \"headling-like\" paragraphs to headings.\n     *\t\t\tupcastAlso: viewElement => {\n     *\t\t\t\tconst fontSize = viewElement.getStyle( 'font-size' );\n     *\n     *\t\t\t\tif ( !fontSize ) {\n     *\t\t\t\t\treturn null;\n     *\t\t\t\t}\n     *\n     *\t\t\t\tconst match = fontSize.match( /(\\d+)\\s*px/ );\n     *\n     *\t\t\t\tif ( !match ) {\n     *\t\t\t\t\treturn null;\n     *\t\t\t\t}\n     *\n     *\t\t\t\tconst size = Number( match[ 1 ] );\n     *\n     *\t\t\t\tif ( size > 26 ) {\n     *\t\t\t\t\t// Returned value can be an object with the matched properties.\n     *\t\t\t\t\t// These properties will be \"consumed\" during the conversion.\n     *\t\t\t\t\t// See `engine.view.Matcher~MatcherPattern` and `engine.view.Matcher#match` for more details.\n     *\n     *\t\t\t\t\treturn { name: true, styles: [ 'font-size' ] };\n     *\t\t\t\t}\n     *\n     *\t\t\t\treturn null;\n     *\t\t\t}\n     *\t\t} );\n     *\n     * `definition.model` is a `String` with a model element name to convert from or to.\n     * See {@link module:engine/conversion/conversion~ConverterDefinition} to learn about other parameters.\n     *\n     * @param {module:engine/conversion/conversion~ConverterDefinition} definition The converter definition.\n     */\n\n  }, {\n    key: \"elementToElement\",\n    value: function elementToElement(definition) {\n      // Set up downcast converter.\n      this[\"for\"]('downcast').elementToElement(definition); // Set up upcast converter.\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _getAllUpcastDefinitions(definition)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var _step$value = _step.value,\n              model = _step$value.model,\n              view = _step$value.view;\n          this[\"for\"]('upcast').elementToElement({\n            model: model,\n            view: view,\n            converterPriority: definition.converterPriority\n          });\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n    /**\n     * Sets up converters between the model and the view that convert a model attribute to a view element (and vice versa).\n     * For example, a model text node with `\"Foo\"` as data and the `bold` attribute is `<strong>Foo</strong>` in the view.\n     *\n     *\t\t// A simple conversion from the `bold=true` attribute to the `<strong>` view element (and vice versa).\n     *\t\teditor.conversion.attributeToElement( { model: 'bold', view: 'strong' } );\n     *\n     *\t\t// Override other converters by specifying a converter definition with a higher priority.\n     *\t\teditor.conversion.attributeToElement( { model: 'bold', view: 'b', converterPriority: 'high' } );\n     *\n     *\t\t// View specified as an object instead of a string.\n     *\t\teditor.conversion.attributeToElement( {\n     *\t\t\tmodel: 'bold',\n     *\t\t\tview: {\n     *\t\t\t\tname: 'span',\n     *\t\t\t\tclasses: 'bold'\n     *\t\t\t}\n     *\t\t} );\n     *\n     *\t\t// Use `config.model.name` to define the conversion only from a given node type, `$text` in this case.\n     *\t\t// The same attribute on different elements may then be handled by a different converter.\n     *\t\teditor.conversion.attributeToElement( {\n     *\t\t\tmodel: {\n     *\t\t\t\tkey: 'textDecoration',\n     *\t\t\t\tvalues: [ 'underline', 'lineThrough' ],\n     *\t\t\t\tname: '$text'\n     *\t\t\t},\n     *\t\t\tview: {\n     *\t\t\t\tunderline: {\n     *\t\t\t\t\tname: 'span',\n     *\t\t\t\t\tstyles: {\n     *\t\t\t\t\t\t'text-decoration': 'underline'\n     *\t\t\t\t\t}\n     *\t\t\t\t},\n     *\t\t\t\tlineThrough: {\n     *\t\t\t\t\tname: 'span',\n     *\t\t\t\t\tstyles: {\n     *\t\t\t\t\t\t'text-decoration': 'line-through'\n     *\t\t\t\t\t}\n     *\t\t\t\t}\n     *\t\t\t}\n     *\t\t} );\n     *\n     *\t\t// Use `upcastAlso` to define other view elements that should also be converted to the `bold` attribute.\n     *\t\teditor.conversion.attributeToElement( {\n     *\t\t\tmodel: 'bold',\n     *\t\t\tview: 'strong',\n     *\t\t\tupcastAlso: [\n     *\t\t\t\t'b',\n     *\t\t\t\t{\n     *\t\t\t\t\tname: 'span',\n     *\t\t\t\t\tclasses: 'bold'\n     *\t\t\t\t},\n     *\t\t\t\t{\n     *\t\t\t\t\tname: 'span',\n     *\t\t\t\t\tstyles: {\n     *\t\t\t\t\t\t'font-weight': 'bold'\n     *\t\t\t\t\t}\n     *\t\t\t\t},\n     *\t\t\t\tviewElement => {\n     *\t\t\t\t\tconst fontWeight = viewElement.getStyle( 'font-weight' );\n     *\n     *\t\t\t\t\tif ( viewElement.is( 'span' ) && fontWeight && /\\d+/.test() && Number( fontWeight ) > 500 ) {\n     *\t\t\t\t\t\t// Returned value can be an object with the matched properties.\n     *\t\t\t\t\t\t// These properties will be \"consumed\" during the conversion.\n     *\t\t\t\t\t\t// See `engine.view.Matcher~MatcherPattern` and `engine.view.Matcher#match` for more details.\n     *\n     *\t\t\t\t\t\treturn {\n     *\t\t\t\t\t\t\tname: true,\n     *\t\t\t\t\t\t\tstyles: [ 'font-weight' ]\n     *\t\t\t\t\t\t};\n     *\t\t\t\t\t}\n     *\t\t\t\t}\n     *\t\t\t]\n     *\t\t} );\n     *\n     *\t\t// Conversion from and to a model attribute key whose value is an enum (`fontSize=big|small`).\n     *\t\t// `upcastAlso` set as callback enables a conversion of a wide range of different view elements.\n     *\t\teditor.conversion.attributeToElement( {\n     *\t\t\tmodel: {\n     *\t\t\t\tkey: 'fontSize',\n     *\t\t\t\tvalues: [ 'big', 'small' ]\n     *\t\t\t},\n     *\t\t\tview: {\n     *\t\t\t\tbig: {\n     *\t\t\t\t\tname: 'span',\n     *\t\t\t\t\tstyles: {\n     *\t\t\t\t\t\t'font-size': '1.2em'\n     *\t\t\t\t\t}\n     *\t\t\t\t},\n     *\t\t\t\tsmall: {\n     *\t\t\t\t\tname: 'span',\n     *\t\t\t\t\tstyles: {\n     *\t\t\t\t\t\t'font-size': '0.8em'\n     *\t\t\t\t\t}\n     *\t\t\t\t}\n     *\t\t\t},\n     *\t\t\tupcastAlso: {\n     *\t\t\t\tbig: viewElement => {\n     *\t\t\t\t\tconst fontSize = viewElement.getStyle( 'font-size' );\n     *\n     *\t\t\t\t\tif ( !fontSize ) {\n     *\t\t\t\t\t\treturn null;\n     *\t\t\t\t\t}\n     *\n     *\t\t\t\t\tconst match = fontSize.match( /(\\d+)\\s*px/ );\n     *\n     *\t\t\t\t\tif ( !match ) {\n     *\t\t\t\t\t\treturn null;\n     *\t\t\t\t\t}\n     *\n     *\t\t\t\t\tconst size = Number( match[ 1 ] );\n     *\n     *\t\t\t\t\tif ( viewElement.is( 'span' ) && size > 10 ) {\n     *\t\t\t\t\t\t// Returned value can be an object with the matched properties.\n     *\t\t\t\t\t\t// These properties will be \"consumed\" during the conversion.\n     *\t\t\t\t\t\t// See `engine.view.Matcher~MatcherPattern` and `engine.view.Matcher#match` for more details.\n     *\n     *\t\t\t\t\t\treturn { name: true, styles: [ 'font-size' ] };\n     *\t\t\t\t\t}\n     *\n     *\t\t\t\t\treturn null;\n     *\t\t\t\t},\n     *\t\t\t\tsmall: viewElement => {\n     *\t\t\t\t\tconst fontSize = viewElement.getStyle( 'font-size' );\n     *\n     *\t\t\t\t\tif ( !fontSize ) {\n     *\t\t\t\t\t\treturn null;\n     *\t\t\t\t\t}\n     *\n     *\t\t\t\t\tconst match = fontSize.match( /(\\d+)\\s*px/ );\n     *\n     *\t\t\t\t\tif ( !match ) {\n     *\t\t\t\t\t\treturn null;\n     *\t\t\t\t\t}\n     *\n     *\t\t\t\t\tconst size = Number( match[ 1 ] );\n     *\n     *\t\t\t\t\tif ( viewElement.is( 'span' ) && size < 10 ) {\n     *\t\t\t\t\t\t// Returned value can be an object with the matched properties.\n     *\t\t\t\t\t\t// These properties will be \"consumed\" during the conversion.\n     *\t\t\t\t\t\t// See `engine.view.Matcher~MatcherPattern` and `engine.view.Matcher#match` for more details.\n     *\n     *\t\t\t\t\t\treturn { name: true, styles: [ 'font-size' ] };\n     *\t\t\t\t\t}\n     *\n     *\t\t\t\t\treturn null;\n     *\t\t\t\t}\n     *\t\t\t}\n     *\t\t} );\n     *\n     * The `definition.model` parameter specifies which model attribute should be converted from or to. It can be a `{ key, value }` object\n     * describing the attribute key and value to convert or a `String` specifying just the attribute key (then `value` is set to `true`).\n     * See {@link module:engine/conversion/conversion~ConverterDefinition} to learn about other parameters.\n     *\n     * @param {module:engine/conversion/conversion~ConverterDefinition} definition The converter definition.\n     */\n\n  }, {\n    key: \"attributeToElement\",\n    value: function attributeToElement(definition) {\n      // Set up downcast converter.\n      this[\"for\"]('downcast').attributeToElement(definition); // Set up upcast converter.\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = _getAllUpcastDefinitions(definition)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var _step2$value = _step2.value,\n              model = _step2$value.model,\n              view = _step2$value.view;\n          this[\"for\"]('upcast').elementToAttribute({\n            view: view,\n            model: model,\n            converterPriority: definition.converterPriority\n          });\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n    /**\n     * Sets up converters between the model and the view that convert a model attribute to a view attribute (and vice versa).\n     * For example, `<image src='foo.jpg'></image>` is converted to `<img src='foo.jpg'></img>` (the same attribute key and value).\n     * This type of converters is intended to be used with {@link module:engine/model/element~Element model element} nodes.\n     * To convert text attributes {@link module:engine/conversion/conversion~Conversion#attributeToElement `attributeToElement converter`}\n     * should be set up.\n     *\n     *\t\t// A simple conversion from the `source` model attribute to the `src` view attribute (and vice versa).\n     *\t\teditor.conversion.attributeToAttribute( { model: 'source', view: 'src' } );\n     *\n     *\t\t// Attribute values are strictly specified.\n     *\t\teditor.conversion.attributeToAttribute( {\n     *\t\t\tmodel: {\n     *\t\t\t\tname: 'image',\n     *\t\t\t\tkey: 'aside',\n     *\t\t\t\tvalues: [ 'aside' ]\n     *\t\t\t},\n     *\t\t\tview: {\n     *\t\t\t\taside: {\n     *\t\t\t\t\tname: 'img',\n     *\t\t\t\t\tkey: 'class',\n     *\t\t\t\t\tvalue: [ 'aside', 'half-size' ]\n     *\t\t\t\t}\n     *\t\t\t}\n     *\t\t} );\n     *\n     *\t\t// Set the style attribute.\n     *\t\teditor.conversion.attributeToAttribute( {\n     *\t\t\tmodel: {\n     *\t\t\t\tname: 'image',\n     *\t\t\t\tkey: 'aside',\n     *\t\t\t\tvalues: [ 'aside' ]\n     *\t\t\t},\n     *\t\t\tview: {\n     *\t\t\t\taside: {\n     *\t\t\t\t\tname: 'img',\n     *\t\t\t\t\tkey: 'style',\n     *\t\t\t\t\tvalue: {\n     *\t\t\t\t\t\tfloat: 'right',\n     *\t\t\t\t\t\twidth: '50%',\n     *\t\t\t\t\t\tmargin: '5px'\n     *\t\t\t\t\t}\n     *\t\t\t\t}\n     *\t\t\t}\n     *\t\t} );\n     *\n     *\t\t// Conversion from and to a model attribute key whose value is an enum (`align=right|center`).\n     *\t\t// Use `upcastAlso` to define other view elements that should also be converted to the `align=right` attribute.\n     *\t\teditor.conversion.attributeToAttribute( {\n     *\t\t\tmodel: {\n     *\t\t\t\tkey: 'align',\n     *\t\t\t\tvalues: [ 'right', 'center' ]\n     *\t\t\t},\n     *\t\t\tview: {\n     *\t\t\t\tright: {\n     *\t\t\t\t\tkey: 'class',\n     *\t\t\t\t\tvalue: 'align-right'\n     *\t\t\t\t},\n     *\t\t\t\tcenter: {\n     *\t\t\t\t\tkey: 'class',\n     *\t\t\t\t\tvalue: 'align-center'\n     *\t\t\t\t}\n     *\t\t\t},\n     *\t\t\tupcastAlso: {\n     *\t\t\t\tright: {\n     *\t\t\t\t\tstyles: {\n     *\t\t\t\t\t\t'text-align': 'right'\n     *\t\t\t\t\t}\n     *\t\t\t\t},\n     *\t\t\t\tcenter: {\n     *\t\t\t\t\tstyles: {\n     *\t\t\t\t\t\t'text-align': 'center'\n     *\t\t\t\t\t}\n     *\t\t\t\t}\n     *\t\t\t}\n     *\t\t} );\n     *\n     * The `definition.model` parameter specifies which model attribute should be converted from and to.\n     * It can be a `{ key, [ values ], [ name ] }` object or a `String`, which will be treated like `{ key: definition.model }`.\n     * The `key` property is the model attribute key to convert from and to.\n     * The `values` are the possible model attribute values. If `values` is not set, the model attribute value will be the same as the\n     * view attribute value.\n     * If `name` is set, the conversion will be set up only for model elements with the given name.\n     *\n     * The `definition.view` parameter specifies which view attribute should be converted from and to.\n     * It can be a `{ key, value, [ name ] }` object or a `String`, which will be treated like `{ key: definition.view }`.\n     * The `key` property is the view attribute key to convert from and to.\n     * The `value` is the view attribute value to convert from and to. If `definition.value` is not set, the view attribute value will be\n     * the same as the model attribute value.\n     * If `key` is `'class'`, `value` can be a `String` or an array of `String`s.\n     * If `key` is `'style'`, `value` is an object with key-value pairs.\n     * In other cases, `value` is a `String`.\n     * If `name` is set, the conversion will be set up only for model elements with the given name.\n     * If `definition.model.values` is set, `definition.view` is an object that assigns values from `definition.model.values`\n     * to `{ key, value, [ name ] }` objects.\n     *\n     * `definition.upcastAlso` specifies which other matching view elements should also be upcast to the given model configuration.\n     * If `definition.model.values` is set, `definition.upcastAlso` should be an object assigning values from `definition.model.values`\n     * to {@link module:engine/view/matcher~MatcherPattern}s or arrays of {@link module:engine/view/matcher~MatcherPattern}s.\n     *\n     * **Note:** `definition.model` and `definition.view` form should be mirrored, so the same types of parameters should\n     * be given in both parameters.\n     *\n     * @param {Object} definition The converter definition.\n     * @param {String|Object} definition.model The model attribute to convert from and to.\n     * @param {String|Object} definition.view The view attribute to convert from and to.\n     * @param {module:engine/view/matcher~MatcherPattern|Array.<module:engine/view/matcher~MatcherPattern>} [definition.upcastAlso]\n     * Any view element matching `definition.upcastAlso` will also be converted to the given model attribute. `definition.upcastAlso`\n     * is used only if `config.model.values` is specified.\n     */\n\n  }, {\n    key: \"attributeToAttribute\",\n    value: function attributeToAttribute(definition) {\n      // Set up downcast converter.\n      this[\"for\"]('downcast').attributeToAttribute(definition); // Set up upcast converter.\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = _getAllUpcastDefinitions(definition)[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var _step3$value = _step3.value,\n              model = _step3$value.model,\n              view = _step3$value.view;\n          this[\"for\"]('upcast').attributeToAttribute({\n            view: view,\n            model: model\n          });\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n            _iterator3[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n    /**\n     * Creates and caches conversion helpers for given dispatchers group.\n     *\n     * @private\n     * @param {Object} options\n     * @param {String} options.name Group name.\n     * @param {Array.<module:engine/conversion/downcastdispatcher~DowncastDispatcher|\n     * module:engine/conversion/upcastdispatcher~UpcastDispatcher>} options.dispatchers\n     * @param {Boolean} options.isDowncast\n     */\n\n  }, {\n    key: \"_createConversionHelpers\",\n    value: function _createConversionHelpers(_ref) {\n      var name = _ref.name,\n          dispatchers = _ref.dispatchers,\n          isDowncast = _ref.isDowncast;\n\n      if (this._helpers.has(name)) {\n        /**\n         * Trying to register a group name that has already been registered.\n         *\n         * @error conversion-group-exists\n         */\n        throw new CKEditorError('conversion-group-exists: Trying to register a group name that has already been registered.', this);\n      }\n\n      var helpers = isDowncast ? new DowncastHelpers(dispatchers) : new UpcastHelpers(dispatchers);\n\n      this._helpers.set(name, helpers);\n    }\n  }]);\n\n  return Conversion;\n}();\n/**\n * Defines how the model should be converted from and to the view.\n *\n * @typedef {Object} module:engine/conversion/conversion~ConverterDefinition\n *\n * @property {*} [model] The model conversion definition. Describes the model element or model attribute to convert. This parameter differs\n * for different functions that accept `ConverterDefinition`. See the description of the function to learn how to set it.\n * @property {module:engine/view/elementdefinition~ElementDefinition|Object} view The definition of the view element to convert from and\n * to. If `model` describes multiple values, `view` is an object that assigns these values (`view` object keys) to view element definitions\n * (`view` object values).\n * @property {module:engine/view/matcher~MatcherPattern|Array.<module:engine/view/matcher~MatcherPattern>} [upcastAlso]\n * Any view element matching `upcastAlso` will also be converted to the model. If `model` describes multiple values, `upcastAlso`\n * is an object that assigns these values (`upcastAlso` object keys) to {@link module:engine/view/matcher~MatcherPattern}s\n * (`upcastAlso` object values).\n * @property {module:utils/priorities~PriorityString} [converterPriority] The converter priority.\n */\n// Helper function that creates a joint array out of an item passed in `definition.view` and items passed in\n// `definition.upcastAlso`.\n//\n// @param {module:engine/conversion/conversion~ConverterDefinition} definition\n// @returns {Array} Array containing view definitions.\n\n\nexport { Conversion as default };\n\nfunction _getAllUpcastDefinitions(definition) {\n  var _iteratorNormalCompletion4, _didIteratorError4, _iteratorError4, _iterator4, _step4, value, model, view, upcastAlso;\n\n  return regeneratorRuntime.wrap(function _getAllUpcastDefinitions$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!definition.model.values) {\n            _context.next = 31;\n            break;\n          }\n\n          _iteratorNormalCompletion4 = true;\n          _didIteratorError4 = false;\n          _iteratorError4 = undefined;\n          _context.prev = 4;\n          _iterator4 = definition.model.values[Symbol.iterator]();\n\n        case 6:\n          if (_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done) {\n            _context.next = 15;\n            break;\n          }\n\n          value = _step4.value;\n          model = {\n            key: definition.model.key,\n            value: value\n          };\n          view = definition.view[value];\n          upcastAlso = definition.upcastAlso ? definition.upcastAlso[value] : undefined;\n          return _context.delegateYield(_getUpcastDefinition(model, view, upcastAlso), \"t0\", 12);\n\n        case 12:\n          _iteratorNormalCompletion4 = true;\n          _context.next = 6;\n          break;\n\n        case 15:\n          _context.next = 21;\n          break;\n\n        case 17:\n          _context.prev = 17;\n          _context.t1 = _context[\"catch\"](4);\n          _didIteratorError4 = true;\n          _iteratorError4 = _context.t1;\n\n        case 21:\n          _context.prev = 21;\n          _context.prev = 22;\n\n          if (!_iteratorNormalCompletion4 && _iterator4[\"return\"] != null) {\n            _iterator4[\"return\"]();\n          }\n\n        case 24:\n          _context.prev = 24;\n\n          if (!_didIteratorError4) {\n            _context.next = 27;\n            break;\n          }\n\n          throw _iteratorError4;\n\n        case 27:\n          return _context.finish(24);\n\n        case 28:\n          return _context.finish(21);\n\n        case 29:\n          _context.next = 32;\n          break;\n\n        case 31:\n          return _context.delegateYield(_getUpcastDefinition(definition.model, definition.view, definition.upcastAlso), \"t2\", 32);\n\n        case 32:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[4, 17, 21, 29], [22,, 24, 28]]);\n}\n\nfunction _getUpcastDefinition(model, view, upcastAlso) {\n  var _iteratorNormalCompletion5, _didIteratorError5, _iteratorError5, _iterator5, _step5, upcastAlsoItem;\n\n  return regeneratorRuntime.wrap(function _getUpcastDefinition$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return {\n            model: model,\n            view: view\n          };\n\n        case 2:\n          if (!upcastAlso) {\n            _context2.next = 30;\n            break;\n          }\n\n          upcastAlso = Array.isArray(upcastAlso) ? upcastAlso : [upcastAlso];\n          _iteratorNormalCompletion5 = true;\n          _didIteratorError5 = false;\n          _iteratorError5 = undefined;\n          _context2.prev = 7;\n          _iterator5 = upcastAlso[Symbol.iterator]();\n\n        case 9:\n          if (_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done) {\n            _context2.next = 16;\n            break;\n          }\n\n          upcastAlsoItem = _step5.value;\n          _context2.next = 13;\n          return {\n            model: model,\n            view: upcastAlsoItem\n          };\n\n        case 13:\n          _iteratorNormalCompletion5 = true;\n          _context2.next = 9;\n          break;\n\n        case 16:\n          _context2.next = 22;\n          break;\n\n        case 18:\n          _context2.prev = 18;\n          _context2.t0 = _context2[\"catch\"](7);\n          _didIteratorError5 = true;\n          _iteratorError5 = _context2.t0;\n\n        case 22:\n          _context2.prev = 22;\n          _context2.prev = 23;\n\n          if (!_iteratorNormalCompletion5 && _iterator5[\"return\"] != null) {\n            _iterator5[\"return\"]();\n          }\n\n        case 25:\n          _context2.prev = 25;\n\n          if (!_didIteratorError5) {\n            _context2.next = 28;\n            break;\n          }\n\n          throw _iteratorError5;\n\n        case 28:\n          return _context2.finish(25);\n\n        case 29:\n          return _context2.finish(22);\n\n        case 30:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[7, 18, 22, 30], [23,, 25, 29]]);\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/batch\n */\n\n/**\n * A batch instance groups model changes ({@link module:engine/model/operation/operation~Operation operations}). All operations\n * grouped in a single batch can be reverted together, so you can also think about a batch as of a single undo step. If you want\n * to extend a given undo step, you can add more changes to the batch using {@link module:engine/model/model~Model#enqueueChange}:\n *\n *\t\tmodel.enqueueChange( batch, writer => {\n *\t\t\twriter.insertText( 'foo', paragraph, 'end' );\n *\t\t} );\n *\n * @see module:engine/model/model~Model#enqueueChange\n * @see module:engine/model/model~Model#change\n */\nvar Batch =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a batch instance.\n   *\n   * @see module:engine/model/model~Model#enqueueChange\n   * @see module:engine/model/model~Model#change\n   * @param {'transparent'|'default'} [type='default'] The type of the batch.\n   */\n  function Batch() {\n    var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'default';\n\n    _classCallCheck(this, Batch);\n\n    /**\n     * An array of operations that compose this batch.\n     *\n     * @readonly\n     * @type {Array.<module:engine/model/operation/operation~Operation>}\n     */\n    this.operations = [];\n    /**\n     * The type of the batch.\n     *\n     * It can be one of the following values:\n     * * `'default'` &ndash; All \"normal\" batches. This is the most commonly used type.\n     * * `'transparent'` &ndash; A batch that should be ignored by other features, i.e. an initial batch or collaborative editing\n     * changes.\n     *\n     * @readonly\n     * @type {'transparent'|'default'}\n     */\n\n    this.type = type;\n  }\n  /**\n   * Returns the base version of this batch, which is equal to the base version of the first operation in the batch.\n   * If there are no operations in the batch or neither operation has the base version set, it returns `null`.\n   *\n   * @readonly\n   * @type {Number|null}\n   */\n\n\n  _createClass(Batch, [{\n    key: \"addOperation\",\n\n    /**\n     * Adds an operation to the batch instance.\n     *\n     * @param {module:engine/model/operation/operation~Operation} operation An operation to add.\n     * @returns {module:engine/model/operation/operation~Operation} The added operation.\n     */\n    value: function addOperation(operation) {\n      operation.batch = this;\n      this.operations.push(operation);\n      return operation;\n    }\n  }, {\n    key: \"baseVersion\",\n    get: function get() {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.operations[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var op = _step.value;\n\n          if (op.baseVersion !== null) {\n            return op.baseVersion;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return null;\n    }\n  }]);\n\n  return Batch;\n}();\n\nexport { Batch as default };","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/operation\n */\n\n/**\n * Abstract base operation class.\n *\n * @abstract\n */\nvar Operation =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Base operation constructor.\n   *\n   * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n   * can be applied or `null` if the operation operates on detached (non-document) tree.\n   */\n  function Operation(baseVersion) {\n    _classCallCheck(this, Operation);\n\n    /**\n     * {@link module:engine/model/document~Document#version} on which operation can be applied. If you try to\n     * {@link module:engine/model/model~Model#applyOperation apply} operation with different base version than the\n     * {@link module:engine/model/document~Document#version document version} the\n     * {@link module:utils/ckeditorerror~CKEditorError model-document-applyOperation-wrong-version} error is thrown.\n     *\n     * @member {Number}\n     */\n    this.baseVersion = baseVersion;\n    /**\n     * Defines whether operation is executed on attached or detached {@link module:engine/model/item~Item items}.\n     *\n     * @readonly\n     * @member {Boolean} #isDocumentOperation\n     */\n\n    this.isDocumentOperation = this.baseVersion !== null;\n    /**\n     * {@link module:engine/model/batch~Batch Batch} to which the operation is added or `null` if the operation is not\n     * added to any batch yet.\n     *\n     * @member {module:engine/model/batch~Batch|null} #batch\n     */\n\n    this.batch = null;\n    /**\n     * Operation type.\n     *\n     * @readonly\n     * @member {String} #type\n     */\n\n    /**\n     * Creates and returns an operation that has the same parameters as this operation.\n     *\n     * @method #clone\n     * @returns {module:engine/model/operation/operation~Operation} Clone of this operation.\n     */\n\n    /**\n     * Creates and returns a reverse operation. Reverse operation when executed right after\n     * the original operation will bring back tree model state to the point before the original\n     * operation execution. In other words, it reverses changes done by the original operation.\n     *\n     * Keep in mind that tree model state may change since executing the original operation,\n     * so reverse operation will be \"outdated\". In that case you will need to transform it by\n     * all operations that were executed after the original operation.\n     *\n     * @method #getReversed\n     * @returns {module:engine/model/operation/operation~Operation} Reversed operation.\n     */\n\n    /**\n     * Executes the operation - modifications described by the operation properties will be applied to the model tree.\n     *\n     * @protected\n     * @method #_execute\n     */\n  }\n  /**\n   * Checks whether the operation's parameters are correct and the operation can be correctly executed. Throws\n   * an error if operation is not valid.\n   *\n   * @protected\n   * @method #_validate\n   */\n\n\n  _createClass(Operation, [{\n    key: \"_validate\",\n    value: function _validate() {}\n    /**\n     * Custom toJSON method to solve child-parent circular dependencies.\n     *\n     * @method #toJSON\n     * @returns {Object} Clone of this object with the operation property replaced with string.\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      // This method creates only a shallow copy, all nested objects should be defined separately.\n      // See https://github.com/ckeditor/ckeditor5-engine/issues/1477.\n      var json = Object.assign({}, this);\n      json.__className = this.constructor.className; // Remove reference to the parent `Batch` to avoid circular dependencies.\n\n      delete json.batch; // Only document operations are shared with other clients so it is not necessary to keep this information.\n\n      delete json.isDocumentOperation;\n      return json;\n    }\n    /**\n     * Name of the operation class used for serialization.\n     *\n     * @type {String}\n     */\n\n  }], [{\n    key: \"fromJSON\",\n\n    /**\n     * Creates Operation object from deserilized object, i.e. from parsed JSON string.\n     *\n     * @param {Object} json Deserialized JSON object.\n     * @param {module:engine/model/document~Document} doc Document on which this operation will be applied.\n     * @returns {module:engine/model/operation/operation~Operation}\n     */\n    value: function fromJSON(json) {\n      return new this(json.baseVersion);\n    }\n  }, {\n    key: \"className\",\n    get: function get() {\n      return 'Operation';\n    }\n  }]);\n\n  return Operation;\n}();\n\nexport { Operation as default };","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module module:engine/model/documentfragment\n */\nimport NodeList from './nodelist';\nimport Element from './element';\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\n/**\n * DocumentFragment represents a part of model which does not have a common root but it's top-level nodes\n * can be seen as siblings. In other words, it is a detached part of model tree, without a root.\n *\n * DocumentFragment has own {@link module:engine/model/markercollection~MarkerCollection}. Markers from this collection\n * will be set to the {@link module:engine/model/model~Model#markers model markers} by a\n * {@link module:engine/model/writer~Writer#insert} function.\n */\n\nvar DocumentFragment =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an empty `DocumentFragment`.\n   *\n   * **Note:** Constructor of this class shouldn't be used directly in the code.\n   * Use the {@link module:engine/model/writer~Writer#createDocumentFragment} method instead.\n   *\n   * @protected\n   * @param {module:engine/model/node~Node|Iterable.<module:engine/model/node~Node>} [children]\n   * Nodes to be contained inside the `DocumentFragment`.\n   */\n  function DocumentFragment(children) {\n    _classCallCheck(this, DocumentFragment);\n\n    /**\n     * DocumentFragment static markers map. This is a list of names and {@link module:engine/model/range~Range ranges}\n     * which will be set as Markers to {@link module:engine/model/model~Model#markers model markers collection}\n     * when DocumentFragment will be inserted to the document.\n     *\n     * @readonly\n     * @member {Map<String,module:engine/model/range~Range>} module:engine/model/documentfragment~DocumentFragment#markers\n     */\n    this.markers = new Map();\n    /**\n     * List of nodes contained inside the document fragment.\n     *\n     * @private\n     * @member {module:engine/model/nodelist~NodeList} module:engine/model/documentfragment~DocumentFragment#_children\n     */\n\n    this._children = new NodeList();\n\n    if (children) {\n      this._insertChild(0, children);\n    }\n  }\n  /**\n   * Returns an iterator that iterates over all nodes contained inside this document fragment.\n   *\n   * @returns {Iterable.<module:engine/model/node~Node>}\n   */\n\n\n  _createClass(DocumentFragment, [{\n    key: Symbol.iterator,\n    value: function value() {\n      return this.getChildren();\n    }\n    /**\n     * Number of this document fragment's children.\n     *\n     * @readonly\n     * @type {Number}\n     */\n\n  }, {\n    key: \"is\",\n\n    /**\n     * Checks whether given model tree object is of given type.\n     *\n     * Read more in {@link module:engine/model/node~Node#is}.\n     *\n     * @param {String} type\n     * @returns {Boolean}\n     */\n    value: function is(type) {\n      return type == 'documentFragment';\n    }\n    /**\n     * Gets the child at the given index. Returns `null` if incorrect index was passed.\n     *\n     * @param {Number} index Index of child.\n     * @returns {module:engine/model/node~Node|null} Child node.\n     */\n\n  }, {\n    key: \"getChild\",\n    value: function getChild(index) {\n      return this._children.getNode(index);\n    }\n    /**\n     * Returns an iterator that iterates over all of this document fragment's children.\n     *\n     * @returns {Iterable.<module:engine/model/node~Node>}\n     */\n\n  }, {\n    key: \"getChildren\",\n    value: function getChildren() {\n      return this._children[Symbol.iterator]();\n    }\n    /**\n     * Returns an index of the given child node. Returns `null` if given node is not a child of this document fragment.\n     *\n     * @param {module:engine/model/node~Node} node Child node to look for.\n     * @returns {Number|null} Child node's index.\n     */\n\n  }, {\n    key: \"getChildIndex\",\n    value: function getChildIndex(node) {\n      return this._children.getNodeIndex(node);\n    }\n    /**\n     * Returns the starting offset of given child. Starting offset is equal to the sum of\n     * {@link module:engine/model/node~Node#offsetSize offset sizes} of all node's siblings that are before it. Returns `null` if\n     * given node is not a child of this document fragment.\n     *\n     * @param {module:engine/model/node~Node} node Child node to look for.\n     * @returns {Number|null} Child node's starting offset.\n     */\n\n  }, {\n    key: \"getChildStartOffset\",\n    value: function getChildStartOffset(node) {\n      return this._children.getNodeStartOffset(node);\n    }\n    /**\n     * Returns path to a `DocumentFragment`, which is an empty array. Added for compatibility reasons.\n     *\n     * @returns {Array}\n     */\n\n  }, {\n    key: \"getPath\",\n    value: function getPath() {\n      return [];\n    }\n    /**\n     * Returns a descendant node by its path relative to this element.\n     *\n     *\t\t// <this>a<b>c</b></this>\n     *\t\tthis.getNodeByPath( [ 0 ] );     // -> \"a\"\n     *\t\tthis.getNodeByPath( [ 1 ] );     // -> <b>\n     *\t\tthis.getNodeByPath( [ 1, 0 ] );  // -> \"c\"\n     *\n     * @param {Array.<Number>} relativePath Path of the node to find, relative to this element.\n     * @returns {module:engine/model/node~Node|module:engine/model/documentfragment~DocumentFragment}\n     */\n\n  }, {\n    key: \"getNodeByPath\",\n    value: function getNodeByPath(relativePath) {\n      var node = this; // eslint-disable-line consistent-this\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = relativePath[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var index = _step.value;\n          node = node.getChild(node.offsetToIndex(index));\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return node;\n    }\n    /**\n     * Converts offset \"position\" to index \"position\".\n     *\n     * Returns index of a node that occupies given offset. If given offset is too low, returns `0`. If given offset is\n     * too high, returns index after last child}.\n     *\n     *\t\tconst textNode = new Text( 'foo' );\n     *\t\tconst pElement = new Element( 'p' );\n     *\t\tconst docFrag = new DocumentFragment( [ textNode, pElement ] );\n     *\t\tdocFrag.offsetToIndex( -1 ); // Returns 0, because offset is too low.\n     *\t\tdocFrag.offsetToIndex( 0 ); // Returns 0, because offset 0 is taken by `textNode` which is at index 0.\n     *\t\tdocFrag.offsetToIndex( 1 ); // Returns 0, because `textNode` has `offsetSize` equal to 3, so it occupies offset 1 too.\n     *\t\tdocFrag.offsetToIndex( 2 ); // Returns 0.\n     *\t\tdocFrag.offsetToIndex( 3 ); // Returns 1.\n     *\t\tdocFrag.offsetToIndex( 4 ); // Returns 2. There are no nodes at offset 4, so last available index is returned.\n     *\n     * @param {Number} offset Offset to look for.\n     * @returns {Number} Index of a node that occupies given offset.\n     */\n\n  }, {\n    key: \"offsetToIndex\",\n    value: function offsetToIndex(offset) {\n      return this._children.offsetToIndex(offset);\n    }\n    /**\n     * Converts `DocumentFragment` instance to plain object and returns it.\n     * Takes care of converting all of this document fragment's children.\n     *\n     * @returns {Object} `DocumentFragment` instance converted to plain object.\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = [];\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this._children[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var node = _step2.value;\n          json.push(node.toJSON());\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return json;\n    }\n    /**\n     * Creates a `DocumentFragment` instance from given plain object (i.e. parsed JSON string).\n     * Converts `DocumentFragment` children to proper nodes.\n     *\n     * @param {Object} json Plain object to be converted to `DocumentFragment`.\n     * @returns {module:engine/model/documentfragment~DocumentFragment} `DocumentFragment` instance created using given plain object.\n     */\n\n  }, {\n    key: \"_appendChild\",\n\n    /**\n     * {@link #_insertChild Inserts} one or more nodes at the end of this document fragment.\n     *\n     * @protected\n     * @param {module:engine/model/item~Item|Iterable.<module:engine/model/item~Item>} items Items to be inserted.\n     */\n    value: function _appendChild(items) {\n      this._insertChild(this.childCount, items);\n    }\n    /**\n     * Inserts one or more nodes at the given index and sets {@link module:engine/model/node~Node#parent parent} of these nodes\n     * to this document fragment.\n     *\n     * @protected\n     * @param {Number} index Index at which nodes should be inserted.\n     * @param {module:engine/model/item~Item|Iterable.<module:engine/model/item~Item>} items Items to be inserted.\n     */\n\n  }, {\n    key: \"_insertChild\",\n    value: function _insertChild(index, items) {\n      var nodes = normalize(items);\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = nodes[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var node = _step3.value;\n\n          // If node that is being added to this element is already inside another element, first remove it from the old parent.\n          if (node.parent !== null) {\n            node._remove();\n          }\n\n          node.parent = this;\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n            _iterator3[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      this._children._insertNodes(index, nodes);\n    }\n    /**\n     * Removes one or more nodes starting at the given index\n     * and sets {@link module:engine/model/node~Node#parent parent} of these nodes to `null`.\n     *\n     * @protected\n     * @param {Number} index Index of the first node to remove.\n     * @param {Number} [howMany=1] Number of nodes to remove.\n     * @returns {Array.<module:engine/model/node~Node>} Array containing removed nodes.\n     */\n\n  }, {\n    key: \"_removeChildren\",\n    value: function _removeChildren(index) {\n      var howMany = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n      var nodes = this._children._removeNodes(index, howMany);\n\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = nodes[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var node = _step4.value;\n          node.parent = null;\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4[\"return\"] != null) {\n            _iterator4[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      return nodes;\n    }\n  }, {\n    key: \"childCount\",\n    get: function get() {\n      return this._children.length;\n    }\n    /**\n     * Sum of {@link module:engine/model/node~Node#offsetSize offset sizes} of all of this document fragment's children.\n     *\n     * @readonly\n     * @type {Number}\n     */\n\n  }, {\n    key: \"maxOffset\",\n    get: function get() {\n      return this._children.maxOffset;\n    }\n    /**\n     * Is `true` if there are no nodes inside this document fragment, `false` otherwise.\n     *\n     * @readonly\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isEmpty\",\n    get: function get() {\n      return this.childCount === 0;\n    }\n    /**\n     * Artificial root of `DocumentFragment`. Returns itself. Added for compatibility reasons.\n     *\n     * @readonly\n     * @type {module:engine/model/documentfragment~DocumentFragment}\n     */\n\n  }, {\n    key: \"root\",\n    get: function get() {\n      return this;\n    }\n    /**\n     * Artificial parent of `DocumentFragment`. Returns `null`. Added for compatibility reasons.\n     *\n     * @readonly\n     * @type {null}\n     */\n\n  }, {\n    key: \"parent\",\n    get: function get() {\n      return null;\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      var children = [];\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = json[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var child = _step5.value;\n\n          if (child.name) {\n            // If child has name property, it is an Element.\n            children.push(Element.fromJSON(child));\n          } else {\n            // Otherwise, it is a Text node.\n            children.push(Text.fromJSON(child));\n          }\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5[\"return\"] != null) {\n            _iterator5[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      return new DocumentFragment(children);\n    }\n  }]);\n\n  return DocumentFragment;\n}(); // Converts strings to Text and non-iterables to arrays.\n//\n// @param {String|module:engine/model/item~Item|Iterable.<module:engine/model/item~Item>}\n// @returns {Iterable.<module:engine/model/node~Node>}\n\n\nexport { DocumentFragment as default };\n\nfunction normalize(nodes) {\n  // Separate condition because string is iterable.\n  if (typeof nodes == 'string') {\n    return [new Text(nodes)];\n  }\n\n  if (!isIterable(nodes)) {\n    nodes = [nodes];\n  } // Array.from to enable .map() on non-arrays.\n\n\n  return Array.from(nodes).map(function (node) {\n    if (typeof node == 'string') {\n      return new Text(node);\n    }\n\n    if (node instanceof TextProxy) {\n      return new Text(node.data, node.getAttributes());\n    }\n\n    return node;\n  });\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/utils\n */\nimport Node from '../node';\nimport Text from '../text';\nimport TextProxy from '../textproxy';\nimport Range from '../range';\nimport DocumentFragment from '../documentfragment';\nimport NodeList from '../nodelist';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * Contains functions used for composing model tree by {@link module:engine/model/operation/operation~Operation operations}.\n * Those functions are built on top of {@link module:engine/model/node~Node node}, and it's child classes', APIs.\n *\n * @protected\n * @namespace utils\n */\n\n/**\n * Inserts given nodes at given position.\n *\n * @protected\n * @function module:engine/model/operation/utils~utils.insert\n * @param {module:engine/model/position~Position} position Position at which nodes should be inserted.\n * @param {module:engine/model/node~NodeSet} nodes Nodes to insert.\n * @returns {module:engine/model/range~Range} Range spanning over inserted elements.\n */\n\nexport function _insert(position, nodes) {\n  nodes = _normalizeNodes(nodes); // We have to count offset before inserting nodes because they can get merged and we would get wrong offsets.\n\n  var offset = nodes.reduce(function (sum, node) {\n    return sum + node.offsetSize;\n  }, 0);\n  var parent = position.parent; // Insertion might be in a text node, we should split it if that's the case.\n\n  _splitNodeAtPosition(position);\n\n  var index = position.index; // Insert nodes at given index. After splitting we have a proper index and insertion is between nodes,\n  // using basic `Element` API.\n\n  parent._insertChild(index, nodes); // Merge text nodes, if possible. Merging is needed only at points where inserted nodes \"touch\" \"old\" nodes.\n\n\n  _mergeNodesAtIndex(parent, index + nodes.length);\n\n  _mergeNodesAtIndex(parent, index);\n\n  return new Range(position, position.getShiftedBy(offset));\n}\n/**\n * Removed nodes in given range. Only {@link module:engine/model/range~Range#isFlat flat} ranges are accepted.\n *\n * @protected\n * @function module:engine/model/operation/utils~utils._remove\n * @param {module:engine/model/range~Range} range Range containing nodes to remove.\n * @returns {Array.<module:engine/model/node~Node>}\n */\n\nexport function _remove(range) {\n  if (!range.isFlat) {\n    /**\n     * Trying to remove a range which starts and ends in different element.\n     *\n     * @error operation-utils-remove-range-not-flat\n     */\n    throw new CKEditorError('operation-utils-remove-range-not-flat: ' + 'Trying to remove a range which starts and ends in different element.', this);\n  }\n\n  var parent = range.start.parent; // Range may be inside text nodes, we have to split them if that's the case.\n\n  _splitNodeAtPosition(range.start);\n\n  _splitNodeAtPosition(range.end); // Remove the text nodes using basic `Element` API.\n\n\n  var removed = parent._removeChildren(range.start.index, range.end.index - range.start.index); // Merge text nodes, if possible. After some nodes were removed, node before and after removed range will be\n  // touching at the position equal to the removed range beginning. We check merging possibility there.\n\n\n  _mergeNodesAtIndex(parent, range.start.index);\n\n  return removed;\n}\n/**\n * Moves nodes in given range to given target position. Only {@link module:engine/model/range~Range#isFlat flat} ranges are accepted.\n *\n * @protected\n * @function module:engine/model/operation/utils~utils.move\n * @param {module:engine/model/range~Range} sourceRange Range containing nodes to move.\n * @param {module:engine/model/position~Position} targetPosition Position to which nodes should be moved.\n * @returns {module:engine/model/range~Range} Range containing moved nodes.\n */\n\nexport function _move(sourceRange, targetPosition) {\n  if (!sourceRange.isFlat) {\n    /**\n     * Trying to move a range which starts and ends in different element.\n     *\n     * @error operation-utils-move-range-not-flat\n     */\n    throw new CKEditorError('operation-utils-move-range-not-flat: ' + 'Trying to move a range which starts and ends in different element.', this);\n  }\n\n  var nodes = _remove(sourceRange); // We have to fix `targetPosition` because model changed after nodes from `sourceRange` got removed and\n  // that change might have an impact on `targetPosition`.\n\n\n  targetPosition = targetPosition._getTransformedByDeletion(sourceRange.start, sourceRange.end.offset - sourceRange.start.offset);\n  return _insert(targetPosition, nodes);\n}\n/**\n * Sets given attribute on nodes in given range. The attributes are only set on top-level nodes of the range, not on its children.\n *\n * @protected\n * @function module:engine/model/operation/utils~utils._setAttribute\n * @param {module:engine/model/range~Range} range Range containing nodes that should have the attribute set. Must be a flat range.\n * @param {String} key Key of attribute to set.\n * @param {*} value Attribute value.\n */\n\nexport function _setAttribute(range, key, value) {\n  // Range might start or end in text nodes, so we have to split them.\n  _splitNodeAtPosition(range.start);\n\n  _splitNodeAtPosition(range.end); // Iterate over all items in the range.\n\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = range.getItems({\n      shallow: true\n    })[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var item = _step.value;\n      // Iterator will return `TextProxy` instances but we know that those text proxies will\n      // always represent full text nodes (this is guaranteed thanks to splitting we did before).\n      // So, we can operate on those text proxies' text nodes.\n      var node = item.is('textProxy') ? item.textNode : item;\n\n      if (value !== null) {\n        node._setAttribute(key, value);\n      } else {\n        node._removeAttribute(key);\n      } // After attributes changing it may happen that some text nodes can be merged. Try to merge with previous node.\n\n\n      _mergeNodesAtIndex(node.parent, node.index);\n    } // Try to merge last changed node with it's previous sibling (not covered by the loop above).\n\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  _mergeNodesAtIndex(range.end.parent, range.end.index);\n}\n/**\n * Normalizes given object or an array of objects to an array of {@link module:engine/model/node~Node nodes}. See\n * {@link module:engine/model/node~NodeSet NodeSet} for details on how normalization is performed.\n *\n * @protected\n * @function module:engine/model/operation/utils~utils.normalizeNodes\n * @param {module:engine/model/node~NodeSet} nodes Objects to normalize.\n * @returns {Array.<module:engine/model/node~Node>} Normalized nodes.\n */\n\nexport function _normalizeNodes(nodes) {\n  var normalized = [];\n\n  if (!(nodes instanceof Array)) {\n    nodes = [nodes];\n  } // Convert instances of classes other than Node.\n\n\n  for (var i = 0; i < nodes.length; i++) {\n    if (typeof nodes[i] == 'string') {\n      normalized.push(new Text(nodes[i]));\n    } else if (nodes[i] instanceof TextProxy) {\n      normalized.push(new Text(nodes[i].data, nodes[i].getAttributes()));\n    } else if (nodes[i] instanceof DocumentFragment || nodes[i] instanceof NodeList) {\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = nodes[i][Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var child = _step2.value;\n          normalized.push(child);\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    } else if (nodes[i] instanceof Node) {\n      normalized.push(nodes[i]);\n    } // Skip unrecognized type.\n\n  } // Merge text nodes.\n\n\n  for (var _i = 1; _i < normalized.length; _i++) {\n    var node = normalized[_i];\n    var prev = normalized[_i - 1];\n\n    if (node instanceof Text && prev instanceof Text && _haveSameAttributes(node, prev)) {\n      // Doing this instead changing `prev.data` because `data` is readonly.\n      normalized.splice(_i - 1, 2, new Text(prev.data + node.data, prev.getAttributes()));\n      _i--;\n    }\n  }\n\n  return normalized;\n} // Checks if nodes before and after given index in given element are {@link module:engine/model/text~Text text nodes} and\n// merges them into one node if they have same attributes.\n//\n// Merging is done by removing two text nodes and inserting a new text node containing data from both merged text nodes.\n//\n// @private\n// @param {module:engine/model/element~Element} element Parent element of nodes to merge.\n// @param {Number} index Index between nodes to merge.\n\nfunction _mergeNodesAtIndex(element, index) {\n  var nodeBefore = element.getChild(index - 1);\n  var nodeAfter = element.getChild(index); // Check if both of those nodes are text objects with same attributes.\n\n  if (nodeBefore && nodeAfter && nodeBefore.is('text') && nodeAfter.is('text') && _haveSameAttributes(nodeBefore, nodeAfter)) {\n    // Append text of text node after index to the before one.\n    var mergedNode = new Text(nodeBefore.data + nodeAfter.data, nodeBefore.getAttributes()); // Remove separate text nodes.\n\n    element._removeChildren(index - 1, 2); // Insert merged text node.\n\n\n    element._insertChild(index - 1, mergedNode);\n  }\n} // Checks if given position is in a text node, and if so, splits the text node in two text nodes, each of them\n// containing a part of original text node.\n//\n// @private\n// @param {module:engine/model/position~Position} position Position at which node should be split.\n\n\nfunction _splitNodeAtPosition(position) {\n  var textNode = position.textNode;\n  var element = position.parent;\n\n  if (textNode) {\n    var offsetDiff = position.offset - textNode.startOffset;\n    var index = textNode.index;\n\n    element._removeChildren(index, 1);\n\n    var firstPart = new Text(textNode.data.substr(0, offsetDiff), textNode.getAttributes());\n    var secondPart = new Text(textNode.data.substr(offsetDiff), textNode.getAttributes());\n\n    element._insertChild(index, [firstPart, secondPart]);\n  }\n} // Checks whether two given nodes have same attributes.\n//\n// @private\n// @param {module:engine/model/node~Node} nodeA Node to check.\n// @param {module:engine/model/node~Node} nodeB Node to check.\n// @returns {Boolean} `true` if nodes have same attributes, `false` otherwise.\n\n\nfunction _haveSameAttributes(nodeA, nodeB) {\n  var iteratorA = nodeA.getAttributes();\n  var iteratorB = nodeB.getAttributes();\n  var _iteratorNormalCompletion3 = true;\n  var _didIteratorError3 = false;\n  var _iteratorError3 = undefined;\n\n  try {\n    for (var _iterator3 = iteratorA[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n      var attr = _step3.value;\n\n      if (attr[1] !== nodeB.getAttribute(attr[0])) {\n        return false;\n      }\n\n      iteratorB.next();\n    }\n  } catch (err) {\n    _didIteratorError3 = true;\n    _iteratorError3 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n        _iterator3[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError3) {\n        throw _iteratorError3;\n      }\n    }\n  }\n\n  return iteratorB.next().done;\n}\n/**\n * Value that can be normalized to an array of {@link module:engine/model/node~Node nodes}.\n *\n * Non-arrays are normalized as follows:\n * * {@link module:engine/model/node~Node Node} is left as is,\n * * {@link module:engine/model/textproxy~TextProxy TextProxy} and `String` are normalized to {@link module:engine/model/text~Text Text},\n * * {@link module:engine/model/nodelist~NodeList NodeList} is normalized to an array containing all nodes that are in that node list,\n * * {@link module:engine/model/documentfragment~DocumentFragment DocumentFragment} is normalized to an array containing all of it's\n * * children.\n *\n * Arrays are processed item by item like non-array values and flattened to one array. Normalization always results in\n * a flat array of {@link module:engine/model/node~Node nodes}. Consecutive text nodes (or items normalized to text nodes) will be\n * merged if they have same attributes.\n *\n * @typedef {module:engine/model/node~Node|module:engine/model/textproxy~TextProxy|String|\n * module:engine/model/nodelist~NodeList|module:engine/model/documentfragment~DocumentFragment|Iterable}\n * module:engine/model/node~NodeSet\n */","import baseIsEqual from './_baseIsEqual.js';\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nexport default isEqual;\n","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/attributeoperation\n */\nimport Operation from './operation';\nimport Range from '../range';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport { _setAttribute } from './utils';\nimport { isEqual } from 'lodash-es';\n/**\n * Operation to change nodes' attribute.\n *\n * Using this class you can add, remove or change value of the attribute.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\n\nvar AttributeOperation =\n/*#__PURE__*/\nfunction (_Operation) {\n  _inherits(AttributeOperation, _Operation);\n\n  /**\n   * Creates an operation that changes, removes or adds attributes.\n   *\n   * If only `newValue` is set, attribute will be added on a node. Note that all nodes in operation's range must not\n   * have an attribute with the same key as the added attribute.\n   *\n   * If only `oldValue` is set, then attribute with given key will be removed. Note that all nodes in operation's range\n   * must have an attribute with that key added.\n   *\n   * If both `newValue` and `oldValue` are set, then the operation will change the attribute value. Note that all nodes in\n   * operation's ranges must already have an attribute with given key and `oldValue` as value\n   *\n   * @param {module:engine/model/range~Range} range Range on which the operation should be applied. Must be a flat range.\n   * @param {String} key Key of an attribute to change or remove.\n   * @param {*} oldValue Old value of the attribute with given key or `null`, if attribute was not set before.\n   * @param {*} newValue New value of the attribute with given key or `null`, if operation should remove attribute.\n   * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n   * can be applied or `null` if the operation operates on detached (non-document) tree.\n   */\n  function AttributeOperation(range, key, oldValue, newValue, baseVersion) {\n    var _this;\n\n    _classCallCheck(this, AttributeOperation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AttributeOperation).call(this, baseVersion));\n    /**\n     * Range on which operation should be applied.\n     *\n     * @readonly\n     * @member {module:engine/model/range~Range}\n     */\n\n    _this.range = range.clone();\n    /**\n     * Key of an attribute to change or remove.\n     *\n     * @readonly\n     * @member {String}\n     */\n\n    _this.key = key;\n    /**\n     * Old value of the attribute with given key or `null`, if attribute was not set before.\n     *\n     * @readonly\n     * @member {*}\n     */\n\n    _this.oldValue = oldValue === undefined ? null : oldValue;\n    /**\n     * New value of the attribute with given key or `null`, if operation should remove attribute.\n     *\n     * @readonly\n     * @member {*}\n     */\n\n    _this.newValue = newValue === undefined ? null : newValue;\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(AttributeOperation, [{\n    key: \"clone\",\n\n    /**\n     * Creates and returns an operation that has the same parameters as this operation.\n     *\n     * @returns {module:engine/model/operation/attributeoperation~AttributeOperation} Clone of this operation.\n     */\n    value: function clone() {\n      return new AttributeOperation(this.range, this.key, this.oldValue, this.newValue, this.baseVersion);\n    }\n    /**\n     * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n     *\n     * @returns {module:engine/model/operation/attributeoperation~AttributeOperation}\n     */\n\n  }, {\n    key: \"getReversed\",\n    value: function getReversed() {\n      return new AttributeOperation(this.range, this.key, this.newValue, this.oldValue, this.baseVersion + 1);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = _get(_getPrototypeOf(AttributeOperation.prototype), \"toJSON\", this).call(this);\n\n      json.range = this.range.toJSON();\n      return json;\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_validate\",\n    value: function _validate() {\n      if (!this.range.isFlat) {\n        /**\n         * The range to change is not flat.\n         *\n         * @error attribute-operation-range-not-flat\n         */\n        throw new CKEditorError('attribute-operation-range-not-flat: The range to change is not flat.', this);\n      }\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.range.getItems({\n          shallow: true\n        })[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n\n          if (this.oldValue !== null && !isEqual(item.getAttribute(this.key), this.oldValue)) {\n            /**\n             * Changed node has different attribute value than operation's old attribute value.\n             *\n             * @error attribute-operation-wrong-old-value\n             * @param {module:engine/model/item~Item} item\n             * @param {String} key\n             * @param {*} value\n             */\n            throw new CKEditorError('attribute-operation-wrong-old-value: Changed node has different attribute value than operation\\'s ' + 'old attribute value.', this, {\n              item: item,\n              key: this.key,\n              value: this.oldValue\n            });\n          }\n\n          if (this.oldValue === null && this.newValue !== null && item.hasAttribute(this.key)) {\n            /**\n             * The attribute with given key already exists for the given node.\n             *\n             * @error attribute-operation-attribute-exists\n             * @param {module:engine/model/node~Node} node\n             * @param {String} key\n             */\n            throw new CKEditorError('attribute-operation-attribute-exists: The attribute with given key already exists.', this, {\n              node: item,\n              key: this.key\n            });\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_execute\",\n    value: function _execute() {\n      // If value to set is same as old value, don't do anything.\n      if (!isEqual(this.oldValue, this.newValue)) {\n        // Execution.\n        _setAttribute(this.range, this.key, this.newValue);\n      }\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"type\",\n    get: function get() {\n      if (this.oldValue === null) {\n        return 'addAttribute';\n      } else if (this.newValue === null) {\n        return 'removeAttribute';\n      } else {\n        return 'changeAttribute';\n      }\n    }\n  }], [{\n    key: \"fromJSON\",\n\n    /**\n     * Creates `AttributeOperation` object from deserilized object, i.e. from parsed JSON string.\n     *\n     * @param {Object} json Deserialized JSON object.\n     * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n     * @returns {module:engine/model/operation/attributeoperation~AttributeOperation}\n     */\n    value: function fromJSON(json, document) {\n      return new AttributeOperation(Range.fromJSON(json.range, document), json.key, json.oldValue, json.newValue, json.baseVersion);\n    }\n  }, {\n    key: \"className\",\n    get: function get() {\n      return 'AttributeOperation';\n    }\n  }]);\n\n  return AttributeOperation;\n}(Operation);\n\nexport { AttributeOperation as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/detachoperation\n */\nimport Operation from './operation';\nimport Range from '../range';\nimport { _remove } from './utils';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * Operation to permanently remove node from detached root.\n * Note this operation is only a local operation and won't be send to the other clients.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\n\nvar DetachOperation =\n/*#__PURE__*/\nfunction (_Operation) {\n  _inherits(DetachOperation, _Operation);\n\n  /**\n   * Creates an insert operation.\n   *\n   * @param {module:engine/model/position~Position} sourcePosition\n   * Position before the first {@link module:engine/model/item~Item model item} to move.\n   * @param {Number} howMany Offset size of moved range. Moved range will start from `sourcePosition` and end at\n   * `sourcePosition` with offset shifted by `howMany`.\n   */\n  function DetachOperation(sourcePosition, howMany) {\n    var _this;\n\n    _classCallCheck(this, DetachOperation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DetachOperation).call(this, null));\n    /**\n     * Position before the first {@link module:engine/model/item~Item model item} to detach.\n     *\n     * @member {module:engine/model/position~Position} #sourcePosition\n     */\n\n    _this.sourcePosition = sourcePosition.clone();\n    /**\n     * Offset size of moved range.\n     *\n     * @member {Number} #howMany\n     */\n\n    _this.howMany = howMany;\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(DetachOperation, [{\n    key: \"toJSON\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function toJSON() {\n      var json = _get(_getPrototypeOf(DetachOperation.prototype), \"toJSON\", this).call(this);\n\n      json.sourcePosition = this.sourcePosition.toJSON();\n      return json;\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_validate\",\n    value: function _validate() {\n      if (this.sourcePosition.root.document) {\n        /**\n         * Cannot detach document node.\n         *\n         * @error detach-operation-on-document-node\n         */\n        throw new CKEditorError('detach-operation-on-document-node: Cannot detach document node.', this);\n      }\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_execute\",\n    value: function _execute() {\n      _remove(Range._createFromPositionAndShift(this.sourcePosition, this.howMany));\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"type\",\n    get: function get() {\n      return 'detach';\n    }\n  }], [{\n    key: \"className\",\n    get: function get() {\n      return 'DetachOperation';\n    }\n  }]);\n\n  return DetachOperation;\n}(Operation);\n\nexport { DetachOperation as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/moveoperation\n */\nimport Operation from './operation';\nimport Position from '../position';\nimport Range from '../range';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\nimport { _move } from './utils';\n/**\n * Operation to move a range of {@link module:engine/model/item~Item model items}\n * to given {@link module:engine/model/position~Position target position}.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\n\nvar MoveOperation =\n/*#__PURE__*/\nfunction (_Operation) {\n  _inherits(MoveOperation, _Operation);\n\n  /**\n   * Creates a move operation.\n   *\n   * @param {module:engine/model/position~Position} sourcePosition\n   * Position before the first {@link module:engine/model/item~Item model item} to move.\n   * @param {Number} howMany Offset size of moved range. Moved range will start from `sourcePosition` and end at\n   * `sourcePosition` with offset shifted by `howMany`.\n   * @param {module:engine/model/position~Position} targetPosition Position at which moved nodes will be inserted.\n   * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n   * can be applied or `null` if the operation operates on detached (non-document) tree.\n   */\n  function MoveOperation(sourcePosition, howMany, targetPosition, baseVersion) {\n    var _this;\n\n    _classCallCheck(this, MoveOperation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MoveOperation).call(this, baseVersion));\n    /**\n     * Position before the first {@link module:engine/model/item~Item model item} to move.\n     *\n     * @member {module:engine/model/position~Position} module:engine/model/operation/moveoperation~MoveOperation#sourcePosition\n     */\n\n    _this.sourcePosition = sourcePosition.clone(); // `'toNext'` because `sourcePosition` is a bit like a start of the moved range.\n\n    _this.sourcePosition.stickiness = 'toNext';\n    /**\n     * Offset size of moved range.\n     *\n     * @member {Number} module:engine/model/operation/moveoperation~MoveOperation#howMany\n     */\n\n    _this.howMany = howMany;\n    /**\n     * Position at which moved nodes will be inserted.\n     *\n     * @member {module:engine/model/position~Position} module:engine/model/operation/moveoperation~MoveOperation#targetPosition\n     */\n\n    _this.targetPosition = targetPosition.clone();\n    _this.targetPosition.stickiness = 'toNone';\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(MoveOperation, [{\n    key: \"clone\",\n\n    /**\n     * Creates and returns an operation that has the same parameters as this operation.\n     *\n     * @returns {module:engine/model/operation/moveoperation~MoveOperation} Clone of this operation.\n     */\n    value: function clone() {\n      return new this.constructor(this.sourcePosition, this.howMany, this.targetPosition, this.baseVersion);\n    }\n    /**\n     * Returns the start position of the moved range after it got moved. This may be different than\n     * {@link module:engine/model/operation/moveoperation~MoveOperation#targetPosition} in some cases, i.e. when a range is moved\n     * inside the same parent but {@link module:engine/model/operation/moveoperation~MoveOperation#targetPosition targetPosition}\n     * is after {@link module:engine/model/operation/moveoperation~MoveOperation#sourcePosition sourcePosition}.\n     *\n     *\t\t vv              vv\n     *\t\tabcdefg ===> adefbcg\n     *\t\t     ^          ^\n     *\t\t     targetPos\tmovedRangeStart\n     *\t\t     offset 6\toffset 4\n     *\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"getMovedRangeStart\",\n    value: function getMovedRangeStart() {\n      return this.targetPosition._getTransformedByDeletion(this.sourcePosition, this.howMany);\n    }\n    /**\n     * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n     *\n     * @returns {module:engine/model/operation/moveoperation~MoveOperation}\n     */\n\n  }, {\n    key: \"getReversed\",\n    value: function getReversed() {\n      var newTargetPosition = this.sourcePosition._getTransformedByInsertion(this.targetPosition, this.howMany);\n\n      return new this.constructor(this.getMovedRangeStart(), this.howMany, newTargetPosition, this.baseVersion + 1);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_validate\",\n    value: function _validate() {\n      var sourceElement = this.sourcePosition.parent;\n      var targetElement = this.targetPosition.parent;\n      var sourceOffset = this.sourcePosition.offset;\n      var targetOffset = this.targetPosition.offset; // Validate whether move operation has correct parameters.\n      // Validation is pretty complex but move operation is one of the core ways to manipulate the document state.\n      // We expect that many errors might be connected with one of scenarios described below.\n\n      if (!sourceElement || !targetElement) {\n        /**\n         * Source position or target position is invalid.\n         *\n         * @error move-operation-position-invalid\n         */\n        throw new CKEditorError('move-operation-position-invalid: Source position or target position is invalid.', this);\n      } else if (sourceOffset + this.howMany > sourceElement.maxOffset) {\n        /**\n         * The nodes which should be moved do not exist.\n         *\n         * @error move-operation-nodes-do-not-exist\n         */\n        throw new CKEditorError('move-operation-nodes-do-not-exist: The nodes which should be moved do not exist.', this);\n      } else if (sourceElement === targetElement && sourceOffset < targetOffset && targetOffset < sourceOffset + this.howMany) {\n        /**\n         * Trying to move a range of nodes into the middle of that range.\n         *\n         * @error move-operation-range-into-itself\n         */\n        throw new CKEditorError('move-operation-range-into-itself: Trying to move a range of nodes to the inside of that range.', this);\n      } else if (this.sourcePosition.root == this.targetPosition.root) {\n        if (compareArrays(this.sourcePosition.getParentPath(), this.targetPosition.getParentPath()) == 'prefix') {\n          var i = this.sourcePosition.path.length - 1;\n\n          if (this.targetPosition.path[i] >= sourceOffset && this.targetPosition.path[i] < sourceOffset + this.howMany) {\n            /**\n             * Trying to move a range of nodes into one of nodes from that range.\n             *\n             * @error move-operation-node-into-itself\n             */\n            throw new CKEditorError('move-operation-node-into-itself: Trying to move a range of nodes into one of nodes from that range.', this);\n          }\n        }\n      }\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_execute\",\n    value: function _execute() {\n      _move(Range._createFromPositionAndShift(this.sourcePosition, this.howMany), this.targetPosition);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = _get(_getPrototypeOf(MoveOperation.prototype), \"toJSON\", this).call(this);\n\n      json.sourcePosition = this.sourcePosition.toJSON();\n      json.targetPosition = this.targetPosition.toJSON();\n      return json;\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"type\",\n    get: function get() {\n      if (this.targetPosition.root.rootName == '$graveyard') {\n        return 'remove';\n      } else if (this.sourcePosition.root.rootName == '$graveyard') {\n        return 'reinsert';\n      }\n\n      return 'move';\n    }\n  }], [{\n    key: \"fromJSON\",\n\n    /**\n     * Creates `MoveOperation` object from deserilized object, i.e. from parsed JSON string.\n     *\n     * @param {Object} json Deserialized JSON object.\n     * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n     * @returns {module:engine/model/operation/moveoperation~MoveOperation}\n     */\n    value: function fromJSON(json, document) {\n      var sourcePosition = Position.fromJSON(json.sourcePosition, document);\n      var targetPosition = Position.fromJSON(json.targetPosition, document);\n      return new this(sourcePosition, json.howMany, targetPosition, json.baseVersion);\n    }\n  }, {\n    key: \"className\",\n    get: function get() {\n      return 'MoveOperation';\n    }\n  }]);\n\n  return MoveOperation;\n}(Operation);\n\nexport { MoveOperation as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/insertoperation\n */\nimport Operation from './operation';\nimport Position from '../position';\nimport NodeList from '../nodelist';\nimport MoveOperation from './moveoperation';\nimport { _insert, _normalizeNodes } from './utils';\nimport Text from '../text';\nimport Element from '../element';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * Operation to insert one or more nodes at given position in the model.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\n\nvar InsertOperation =\n/*#__PURE__*/\nfunction (_Operation) {\n  _inherits(InsertOperation, _Operation);\n\n  /**\n   * Creates an insert operation.\n   *\n   * @param {module:engine/model/position~Position} position Position of insertion.\n   * @param {module:engine/model/node~NodeSet} nodes The list of nodes to be inserted.\n   * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n   * can be applied or `null` if the operation operates on detached (non-document) tree.\n   */\n  function InsertOperation(position, nodes, baseVersion) {\n    var _this;\n\n    _classCallCheck(this, InsertOperation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InsertOperation).call(this, baseVersion));\n    /**\n     * Position of insertion.\n     *\n     * @readonly\n     * @member {module:engine/model/position~Position} module:engine/model/operation/insertoperation~InsertOperation#position\n     */\n\n    _this.position = position.clone();\n    _this.position.stickiness = 'toNone';\n    /**\n     * List of nodes to insert.\n     *\n     * @readonly\n     * @member {module:engine/model/nodelist~NodeList} module:engine/model/operation/insertoperation~InsertOperation#nodeList\n     */\n\n    _this.nodes = new NodeList(_normalizeNodes(nodes));\n    /**\n     * Flag deciding how the operation should be transformed. If set to `true`, nodes might get additional attributes\n     * during operational transformation. This happens when the operation insertion position is inside of a range\n     * where attributes have changed.\n     *\n     * @member {Boolean} module:engine/model/operation/insertoperation~InsertOperation#shouldReceiveAttributes\n     */\n\n    _this.shouldReceiveAttributes = false;\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(InsertOperation, [{\n    key: \"clone\",\n\n    /**\n     * Creates and returns an operation that has the same parameters as this operation.\n     *\n     * @returns {module:engine/model/operation/insertoperation~InsertOperation} Clone of this operation.\n     */\n    value: function clone() {\n      var nodes = new NodeList(_toConsumableArray(this.nodes).map(function (node) {\n        return node._clone(true);\n      }));\n      var insert = new InsertOperation(this.position, nodes, this.baseVersion);\n      insert.shouldReceiveAttributes = this.shouldReceiveAttributes;\n      return insert;\n    }\n    /**\n     * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n     *\n     * @returns {module:engine/model/operation/moveoperation~MoveOperation}\n     */\n\n  }, {\n    key: \"getReversed\",\n    value: function getReversed() {\n      var graveyard = this.position.root.document.graveyard;\n      var gyPosition = new Position(graveyard, [0]);\n      return new MoveOperation(this.position, this.nodes.maxOffset, gyPosition, this.baseVersion + 1);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_validate\",\n    value: function _validate() {\n      var targetElement = this.position.parent;\n\n      if (!targetElement || targetElement.maxOffset < this.position.offset) {\n        /**\n         * Insertion position is invalid.\n         *\n         * @error insert-operation-position-invalid\n         */\n        throw new CKEditorError('insert-operation-position-invalid: Insertion position is invalid.', this);\n      }\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_execute\",\n    value: function _execute() {\n      // What happens here is that we want original nodes be passed to writer because we want original nodes\n      // to be inserted to the model. But in InsertOperation, we want to keep those nodes as they were added\n      // to the operation, not modified. For example, text nodes can get merged or cropped while Elements can\n      // get children. It is important that InsertOperation has the copy of original nodes in intact state.\n      var originalNodes = this.nodes;\n      this.nodes = new NodeList(_toConsumableArray(originalNodes).map(function (node) {\n        return node._clone(true);\n      }));\n\n      _insert(this.position, originalNodes);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = _get(_getPrototypeOf(InsertOperation.prototype), \"toJSON\", this).call(this);\n\n      json.position = this.position.toJSON();\n      json.nodes = this.nodes.toJSON();\n      return json;\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"type\",\n    get: function get() {\n      return 'insert';\n    }\n    /**\n     * Total offset size of inserted nodes.\n     *\n     * @returns {Number}\n     */\n\n  }, {\n    key: \"howMany\",\n    get: function get() {\n      return this.nodes.maxOffset;\n    }\n  }], [{\n    key: \"fromJSON\",\n\n    /**\n     * Creates `InsertOperation` object from deserilized object, i.e. from parsed JSON string.\n     *\n     * @param {Object} json Deserialized JSON object.\n     * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n     * @returns {module:engine/model/operation/insertoperation~InsertOperation}\n     */\n    value: function fromJSON(json, document) {\n      var children = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = json.nodes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var child = _step.value;\n\n          if (child.name) {\n            // If child has name property, it is an Element.\n            children.push(Element.fromJSON(child));\n          } else {\n            // Otherwise, it is a Text node.\n            children.push(Text.fromJSON(child));\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      var insert = new InsertOperation(Position.fromJSON(json.position, document), children, json.baseVersion);\n      insert.shouldReceiveAttributes = json.shouldReceiveAttributes;\n      return insert;\n    }\n  }, {\n    key: \"className\",\n    get: function get() {\n      return 'InsertOperation';\n    }\n  }]);\n\n  return InsertOperation;\n}(Operation);\n\nexport { InsertOperation as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/markeroperation\n */\nimport Operation from './operation';\nimport Range from '../range';\n/**\n * @extends module:engine/model/operation/operation~Operation\n */\n\nvar MarkerOperation =\n/*#__PURE__*/\nfunction (_Operation) {\n  _inherits(MarkerOperation, _Operation);\n\n  /**\n   * @param {String} name Marker name.\n   * @param {module:engine/model/range~Range} oldRange Marker range before the change.\n   * @param {module:engine/model/range~Range} newRange Marker range after the change.\n   * @param {module:engine/model/markercollection~MarkerCollection} markers Marker collection on which change should be executed.\n   * @param {Boolean} affectsData Specifies whether the marker operation affects the data produced by the data pipeline\n   * (is persisted in the editor's data).\n   * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n   * can be applied or `null` if the operation operates on detached (non-document) tree.\n   */\n  function MarkerOperation(name, oldRange, newRange, markers, affectsData, baseVersion) {\n    var _this;\n\n    _classCallCheck(this, MarkerOperation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MarkerOperation).call(this, baseVersion));\n    /**\n     * Marker name.\n     *\n     * @readonly\n     * @member {String}\n     */\n\n    _this.name = name;\n    /**\n     * Marker range before the change.\n     *\n     * @readonly\n     * @member {module:engine/model/range~Range}\n     */\n\n    _this.oldRange = oldRange ? oldRange.clone() : null;\n    /**\n     * Marker range after the change.\n     *\n     * @readonly\n     * @member {module:engine/model/range~Range}\n     */\n\n    _this.newRange = newRange ? newRange.clone() : null;\n    /**\n     * Specifies whether the marker operation affects the data produced by the data pipeline\n     * (is persisted in the editor's data).\n     *\n     * @readonly\n     * @member {Boolean}\n     */\n\n    _this.affectsData = affectsData;\n    /**\n     * Marker collection on which change should be executed.\n     *\n     * @private\n     * @member {module:engine/model/markercollection~MarkerCollection}\n     */\n\n    _this._markers = markers;\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(MarkerOperation, [{\n    key: \"clone\",\n\n    /**\n     * Creates and returns an operation that has the same parameters as this operation.\n     *\n     * @returns {module:engine/model/operation/markeroperation~MarkerOperation} Clone of this operation.\n     */\n    value: function clone() {\n      return new MarkerOperation(this.name, this.oldRange, this.newRange, this._markers, this.affectsData, this.baseVersion);\n    }\n    /**\n     * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n     *\n     * @returns {module:engine/model/operation/markeroperation~MarkerOperation}\n     */\n\n  }, {\n    key: \"getReversed\",\n    value: function getReversed() {\n      return new MarkerOperation(this.name, this.newRange, this.oldRange, this._markers, this.affectsData, this.baseVersion + 1);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_execute\",\n    value: function _execute() {\n      var type = this.newRange ? '_set' : '_remove';\n\n      this._markers[type](this.name, this.newRange, true, this.affectsData);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = _get(_getPrototypeOf(MarkerOperation.prototype), \"toJSON\", this).call(this);\n\n      if (this.oldRange) {\n        json.oldRange = this.oldRange.toJSON();\n      }\n\n      if (this.newRange) {\n        json.newRange = this.newRange.toJSON();\n      }\n\n      delete json._markers;\n      return json;\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"type\",\n    get: function get() {\n      return 'marker';\n    }\n  }], [{\n    key: \"fromJSON\",\n\n    /**\n     * Creates `MarkerOperation` object from deserialized object, i.e. from parsed JSON string.\n     *\n     * @param {Object} json Deserialized JSON object.\n     * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n     * @returns {module:engine/model/operation/markeroperation~MarkerOperation}\n     */\n    value: function fromJSON(json, document) {\n      return new MarkerOperation(json.name, json.oldRange ? Range.fromJSON(json.oldRange, document) : null, json.newRange ? Range.fromJSON(json.newRange, document) : null, document.model.markers, json.affectsData, json.baseVersion);\n    }\n  }, {\n    key: \"className\",\n    get: function get() {\n      return 'MarkerOperation';\n    }\n  }]);\n\n  return MarkerOperation;\n}(Operation);\n\nexport { MarkerOperation as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/renameoperation\n */\nimport Operation from './operation';\nimport Element from '../element';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport Position from '../position';\n/**\n * Operation to change element's name.\n *\n * Using this class you can change element's name.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\n\nvar RenameOperation =\n/*#__PURE__*/\nfunction (_Operation) {\n  _inherits(RenameOperation, _Operation);\n\n  /**\n   * Creates an operation that changes element's name.\n   *\n   * @param {module:engine/model/position~Position} position Position before an element to change.\n   * @param {String} oldName Current name of the element.\n   * @param {String} newName New name for the element.\n   * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n   * can be applied or `null` if the operation operates on detached (non-document) tree.\n   */\n  function RenameOperation(position, oldName, newName, baseVersion) {\n    var _this;\n\n    _classCallCheck(this, RenameOperation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RenameOperation).call(this, baseVersion));\n    /**\n     * Position before an element to change.\n     *\n     * @member {module:engine/model/position~Position} module:engine/model/operation/renameoperation~RenameOperation#position\n     */\n\n    _this.position = position; // This position sticks to the next node because it is a position before the node that we want to change.\n\n    _this.position.stickiness = 'toNext';\n    /**\n     * Current name of the element.\n     *\n     * @member {String} module:engine/model/operation/renameoperation~RenameOperation#oldName\n     */\n\n    _this.oldName = oldName;\n    /**\n     * New name for the element.\n     *\n     * @member {String} module:engine/model/operation/renameoperation~RenameOperation#newName\n     */\n\n    _this.newName = newName;\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(RenameOperation, [{\n    key: \"clone\",\n\n    /**\n     * Creates and returns an operation that has the same parameters as this operation.\n     *\n     * @returns {module:engine/model/operation/renameoperation~RenameOperation} Clone of this operation.\n     */\n    value: function clone() {\n      return new RenameOperation(this.position.clone(), this.oldName, this.newName, this.baseVersion);\n    }\n    /**\n     * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n     *\n     * @returns {module:engine/model/operation/renameoperation~RenameOperation}\n     */\n\n  }, {\n    key: \"getReversed\",\n    value: function getReversed() {\n      return new RenameOperation(this.position.clone(), this.newName, this.oldName, this.baseVersion + 1);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_validate\",\n    value: function _validate() {\n      var element = this.position.nodeAfter;\n\n      if (!(element instanceof Element)) {\n        /**\n         * Given position is invalid or node after it is not instance of Element.\n         *\n         * @error rename-operation-wrong-position\n         */\n        throw new CKEditorError('rename-operation-wrong-position: Given position is invalid or node after it is not an instance of Element.', this);\n      } else if (element.name !== this.oldName) {\n        /**\n         * Element to change has different name than operation's old name.\n         *\n         * @error rename-operation-wrong-name\n         */\n        throw new CKEditorError('rename-operation-wrong-name: Element to change has different name than operation\\'s old name.', this);\n      }\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_execute\",\n    value: function _execute() {\n      var element = this.position.nodeAfter;\n      element.name = this.newName;\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = _get(_getPrototypeOf(RenameOperation.prototype), \"toJSON\", this).call(this);\n\n      json.position = this.position.toJSON();\n      return json;\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"type\",\n    get: function get() {\n      return 'rename';\n    }\n  }], [{\n    key: \"fromJSON\",\n\n    /**\n     * Creates `RenameOperation` object from deserialized object, i.e. from parsed JSON string.\n     *\n     * @param {Object} json Deserialized JSON object.\n     * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n     * @returns {module:engine/model/operation/attributeoperation~AttributeOperation}\n     */\n    value: function fromJSON(json, document) {\n      return new RenameOperation(Position.fromJSON(json.position, document), json.oldName, json.newName, json.baseVersion);\n    }\n  }, {\n    key: \"className\",\n    get: function get() {\n      return 'RenameOperation';\n    }\n  }]);\n\n  return RenameOperation;\n}(Operation);\n\nexport { RenameOperation as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/rootattributeoperation\n */\nimport Operation from './operation';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * Operation to change root element's attribute. Using this class you can add, remove or change value of the attribute.\n *\n * This operation is needed, because root elements can't be changed through\n * @link module:engine/model/operation/attributeoperation~AttributeOperation}.\n * It is because {@link module:engine/model/operation/attributeoperation~AttributeOperation}\n * requires a range to change and root element can't\n * be a part of range because every {@link module:engine/model/position~Position} has to be inside a root.\n * {@link module:engine/model/position~Position} can't be created before a root element.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\n\nvar RootAttributeOperation =\n/*#__PURE__*/\nfunction (_Operation) {\n  _inherits(RootAttributeOperation, _Operation);\n\n  /**\n   * Creates an operation that changes, removes or adds attributes on root element.\n   *\n   * @see module:engine/model/operation/attributeoperation~AttributeOperation\n   * @param {module:engine/model/rootelement~RootElement} root Root element to change.\n   * @param {String} key Key of an attribute to change or remove.\n   * @param {*} oldValue Old value of the attribute with given key or `null` if adding a new attribute.\n   * @param {*} newValue New value to set for the attribute. If `null`, then the operation just removes the attribute.\n   * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n   * can be applied or `null` if the operation operates on detached (non-document) tree.\n   */\n  function RootAttributeOperation(root, key, oldValue, newValue, baseVersion) {\n    var _this;\n\n    _classCallCheck(this, RootAttributeOperation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RootAttributeOperation).call(this, baseVersion));\n    /**\n     * Root element to change.\n     *\n     * @readonly\n     * @member {module:engine/model/rootelement~RootElement}\n     */\n\n    _this.root = root;\n    /**\n     * Key of an attribute to change or remove.\n     *\n     * @readonly\n     * @member {String}\n     */\n\n    _this.key = key;\n    /**\n     * Old value of the attribute with given key or `null` if adding a new attribute.\n     *\n     * @readonly\n     * @member {*}\n     */\n\n    _this.oldValue = oldValue;\n    /**\n     * New value to set for the attribute. If `null`, then the operation just removes the attribute.\n     *\n     * @readonly\n     * @member {*}\n     */\n\n    _this.newValue = newValue;\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(RootAttributeOperation, [{\n    key: \"clone\",\n\n    /**\n     * Creates and returns an operation that has the same parameters as this operation.\n     *\n     * @returns {module:engine/model/operation/rootattributeoperation~RootAttributeOperation} Clone of this operation.\n     */\n    value: function clone() {\n      return new RootAttributeOperation(this.root, this.key, this.oldValue, this.newValue, this.baseVersion);\n    }\n    /**\n     * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n     *\n     * @returns {module:engine/model/operation/rootattributeoperation~RootAttributeOperation}\n     */\n\n  }, {\n    key: \"getReversed\",\n    value: function getReversed() {\n      return new RootAttributeOperation(this.root, this.key, this.newValue, this.oldValue, this.baseVersion + 1);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_validate\",\n    value: function _validate() {\n      if (this.root != this.root.root || this.root.is('documentFragment')) {\n        /**\n         * The element to change is not a root element.\n         *\n         * @error rootattribute-operation-not-a-root\n         * @param {module:engine/model/rootelement~RootElement} root\n         * @param {String} key\n         * @param {*} value\n         */\n        throw new CKEditorError('rootattribute-operation-not-a-root: The element to change is not a root element.', this, {\n          root: this.root,\n          key: this.key\n        });\n      }\n\n      if (this.oldValue !== null && this.root.getAttribute(this.key) !== this.oldValue) {\n        /**\n         * The attribute which should be removed does not exists for the given node.\n         *\n         * @error rootattribute-operation-wrong-old-value\n         * @param {module:engine/model/rootelement~RootElement} root\n         * @param {String} key\n         * @param {*} value\n         */\n        throw new CKEditorError('rootattribute-operation-wrong-old-value: Changed node has different attribute value than operation\\'s ' + 'old attribute value.', this, {\n          root: this.root,\n          key: this.key\n        });\n      }\n\n      if (this.oldValue === null && this.newValue !== null && this.root.hasAttribute(this.key)) {\n        /**\n         * The attribute with given key already exists for the given node.\n         *\n         * @error rootattribute-operation-attribute-exists\n         * @param {module:engine/model/rootelement~RootElement} root\n         * @param {String} key\n         */\n        throw new CKEditorError('rootattribute-operation-attribute-exists: The attribute with given key already exists.', this, {\n          root: this.root,\n          key: this.key\n        });\n      }\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_execute\",\n    value: function _execute() {\n      if (this.newValue !== null) {\n        this.root._setAttribute(this.key, this.newValue);\n      } else {\n        this.root._removeAttribute(this.key);\n      }\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = _get(_getPrototypeOf(RootAttributeOperation.prototype), \"toJSON\", this).call(this);\n\n      json.root = this.root.toJSON();\n      return json;\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"type\",\n    get: function get() {\n      if (this.oldValue === null) {\n        return 'addRootAttribute';\n      } else if (this.newValue === null) {\n        return 'removeRootAttribute';\n      } else {\n        return 'changeRootAttribute';\n      }\n    }\n  }], [{\n    key: \"fromJSON\",\n\n    /**\n     * Creates RootAttributeOperation object from deserilized object, i.e. from parsed JSON string.\n     *\n     * @param {Object} json Deserialized JSON object.\n     * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n     * @returns {module:engine/model/operation/rootattributeoperation~RootAttributeOperation}\n     */\n    value: function fromJSON(json, document) {\n      if (!document.getRoot(json.root)) {\n        /**\n         * Cannot create RootAttributeOperation for document. Root with specified name does not exist.\n         *\n         * @error rootattributeoperation-fromjson-no-root\n         * @param {String} rootName\n         */\n        throw new CKEditorError('rootattribute-operation-fromjson-no-root: Cannot create RootAttributeOperation. Root with specified name does not exist.', this, {\n          rootName: json.root\n        });\n      }\n\n      return new RootAttributeOperation(document.getRoot(json.root), json.key, json.oldValue, json.newValue, json.baseVersion);\n    }\n  }, {\n    key: \"className\",\n    get: function get() {\n      return 'RootAttributeOperation';\n    }\n  }]);\n\n  return RootAttributeOperation;\n}(Operation);\n\nexport { RootAttributeOperation as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/mergeoperation\n */\nimport Operation from './operation';\nimport SplitOperation from './splitoperation';\nimport Position from '../position';\nimport Range from '../range';\nimport { _move } from './utils';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * Operation to merge two {@link module:engine/model/element~Element elements}.\n *\n * The merged element is the parent of {@link ~MergeOperation#sourcePosition} and it is merged into the parent of\n * {@link ~MergeOperation#targetPosition}. All nodes from the merged element are moved to {@link ~MergeOperation#targetPosition}.\n *\n * The merged element is moved to the graveyard at {@link ~MergeOperation#graveyardPosition}.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\n\nvar MergeOperation =\n/*#__PURE__*/\nfunction (_Operation) {\n  _inherits(MergeOperation, _Operation);\n\n  /**\n   * Creates a merge operation.\n   *\n   * @param {module:engine/model/position~Position} sourcePosition Position inside the merged element. All nodes from that\n   * element after that position will be moved to {@link ~#targetPosition}.\n   * @param {Number} howMany Summary offset size of nodes which will be moved from the merged element to the new parent.\n   * @param {module:engine/model/position~Position} targetPosition Position which the nodes from the merged elements will be moved to.\n   * @param {module:engine/model/position~Position} graveyardPosition Position in graveyard to which the merged element will be moved.\n   * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n   * can be applied or `null` if the operation operates on detached (non-document) tree.\n   */\n  function MergeOperation(sourcePosition, howMany, targetPosition, graveyardPosition, baseVersion) {\n    var _this;\n\n    _classCallCheck(this, MergeOperation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MergeOperation).call(this, baseVersion));\n    /**\n     * Position inside the merged element. All nodes from that element after that position will be moved to {@link ~#targetPosition}.\n     *\n     * @member {module:engine/model/position~Position} module:engine/model/operation/mergeoperation~MergeOperation#sourcePosition\n     */\n\n    _this.sourcePosition = sourcePosition.clone(); // This is, and should always remain, the first position in its parent.\n\n    _this.sourcePosition.stickiness = 'toPrevious';\n    /**\n     * Summary offset size of nodes which will be moved from the merged element to the new parent.\n     *\n     * @member {Number} module:engine/model/operation/mergeoperation~MergeOperation#howMany\n     */\n\n    _this.howMany = howMany;\n    /**\n     * Position which the nodes from the merged elements will be moved to.\n     *\n     * @member {module:engine/model/position~Position} module:engine/model/operation/mergeoperation~MergeOperation#targetPosition\n     */\n\n    _this.targetPosition = targetPosition.clone(); // Except of a rare scenario in `MergeOperation` x `MergeOperation` transformation,\n    // this is, and should always remain, the last position in its parent.\n\n    _this.targetPosition.stickiness = 'toNext';\n    /**\n     * Position in graveyard to which the merged element will be moved.\n     *\n     * @member {module:engine/model/position~Position} module:engine/model/operation/mergeoperation~MergeOperation#graveyardPosition\n     */\n\n    _this.graveyardPosition = graveyardPosition.clone();\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(MergeOperation, [{\n    key: \"clone\",\n\n    /**\n     * Creates and returns an operation that has the same parameters as this operation.\n     *\n     * @returns {module:engine/model/operation/mergeoperation~MergeOperation} Clone of this operation.\n     */\n    value: function clone() {\n      return new this.constructor(this.sourcePosition, this.howMany, this.targetPosition, this.graveyardPosition, this.baseVersion);\n    }\n    /**\n     * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n     *\n     * @returns {module:engine/model/operation/splitoperation~SplitOperation}\n     */\n\n  }, {\n    key: \"getReversed\",\n    value: function getReversed() {\n      // Positions in this method are transformed by this merge operation because the split operation bases on\n      // the context after this merge operation happened (because split operation reverses it).\n      // So we need to acknowledge that the merge operation happened and those positions changed a little.\n      var targetPosition = this.targetPosition._getTransformedByMergeOperation(this);\n\n      var path = this.sourcePosition.path.slice(0, -1);\n\n      var insertionPosition = new Position(this.sourcePosition.root, path)._getTransformedByMergeOperation(this);\n\n      var split = new SplitOperation(targetPosition, this.howMany, this.graveyardPosition, this.baseVersion + 1);\n      split.insertionPosition = insertionPosition;\n      return split;\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_validate\",\n    value: function _validate() {\n      var sourceElement = this.sourcePosition.parent;\n      var targetElement = this.targetPosition.parent; // Validate whether merge operation has correct parameters.\n\n      if (!sourceElement || !sourceElement.is('element') || !sourceElement.parent) {\n        /**\n         * Merge source position is invalid.\n         *\n         * @error merge-operation-source-position-invalid\n         */\n        throw new CKEditorError('merge-operation-source-position-invalid: Merge source position is invalid.', this);\n      } else if (!targetElement || !targetElement.is('element') || !targetElement.parent) {\n        /**\n         * Merge target position is invalid.\n         *\n         * @error merge-operation-target-position-invalid\n         */\n        throw new CKEditorError('merge-operation-target-position-invalid: Merge target position is invalid.', this);\n      } else if (this.howMany != sourceElement.maxOffset) {\n        /**\n         * Merge operation specifies wrong number of nodes to move.\n         *\n         * @error merge-operation-how-many-invalid\n         */\n        throw new CKEditorError('merge-operation-how-many-invalid: Merge operation specifies wrong number of nodes to move.', this);\n      }\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_execute\",\n    value: function _execute() {\n      var mergedElement = this.sourcePosition.parent;\n\n      var sourceRange = Range._createIn(mergedElement);\n\n      _move(sourceRange, this.targetPosition);\n\n      _move(Range._createOn(mergedElement), this.graveyardPosition);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = _get(_getPrototypeOf(MergeOperation.prototype), \"toJSON\", this).call(this);\n\n      json.sourcePosition = json.sourcePosition.toJSON();\n      json.targetPosition = json.targetPosition.toJSON();\n      json.graveyardPosition = json.graveyardPosition.toJSON();\n      return json;\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"type\",\n    get: function get() {\n      return 'merge';\n    }\n    /**\n     * Position before the merged element (which will be deleted).\n     *\n     * @readonly\n     * @type {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"deletionPosition\",\n    get: function get() {\n      return new Position(this.sourcePosition.root, this.sourcePosition.path.slice(0, -1));\n    }\n    /**\n     * Artificial range that contains all the nodes from the merged element that will be moved to {@link ~MergeOperation#sourcePosition}.\n     * The range starts at {@link ~MergeOperation#sourcePosition} and ends in the same parent, at `POSITIVE_INFINITY` offset.\n     *\n     * @readonly\n     * @type {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"movedRange\",\n    get: function get() {\n      var end = this.sourcePosition.getShiftedBy(Number.POSITIVE_INFINITY);\n      return new Range(this.sourcePosition, end);\n    }\n  }], [{\n    key: \"fromJSON\",\n\n    /**\n     * Creates `MergeOperation` object from deserilized object, i.e. from parsed JSON string.\n     *\n     * @param {Object} json Deserialized JSON object.\n     * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n     * @returns {module:engine/model/operation/mergeoperation~MergeOperation}\n     */\n    value: function fromJSON(json, document) {\n      var sourcePosition = Position.fromJSON(json.sourcePosition, document);\n      var targetPosition = Position.fromJSON(json.targetPosition, document);\n      var graveyardPosition = Position.fromJSON(json.graveyardPosition, document);\n      return new this(sourcePosition, json.howMany, targetPosition, graveyardPosition, json.baseVersion);\n    }\n  }, {\n    key: \"className\",\n    get: function get() {\n      return 'MergeOperation';\n    }\n  }]);\n\n  return MergeOperation;\n}(Operation);\n\nexport { MergeOperation as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/splitoperation\n */\nimport Operation from './operation';\nimport MergeOperation from './mergeoperation';\nimport Position from '../position';\nimport Range from '../range';\nimport { _insert, _move } from './utils';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * Operation to split {@link module:engine/model/element~Element an element} at given\n * {@link module:engine/model/operation/splitoperation~SplitOperation#splitPosition split position} into two elements,\n * both containing a part of the element's original content.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\n\nvar SplitOperation =\n/*#__PURE__*/\nfunction (_Operation) {\n  _inherits(SplitOperation, _Operation);\n\n  /**\n   * Creates a split operation.\n   *\n   * @param {module:engine/model/position~Position} splitPosition Position at which an element should be split.\n   * @param {Number} howMany Total offset size of elements that are in the split element after `position`.\n   * @param {module:engine/model/position~Position|null} graveyardPosition Position in the graveyard root before the element which\n   * should be used as a parent of the nodes after `position`. If it is not set, a copy of the the `position` parent will be used.\n   * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n   * can be applied or `null` if the operation operates on detached (non-document) tree.\n   */\n  function SplitOperation(splitPosition, howMany, graveyardPosition, baseVersion) {\n    var _this;\n\n    _classCallCheck(this, SplitOperation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SplitOperation).call(this, baseVersion));\n    /**\n     * Position at which an element should be split.\n     *\n     * @member {module:engine/model/position~Position} module:engine/model/operation/splitoperation~SplitOperation#splitPosition\n     */\n\n    _this.splitPosition = splitPosition.clone(); // Keep position sticking to the next node. This way any new content added at the place where the element is split\n    // will be left in the original element.\n\n    _this.splitPosition.stickiness = 'toNext';\n    /**\n     * Total offset size of elements that are in the split element after `position`.\n     *\n     * @member {Number} module:engine/model/operation/splitoperation~SplitOperation#howMany\n     */\n\n    _this.howMany = howMany;\n    /**\n     * Position at which the clone of split element (or element from graveyard) will be inserted.\n     *\n     * @member {module:engine/model/position~Position} module:engine/model/operation/splitoperation~SplitOperation#insertionPosition\n     */\n\n    _this.insertionPosition = SplitOperation.getInsertionPosition(splitPosition);\n    _this.insertionPosition.stickiness = 'toNone';\n    /**\n     * Position in the graveyard root before the element which should be used as a parent of the nodes after `position`.\n     * If it is not set, a copy of the the `position` parent will be used.\n     *\n     * The default behavior is to clone the split element. Element from graveyard is used during undo.\n     *\n     * @member {module:engine/model/position~Position|null} #graveyardPosition\n     */\n\n    _this.graveyardPosition = graveyardPosition ? graveyardPosition.clone() : null;\n\n    if (_this.graveyardPosition) {\n      _this.graveyardPosition.stickiness = 'toNext';\n    }\n\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(SplitOperation, [{\n    key: \"clone\",\n\n    /**\n     * Creates and returns an operation that has the same parameters as this operation.\n     *\n     * @returns {module:engine/model/operation/splitoperation~SplitOperation} Clone of this operation.\n     */\n    value: function clone() {\n      var split = new this.constructor(this.splitPosition, this.howMany, this.graveyardPosition, this.baseVersion);\n      split.insertionPosition = this.insertionPosition;\n      return split;\n    }\n    /**\n     * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n     *\n     * @returns {module:engine/model/operation/mergeoperation~MergeOperation}\n     */\n\n  }, {\n    key: \"getReversed\",\n    value: function getReversed() {\n      var graveyard = this.splitPosition.root.document.graveyard;\n      var graveyardPosition = new Position(graveyard, [0]);\n      return new MergeOperation(this.moveTargetPosition, this.howMany, this.splitPosition, graveyardPosition, this.baseVersion + 1);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_validate\",\n    value: function _validate() {\n      var element = this.splitPosition.parent;\n      var offset = this.splitPosition.offset; // Validate whether split operation has correct parameters.\n\n      if (!element || element.maxOffset < offset) {\n        /**\n         * Split position is invalid.\n         *\n         * @error split-operation-position-invalid\n         */\n        throw new CKEditorError('split-operation-position-invalid: Split position is invalid.', this);\n      } else if (!element.parent) {\n        /**\n         * Cannot split root element.\n         *\n         * @error split-operation-split-in-root\n         */\n        throw new CKEditorError('split-operation-split-in-root: Cannot split root element.', this);\n      } else if (this.howMany != element.maxOffset - this.splitPosition.offset) {\n        /**\n         * Split operation specifies wrong number of nodes to move.\n         *\n         * @error split-operation-how-many-invalid\n         */\n        throw new CKEditorError('split-operation-how-many-invalid: Split operation specifies wrong number of nodes to move.', this);\n      } else if (this.graveyardPosition && !this.graveyardPosition.nodeAfter) {\n        /**\n         * Graveyard position invalid.\n         *\n         * @error split-operation-graveyard-position-invalid\n         */\n        throw new CKEditorError('split-operation-graveyard-position-invalid: Graveyard position invalid.', this);\n      }\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_execute\",\n    value: function _execute() {\n      var splitElement = this.splitPosition.parent;\n\n      if (this.graveyardPosition) {\n        _move(Range._createFromPositionAndShift(this.graveyardPosition, 1), this.insertionPosition);\n      } else {\n        var newElement = splitElement._clone();\n\n        _insert(this.insertionPosition, newElement);\n      }\n\n      var sourceRange = new Range(Position._createAt(splitElement, this.splitPosition.offset), Position._createAt(splitElement, splitElement.maxOffset));\n\n      _move(sourceRange, this.moveTargetPosition);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = _get(_getPrototypeOf(SplitOperation.prototype), \"toJSON\", this).call(this);\n\n      json.splitPosition = this.splitPosition.toJSON();\n      json.insertionPosition = this.insertionPosition.toJSON();\n\n      if (this.graveyardPosition) {\n        json.graveyardPosition = this.graveyardPosition.toJSON();\n      }\n\n      return json;\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"type\",\n    get: function get() {\n      return 'split';\n    }\n    /**\n     * Position inside the new clone of a split element.\n     *\n     * This is a position where nodes that are after the split position will be moved to.\n     *\n     * @readonly\n     * @type {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"moveTargetPosition\",\n    get: function get() {\n      var path = this.insertionPosition.path.slice();\n      path.push(0);\n      return new Position(this.insertionPosition.root, path);\n    }\n    /**\n     * Artificial range that contains all the nodes from the split element that will be moved to the new element.\n     * The range starts at {@link ~#splitPosition} and ends in the same parent, at `POSITIVE_INFINITY` offset.\n     *\n     * @readonly\n     * @type {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"movedRange\",\n    get: function get() {\n      var end = this.splitPosition.getShiftedBy(Number.POSITIVE_INFINITY);\n      return new Range(this.splitPosition, end);\n    }\n  }], [{\n    key: \"getInsertionPosition\",\n\n    /**\n     * Helper function that returns a default insertion position basing on given `splitPosition`. The default insertion\n     * position is after the split element.\n     *\n     * @param {module:engine/model/position~Position} splitPosition\n     * @returns {module:engine/model/position~Position}\n     */\n    value: function getInsertionPosition(splitPosition) {\n      var path = splitPosition.path.slice(0, -1);\n      path[path.length - 1]++;\n      return new Position(splitPosition.root, path);\n    }\n    /**\n     * Creates `SplitOperation` object from deserilized object, i.e. from parsed JSON string.\n     *\n     * @param {Object} json Deserialized JSON object.\n     * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n     * @returns {module:engine/model/operation/splitoperation~SplitOperation}\n     */\n\n  }, {\n    key: \"fromJSON\",\n    value: function fromJSON(json, document) {\n      var splitPosition = Position.fromJSON(json.splitPosition, document);\n      var insertionPosition = Position.fromJSON(json.insertionPosition, document);\n      var graveyardPosition = json.graveyardPosition ? Position.fromJSON(json.graveyardPosition, document) : null;\n      var split = new this(splitPosition, json.howMany, graveyardPosition, json.baseVersion);\n      split.insertionPosition = insertionPosition;\n      return split;\n    }\n  }, {\n    key: \"className\",\n    get: function get() {\n      return 'SplitOperation';\n    }\n  }]);\n\n  return SplitOperation;\n}(Operation);\n\nexport { SplitOperation as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/rootelement\n */\nimport Element from './element';\n/**\n * Type of {@link module:engine/model/element~Element} that is a root of a model tree.\n * @extends module:engine/model/element~Element\n */\n\nvar RootElement =\n/*#__PURE__*/\nfunction (_Element) {\n  _inherits(RootElement, _Element);\n\n  /**\n   * Creates root element.\n   *\n   * @param {module:engine/model/document~Document} doc Document that is an owner of this root.\n   * @param {String} name Node name.\n   * @param {String} [rootName='main'] Unique root name used to identify this root\n   * element by {@link module:engine/model/document~Document}.\n   */\n  function RootElement(doc, name) {\n    var _this;\n\n    var rootName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'main';\n\n    _classCallCheck(this, RootElement);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RootElement).call(this, name));\n    /**\n     * Document that is an owner of this root.\n     *\n     * @private\n     * @member {module:engine/model/document~Document}\n     */\n\n    _this._doc = doc;\n    /**\n     * Unique root name used to identify this root element by {@link module:engine/model/document~Document}.\n     *\n     * @readonly\n     * @member {String}\n     */\n\n    _this.rootName = rootName;\n    return _this;\n  }\n  /**\n   * {@link module:engine/model/document~Document Document} that owns this root element.\n   *\n   * In contrary, to {@link module:engine/model/node~Node node}, root element always have a `document`.\n   *\n   * @readonly\n   * @type {module:engine/model/document~Document|null}\n   */\n\n\n  _createClass(RootElement, [{\n    key: \"is\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function is(type, name) {\n      if (!name) {\n        return type == 'rootElement' || _get(_getPrototypeOf(RootElement.prototype), \"is\", this).call(this, type);\n      } else {\n        return type == 'rootElement' && name == this.name || _get(_getPrototypeOf(RootElement.prototype), \"is\", this).call(this, type, name);\n      }\n    }\n    /**\n     * Converts `RootElement` instance to `String` containing it's name.\n     *\n     * @returns {String} `RootElement` instance converted to `String`.\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.rootName;\n    }\n  }, {\n    key: \"document\",\n    get: function get() {\n      return this._doc;\n    }\n  }]);\n\n  return RootElement;\n}(Element);\n\nexport { RootElement as default };","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/writer\n */\nimport AttributeOperation from './operation/attributeoperation';\nimport DetachOperation from './operation/detachoperation';\nimport InsertOperation from './operation/insertoperation';\nimport MarkerOperation from './operation/markeroperation';\nimport MoveOperation from './operation/moveoperation';\nimport RenameOperation from './operation/renameoperation';\nimport RootAttributeOperation from './operation/rootattributeoperation';\nimport SplitOperation from './operation/splitoperation';\nimport MergeOperation from './operation/mergeoperation';\nimport DocumentFragment from './documentfragment';\nimport Text from './text';\nimport Element from './element';\nimport RootElement from './rootelement';\nimport Position from './position';\nimport Range from './range.js';\nimport DocumentSelection from './documentselection';\nimport toMap from '@ckeditor/ckeditor5-utils/src/tomap';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * The model can only be modified by using the writer. It should be used whenever you want to create a node, modify\n * child nodes, attributes or text, set the selection's position and its attributes.\n *\n * The instance of the writer is only available in the {@link module:engine/model/model~Model#change `change()`} or\n * {@link module:engine/model/model~Model#enqueueChange `enqueueChange()`}.\n *\n *\t\tmodel.change( writer => {\n *\t\t\twriter.insertText( 'foo', paragraph, 'end' );\n *\t\t} );\n *\n * Note that the writer should never be stored and used outside of the `change()` and\n * `enqueueChange()` blocks.\n *\n * Note that writer's methods do not check the {@link module:engine/model/schema~Schema}. It is possible\n * to create incorrect model structures by using the writer. Read more about in\n * {@glink framework/guides/deep-dive/schema#who-checks-the-schema \"Who checks the schema?\"}.\n *\n * @see module:engine/model/model~Model#change\n * @see module:engine/model/model~Model#enqueueChange\n */\n\nvar Writer =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a writer instance.\n   *\n   * **Note:** It is not recommended to use it directly. Use {@link module:engine/model/model~Model#change `Model#change()`} or\n   * {@link module:engine/model/model~Model#enqueueChange `Model#enqueueChange()`} instead.\n   *\n   * @protected\n   * @param {module:engine/model/model~Model} model\n   * @param {module:engine/model/batch~Batch} batch\n   */\n  function Writer(model, batch) {\n    _classCallCheck(this, Writer);\n\n    /**\n     * Instance of the model on which this writer operates.\n     *\n     * @readonly\n     * @type {module:engine/model/model~Model}\n     */\n    this.model = model;\n    /**\n     * The batch to which this writer will add changes.\n     *\n     * @readonly\n     * @type {module:engine/model/batch~Batch}\n     */\n\n    this.batch = batch;\n  }\n  /**\n   * Creates a new {@link module:engine/model/text~Text text node}.\n   *\n   *\t\twriter.createText( 'foo' );\n   *\t\twriter.createText( 'foo', { bold: true } );\n   *\n   * @param {String} data Text data.\n   * @param {Object} [attributes] Text attributes.\n   * @returns {module:engine/model/text~Text} Created text node.\n   */\n\n\n  _createClass(Writer, [{\n    key: \"createText\",\n    value: function createText(data, attributes) {\n      return new Text(data, attributes);\n    }\n    /**\n     * Creates a new {@link module:engine/model/element~Element element}.\n     *\n     *\t\twriter.createElement( 'paragraph' );\n     *\t\twriter.createElement( 'paragraph', { alignment: 'center' } );\n     *\n     * @param {String} name Name of the element.\n     * @param {Object} [attributes] Elements attributes.\n     * @returns {module:engine/model/element~Element} Created element.\n     */\n\n  }, {\n    key: \"createElement\",\n    value: function createElement(name, attributes) {\n      return new Element(name, attributes);\n    }\n    /**\n     * Creates a new {@link module:engine/model/documentfragment~DocumentFragment document fragment}.\n     *\n     * @returns {module:engine/model/documentfragment~DocumentFragment} Created document fragment.\n     */\n\n  }, {\n    key: \"createDocumentFragment\",\n    value: function createDocumentFragment() {\n      return new DocumentFragment();\n    }\n    /**\n     * Inserts item on given position.\n     *\n     *\t\tconst paragraph = writer.createElement( 'paragraph' );\n     *\t\twriter.insert( paragraph, position );\n     *\n     * Instead of using position you can use parent and offset:\n     *\n     *\t\tconst text = writer.createText( 'foo' );\n     *\t\twriter.insert( text, paragraph, 5 );\n     *\n     * You can also use `end` instead of the offset to insert at the end:\n     *\n     *\t\tconst text = writer.createText( 'foo' );\n     *\t\twriter.insert( text, paragraph, 'end' );\n     *\n     * Or insert before or after another element:\n     *\n     *\t\tconst paragraph = writer.createElement( 'paragraph' );\n     *\t\twriter.insert( paragraph, anotherParagraph, 'after' );\n     *\n     * These parameters works the same way as {@link #createPositionAt `writer.createPositionAt()`}.\n     *\n     * Note that if the item already has parent it will be removed from the previous parent.\n     *\n     * Note that you cannot re-insert a node from a document to a different document or a document fragment. In this case,\n     * `model-writer-insert-forbidden-move` is thrown.\n     *\n     * If you want to move {@link module:engine/model/range~Range range} instead of an\n     * {@link module:engine/model/item~Item item} use {@link module:engine/model/writer~Writer#move `Writer#move()`}.\n     *\n     * **Note:** For a paste-like content insertion mechanism see\n     * {@link module:engine/model/model~Model#insertContent `model.insertContent()`}.\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/documentfragment~DocumentFragment} item Item or document\n     * fragment to insert.\n     * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n     * second parameter is a {@link module:engine/model/item~Item model item}.\n     */\n\n  }, {\n    key: \"insert\",\n    value: function insert(item, itemOrPosition) {\n      var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n      this._assertWriterUsedCorrectly();\n\n      if (item instanceof Text && item.data == '') {\n        return;\n      }\n\n      var position = Position._createAt(itemOrPosition, offset); // If item has a parent already.\n\n\n      if (item.parent) {\n        // We need to check if item is going to be inserted within the same document.\n        if (isSameTree(item.root, position.root)) {\n          // If it's we just need to move it.\n          this.move(Range._createOn(item), position);\n          return;\n        } // If it isn't the same root.\n        else {\n            if (item.root.document) {\n              /**\n               * Cannot move a node from a document to a different tree.\n               * It is forbidden to move a node that was already in a document outside of it.\n               *\n               * @error model-writer-insert-forbidden-move\n               */\n              throw new CKEditorError('model-writer-insert-forbidden-move: ' + 'Cannot move a node from a document to a different tree. ' + 'It is forbidden to move a node that was already in a document outside of it.', this);\n            } else {\n              // Move between two different document fragments or from document fragment to a document is possible.\n              // In that case, remove the item from it's original parent.\n              this.remove(item);\n            }\n          }\n      }\n\n      var version = position.root.document ? position.root.document.version : null;\n      var insert = new InsertOperation(position, item, version);\n\n      if (item instanceof Text) {\n        insert.shouldReceiveAttributes = true;\n      }\n\n      this.batch.addOperation(insert);\n      this.model.applyOperation(insert); // When element is a DocumentFragment we need to move its markers to Document#markers.\n\n      if (item instanceof DocumentFragment) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = item.markers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var _step$value = _slicedToArray(_step.value, 2),\n                markerName = _step$value[0],\n                markerRange = _step$value[1];\n\n            // We need to migrate marker range from DocumentFragment to Document.\n            var rangeRootPosition = Position._createAt(markerRange.root, 0);\n\n            var range = new Range(markerRange.start._getCombined(rangeRootPosition, position), markerRange.end._getCombined(rangeRootPosition, position));\n            var options = {\n              range: range,\n              usingOperation: true,\n              affectsData: true\n            };\n\n            if (this.model.markers.has(markerName)) {\n              this.updateMarker(markerName, options);\n            } else {\n              this.addMarker(markerName, options);\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n              _iterator[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n    }\n    /**\n     * Creates and inserts text on given position. You can optionally set text attributes:\n     *\n     *\t\twriter.insertText( 'foo', position );\n     *\t\twriter.insertText( 'foo', { bold: true }, position );\n     *\n     * Instead of using position you can use parent and offset or define that text should be inserted at the end\n     * or before or after other node:\n     *\n     *\t\t// Inserts 'foo' in paragraph, at offset 5:\n     *\t\twriter.insertText( 'foo', paragraph, 5 );\n     *\t\t// Inserts 'foo' at the end of a paragraph:\n     *\t\twriter.insertText( 'foo', paragraph, 'end' );\n     *\t\t// Inserts 'foo' after an image:\n     *\t\twriter.insertText( 'foo', image, 'after' );\n     *\n     * These parameters work in the same way as {@link #createPositionAt `writer.createPositionAt()`}.\n     *\n     * @param {String} data Text data.\n     * @param {Object} [attributes] Text attributes.\n     * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n     * third parameter is a {@link module:engine/model/item~Item model item}.\n     */\n\n  }, {\n    key: \"insertText\",\n    value: function insertText(text, attributes, itemOrPosition, offset) {\n      if (attributes instanceof DocumentFragment || attributes instanceof Element || attributes instanceof Position) {\n        this.insert(this.createText(text), attributes, itemOrPosition);\n      } else {\n        this.insert(this.createText(text, attributes), itemOrPosition, offset);\n      }\n    }\n    /**\n     * Creates and inserts element on given position. You can optionally set attributes:\n     *\n     *\t\twriter.insertElement( 'paragraph', position );\n     *\t\twriter.insertElement( 'paragraph', { alignment: 'center' }, position );\n     *\n     * Instead of using position you can use parent and offset or define that text should be inserted at the end\n     * or before or after other node:\n     *\n     *\t\t// Inserts paragraph in the root at offset 5:\n     *\t\twriter.insertElement( 'paragraph', root, 5 );\n     *\t\t// Inserts paragraph at the end of a blockquote:\n     *\t\twriter.insertElement( 'paragraph', blockquote, 'end' );\n     *\t\t// Inserts after an image:\n     *\t\twriter.insertElement( 'paragraph', image, 'after' );\n     *\n     * These parameters works the same way as {@link #createPositionAt `writer.createPositionAt()`}.\n     *\n     * @param {String} name Name of the element.\n     * @param {Object} [attributes] Elements attributes.\n     * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n     * third parameter is a {@link module:engine/model/item~Item model item}.\n     */\n\n  }, {\n    key: \"insertElement\",\n    value: function insertElement(name, attributes, itemOrPosition, offset) {\n      if (attributes instanceof DocumentFragment || attributes instanceof Element || attributes instanceof Position) {\n        this.insert(this.createElement(name), attributes, itemOrPosition);\n      } else {\n        this.insert(this.createElement(name, attributes), itemOrPosition, offset);\n      }\n    }\n    /**\n     * Inserts item at the end of the given parent.\n     *\n     *\t\tconst paragraph = writer.createElement( 'paragraph' );\n     *\t\twriter.append( paragraph, root );\n     *\n     * Note that if the item already has parent it will be removed from the previous parent.\n     *\n     * If you want to move {@link module:engine/model/range~Range range} instead of an\n     * {@link module:engine/model/item~Item item} use {@link module:engine/model/writer~Writer#move `Writer#move()`}.\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/documentfragment~DocumentFragment}\n     * item Item or document fragment to insert.\n     * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} parent\n     */\n\n  }, {\n    key: \"append\",\n    value: function append(item, parent) {\n      this.insert(item, parent, 'end');\n    }\n    /**\n     * Creates text node and inserts it at the end of the parent. You can optionally set text attributes:\n     *\n     *\t\twriter.appendText( 'foo', paragraph );\n     *\t\twriter.appendText( 'foo', { bold: true }, paragraph );\n     *\n     * @param {String} text Text data.\n     * @param {Object} [attributes] Text attributes.\n     * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} parent\n     */\n\n  }, {\n    key: \"appendText\",\n    value: function appendText(text, attributes, parent) {\n      if (attributes instanceof DocumentFragment || attributes instanceof Element) {\n        this.insert(this.createText(text), attributes, 'end');\n      } else {\n        this.insert(this.createText(text, attributes), parent, 'end');\n      }\n    }\n    /**\n     * Creates element and inserts it at the end of the parent. You can optionally set attributes:\n     *\n     *\t\twriter.appendElement( 'paragraph', root );\n     *\t\twriter.appendElement( 'paragraph', { alignment: 'center' }, root );\n     *\n     * @param {String} name Name of the element.\n     * @param {Object} [attributes] Elements attributes.\n     * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} parent\n     */\n\n  }, {\n    key: \"appendElement\",\n    value: function appendElement(name, attributes, parent) {\n      if (attributes instanceof DocumentFragment || attributes instanceof Element) {\n        this.insert(this.createElement(name), attributes, 'end');\n      } else {\n        this.insert(this.createElement(name, attributes), parent, 'end');\n      }\n    }\n    /**\n     * Sets value of the attribute with given key on a {@link module:engine/model/item~Item model item}\n     * or on a {@link module:engine/model/range~Range range}.\n     *\n     * @param {String} key Attribute key.\n     * @param {*} value Attribute new value.\n     * @param {module:engine/model/item~Item|module:engine/model/range~Range} itemOrRange\n     * Model item or range on which the attribute will be set.\n     */\n\n  }, {\n    key: \"setAttribute\",\n    value: function setAttribute(key, value, itemOrRange) {\n      this._assertWriterUsedCorrectly();\n\n      if (itemOrRange instanceof Range) {\n        var ranges = itemOrRange.getMinimalFlatRanges();\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = ranges[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var range = _step2.value;\n            setAttributeOnRange(this, key, value, range);\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n              _iterator2[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      } else {\n        setAttributeOnItem(this, key, value, itemOrRange);\n      }\n    }\n    /**\n     * Sets values of attributes on a {@link module:engine/model/item~Item model item}\n     * or on a {@link module:engine/model/range~Range range}.\n     *\n     *\t\twriter.setAttributes( {\n     *\t\t\tbold: true,\n     *\t\t\titalic: true\n     *\t\t}, range );\n     *\n     * @param {Object} attributes Attributes keys and values.\n     * @param {module:engine/model/item~Item|module:engine/model/range~Range} itemOrRange\n     * Model item or range on which the attributes will be set.\n     */\n\n  }, {\n    key: \"setAttributes\",\n    value: function setAttributes(attributes, itemOrRange) {\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = toMap(attributes)[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var _step3$value = _slicedToArray(_step3.value, 2),\n              key = _step3$value[0],\n              val = _step3$value[1];\n\n          this.setAttribute(key, val, itemOrRange);\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n            _iterator3[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n    /**\n     * Removes an attribute with given key from a {@link module:engine/model/item~Item model item}\n     * or from a {@link module:engine/model/range~Range range}.\n     *\n     * @param {String} key Attribute key.\n     * @param {module:engine/model/item~Item|module:engine/model/range~Range} itemOrRange\n     * Model item or range from which the attribute will be removed.\n     */\n\n  }, {\n    key: \"removeAttribute\",\n    value: function removeAttribute(key, itemOrRange) {\n      this._assertWriterUsedCorrectly();\n\n      if (itemOrRange instanceof Range) {\n        var ranges = itemOrRange.getMinimalFlatRanges();\n        var _iteratorNormalCompletion4 = true;\n        var _didIteratorError4 = false;\n        var _iteratorError4 = undefined;\n\n        try {\n          for (var _iterator4 = ranges[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n            var range = _step4.value;\n            setAttributeOnRange(this, key, null, range);\n          }\n        } catch (err) {\n          _didIteratorError4 = true;\n          _iteratorError4 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion4 && _iterator4[\"return\"] != null) {\n              _iterator4[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError4) {\n              throw _iteratorError4;\n            }\n          }\n        }\n      } else {\n        setAttributeOnItem(this, key, null, itemOrRange);\n      }\n    }\n    /**\n     * Removes all attributes from all elements in the range or from the given item.\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/range~Range} itemOrRange\n     * Model item or range from which all attributes will be removed.\n     */\n\n  }, {\n    key: \"clearAttributes\",\n    value: function clearAttributes(itemOrRange) {\n      var _this = this;\n\n      this._assertWriterUsedCorrectly();\n\n      var removeAttributesFromItem = function removeAttributesFromItem(item) {\n        var _iteratorNormalCompletion5 = true;\n        var _didIteratorError5 = false;\n        var _iteratorError5 = undefined;\n\n        try {\n          for (var _iterator5 = item.getAttributeKeys()[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n            var attribute = _step5.value;\n\n            _this.removeAttribute(attribute, item);\n          }\n        } catch (err) {\n          _didIteratorError5 = true;\n          _iteratorError5 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion5 && _iterator5[\"return\"] != null) {\n              _iterator5[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError5) {\n              throw _iteratorError5;\n            }\n          }\n        }\n      };\n\n      if (!(itemOrRange instanceof Range)) {\n        removeAttributesFromItem(itemOrRange);\n      } else {\n        var _iteratorNormalCompletion6 = true;\n        var _didIteratorError6 = false;\n        var _iteratorError6 = undefined;\n\n        try {\n          for (var _iterator6 = itemOrRange.getItems()[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n            var item = _step6.value;\n            removeAttributesFromItem(item);\n          }\n        } catch (err) {\n          _didIteratorError6 = true;\n          _iteratorError6 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion6 && _iterator6[\"return\"] != null) {\n              _iterator6[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError6) {\n              throw _iteratorError6;\n            }\n          }\n        }\n      }\n    }\n    /**\n     * Moves all items in the source range to the target position.\n     *\n     *\t\twriter.move( sourceRange, targetPosition );\n     *\n     * Instead of the target position you can use parent and offset or define that range should be moved to the end\n     * or before or after chosen item:\n     *\n     *\t\t// Moves all items in the range to the paragraph at offset 5:\n     *\t\twriter.move( sourceRange, paragraph, 5 );\n     *\t\t// Moves all items in the range to the end of a blockquote:\n     *\t\twriter.move( sourceRange, blockquote, 'end' );\n     *\t\t// Moves all items in the range to a position after an image:\n     *\t\twriter.move( sourceRange, image, 'after' );\n     *\n     * These parameters works the same way as {@link #createPositionAt `writer.createPositionAt()`}.\n     *\n     * Note that items can be moved only within the same tree. It means that you can move items within the same root\n     * (element or document fragment) or between {@link module:engine/model/document~Document#roots documents roots},\n     * but you can not move items from document fragment to the document or from one detached element to another. Use\n     * {@link module:engine/model/writer~Writer#insert} in such cases.\n     *\n     * @param {module:engine/model/range~Range} range Source range.\n     * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n     * second parameter is a {@link module:engine/model/item~Item model item}.\n     */\n\n  }, {\n    key: \"move\",\n    value: function move(range, itemOrPosition, offset) {\n      this._assertWriterUsedCorrectly();\n\n      if (!(range instanceof Range)) {\n        /**\n         * Invalid range to move.\n         *\n         * @error writer-move-invalid-range\n         */\n        throw new CKEditorError('writer-move-invalid-range: Invalid range to move.', this);\n      }\n\n      if (!range.isFlat) {\n        /**\n         * Range to move is not flat.\n         *\n         * @error writer-move-range-not-flat\n         */\n        throw new CKEditorError('writer-move-range-not-flat: Range to move is not flat.', this);\n      }\n\n      var position = Position._createAt(itemOrPosition, offset); // Do not move anything if the move target is same as moved range start.\n\n\n      if (position.isEqual(range.start)) {\n        return;\n      } // If part of the marker is removed, create additional marker operation for undo purposes.\n\n\n      this._addOperationForAffectedMarkers('move', range);\n\n      if (!isSameTree(range.root, position.root)) {\n        /**\n         * Range is going to be moved within not the same document. Please use\n         * {@link module:engine/model/writer~Writer#insert insert} instead.\n         *\n         * @error writer-move-different-document\n         */\n        throw new CKEditorError('writer-move-different-document: Range is going to be moved between different documents.', this);\n      }\n\n      var version = range.root.document ? range.root.document.version : null;\n      var operation = new MoveOperation(range.start, range.end.offset - range.start.offset, position, version);\n      this.batch.addOperation(operation);\n      this.model.applyOperation(operation);\n    }\n    /**\n     * Removes given model {@link module:engine/model/item~Item item} or {@link module:engine/model/range~Range range}.\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/range~Range} itemOrRange Model item or range to remove.\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(itemOrRange) {\n      this._assertWriterUsedCorrectly();\n\n      var rangeToRemove = itemOrRange instanceof Range ? itemOrRange : Range._createOn(itemOrRange);\n      var ranges = rangeToRemove.getMinimalFlatRanges().reverse();\n      var _iteratorNormalCompletion7 = true;\n      var _didIteratorError7 = false;\n      var _iteratorError7 = undefined;\n\n      try {\n        for (var _iterator7 = ranges[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n          var flat = _step7.value;\n\n          // If part of the marker is removed, create additional marker operation for undo purposes.\n          this._addOperationForAffectedMarkers('move', flat);\n\n          applyRemoveOperation(flat.start, flat.end.offset - flat.start.offset, this.batch, this.model);\n        }\n      } catch (err) {\n        _didIteratorError7 = true;\n        _iteratorError7 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion7 && _iterator7[\"return\"] != null) {\n            _iterator7[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError7) {\n            throw _iteratorError7;\n          }\n        }\n      }\n    }\n    /**\n     * Merges two siblings at the given position.\n     *\n     * Node before and after the position have to be an element. Otherwise `writer-merge-no-element-before` or\n     * `writer-merge-no-element-after` error will be thrown.\n     *\n     * @param {module:engine/model/position~Position} position Position between merged elements.\n     */\n\n  }, {\n    key: \"merge\",\n    value: function merge(position) {\n      this._assertWriterUsedCorrectly();\n\n      var nodeBefore = position.nodeBefore;\n      var nodeAfter = position.nodeAfter; // If part of the marker is removed, create additional marker operation for undo purposes.\n\n      this._addOperationForAffectedMarkers('merge', position);\n\n      if (!(nodeBefore instanceof Element)) {\n        /**\n         * Node before merge position must be an element.\n         *\n         * @error writer-merge-no-element-before\n         */\n        throw new CKEditorError('writer-merge-no-element-before: Node before merge position must be an element.', this);\n      }\n\n      if (!(nodeAfter instanceof Element)) {\n        /**\n         * Node after merge position must be an element.\n         *\n         * @error writer-merge-no-element-after\n         */\n        throw new CKEditorError('writer-merge-no-element-after: Node after merge position must be an element.', this);\n      }\n\n      if (!position.root.document) {\n        this._mergeDetached(position);\n      } else {\n        this._merge(position);\n      }\n    }\n    /**\n     * Shortcut for {@link module:engine/model/model~Model#createPositionFromPath `Model#createPositionFromPath()`}.\n     *\n     * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} root Root of the position.\n     * @param {Array.<Number>} path Position path. See {@link module:engine/model/position~Position#path}.\n     * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone'] Position stickiness.\n     * See {@link module:engine/model/position~PositionStickiness}.\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"createPositionFromPath\",\n    value: function createPositionFromPath(root, path, stickiness) {\n      return this.model.createPositionFromPath(root, path, stickiness);\n    }\n    /**\n     * Shortcut for {@link module:engine/model/model~Model#createPositionAt `Model#createPositionAt()`}.\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n     * first parameter is a {@link module:engine/model/item~Item model item}.\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"createPositionAt\",\n    value: function createPositionAt(itemOrPosition, offset) {\n      return this.model.createPositionAt(itemOrPosition, offset);\n    }\n    /**\n     * Shortcut for {@link module:engine/model/model~Model#createPositionAfter `Model#createPositionAfter()`}.\n     *\n     * @param {module:engine/model/item~Item} item Item after which the position should be placed.\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"createPositionAfter\",\n    value: function createPositionAfter(item) {\n      return this.model.createPositionAfter(item);\n    }\n    /**\n     * Shortcut for {@link module:engine/model/model~Model#createPositionBefore `Model#createPositionBefore()`}.\n     *\n     * @param {module:engine/model/item~Item} item Item after which the position should be placed.\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"createPositionBefore\",\n    value: function createPositionBefore(item) {\n      return this.model.createPositionBefore(item);\n    }\n    /**\n     * Shortcut for {@link module:engine/model/model~Model#createRange `Model#createRange()`}.\n     *\n     * @param {module:engine/model/position~Position} start Start position.\n     * @param {module:engine/model/position~Position} [end] End position. If not set, range will be collapsed at `start` position.\n     * @returns {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"createRange\",\n    value: function createRange(start, end) {\n      return this.model.createRange(start, end);\n    }\n    /**\n     * Shortcut for {@link module:engine/model/model~Model#createRangeIn `Model#createRangeIn()`}.\n     *\n     * @param {module:engine/model/element~Element} element Element which is a parent for the range.\n     * @returns {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"createRangeIn\",\n    value: function createRangeIn(element) {\n      return this.model.createRangeIn(element);\n    }\n    /**\n     * Shortcut for {@link module:engine/model/model~Model#createRangeOn `Model#createRangeOn()`}.\n     *\n     * @param {module:engine/model/element~Element} element Element which is a parent for the range.\n     * @returns {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"createRangeOn\",\n    value: function createRangeOn(element) {\n      return this.model.createRangeOn(element);\n    }\n    /**\n     * Shortcut for {@link module:engine/model/model~Model#createSelection `Model#createSelection()`}.\n     *\n     * @param {module:engine/model/selection~Selectable} selectable\n     * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n     * @param {Object} [options]\n     * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n     * @returns {module:engine/model/selection~Selection}\n     */\n\n  }, {\n    key: \"createSelection\",\n    value: function createSelection(selectable, placeOrOffset, options) {\n      return this.model.createSelection(selectable, placeOrOffset, options);\n    }\n    /**\n     * Performs merge action in a detached tree.\n     *\n     * @private\n     * @param {module:engine/model/position~Position} position Position between merged elements.\n     */\n\n  }, {\n    key: \"_mergeDetached\",\n    value: function _mergeDetached(position) {\n      var nodeBefore = position.nodeBefore;\n      var nodeAfter = position.nodeAfter;\n      this.move(Range._createIn(nodeAfter), Position._createAt(nodeBefore, 'end'));\n      this.remove(nodeAfter);\n    }\n    /**\n     * Performs merge action in a non-detached tree.\n     *\n     * @private\n     * @param {module:engine/model/position~Position} position Position between merged elements.\n     */\n\n  }, {\n    key: \"_merge\",\n    value: function _merge(position) {\n      var targetPosition = Position._createAt(position.nodeBefore, 'end');\n\n      var sourcePosition = Position._createAt(position.nodeAfter, 0);\n\n      var graveyard = position.root.document.graveyard;\n      var graveyardPosition = new Position(graveyard, [0]);\n      var version = position.root.document.version;\n      var merge = new MergeOperation(sourcePosition, position.nodeAfter.maxOffset, targetPosition, graveyardPosition, version);\n      this.batch.addOperation(merge);\n      this.model.applyOperation(merge);\n    }\n    /**\n     * Renames the given element.\n     *\n     * @param {module:engine/model/element~Element} element The element to rename.\n     * @param {String} newName New element name.\n     */\n\n  }, {\n    key: \"rename\",\n    value: function rename(element, newName) {\n      this._assertWriterUsedCorrectly();\n\n      if (!(element instanceof Element)) {\n        /**\n         * Trying to rename an object which is not an instance of Element.\n         *\n         * @error writer-rename-not-element-instance\n         */\n        throw new CKEditorError('writer-rename-not-element-instance: Trying to rename an object which is not an instance of Element.', this);\n      }\n\n      var version = element.root.document ? element.root.document.version : null;\n      var renameOperation = new RenameOperation(Position._createBefore(element), element.name, newName, version);\n      this.batch.addOperation(renameOperation);\n      this.model.applyOperation(renameOperation);\n    }\n    /**\n     * Splits elements starting from the given position and going to the top of the model tree as long as given\n     * `limitElement` is reached. When `limitElement` is not defined then only the parent of the given position will be split.\n     *\n     * The element needs to have a parent. It cannot be a root element nor a document fragment.\n     * The `writer-split-element-no-parent` error will be thrown if you try to split an element with no parent.\n     *\n     * @param {module:engine/model/position~Position} position Position of split.\n     * @param {module:engine/model/node~Node} [limitElement] Stop splitting when this element will be reached.\n     * @returns {Object} result Split result.\n     * @returns {module:engine/model/position~Position} result.position Position between split elements.\n     * @returns {module:engine/model/range~Range} result.range Range that stars from the end of the first split element and ends\n     * at the beginning of the first copy element.\n     */\n\n  }, {\n    key: \"split\",\n    value: function split(position, limitElement) {\n      this._assertWriterUsedCorrectly();\n\n      var splitElement = position.parent;\n\n      if (!splitElement.parent) {\n        /**\n         * Element with no parent can not be split.\n         *\n         * @error writer-split-element-no-parent\n         */\n        throw new CKEditorError('writer-split-element-no-parent: Element with no parent can not be split.', this);\n      } // When limit element is not defined lets set splitElement parent as limit.\n\n\n      if (!limitElement) {\n        limitElement = splitElement.parent;\n      }\n\n      if (!position.parent.getAncestors({\n        includeSelf: true\n      }).includes(limitElement)) {\n        throw new CKEditorError('writer-split-invalid-limit-element: Limit element is not a position ancestor.', this);\n      } // We need to cache elements that will be created as a result of the first split because\n      // we need to create a range from the end of the first split element to the beginning of the\n      // first copy element. This should be handled by LiveRange but it doesn't work on detached nodes.\n\n\n      var firstSplitElement, firstCopyElement;\n\n      do {\n        var version = splitElement.root.document ? splitElement.root.document.version : null;\n        var howMany = splitElement.maxOffset - position.offset;\n        var split = new SplitOperation(position, howMany, null, version);\n        this.batch.addOperation(split);\n        this.model.applyOperation(split); // Cache result of the first split.\n\n        if (!firstSplitElement && !firstCopyElement) {\n          firstSplitElement = splitElement;\n          firstCopyElement = position.parent.nextSibling;\n        }\n\n        position = this.createPositionAfter(position.parent);\n        splitElement = position.parent;\n      } while (splitElement !== limitElement);\n\n      return {\n        position: position,\n        range: new Range(Position._createAt(firstSplitElement, 'end'), Position._createAt(firstCopyElement, 0))\n      };\n    }\n    /**\n     * Wraps the given range with the given element or with a new element (if a string was passed).\n     *\n     * **Note:** range to wrap should be a \"flat range\" (see {@link module:engine/model/range~Range#isFlat `Range#isFlat`}).\n     * If not, an error will be thrown.\n     *\n     * @param {module:engine/model/range~Range} range Range to wrap.\n     * @param {module:engine/model/element~Element|String} elementOrString Element or name of element to wrap the range with.\n     */\n\n  }, {\n    key: \"wrap\",\n    value: function wrap(range, elementOrString) {\n      this._assertWriterUsedCorrectly();\n\n      if (!range.isFlat) {\n        /**\n         * Range to wrap is not flat.\n         *\n         * @error writer-wrap-range-not-flat\n         */\n        throw new CKEditorError('writer-wrap-range-not-flat: Range to wrap is not flat.', this);\n      }\n\n      var element = elementOrString instanceof Element ? elementOrString : new Element(elementOrString);\n\n      if (element.childCount > 0) {\n        /**\n         * Element to wrap with is not empty.\n         *\n         * @error writer-wrap-element-not-empty\n         */\n        throw new CKEditorError('writer-wrap-element-not-empty: Element to wrap with is not empty.', this);\n      }\n\n      if (element.parent !== null) {\n        /**\n         * Element to wrap with is already attached to a tree model.\n         *\n         * @error writer-wrap-element-attached\n         */\n        throw new CKEditorError('writer-wrap-element-attached: Element to wrap with is already attached to tree model.', this);\n      }\n\n      this.insert(element, range.start); // Shift the range-to-wrap because we just inserted an element before that range.\n\n      var shiftedRange = new Range(range.start.getShiftedBy(1), range.end.getShiftedBy(1));\n      this.move(shiftedRange, Position._createAt(element, 0));\n    }\n    /**\n     * Unwraps children of the given element – all its children are moved before it and then the element is removed.\n     * Throws error if you try to unwrap an element which does not have a parent.\n     *\n     * @param {module:engine/model/element~Element} element Element to unwrap.\n     */\n\n  }, {\n    key: \"unwrap\",\n    value: function unwrap(element) {\n      this._assertWriterUsedCorrectly();\n\n      if (element.parent === null) {\n        /**\n         * Trying to unwrap an element which has no parent.\n         *\n         * @error writer-unwrap-element-no-parent\n         */\n        throw new CKEditorError('writer-unwrap-element-no-parent: Trying to unwrap an element which has no parent.', this);\n      }\n\n      this.move(Range._createIn(element), this.createPositionAfter(element));\n      this.remove(element);\n    }\n    /**\n     * Adds a {@link module:engine/model/markercollection~Marker marker}. Marker is a named range, which tracks\n     * changes in the document and updates its range automatically, when model tree changes.\n     *\n     * As the first parameter you can set marker name.\n     *\n     * The required `options.usingOperation` parameter lets you decide if the marker should be managed by operations or not. See\n     * {@link module:engine/model/markercollection~Marker marker class description} to learn about the difference between\n     * markers managed by operations and not-managed by operations.\n     *\n     * The `options.affectsData` parameter, which defaults to `false`, allows you to define if a marker affects the data. It should be\n     * `true` when the marker change changes the data returned by the\n     * {@link module:core/editor/utils/dataapimixin~DataApi#getData `editor.getData()`} method.\n     * When set to `true` it fires the {@link module:engine/model/document~Document#event:change:data `change:data`} event.\n     * When set to `false` it fires the {@link module:engine/model/document~Document#event:change `change`} event.\n     *\n     * Create marker directly base on marker's name:\n     *\n     *\t\taddMarker( markerName, { range, usingOperation: false } );\n     *\n     * Create marker using operation:\n     *\n     *\t\taddMarker( markerName, { range, usingOperation: true } );\n     *\n     * Create marker that affects the editor data:\n     *\n     *\t\taddMarker( markerName, { range, usingOperation: false, affectsData: true } );\n     *\n     * Note: For efficiency reasons, it's best to create and keep as little markers as possible.\n     *\n     * @see module:engine/model/markercollection~Marker\n     * @param {String} name Name of a marker to create - must be unique.\n     * @param {Object} options\n     * @param {Boolean} options.usingOperation Flag indicating that the marker should be added by MarkerOperation.\n     * See {@link module:engine/model/markercollection~Marker#managedUsingOperations}.\n     * @param {module:engine/model/range~Range} options.range Marker range.\n     * @param {Boolean} [options.affectsData=false] Flag indicating that the marker changes the editor data.\n     * @returns {module:engine/model/markercollection~Marker} Marker that was set.\n     */\n\n  }, {\n    key: \"addMarker\",\n    value: function addMarker(name, options) {\n      this._assertWriterUsedCorrectly();\n\n      if (!options || typeof options.usingOperation != 'boolean') {\n        /**\n         * The `options.usingOperation` parameter is required when adding a new marker.\n         *\n         * @error writer-addMarker-no-usingOperation\n         */\n        throw new CKEditorError('writer-addMarker-no-usingOperation: The options.usingOperation parameter is required when adding a new marker.', this);\n      }\n\n      var usingOperation = options.usingOperation;\n      var range = options.range;\n      var affectsData = options.affectsData === undefined ? false : options.affectsData;\n\n      if (this.model.markers.has(name)) {\n        /**\n         * Marker with provided name already exists.\n         *\n         * @error writer-addMarker-marker-exists\n         */\n        throw new CKEditorError('writer-addMarker-marker-exists: Marker with provided name already exists.', this);\n      }\n\n      if (!range) {\n        /**\n         * Range parameter is required when adding a new marker.\n         *\n         * @error writer-addMarker-no-range\n         */\n        throw new CKEditorError('writer-addMarker-no-range: Range parameter is required when adding a new marker.', this);\n      }\n\n      if (!usingOperation) {\n        return this.model.markers._set(name, range, usingOperation, affectsData);\n      }\n\n      applyMarkerOperation(this, name, null, range, affectsData);\n      return this.model.markers.get(name);\n    }\n    /**\n     * Adds, updates or refreshes a {@link module:engine/model/markercollection~Marker marker}. Marker is a named range, which tracks\n     * changes in the document and updates its range automatically, when model tree changes. Still, it is possible to change the\n     * marker's range directly using this method.\n     *\n     * As the first parameter you can set marker name or instance. If none of them is provided, new marker, with a unique\n     * name is created and returned.\n     *\n     * As the second parameter you can set the new marker data or leave this parameter as empty which will just refresh\n     * the marker by triggering downcast conversion for it. Refreshing the marker is useful when you want to change\n     * the marker {@link module:engine/view/element~Element view element} without changing any marker data.\n     *\n     * \t\tlet isCommentActive = false;\n     *\n     * \t\tmodel.conversion.markerToHighlight( {\n     * \t\t\tmodel: 'comment',\n     *\t\t\tview: data => {\n     *\t\t\t\tconst classes = [ 'comment-marker' ];\n     *\n     *\t\t\t\tif ( isCommentActive ) {\n     *\t\t\t\t\tclasses.push( 'comment-marker--active' );\n     *\t\t\t\t}\n     *\n     *\t\t\t\treturn { classes };\n     *\t\t\t}\n     * \t\t} );\n     *\n     * \t\t// Change the property that indicates if marker is displayed as active or not.\n     * \t\tisCommentActive = true;\n     *\n     * \t\t// And refresh the marker to convert it with additional class.\n     * \t\tmodel.change( writer => writer.updateMarker( 'comment' ) );\n     *\n     * The `options.usingOperation` parameter lets you change if the marker should be managed by operations or not. See\n     * {@link module:engine/model/markercollection~Marker marker class description} to learn about the difference between\n     * markers managed by operations and not-managed by operations. It is possible to change this option for an existing marker.\n     *\n     * The `options.affectsData` parameter, which defaults to `false`, allows you to define if a marker affects the data. It should be\n     * `true` when the marker change changes the data returned by\n     * the {@link module:core/editor/utils/dataapimixin~DataApi#getData `editor.getData()`} method.\n     * When set to `true` it fires the {@link module:engine/model/document~Document#event:change:data `change:data`} event.\n     * When set to `false` it fires the {@link module:engine/model/document~Document#event:change `change`} event.\n     *\n     * Update marker directly base on marker's name:\n     *\n     *\t\tupdateMarker( markerName, { range } );\n     *\n     * Update marker using operation:\n     *\n     *\t\tupdateMarker( marker, { range, usingOperation: true } );\n     *\t\tupdateMarker( markerName, { range, usingOperation: true } );\n     *\n     * Change marker's option (start using operations to manage it):\n     *\n     *\t\tupdateMarker( marker, { usingOperation: true } );\n     *\n     * Change marker's option (inform the engine, that the marker does not affect the data anymore):\n     *\n     *\t\tupdateMarker( markerName, { affectsData: false } );\n     *\n     * @see module:engine/model/markercollection~Marker\n     * @param {String} markerOrName Name of a marker to update, or a marker instance.\n     * @param {Object} [options] If options object is not defined then marker will be refreshed by triggering\n     * downcast conversion for this marker with the same data.\n     * @param {module:engine/model/range~Range} [options.range] Marker range to update.\n     * @param {Boolean} [options.usingOperation] Flag indicated whether the marker should be added by MarkerOperation.\n     * See {@link module:engine/model/markercollection~Marker#managedUsingOperations}.\n     * @param {Boolean} [options.affectsData] Flag indicating that the marker changes the editor data.\n     */\n\n  }, {\n    key: \"updateMarker\",\n    value: function updateMarker(markerOrName, options) {\n      this._assertWriterUsedCorrectly();\n\n      var markerName = typeof markerOrName == 'string' ? markerOrName : markerOrName.name;\n      var currentMarker = this.model.markers.get(markerName);\n\n      if (!currentMarker) {\n        /**\n         * Marker with provided name does not exists.\n         *\n         * @error writer-updateMarker-marker-not-exists\n         */\n        throw new CKEditorError('writer-updateMarker-marker-not-exists: Marker with provided name does not exists.', this);\n      }\n\n      if (!options) {\n        this.model.markers._refresh(currentMarker);\n\n        return;\n      }\n\n      var hasUsingOperationDefined = typeof options.usingOperation == 'boolean';\n      var affectsDataDefined = typeof options.affectsData == 'boolean'; // Use previously defined marker's affectsData if the property is not provided.\n\n      var affectsData = affectsDataDefined ? options.affectsData : currentMarker.affectsData;\n\n      if (!hasUsingOperationDefined && !options.range && !affectsDataDefined) {\n        /**\n         * One of the options is required - provide range, usingOperations or affectsData.\n         *\n         * @error writer-updateMarker-wrong-options\n         */\n        throw new CKEditorError('writer-updateMarker-wrong-options: One of the options is required - provide range, usingOperations or affectsData.', this);\n      }\n\n      var currentRange = currentMarker.getRange();\n      var updatedRange = options.range ? options.range : currentRange;\n\n      if (hasUsingOperationDefined && options.usingOperation !== currentMarker.managedUsingOperations) {\n        // The marker type is changed so it's necessary to create proper operations.\n        if (options.usingOperation) {\n          // If marker changes to a managed one treat this as synchronizing existing marker.\n          // Create `MarkerOperation` with `oldRange` set to `null`, so reverse operation will remove the marker.\n          applyMarkerOperation(this, markerName, null, updatedRange, affectsData);\n        } else {\n          // If marker changes to a marker that do not use operations then we need to create additional operation\n          // that removes that marker first.\n          applyMarkerOperation(this, markerName, currentRange, null, affectsData); // Although not managed the marker itself should stay in model and its range should be preserver or changed to passed range.\n\n          this.model.markers._set(markerName, updatedRange, undefined, affectsData);\n        }\n\n        return;\n      } // Marker's type doesn't change so update it accordingly.\n\n\n      if (currentMarker.managedUsingOperations) {\n        applyMarkerOperation(this, markerName, currentRange, updatedRange, affectsData);\n      } else {\n        this.model.markers._set(markerName, updatedRange, undefined, affectsData);\n      }\n    }\n    /**\n     * Removes given {@link module:engine/model/markercollection~Marker marker} or marker with given name.\n     * The marker is removed accordingly to how it has been created, so if the marker was created using operation,\n     * it will be destroyed using operation.\n     *\n     * @param {module:engine/model/markercollection~Marker|String} markerOrName Marker or marker name to remove.\n     */\n\n  }, {\n    key: \"removeMarker\",\n    value: function removeMarker(markerOrName) {\n      this._assertWriterUsedCorrectly();\n\n      var name = typeof markerOrName == 'string' ? markerOrName : markerOrName.name;\n\n      if (!this.model.markers.has(name)) {\n        /**\n         * Trying to remove marker which does not exist.\n         *\n         * @error writer-removeMarker-no-marker\n         */\n        throw new CKEditorError('writer-removeMarker-no-marker: Trying to remove marker which does not exist.', this);\n      }\n\n      var marker = this.model.markers.get(name);\n\n      if (!marker.managedUsingOperations) {\n        this.model.markers._remove(name);\n\n        return;\n      }\n\n      var oldRange = marker.getRange();\n      applyMarkerOperation(this, name, oldRange, null, marker.affectsData);\n    }\n    /**\n     * Sets the document's selection (ranges and direction) to the specified location based on the given\n     * {@link module:engine/model/selection~Selectable selectable} or creates an empty selection if no arguments were passed.\n     *\n     *\t\t// Sets selection to the given range.\n     *\t\tconst range = writer.createRange( start, end );\n     *\t\twriter.setSelection( range );\n     *\n     *\t\t// Sets selection to given ranges.\n     *\t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n     *\t\twriter.setSelection( range );\n     *\n     *\t\t// Sets selection to other selection.\n     *\t\tconst otherSelection = writer.createSelection();\n     *\t\twriter.setSelection( otherSelection );\n     *\n     *\t\t// Sets selection to the given document selection.\n     *\t\tconst documentSelection = model.document.selection;\n     *\t\twriter.setSelection( documentSelection );\n     *\n     *\t\t// Sets collapsed selection at the given position.\n     *\t\tconst position = writer.createPosition( root, path );\n     *\t\twriter.setSelection( position );\n     *\n     *\t\t// Sets collapsed selection at the position of the given node and an offset.\n     *\t\twriter.setSelection( paragraph, offset );\n     *\n     * Creates a range inside an {@link module:engine/model/element~Element element} which starts before the first child of\n    \t * that element and ends after the last child of that element.\n     *\n     *\t\twriter.setSelection( paragraph, 'in' );\n     *\n     * Creates a range on an {@link module:engine/model/item~Item item} which starts before the item and ends just after the item.\n     *\n     *\t\twriter.setSelection( paragraph, 'on' );\n     *\n     *\t\t// Removes all selection's ranges.\n     *\t\twriter.setSelection( null );\n     *\n     * `Writer#setSelection()` allow passing additional options (`backward`) as the last argument.\n     *\n     *\t\t// Sets selection as backward.\n     *\t\twriter.setSelection( range, { backward: true } );\n     *\n     * Throws `writer-incorrect-use` error when the writer is used outside the `change()` block.\n     *\n     * @param {module:engine/model/selection~Selectable} selectable\n     * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n     * @param {Object} [options]\n     * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n     */\n\n  }, {\n    key: \"setSelection\",\n    value: function setSelection(selectable, placeOrOffset, options) {\n      this._assertWriterUsedCorrectly();\n\n      this.model.document.selection._setTo(selectable, placeOrOffset, options);\n    }\n    /**\n     * Moves {@link module:engine/model/documentselection~DocumentSelection#focus} to the specified location.\n     *\n     * The location can be specified in the same form as\n     * {@link #createPositionAt `writer.createPositionAt()`} parameters.\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset=0] Offset or one of the flags. Used only when\n     * first parameter is a {@link module:engine/model/item~Item model item}.\n     */\n\n  }, {\n    key: \"setSelectionFocus\",\n    value: function setSelectionFocus(itemOrPosition, offset) {\n      this._assertWriterUsedCorrectly();\n\n      this.model.document.selection._setFocus(itemOrPosition, offset);\n    }\n    /**\n     * Sets attribute(s) on the selection. If attribute with the same key already is set, it's value is overwritten.\n     *\n     * Using key and value pair:\n     *\n     * \twriter.setSelectionAttribute( 'italic', true );\n     *\n     * Using key-value object:\n     *\n     * \twriter.setSelectionAttribute( { italic: true, bold: false } );\n     *\n     * Using iterable object:\n     *\n     * \twriter.setSelectionAttribute( new Map( [ [ 'italic', true ] ] ) );\n     *\n     * @param {String|Object|Iterable.<*>} keyOrObjectOrIterable Key of the attribute to set\n     * or object / iterable of key => value attribute pairs.\n     * @param {*} [value] Attribute value.\n     */\n\n  }, {\n    key: \"setSelectionAttribute\",\n    value: function setSelectionAttribute(keyOrObjectOrIterable, value) {\n      this._assertWriterUsedCorrectly();\n\n      if (typeof keyOrObjectOrIterable === 'string') {\n        this._setSelectionAttribute(keyOrObjectOrIterable, value);\n      } else {\n        var _iteratorNormalCompletion8 = true;\n        var _didIteratorError8 = false;\n        var _iteratorError8 = undefined;\n\n        try {\n          for (var _iterator8 = toMap(keyOrObjectOrIterable)[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n            var _step8$value = _slicedToArray(_step8.value, 2),\n                key = _step8$value[0],\n                _value = _step8$value[1];\n\n            this._setSelectionAttribute(key, _value);\n          }\n        } catch (err) {\n          _didIteratorError8 = true;\n          _iteratorError8 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion8 && _iterator8[\"return\"] != null) {\n              _iterator8[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError8) {\n              throw _iteratorError8;\n            }\n          }\n        }\n      }\n    }\n    /**\n     * Removes attribute(s) with given key(s) from the selection.\n     *\n     * Remove one attribute:\n     *\n     *\t\twriter.removeSelectionAttribute( 'italic' );\n     *\n     * Remove multiple attributes:\n     *\n     *\t\twriter.removeSelectionAttribute( [ 'italic', 'bold' ] );\n     *\n     * @param {String|Iterable.<String>} keyOrIterableOfKeys Key of the attribute to remove or an iterable of attribute keys to remove.\n     */\n\n  }, {\n    key: \"removeSelectionAttribute\",\n    value: function removeSelectionAttribute(keyOrIterableOfKeys) {\n      this._assertWriterUsedCorrectly();\n\n      if (typeof keyOrIterableOfKeys === 'string') {\n        this._removeSelectionAttribute(keyOrIterableOfKeys);\n      } else {\n        var _iteratorNormalCompletion9 = true;\n        var _didIteratorError9 = false;\n        var _iteratorError9 = undefined;\n\n        try {\n          for (var _iterator9 = keyOrIterableOfKeys[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n            var key = _step9.value;\n\n            this._removeSelectionAttribute(key);\n          }\n        } catch (err) {\n          _didIteratorError9 = true;\n          _iteratorError9 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion9 && _iterator9[\"return\"] != null) {\n              _iterator9[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError9) {\n              throw _iteratorError9;\n            }\n          }\n        }\n      }\n    }\n    /**\n     * Temporarily changes the {@link module:engine/model/documentselection~DocumentSelection#isGravityOverridden gravity}\n     * of the selection from left to right.\n     *\n     * The gravity defines from which direction the selection inherits its attributes. If it's the default left gravity,\n     * then the selection (after being moved by the user) inherits attributes from its left-hand side.\n     * This method allows to temporarily override this behavior by forcing the gravity to the right.\n     *\n     * For the following model fragment:\n     *\n     *\t\t<$text bold=\"true\" linkHref=\"url\">bar[]</$text><$text bold=\"true\">biz</$text>\n     *\n     * * Default gravity: selection will have the `bold` and `linkHref` attributes.\n     * * Overridden gravity: selection will have `bold` attribute.\n     *\n     * **Note**: It returns an unique identifier which is required to restore the gravity. It guarantees the symmetry\n     * of the process.\n     *\n     * @returns {String} The unique id which allows restoring the gravity.\n     */\n\n  }, {\n    key: \"overrideSelectionGravity\",\n    value: function overrideSelectionGravity() {\n      return this.model.document.selection._overrideGravity();\n    }\n    /**\n     * Restores {@link ~Writer#overrideSelectionGravity} gravity to default.\n     *\n     * Restoring the gravity is only possible using the unique identifier returned by\n     * {@link ~Writer#overrideSelectionGravity}. Note that the gravity remains overridden as long as won't be restored\n     * the same number of times it was overridden.\n     *\n     * @param {String} uid The unique id returned by {@link ~Writer#overrideSelectionGravity}.\n     */\n\n  }, {\n    key: \"restoreSelectionGravity\",\n    value: function restoreSelectionGravity(uid) {\n      this.model.document.selection._restoreGravity(uid);\n    }\n    /**\n     * @private\n     * @param {String} key Key of the attribute to remove.\n     * @param {*} value Attribute value.\n     */\n\n  }, {\n    key: \"_setSelectionAttribute\",\n    value: function _setSelectionAttribute(key, value) {\n      var selection = this.model.document.selection; // Store attribute in parent element if the selection is collapsed in an empty node.\n\n      if (selection.isCollapsed && selection.anchor.parent.isEmpty) {\n        var storeKey = DocumentSelection._getStoreAttributeKey(key);\n\n        this.setAttribute(storeKey, value, selection.anchor.parent);\n      }\n\n      selection._setAttribute(key, value);\n    }\n    /**\n     * @private\n     * @param {String} key Key of the attribute to remove.\n     */\n\n  }, {\n    key: \"_removeSelectionAttribute\",\n    value: function _removeSelectionAttribute(key) {\n      var selection = this.model.document.selection; // Remove stored attribute from parent element if the selection is collapsed in an empty node.\n\n      if (selection.isCollapsed && selection.anchor.parent.isEmpty) {\n        var storeKey = DocumentSelection._getStoreAttributeKey(key);\n\n        this.removeAttribute(storeKey, selection.anchor.parent);\n      }\n\n      selection._removeAttribute(key);\n    }\n    /**\n     * Throws `writer-detached-writer-tries-to-modify-model` error when the writer is used outside of the `change()` block.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_assertWriterUsedCorrectly\",\n    value: function _assertWriterUsedCorrectly() {\n      /**\n       * Trying to use a writer outside a {@link module:engine/model/model~Model#change `change()` or\n       * {@link module:engine/model/model~Model#enqueueChange `enqueueChange()`} blocks.\n       *\n       * The writer can only be used inside these blocks which ensures that the model\n       * can only be changed during such \"sessions\".\n       *\n       * @error writer-incorrect-use\n       */\n      if (this.model._currentWriter !== this) {\n        throw new CKEditorError('writer-incorrect-use: Trying to use a writer outside the change() block.', this);\n      }\n    }\n    /**\n     * For given action `type` and `positionOrRange` where the action happens, this function finds all affected markers\n     * and applies a marker operation with the new marker range equal to the current range. Thanks to this, the marker range\n     * can be later correctly processed during undo.\n     *\n     * @private\n     * @param {'move'|'merge'} type Writer action type.\n     * @param {module:engine/model/position~Position|module:engine/model/range~Range} positionOrRange Position or range\n     * where the writer action happens.\n     */\n\n  }, {\n    key: \"_addOperationForAffectedMarkers\",\n    value: function _addOperationForAffectedMarkers(type, positionOrRange) {\n      var _iteratorNormalCompletion10 = true;\n      var _didIteratorError10 = false;\n      var _iteratorError10 = undefined;\n\n      try {\n        for (var _iterator10 = this.model.markers[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n          var marker = _step10.value;\n\n          if (!marker.managedUsingOperations) {\n            continue;\n          }\n\n          var markerRange = marker.getRange();\n          var isAffected = false;\n\n          if (type == 'move') {\n            isAffected = positionOrRange.containsPosition(markerRange.start) || positionOrRange.start.isEqual(markerRange.start) || positionOrRange.containsPosition(markerRange.end) || positionOrRange.end.isEqual(markerRange.end);\n          } else {\n            // if type == 'merge'.\n            var elementBefore = positionOrRange.nodeBefore;\n            var elementAfter = positionOrRange.nodeAfter; //               Start:  <p>Foo[</p><p>Bar]</p>\n            //         After merge:  <p>Foo[Bar]</p>\n            // After undoing split:  <p>Foo</p><p>[Bar]</p>     <-- incorrect, needs remembering for undo.\n            //\n\n            var affectedInLeftElement = markerRange.start.parent == elementBefore && markerRange.start.isAtEnd; //               Start:  <p>[Foo</p><p>]Bar</p>\n            //         After merge:  <p>[Foo]Bar</p>\n            // After undoing split:  <p>[Foo]</p><p>Bar</p>     <-- incorrect, needs remembering for undo.\n            //\n\n            var affectedInRightElement = markerRange.end.parent == elementAfter && markerRange.end.offset == 0; //               Start:  <p>[Foo</p>]<p>Bar</p>\n            //         After merge:  <p>[Foo]Bar</p>\n            // After undoing split:  <p>[Foo]</p><p>Bar</p>     <-- incorrect, needs remembering for undo.\n            //\n\n            var affectedAfterLeftElement = markerRange.end.nodeAfter == elementAfter; //               Start:  <p>Foo</p>[<p>Bar]</p>\n            //         After merge:  <p>Foo[Bar]</p>\n            // After undoing split:  <p>Foo</p><p>[Bar]</p>     <-- incorrect, needs remembering for undo.\n            //\n\n            var affectedBeforeRightElement = markerRange.start.nodeAfter == elementAfter;\n            isAffected = affectedInLeftElement || affectedInRightElement || affectedAfterLeftElement || affectedBeforeRightElement;\n          }\n\n          if (isAffected) {\n            this.updateMarker(marker.name, {\n              range: markerRange\n            });\n          }\n        }\n      } catch (err) {\n        _didIteratorError10 = true;\n        _iteratorError10 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion10 && _iterator10[\"return\"] != null) {\n            _iterator10[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError10) {\n            throw _iteratorError10;\n          }\n        }\n      }\n    }\n  }]);\n\n  return Writer;\n}(); // Sets given attribute to each node in given range. When attribute value is null then attribute will be removed.\n//\n// Because attribute operation needs to have the same attribute value on the whole range, this function splits\n// the range into smaller parts.\n//\n// Given `range` must be flat.\n//\n// @private\n// @param {module:engine/model/writer~Writer} writer\n// @param {String} key Attribute key.\n// @param {*} value Attribute new value.\n// @param {module:engine/model/range~Range} range Model range on which the attribute will be set.\n\n\nexport { Writer as default };\n\nfunction setAttributeOnRange(writer, key, value, range) {\n  var model = writer.model;\n  var doc = model.document; // Position of the last split, the beginning of the new range.\n\n  var lastSplitPosition = range.start; // Currently position in the scanning range. Because we need value after the position, it is not a current\n  // position of the iterator but the previous one (we need to iterate one more time to get the value after).\n\n  var position; // Value before the currently position.\n\n  var valueBefore; // Value after the currently position.\n\n  var valueAfter;\n  var _iteratorNormalCompletion11 = true;\n  var _didIteratorError11 = false;\n  var _iteratorError11 = undefined;\n\n  try {\n    for (var _iterator11 = range.getWalker({\n      shallow: true\n    })[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n      var val = _step11.value;\n      valueAfter = val.item.getAttribute(key); // At the first run of the iterator the position in undefined. We also do not have a valueBefore, but\n      // because valueAfter may be null, valueBefore may be equal valueAfter ( undefined == null ).\n\n      if (position && valueBefore != valueAfter) {\n        // if valueBefore == value there is nothing to change, so we add operation only if these values are different.\n        if (valueBefore != value) {\n          addOperation();\n        }\n\n        lastSplitPosition = position;\n      }\n\n      position = val.nextPosition;\n      valueBefore = valueAfter;\n    } // Because position in the loop is not the iterator position (see let position comment), the last position in\n    // the while loop will be last but one position in the range. We need to check the last position manually.\n\n  } catch (err) {\n    _didIteratorError11 = true;\n    _iteratorError11 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion11 && _iterator11[\"return\"] != null) {\n        _iterator11[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError11) {\n        throw _iteratorError11;\n      }\n    }\n  }\n\n  if (position instanceof Position && position != lastSplitPosition && valueBefore != value) {\n    addOperation();\n  }\n\n  function addOperation() {\n    var range = new Range(lastSplitPosition, position);\n    var version = range.root.document ? doc.version : null;\n    var operation = new AttributeOperation(range, key, valueBefore, value, version);\n    writer.batch.addOperation(operation);\n    model.applyOperation(operation);\n  }\n} // Sets given attribute to the given node. When attribute value is null then attribute will be removed.\n//\n// @private\n// @param {module:engine/model/writer~Writer} writer\n// @param {String} key Attribute key.\n// @param {*} value Attribute new value.\n// @param {module:engine/model/item~Item} item Model item on which the attribute will be set.\n\n\nfunction setAttributeOnItem(writer, key, value, item) {\n  var model = writer.model;\n  var doc = model.document;\n  var previousValue = item.getAttribute(key);\n  var range, operation;\n\n  if (previousValue != value) {\n    var isRootChanged = item.root === item;\n\n    if (isRootChanged) {\n      // If we change attributes of root element, we have to use `RootAttributeOperation`.\n      var version = item.document ? doc.version : null;\n      operation = new RootAttributeOperation(item, key, previousValue, value, version);\n    } else {\n      range = new Range(Position._createBefore(item), writer.createPositionAfter(item));\n\n      var _version = range.root.document ? doc.version : null;\n\n      operation = new AttributeOperation(range, key, previousValue, value, _version);\n    }\n\n    writer.batch.addOperation(operation);\n    model.applyOperation(operation);\n  }\n} // Creates and applies marker operation to {@link module:engine/model/operation/operation~Operation operation}.\n//\n// @private\n// @param {module:engine/model/writer~Writer} writer\n// @param {String} name Marker name.\n// @param {module:engine/model/range~Range} oldRange Marker range before the change.\n// @param {module:engine/model/range~Range} newRange Marker range after the change.\n// @param {Boolean} affectsData\n\n\nfunction applyMarkerOperation(writer, name, oldRange, newRange, affectsData) {\n  var model = writer.model;\n  var doc = model.document;\n  var operation = new MarkerOperation(name, oldRange, newRange, model.markers, affectsData, doc.version);\n  writer.batch.addOperation(operation);\n  model.applyOperation(operation);\n} // Creates `MoveOperation` or `DetachOperation` that removes `howMany` nodes starting from `position`.\n// The operation will be applied on given model instance and added to given operation instance.\n//\n// @private\n// @param {module:engine/model/position~Position} position Position from which nodes are removed.\n// @param {Number} howMany Number of nodes to remove.\n// @param {Batch} batch Batch to which the operation will be added.\n// @param {module:engine/model/model~Model} model Model instance on which operation will be applied.\n\n\nfunction applyRemoveOperation(position, howMany, batch, model) {\n  var operation;\n\n  if (position.root.document) {\n    var doc = model.document;\n    var graveyardPosition = new Position(doc.graveyard, [0]);\n    operation = new MoveOperation(position, howMany, graveyardPosition, doc.version);\n  } else {\n    operation = new DetachOperation(position, howMany);\n  }\n\n  batch.addOperation(operation);\n  model.applyOperation(operation);\n} // Returns `true` if both root elements are the same element or both are documents root elements.\n//\n// Elements in the same tree can be moved (for instance you can move element form one documents root to another, or\n// within the same document fragment), but when element supposed to be moved from document fragment to the document, or\n// to another document it should be removed and inserted to avoid problems with OT. This is because features like undo or\n// collaboration may track changes on the document but ignore changes on detached fragments and should not get\n// unexpected `move` operation.\n\n\nfunction isSameTree(rootA, rootB) {\n  // If it is the same root this is the same tree.\n  if (rootA === rootB) {\n    return true;\n  } // If both roots are documents root it is operation within the document what we still treat as the same tree.\n\n\n  if (rootA instanceof RootElement && rootB instanceof RootElement) {\n    return true;\n  }\n\n  return false;\n}","function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/differ\n */\nimport Position from './position';\nimport Range from './range';\n/**\n * Calculates the difference between two model states.\n *\n * Receives operations that are to be applied on the model document. Marks parts of the model document tree which\n * are changed and saves the state of these elements before the change. Then, it compares saved elements with the\n * changed elements, after all changes are applied on the model document. Calculates the diff between saved\n * elements and new ones and returns a change set.\n */\n\nvar Differ =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a `Differ` instance.\n   *\n   * @param {module:engine/model/markercollection~MarkerCollection} markerCollection Model's marker collection.\n   */\n  function Differ(markerCollection) {\n    _classCallCheck(this, Differ);\n\n    /**\n     * Reference to the model's marker collection.\n     *\n     * @private\n     * @type {module:engine/model/markercollection~MarkerCollection}\n     */\n    this._markerCollection = markerCollection;\n    /**\n     * A map that stores changes that happened in a given element.\n     *\n     * The keys of the map are references to the model elements.\n     * The values of the map are arrays with changes that were done on this element.\n     *\n     * @private\n     * @type {Map}\n     */\n\n    this._changesInElement = new Map();\n    /**\n     * A map that stores \"element's children snapshots\". A snapshot is representing children of a given element before\n     * the first change was applied on that element. Snapshot items are objects with two properties: `name`,\n     * containing the element name (or `'$text'` for a text node) and `attributes` which is a map of the node's attributes.\n     *\n     * @private\n     * @type {Map}\n     */\n\n    this._elementSnapshots = new Map();\n    /**\n     * A map that stores all changed markers.\n     *\n     * The keys of the map are marker names.\n     * The values of the map are objects with the `oldRange` and `newRange` properties. They store the marker range\n     * state before and after the change.\n     *\n     * @private\n     * @type {Map}\n     */\n\n    this._changedMarkers = new Map();\n    /**\n     * Stores the number of changes that were processed. Used to order the changes chronologically. It is important\n     * when changes are sorted.\n     *\n     * @private\n     * @type {Number}\n     */\n\n    this._changeCount = 0;\n    /**\n     * For efficiency purposes, `Differ` stores the change set returned by the differ after {@link #getChanges} call.\n     * Cache is reset each time a new operation is buffered. If the cache has not been reset, {@link #getChanges} will\n     * return the cached value instead of calculating it again.\n     *\n     * This property stores those changes that did not take place in graveyard root.\n     *\n     * @private\n     * @type {Array.<Object>|null}\n     */\n\n    this._cachedChanges = null;\n    /**\n     * For efficiency purposes, `Differ` stores the change set returned by the differ after the {@link #getChanges} call.\n     * The cache is reset each time a new operation is buffered. If the cache has not been reset, {@link #getChanges} will\n     * return the cached value instead of calculating it again.\n     *\n     * This property stores all changes evaluated by `Differ`, including those that took place in the graveyard.\n     *\n     * @private\n     * @type {Array.<Object>|null}\n     */\n\n    this._cachedChangesWithGraveyard = null;\n  }\n  /**\n   * Informs whether there are any changes buffered in `Differ`.\n   *\n   * @readonly\n   * @type {Boolean}\n   */\n\n\n  _createClass(Differ, [{\n    key: \"bufferOperation\",\n\n    /**\n     * Buffers the given operation. An operation has to be buffered before it is executed.\n     *\n     * Operation type is checked and it is checked which nodes it will affect. These nodes are then stored in `Differ`\n     * in the state before the operation is executed.\n     *\n     * @param {module:engine/model/operation/operation~Operation} operation An operation to buffer.\n     */\n    value: function bufferOperation(operation) {\n      // Below we take an operation, check its type, then use its parameters in marking (private) methods.\n      // The general rule is to not mark elements inside inserted element. All inserted elements are re-rendered.\n      // Marking changes in them would cause a \"double\" changing then.\n      //\n      switch (operation.type) {\n        case 'insert':\n          {\n            if (this._isInInsertedElement(operation.position.parent)) {\n              return;\n            }\n\n            this._markInsert(operation.position.parent, operation.position.offset, operation.nodes.maxOffset);\n\n            break;\n          }\n\n        case 'addAttribute':\n        case 'removeAttribute':\n        case 'changeAttribute':\n          {\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n              for (var _iterator = operation.range.getItems()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var item = _step.value;\n\n                if (this._isInInsertedElement(item.parent)) {\n                  continue;\n                }\n\n                this._markAttribute(item);\n              }\n            } catch (err) {\n              _didIteratorError = true;\n              _iteratorError = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n                  _iterator[\"return\"]();\n                }\n              } finally {\n                if (_didIteratorError) {\n                  throw _iteratorError;\n                }\n              }\n            }\n\n            break;\n          }\n\n        case 'remove':\n        case 'move':\n        case 'reinsert':\n          {\n            // When range is moved to the same position then not mark it as a change.\n            // See: https://github.com/ckeditor/ckeditor5-engine/issues/1664.\n            if (operation.sourcePosition.isEqual(operation.targetPosition) || operation.sourcePosition.getShiftedBy(operation.howMany).isEqual(operation.targetPosition)) {\n              return;\n            }\n\n            var sourceParentInserted = this._isInInsertedElement(operation.sourcePosition.parent);\n\n            var targetParentInserted = this._isInInsertedElement(operation.targetPosition.parent);\n\n            if (!sourceParentInserted) {\n              this._markRemove(operation.sourcePosition.parent, operation.sourcePosition.offset, operation.howMany);\n            }\n\n            if (!targetParentInserted) {\n              this._markInsert(operation.targetPosition.parent, operation.getMovedRangeStart().offset, operation.howMany);\n            }\n\n            break;\n          }\n\n        case 'rename':\n          {\n            if (this._isInInsertedElement(operation.position.parent)) {\n              return;\n            }\n\n            this._markRemove(operation.position.parent, operation.position.offset, 1);\n\n            this._markInsert(operation.position.parent, operation.position.offset, 1);\n\n            var range = Range._createFromPositionAndShift(operation.position, 1);\n\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n              for (var _iterator2 = this._markerCollection.getMarkersIntersectingRange(range)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                var marker = _step2.value;\n                var markerRange = marker.getRange();\n                this.bufferMarkerChange(marker.name, markerRange, markerRange, marker.affectsData);\n              }\n            } catch (err) {\n              _didIteratorError2 = true;\n              _iteratorError2 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n                  _iterator2[\"return\"]();\n                }\n              } finally {\n                if (_didIteratorError2) {\n                  throw _iteratorError2;\n                }\n              }\n            }\n\n            break;\n          }\n\n        case 'split':\n          {\n            var splitElement = operation.splitPosition.parent; // Mark that children of the split element were removed.\n\n            if (!this._isInInsertedElement(splitElement)) {\n              this._markRemove(splitElement, operation.splitPosition.offset, operation.howMany);\n            } // Mark that the new element (split copy) was inserted.\n\n\n            if (!this._isInInsertedElement(operation.insertionPosition.parent)) {\n              this._markInsert(operation.insertionPosition.parent, operation.insertionPosition.offset, 1);\n            } // If the split took the element from the graveyard, mark that the element from the graveyard was removed.\n\n\n            if (operation.graveyardPosition) {\n              this._markRemove(operation.graveyardPosition.parent, operation.graveyardPosition.offset, 1);\n            }\n\n            break;\n          }\n\n        case 'merge':\n          {\n            // Mark that the merged element was removed.\n            var mergedElement = operation.sourcePosition.parent;\n\n            if (!this._isInInsertedElement(mergedElement.parent)) {\n              this._markRemove(mergedElement.parent, mergedElement.startOffset, 1);\n            } // Mark that the merged element was inserted into graveyard.\n\n\n            var graveyardParent = operation.graveyardPosition.parent;\n\n            this._markInsert(graveyardParent, operation.graveyardPosition.offset, 1); // Mark that children of merged element were inserted at new parent.\n\n\n            var mergedIntoElement = operation.targetPosition.parent;\n\n            if (!this._isInInsertedElement(mergedIntoElement)) {\n              this._markInsert(mergedIntoElement, operation.targetPosition.offset, mergedElement.maxOffset);\n            }\n\n            break;\n          }\n      } // Clear cache after each buffered operation as it is no longer valid.\n\n\n      this._cachedChanges = null;\n    }\n    /**\n     * Buffers a marker change.\n     *\n     * @param {String} markerName The name of the marker that changed.\n     * @param {module:engine/model/range~Range|null} oldRange Marker range before the change or `null` if the marker has just\n     * been created.\n     * @param {module:engine/model/range~Range|null} newRange Marker range after the change or `null` if the marker was removed.\n     * @param {Boolean} affectsData Flag indicating whether marker affects the editor data.\n     */\n\n  }, {\n    key: \"bufferMarkerChange\",\n    value: function bufferMarkerChange(markerName, oldRange, newRange, affectsData) {\n      var buffered = this._changedMarkers.get(markerName);\n\n      if (!buffered) {\n        this._changedMarkers.set(markerName, {\n          oldRange: oldRange,\n          newRange: newRange,\n          affectsData: affectsData\n        });\n      } else {\n        buffered.newRange = newRange;\n        buffered.affectsData = affectsData;\n\n        if (buffered.oldRange == null && buffered.newRange == null) {\n          // The marker is going to be removed (`newRange == null`) but it did not exist before the first buffered change\n          // (`buffered.oldRange == null`). In this case, do not keep the marker in buffer at all.\n          this._changedMarkers[\"delete\"](markerName);\n        }\n      }\n    }\n    /**\n     * Returns all markers that should be removed as a result of buffered changes.\n     *\n     * @returns {Array.<Object>} Markers to remove. Each array item is an object containing the `name` and `range` properties.\n     */\n\n  }, {\n    key: \"getMarkersToRemove\",\n    value: function getMarkersToRemove() {\n      var result = [];\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this._changedMarkers[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var _step3$value = _slicedToArray(_step3.value, 2),\n              name = _step3$value[0],\n              change = _step3$value[1];\n\n          if (change.oldRange != null) {\n            result.push({\n              name: name,\n              range: change.oldRange\n            });\n          }\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n            _iterator3[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Returns all markers which should be added as a result of buffered changes.\n     *\n     * @returns {Array.<Object>} Markers to add. Each array item is an object containing the `name` and `range` properties.\n     */\n\n  }, {\n    key: \"getMarkersToAdd\",\n    value: function getMarkersToAdd() {\n      var result = [];\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = this._changedMarkers[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var _step4$value = _slicedToArray(_step4.value, 2),\n              name = _step4$value[0],\n              change = _step4$value[1];\n\n          if (change.newRange != null) {\n            result.push({\n              name: name,\n              range: change.newRange\n            });\n          }\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4[\"return\"] != null) {\n            _iterator4[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Returns all markers which changed.\n     *\n     * @returns {Array.<Object>}\n     */\n\n  }, {\n    key: \"getChangedMarkers\",\n    value: function getChangedMarkers() {\n      return Array.from(this._changedMarkers).map(function (item) {\n        return {\n          name: item[0],\n          data: {\n            oldRange: item[1].oldRange,\n            newRange: item[1].newRange\n          }\n        };\n      });\n    }\n    /**\n     * Checks whether some of the buffered changes affect the editor data.\n     *\n     * Types of changes which affect the editor data:\n     *\n     * * model structure changes,\n     * * attribute changes,\n     * * changes of markers which were defined as `affectingData`.\n     *\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"hasDataChanges\",\n    value: function hasDataChanges() {\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = this._changedMarkers[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var _step5$value = _slicedToArray(_step5.value, 2),\n              change = _step5$value[1];\n\n          if (change.affectsData) {\n            return true;\n          }\n        } // If markers do not affect the data, check whether there are some changes in elements.\n\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5[\"return\"] != null) {\n            _iterator5[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      return this._changesInElement.size > 0;\n    }\n    /**\n     * Calculates the diff between the old model tree state (the state before the first buffered operations since the last {@link #reset}\n     * call) and the new model tree state (actual one). It should be called after all buffered operations are executed.\n     *\n     * The diff set is returned as an array of diff items, each describing a change done on the model. The items are sorted by\n     * the position on which the change happened. If a position {@link module:engine/model/position~Position#isBefore is before}\n     * another one, it will be on an earlier index in the diff set.\n     *\n     * Because calculating the diff is a costly operation, the result is cached. If no new operation was buffered since the\n     * previous {@link #getChanges} call, the next call will return the cached value.\n     *\n     * @param {Object} options Additional options.\n     * @param {Boolean} [options.includeChangesInGraveyard=false] If set to `true`, also changes that happened\n     * in the graveyard root will be returned. By default, changes in the graveyard root are not returned.\n     * @returns {Array.<Object>} Diff between the old and the new model tree state.\n     */\n\n  }, {\n    key: \"getChanges\",\n    value: function getChanges() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        includeChangesInGraveyard: false\n      };\n\n      // If there are cached changes, just return them instead of calculating changes again.\n      if (this._cachedChanges) {\n        if (options.includeChangesInGraveyard) {\n          return this._cachedChangesWithGraveyard.slice();\n        } else {\n          return this._cachedChanges.slice();\n        }\n      } // Will contain returned results.\n\n\n      var diffSet = []; // Check all changed elements.\n\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = this._changesInElement.keys()[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var element = _step6.value;\n\n          // Get changes for this element and sort them.\n          var changes = this._changesInElement.get(element).sort(function (a, b) {\n            if (a.offset === b.offset) {\n              if (a.type != b.type) {\n                // If there are multiple changes at the same position, \"remove\" change should be first.\n                // If the order is different, for example, we would first add some nodes and then removed them\n                // (instead of the nodes that we should remove).\n                return a.type == 'remove' ? -1 : 1;\n              }\n\n              return 0;\n            }\n\n            return a.offset < b.offset ? -1 : 1;\n          }); // Get children of this element before any change was applied on it.\n\n\n          var snapshotChildren = this._elementSnapshots.get(element); // Get snapshot of current element's children.\n\n\n          var elementChildren = _getChildrenSnapshot(element.getChildren()); // Generate actions basing on changes done on element.\n\n\n          var actions = _generateActionsFromChanges(snapshotChildren.length, changes);\n\n          var _i3 = 0; // Iterator in `elementChildren` array -- iterates through current children of element.\n\n          var j = 0; // Iterator in `snapshotChildren` array -- iterates through old children of element.\n          // Process every action.\n\n          var _iteratorNormalCompletion7 = true;\n          var _didIteratorError7 = false;\n          var _iteratorError7 = undefined;\n\n          try {\n            for (var _iterator7 = actions[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n              var action = _step7.value;\n\n              if (action === 'i') {\n                // Generate diff item for this element and insert it into the diff set.\n                diffSet.push(this._getInsertDiff(element, _i3, elementChildren[_i3].name));\n                _i3++;\n              } else if (action === 'r') {\n                // Generate diff item for this element and insert it into the diff set.\n                diffSet.push(this._getRemoveDiff(element, _i3, snapshotChildren[j].name));\n                j++;\n              } else if (action === 'a') {\n                // Take attributes from saved and current children.\n                var elementAttributes = elementChildren[_i3].attributes;\n                var snapshotAttributes = snapshotChildren[j].attributes;\n                var range = void 0;\n\n                if (elementChildren[_i3].name == '$text') {\n                  range = new Range(Position._createAt(element, _i3), Position._createAt(element, _i3 + 1));\n                } else {\n                  var index = element.offsetToIndex(_i3);\n                  range = new Range(Position._createAt(element, _i3), Position._createAt(element.getChild(index), 0));\n                } // Generate diff items for this change (there might be multiple attributes changed and\n                // there is a single diff for each of them) and insert them into the diff set.\n\n\n                diffSet.push.apply(diffSet, _toConsumableArray(this._getAttributesDiff(range, snapshotAttributes, elementAttributes)));\n                _i3++;\n                j++;\n              } else {\n                // `action` is 'equal'. Child not changed.\n                _i3++;\n                j++;\n              }\n            }\n          } catch (err) {\n            _didIteratorError7 = true;\n            _iteratorError7 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion7 && _iterator7[\"return\"] != null) {\n                _iterator7[\"return\"]();\n              }\n            } finally {\n              if (_didIteratorError7) {\n                throw _iteratorError7;\n              }\n            }\n          }\n        } // Then, sort the changes by the position (change at position before other changes is first).\n\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6[\"return\"] != null) {\n            _iterator6[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n\n      diffSet.sort(function (a, b) {\n        // If the change is in different root, we don't care much, but we'd like to have all changes in given\n        // root \"together\" in the array. So let's just sort them by the root name. It does not matter which root\n        // will be processed first.\n        if (a.position.root != b.position.root) {\n          return a.position.root.rootName < b.position.root.rootName ? -1 : 1;\n        } // If change happens at the same position...\n\n\n        if (a.position.isEqual(b.position)) {\n          // Keep chronological order of operations.\n          return a.changeCount - b.changeCount;\n        } // If positions differ, position \"on the left\" should be earlier in the result.\n\n\n        return a.position.isBefore(b.position) ? -1 : 1;\n      }); // Glue together multiple changes (mostly on text nodes).\n\n      for (var i = 1; i < diffSet.length; i++) {\n        var prevDiff = diffSet[i - 1];\n        var thisDiff = diffSet[i]; // Glue remove changes if they happen on text on same position.\n\n        var isConsecutiveTextRemove = prevDiff.type == 'remove' && thisDiff.type == 'remove' && prevDiff.name == '$text' && thisDiff.name == '$text' && prevDiff.position.isEqual(thisDiff.position); // Glue insert changes if they happen on text on consecutive fragments.\n\n        var isConsecutiveTextAdd = prevDiff.type == 'insert' && thisDiff.type == 'insert' && prevDiff.name == '$text' && thisDiff.name == '$text' && prevDiff.position.parent == thisDiff.position.parent && prevDiff.position.offset + prevDiff.length == thisDiff.position.offset; // Glue attribute changes if they happen on consecutive fragments and have same key, old value and new value.\n\n        var isConsecutiveAttributeChange = prevDiff.type == 'attribute' && thisDiff.type == 'attribute' && prevDiff.position.parent == thisDiff.position.parent && prevDiff.range.isFlat && thisDiff.range.isFlat && prevDiff.position.offset + prevDiff.length == thisDiff.position.offset && prevDiff.attributeKey == thisDiff.attributeKey && prevDiff.attributeOldValue == thisDiff.attributeOldValue && prevDiff.attributeNewValue == thisDiff.attributeNewValue;\n\n        if (isConsecutiveTextRemove || isConsecutiveTextAdd || isConsecutiveAttributeChange) {\n          diffSet[i - 1].length++;\n\n          if (isConsecutiveAttributeChange) {\n            diffSet[i - 1].range.end = diffSet[i - 1].range.end.getShiftedBy(1);\n          }\n\n          diffSet.splice(i, 1);\n          i--;\n        }\n      } // Remove `changeCount` property from diff items. It is used only for sorting and is internal thing.\n\n\n      for (var _i2 = 0, _diffSet = diffSet; _i2 < _diffSet.length; _i2++) {\n        var item = _diffSet[_i2];\n        delete item.changeCount;\n\n        if (item.type == 'attribute') {\n          delete item.position;\n          delete item.length;\n        }\n      }\n\n      this._changeCount = 0; // Cache changes.\n\n      this._cachedChangesWithGraveyard = diffSet.slice();\n      this._cachedChanges = diffSet.slice().filter(_changesInGraveyardFilter);\n\n      if (options.includeChangesInGraveyard) {\n        return this._cachedChangesWithGraveyard;\n      } else {\n        return this._cachedChanges;\n      }\n    }\n    /**\n     * Resets `Differ`. Removes all buffered changes.\n     */\n\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._changesInElement.clear();\n\n      this._elementSnapshots.clear();\n\n      this._changedMarkers.clear();\n\n      this._cachedChanges = null;\n    }\n    /**\n     * Saves and handles an insert change.\n     *\n     * @private\n     * @param {module:engine/model/element~Element} parent\n     * @param {Number} offset\n     * @param {Number} howMany\n     */\n\n  }, {\n    key: \"_markInsert\",\n    value: function _markInsert(parent, offset, howMany) {\n      var changeItem = {\n        type: 'insert',\n        offset: offset,\n        howMany: howMany,\n        count: this._changeCount++\n      };\n\n      this._markChange(parent, changeItem);\n    }\n    /**\n     * Saves and handles a remove change.\n     *\n     * @private\n     * @param {module:engine/model/element~Element} parent\n     * @param {Number} offset\n     * @param {Number} howMany\n     */\n\n  }, {\n    key: \"_markRemove\",\n    value: function _markRemove(parent, offset, howMany) {\n      var changeItem = {\n        type: 'remove',\n        offset: offset,\n        howMany: howMany,\n        count: this._changeCount++\n      };\n\n      this._markChange(parent, changeItem);\n\n      this._removeAllNestedChanges(parent, offset, howMany);\n    }\n    /**\n     * Saves and handles an attribute change.\n     *\n     * @private\n     * @param {module:engine/model/item~Item} item\n     */\n\n  }, {\n    key: \"_markAttribute\",\n    value: function _markAttribute(item) {\n      var changeItem = {\n        type: 'attribute',\n        offset: item.startOffset,\n        howMany: item.offsetSize,\n        count: this._changeCount++\n      };\n\n      this._markChange(item.parent, changeItem);\n    }\n    /**\n     * Saves and handles a model change.\n     *\n     * @private\n     * @param {module:engine/model/element~Element} parent\n     * @param {Object} changeItem\n     */\n\n  }, {\n    key: \"_markChange\",\n    value: function _markChange(parent, changeItem) {\n      // First, make a snapshot of this parent's children (it will be made only if it was not made before).\n      this._makeSnapshot(parent); // Then, get all changes that already were done on the element (empty array if this is the first change).\n\n\n      var changes = this._getChangesForElement(parent); // Then, look through all the changes, and transform them or the new change.\n\n\n      this._handleChange(changeItem, changes); // Add the new change.\n\n\n      changes.push(changeItem); // Remove incorrect changes. During transformation some change might be, for example, included in another.\n      // In that case, the change will have `howMany` property set to `0` or less. We need to remove those changes.\n\n      for (var i = 0; i < changes.length; i++) {\n        if (changes[i].howMany < 1) {\n          changes.splice(i, 1);\n          i--;\n        }\n      }\n    }\n    /**\n     * Gets an array of changes that have already been saved for a given element.\n     *\n     * @private\n     * @param {module:engine/model/element~Element} element\n     * @returns {Array.<Object>}\n     */\n\n  }, {\n    key: \"_getChangesForElement\",\n    value: function _getChangesForElement(element) {\n      var changes;\n\n      if (this._changesInElement.has(element)) {\n        changes = this._changesInElement.get(element);\n      } else {\n        changes = [];\n\n        this._changesInElement.set(element, changes);\n      }\n\n      return changes;\n    }\n    /**\n     * Saves a children snapshot for a given element.\n     *\n     * @private\n     * @param {module:engine/model/element~Element} element\n     */\n\n  }, {\n    key: \"_makeSnapshot\",\n    value: function _makeSnapshot(element) {\n      if (!this._elementSnapshots.has(element)) {\n        this._elementSnapshots.set(element, _getChildrenSnapshot(element.getChildren()));\n      }\n    }\n    /**\n     * For a given newly saved change, compares it with a change already done on the element and modifies the incoming\n     * change and/or the old change.\n     *\n     * @private\n     * @param {Object} inc Incoming (new) change.\n     * @param {Array.<Object>} changes An array containing all the changes done on that element.\n     */\n\n  }, {\n    key: \"_handleChange\",\n    value: function _handleChange(inc, changes) {\n      // We need a helper variable that will store how many nodes are to be still handled for this change item.\n      // `nodesToHandle` (how many nodes still need to be handled) and `howMany` (how many nodes were affected)\n      // needs to be differentiated.\n      //\n      // This comes up when there are multiple changes that are affected by `inc` change item.\n      //\n      // For example: assume two insert changes: `{ offset: 2, howMany: 1 }` and `{ offset: 5, howMany: 1 }`.\n      // Assume that `inc` change is remove `{ offset: 2, howMany: 2, nodesToHandle: 2 }`.\n      //\n      // Then, we:\n      // - \"forget\" about first insert change (it is \"eaten\" by remove),\n      // - because of that, at the end we will want to remove only one node (`nodesToHandle = 1`),\n      // - but still we have to change offset of the second insert change from `5` to `3`!\n      //\n      // So, `howMany` does not change throughout items transformation and keeps information about how many nodes were affected,\n      // while `nodesToHandle` means how many nodes need to be handled after the change item is transformed by other changes.\n      inc.nodesToHandle = inc.howMany;\n      var _iteratorNormalCompletion8 = true;\n      var _didIteratorError8 = false;\n      var _iteratorError8 = undefined;\n\n      try {\n        for (var _iterator8 = changes[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n          var old = _step8.value;\n          var incEnd = inc.offset + inc.howMany;\n          var oldEnd = old.offset + old.howMany;\n\n          if (inc.type == 'insert') {\n            if (old.type == 'insert') {\n              if (inc.offset <= old.offset) {\n                old.offset += inc.howMany;\n              } else if (inc.offset < oldEnd) {\n                old.howMany += inc.nodesToHandle;\n                inc.nodesToHandle = 0;\n              }\n            }\n\n            if (old.type == 'remove') {\n              if (inc.offset < old.offset) {\n                old.offset += inc.howMany;\n              }\n            }\n\n            if (old.type == 'attribute') {\n              if (inc.offset <= old.offset) {\n                old.offset += inc.howMany;\n              } else if (inc.offset < oldEnd) {\n                // This case is more complicated, because attribute change has to be split into two.\n                // Example (assume that uppercase and lowercase letters mean different attributes):\n                //\n                // initial state:\t\tabcxyz\n                // attribute change:\taBCXYz\n                // incoming insert:\t\taBCfooXYz\n                //\n                // Change ranges cannot intersect because each item has to be described exactly (it was either\n                // not changed, inserted, removed, or its attribute was changed). That's why old attribute\n                // change has to be split and both parts has to be handled separately from now on.\n                var howMany = old.howMany;\n                old.howMany = inc.offset - old.offset; // Add the second part of attribute change to the beginning of processed array so it won't\n                // be processed again in this loop.\n\n                changes.unshift({\n                  type: 'attribute',\n                  offset: incEnd,\n                  howMany: howMany - old.howMany,\n                  count: this._changeCount++\n                });\n              }\n            }\n          }\n\n          if (inc.type == 'remove') {\n            if (old.type == 'insert') {\n              if (incEnd <= old.offset) {\n                old.offset -= inc.howMany;\n              } else if (incEnd <= oldEnd) {\n                if (inc.offset < old.offset) {\n                  var intersectionLength = incEnd - old.offset;\n                  old.offset = inc.offset;\n                  old.howMany -= intersectionLength;\n                  inc.nodesToHandle -= intersectionLength;\n                } else {\n                  old.howMany -= inc.nodesToHandle;\n                  inc.nodesToHandle = 0;\n                }\n              } else {\n                if (inc.offset <= old.offset) {\n                  inc.nodesToHandle -= old.howMany;\n                  old.howMany = 0;\n                } else if (inc.offset < oldEnd) {\n                  var _intersectionLength = oldEnd - inc.offset;\n\n                  old.howMany -= _intersectionLength;\n                  inc.nodesToHandle -= _intersectionLength;\n                }\n              }\n            }\n\n            if (old.type == 'remove') {\n              if (incEnd <= old.offset) {\n                old.offset -= inc.howMany;\n              } else if (inc.offset < old.offset) {\n                inc.nodesToHandle += old.howMany;\n                old.howMany = 0;\n              }\n            }\n\n            if (old.type == 'attribute') {\n              if (incEnd <= old.offset) {\n                old.offset -= inc.howMany;\n              } else if (inc.offset < old.offset) {\n                var _intersectionLength2 = incEnd - old.offset;\n\n                old.offset = inc.offset;\n                old.howMany -= _intersectionLength2;\n              } else if (inc.offset < oldEnd) {\n                if (incEnd <= oldEnd) {\n                  // On first sight in this case we don't need to split attribute operation into two.\n                  // However the changes set is later converted to actions (see `_generateActionsFromChanges`).\n                  // For that reason, no two changes may intersect.\n                  // So we cannot have an attribute change that \"contains\" remove change.\n                  // Attribute change needs to be split.\n                  var _howMany = old.howMany;\n                  old.howMany = inc.offset - old.offset;\n                  var howManyAfter = _howMany - old.howMany - inc.nodesToHandle; // Add the second part of attribute change to the beginning of processed array so it won't\n                  // be processed again in this loop.\n\n                  changes.unshift({\n                    type: 'attribute',\n                    offset: inc.offset,\n                    howMany: howManyAfter,\n                    count: this._changeCount++\n                  });\n                } else {\n                  old.howMany -= oldEnd - inc.offset;\n                }\n              }\n            }\n          }\n\n          if (inc.type == 'attribute') {\n            // In case of attribute change, `howMany` should be kept same as `nodesToHandle`. It's not an error.\n            if (old.type == 'insert') {\n              if (inc.offset < old.offset && incEnd > old.offset) {\n                if (incEnd > oldEnd) {\n                  // This case is similar to a case described when incoming change was insert and old change was attribute.\n                  // See comment above.\n                  //\n                  // This time incoming change is attribute. We need to split incoming change in this case too.\n                  // However this time, the second part of the attribute change needs to be processed further\n                  // because there might be other changes that it collides with.\n                  var attributePart = {\n                    type: 'attribute',\n                    offset: oldEnd,\n                    howMany: incEnd - oldEnd,\n                    count: this._changeCount++\n                  };\n\n                  this._handleChange(attributePart, changes);\n\n                  changes.push(attributePart);\n                }\n\n                inc.nodesToHandle = old.offset - inc.offset;\n                inc.howMany = inc.nodesToHandle;\n              } else if (inc.offset >= old.offset && inc.offset < oldEnd) {\n                if (incEnd > oldEnd) {\n                  inc.nodesToHandle = incEnd - oldEnd;\n                  inc.offset = oldEnd;\n                } else {\n                  inc.nodesToHandle = 0;\n                }\n              }\n            }\n\n            if (old.type == 'remove') {\n              // This is a case when attribute change \"contains\" remove change.\n              // The attribute change needs to be split into two because changes cannot intersect.\n              if (inc.offset < old.offset && incEnd > old.offset) {\n                var _attributePart = {\n                  type: 'attribute',\n                  offset: old.offset,\n                  howMany: incEnd - old.offset,\n                  count: this._changeCount++\n                };\n\n                this._handleChange(_attributePart, changes);\n\n                changes.push(_attributePart);\n                inc.nodesToHandle = old.offset - inc.offset;\n                inc.howMany = inc.nodesToHandle;\n              }\n            }\n\n            if (old.type == 'attribute') {\n              // There are only two conflicting scenarios possible here:\n              if (inc.offset >= old.offset && incEnd <= oldEnd) {\n                // `old` change includes `inc` change, or they are the same.\n                inc.nodesToHandle = 0;\n                inc.howMany = 0;\n                inc.offset = 0;\n              } else if (inc.offset <= old.offset && incEnd >= oldEnd) {\n                // `inc` change includes `old` change.\n                old.howMany = 0;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError8 = true;\n        _iteratorError8 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion8 && _iterator8[\"return\"] != null) {\n            _iterator8[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError8) {\n            throw _iteratorError8;\n          }\n        }\n      }\n\n      inc.howMany = inc.nodesToHandle;\n      delete inc.nodesToHandle;\n    }\n    /**\n     * Returns an object with a single insert change description.\n     *\n     * @private\n     * @param {module:engine/model/element~Element} parent The element in which the change happened.\n     * @param {Number} offset The offset at which change happened.\n     * @param {String} name The name of the removed element or `'$text'` for a character.\n     * @returns {Object} The diff item.\n     */\n\n  }, {\n    key: \"_getInsertDiff\",\n    value: function _getInsertDiff(parent, offset, name) {\n      return {\n        type: 'insert',\n        position: Position._createAt(parent, offset),\n        name: name,\n        length: 1,\n        changeCount: this._changeCount++\n      };\n    }\n    /**\n     * Returns an object with a single remove change description.\n     *\n     * @private\n     * @param {module:engine/model/element~Element} parent The element in which change happened.\n     * @param {Number} offset The offset at which change happened.\n     * @param {String} name The name of the removed element or `'$text'` for a character.\n     * @returns {Object} The diff item.\n     */\n\n  }, {\n    key: \"_getRemoveDiff\",\n    value: function _getRemoveDiff(parent, offset, name) {\n      return {\n        type: 'remove',\n        position: Position._createAt(parent, offset),\n        name: name,\n        length: 1,\n        changeCount: this._changeCount++\n      };\n    }\n    /**\n     * Returns an array of objects where each one is a single attribute change description.\n     *\n     * @private\n     * @param {module:engine/model/range~Range} range The range where the change happened.\n     * @param {Map} oldAttributes A map, map iterator or compatible object that contains attributes before the change.\n     * @param {Map} newAttributes A map, map iterator or compatible object that contains attributes after the change.\n     * @returns {Array.<Object>} An array containing one or more diff items.\n     */\n\n  }, {\n    key: \"_getAttributesDiff\",\n    value: function _getAttributesDiff(range, oldAttributes, newAttributes) {\n      // Results holder.\n      var diffs = []; // Clone new attributes as we will be performing changes on this object.\n\n      newAttributes = new Map(newAttributes); // Look through old attributes.\n\n      var _iteratorNormalCompletion9 = true;\n      var _didIteratorError9 = false;\n      var _iteratorError9 = undefined;\n\n      try {\n        for (var _iterator9 = oldAttributes[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n          var _step9$value = _slicedToArray(_step9.value, 2),\n              key = _step9$value[0],\n              oldValue = _step9$value[1];\n\n          // Check what is the new value of the attribute (or if it was removed).\n          var newValue = newAttributes.has(key) ? newAttributes.get(key) : null; // If values are different (or attribute was removed)...\n\n          if (newValue !== oldValue) {\n            // Add diff item.\n            diffs.push({\n              type: 'attribute',\n              position: range.start,\n              range: range.clone(),\n              length: 1,\n              attributeKey: key,\n              attributeOldValue: oldValue,\n              attributeNewValue: newValue,\n              changeCount: this._changeCount++\n            });\n          } // Prevent returning two diff items for the same change.\n\n\n          newAttributes[\"delete\"](key);\n        } // Look through new attributes that weren't handled above.\n\n      } catch (err) {\n        _didIteratorError9 = true;\n        _iteratorError9 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion9 && _iterator9[\"return\"] != null) {\n            _iterator9[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError9) {\n            throw _iteratorError9;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion10 = true;\n      var _didIteratorError10 = false;\n      var _iteratorError10 = undefined;\n\n      try {\n        for (var _iterator10 = newAttributes[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n          var _step10$value = _slicedToArray(_step10.value, 2),\n              key = _step10$value[0],\n              _newValue = _step10$value[1];\n\n          // Each of them is a new attribute. Add diff item.\n          diffs.push({\n            type: 'attribute',\n            position: range.start,\n            range: range.clone(),\n            length: 1,\n            attributeKey: key,\n            attributeOldValue: null,\n            attributeNewValue: _newValue,\n            changeCount: this._changeCount++\n          });\n        }\n      } catch (err) {\n        _didIteratorError10 = true;\n        _iteratorError10 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion10 && _iterator10[\"return\"] != null) {\n            _iterator10[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError10) {\n            throw _iteratorError10;\n          }\n        }\n      }\n\n      return diffs;\n    }\n    /**\n     * Checks whether given element or any of its parents is an element that is buffered as an inserted element.\n     *\n     * @private\n     * @param {module:engine/model/element~Element} element Element to check.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"_isInInsertedElement\",\n    value: function _isInInsertedElement(element) {\n      var parent = element.parent;\n\n      if (!parent) {\n        return false;\n      }\n\n      var changes = this._changesInElement.get(parent);\n\n      var offset = element.startOffset;\n\n      if (changes) {\n        var _iteratorNormalCompletion11 = true;\n        var _didIteratorError11 = false;\n        var _iteratorError11 = undefined;\n\n        try {\n          for (var _iterator11 = changes[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n            var change = _step11.value;\n\n            if (change.type == 'insert' && offset >= change.offset && offset < change.offset + change.howMany) {\n              return true;\n            }\n          }\n        } catch (err) {\n          _didIteratorError11 = true;\n          _iteratorError11 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion11 && _iterator11[\"return\"] != null) {\n              _iterator11[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError11) {\n              throw _iteratorError11;\n            }\n          }\n        }\n      }\n\n      return this._isInInsertedElement(parent);\n    }\n    /**\n     * Removes deeply all buffered changes that are registered in elements from range specified by `parent`, `offset`\n     * and `howMany`.\n     *\n     * @private\n     * @param {module:engine/model/element~Element} parent\n     * @param {Number} offset\n     * @param {Number} howMany\n     */\n\n  }, {\n    key: \"_removeAllNestedChanges\",\n    value: function _removeAllNestedChanges(parent, offset, howMany) {\n      var range = new Range(Position._createAt(parent, offset), Position._createAt(parent, offset + howMany));\n      var _iteratorNormalCompletion12 = true;\n      var _didIteratorError12 = false;\n      var _iteratorError12 = undefined;\n\n      try {\n        for (var _iterator12 = range.getItems({\n          shallow: true\n        })[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n          var item = _step12.value;\n\n          if (item.is('element')) {\n            this._elementSnapshots[\"delete\"](item);\n\n            this._changesInElement[\"delete\"](item);\n\n            this._removeAllNestedChanges(item, 0, item.maxOffset);\n          }\n        }\n      } catch (err) {\n        _didIteratorError12 = true;\n        _iteratorError12 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion12 && _iterator12[\"return\"] != null) {\n            _iterator12[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError12) {\n            throw _iteratorError12;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"isEmpty\",\n    get: function get() {\n      return this._changesInElement.size == 0 && this._changedMarkers.size == 0;\n    }\n  }]);\n\n  return Differ;\n}(); // Returns an array that is a copy of passed child list with the exception that text nodes are split to one or more\n// objects, each representing one character and attributes set on that character.\n\n\nexport { Differ as default };\n\nfunction _getChildrenSnapshot(children) {\n  var snapshot = [];\n  var _iteratorNormalCompletion13 = true;\n  var _didIteratorError13 = false;\n  var _iteratorError13 = undefined;\n\n  try {\n    for (var _iterator13 = children[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n      var child = _step13.value;\n\n      if (child.is('text')) {\n        for (var i = 0; i < child.data.length; i++) {\n          snapshot.push({\n            name: '$text',\n            attributes: new Map(child.getAttributes())\n          });\n        }\n      } else {\n        snapshot.push({\n          name: child.name,\n          attributes: new Map(child.getAttributes())\n        });\n      }\n    }\n  } catch (err) {\n    _didIteratorError13 = true;\n    _iteratorError13 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion13 && _iterator13[\"return\"] != null) {\n        _iterator13[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError13) {\n        throw _iteratorError13;\n      }\n    }\n  }\n\n  return snapshot;\n} // Generates array of actions for given changes set.\n// It simulates what `diff` function does.\n// Generated actions are:\n// - 'e' for 'equal' - when item at that position did not change,\n// - 'i' for 'insert' - when item at that position was inserted,\n// - 'r' for 'remove' - when item at that position was removed,\n// - 'a' for 'attribute' - when item at that position has it attributes changed.\n//\n// Example (assume that uppercase letters have bold attribute, compare with function code):\n//\n// children before:\tfooBAR\n// children after:\tfoxybAR\n//\n// changes: type: remove, offset: 1, howMany: 1\n//\t\t\ttype: insert, offset: 2, howMany: 2\n//\t\t\ttype: attribute, offset: 4, howMany: 1\n//\n// expected actions: equal (f), remove (o), equal (o), insert (x), insert (y), attribute (b), equal (A), equal (R)\n//\n// steps taken by th script:\n//\n// 1. change = \"type: remove, offset: 1, howMany: 1\"; offset = 0; oldChildrenHandled = 0\n//    1.1 between this change and the beginning is one not-changed node, fill with one equal action, one old child has been handled\n//    1.2 this change removes one node, add one remove action\n//    1.3 change last visited `offset` to 1\n//    1.4 since an old child has been removed, one more old child has been handled\n//    1.5 actions at this point are: equal, remove\n//\n// 2. change = \"type: insert, offset: 2, howMany: 2\"; offset = 1; oldChildrenHandled = 2\n//    2.1 between this change and previous change is one not-changed node, add equal action, another one old children has been handled\n//    2.2 this change inserts two nodes, add two insert actions\n//    2.3 change last visited offset to the end of the inserted range, that is 4\n//    2.4 actions at this point are: equal, remove, equal, insert, insert\n//\n// 3. change = \"type: attribute, offset: 4, howMany: 1\"; offset = 4, oldChildrenHandled = 3\n//    3.1 between this change and previous change are no not-changed nodes\n//    3.2 this change changes one node, add one attribute action\n//    3.3 change last visited `offset` to the end of change range, that is 5\n//    3.4 since an old child has been changed, one more old child has been handled\n//    3.5 actions at this point are: equal, remove, equal, insert, insert, attribute\n//\n// 4. after loop oldChildrenHandled = 4, oldChildrenLength = 6 (fooBAR is 6 characters)\n//    4.1 fill up with two equal actions\n//\n// The result actions are: equal, remove, equal, insert, insert, attribute, equal, equal.\n\n\nfunction _generateActionsFromChanges(oldChildrenLength, changes) {\n  var actions = [];\n  var offset = 0;\n  var oldChildrenHandled = 0; // Go through all buffered changes.\n\n  var _iteratorNormalCompletion14 = true;\n  var _didIteratorError14 = false;\n  var _iteratorError14 = undefined;\n\n  try {\n    for (var _iterator14 = changes[Symbol.iterator](), _step14; !(_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done); _iteratorNormalCompletion14 = true) {\n      var change = _step14.value;\n\n      // First, fill \"holes\" between changes with \"equal\" actions.\n      if (change.offset > offset) {\n        actions.push.apply(actions, _toConsumableArray('e'.repeat(change.offset - offset).split('')));\n        oldChildrenHandled += change.offset - offset;\n      } // Then, fill up actions accordingly to change type.\n\n\n      if (change.type == 'insert') {\n        actions.push.apply(actions, _toConsumableArray('i'.repeat(change.howMany).split(''))); // The last handled offset is after inserted range.\n\n        offset = change.offset + change.howMany;\n      } else if (change.type == 'remove') {\n        actions.push.apply(actions, _toConsumableArray('r'.repeat(change.howMany).split(''))); // The last handled offset is at the position where the nodes were removed.\n\n        offset = change.offset; // We removed `howMany` old nodes, update `oldChildrenHandled`.\n\n        oldChildrenHandled += change.howMany;\n      } else {\n        actions.push.apply(actions, _toConsumableArray('a'.repeat(change.howMany).split(''))); // The last handled offset is at the position after the changed range.\n\n        offset = change.offset + change.howMany; // We changed `howMany` old nodes, update `oldChildrenHandled`.\n\n        oldChildrenHandled += change.howMany;\n      }\n    } // Fill \"equal\" actions at the end of actions set. Use `oldChildrenHandled` to see how many children\n    // has not been changed / removed at the end of their parent.\n\n  } catch (err) {\n    _didIteratorError14 = true;\n    _iteratorError14 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion14 && _iterator14[\"return\"] != null) {\n        _iterator14[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError14) {\n        throw _iteratorError14;\n      }\n    }\n  }\n\n  if (oldChildrenHandled < oldChildrenLength) {\n    actions.push.apply(actions, _toConsumableArray('e'.repeat(oldChildrenLength - oldChildrenHandled).split('')));\n  }\n\n  return actions;\n} // Filter callback for Array.filter that filters out change entries that are in graveyard.\n\n\nfunction _changesInGraveyardFilter(entry) {\n  var posInGy = entry.position && entry.position.root.rootName == '$graveyard';\n  var rangeInGy = entry.range && entry.range.root.rootName == '$graveyard';\n  return !posInGy && !rangeInGy;\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/history\n */\n\n/**\n * `History` keeps the track of all the operations applied to the {@link module:engine/model/document~Document document}.\n */\nvar History =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an empty History instance.\n   */\n  function History() {\n    _classCallCheck(this, History);\n\n    /**\n     * Operations added to the history.\n     *\n     * @protected\n     * @member {Array.<module:engine/model/operation/operation~Operation>} module:engine/model/history~History#_operations\n     */\n    this._operations = [];\n    /**\n     * Holds an information which {@link module:engine/model/operation/operation~Operation operation} undoes which\n     * {@link module:engine/model/operation/operation~Operation operation}.\n     *\n     * Keys of the map are \"undoing operations\", that is operations that undone some other operations. For each key, the\n     * value is an operation that has been undone by the \"undoing operation\".\n     *\n     * @private\n     * @member {Map} module:engine/model/history~History#_undoPairs\n     */\n\n    this._undoPairs = new Map();\n    /**\n     * Holds all undone operations.\n     *\n     * @private\n     * @member {Set.<module:engine/model/operation/operation~Operation>} module:engine/model/history~History#_undoneOperations\n     */\n\n    this._undoneOperations = new Set();\n  }\n  /**\n   * Adds an operation to the history.\n   *\n   * @param {module:engine/model/operation/operation~Operation} operation Operation to add.\n   */\n\n\n  _createClass(History, [{\n    key: \"addOperation\",\n    value: function addOperation(operation) {\n      if (this._operations.includes(operation)) {\n        return;\n      }\n\n      this._operations.push(operation);\n    }\n    /**\n     * Returns operations added to the history.\n     *\n     * @param {Number} [from=0] Base version from which operations should be returned (inclusive). Defaults to `0`, which means\n     * that operations from the first one will be returned.\n     * @param {Number} [to=Number.POSITIVE_INFINITY] Base version up to which operations should be returned (exclusive).\n     * Defaults to `Number.POSITIVE_INFINITY` which means that operations up to the last one will be returned.\n     * @returns {Iterable.<module:engine/model/operation/operation~Operation>} Operations added to the history.\n     */\n\n  }, {\n    key: \"getOperations\",\n    value: function getOperations() {\n      var from = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var to = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Number.POSITIVE_INFINITY;\n\n      if (from < 0) {\n        return [];\n      }\n\n      return this._operations.slice(from, to);\n    }\n    /**\n     * Returns operation from the history that bases on given `baseVersion`.\n     *\n     * @param {Number} baseVersion Base version of the operation to get.\n     * @returns {module:engine/model/operation/operation~Operation|null} Operation with given base version or `null` if\n     * there is no such operation in history.\n     */\n\n  }, {\n    key: \"getOperation\",\n    value: function getOperation(baseVersion) {\n      return this._operations[baseVersion];\n    }\n    /**\n     * Marks in history that one operation is an operation that is undoing the other operation. By marking operation this way,\n     * history is keeping more context information about operations, which helps in operational transformation.\n     *\n     * @param {module:engine/model/operation/operation~Operation} undoneOperation Operation which is undone by `undoingOperation`.\n     * @param {module:engine/model/operation/operation~Operation} undoingOperation Operation which undoes `undoneOperation`.\n     */\n\n  }, {\n    key: \"setOperationAsUndone\",\n    value: function setOperationAsUndone(undoneOperation, undoingOperation) {\n      this._undoPairs.set(undoingOperation, undoneOperation);\n\n      this._undoneOperations.add(undoneOperation);\n    }\n    /**\n     * Checks whether given `operation` is undoing any other operation.\n     *\n     * @param {module:engine/model/operation/operation~Operation} operation Operation to check.\n     * @returns {Boolean} `true` if given `operation` is undoing any other operation, `false` otherwise.\n     */\n\n  }, {\n    key: \"isUndoingOperation\",\n    value: function isUndoingOperation(operation) {\n      return this._undoPairs.has(operation);\n    }\n    /**\n     * Checks whether given `operation` has been undone by any other operation.\n     *\n     * @param {module:engine/model/operation/operation~Operation} operation Operation to check.\n     * @returns {Boolean} `true` if given `operation` has been undone any other operation, `false` otherwise.\n     */\n\n  }, {\n    key: \"isUndoneOperation\",\n    value: function isUndoneOperation(operation) {\n      return this._undoneOperations.has(operation);\n    }\n    /**\n     * For given `undoingOperation`, returns the operation which has been undone by it.\n     *\n     * @param {module:engine/model/operation/operation~Operation} undoingOperation\n     * @returns {module:engine/model/operation/operation~Operation|undefined} Operation that has been undone by given\n     * `undoingOperation` or `undefined` if given `undoingOperation` is not undoing any other operation.\n     */\n\n  }, {\n    key: \"getUndoneOperation\",\n    value: function getUndoneOperation(undoingOperation) {\n      return this._undoPairs.get(undoingOperation);\n    }\n  }]);\n\n  return History;\n}();\n\nexport { History as default };","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * Set of utils to handle unicode characters.\n *\n * @module utils/unicode\n */\n\n/**\n * Checks whether given `character` is a combining mark.\n *\n * @param {String} character Character to check.\n * @returns {Boolean}\n */\nexport function isCombiningMark(character) {\n  return !!character && character.length == 1 && /[\\u0300-\\u036f\\u1ab0-\\u1aff\\u1dc0-\\u1dff\\u20d0-\\u20ff\\ufe20-\\ufe2f]/.test(character);\n}\n/**\n * Checks whether given `character` is a high half of surrogate pair.\n *\n * Using UTF-16 terminology, a surrogate pair denotes UTF-16 character using two UTF-8 characters. The surrogate pair\n * consist of high surrogate pair character followed by low surrogate pair character.\n *\n * @param {String} character Character to check.\n * @returns {Boolean}\n */\n\nexport function isHighSurrogateHalf(character) {\n  return !!character && character.length == 1 && /[\\ud800-\\udbff]/.test(character);\n}\n/**\n * Checks whether given `character` is a low half of surrogate pair.\n *\n * Using UTF-16 terminology, a surrogate pair denotes UTF-16 character using two UTF-8 characters. The surrogate pair\n * consist of high surrogate pair character followed by low surrogate pair character.\n *\n * @param {String} character Character to check.\n * @returns {Boolean}\n */\n\nexport function isLowSurrogateHalf(character) {\n  return !!character && character.length == 1 && /[\\udc00-\\udfff]/.test(character);\n}\n/**\n * Checks whether given offset in a string is inside a surrogate pair (between two surrogate halves).\n *\n * @param {String} string String to check.\n * @param {Number} offset Offset to check.\n * @returns {Boolean}\n */\n\nexport function isInsideSurrogatePair(string, offset) {\n  return isHighSurrogateHalf(string.charAt(offset - 1)) && isLowSurrogateHalf(string.charAt(offset));\n}\n/**\n * Checks whether given offset in a string is between base character and combining mark or between two combining marks.\n *\n * @param {String} string String to check.\n * @param {Number} offset Offset to check.\n * @returns {Boolean}\n */\n\nexport function isInsideCombinedSymbol(string, offset) {\n  return isCombiningMark(string.charAt(offset));\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/document\n */\nimport Differ from './differ';\nimport RootElement from './rootelement';\nimport History from './history';\nimport DocumentSelection from './documentselection';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport { isInsideSurrogatePair, isInsideCombinedSymbol } from '@ckeditor/ckeditor5-utils/src/unicode';\nimport { clone } from 'lodash-es';\nvar graveyardName = '$graveyard';\n/**\n * Data model's document. It contains the model's structure, its selection and the history of changes.\n *\n * Read more about working with the model in\n * {@glink framework/guides/architecture/editing-engine#model introduction to the the editing engine's architecture}.\n *\n * Usually, the document contains just one {@link module:engine/model/document~Document#roots root element}, so\n * you can retrieve it by just calling {@link module:engine/model/document~Document#getRoot} without specifying its name:\n *\n *\t\tmodel.document.getRoot(); // -> returns the main root\n *\n * However, the document may contain multiple roots – e.g. when the editor has multiple editable areas\n * (e.g. a title and a body of a message).\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n */\n\nvar Document =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an empty document instance with no {@link #roots} (other than\n   * the {@link #graveyard graveyard root}).\n   */\n  function Document(model) {\n    var _this = this;\n\n    _classCallCheck(this, Document);\n\n    /**\n     * The {@link module:engine/model/model~Model model} that the document is a part of.\n     *\n     * @readonly\n     * @type {module:engine/model/model~Model}\n     */\n    this.model = model;\n    /**\n     * The document version. It starts from `0` and every operation increases the version number. It is used to ensure that\n     * operations are applied on a proper document version.\n     *\n     * If the {@link module:engine/model/operation/operation~Operation#baseVersion base version} does not match the document version,\n     * a {@link module:utils/ckeditorerror~CKEditorError model-document-applyOperation-wrong-version} error is thrown.\n     *\n     * @readonly\n     * @type {Number}\n     */\n\n    this.version = 0;\n    /**\n     * The document's history.\n     *\n     * @readonly\n     * @type {module:engine/model/history~History}\n     */\n\n    this.history = new History(this);\n    /**\n     * The selection in this document.\n     *\n     * @readonly\n     * @type {module:engine/model/documentselection~DocumentSelection}\n     */\n\n    this.selection = new DocumentSelection(this);\n    /**\n     * A list of roots that are owned and managed by this document. Use {@link #createRoot} and\n     * {@link #getRoot} to manipulate it.\n     *\n     * @readonly\n     * @type {module:utils/collection~Collection}\n     */\n\n    this.roots = new Collection({\n      idProperty: 'rootName'\n    });\n    /**\n     * The model differ object. Its role is to buffer changes done on the model document and then calculate a diff of those changes.\n     *\n     * @readonly\n     * @type {module:engine/model/differ~Differ}\n     */\n\n    this.differ = new Differ(model.markers);\n    /**\n     * Post-fixer callbacks registered to the model document.\n     *\n     * @private\n     * @type {Set.<Function>}\n     */\n\n    this._postFixers = new Set();\n    /**\n     * A boolean indicates whether the selection has changed until\n     *\n     * @private\n     * @type {Boolean}\n     */\n\n    this._hasSelectionChangedFromTheLastChangeBlock = false; // Graveyard tree root. Document always have a graveyard root, which stores removed nodes.\n\n    this.createRoot('$root', graveyardName); // First, if the operation is a document operation check if it's base version is correct.\n\n    this.listenTo(model, 'applyOperation', function (evt, args) {\n      var operation = args[0];\n\n      if (operation.isDocumentOperation && operation.baseVersion !== _this.version) {\n        /**\n         * Only operations with matching versions can be applied.\n         *\n         * @error document-applyOperation-wrong-version\n         * @param {module:engine/model/operation/operation~Operation} operation\n         */\n        throw new CKEditorError('model-document-applyOperation-wrong-version: Only operations with matching versions can be applied.', _this, {\n          operation: operation\n        });\n      }\n    }, {\n      priority: 'highest'\n    }); // Then, still before an operation is applied on model, buffer the change in differ.\n\n    this.listenTo(model, 'applyOperation', function (evt, args) {\n      var operation = args[0];\n\n      if (operation.isDocumentOperation) {\n        _this.differ.bufferOperation(operation);\n      }\n    }, {\n      priority: 'high'\n    }); // After the operation is applied, bump document's version and add the operation to the history.\n\n    this.listenTo(model, 'applyOperation', function (evt, args) {\n      var operation = args[0];\n\n      if (operation.isDocumentOperation) {\n        _this.version++;\n\n        _this.history.addOperation(operation);\n      }\n    }, {\n      priority: 'low'\n    }); // Listen to selection changes. If selection changed, mark it.\n\n    this.listenTo(this.selection, 'change', function () {\n      _this._hasSelectionChangedFromTheLastChangeBlock = true;\n    }); // Buffer marker changes.\n    // This is not covered in buffering operations because markers may change outside of them (when they\n    // are modified using `model.markers` collection, not through `MarkerOperation`).\n\n    this.listenTo(model.markers, 'update', function (evt, marker, oldRange, newRange) {\n      // Whenever marker is updated, buffer that change.\n      _this.differ.bufferMarkerChange(marker.name, oldRange, newRange, marker.affectsData);\n\n      if (oldRange === null) {\n        // If this is a new marker, add a listener that will buffer change whenever marker changes.\n        marker.on('change', function (evt, oldRange) {\n          _this.differ.bufferMarkerChange(marker.name, oldRange, marker.getRange(), marker.affectsData);\n        });\n      }\n    });\n  }\n  /**\n   * The graveyard tree root. A document always has a graveyard root that stores removed nodes.\n   *\n   * @readonly\n   * @member {module:engine/model/rootelement~RootElement}\n   */\n\n\n  _createClass(Document, [{\n    key: \"createRoot\",\n\n    /**\n     * Creates a new root.\n     *\n     * @param {String} [elementName='$root'] The element name. Defaults to `'$root'` which also has some basic schema defined\n     * (`$block`s are allowed inside the `$root`). Make sure to define a proper schema if you use a different name.\n     * @param {String} [rootName='main'] A unique root name.\n     * @returns {module:engine/model/rootelement~RootElement} The created root.\n     */\n    value: function createRoot() {\n      var elementName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '$root';\n      var rootName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'main';\n\n      if (this.roots.get(rootName)) {\n        /**\n         * A root with the specified name already exists.\n         *\n         * @error model-document-createRoot-name-exists\n         * @param {module:engine/model/document~Document} doc\n         * @param {String} name\n         */\n        throw new CKEditorError('model-document-createRoot-name-exists: Root with specified name already exists.', this, {\n          name: rootName\n        });\n      }\n\n      var root = new RootElement(this, elementName, rootName);\n      this.roots.add(root);\n      return root;\n    }\n    /**\n     * Removes all event listeners set by the document instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.selection.destroy();\n      this.stopListening();\n    }\n    /**\n     * Returns a root by its name.\n     *\n     * @param {String} [name='main'] A unique root name.\n     * @returns {module:engine/model/rootelement~RootElement|null} The root registered under a given name or `null` when\n     * there is no root with the given name.\n     */\n\n  }, {\n    key: \"getRoot\",\n    value: function getRoot() {\n      var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'main';\n      return this.roots.get(name);\n    }\n    /**\n     * Returns an array with names of all roots (without the {@link #graveyard}) added to the document.\n     *\n     * @returns {Array.<String>} Roots names.\n     */\n\n  }, {\n    key: \"getRootNames\",\n    value: function getRootNames() {\n      return Array.from(this.roots, function (root) {\n        return root.rootName;\n      }).filter(function (name) {\n        return name != graveyardName;\n      });\n    }\n    /**\n     * Used to register a post-fixer callback. A post-fixer mechanism guarantees that the features\n     * will operate on a correct model state.\n     *\n     * An execution of a feature may lead to an incorrect document tree state. The callbacks are used to fix the document tree after\n     * it has changed. Post-fixers are fired just after all changes from the outermost change block were applied but\n     * before the {@link module:engine/model/document~Document#event:change change event} is fired. If a post-fixer callback made\n     * a change, it should return `true`. When this happens, all post-fixers are fired again to check if something else should\n     * not be fixed in the new document tree state.\n     *\n     * As a parameter, a post-fixer callback receives a {@link module:engine/model/writer~Writer writer} instance connected with the\n     * executed changes block. Thanks to that, all changes done by the callback will be added to the same\n     * {@link module:engine/model/batch~Batch batch} (and undo step) as the original changes. This makes post-fixer changes transparent\n     * for the user.\n     *\n     * An example of a post-fixer is a callback that checks if all the data were removed from the editor. If so, the\n     * callback should add an empty paragraph so that the editor is never empty:\n     *\n     *\t\tdocument.registerPostFixer( writer => {\n     *\t\t\tconst changes = document.differ.getChanges();\n     *\n     *\t\t\t// Check if the changes lead to an empty root in the editor.\n     *\t\t\tfor ( const entry of changes ) {\n     *\t\t\t\tif ( entry.type == 'remove' && entry.position.root.isEmpty ) {\n     *\t\t\t\t\twriter.insertElement( 'paragraph', entry.position.root, 0 );\n     *\n     *\t\t\t\t\t// It is fine to return early, even if multiple roots would need to be fixed.\n     *\t\t\t\t\t// All post-fixers will be fired again, so if there are more empty roots, those will be fixed, too.\n     *\t\t\t\t\treturn true;\n     *\t\t\t\t}\n     *\t\t\t}\n     *\t\t} );\n     *\n     * @param {Function} postFixer\n     */\n\n  }, {\n    key: \"registerPostFixer\",\n    value: function registerPostFixer(postFixer) {\n      this._postFixers.add(postFixer);\n    }\n    /**\n     * A custom `toJSON()` method to solve child-parent circular dependencies.\n     *\n     * @returns {Object} A clone of this object with the document property changed to a string.\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = clone(this); // Due to circular references we need to remove parent reference.\n\n      json.selection = '[engine.model.DocumentSelection]';\n      json.model = '[engine.model.Model]';\n      return json;\n    }\n    /**\n     * Check if there were any changes done on document, and if so, call post-fixers,\n     * fire `change` event for features and conversion and then reset the differ.\n     * Fire `change:data` event when at least one operation or buffered marker changes the data.\n     *\n     * @protected\n     * @fires change\n     * @fires change:data\n     * @param {module:engine/model/writer~Writer} writer The writer on which post-fixers will be called.\n     */\n\n  }, {\n    key: \"_handleChangeBlock\",\n    value: function _handleChangeBlock(writer) {\n      if (this._hasDocumentChangedFromTheLastChangeBlock()) {\n        this._callPostFixers(writer); // Refresh selection attributes according to the final position in the model after the change.\n\n\n        this.selection.refresh();\n\n        if (this.differ.hasDataChanges()) {\n          this.fire('change:data', writer.batch);\n        } else {\n          this.fire('change', writer.batch);\n        } // Theoretically, it is not necessary to refresh selection after change event because\n        // post-fixers are the last who should change the model, but just in case...\n\n\n        this.selection.refresh();\n        this.differ.reset();\n      }\n\n      this._hasSelectionChangedFromTheLastChangeBlock = false;\n    }\n    /**\n     * Returns whether there is a buffered change or if the selection has changed from the last\n     * {@link module:engine/model/model~Model#enqueueChange `enqueueChange()` block}\n     * or {@link module:engine/model/model~Model#change `change()` block}.\n     *\n     * @protected\n     * @returns {Boolean} Returns `true` if document has changed from the last `change()` or `enqueueChange()` block.\n     */\n\n  }, {\n    key: \"_hasDocumentChangedFromTheLastChangeBlock\",\n    value: function _hasDocumentChangedFromTheLastChangeBlock() {\n      return !this.differ.isEmpty || this._hasSelectionChangedFromTheLastChangeBlock;\n    }\n    /**\n     * Returns the default root for this document which is either the first root that was added to the document using\n     * {@link #createRoot} or the {@link #graveyard graveyard root} if no other roots were created.\n     *\n     * @protected\n     * @returns {module:engine/model/rootelement~RootElement} The default root for this document.\n     */\n\n  }, {\n    key: \"_getDefaultRoot\",\n    value: function _getDefaultRoot() {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.roots[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var root = _step.value;\n\n          if (root !== this.graveyard) {\n            return root;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return this.graveyard;\n    }\n    /**\n     * Returns the default range for this selection. The default range is a collapsed range that starts and ends\n     * at the beginning of this selection's document {@link #_getDefaultRoot default root}.\n     *\n     * @protected\n     * @returns {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"_getDefaultRange\",\n    value: function _getDefaultRange() {\n      var defaultRoot = this._getDefaultRoot();\n\n      var model = this.model;\n      var schema = model.schema; // Find the first position where the selection can be put.\n\n      var position = model.createPositionFromPath(defaultRoot, [0]);\n      var nearestRange = schema.getNearestSelectionRange(position); // If valid selection range is not found - return range collapsed at the beginning of the root.\n\n      return nearestRange || model.createRange(position);\n    }\n    /**\n     * Checks whether a given {@link module:engine/model/range~Range range} is a valid range for\n     * the {@link #selection document's selection}.\n     *\n     * @private\n     * @param {module:engine/model/range~Range} range A range to check.\n     * @returns {Boolean} `true` if `range` is valid, `false` otherwise.\n     */\n\n  }, {\n    key: \"_validateSelectionRange\",\n    value: function _validateSelectionRange(range) {\n      return validateTextNodePosition(range.start) && validateTextNodePosition(range.end);\n    }\n    /**\n     * Performs post-fixer loops. Executes post-fixer callbacks as long as none of them has done any changes to the model.\n     *\n     * @private\n     * @param {module:engine/model/writer~Writer} writer The writer on which post-fixer callbacks will be called.\n     */\n\n  }, {\n    key: \"_callPostFixers\",\n    value: function _callPostFixers(writer) {\n      var wasFixed = false;\n\n      do {\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = this._postFixers[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var callback = _step2.value;\n            // Ensure selection attributes are up to date before each post-fixer.\n            // https://github.com/ckeditor/ckeditor5-engine/issues/1673.\n            //\n            // It might be good to refresh the selection after each operation but at the moment it leads\n            // to losing attributes for composition or and spell checking\n            // https://github.com/ckeditor/ckeditor5-typing/issues/188\n            this.selection.refresh();\n            wasFixed = callback(writer);\n\n            if (wasFixed) {\n              break;\n            }\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n              _iterator2[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      } while (wasFixed);\n    }\n    /**\n     * Fired after each {@link module:engine/model/model~Model#enqueueChange `enqueueChange()` block} or the outermost\n     * {@link module:engine/model/model~Model#change `change()` block} was executed and the document was changed\n     * during that block's execution.\n     *\n     * The changes which this event will cover include:\n     *\n     * * document structure changes,\n     * * selection changes,\n     * * marker changes.\n     *\n     * If you want to be notified about all these changes, then simply listen to this event like this:\n     *\n     *\t\tmodel.document.on( 'change', () => {\n     *\t\t\tconsole.log( 'The document has changed!' );\n     *\t\t} );\n     *\n     * If, however, you only want to be notified about the data changes, then use the\n     * {@link module:engine/model/document~Document#event:change:data change:data} event,\n     * which is fired for document structure changes and marker changes (which affects the data).\n     *\n     *\t\tmodel.document.on( 'change:data', () => {\n     *\t\t\tconsole.log( 'The data has changed!' );\n     *\t\t} );\n     *\n     * @event change\n     * @param {module:engine/model/batch~Batch} batch The batch that was used in the executed changes block.\n     */\n\n    /**\n     * It is a narrower version of the {@link #event:change} event. It is fired for changes which\n     * affect the editor data. This is:\n     *\n     * * document structure changes,\n     * * marker changes (which affects the data).\n     *\n     * If you want to be notified about the data changes, then listen to this event:\n     *\n     *\t\tmodel.document.on( 'change:data', () => {\n     *\t\t\tconsole.log( 'The data has changed!' );\n     *\t\t} );\n     *\n     * If you would like to listen to all document changes, then check out the\n     * {@link module:engine/model/document~Document#event:change change} event.\n     *\n     * @event change:data\n     * @param {module:engine/model/batch~Batch} batch The batch that was used in the executed changes block.\n     */\n\n  }, {\n    key: \"graveyard\",\n    get: function get() {\n      return this.getRoot(graveyardName);\n    }\n  }]);\n\n  return Document;\n}();\n\nexport { Document as default };\nmix(Document, EmitterMixin); // Checks whether given range boundary position is valid for document selection, meaning that is not between\n// unicode surrogate pairs or base character and combining marks.\n\nfunction validateTextNodePosition(rangeBoundary) {\n  var textNode = rangeBoundary.textNode;\n\n  if (textNode) {\n    var data = textNode.data;\n    var offset = rangeBoundary.offset - textNode.startOffset;\n    return !isInsideSurrogatePair(data, offset) && !isInsideCombinedSymbol(data, offset);\n  }\n\n  return true;\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/markercollection\n */\nimport LiveRange from './liverange';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n/**\n * The collection of all {@link module:engine/model/markercollection~Marker markers} attached to the document.\n * It lets you {@link module:engine/model/markercollection~MarkerCollection#get get} markers or track them using\n * {@link module:engine/model/markercollection~MarkerCollection#event:update} event.\n *\n * To create, change or remove makers use {@link module:engine/model/writer~Writer model writers'} methods:\n * {@link module:engine/model/writer~Writer#addMarker} or {@link module:engine/model/writer~Writer#removeMarker}. Since\n * the writer is the only proper way to change the data model it is not possible to change markers directly using this\n * collection. All markers created by the writer will be automatically added to this collection.\n *\n * By default there is one marker collection available as {@link module:engine/model/model~Model#markers model property}.\n *\n * @see module:engine/model/markercollection~Marker\n */\n\nvar MarkerCollection =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a markers collection.\n   */\n  function MarkerCollection() {\n    _classCallCheck(this, MarkerCollection);\n\n    /**\n     * Stores {@link ~Marker markers} added to the collection.\n     *\n     * @private\n     * @member {Map} #_markers\n     */\n    this._markers = new Map();\n  }\n  /**\n   * Iterable interface.\n   *\n   * Iterates over all {@link ~Marker markers} added to the collection.\n   *\n   * @returns {Iterable}\n   */\n\n\n  _createClass(MarkerCollection, [{\n    key: Symbol.iterator,\n    value: function value() {\n      return this._markers.values();\n    }\n    /**\n     * Checks if marker with given `markerName` is in the collection.\n     *\n     * @param {String} markerName Marker name.\n     * @returns {Boolean} `true` if marker with given `markerName` is in the collection, `false` otherwise.\n     */\n\n  }, {\n    key: \"has\",\n    value: function has(markerName) {\n      return this._markers.has(markerName);\n    }\n    /**\n     * Returns {@link ~Marker marker} with given `markerName`.\n     *\n     * @param {String} markerName Name of marker to get.\n     * @returns {module:engine/model/markercollection~Marker|null} Marker with given name or `null` if such marker was\n     * not added to the collection.\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(markerName) {\n      return this._markers.get(markerName) || null;\n    }\n    /**\n     * Creates and adds a {@link ~Marker marker} to the `MarkerCollection` with given name on given\n     * {@link module:engine/model/range~Range range}.\n     *\n     * If `MarkerCollection` already had a marker with given name (or {@link ~Marker marker} was passed), the marker in\n     * collection is updated and {@link module:engine/model/markercollection~MarkerCollection#event:update} event is fired\n     * but only if there was a change (marker range or {@link module:engine/model/markercollection~Marker#managedUsingOperations}\n     * flag has changed.\n     *\n     * @protected\n     * @fires module:engine/model/markercollection~MarkerCollection#event:update\n     * @param {String|module:engine/model/markercollection~Marker} markerOrName Name of marker to set or marker instance to update.\n     * @param {module:engine/model/range~Range} range Marker range.\n     * @param {Boolean} [managedUsingOperations=false] Specifies whether the marker is managed using operations.\n     * @param {Boolean} [affectsData=false] Specifies whether the marker affects the data produced by the data pipeline\n     * (is persisted in the editor's data).\n     * @returns {module:engine/model/markercollection~Marker} `Marker` instance which was added or updated.\n     */\n\n  }, {\n    key: \"_set\",\n    value: function _set(markerOrName, range) {\n      var managedUsingOperations = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var affectsData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      var markerName = markerOrName instanceof Marker ? markerOrName.name : markerOrName;\n\n      var oldMarker = this._markers.get(markerName);\n\n      if (oldMarker) {\n        var oldRange = oldMarker.getRange();\n        var hasChanged = false;\n\n        if (!oldRange.isEqual(range)) {\n          oldMarker._attachLiveRange(LiveRange.fromRange(range));\n\n          hasChanged = true;\n        }\n\n        if (managedUsingOperations != oldMarker.managedUsingOperations) {\n          oldMarker._managedUsingOperations = managedUsingOperations;\n          hasChanged = true;\n        }\n\n        if (typeof affectsData === 'boolean' && affectsData != oldMarker.affectsData) {\n          oldMarker._affectsData = affectsData;\n          hasChanged = true;\n        }\n\n        if (hasChanged) {\n          this.fire('update:' + markerName, oldMarker, oldRange, range);\n        }\n\n        return oldMarker;\n      }\n\n      var liveRange = LiveRange.fromRange(range);\n      var marker = new Marker(markerName, liveRange, managedUsingOperations, affectsData);\n\n      this._markers.set(markerName, marker);\n\n      this.fire('update:' + markerName, marker, null, range);\n      return marker;\n    }\n    /**\n     * Removes given {@link ~Marker marker} or a marker with given name from the `MarkerCollection`.\n     *\n     * @protected\n     * @fires module:engine/model/markercollection~MarkerCollection#event:update\n     * @param {String} markerOrName Marker or name of a marker to remove.\n     * @returns {Boolean} `true` if marker was found and removed, `false` otherwise.\n     */\n\n  }, {\n    key: \"_remove\",\n    value: function _remove(markerOrName) {\n      var markerName = markerOrName instanceof Marker ? markerOrName.name : markerOrName;\n\n      var oldMarker = this._markers.get(markerName);\n\n      if (oldMarker) {\n        this._markers[\"delete\"](markerName);\n\n        this.fire('update:' + markerName, oldMarker, oldMarker.getRange(), null);\n\n        this._destroyMarker(oldMarker);\n\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Fires an {@link module:engine/model/markercollection~MarkerCollection#event:update} event for the given {@link ~Marker marker}\n     * but does not change the marker. Useful to force {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher downcast\n     * conversion} for the marker.\n     *\n     * @protected\n     * @fires module:engine/model/markercollection~MarkerCollection#event:update\n     * @param {String} markerOrName Marker or name of a marker to refresh.\n     */\n\n  }, {\n    key: \"_refresh\",\n    value: function _refresh(markerOrName) {\n      var markerName = markerOrName instanceof Marker ? markerOrName.name : markerOrName;\n\n      var marker = this._markers.get(markerName);\n\n      if (!marker) {\n        throw new CKEditorError('markercollection-refresh-marker-not-exists: Marker with provided name does not exists.', this);\n      }\n\n      var range = marker.getRange();\n      this.fire('update:' + markerName, marker, range, range, marker.managedUsingOperations, marker.affectsData);\n    }\n    /**\n     * Returns iterator that iterates over all markers, which ranges contain given {@link module:engine/model/position~Position position}.\n     *\n     * @param {module:engine/model/position~Position} position\n     * @returns {Iterable.<module:engine/model/markercollection~Marker>}\n     */\n\n  }, {\n    key: \"getMarkersAtPosition\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function getMarkersAtPosition(position) {\n      var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, marker;\n\n      return regeneratorRuntime.wrap(function getMarkersAtPosition$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _iteratorError = undefined;\n              _context.prev = 3;\n              _iterator = this[Symbol.iterator]();\n\n            case 5:\n              if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                _context.next = 13;\n                break;\n              }\n\n              marker = _step.value;\n\n              if (!marker.getRange().containsPosition(position)) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.next = 10;\n              return marker;\n\n            case 10:\n              _iteratorNormalCompletion = true;\n              _context.next = 5;\n              break;\n\n            case 13:\n              _context.next = 19;\n              break;\n\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](3);\n              _didIteratorError = true;\n              _iteratorError = _context.t0;\n\n            case 19:\n              _context.prev = 19;\n              _context.prev = 20;\n\n              if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n                _iterator[\"return\"]();\n              }\n\n            case 22:\n              _context.prev = 22;\n\n              if (!_didIteratorError) {\n                _context.next = 25;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 25:\n              return _context.finish(22);\n\n            case 26:\n              return _context.finish(19);\n\n            case 27:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, getMarkersAtPosition, this, [[3, 15, 19, 27], [20,, 22, 26]]);\n    })\n    /**\n     * Returns iterator that iterates over all markers, which intersects with given {@link module:engine/model/range~Range range}.\n     *\n     * @param {module:engine/model/range~Range} range\n     * @returns {Iterable.<module:engine/model/markercollection~Marker>}\n     */\n\n  }, {\n    key: \"getMarkersIntersectingRange\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function getMarkersIntersectingRange(range) {\n      var _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, marker;\n\n      return regeneratorRuntime.wrap(function getMarkersIntersectingRange$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _iteratorNormalCompletion2 = true;\n              _didIteratorError2 = false;\n              _iteratorError2 = undefined;\n              _context2.prev = 3;\n              _iterator2 = this[Symbol.iterator]();\n\n            case 5:\n              if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {\n                _context2.next = 13;\n                break;\n              }\n\n              marker = _step2.value;\n\n              if (!(marker.getRange().getIntersection(range) !== null)) {\n                _context2.next = 10;\n                break;\n              }\n\n              _context2.next = 10;\n              return marker;\n\n            case 10:\n              _iteratorNormalCompletion2 = true;\n              _context2.next = 5;\n              break;\n\n            case 13:\n              _context2.next = 19;\n              break;\n\n            case 15:\n              _context2.prev = 15;\n              _context2.t0 = _context2[\"catch\"](3);\n              _didIteratorError2 = true;\n              _iteratorError2 = _context2.t0;\n\n            case 19:\n              _context2.prev = 19;\n              _context2.prev = 20;\n\n              if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n                _iterator2[\"return\"]();\n              }\n\n            case 22:\n              _context2.prev = 22;\n\n              if (!_didIteratorError2) {\n                _context2.next = 25;\n                break;\n              }\n\n              throw _iteratorError2;\n\n            case 25:\n              return _context2.finish(22);\n\n            case 26:\n              return _context2.finish(19);\n\n            case 27:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, getMarkersIntersectingRange, this, [[3, 15, 19, 27], [20,, 22, 26]]);\n    })\n    /**\n     * Destroys marker collection and all markers inside it.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this._markers.values()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var marker = _step3.value;\n\n          this._destroyMarker(marker);\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n            _iterator3[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      this._markers = null;\n      this.stopListening();\n    }\n    /**\n     * Iterates over all markers that starts with given `prefix`.\n     *\n     *\t\tconst markerFooA = markersCollection.set( 'foo:a', rangeFooA );\n     *\t\tconst markerFooB = markersCollection.set( 'foo:b', rangeFooB );\n     *\t\tconst markerBarA = markersCollection.set( 'bar:a', rangeBarA );\n     *\t\tconst markerFooBarA = markersCollection.set( 'foobar:a', rangeFooBarA );\n     *\t\tArray.from( markersCollection.getMarkersGroup( 'foo' ) ); // [ markerFooA, markerFooB ]\n     *\t\tArray.from( markersCollection.getMarkersGroup( 'a' ) ); // []\n     *\n     * @param prefix\n     * @returns {Iterable.<module:engine/model/markercollection~Marker>}\n     */\n\n  }, {\n    key: \"getMarkersGroup\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function getMarkersGroup(prefix) {\n      var _iteratorNormalCompletion4, _didIteratorError4, _iteratorError4, _iterator4, _step4, marker;\n\n      return regeneratorRuntime.wrap(function getMarkersGroup$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _iteratorNormalCompletion4 = true;\n              _didIteratorError4 = false;\n              _iteratorError4 = undefined;\n              _context3.prev = 3;\n              _iterator4 = this._markers.values()[Symbol.iterator]();\n\n            case 5:\n              if (_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done) {\n                _context3.next = 13;\n                break;\n              }\n\n              marker = _step4.value;\n\n              if (!marker.name.startsWith(prefix + ':')) {\n                _context3.next = 10;\n                break;\n              }\n\n              _context3.next = 10;\n              return marker;\n\n            case 10:\n              _iteratorNormalCompletion4 = true;\n              _context3.next = 5;\n              break;\n\n            case 13:\n              _context3.next = 19;\n              break;\n\n            case 15:\n              _context3.prev = 15;\n              _context3.t0 = _context3[\"catch\"](3);\n              _didIteratorError4 = true;\n              _iteratorError4 = _context3.t0;\n\n            case 19:\n              _context3.prev = 19;\n              _context3.prev = 20;\n\n              if (!_iteratorNormalCompletion4 && _iterator4[\"return\"] != null) {\n                _iterator4[\"return\"]();\n              }\n\n            case 22:\n              _context3.prev = 22;\n\n              if (!_didIteratorError4) {\n                _context3.next = 25;\n                break;\n              }\n\n              throw _iteratorError4;\n\n            case 25:\n              return _context3.finish(22);\n\n            case 26:\n              return _context3.finish(19);\n\n            case 27:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, getMarkersGroup, this, [[3, 15, 19, 27], [20,, 22, 26]]);\n    })\n    /**\n     * Destroys the marker.\n     *\n     * @private\n     * @param {module:engine/model/markercollection~Marker} marker Marker to destroy.\n     */\n\n  }, {\n    key: \"_destroyMarker\",\n    value: function _destroyMarker(marker) {\n      marker.stopListening();\n\n      marker._detachLiveRange();\n    }\n    /**\n     * Fired whenever marker is added, updated or removed from `MarkerCollection`.\n     *\n     * @event update\n     * @param {module:engine/model/markercollection~Marker} marker Updated Marker.\n     * @param {module:engine/model/range~Range|null} oldRange Marker range before the update. When is not defined it\n     * means that marker is just added.\n     * @param {module:engine/model/range~Range|null} newRange Marker range after update. When is not defined it\n     * means that marker is just removed.\n     */\n\n  }]);\n\n  return MarkerCollection;\n}();\n\nexport { MarkerCollection as default };\nmix(MarkerCollection, EmitterMixin);\n/**\n * `Marker` is a continuous parts of model (like a range), is named and represent some kind of information about marked\n * part of model document. In contrary to {@link module:engine/model/node~Node nodes}, which are building blocks of\n * model document tree, markers are not stored directly in document tree but in\n * {@link module:engine/model/model~Model#markers model markers' collection}. Still, they are document data, by giving\n * additional meaning to the part of a model document between marker start and marker end.\n *\n * In this sense, markers are similar to adding and converting attributes on nodes. The difference is that attribute is\n * connected with a given node (e.g. a character is bold no matter if it gets moved or content around it changes).\n * Markers on the other hand are continuous ranges and are characterized by their start and end position. This means that\n * any character in the marker is marked by the marker. For example, if a character is moved outside of marker it stops being\n * \"special\" and the marker is shrunk. Similarly, when a character is moved into the marker from other place in document\n * model, it starts being \"special\" and the marker is enlarged.\n *\n * Another upside of markers is that finding marked part of document is fast and easy. Using attributes to mark some nodes\n * and then trying to find that part of document would require traversing whole document tree. Marker gives instant access\n * to the range which it is marking at the moment.\n *\n * Markers are built from a name and a range.\n *\n * Range of the marker is updated automatically when document changes, using\n * {@link module:engine/model/liverange~LiveRange live range} mechanism.\n *\n * Name is used to group and identify markers. Names have to be unique, but markers can be grouped by\n * using common prefixes, separated with `:`, for example: `user:john` or `search:3`. That's useful in term of creating\n * namespaces for custom elements (e.g. comments, highlights). You can use this prefixes in\n * {@link module:engine/model/markercollection~MarkerCollection#event:update} listeners to listen on changes in a group of markers.\n * For instance: `model.markers.on( 'set:user', callback );` will be called whenever any `user:*` markers changes.\n *\n * There are two types of markers.\n *\n * 1. Markers managed directly, without using operations. They are added directly by {@link module:engine/model/writer~Writer}\n * to the {@link module:engine/model/markercollection~MarkerCollection} without any additional mechanism. They can be used\n * as bookmarks or visual markers. They are great for showing results of the find, or select link when the focus is in the input.\n *\n * 1. Markers managed using operations. These markers are also stored in {@link module:engine/model/markercollection~MarkerCollection}\n * but changes in these markers is managed the same way all other changes in the model structure - using operations.\n * Therefore, they are handled in the undo stack and synchronized between clients if the collaboration plugin is enabled.\n * This type of markers is useful for solutions like spell checking or comments.\n *\n * Both type of them should be added / updated by {@link module:engine/model/writer~Writer#addMarker}\n * and removed by {@link module:engine/model/writer~Writer#removeMarker} methods.\n *\n *\t\tmodel.change( ( writer ) => {\n * \t\t\tconst marker = writer.addMarker( name, { range, usingOperation: true } );\n *\n * \t\t\t// ...\n *\n * \t\t\twriter.removeMarker( marker );\n *\t\t} );\n *\n * See {@link module:engine/model/writer~Writer} to find more examples.\n *\n * Since markers need to track change in the document, for efficiency reasons, it is best to create and keep as little\n * markers as possible and remove them as soon as they are not needed anymore.\n *\n * Markers can be downcasted and upcasted.\n *\n * Markers downcast happens on {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:addMarker} and\n * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:removeMarker} events.\n * Use {@link module:engine/conversion/downcasthelpers downcast converters} or attach a custom converter to mentioned events.\n * For {@link module:engine/controller/datacontroller~DataController data pipeline}, marker should be downcasted to an element.\n * Then, it can be upcasted back to a marker. Again, use {@link module:engine/conversion/upcasthelpers upcast converters} or\n * attach a custom converter to {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:element}.\n *\n * `Marker` instances are created and destroyed only by {@link ~MarkerCollection MarkerCollection}.\n */\n\nvar Marker =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a marker instance.\n   *\n   * @param {String} name Marker name.\n   * @param {module:engine/model/liverange~LiveRange} liveRange Range marked by the marker.\n   * @param {Boolean} managedUsingOperations Specifies whether the marker is managed using operations.\n   * @param {Boolean} affectsData Specifies whether the marker affects the data produced by the data pipeline\n   * (is persisted in the editor's data).\n   */\n  function Marker(name, liveRange, managedUsingOperations, affectsData) {\n    _classCallCheck(this, Marker);\n\n    /**\n     * Marker's name.\n     *\n     * @readonly\n     * @type {String}\n     */\n    this.name = name;\n    /**\n     * Range marked by the marker.\n     *\n     * @protected\n     * @member {module:engine/model/liverange~LiveRange}\n     */\n\n    this._liveRange = this._attachLiveRange(liveRange);\n    /**\n     * Flag indicates if the marker is managed using operations or not.\n     *\n     * @private\n     * @member {Boolean}\n     */\n\n    this._managedUsingOperations = managedUsingOperations;\n    /**\n     * Specifies whether the marker affects the data produced by the data pipeline\n     * (is persisted in the editor's data).\n     *\n     * @private\n     * @member {Boolean}\n     */\n\n    this._affectsData = affectsData;\n  }\n  /**\n   * A value indicating if the marker is managed using operations.\n   * See {@link ~Marker marker class description} to learn more about marker types.\n   * See {@link module:engine/model/writer~Writer#addMarker}.\n   *\n   * @returns {Boolean}\n   */\n\n\n  _createClass(Marker, [{\n    key: \"getStart\",\n\n    /**\n     * Returns current marker start position.\n     *\n     * @returns {module:engine/model/position~Position}\n     */\n    value: function getStart() {\n      if (!this._liveRange) {\n        throw new CKEditorError('marker-destroyed: Cannot use a destroyed marker instance.', this);\n      }\n\n      return this._liveRange.start.clone();\n    }\n    /**\n     * Returns current marker end position.\n     *\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"getEnd\",\n    value: function getEnd() {\n      if (!this._liveRange) {\n        throw new CKEditorError('marker-destroyed: Cannot use a destroyed marker instance.', this);\n      }\n\n      return this._liveRange.end.clone();\n    }\n    /**\n     * Returns a range that represents the current state of the marker.\n     *\n     * Keep in mind that returned value is a {@link module:engine/model/range~Range Range}, not a\n     * {@link module:engine/model/liverange~LiveRange LiveRange}. This means that it is up-to-date and relevant only\n     * until next model document change. Do not store values returned by this method. Instead, store {@link ~Marker#name}\n     * and get `Marker` instance from {@link module:engine/model/markercollection~MarkerCollection MarkerCollection} every\n     * time there is a need to read marker properties. This will guarantee that the marker has not been removed and\n     * that it's data is up-to-date.\n     *\n     * @returns {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"getRange\",\n    value: function getRange() {\n      if (!this._liveRange) {\n        throw new CKEditorError('marker-destroyed: Cannot use a destroyed marker instance.', this);\n      }\n\n      return this._liveRange.toRange();\n    }\n    /**\n     * Binds new live range to the marker and detach the old one if is attached.\n     *\n     * @protected\n     * @param {module:engine/model/liverange~LiveRange} liveRange Live range to attach\n     * @returns {module:engine/model/liverange~LiveRange} Attached live range.\n     */\n\n  }, {\n    key: \"_attachLiveRange\",\n    value: function _attachLiveRange(liveRange) {\n      if (this._liveRange) {\n        this._detachLiveRange();\n      } // Delegating does not work with namespaces. Alternatively, we could delegate all events (using `*`).\n\n\n      liveRange.delegate('change:range').to(this);\n      liveRange.delegate('change:content').to(this);\n      this._liveRange = liveRange;\n      return liveRange;\n    }\n    /**\n     * Unbinds and destroys currently attached live range.\n     *\n     * @protected\n     */\n\n  }, {\n    key: \"_detachLiveRange\",\n    value: function _detachLiveRange() {\n      this._liveRange.stopDelegating('change:range', this);\n\n      this._liveRange.stopDelegating('change:content', this);\n\n      this._liveRange.detach();\n\n      this._liveRange = null;\n    }\n    /**\n     * Fired whenever {@link ~Marker#_liveRange marker range} is changed due to changes on {@link module:engine/model/document~Document}.\n     * This is a delegated {@link module:engine/model/liverange~LiveRange#event:change:range LiveRange change:range event}.\n     *\n     * When marker is removed from {@link module:engine/model/markercollection~MarkerCollection MarkerCollection},\n     * all event listeners listening to it should be removed. It is best to do it on\n     * {@link module:engine/model/markercollection~MarkerCollection#event:update MarkerCollection update event}.\n     *\n     * @see module:engine/model/liverange~LiveRange#event:change:range\n     * @event change:range\n     * @param {module:engine/model/range~Range} oldRange\n     * @param {Object} data\n     */\n\n    /**\n     * Fired whenever change on {@link module:engine/model/document~Document} is done inside {@link ~Marker#_liveRange marker range}.\n     * This is a delegated {@link module:engine/model/liverange~LiveRange#event:change:content LiveRange change:content event}.\n     *\n     * When marker is removed from {@link module:engine/model/markercollection~MarkerCollection MarkerCollection},\n     * all event listeners listening to it should be removed. It is best to do it on\n     * {@link module:engine/model/markercollection~MarkerCollection#event:update MarkerCollection update event}.\n     *\n     * @see module:engine/model/liverange~LiveRange#event:change:content\n     * @event change:content\n     * @param {module:engine/model/range~Range} oldRange\n     * @param {Object} data\n     */\n\n  }, {\n    key: \"managedUsingOperations\",\n    get: function get() {\n      if (!this._liveRange) {\n        throw new CKEditorError('marker-destroyed: Cannot use a destroyed marker instance.', this);\n      }\n\n      return this._managedUsingOperations;\n    }\n    /**\n     * A value indicating if the marker changes the data.\n     *\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"affectsData\",\n    get: function get() {\n      if (!this._liveRange) {\n        throw new CKEditorError('marker-destroyed: Cannot use a destroyed marker instance.', this);\n      }\n\n      return this._affectsData;\n    }\n  }]);\n\n  return Marker;\n}();\n\nmix(Marker, EmitterMixin);\n/**\n * Cannot use a {@link module:engine/model/markercollection~MarkerCollection#destroy destroyed marker} instance.\n *\n * @error marker-destroyed\n */","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/liveposition\n */\nimport Position from './position';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * `LivePosition` is a type of {@link module:engine/model/position~Position Position}\n * that updates itself as {@link module:engine/model/document~Document document}\n * is changed through operations. It may be used as a bookmark.\n *\n * **Note:** Contrary to {@link module:engine/model/position~Position}, `LivePosition` works only in roots that are\n * {@link module:engine/model/rootelement~RootElement}.\n * If {@link module:engine/model/documentfragment~DocumentFragment} is passed, error will be thrown.\n *\n * **Note:** Be very careful when dealing with `LivePosition`. Each `LivePosition` instance bind events that might\n * have to be unbound.\n * Use {@link module:engine/model/liveposition~LivePosition#detach} whenever you don't need `LivePosition` anymore.\n *\n * @extends module:engine/model/position~Position\n */\n\nvar LivePosition =\n/*#__PURE__*/\nfunction (_Position) {\n  _inherits(LivePosition, _Position);\n\n  /**\n   * Creates a live position.\n   *\n   * @see module:engine/model/position~Position\n   * @param {module:engine/model/rootelement~RootElement} root\n   * @param {Array.<Number>} path\n   * @param {module:engine/model/position~PositionStickiness} [stickiness]\n   */\n  function LivePosition(root, path) {\n    var _this;\n\n    var stickiness = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'toNone';\n\n    _classCallCheck(this, LivePosition);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LivePosition).call(this, root, path, stickiness));\n\n    if (!_this.root.is('rootElement')) {\n      /**\n       * LivePosition's root has to be an instance of RootElement.\n       *\n       * @error liveposition-root-not-rootelement\n       */\n      throw new CKEditorError('model-liveposition-root-not-rootelement: LivePosition\\'s root has to be an instance of RootElement.', root);\n    }\n\n    bindWithDocument.call(_assertThisInitialized(_this));\n    return _this;\n  }\n  /**\n   * Unbinds all events previously bound by `LivePosition`. Use it whenever you don't need `LivePosition` instance\n   * anymore (i.e. when leaving scope in which it was declared or before re-assigning variable that was\n   * referring to it).\n   */\n\n\n  _createClass(LivePosition, [{\n    key: \"detach\",\n    value: function detach() {\n      this.stopListening();\n    }\n    /**\n     * Creates a {@link module:engine/model/position~Position position instance}, which is equal to this live position.\n     *\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"toPosition\",\n    value: function toPosition() {\n      return new Position(this.root, this.path.slice(), this.stickiness);\n    }\n    /**\n     * Creates a `LivePosition` instance that is equal to position.\n     *\n     * @param {module:engine/model/position~Position} position\n     * @param {module:engine/model/position~PositionStickiness} [stickiness]\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }], [{\n    key: \"fromPosition\",\n    value: function fromPosition(position, stickiness) {\n      return new this(position.root, position.path.slice(), stickiness ? stickiness : position.stickiness);\n    }\n    /**\n     * @static\n     * @protected\n     * @method module:engine/model/liveposition~LivePosition._createAfter\n     * @see module:engine/model/position~Position._createAfter\n     * @param {module:engine/model/node~Node} node\n     * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone']\n     * @returns {module:engine/model/liveposition~LivePosition}\n     */\n\n    /**\n     * @static\n     * @protected\n     * @method module:engine/model/liveposition~LivePosition._createBefore\n     * @see module:engine/model/position~Position._createBefore\n     * @param {module:engine/model/node~Node} node\n     * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone']\n     * @returns {module:engine/model/liveposition~LivePosition}\n     */\n\n    /**\n     * @static\n     * @protected\n     * @method module:engine/model/liveposition~LivePosition._createAt\n     * @see module:engine/model/position~Position._createAt\n     * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset]\n     * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone']\n     * @returns {module:engine/model/liveposition~LivePosition}\n     */\n\n    /**\n     * Fired when `LivePosition` instance is changed due to changes on {@link module:engine/model/document~Document}.\n     *\n     * @event module:engine/model/liveposition~LivePosition#change\n     * @param {module:engine/model/position~Position} oldPosition Position equal to this live position before it got changed.\n     */\n\n  }]);\n\n  return LivePosition;\n}(Position); // Binds this `LivePosition` to the {@link module:engine/model/document~Document document} that owns\n// this position's {@link module:engine/model/position~Position#root root}.\n//\n// @private\n\n\nexport { LivePosition as default };\n\nfunction bindWithDocument() {\n  var _this2 = this;\n\n  this.listenTo(this.root.document.model, 'applyOperation', function (event, args) {\n    var operation = args[0];\n\n    if (!operation.isDocumentOperation) {\n      return;\n    }\n\n    transform.call(_this2, operation);\n  }, {\n    priority: 'low'\n  });\n} // Updates this position accordingly to the updates applied to the model. Bases on change events.\n//\n// @private\n// @param {module:engine/model/operation/operation~Operation} operation Executed operation.\n\n\nfunction transform(operation) {\n  var result = this.getTransformedByOperation(operation);\n\n  if (!this.isEqual(result)) {\n    var oldPosition = this.toPosition();\n    this.path = result.path;\n    this.root = result.root;\n    this.fire('change', oldPosition);\n  }\n}\n\nmix(LivePosition, EmitterMixin);","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/utils/insertcontent\n */\nimport Position from '../position';\nimport LivePosition from '../liveposition';\nimport Element from '../element';\nimport Range from '../range';\nimport log from '@ckeditor/ckeditor5-utils/src/log';\nimport DocumentSelection from '../documentselection';\nimport Selection from '../selection';\n/**\n * Inserts content into the editor (specified selection) as one would expect the paste\n * functionality to work.\n *\n * If an instance of {@link module:engine/model/selection~Selection} is passed as `selectable` it will be modified\n * to the insertion selection (equal to a range to be selected after insertion).\n *\n * If `selectable` is not passed, the content will be inserted using the current selection of the model document.\n *\n * **Note:** Use {@link module:engine/model/model~Model#insertContent} instead of this function.\n * This function is only exposed to be reusable in algorithms which change the {@link module:engine/model/model~Model#insertContent}\n * method's behavior.\n *\n * @param {module:engine/model/model~Model} model The model in context of which the insertion\n * should be performed.\n * @param {module:engine/model/documentfragment~DocumentFragment|module:engine/model/item~Item} content The content to insert.\n * @param {module:engine/model/selection~Selectable} [selectable=model.document.selection]\n * Selection into which the content should be inserted.\n * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n * @returns {module:engine/model/range~Range} Range which contains all the performed changes. This is a range that, if removed,\n * would return the model to the state before the insertion. If no changes were preformed by `insertContent`, returns a range collapsed\n * at the insertion position.\n */\n\nexport default function insertContent(model, content, selectable, placeOrOffset) {\n  return model.change(function (writer) {\n    var selection;\n\n    if (!selectable) {\n      selection = model.document.selection;\n    } else if (selectable instanceof Selection || selectable instanceof DocumentSelection) {\n      selection = selectable;\n    } else {\n      selection = writer.createSelection(selectable, placeOrOffset);\n    }\n\n    var insertionPosition = selection.getFirstPosition();\n\n    if (!selection.isCollapsed) {\n      model.deleteContent(selection, {\n        doNotAutoparagraph: true\n      });\n    }\n\n    var insertion = new Insertion(model, writer, insertionPosition);\n    var nodesToInsert;\n\n    if (content.is('documentFragment')) {\n      nodesToInsert = content.getChildren();\n    } else {\n      nodesToInsert = [content];\n    }\n\n    insertion.handleNodes(nodesToInsert, {\n      // The set of children being inserted is the only set in this context\n      // so it's the first and last (it's a hack ;)).\n      isFirst: true,\n      isLast: true\n    });\n    var newRange = insertion.getSelectionRange();\n    /* istanbul ignore else */\n\n    if (newRange) {\n      if (selection instanceof DocumentSelection) {\n        writer.setSelection(newRange);\n      } else {\n        selection.setTo(newRange);\n      }\n    } else {\n      // We are not testing else because it's a safe check for unpredictable edge cases:\n      // an insertion without proper range to select.\n\n      /**\n       * Cannot determine a proper selection range after insertion.\n       *\n       * @warning insertcontent-no-range\n       */\n      log.warn('insertcontent-no-range: Cannot determine a proper selection range after insertion.');\n    }\n\n    var affectedRange = insertion.getAffectedRange() || model.createRange(insertionPosition);\n    insertion.destroy();\n    return affectedRange;\n  });\n}\n/**\n * Utility class for performing content insertion.\n *\n * @private\n */\n\nvar Insertion =\n/*#__PURE__*/\nfunction () {\n  function Insertion(model, writer, position) {\n    _classCallCheck(this, Insertion);\n\n    /**\n     * The model in context of which the insertion should be performed.\n     *\n     * @member {module:engine/model~Model} #model\n     */\n    this.model = model;\n    /**\n     * Batch to which operations will be added.\n     *\n     * @member {module:engine/controller/writer~Batch} #writer\n     */\n\n    this.writer = writer;\n    /**\n     * The position at which (or near which) the next node will be inserted.\n     *\n     * @member {module:engine/model/position~Position} #position\n     */\n\n    this.position = position;\n    /**\n     * Elements with which the inserted elements can be merged.\n     *\n     *\t\t<p>x^</p><p>y</p> + <p>z</p> (can merge to <p>x</p>)\n     *\t\t<p>x</p><p>^y</p> + <p>z</p> (can merge to <p>y</p>)\n     *\t\t<p>x^y</p> + <p>z</p> (can merge to <p>xy</p> which will be split during the action,\n     *\t\t\t\t\t\t\t\tso both its pieces will be added to this set)\n     *\n     *\n     * @member {Set} #canMergeWith\n     */\n\n    this.canMergeWith = new Set([this.position.parent]);\n    /**\n     * Schema of the model.\n     *\n     * @member {module:engine/model/schema~Schema} #schema\n     */\n\n    this.schema = model.schema;\n    this._filterAttributesOf = [];\n    /**\n     * Beginning of the affected range. See {@link module:engine/model/utils/insertcontent~Insertion#getAffectedRange}.\n     *\n     * @private\n     * @member {module:engine/model/liveposition~LivePosition|null} #_affectedStart\n     */\n\n    this._affectedStart = null;\n    /**\n     * End of the affected range. See {@link module:engine/model/utils/insertcontent~Insertion#getAffectedRange}.\n     *\n     * @private\n     * @member {module:engine/model/liveposition~LivePosition|null} #_affectedEnd\n     */\n\n    this._affectedEnd = null;\n  }\n  /**\n   * Handles insertion of a set of nodes.\n   *\n   * @param {Iterable.<module:engine/model/node~Node>} nodes Nodes to insert.\n   * @param {Object} parentContext Context in which parent of these nodes was supposed to be inserted.\n   * If the parent context is passed it means that the parent element was stripped (was not allowed).\n   */\n\n\n  _createClass(Insertion, [{\n    key: \"handleNodes\",\n    value: function handleNodes(nodes, parentContext) {\n      nodes = Array.from(nodes);\n\n      for (var i = 0; i < nodes.length; i++) {\n        var node = nodes[i];\n\n        this._handleNode(node, {\n          isFirst: i === 0 && parentContext.isFirst,\n          isLast: i === nodes.length - 1 && parentContext.isLast\n        });\n      } // TMP this will become a post-fixer.\n\n\n      this.schema.removeDisallowedAttributes(this._filterAttributesOf, this.writer);\n      this._filterAttributesOf = [];\n    }\n    /**\n     * Returns range to be selected after insertion.\n     * Returns `null` if there is no valid range to select after insertion.\n     *\n     * @returns {module:engine/model/range~Range|null}\n     */\n\n  }, {\n    key: \"getSelectionRange\",\n    value: function getSelectionRange() {\n      if (this.nodeToSelect) {\n        return Range._createOn(this.nodeToSelect);\n      }\n\n      return this.model.schema.getNearestSelectionRange(this.position);\n    }\n    /**\n     * Returns a range which contains all the performed changes. This is a range that, if removed, would return the model to the state\n     * before the insertion. Returns `null` if no changes were done.\n     *\n     * @returns {module:engine/model/range~Range|null}\n     */\n\n  }, {\n    key: \"getAffectedRange\",\n    value: function getAffectedRange() {\n      if (!this._affectedStart) {\n        return null;\n      }\n\n      return new Range(this._affectedStart, this._affectedEnd);\n    }\n    /**\n     * Destroys `Insertion` instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this._affectedStart) {\n        this._affectedStart.detach();\n      }\n\n      if (this._affectedEnd) {\n        this._affectedEnd.detach();\n      }\n    }\n    /**\n     * Handles insertion of a single node.\n     *\n     * @private\n     * @param {module:engine/model/node~Node} node\n     * @param {Object} context\n     * @param {Boolean} context.isFirst Whether the given node is the first one in the content to be inserted.\n     * @param {Boolean} context.isLast Whether the given node is the last one in the content to be inserted.\n     */\n\n  }, {\n    key: \"_handleNode\",\n    value: function _handleNode(node, context) {\n      // Let's handle object in a special way.\n      // * They should never be merged with other elements.\n      // * If they are not allowed in any of the selection ancestors, they could be either autoparagraphed or totally removed.\n      if (this.schema.isObject(node)) {\n        this._handleObject(node, context);\n\n        return;\n      } // Try to find a place for the given node.\n      // Split the position.parent's branch up to a point where the node can be inserted.\n      // If it isn't allowed in the whole branch, then of course don't split anything.\n\n\n      var isAllowed = this._checkAndSplitToAllowedPosition(node, context);\n\n      if (!isAllowed) {\n        this._handleDisallowedNode(node, context);\n\n        return;\n      }\n\n      this._insert(node); // After the node was inserted we may try to merge it with its siblings.\n      // This should happen only if it was the first and/or last of the nodes (so only with boundary nodes)\n      // and only if the selection was in those elements initially.\n      //\n      // E.g.:\n      // <p>x^</p> + <p>y</p> => <p>x</p><p>y</p> => <p>xy[]</p>\n      // and:\n      // <p>x^y</p> + <p>z</p> => <p>x</p>^<p>y</p> + <p>z</p> => <p>x</p><p>z</p><p>y</p> => <p>xz[]y</p>\n      // but:\n      // <p>x</p><p>^</p><p>z</p> + <p>y</p> => <p>x</p><p>y</p><p>z</p> (no merging)\n      // <p>x</p>[<img>]<p>z</p> + <p>y</p> => <p>x</p><p>y</p><p>z</p> (no merging, note: after running deleteContents\n      //\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t it's exactly the same case as above)\n\n\n      this._mergeSiblingsOf(node, context);\n    }\n    /**\n     * @private\n     * @param {module:engine/model/element~Element} node The object element.\n     * @param {Object} context\n     */\n\n  }, {\n    key: \"_handleObject\",\n    value: function _handleObject(node, context) {\n      // Try finding it a place in the tree.\n      if (this._checkAndSplitToAllowedPosition(node)) {\n        this._insert(node);\n      } // Try autoparagraphing.\n      else {\n          this._tryAutoparagraphing(node, context);\n        }\n    }\n    /**\n     * @private\n     * @param {module:engine/model/node~Node} node The disallowed node which needs to be handled.\n     * @param {Object} context\n     */\n\n  }, {\n    key: \"_handleDisallowedNode\",\n    value: function _handleDisallowedNode(node, context) {\n      // If the node is an element, try inserting its children (strip the parent).\n      if (node.is('element')) {\n        this.handleNodes(node.getChildren(), context);\n      } // If text is not allowed, try autoparagraphing it.\n      else {\n          this._tryAutoparagraphing(node, context);\n        }\n    }\n    /**\n     * @private\n     * @param {module:engine/model/node~Node} node The node to insert.\n     */\n\n  }, {\n    key: \"_insert\",\n    value: function _insert(node) {\n      /* istanbul ignore if */\n      if (!this.schema.checkChild(this.position, node)) {\n        // Algorithm's correctness check. We should never end up here but it's good to know that we did.\n        // Note that it would often be a silent issue if we insert node in a place where it's not allowed.\n        log.error('insertcontent-wrong-position: The node cannot be inserted on the given position.', {\n          node: node,\n          position: this.position\n        });\n        return;\n      }\n\n      var livePos = LivePosition.fromPosition(this.position, 'toNext');\n\n      this._setAffectedBoundaries(this.position);\n\n      this.writer.insert(node, this.position);\n      this.position = livePos.toPosition();\n      livePos.detach(); // The last inserted object should be selected because we can't put a collapsed selection after it.\n\n      if (this.schema.isObject(node) && !this.schema.checkChild(this.position, '$text')) {\n        this.nodeToSelect = node;\n      } else {\n        this.nodeToSelect = null;\n      }\n\n      this._filterAttributesOf.push(node);\n    }\n    /**\n     * Sets `_affectedStart` and `_affectedEnd` to the given `position`. Should be used before a change is done during insertion process to\n     * mark the affected range.\n     *\n     * This method is used before inserting a node or splitting a parent node. `_affectedStart` and `_affectedEnd` are also changed\n     * during merging, but the logic there is more complicated so it is left out of this function.\n     *\n     * @private\n     * @param {module:engine/model/position~Position} position\n     */\n\n  }, {\n    key: \"_setAffectedBoundaries\",\n    value: function _setAffectedBoundaries(position) {\n      // Set affected boundaries stickiness so that those position will \"expand\" when something is inserted in between them:\n      // <paragraph>Foo][bar</paragraph> -> <paragraph>Foo]xx[bar</paragraph>\n      // This is why it cannot be a range but two separate positions.\n      if (!this._affectedStart) {\n        this._affectedStart = LivePosition.fromPosition(position, 'toPrevious');\n      } // If `_affectedEnd` is before the new boundary position, expand `_affectedEnd`. This can happen if first inserted node was\n      // inserted into the parent but the next node is moved-out of that parent:\n      // (1) <paragraph>Foo][</paragraph> -> <paragraph>Foo]xx[</paragraph>\n      // (2) <paragraph>Foo]xx[</paragraph> -> <paragraph>Foo]xx</paragraph><widget></widget>[\n\n\n      if (!this._affectedEnd || this._affectedEnd.isBefore(position)) {\n        if (this._affectedEnd) {\n          this._affectedEnd.detach();\n        }\n\n        this._affectedEnd = LivePosition.fromPosition(position, 'toNext');\n      }\n    }\n    /**\n     * @private\n     * @param {module:engine/model/node~Node} node The node which could potentially be merged.\n     * @param {Object} context\n     */\n\n  }, {\n    key: \"_mergeSiblingsOf\",\n    value: function _mergeSiblingsOf(node, context) {\n      if (!(node instanceof Element)) {\n        return;\n      }\n\n      var mergeLeft = this._canMergeLeft(node, context);\n\n      var mergeRight = this._canMergeRight(node, context);\n\n      var mergePosLeft = LivePosition._createBefore(node);\n\n      mergePosLeft.stickiness = 'toNext';\n\n      var mergePosRight = LivePosition._createAfter(node);\n\n      mergePosRight.stickiness = 'toNext';\n\n      if (mergeLeft) {\n        var livePosition = LivePosition.fromPosition(this.position);\n        livePosition.stickiness = 'toNext'; // If `_affectedStart` is sames as merge position, it means that the element \"marked\" by `_affectedStart` is going to be\n        // removed and its contents will be moved. This won't transform `LivePosition` so `_affectedStart` needs to be moved\n        // by hand to properly reflect affected range. (Due to `_affectedStart` and `_affectedEnd` stickiness, the \"range\" is\n        // shown as `][`).\n        //\n        // Example - insert `<paragraph>Abc</paragraph><paragraph>Xyz</paragraph>` at the end of `<paragraph>Foo^</paragraph>`:\n        //\n        // <paragraph>Foo</paragraph><paragraph>Bar</paragraph>   -->\n        // <paragraph>Foo</paragraph>]<paragraph>Abc</paragraph><paragraph>Xyz</paragraph>[<paragraph>Bar</paragraph>   -->\n        // <paragraph>Foo]Abc</paragraph><paragraph>Xyz</paragraph>[<paragraph>Bar</paragraph>\n        //\n        // Note, that if we are here then something must have been inserted, so `_affectedStart` and `_affectedEnd` have to be set.\n\n        if (this._affectedStart.isEqual(mergePosLeft)) {\n          this._affectedStart.detach();\n\n          this._affectedStart = LivePosition._createAt(mergePosLeft.nodeBefore, 'end', 'toPrevious');\n        }\n\n        this.writer.merge(mergePosLeft); // If only one element (the merged one) is in the \"affected range\", also move the affected range end appropriately.\n        //\n        // Example - insert `<paragraph>Abc</paragraph>` at the of `<paragraph>Foo^</paragraph>`:\n        //\n        // <paragraph>Foo</paragraph><paragraph>Bar</paragraph>   -->\n        // <paragraph>Foo</paragraph>]<paragraph>Abc</paragraph>[<paragraph>Bar</paragraph>   -->\n        // <paragraph>Foo]Abc</paragraph>[<paragraph>Bar</paragraph>   -->\n        // <paragraph>Foo]Abc[</paragraph><paragraph>Bar</paragraph>\n\n        if (mergePosLeft.isEqual(this._affectedEnd) && context.isLast) {\n          this._affectedEnd.detach();\n\n          this._affectedEnd = LivePosition._createAt(mergePosLeft.nodeBefore, 'end', 'toNext');\n        }\n\n        this.position = livePosition.toPosition();\n        livePosition.detach();\n      }\n\n      if (mergeRight) {\n        /* istanbul ignore if */\n        if (!this.position.isEqual(mergePosRight)) {\n          // Algorithm's correctness check. We should never end up here but it's good to know that we did.\n          // At this point the insertion position should be after the node we'll merge. If it isn't,\n          // it should need to be secured as in the left merge case.\n          log.error('insertcontent-wrong-position-on-merge: The insertion position should equal the merge position');\n        } // Move the position to the previous node, so it isn't moved to the graveyard on merge.\n        // <p>x</p>[]<p>y</p> => <p>x[]</p><p>y</p>\n\n\n        this.position = Position._createAt(mergePosRight.nodeBefore, 'end'); // OK:  <p>xx[]</p> + <p>yy</p> => <p>xx[]yy</p> (when sticks to previous)\n        // NOK: <p>xx[]</p> + <p>yy</p> => <p>xxyy[]</p> (when sticks to next)\n\n        var _livePosition = LivePosition.fromPosition(this.position, 'toPrevious'); // See comment above on moving `_affectedStart`.\n\n\n        if (this._affectedEnd.isEqual(mergePosRight)) {\n          this._affectedEnd.detach();\n\n          this._affectedEnd = LivePosition._createAt(mergePosRight.nodeBefore, 'end', 'toNext');\n        }\n\n        this.writer.merge(mergePosRight); // See comment above on moving `_affectedStart`.\n\n        if (mergePosRight.getShiftedBy(-1).isEqual(this._affectedStart) && context.isFirst) {\n          this._affectedStart.detach();\n\n          this._affectedStart = LivePosition._createAt(mergePosRight.nodeBefore, 0, 'toPrevious');\n        }\n\n        this.position = _livePosition.toPosition();\n\n        _livePosition.detach();\n      }\n\n      if (mergeLeft || mergeRight) {\n        // After merge elements that were marked by _insert() to be filtered might be gone so\n        // we need to mark the new container.\n        this._filterAttributesOf.push(this.position.parent);\n      }\n\n      mergePosLeft.detach();\n      mergePosRight.detach();\n    }\n    /**\n     * Checks whether specified node can be merged with previous sibling element.\n     *\n     * @private\n     * @param {module:engine/model/node~Node} node The node which could potentially be merged.\n     * @param {Object} context\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"_canMergeLeft\",\n    value: function _canMergeLeft(node, context) {\n      var previousSibling = node.previousSibling;\n      return context.isFirst && previousSibling instanceof Element && this.canMergeWith.has(previousSibling) && this.model.schema.checkMerge(previousSibling, node);\n    }\n    /**\n     * Checks whether specified node can be merged with next sibling element.\n     *\n     * @private\n     * @param {module:engine/model/node~Node} node The node which could potentially be merged.\n     * @param {Object} context\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"_canMergeRight\",\n    value: function _canMergeRight(node, context) {\n      var nextSibling = node.nextSibling;\n      return context.isLast && nextSibling instanceof Element && this.canMergeWith.has(nextSibling) && this.model.schema.checkMerge(node, nextSibling);\n    }\n    /**\n     * Tries wrapping the node in a new paragraph and inserting it this way.\n     *\n     * @private\n     * @param {module:engine/model/node~Node} node The node which needs to be autoparagraphed.\n     * @param {Object} context\n     */\n\n  }, {\n    key: \"_tryAutoparagraphing\",\n    value: function _tryAutoparagraphing(node, context) {\n      var paragraph = this.writer.createElement('paragraph'); // Do not autoparagraph if the paragraph won't be allowed there,\n      // cause that would lead to an infinite loop. The paragraph would be rejected in\n      // the next _handleNode() call and we'd be here again.\n\n      if (this._getAllowedIn(paragraph, this.position.parent) && this.schema.checkChild(paragraph, node)) {\n        paragraph._appendChild(node);\n\n        this._handleNode(paragraph, context);\n      }\n    }\n    /**\n     * @private\n     * @param {module:engine/model/node~Node} node\n     * @returns {Boolean} Whether an allowed position was found.\n     * `false` is returned if the node isn't allowed at any position up in the tree, `true` if was.\n     */\n\n  }, {\n    key: \"_checkAndSplitToAllowedPosition\",\n    value: function _checkAndSplitToAllowedPosition(node) {\n      var allowedIn = this._getAllowedIn(node, this.position.parent);\n\n      if (!allowedIn) {\n        return false;\n      }\n\n      while (allowedIn != this.position.parent) {\n        // If a parent which we'd need to leave is a limit element, break.\n        if (this.schema.isLimit(this.position.parent)) {\n          return false;\n        }\n\n        if (this.position.isAtStart) {\n          // If insertion position is at the beginning of the parent, move it out instead of splitting.\n          // <p>^Foo</p> -> ^<p>Foo</p>\n          var parent = this.position.parent;\n          this.position = this.writer.createPositionBefore(parent); // Special case – parent is empty (<p>^</p>).\n          //\n          // 1. parent.isEmpty\n          // We can remove the element after moving insertion position out of it.\n          //\n          // 2. parent.parent === allowedIn\n          // However parent should remain in place when allowed element is above limit element in document tree.\n          // For example there shouldn't be allowed to remove empty paragraph from tableCell, when is pasted\n          // content allowed in $root.\n\n          if (parent.isEmpty && parent.parent === allowedIn) {\n            this.writer.remove(parent);\n          }\n        } else if (this.position.isAtEnd) {\n          // If insertion position is at the end of the parent, move it out instead of splitting.\n          // <p>Foo^</p> -> <p>Foo</p>^\n          this.position = this.writer.createPositionAfter(this.position.parent);\n        } else {\n          var tempPos = this.writer.createPositionAfter(this.position.parent);\n\n          this._setAffectedBoundaries(this.position);\n\n          this.writer.split(this.position);\n          this.position = tempPos;\n          this.canMergeWith.add(this.position.nodeAfter);\n        }\n      }\n\n      return true;\n    }\n    /**\n     * Gets the element in which the given node is allowed. It checks the passed element and all its ancestors.\n     *\n     * @private\n     * @param {module:engine/model/node~Node} node The node to check.\n     * @param {module:engine/model/element~Element} element The element in which the node's correctness should be checked.\n     * @returns {module:engine/model/element~Element|null}\n     */\n\n  }, {\n    key: \"_getAllowedIn\",\n    value: function _getAllowedIn(node, element) {\n      if (this.schema.checkChild(element, node)) {\n        return element;\n      }\n\n      if (element.parent) {\n        return this._getAllowedIn(node, element.parent);\n      }\n\n      return null;\n    }\n  }]);\n\n  return Insertion;\n}();","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/utils/deletecontent\n */\nimport LivePosition from '../liveposition';\nimport Range from '../range';\nimport DocumentSelection from '../documentselection';\n/**\n * Deletes content of the selection and merge siblings. The resulting selection is always collapsed.\n *\n * **Note:** Use {@link module:engine/model/model~Model#deleteContent} instead of this function.\n * This function is only exposed to be reusable in algorithms\n * which change the {@link module:engine/model/model~Model#deleteContent}\n * method's behavior.\n *\n * @param {module:engine/model/model~Model} model The model in context of which the insertion\n * should be performed.\n * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n * Selection of which the content should be deleted.\n * @param {module:engine/model/batch~Batch} batch Batch to which the operations will be added.\n * @param {Object} [options]\n * @param {Boolean} [options.leaveUnmerged=false] Whether to merge elements after removing the content of the selection.\n *\n * For example `<heading>x[x</heading><paragraph>y]y</paragraph>` will become:\n *\n * * `<heading>x^y</heading>` with the option disabled (`leaveUnmerged == false`)\n * * `<heading>x^</heading><paragraph>y</paragraph>` with enabled (`leaveUnmerged == true`).\n *\n * Note: {@link module:engine/model/schema~Schema#isObject object} and {@link module:engine/model/schema~Schema#isLimit limit}\n * elements will not be merged.\n *\n * @param {Boolean} [options.doNotResetEntireContent=false] Whether to skip replacing the entire content with a\n * paragraph when the entire content was selected.\n *\n * For example `<heading>[x</heading><paragraph>y]</paragraph>` will become:\n *\n * * `<paragraph>^</paragraph>` with the option disabled (`doNotResetEntireContent == false`)\n * * `<heading>^</heading>` with enabled (`doNotResetEntireContent == true`).\n *\n * @param {Boolean} [options.doNotAutoparagraph=false] Whether to create a paragraph if after content deletion selection is moved\n * to a place where text cannot be inserted.\n *\n * For example `<paragraph>x</paragraph>[<image src=\"foo.jpg\"></image>]` will become:\n *\n * * `<paragraph>x</paragraph><paragraph>[]</paragraph>` with the option disabled (`doNotAutoparagraph == false`)\n * * `<paragraph>x[]</paragraph>` with the option enabled (`doNotAutoparagraph == true`).\n *\n * **Note:** if there is no valid position for the selection, the paragraph will always be created:\n *\n * `[<image src=\"foo.jpg\"></image>]` -> `<paragraph>[]</paragraph>`.\n */\n\nexport default function deleteContent(model, selection) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (selection.isCollapsed) {\n    return;\n  }\n\n  var selRange = selection.getFirstRange(); // If the selection is already removed, don't do anything.\n\n  if (selRange.root.rootName == '$graveyard') {\n    return;\n  }\n\n  var schema = model.schema;\n  model.change(function (writer) {\n    // 1. Replace the entire content with paragraph.\n    // See: https://github.com/ckeditor/ckeditor5-engine/issues/1012#issuecomment-315017594.\n    if (!options.doNotResetEntireContent && shouldEntireContentBeReplacedWithParagraph(schema, selection)) {\n      replaceEntireContentWithParagraph(writer, selection, schema);\n      return;\n    }\n\n    var startPos = selRange.start;\n    var endPos = LivePosition.fromPosition(selRange.end, 'toNext'); // 2. Remove the content if there is any.\n\n    if (!selRange.start.isTouching(selRange.end)) {\n      writer.remove(selRange);\n    } // 3. Merge elements in the right branch to the elements in the left branch.\n    // The only reasonable (in terms of data and selection correctness) case in which we need to do that is:\n    //\n    // <heading type=1>Fo[</heading><paragraph>]ar</paragraph> => <heading type=1>Fo^ar</heading>\n    //\n    // However, the algorithm supports also merging deeper structures (up to the depth of the shallower branch),\n    // as it's hard to imagine what should actually be the default behavior. Usually, specific features will\n    // want to override that behavior anyway.\n\n\n    if (!options.leaveUnmerged) {\n      mergeBranches(writer, startPos, endPos); // TMP this will be replaced with a postfixer.\n      // We need to check and strip disallowed attributes in all nested nodes because after merge\n      // some attributes could end up in a path where are disallowed.\n      //\n      // e.g. bold is disallowed for <H1>\n      // <h1>Fo{o</h1><p>b}a<b>r</b><p> -> <h1>Fo{}a<b>r</b><h1> -> <h1>Fo{}ar<h1>.\n\n      schema.removeDisallowedAttributes(startPos.parent.getChildren(), writer);\n    }\n\n    collapseSelectionAt(writer, selection, startPos); // 4. Add a paragraph to set selection in it.\n    // Check if a text is allowed in the new container. If not, try to create a new paragraph (if it's allowed here).\n\n    if (shouldAutoparagraph(schema, startPos)) {\n      // If auto-paragraphing is off, find the closest valid selection range and collapse the selection there.\n      // If there is no valid selection range, create paragraph anyway and set selection there.\n      var validSelectionRange = schema.getNearestSelectionRange(startPos);\n\n      if (options.doNotAutoparagraph && validSelectionRange) {\n        collapseSelectionAt(writer, selection, validSelectionRange);\n      } else {\n        insertParagraph(writer, startPos, selection);\n      }\n    }\n\n    endPos.detach();\n  });\n} // This function is a result of reaching the Ballmer's peak for just the right amount of time.\n// Even I had troubles documenting it after a while and after reading it again I couldn't believe that it really works.\n\nfunction mergeBranches(writer, startPos, endPos) {\n  var startParent = startPos.parent;\n  var endParent = endPos.parent; // If both positions ended up in the same parent, then there's nothing more to merge:\n  // <$root><p>x[]</p><p>{}y</p></$root> => <$root><p>xy</p>[]{}</$root>\n\n  if (startParent == endParent) {\n    return;\n  } // If one of the positions is a limit element, then there's nothing to merge because we don't want to cross the limit boundaries.\n\n\n  if (writer.model.schema.isLimit(startParent) || writer.model.schema.isLimit(endParent)) {\n    return;\n  } // Check if operations we'll need to do won't need to cross object or limit boundaries.\n  // E.g., we can't merge endParent into startParent in this case:\n  // <limit><startParent>x[]</startParent></limit><endParent>{}</endParent>\n\n\n  if (!checkCanBeMerged(startPos, endPos, writer.model.schema)) {\n    return;\n  } // Remember next positions to merge. For example:\n  // <a><b>x[]</b></a><c><d>{}y</d></c>\n  // will become:\n  // <a><b>xy</b>[]</a><c>{}</c>\n\n\n  startPos = writer.createPositionAfter(startParent);\n  endPos = writer.createPositionBefore(endParent);\n\n  if (!endPos.isEqual(startPos)) {\n    // In this case, before we merge, we need to move `endParent` to the `startPos`:\n    // <a><b>x[]</b></a><c><d>{}y</d></c>\n    // becomes:\n    // <a><b>x</b>[]<d>y</d></a><c>{}</c>\n    writer.insert(endParent, startPos);\n  } // Merge two siblings:\n  // <a>x</a>[]<b>y</b> -> <a>xy</a> (the usual case)\n  // <a><b>x</b>[]<d>y</d></a><c></c> -> <a><b>xy</b>[]</a><c></c> (this is the \"move parent\" case shown above)\n\n\n  writer.merge(startPos); // Remove empty end ancestors:\n  // <a>fo[o</a><b><a><c>bar]</c></a></b>\n  // becomes:\n  // <a>fo[]</a><b><a>{}</a></b>\n  // So we can remove <a> and <b>.\n\n  while (endPos.parent.isEmpty) {\n    var parentToRemove = endPos.parent;\n    endPos = writer.createPositionBefore(parentToRemove);\n    writer.remove(parentToRemove);\n  } // Continue merging next level.\n\n\n  mergeBranches(writer, startPos, endPos);\n}\n\nfunction shouldAutoparagraph(schema, position) {\n  var isTextAllowed = schema.checkChild(position, '$text');\n  var isParagraphAllowed = schema.checkChild(position, 'paragraph');\n  return !isTextAllowed && isParagraphAllowed;\n} // Check if parents of two positions can be merged by checking if there are no limit/object\n// boundaries between those two positions.\n//\n// E.g. in <bQ><p>x[]</p></bQ><widget><caption>{}</caption></widget>\n// we'll check <p>, <bQ>, <widget> and <caption>.\n// Usually, widget and caption are marked as objects/limits in the schema, so in this case merging will be blocked.\n\n\nfunction checkCanBeMerged(leftPos, rightPos, schema) {\n  var rangeToCheck = new Range(leftPos, rightPos);\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = rangeToCheck.getWalker()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var value = _step.value;\n\n      if (schema.isLimit(value.item)) {\n        return false;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return true;\n}\n\nfunction insertParagraph(writer, position, selection) {\n  var paragraph = writer.createElement('paragraph');\n  writer.insert(paragraph, position);\n  collapseSelectionAt(writer, selection, writer.createPositionAt(paragraph, 0));\n}\n\nfunction replaceEntireContentWithParagraph(writer, selection) {\n  var limitElement = writer.model.schema.getLimitElement(selection);\n  writer.remove(writer.createRangeIn(limitElement));\n  insertParagraph(writer, writer.createPositionAt(limitElement, 0), selection);\n} // We want to replace the entire content with a paragraph when:\n// * the entire content is selected,\n// * selection contains at least two elements,\n// * whether the paragraph is allowed in schema in the common ancestor.\n\n\nfunction shouldEntireContentBeReplacedWithParagraph(schema, selection) {\n  var limitElement = schema.getLimitElement(selection);\n\n  if (!selection.containsEntireContent(limitElement)) {\n    return false;\n  }\n\n  var range = selection.getFirstRange();\n\n  if (range.start.parent == range.end.parent) {\n    return false;\n  }\n\n  return schema.checkChild(limitElement, 'paragraph');\n} // Helper function that sets the selection. Depending whether given `selection` is a document selection or not,\n// uses a different method to set it.\n\n\nfunction collapseSelectionAt(writer, selection, positionOrRange) {\n  if (selection instanceof DocumentSelection) {\n    writer.setSelection(positionOrRange);\n  } else {\n    selection.setTo(positionOrRange);\n  }\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/utils/modifyselection\n */\nimport Position from '../position';\nimport TreeWalker from '../treewalker';\nimport Range from '../range';\nimport { isInsideSurrogatePair, isInsideCombinedSymbol } from '@ckeditor/ckeditor5-utils/src/unicode';\nimport DocumentSelection from '../documentselection';\nvar wordBoundaryCharacters = ' ,.?!:;\"-()';\n/**\n * Modifies the selection. Currently, the supported modifications are:\n *\n * * Extending. The selection focus is moved in the specified `options.direction` with a step specified in `options.unit`.\n * Possible values for `unit` are:\n *  * `'character'` (default) - moves selection by one user-perceived character. In most cases this means moving by one\n *  character in `String` sense. However, unicode also defines \"combing marks\". These are special symbols, that combines\n *  with a symbol before it (\"base character\") to create one user-perceived character. For example, `q̣̇` is a normal\n *  letter `q` with two \"combining marks\": upper dot (`Ux0307`) and lower dot (`Ux0323`). For most actions, i.e. extending\n *  selection by one position, it is correct to include both \"base character\" and all of it's \"combining marks\". That is\n *  why `'character'` value is most natural and common method of modifying selection.\n *  * `'codePoint'` - moves selection by one unicode code point. In contrary to, `'character'` unit, this will insert\n *  selection between \"base character\" and \"combining mark\", because \"combining marks\" have their own unicode code points.\n *  However, for technical reasons, unicode code points with values above `UxFFFF` are represented in native `String` by\n *  two characters, called \"surrogate pairs\". Halves of \"surrogate pairs\" have a meaning only when placed next to each other.\n *  For example `𨭎` is represented in `String` by `\\uD862\\uDF4E`. Both `\\uD862` and `\\uDF4E` do not have any meaning\n *  outside the pair (are rendered as ? when alone). Position between them would be incorrect. In this case, selection\n *  extension will include whole \"surrogate pair\".\n *  * `'word'` - moves selection by a whole word.\n *\n * **Note:** if you extend a forward selection in a backward direction you will in fact shrink it.\n *\n * **Note:** Use {@link module:engine/model/model~Model#modifySelection} instead of this function.\n * This function is only exposed to be reusable in algorithms\n * which change the {@link module:engine/model/model~Model#modifySelection}\n * method's behavior.\n *\n * @param {module:engine/model/model~Model} model The model in context of which\n * the selection modification should be performed.\n * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n * The selection to modify.\n * @param {Object} [options]\n * @param {'forward'|'backward'} [options.direction='forward'] The direction in which the selection should be modified.\n * @param {'character'|'codePoint'|'word'} [options.unit='character'] The unit by which selection should be modified.\n */\n\nexport default function modifySelection(model, selection) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var schema = model.schema;\n  var isForward = options.direction != 'backward';\n  var unit = options.unit ? options.unit : 'character';\n  var focus = selection.focus;\n  var walker = new TreeWalker({\n    boundaries: getSearchRange(focus, isForward),\n    singleCharacters: true,\n    direction: isForward ? 'forward' : 'backward'\n  });\n  var data = {\n    walker: walker,\n    schema: schema,\n    isForward: isForward,\n    unit: unit\n  };\n  var next;\n\n  var _loop = function _loop() {\n    if (next.done) {\n      return {\n        v: void 0\n      };\n    }\n\n    var position = tryExtendingTo(data, next.value);\n\n    if (position) {\n      if (selection instanceof DocumentSelection) {\n        model.change(function (writer) {\n          writer.setSelectionFocus(position);\n        });\n      } else {\n        selection.setFocus(position);\n      }\n\n      return {\n        v: void 0\n      };\n    }\n  };\n\n  while (next = walker.next()) {\n    var _ret = _loop();\n\n    if (_typeof(_ret) === \"object\") return _ret.v;\n  }\n} // Checks whether the selection can be extended to the the walker's next value (next position).\n// @param {{ walker, unit, isForward, schema }} data\n// @param {module:engine/view/treewalker~TreeWalkerValue} value\n\nfunction tryExtendingTo(data, value) {\n  // If found text, we can certainly put the focus in it. Let's just find a correct position\n  // based on the unit.\n  if (value.type == 'text') {\n    if (data.unit === 'word') {\n      return getCorrectWordBreakPosition(data.walker, data.isForward);\n    }\n\n    return getCorrectPosition(data.walker, data.unit, data.isForward);\n  } // Entering an element.\n\n\n  if (value.type == (data.isForward ? 'elementStart' : 'elementEnd')) {\n    // If it's an object, we can select it now.\n    if (data.schema.isObject(value.item)) {\n      return Position._createAt(value.item, data.isForward ? 'after' : 'before');\n    } // If text allowed on this position, extend to this place.\n\n\n    if (data.schema.checkChild(value.nextPosition, '$text')) {\n      return value.nextPosition;\n    }\n  } // Leaving an element.\n  else {\n      // If leaving a limit element, stop.\n      if (data.schema.isLimit(value.item)) {\n        // NOTE: Fast-forward the walker until the end.\n        data.walker.skip(function () {\n          return true;\n        });\n        return;\n      } // If text allowed on this position, extend to this place.\n\n\n      if (data.schema.checkChild(value.nextPosition, '$text')) {\n        return value.nextPosition;\n      }\n    }\n} // Finds a correct position by walking in a text node and checking whether selection can be extended to given position\n// or should be extended further.\n//\n// @param {module:engine/model/treewalker~TreeWalker} walker\n// @param {String} unit The unit by which selection should be modified.\n\n\nfunction getCorrectPosition(walker, unit) {\n  var textNode = walker.position.textNode;\n\n  if (textNode) {\n    var data = textNode.data;\n    var offset = walker.position.offset - textNode.startOffset;\n\n    while (isInsideSurrogatePair(data, offset) || unit == 'character' && isInsideCombinedSymbol(data, offset)) {\n      walker.next();\n      offset = walker.position.offset - textNode.startOffset;\n    }\n  }\n\n  return walker.position;\n} // Finds a correct position of a word break by walking in a text node and checking whether selection can be extended to given position\n// or should be extended further.\n//\n// @param {module:engine/model/treewalker~TreeWalker} walker\n// @param {Boolean} isForward Is the direction in which the selection should be modified is forward.\n\n\nfunction getCorrectWordBreakPosition(walker, isForward) {\n  var textNode = walker.position.textNode;\n\n  if (textNode) {\n    var offset = walker.position.offset - textNode.startOffset;\n\n    while (!isAtWordBoundary(textNode.data, offset, isForward) && !isAtNodeBoundary(textNode, offset, isForward)) {\n      walker.next(); // Check of adjacent text nodes with different attributes (like BOLD).\n      // Example          : 'foofoo []bar<$text bold=\"true\">bar</$text> bazbaz'\n      // should expand to : 'foofoo [bar<$text bold=\"true\">bar</$text>] bazbaz'.\n\n      var nextNode = isForward ? walker.position.nodeAfter : walker.position.nodeBefore; // Scan only text nodes. Ignore inline elements (like `<softBreak>`).\n\n      if (nextNode && nextNode.is('text')) {\n        // Check boundary char of an adjacent text node.\n        var boundaryChar = nextNode.data.charAt(isForward ? 0 : nextNode.data.length - 1); // Go to the next node if the character at the boundary of that node belongs to the same word.\n\n        if (!wordBoundaryCharacters.includes(boundaryChar)) {\n          // If adjacent text node belongs to the same word go to it & reset values.\n          walker.next();\n          textNode = walker.position.textNode;\n        }\n      }\n\n      offset = walker.position.offset - textNode.startOffset;\n    }\n  }\n\n  return walker.position;\n}\n\nfunction getSearchRange(start, isForward) {\n  var root = start.root;\n\n  var searchEnd = Position._createAt(root, isForward ? 'end' : 0);\n\n  if (isForward) {\n    return new Range(start, searchEnd);\n  } else {\n    return new Range(searchEnd, start);\n  }\n} // Checks if selection is on word boundary.\n//\n// @param {String} data The text node value to investigate.\n// @param {Number} offset Position offset.\n// @param {Boolean} isForward Is the direction in which the selection should be modified is forward.\n\n\nfunction isAtWordBoundary(data, offset, isForward) {\n  // The offset to check depends on direction.\n  var offsetToCheck = offset + (isForward ? 0 : -1);\n  return wordBoundaryCharacters.includes(data.charAt(offsetToCheck));\n} // Checks if selection is on node boundary.\n//\n// @param {module:engine/model/text~Text} textNode The text node to investigate.\n// @param {Number} offset Position offset.\n// @param {Boolean} isForward Is the direction in which the selection should be modified is forward.\n\n\nfunction isAtNodeBoundary(textNode, offset, isForward) {\n  return offset === (isForward ? textNode.endOffset : 0);\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/utils/getselectedcontent\n */\n\n/**\n * Gets a clone of the selected content.\n *\n * For example, for the following selection:\n *\n * ```html\n * <p>x</p><quote><p>y</p><h>fir[st</h></quote><p>se]cond</p><p>z</p>\n * ```\n *\n * It will return a document fragment with such a content:\n *\n * ```html\n * <quote><h>st</h></quote><p>se</p>\n * ```\n *\n * @param {module:engine/model/model~Model} model The model in context of which\n * the selection modification should be performed.\n * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n * The selection of which content will be returned.\n * @returns {module:engine/model/documentfragment~DocumentFragment}\n */\nexport default function getSelectedContent(model, selection) {\n  return model.change(function (writer) {\n    var frag = writer.createDocumentFragment();\n    var range = selection.getFirstRange();\n\n    if (!range || range.isCollapsed) {\n      return frag;\n    }\n\n    var root = range.start.root;\n    var commonPath = range.start.getCommonPath(range.end);\n    var commonParent = root.getNodeByPath(commonPath); // ## 1st step\n    //\n    // First, we'll clone a fragment represented by a minimal flat range\n    // containing the original range to be cloned.\n    // E.g. let's consider such a range:\n    //\n    // <p>x</p><quote><p>y</p><h>fir[st</h></quote><p>se]cond</p><p>z</p>\n    //\n    // A minimal flat range containing this one is:\n    //\n    // <p>x</p>[<quote><p>y</p><h>first</h></quote><p>second</p>]<p>z</p>\n    //\n    // We can easily clone this structure, preserving e.g. the <quote> element.\n\n    var flatSubtreeRange;\n\n    if (range.start.parent == range.end.parent) {\n      // The original range is flat, so take it.\n      flatSubtreeRange = range;\n    } else {\n      flatSubtreeRange = writer.createRange(writer.createPositionAt(commonParent, range.start.path[commonPath.length]), writer.createPositionAt(commonParent, range.end.path[commonPath.length] + 1));\n    }\n\n    var howMany = flatSubtreeRange.end.offset - flatSubtreeRange.start.offset; // Clone the whole contents.\n\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = flatSubtreeRange.getItems({\n        shallow: true\n      })[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var item = _step.value;\n\n        if (item.is('textProxy')) {\n          writer.appendText(item.data, item.getAttributes(), frag);\n        } else {\n          writer.append(item._clone(true), frag);\n        }\n      } // ## 2nd step\n      //\n      // If the original range wasn't flat, then we need to remove the excess nodes from the both ends of the cloned fragment.\n      //\n      // For example, for the range shown in the 1st step comment, we need to remove these pieces:\n      //\n      // <quote>[<p>y</p>]<h>[fir]st</h></quote><p>se[cond]</p>\n      //\n      // So this will be the final copied content:\n      //\n      // <quote><h>st</h></quote><p>se</p>\n      //\n      // In order to do that, we remove content from these two ranges:\n      //\n      // [<quote><p>y</p><h>fir]st</h></quote><p>se[cond</p>]\n\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n          _iterator[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    if (flatSubtreeRange != range) {\n      // Find the position of the original range in the cloned fragment.\n      var newRange = range._getTransformedByMove(flatSubtreeRange.start, writer.createPositionAt(frag, 0), howMany)[0];\n\n      var leftExcessRange = writer.createRange(writer.createPositionAt(frag, 0), newRange.start);\n      var rightExcessRange = writer.createRange(newRange.end, writer.createPositionAt(frag, 'end'));\n      removeRangeContent(rightExcessRange, writer);\n      removeRangeContent(leftExcessRange, writer);\n    }\n\n    return frag;\n  });\n} // After https://github.com/ckeditor/ckeditor5-engine/issues/690 is fixed,\n// this function will, most likely, be able to rewritten using getMinimalFlatRanges().\n\nfunction removeRangeContent(range, writer) {\n  var parentsToCheck = [];\n  Array.from(range.getItems({\n    direction: 'backward'\n  })) // We should better store ranges because text proxies will lose integrity\n  // with the text nodes when we'll start removing content.\n  .map(function (item) {\n    return writer.createRangeOn(item);\n  }) // Filter only these items which are fully contained in the passed range.\n  //\n  // E.g. for the following range: [<quote><p>y</p><h>fir]st</h>\n  // the walker will return the entire <h> element, when only the \"fir\" item inside it is fully contained.\n  .filter(function (itemRange) {\n    // We should be able to use Range.containsRange, but https://github.com/ckeditor/ckeditor5-engine/issues/691.\n    var contained = (itemRange.start.isAfter(range.start) || itemRange.start.isEqual(range.start)) && (itemRange.end.isBefore(range.end) || itemRange.end.isEqual(range.end));\n    return contained;\n  }).forEach(function (itemRange) {\n    parentsToCheck.push(itemRange.start.parent);\n    writer.remove(itemRange);\n  }); // Remove ancestors of the removed items if they turned to be empty now\n  // (their whole content was contained in the range).\n\n  parentsToCheck.forEach(function (parentToCheck) {\n    var parent = parentToCheck;\n\n    while (parent.parent && parent.isEmpty) {\n      var removeRange = writer.createRangeOn(parent);\n      parent = parent.parent;\n      writer.remove(removeRange);\n    }\n  });\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/utils/selection-post-fixer\n */\nimport Range from '../range';\nimport Position from '../position';\n/**\n * Injects selection post-fixer to the model.\n *\n * The role of the selection post-fixer is to ensure that the selection is in a correct place\n * after a {@link module:engine/model/model~Model#change `change()`} block was executed.\n *\n * The correct position means that:\n *\n * * All collapsed selection ranges are in a place where the {@link module:engine/model/schema~Schema}\n * allows a `$text`.\n * * None of the selection's non-collapsed ranges crosses a {@link module:engine/model/schema~Schema#isLimit limit element}\n * boundary (a range must be rooted within one limit element).\n * * Only {@link module:engine/model/schema~Schema#isObject object elements} can be selected from the outside\n * (e.g. `[<paragraph>foo</paragraph>]` is invalid). This rule applies independently to both selection ends, so this\n * selection is correct: `<paragraph>f[oo</paragraph><image></image>]`.\n *\n * If the position is not correct, the post-fixer will automatically correct it.\n *\n * ## Fixing a non-collapsed selection\n *\n * See as an example a selection that starts in a P1 element and ends inside the text of a TD element\n * (`[` and `]` are range boundaries and `(l)` denotes an element defined as `isLimit=true`):\n *\n *\t\troot\n *\t\t |- element P1\n *\t\t |   |- \"foo\"                                      root\n *\t\t |- element TABLE (l)                   P1         TABLE             P2\n *\t\t |   |- element TR (l)                 f o[o     TR      TR         b a r\n *\t\t |   |   |- element TD (l)                       TD      TD\n *\t\t |   |       |- \"aaa\"                          a]a a    b b b\n *\t\t |   |- element TR (l)\n *\t\t |   |   |- element TD (l)                           ||\n *\t\t |   |       |- \"bbb\"                                ||\n *\t\t |- element P2                                       VV\n *\t\t |   |- \"bar\"\n *\t\t                                                   root\n *\t\t                                        P1         TABLE]            P2\n *\t\t                                       f o[o     TR      TR         b a r\n *\t\t                                                 TD      TD\n *\t\t                                               a a a    b b b\n *\n * In the example above, the TABLE, TR and TD are defined as `isLimit=true` in the schema. The range which is not contained within\n * a single limit element must be expanded to select the outermost limit element. The range end is inside the text node of the TD element.\n * As the TD element is a child of the TR and TABLE elements, where both are defined as `isLimit=true` in the schema, the range must be\n * expanded to select the whole TABLE element.\n *\n * **Note** If the selection contains multiple ranges, the method returns a minimal set of ranges that are not intersecting after expanding\n * them to select `isLimit=true` elements.\n *\n * @param {module:engine/model/model~Model} model\n */\n\nexport function injectSelectionPostFixer(model) {\n  model.document.registerPostFixer(function (writer) {\n    return selectionPostFixer(writer, model);\n  });\n} // The selection post-fixer.\n//\n// @param {module:engine/model/writer~Writer} writer\n// @param {module:engine/model/model~Model} model\n\nfunction selectionPostFixer(writer, model) {\n  var selection = model.document.selection;\n  var schema = model.schema;\n  var ranges = [];\n  var wasFixed = false;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = selection.getRanges()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var modelRange = _step.value;\n      // Go through all ranges in selection and try fixing each of them.\n      // Those ranges might overlap but will be corrected later.\n      var correctedRange = tryFixingRange(modelRange, schema);\n\n      if (correctedRange) {\n        ranges.push(correctedRange);\n        wasFixed = true;\n      } else {\n        ranges.push(modelRange);\n      }\n    } // If any of ranges were corrected update the selection.\n\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  if (wasFixed) {\n    // The above algorithm might create ranges that intersects each other when selection contains more then one range.\n    // This is case happens mostly on Firefox which creates multiple ranges for selected table.\n    var fixedRanges = ranges; // Fixing selection with many ranges usually breaks the selection in Firefox. As only Firefox supports multiple selection ranges\n    // we simply create one continuous range from fixed selection ranges (even if they are not adjacent).\n\n    if (ranges.length > 1) {\n      var selectionStart = ranges[0].start;\n      var selectionEnd = ranges[ranges.length - 1].end;\n      fixedRanges = [new Range(selectionStart, selectionEnd)];\n    }\n\n    writer.setSelection(fixedRanges, {\n      backward: selection.isBackward\n    });\n  }\n} // Tries fixing a range if it's incorrect.\n//\n// @param {module:engine/model/range~Range} range\n// @param {module:engine/model/schema~Schema} schema\n// @returns {module:engine/model/range~Range|null} Returns fixed range or null if range is valid.\n\n\nfunction tryFixingRange(range, schema) {\n  if (range.isCollapsed) {\n    return tryFixingCollapsedRange(range, schema);\n  }\n\n  return tryFixingNonCollapsedRage(range, schema);\n} // Tries to fix collapsed ranges.\n//\n// * Fixes situation when a range is in a place where $text is not allowed\n//\n// @param {module:engine/model/range~Range} range Collapsed range to fix.\n// @param {module:engine/model/schema~Schema} schema\n// @returns {module:engine/model/range~Range|null} Returns fixed range or null if range is valid.\n\n\nfunction tryFixingCollapsedRange(range, schema) {\n  var originalPosition = range.start;\n  var nearestSelectionRange = schema.getNearestSelectionRange(originalPosition); // This might be null ie when editor data is empty.\n  // In such cases there is no need to fix the selection range.\n\n  if (!nearestSelectionRange) {\n    return null;\n  }\n\n  var fixedPosition = nearestSelectionRange.start; // Fixed position is the same as original - no need to return corrected range.\n\n  if (originalPosition.isEqual(fixedPosition)) {\n    return null;\n  } // Check single node selection (happens in tables).\n\n\n  if (fixedPosition.nodeAfter && schema.isLimit(fixedPosition.nodeAfter)) {\n    return new Range(fixedPosition, Position._createAfter(fixedPosition.nodeAfter));\n  }\n\n  return new Range(fixedPosition);\n} // Tries to fix an expanded range.\n//\n// @param {module:engine/model/range~Range} range Expanded range to fix.\n// @param {module:engine/model/schema~Schema} schema\n// @returns {module:engine/model/range~Range|null} Returns fixed range or null if range is valid.\n\n\nfunction tryFixingNonCollapsedRage(range, schema) {\n  var start = range.start;\n  var end = range.end;\n  var isTextAllowedOnStart = schema.checkChild(start, '$text');\n  var isTextAllowedOnEnd = schema.checkChild(end, '$text');\n  var startLimitElement = schema.getLimitElement(start);\n  var endLimitElement = schema.getLimitElement(end); // Ranges which both end are inside the same limit element (or root) might needs only minor fix.\n\n  if (startLimitElement === endLimitElement) {\n    // Range is valid when both position allows to place a text:\n    // - <block>f[oobarba]z</block>\n    // This would be \"fixed\" by a next check but as it will be the same it's better to return null so the selection stays the same.\n    if (isTextAllowedOnStart && isTextAllowedOnEnd) {\n      return null;\n    } // Range that is on non-limit element (or is partially) must be fixed so it is placed inside the block around $text:\n    // - [<block>foo</block>]    ->    <block>[foo]</block>\n    // - [<block>foo]</block>    ->    <block>[foo]</block>\n    // - <block>f[oo</block>]    ->    <block>f[oo]</block>\n    // - [<block>foo</block><object></object>]    ->    <block>[foo</block><object></object>]\n\n\n    if (checkSelectionOnNonLimitElements(start, end, schema)) {\n      var isStartObject = start.nodeAfter && schema.isObject(start.nodeAfter);\n      var fixedStart = isStartObject ? null : schema.getNearestSelectionRange(start, 'forward');\n      var isEndObject = end.nodeBefore && schema.isObject(end.nodeBefore);\n      var fixedEnd = isEndObject ? null : schema.getNearestSelectionRange(end, 'backward'); // The schema.getNearestSelectionRange might return null - if that happens use original position.\n\n      var rangeStart = fixedStart ? fixedStart.start : start;\n      var rangeEnd = fixedEnd ? fixedEnd.start : end;\n      return new Range(rangeStart, rangeEnd);\n    }\n  }\n\n  var isStartInLimit = startLimitElement && !startLimitElement.is('rootElement');\n  var isEndInLimit = endLimitElement && !endLimitElement.is('rootElement'); // At this point we eliminated valid positions on text nodes so if one of range positions is placed inside a limit element\n  // then the range crossed limit element boundaries and needs to be fixed.\n\n  if (isStartInLimit || isEndInLimit) {\n    var bothInSameParent = start.nodeAfter && end.nodeBefore && start.nodeAfter.parent === end.nodeBefore.parent;\n    var expandStart = isStartInLimit && (!bothInSameParent || !isInObject(start.nodeAfter, schema));\n    var expandEnd = isEndInLimit && (!bothInSameParent || !isInObject(end.nodeBefore, schema)); // Although we've already found limit element on start/end positions we must find the outer-most limit element.\n    // as limit elements might be nested directly inside (ie table > tableRow > tableCell).\n\n    var _fixedStart = start;\n    var _fixedEnd = end;\n\n    if (expandStart) {\n      _fixedStart = Position._createBefore(findOutermostLimitAncestor(startLimitElement, schema));\n    }\n\n    if (expandEnd) {\n      _fixedEnd = Position._createAfter(findOutermostLimitAncestor(endLimitElement, schema));\n    }\n\n    return new Range(_fixedStart, _fixedEnd);\n  } // Range was not fixed at this point so it is valid - ie it was placed around limit element already.\n\n\n  return null;\n} // Finds the outer-most ancestor.\n//\n// @param {module:engine/model/node~Node} startingNode\n// @param {module:engine/model/schema~Schema} schema\n// @param {String} expandToDirection Direction of expansion - either 'start' or 'end' of the range.\n// @returns {module:engine/model/node~Node}\n\n\nfunction findOutermostLimitAncestor(startingNode, schema) {\n  var isLimitNode = startingNode;\n  var parent = isLimitNode; // Find outer most isLimit block as such blocks might be nested (ie. in tables).\n\n  while (schema.isLimit(parent) && parent.parent) {\n    isLimitNode = parent;\n    parent = parent.parent;\n  }\n\n  return isLimitNode;\n} // Checks whether any of range boundaries is placed around non-limit elements.\n//\n// @param {module:engine/model/position~Position} start\n// @param {module:engine/model/position~Position} end\n// @param {module:engine/model/schema~Schema} schema\n// @returns {Boolean}\n\n\nfunction checkSelectionOnNonLimitElements(start, end, schema) {\n  var startIsOnBlock = start.nodeAfter && !schema.isLimit(start.nodeAfter) || schema.checkChild(start, '$text');\n  var endIsOnBlock = end.nodeBefore && !schema.isLimit(end.nodeBefore) || schema.checkChild(end, '$text'); // We should fix such selection when one of those nodes needs fixing.\n\n  return startIsOnBlock || endIsOnBlock;\n} // Checks if node exists and if it's an object.\n//\n// @param {module:engine/model/node~Node} node\n// @param {module:engine/model/schema~Schema} schema\n// @returns {Boolean}\n\n\nfunction isInObject(node, schema) {\n  return node && schema.isObject(node);\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/model\n */\nimport Batch from './batch';\nimport Writer from './writer';\nimport Schema from './schema';\nimport Document from './document';\nimport MarkerCollection from './markercollection';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport ModelElement from './element';\nimport ModelRange from './range';\nimport ModelPosition from './position';\nimport ModelSelection from './selection';\nimport _insertContent from './utils/insertcontent';\nimport _deleteContent from './utils/deletecontent';\nimport _modifySelection from './utils/modifyselection';\nimport _getSelectedContent from './utils/getselectedcontent';\nimport { injectSelectionPostFixer } from './utils/selection-post-fixer';\n/**\n * Editor's data model. Read about the model in the\n * {@glink framework/guides/architecture/editing-engine engine architecture guide}.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\n\nvar Model =\n/*#__PURE__*/\nfunction () {\n  function Model() {\n    var _this = this;\n\n    _classCallCheck(this, Model);\n\n    /**\n     * Model's marker collection.\n     *\n     * @readonly\n     * @member {module:engine/model/markercollection~MarkerCollection}\n     */\n    this.markers = new MarkerCollection();\n    /**\n     * Model's document.\n     *\n     * @readonly\n     * @member {module:engine/model/document~Document}\n     */\n\n    this.document = new Document(this);\n    /**\n     * Model's schema.\n     *\n     * @readonly\n     * @member {module:engine/model/schema~Schema}\n     */\n\n    this.schema = new Schema();\n    /**\n     * All callbacks added by {@link module:engine/model/model~Model#change} or\n     * {@link module:engine/model/model~Model#enqueueChange} methods waiting to be executed.\n     *\n     * @private\n     * @type {Array.<Function>}\n     */\n\n    this._pendingChanges = [];\n    /**\n     * The last created and currently used writer instance.\n     *\n     * @private\n     * @member {module:engine/model/writer~Writer}\n     */\n\n    this._currentWriter = null;\n    ['insertContent', 'deleteContent', 'modifySelection', 'getSelectedContent', 'applyOperation'].forEach(function (methodName) {\n      return _this.decorate(methodName);\n    }); // Adding operation validation with `highest` priority, so it is called before any other feature would like\n    // to do anything with the operation. If the operation has incorrect parameters it should throw on the earliest occasion.\n\n    this.on('applyOperation', function (evt, args) {\n      var operation = args[0];\n\n      operation._validate();\n    }, {\n      priority: 'highest'\n    }); // Register some default abstract entities.\n\n    this.schema.register('$root', {\n      isLimit: true\n    });\n    this.schema.register('$block', {\n      allowIn: '$root',\n      isBlock: true\n    });\n    this.schema.register('$text', {\n      allowIn: '$block',\n      isInline: true\n    });\n    this.schema.register('$clipboardHolder', {\n      allowContentOf: '$root',\n      isLimit: true\n    });\n    this.schema.extend('$text', {\n      allowIn: '$clipboardHolder'\n    }); // An element needed by the `upcastElementToMarker` converter.\n    // This element temporarily represents a marker boundary during the conversion process and is removed\n    // at the end of the conversion. `UpcastDispatcher` or at least `Conversion` class looks like a\n    // better place for this registration but both know nothing about `Schema`.\n\n    this.schema.register('$marker');\n    this.schema.addChildCheck(function (context, childDefinition) {\n      if (childDefinition.name === '$marker') {\n        return true;\n      }\n    });\n    injectSelectionPostFixer(this);\n  }\n  /**\n   * The `change()` method is the primary way of changing the model. You should use it to modify all document nodes\n   * (including detached nodes – i.e. nodes not added to the {@link module:engine/model/model~Model#document model document}),\n   * the {@link module:engine/model/document~Document#selection document's selection}, and\n   * {@link module:engine/model/model~Model#markers model markers}.\n   *\n   *\t\tmodel.change( writer => {\n   *\t\t\twriter.insertText( 'foo', paragraph, 'end' );\n   *\t\t} );\n   *\n   * All changes inside the change block use the same {@link module:engine/model/batch~Batch} so they are combined\n   * into a single undo step.\n   *\n   *\t\tmodel.change( writer => {\n   *\t\t\twriter.insertText( 'foo', paragraph, 'end' ); // foo.\n   *\n   *\t\t\tmodel.change( writer => {\n   *\t\t\t\twriter.insertText( 'bar', paragraph, 'end' ); // foobar.\n   *\t\t\t} );\n   *\n   * \t\t\twriter.insertText( 'bom', paragraph, 'end' ); // foobarbom.\n   *\t\t} );\n   *\n   * The callback of the `change()` block is executed synchronously.\n   *\n   * You can also return a value from the change block.\n   *\n   *\t\tconst img = model.change( writer => {\n   *\t\t\treturn writer.createElement( 'img' );\n   *\t\t} );\n   *\n   * @see #enqueueChange\n   * @param {Function} callback Callback function which may modify the model.\n   * @returns {*} Value returned by the callback.\n   */\n\n\n  _createClass(Model, [{\n    key: \"change\",\n    value: function change(callback) {\n      if (this._pendingChanges.length === 0) {\n        // If this is the outermost block, create a new batch and start `_runPendingChanges` execution flow.\n        this._pendingChanges.push({\n          batch: new Batch(),\n          callback: callback\n        });\n\n        return this._runPendingChanges()[0];\n      } else {\n        // If this is not the outermost block, just execute the callback.\n        return callback(this._currentWriter);\n      }\n    }\n    /**\n     * The `enqueueChange()` method performs similar task as the {@link #change `change()` method}, with two major differences.\n     *\n     * First, the callback of `enqueueChange()` is executed when all other enqueued changes are done. It might be executed\n     * immediately if it is not nested in any other change block, but if it is nested in another (enqueue)change block,\n     * it will be delayed and executed after the outermost block.\n     *\n     *\t\tmodel.change( writer => {\n     *\t\t\tconsole.log( 1 );\n     *\n     *\t\t\tmodel.enqueueChange( writer => {\n     *\t\t\t\tconsole.log( 2 );\n     *\t\t\t} );\n     *\n     * \t\t\tconsole.log( 3 );\n     *\t\t} ); // Will log: 1, 3, 2.\n     *\n     * Second, it lets you define the {@link module:engine/model/batch~Batch} into which you want to add your changes.\n     * By default, a new batch is created. In the sample above, `change` and `enqueueChange` blocks use a different\n     * batch (and different {@link module:engine/model/writer~Writer} since each of them operates on the separate batch).\n     *\n     * When using the `enqueueChange()` block you can also add some changes to the batch you used before.\n     *\n     *\t\tmodel.enqueueChange( batch, writer => {\n     *\t\t\twriter.insertText( 'foo', paragraph, 'end' );\n     *\t\t} );\n     *\n     * The batch instance can be obtained from {@link module:engine/model/writer~Writer#batch the writer}.\n     *\n     * @param {module:engine/model/batch~Batch|'transparent'|'default'} batchOrType Batch or batch type should be used in the callback.\n     * If not defined, a new batch will be created.\n     * @param {Function} callback Callback function which may modify the model.\n     */\n\n  }, {\n    key: \"enqueueChange\",\n    value: function enqueueChange(batchOrType, callback) {\n      if (typeof batchOrType === 'string') {\n        batchOrType = new Batch(batchOrType);\n      } else if (typeof batchOrType == 'function') {\n        callback = batchOrType;\n        batchOrType = new Batch();\n      }\n\n      this._pendingChanges.push({\n        batch: batchOrType,\n        callback: callback\n      });\n\n      if (this._pendingChanges.length == 1) {\n        this._runPendingChanges();\n      }\n    }\n    /**\n     * {@link module:utils/observablemixin~ObservableMixin#decorate Decorated} function for applying\n     * {@link module:engine/model/operation/operation~Operation operations} to the model.\n     *\n     * This is a low-level way of changing the model. It is exposed for very specific use cases (like the undo feature).\n     * Normally, to modify the model, you will want to use {@link module:engine/model/writer~Writer `Writer`}.\n     * See also {@glink framework/guides/architecture/editing-engine#changing-the-model Changing the model} section\n     * of the {@glink framework/guides/architecture/editing-engine Editing architecture} guide.\n     *\n     * @param {module:engine/model/operation/operation~Operation} operation The operation to apply.\n     */\n\n  }, {\n    key: \"applyOperation\",\n    value: function applyOperation(operation) {\n      operation._execute();\n    }\n    /**\n     * Inserts content at the position in the editor specified by the selection, as one would expect the paste\n     * functionality to work.\n     *\n     * This is a high-level method. It takes the {@link #schema schema} into consideration when inserting\n     * the content, clears the given selection's content before inserting nodes and moves the selection\n     * to its target position at the end of the process.\n     * It can split elements, merge them, wrap bare text nodes with paragraphs, etc. &mdash; just like the\n     * pasting feature should do.\n     *\n     * For lower-level methods see {@link module:engine/model/writer~Writer `Writer`}.\n     *\n     * This method, unlike {@link module:engine/model/writer~Writer `Writer`}'s methods, does not have to be used\n     * inside a {@link #change `change()` block}.\n     *\n     * # Conversion and schema\n     *\n     * Inserting elements and text nodes into the model is not enough to make CKEditor 5 render that content\n     * to the user. CKEditor 5 implements a model-view-controller architecture and what `model.insertContent()` does\n     * is only adding nodes to the model. Additionally, you need to define\n     * {@glink framework/guides/architecture/editing-engine#conversion converters} between the model and view\n     * and define those nodes in the {@glink framework/guides/architecture/editing-engine#schema schema}.\n     *\n     * So, while this method may seem similar to CKEditor 4 `editor.insertHtml()` (in fact, both methods\n     * are used for paste-like content insertion), the CKEditor 5 method cannot be use to insert arbitrary HTML\n     * unless converters are defined for all elements and attributes in that HTML.\n     *\n     * # Examples\n     *\n     * Using `insertContent()` with a manually created model structure:\n     *\n     *\t\t// Let's create a document fragment containing such content as:\n     *\t\t//\n     *\t\t// <paragrap>foo</paragraph>\n     *\t\t// <blockQuote>\n     *\t\t//    <paragraph>bar</paragraph>\n     *\t\t// </blockQuote>\n     *\t\tconst docFrag = editor.model.change( writer => {\n     *\t\t\tconst p1 = writer.createElement( 'paragraph' );\n     *\t\t\tconst p2 = writer.createElement( 'paragraph' );\n     *\t\t\tconst blockQuote = writer.createElement( 'blockQuote' );\n     *\t\t\tconst docFrag = writer.createDocumentFragment();\n     *\n     *\t\t\twriter.append( p1, docFrag );\n     *\t\t\twriter.append( blockQuote, docFrag );\n     *\t\t\twriter.append( p2, blockQuote );\n     *\t\t\twriter.insertText( 'foo', p1 );\n     *\t\t\twriter.insertText( 'bar', p2 );\n     *\n     *\t\t\treturn docFrag;\n     *\t\t} );\n     *\n     *\t\t// insertContent() does not have to be used in a change() block. It can, though,\n     *\t\t// so this code could be moved to the callback defined above.\n     *\t\teditor.model.insertContent( docFrag );\n     *\n     * Using `insertContent()` with an HTML string converted to a model document fragment (similar to the pasting mechanism):\n     *\n     *\t\t// You can create your own HtmlDataProcessor instance or use editor.data.processor\n     *\t\t// if you have not overridden the default one (which is the HtmlDataProcessor instance).\n     *\t\tconst htmlDP = new HtmlDataProcessor();\n     *\n     *\t\t// Convert an HTML string to a view document fragment:\n     *\t\tconst viewFragment = htmlDP.toView( htmlString );\n     *\n     *\t\t// Convert the view document fragment to a model document fragment\n     *\t\t// in the context of $root. This conversion takes the schema into\n     *\t\t// account so if, for example, the view document fragment contained a bare text node,\n     *\t\t// this text node cannot be a child of $root, so it will be automatically\n     *\t\t// wrapped with a <paragraph>. You can define the context yourself (in the second parameter),\n     *\t\t// and e.g. convert the content like it would happen in a <paragraph>.\n     *\t\t// Note: The clipboard feature uses a custom context called $clipboardHolder\n     *\t\t// which has a loosened schema.\n     *\t\tconst modelFragment = editor.data.toModel( viewFragment );\n     *\n     *\t\teditor.model.insertContent( modelFragment );\n     *\n     * By default this method will use the document selection but it can also be used with a position, range or selection instance.\n     *\n     *\t\t// Insert text at the current document selection position.\n     *\t\teditor.model.change( writer => {\n     *\t\t\teditor.model.insertContent( writer.createText( 'x' ) );\n     *\t\t} );\n     *\n     *\t\t// Insert text at a given position - the document selection will not be modified.\n     *\t\teditor.model.change( writer => {\n     *\t\t\teditor.model.insertContent( writer.createText( 'x' ), doc.getRoot(), 2 );\n     *\n     *\t\t\t// Which is a shorthand for:\n     *\t\t\teditor.model.insertContent( writer.createText( 'x' ), writer.createPositionAt( doc.getRoot(), 2 ) );\n     *\t\t} );\n     *\n     * If an instance of {@link module:engine/model/selection~Selection} is passed as `selectable`\n     * it will be moved to the target position (where the document selection should be moved after the insertion).\n     *\n     *\t\teditor.model.change( writer => {\n     *\t\t\t// Insert text replacing the given selection instance.\n     *\t\t\tconst selection = writer.createSelection( paragraph, 'in' );\n     *\n     *\t\t\teditor.model.insertContent( writer.createText( 'x' ), selection );\n     *\n     *\t\t\t// insertContent() modifies the passed selection instance so it can be used to set the document selection.\n     *\t\t\t// Note: This is not necessary when you passed the document selection to insertContent().\n     *\t\t\twriter.setSelection( selection );\n     *\t\t} );\n     *\n     * @fires insertContent\n     * @param {module:engine/model/documentfragment~DocumentFragment|module:engine/model/item~Item} content The content to insert.\n     * @param {module:engine/model/selection~Selectable} [selectable=model.document.selection]\n     * The selection into which the content should be inserted. If not provided the current model document selection will be used.\n     * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] To be used when a model item was passed as `selectable`.\n     * This param defines a position in relation to that item.\n     * @returns {module:engine/model/range~Range} Range which contains all the performed changes. This is a range that, if removed,\n     * would return the model to the state before the insertion. If no changes were preformed by `insertContent`, returns a range collapsed\n     * at the insertion position.\n     */\n\n  }, {\n    key: \"insertContent\",\n    value: function insertContent(content, selectable, placeOrOffset) {\n      return _insertContent(this, content, selectable, placeOrOffset);\n    }\n    /**\n     * Deletes content of the selection and merge siblings. The resulting selection is always collapsed.\n     *\n     * **Note:** For the sake of predictability, the resulting selection should always be collapsed.\n     * In cases where a feature wants to modify deleting behavior so selection isn't collapsed\n     * (e.g. a table feature may want to keep row selection after pressing <kbd>Backspace</kbd>),\n     * then that behavior should be implemented in the view's listener. At the same time, the table feature\n     * will need to modify this method's behavior too, e.g. to \"delete contents and then collapse\n     * the selection inside the last selected cell\" or \"delete the row and collapse selection somewhere near\".\n     * That needs to be done in order to ensure that other features which use `deleteContent()` will work well with tables.\n     *\n     * @fires deleteContent\n     * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n     * Selection of which the content should be deleted.\n     * @param {Object} [options]\n     * @param {Boolean} [options.leaveUnmerged=false] Whether to merge elements after removing the content of the selection.\n     *\n     * For example `<heading1>x[x</heading1><paragraph>y]y</paragraph>` will become:\n     *\n     * * `<heading1>x^y</heading1>` with the option disabled (`leaveUnmerged == false`)\n     * * `<heading1>x^</heading1><paragraph>y</paragraph>` with enabled (`leaveUnmerged == true`).\n     *\n     * Note: {@link module:engine/model/schema~Schema#isObject object} and {@link module:engine/model/schema~Schema#isLimit limit}\n     * elements will not be merged.\n     *\n     * @param {Boolean} [options.doNotResetEntireContent=false] Whether to skip replacing the entire content with a\n     * paragraph when the entire content was selected.\n     *\n     * For example `<heading1>[x</heading1><paragraph>y]</paragraph>` will become:\n     *\n     * * `<paragraph>^</paragraph>` with the option disabled (`doNotResetEntireContent == false`)\n     * * `<heading1>^</heading1>` with enabled (`doNotResetEntireContent == true`)\n     *\n     * @param {Boolean} [options.doNotAutoparagraph=false] Whether to create a paragraph if after content deletion selection is moved\n     * to a place where text cannot be inserted.\n     *\n     * For example `<paragraph>x</paragraph>[<image src=\"foo.jpg\"></image>]` will become:\n     *\n     * * `<paragraph>x</paragraph><paragraph>[]</paragraph>` with the option disabled (`doNotAutoparagraph == false`)\n     * * `<paragraph>x[]</paragraph>` with the option enabled (`doNotAutoparagraph == true`).\n     *\n     * **Note:** if there is no valid position for the selection, the paragraph will always be created:\n     *\n     * `[<image src=\"foo.jpg\"></image>]` -> `<paragraph>[]</paragraph>`.\n     */\n\n  }, {\n    key: \"deleteContent\",\n    value: function deleteContent(selection, options) {\n      _deleteContent(this, selection, options);\n    }\n    /**\n     * Modifies the selection. Currently, the supported modifications are:\n     *\n     * * Extending. The selection focus is moved in the specified `options.direction` with a step specified in `options.unit`.\n     * Possible values for `unit` are:\n     *  * `'character'` (default) - moves selection by one user-perceived character. In most cases this means moving by one\n     *  character in `String` sense. However, unicode also defines \"combing marks\". These are special symbols, that combines\n     *  with a symbol before it (\"base character\") to create one user-perceived character. For example, `q̣̇` is a normal\n     *  letter `q` with two \"combining marks\": upper dot (`Ux0307`) and lower dot (`Ux0323`). For most actions, i.e. extending\n     *  selection by one position, it is correct to include both \"base character\" and all of it's \"combining marks\". That is\n     *  why `'character'` value is most natural and common method of modifying selection.\n     *  * `'codePoint'` - moves selection by one unicode code point. In contrary to, `'character'` unit, this will insert\n     *  selection between \"base character\" and \"combining mark\", because \"combining marks\" have their own unicode code points.\n     *  However, for technical reasons, unicode code points with values above `UxFFFF` are represented in native `String` by\n     *  two characters, called \"surrogate pairs\". Halves of \"surrogate pairs\" have a meaning only when placed next to each other.\n     *  For example `𨭎` is represented in `String` by `\\uD862\\uDF4E`. Both `\\uD862` and `\\uDF4E` do not have any meaning\n     *  outside the pair (are rendered as ? when alone). Position between them would be incorrect. In this case, selection\n     *  extension will include whole \"surrogate pair\".\n     *  * `'word'` - moves selection by a whole word.\n     *\n     * **Note:** if you extend a forward selection in a backward direction you will in fact shrink it.\n     *\n     * @fires modifySelection\n     * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n     * The selection to modify.\n     * @param {Object} [options]\n     * @param {'forward'|'backward'} [options.direction='forward'] The direction in which the selection should be modified.\n     * @param {'character'|'codePoint'|'word'} [options.unit='character'] The unit by which selection should be modified.\n     */\n\n  }, {\n    key: \"modifySelection\",\n    value: function modifySelection(selection, options) {\n      _modifySelection(this, selection, options);\n    }\n    /**\n     * Gets a clone of the selected content.\n     *\n     * For example, for the following selection:\n     *\n     * ```html\n     * <paragraph>x</paragraph>\n     * <blockQuote>\n     *\t<paragraph>y</paragraph>\n     *\t<heading1>fir[st</heading1>\n     * </blockQuote>\n     * <paragraph>se]cond</paragraph>\n     * <paragraph>z</paragraph>\n     * ```\n     *\n     * It will return a document fragment with such a content:\n     *\n     * ```html\n     * <blockQuote>\n     *\t<heading1>st</heading1>\n     * </blockQuote>\n     * <paragraph>se</paragraph>\n     * ```\n     *\n     * @fires getSelectedContent\n     * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n     * The selection of which content will be returned.\n     * @returns {module:engine/model/documentfragment~DocumentFragment}\n     */\n\n  }, {\n    key: \"getSelectedContent\",\n    value: function getSelectedContent(selection) {\n      return _getSelectedContent(this, selection);\n    }\n    /**\n     * Checks whether the given {@link module:engine/model/range~Range range} or\n     * {@link module:engine/model/element~Element element} has any meaningful content.\n     *\n     * Meaningful content is:\n     *\n     * * any text node (`options.ignoreWhitespaces` allows controlling whether this text node must also contain\n     * any non-whitespace characters),\n     * * or any {@link module:engine/model/schema~Schema#isObject object element},\n     * * or any {@link module:engine/model/markercollection~Marker marker} which\n     * {@link module:engine/model/markercollection~Marker#_affectsData affects data}.\n     *\n     * This means that a range containing an empty `<paragraph></paragraph>` is not considered to have a meaningful content.\n     * However, a range containing an `<image></image>` (which would normally be marked in the schema as an object element)\n     * is considered non-empty.\n     *\n     * @param {module:engine/model/range~Range|module:engine/model/element~Element} rangeOrElement Range or element to check.\n     * @param {Object} [options]\n     * @param {Boolean} [options.ignoreWhitespaces] Whether text node with whitespaces only should be considered empty.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"hasContent\",\n    value: function hasContent(rangeOrElement, options) {\n      var range = rangeOrElement instanceof ModelElement ? ModelRange._createIn(rangeOrElement) : rangeOrElement;\n\n      if (range.isCollapsed) {\n        return false;\n      } // Check if there are any markers which affects data in this given range.\n\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.markers.getMarkersIntersectingRange(range)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var intersectingMarker = _step.value;\n\n          if (intersectingMarker.affectsData) {\n            return true;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      var _ref = options || {},\n          _ref$ignoreWhitespace = _ref.ignoreWhitespaces,\n          ignoreWhitespaces = _ref$ignoreWhitespace === void 0 ? false : _ref$ignoreWhitespace;\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = range.getItems()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var item = _step2.value;\n\n          if (item.is('textProxy')) {\n            if (!ignoreWhitespaces) {\n              return true;\n            } else if (item.data.search(/\\S/) !== -1) {\n              return true;\n            }\n          } else if (this.schema.isObject(item)) {\n            return true;\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return false;\n    }\n    /**\n     * Creates a position from the given root and path in that root.\n     *\n     * Note: This method is also available as\n     * {@link module:engine/model/writer~Writer#createPositionFromPath `Writer#createPositionFromPath()`}.\n     *\n     * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} root Root of the position.\n     * @param {Array.<Number>} path Position path. See {@link module:engine/model/position~Position#path}.\n     * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone'] Position stickiness.\n     * See {@link module:engine/model/position~PositionStickiness}.\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"createPositionFromPath\",\n    value: function createPositionFromPath(root, path, stickiness) {\n      return new ModelPosition(root, path, stickiness);\n    }\n    /**\n     * Creates position at the given location. The location can be specified as:\n     *\n     * * a {@link module:engine/model/position~Position position},\n     * * a parent element and offset in that element,\n     * * a parent element and `'end'` (the position will be set at the end of that element),\n     * * a {@link module:engine/model/item~Item model item} and `'before'` or `'after'`\n     * (the position will be set before or after the given model item).\n     *\n     * This method is a shortcut to other factory methods such as:\n     *\n     * * {@link module:engine/model/model~Model#createPositionBefore `createPositionBefore()`},\n     * * {@link module:engine/model/model~Model#createPositionAfter `createPositionAfter()`}.\n     *\n     * Note: This method is also available as\n     * {@link module:engine/model/writer~Writer#createPositionAt `Writer#createPositionAt()`},\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n     * first parameter is a {@link module:engine/model/item~Item model item}.\n     */\n\n  }, {\n    key: \"createPositionAt\",\n    value: function createPositionAt(itemOrPosition, offset) {\n      return ModelPosition._createAt(itemOrPosition, offset);\n    }\n    /**\n     * Creates a new position after the given {@link module:engine/model/item~Item model item}.\n     *\n     * Note: This method is also available as\n     * {@link module:engine/model/writer~Writer#createPositionAfter `Writer#createPositionAfter()`}.\n     *\n     * @param {module:engine/model/item~Item} item Item after which the position should be placed.\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"createPositionAfter\",\n    value: function createPositionAfter(item) {\n      return ModelPosition._createAfter(item);\n    }\n    /**\n     * Creates a new position before the given {@link module:engine/model/item~Item model item}.\n     *\n     * Note: This method is also available as\n     * {@link module:engine/model/writer~Writer#createPositionBefore `Writer#createPositionBefore()`}.\n     *\n     * @param {module:engine/model/item~Item} item Item before which the position should be placed.\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"createPositionBefore\",\n    value: function createPositionBefore(item) {\n      return ModelPosition._createBefore(item);\n    }\n    /**\n     * Creates a range spanning from the `start` position to the `end` position.\n     *\n     * Note: This method is also available as\n     * {@link module:engine/model/writer~Writer#createRange `Writer#createRange()`}:\n     *\n     *\t\tmodel.change( writer => {\n     *\t\t\tconst range = writer.createRange( start, end );\n     *\t\t} );\n     *\n     * @param {module:engine/model/position~Position} start Start position.\n     * @param {module:engine/model/position~Position} [end] End position. If not set, the range will be collapsed\n     * to the `start` position.\n     * @returns {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"createRange\",\n    value: function createRange(start, end) {\n      return new ModelRange(start, end);\n    }\n    /**\n     * Creates a range inside the given element which starts before the first child of\n     * that element and ends after the last child of that element.\n     *\n     * Note: This method is also available as\n     * {@link module:engine/model/writer~Writer#createRangeIn `Writer#createRangeIn()`}:\n     *\n     *\t\tmodel.change( writer => {\n     *\t\t\tconst range = writer.createRangeIn( paragraph );\n     *\t\t} );\n     *\n     * @param {module:engine/model/element~Element} element Element which is a parent for the range.\n     * @returns {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"createRangeIn\",\n    value: function createRangeIn(element) {\n      return ModelRange._createIn(element);\n    }\n    /**\n     * Creates a range that starts before the given {@link module:engine/model/item~Item model item} and ends after it.\n     *\n     * Note: This method is also available on `writer` instance as\n     * {@link module:engine/model/writer~Writer#createRangeOn `Writer.createRangeOn()`}:\n     *\n     *\t\tmodel.change( writer => {\n     *\t\t\tconst range = writer.createRangeOn( paragraph );\n     *\t\t} );\n     *\n     * @param {module:engine/model/item~Item} item\n     * @returns {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"createRangeOn\",\n    value: function createRangeOn(item) {\n      return ModelRange._createOn(item);\n    }\n    /**\n     * Creates a new selection instance based on the given {@link module:engine/model/selection~Selectable selectable}\n     * or creates an empty selection if no arguments were passed.\n     *\n     * Note: This method is also available as\n     * {@link module:engine/model/writer~Writer#createSelection `Writer#createSelection()`}.\n     *\n     *\t\t// Creates empty selection without ranges.\n     *\t\tconst selection = writer.createSelection();\n     *\n     *\t\t// Creates selection at the given range.\n     *\t\tconst range = writer.createRange( start, end );\n     *\t\tconst selection = writer.createSelection( range );\n     *\n     *\t\t// Creates selection at the given ranges\n     *\t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n     *\t\tconst selection = writer.createSelection( ranges );\n     *\n     *\t\t// Creates selection from the other selection.\n     *\t\t// Note: It doesn't copies selection attributes.\n     *\t\tconst otherSelection = writer.createSelection();\n     *\t\tconst selection = writer.createSelection( otherSelection );\n     *\n     *\t\t// Creates selection from the given document selection.\n     *\t\t// Note: It doesn't copies selection attributes.\n     *\t\tconst documentSelection = model.document.selection;\n     *\t\tconst selection = writer.createSelection( documentSelection );\n     *\n     *\t\t// Creates selection at the given position.\n     *\t\tconst position = writer.createPositionFromPath( root, path );\n     *\t\tconst selection = writer.createSelection( position );\n     *\n     *\t\t// Creates selection at the given offset in the given element.\n     *\t\tconst paragraph = writer.createElement( 'paragraph' );\n     *\t\tconst selection = writer.createSelection( paragraph, offset );\n     *\n     *\t\t// Creates a range inside an {@link module:engine/model/element~Element element} which starts before the\n     *\t\t// first child of that element and ends after the last child of that element.\n     *\t\tconst selection = writer.createSelection( paragraph, 'in' );\n     *\n     *\t\t// Creates a range on an {@link module:engine/model/item~Item item} which starts before the item and ends\n     *\t\t// just after the item.\n     *\t\tconst selection = writer.createSelection( paragraph, 'on' );\n     *\n     *\t\t// Additional options (`'backward'`) can be specified as the last argument.\n     *\n     *\t\t// Creates backward selection.\n     *\t\tconst selection = writer.createSelection( range, { backward: true } );\n     *\n     * @param {module:engine/model/selection~Selectable} selectable\n     * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n     * @param {Object} [options]\n     * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n     * @returns {module:engine/model/selection~Selection}\n     */\n\n  }, {\n    key: \"createSelection\",\n    value: function createSelection(selectable, placeOrOffset, options) {\n      return new ModelSelection(selectable, placeOrOffset, options);\n    }\n    /**\n     * Creates a {@link module:engine/model/batch~Batch} instance.\n     *\n     * **Note:** In most cases creating a batch instance is not necessary as they are created when using:\n     *\n     * * {@link #change `change()`},\n     * * {@link #enqueueChange `enqueueChange()`}.\n     *\n     * @param {'transparent'|'default'} [type='default'] The type of the batch.\n     * @returns {module:engine/model/batch~Batch}\n     */\n\n  }, {\n    key: \"createBatch\",\n    value: function createBatch(type) {\n      return new Batch(type);\n    }\n    /**\n     * Removes all events listeners set by model instance and destroys {@link module:engine/model/document~Document}.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.document.destroy();\n      this.stopListening();\n    }\n    /**\n     * Common part of {@link module:engine/model/model~Model#change} and {@link module:engine/model/model~Model#enqueueChange}\n     * which calls callbacks and returns array of values returned by these callbacks.\n     *\n     * @private\n     * @returns {Array.<*>} Array of values returned by callbacks.\n     */\n\n  }, {\n    key: \"_runPendingChanges\",\n    value: function _runPendingChanges() {\n      var ret = [];\n      this.fire('_beforeChanges');\n\n      while (this._pendingChanges.length) {\n        // Create a new writer using batch instance created for this chain of changes.\n        var currentBatch = this._pendingChanges[0].batch;\n        this._currentWriter = new Writer(this, currentBatch); // Execute changes callback and gather the returned value.\n\n        var callbackReturnValue = this._pendingChanges[0].callback(this._currentWriter);\n\n        ret.push(callbackReturnValue);\n\n        this.document._handleChangeBlock(this._currentWriter);\n\n        this._pendingChanges.shift();\n\n        this._currentWriter = null;\n      }\n\n      this.fire('_afterChanges');\n      return ret;\n    }\n    /**\n     * Fired when entering the outermost {@link module:engine/model/model~Model#enqueueChange} or\n     * {@link module:engine/model/model~Model#change} block.\n     *\n     * @protected\n     * @event _beforeChanges\n     */\n\n    /**\n     * Fired when leaving the outermost {@link module:engine/model/model~Model#enqueueChange} or\n     * {@link module:engine/model/model~Model#change} block.\n     *\n     * @protected\n     * @event _afterChanges\n     */\n\n    /**\n     * Fired every time any {@link module:engine/model/operation/operation~Operation operation} is applied on the model\n     * using {@link #applyOperation}.\n     *\n     * Note that this event is suitable only for very specific use-cases. Use it if you need to listen to every single operation\n     * applied on the document. However, in most cases {@link module:engine/model/document~Document#event:change} should\n     * be used.\n     *\n     * A few callbacks are already added to this event by engine internal classes:\n     *\n     * * with `highest` priority operation is validated,\n     * * with `normal` priority operation is executed,\n     * * with `low` priority the {@link module:engine/model/document~Document} updates its version,\n     * * with `low` priority {@link module:engine/model/liveposition~LivePosition} and {@link module:engine/model/liverange~LiveRange}\n     * update themselves.\n     *\n     * @event applyOperation\n     * @param {Array} args Arguments of the `applyOperation` which is an array with a single element - applied\n     * {@link module:engine/model/operation/operation~Operation operation}.\n     */\n\n    /**\n     * Event fired when {@link #insertContent} method is called.\n     *\n     * The {@link #insertContent default action of that method} is implemented as a\n     * listener to this event so it can be fully customized by the features.\n     *\n     * **Note** The `selectable` parameter for the {@link #insertContent} is optional. When `undefined` value is passed the method uses\n     * `model.document.selection`.\n     *\n     * @event insertContent\n     * @param {Array} args The arguments passed to the original method.\n     */\n\n    /**\n     * Event fired when {@link #deleteContent} method is called.\n     *\n     * The {@link #deleteContent default action of that method} is implemented as a\n     * listener to this event so it can be fully customized by the features.\n     *\n     * @event deleteContent\n     * @param {Array} args The arguments passed to the original method.\n     */\n\n    /**\n     * Event fired when {@link #modifySelection} method is called.\n     *\n     * The {@link #modifySelection default action of that method} is implemented as a\n     * listener to this event so it can be fully customized by the features.\n     *\n     * @event modifySelection\n     * @param {Array} args The arguments passed to the original method.\n     */\n\n    /**\n     * Event fired when {@link #getSelectedContent} method is called.\n     *\n     * The {@link #getSelectedContent default action of that method} is implemented as a\n     * listener to this event so it can be fully customized by the features.\n     *\n     * @event getSelectedContent\n     * @param {Array} args The arguments passed to the original method.\n     */\n\n  }]);\n\n  return Model;\n}();\n\nexport { Model as default };\nmix(Model, ObservableMixin);","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/keystrokehandler\n */\nimport DomEmitterMixin from './dom/emittermixin';\nimport { getCode, parseKeystroke } from './keyboard';\n/**\n * Keystroke handler allows registering callbacks for given keystrokes.\n *\n * The most frequent use of this class is through the {@link module:core/editor/editor~Editor#keystrokes `editor.keystrokes`}\n * property. It allows listening to keystrokes executed in the editing view:\n *\n *\t\teditor.keystrokes.set( 'Ctrl+A', ( keyEvtData, cancel ) => {\n *\t\t\tconsole.log( 'Ctrl+A has been pressed' );\n *\t\t\tcancel();\n *\t\t} );\n *\n * However, this utility class can be used in various part of the UI. For instance, a certain {@link module:ui/view~View}\n * can use it like this:\n *\n *\t\tclass MyView extends View {\n *\t\t\tconstructor() {\n *\t\t\t\tthis.keystrokes = new KeystrokeHandler();\n *\n * \t\t\t\tthis.keystrokes.set( 'tab', handleTabKey );\n *\t\t\t}\n *\n *\t\t\trender() {\n *\t\t\t\tsuper.render();\n *\n *\t\t\t\tthis.keystrokes.listenTo( this.element );\n *\t\t\t}\n *\t\t}\n *\n * That keystroke handler will listen to `keydown` events fired in this view's main element.\n *\n */\n\nvar KeystrokeHandler =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of the keystroke handler.\n   */\n  function KeystrokeHandler() {\n    _classCallCheck(this, KeystrokeHandler);\n\n    /**\n     * Listener used to listen to events for easier keystroke handler destruction.\n     *\n     * @protected\n     * @member {module:utils/dom/emittermixin~Emitter}\n     */\n    this._listener = Object.create(DomEmitterMixin);\n  }\n  /**\n   * Starts listening for `keydown` events from a given emitter.\n   *\n   * @param {module:utils/emittermixin~Emitter} emitter\n   */\n\n\n  _createClass(KeystrokeHandler, [{\n    key: \"listenTo\",\n    value: function listenTo(emitter) {\n      var _this = this;\n\n      // The #_listener works here as a kind of dispatcher. It groups the events coming from the same\n      // keystroke so the listeners can be attached to them with different priorities.\n      //\n      // E.g. all the keystrokes with the `keyCode` of 42 coming from the `emitter` are propagated\n      // as a `_keydown:42` event by the `_listener`. If there's a callback created by the `set`\n      // method for this 42 keystroke, it listens to the `_listener#_keydown:42` event only and interacts\n      // only with other listeners of this particular event, thus making it possible to prioritize\n      // the listeners and safely cancel execution, when needed. Instead of duplicating the Emitter logic,\n      // the KeystrokeHandler re–uses it to do its job.\n      this._listener.listenTo(emitter, 'keydown', function (evt, keyEvtData) {\n        _this._listener.fire('_keydown:' + getCode(keyEvtData), keyEvtData);\n      });\n    }\n    /**\n     * Registers a handler for the specified keystroke.\n     *\n     * @param {String|Array.<String|Number>} keystroke Keystroke defined in a format accepted by\n     * the {@link module:utils/keyboard~parseKeystroke} function.\n     * @param {Function} callback A function called with the\n     * {@link module:engine/view/observer/keyobserver~KeyEventData key event data} object and\n     * a helper funcion to call both `preventDefault()` and `stopPropagation()` on the underlying event.\n     * @param {Object} [options={}] Additional options.\n     * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of the keystroke\n     * callback. The higher the priority value the sooner the callback will be executed. Keystrokes having the same priority\n     * are called in the order they were added.\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(keystroke, callback) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var keyCode = parseKeystroke(keystroke);\n      var priority = options.priority; // Execute the passed callback on KeystrokeHandler#_keydown.\n      // TODO: https://github.com/ckeditor/ckeditor5-utils/issues/144\n\n      this._listener.listenTo(this._listener, '_keydown:' + keyCode, function (evt, keyEvtData) {\n        callback(keyEvtData, function () {\n          // Stop the event in the DOM: no listener in the web page\n          // will be triggered by this event.\n          keyEvtData.preventDefault();\n          keyEvtData.stopPropagation(); // Stop the event in the KeystrokeHandler: no more callbacks\n          // will be executed for this keystroke.\n\n          evt.stop();\n        }); // Mark this keystroke as handled by the callback. See: #press.\n\n        evt[\"return\"] = true;\n      }, {\n        priority: priority\n      });\n    }\n    /**\n     * Triggers a keystroke handler for a specified key combination, if such a keystroke was {@link #set defined}.\n     *\n     * @param {module:engine/view/observer/keyobserver~KeyEventData} keyEvtData Key event data.\n     * @returns {Boolean} Whether the keystroke was handled.\n     */\n\n  }, {\n    key: \"press\",\n    value: function press(keyEvtData) {\n      return !!this._listener.fire('_keydown:' + getCode(keyEvtData), keyEvtData);\n    }\n    /**\n     * Destroys the keystroke handler.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._listener.stopListening();\n    }\n  }]);\n\n  return KeystrokeHandler;\n}();\n\nexport { KeystrokeHandler as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module core/editingkeystrokehandler\n */\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\n/**\n * A keystroke handler for editor editing. Its instance is available\n * in {@link module:core/editor/editor~Editor#keystrokes} so plugins\n * can register their keystrokes.\n *\n * E.g. an undo plugin would do this:\n *\n *\t\teditor.keystrokes.set( 'Ctrl+Z', 'undo' );\n *\t\teditor.keystrokes.set( 'Ctrl+Shift+Z', 'redo' );\n *\t\teditor.keystrokes.set( 'Ctrl+Y', 'redo' );\n *\n * @extends utils/keystrokehandler~KeystrokeHandler\n */\n\nvar EditingKeystrokeHandler =\n/*#__PURE__*/\nfunction (_KeystrokeHandler) {\n  _inherits(EditingKeystrokeHandler, _KeystrokeHandler);\n\n  /**\n   * Creates an instance of the keystroke handler.\n   *\n   * @param {module:core/editor/editor~Editor} editor\n   */\n  function EditingKeystrokeHandler(editor) {\n    var _this;\n\n    _classCallCheck(this, EditingKeystrokeHandler);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditingKeystrokeHandler).call(this));\n    /**\n     * The editor instance.\n     *\n     * @readonly\n     * @member {module:core/editor/editor~Editor}\n     */\n\n    _this.editor = editor;\n    return _this;\n  }\n  /**\n   * Registers a handler for the specified keystroke.\n   *\n   * The handler can be specified as a command name or a callback.\n   *\n   * @param {String|Array.<String|Number>} keystroke Keystroke defined in a format accepted by\n   * the {@link module:utils/keyboard~parseKeystroke} function.\n   * @param {Function|String} callback If a string is passed, then the keystroke will\n   * {@link module:core/editor/editor~Editor#execute execute a command}.\n   * If a function, then it will be called with the\n   * {@link module:engine/view/observer/keyobserver~KeyEventData key event data} object and\n   * a `cancel()` helper to both `preventDefault()` and `stopPropagation()` of the event.\n   * @param {Object} [options={}] Additional options.\n   * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of the keystroke\n   * callback. The higher the priority value the sooner the callback will be executed. Keystrokes having the same priority\n   * are called in the order they were added.\n   */\n\n\n  _createClass(EditingKeystrokeHandler, [{\n    key: \"set\",\n    value: function set(keystroke, callback) {\n      var _this2 = this;\n\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      if (typeof callback == 'string') {\n        var commandName = callback;\n\n        callback = function callback(evtData, cancel) {\n          _this2.editor.execute(commandName);\n\n          cancel();\n        };\n      }\n\n      _get(_getPrototypeOf(EditingKeystrokeHandler.prototype), \"set\", this).call(this, keystroke, callback, options);\n    }\n  }]);\n\n  return EditingKeystrokeHandler;\n}(KeystrokeHandler);\n\nexport { EditingKeystrokeHandler as default };","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module core/editor/editor\n */\nimport Config from '@ckeditor/ckeditor5-utils/src/config';\nimport EditingController from '@ckeditor/ckeditor5-engine/src/controller/editingcontroller';\nimport PluginCollection from '../plugincollection';\nimport CommandCollection from '../commandcollection';\nimport Locale from '@ckeditor/ckeditor5-utils/src/locale';\nimport DataController from '@ckeditor/ckeditor5-engine/src/controller/datacontroller';\nimport Conversion from '@ckeditor/ckeditor5-engine/src/conversion/conversion';\nimport Model from '@ckeditor/ckeditor5-engine/src/model/model';\nimport EditingKeystrokeHandler from '../editingkeystrokehandler';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n/**\n * Class representing a basic, generic editor.\n *\n * Check out the list of its subclasses to learn about specific editor implementations.\n *\n * All editor implementations (like {@link module:editor-classic/classiceditor~ClassicEditor} or\n * {@link module:editor-inline/inlineeditor~InlineEditor}) should extend this class. They can add their\n * own methods and properties.\n *\n * When you are implementing a plugin, then this editor represents the API\n * which your plugin can expect to get when using its {@link module:core/plugin~Plugin#editor} property.\n *\n * This API should be sufficient in order to implement the \"editing\" part of your feature\n * (schema definition, conversion, commands, keystrokes, etc.).\n * It does not define the editor UI, which is available only if the\n * the specific editor implements also the {@link module:core/editor/editorwithui~EditorWithUI} interface\n * (as most editor implementations do).\n *\n * @abstract\n * @mixes module:utils/observablemixin~ObservableMixin\n */\n\nvar Editor =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a new instance of the Editor class.\n   *\n   * Usually, not to be used directly. See the static {@link module:core/editor/editor~Editor.create `create()`} method.\n   *\n   * @param {Object} [config] The editor config.\n   */\n  function Editor(config) {\n    var _this = this;\n\n    _classCallCheck(this, Editor);\n\n    var availablePlugins = this.constructor.builtinPlugins;\n    /**\n     * Holds all configurations specific to this editor instance.\n     *\n     *\t\teditor.config.get( 'image.toolbar' );\n     *\t\t// -> [ 'imageStyle:full', 'imageStyle:side', '|', 'imageTextAlternative' ]\n     *\n     * @readonly\n     * @member {module:utils/config~Config}\n     */\n\n    this.config = new Config(config, this.constructor.defaultConfig);\n    this.config.define('plugins', availablePlugins);\n    /**\n     * The plugins loaded and in use by this editor instance.\n     *\n     *\t\teditor.plugins.get( 'Clipboard' ); // -> instance of the Clipboard plugin.\n     *\n     * @readonly\n     * @member {module:core/plugincollection~PluginCollection}\n     */\n\n    this.plugins = new PluginCollection(this, availablePlugins);\n    /**\n     * Commands registered to the editor.\n     *\n     * Use the shorthand {@link #execute `editor.execute()`} method to execute commands:\n     *\n     *\t\t// Execute the bold command:\n     *\t\teditor.execute( 'bold' );\n     *\n     *\t\t// Check the state of the bold command:\n     *\t\teditor.commands.get( 'bold' ).value;\n     *\n     * @readonly\n     * @member {module:core/commandcollection~CommandCollection}\n     */\n\n    this.commands = new CommandCollection();\n    /**\n     * @readonly\n     * @member {module:utils/locale~Locale}\n     */\n\n    this.locale = new Locale(this.config.get('language'));\n    /**\n     * Shorthand for {@link module:utils/locale~Locale#t}.\n     *\n     * @see module:utils/locale~Locale#t\n     * @method #t\n     */\n\n    this.t = this.locale.t;\n    /**\n     * Indicates the editor life-cycle state.\n     *\n     * The editor is in one of the following states:\n     *\n     * * `initializing` - during the editor initialization (before {@link module:core/editor/editor~Editor.create `Editor.create()`})\n     * finished its job,\n     * * `ready` - after the promise returned by the {@link module:core/editor/editor~Editor.create `Editor.create()`}\n     * method is resolved,\n     * * `destroyed` - once the {@link #destroy `editor.destroy()`} method was called.\n     *\n     * @observable\n     * @member {'initializing'|'ready'|'destroyed'} #state\n     */\n\n    this.set('state', 'initializing');\n    this.once('ready', function () {\n      return _this.state = 'ready';\n    }, {\n      priority: 'high'\n    });\n    this.once('destroy', function () {\n      return _this.state = 'destroyed';\n    }, {\n      priority: 'high'\n    });\n    /**\n     * Defines whether this editor is in read-only mode.\n     *\n     * In read-only mode the editor {@link #commands commands} are disabled so it is not possible\n     * to modify the document by using them. Also, the editable element(s) become non-editable.\n     *\n     * In order to make the editor read-only, you can set this value directly:\n     *\n     *\t\teditor.isReadOnly = true;\n     *\n     * @observable\n     * @member {Boolean} #isReadOnly\n     */\n\n    this.set('isReadOnly', false);\n    /**\n     * The editor's model.\n     *\n     * The central point of the editor's abstract data model.\n     *\n     * @readonly\n     * @member {module:engine/model/model~Model}\n     */\n\n    this.model = new Model();\n    /**\n     * The {@link module:engine/controller/datacontroller~DataController data controller}.\n     * Used e.g. for setting and retrieving editor data.\n     *\n     * @readonly\n     * @member {module:engine/controller/datacontroller~DataController}\n     */\n\n    this.data = new DataController(this.model);\n    /**\n     * The {@link module:engine/controller/editingcontroller~EditingController editing controller}.\n     * Controls user input and rendering the content for editing.\n     *\n     * @readonly\n     * @member {module:engine/controller/editingcontroller~EditingController}\n     */\n\n    this.editing = new EditingController(this.model);\n    this.editing.view.document.bind('isReadOnly').to(this);\n    /**\n     * Conversion manager through which you can register model to view and view to model converters.\n     *\n     * See {@link module:engine/conversion/conversion~Conversion}'s documentation to learn how to add converters.\n     *\n     * @readonly\n     * @member {module:engine/conversion/conversion~Conversion}\n     */\n\n    this.conversion = new Conversion([this.editing.downcastDispatcher, this.data.downcastDispatcher], this.data.upcastDispatcher);\n    this.conversion.addAlias('dataDowncast', this.data.downcastDispatcher);\n    this.conversion.addAlias('editingDowncast', this.editing.downcastDispatcher);\n    /**\n     * Instance of the {@link module:core/editingkeystrokehandler~EditingKeystrokeHandler}.\n     *\n     * It allows setting simple keystrokes:\n     *\n     *\t\t// Execute the bold command on Ctrl+E:\n     *\t\teditor.keystrokes.set( 'Ctrl+E', 'bold' );\n     *\n     *\t\t// Execute your own callback:\n     *\t\teditor.keystrokes.set( 'Ctrl+E', ( data, cancel ) => {\n     *\t\t\tconsole.log( data.keyCode );\n     *\n     *\t\t\t// Prevent default (native) action and stop the underlying keydown event\n     *\t\t\t// so no other editor feature will interfere.\n     *\t\t\tcancel();\n     *\t\t} );\n     *\n     * Note: Certain, typing oriented keystrokes (like <kbd>Backspace</kbd> or <kbd>Enter</kbd>) are handled\n     * by low level mechanism and trying to listen to them via the keystroke handler will not work reliably.\n     * To handle those specific keystrokes see the events fired by the\n     * {@link module:engine/view/document~Document editing view document} (`editor.editing.view.document`).\n     *\n     * @readonly\n     * @member {module:core/editingkeystrokehandler~EditingKeystrokeHandler}\n     */\n\n    this.keystrokes = new EditingKeystrokeHandler(this);\n    this.keystrokes.listenTo(this.editing.view.document);\n  }\n  /**\n   * Loads and initializes plugins specified in the config.\n   *\n   * @returns {Promise.<module:core/plugin~LoadedPlugins>} A promise which resolves\n   * once the initialization is completed providing an array of loaded plugins.\n   */\n\n\n  _createClass(Editor, [{\n    key: \"initPlugins\",\n    value: function initPlugins() {\n      var config = this.config;\n      var plugins = config.get('plugins') || [];\n      var removePlugins = config.get('removePlugins') || [];\n      var extraPlugins = config.get('extraPlugins') || [];\n      return this.plugins.init(plugins.concat(extraPlugins), removePlugins);\n    }\n    /**\n     * Destroys the editor instance, releasing all resources used by it.\n     *\n     * **Note** The editor cannot be destroyed during the initialization phase so if it is called\n     * while the editor {@link #state is being initialized}, it will wait for the editor initialization before destroying it.\n     *\n     * @fires destroy\n     * @returns {Promise} A promise that resolves once the editor instance is fully destroyed.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _this2 = this;\n\n      var readyPromise = Promise.resolve();\n\n      if (this.state == 'initializing') {\n        readyPromise = new Promise(function (resolve) {\n          return _this2.once('ready', resolve);\n        });\n      }\n\n      return readyPromise.then(function () {\n        _this2.fire('destroy');\n\n        _this2.stopListening();\n\n        _this2.commands.destroy();\n      }).then(function () {\n        return _this2.plugins.destroy();\n      }).then(function () {\n        _this2.model.destroy();\n\n        _this2.data.destroy();\n\n        _this2.editing.destroy();\n\n        _this2.keystrokes.destroy();\n      });\n    }\n    /**\n     * Executes specified command with given parameters.\n     *\n     * Shorthand for:\n     *\n     *\t\teditor.commands.get( commandName ).execute( ... );\n     *\n     * @param {String} commandName Name of command to execute.\n     * @param {*} [...commandParams] Command parameters.\n     */\n\n  }, {\n    key: \"execute\",\n    value: function execute() {\n      var _this$commands;\n\n      (_this$commands = this.commands).execute.apply(_this$commands, arguments);\n    }\n    /**\n     * Creates and initializes a new editor instance.\n     *\n     * This is an abstract method. Every editor type needs to implement its own initialization logic.\n     *\n     * See the `create()` methods of the existing editor types to learn how to use them:\n     *\n     * * {@link module:editor-classic/classiceditor~ClassicEditor.create `ClassicEditor.create()`}\n     * * {@link module:editor-balloon/ballooneditor~BalloonEditor.create `BalloonEditor.create()`}\n     * * {@link module:editor-decoupled/decouplededitor~DecoupledEditor.create `DecoupledEditor.create()`}\n     * * {@link module:editor-inline/inlineeditor~InlineEditor.create `InlineEditor.create()`}\n     *\n     * @abstract\n     * @method module:core/editor/editor~Editor.create\n     */\n\n  }]);\n\n  return Editor;\n}();\n\nexport { Editor as default };\nmix(Editor, ObservableMixin);\n/**\n * Fired when {@link module:engine/controller/datacontroller~DataController#event:ready data} and all additional\n * editor components are ready.\n *\n * Note: This event is most useful for plugin developers. When integrating the editor with your website or\n * application you do not have to listen to `editor#ready` because when the promise returned by the static\n * {@link module:core/editor/editor~Editor.create `Editor.create()`} event is resolved, the editor is already ready.\n * In fact, since the first moment when the editor instance is available to you is inside `then()`'s callback,\n * you cannot even add a listener to the `editor#ready` event.\n *\n * See also the {@link #state `editor.state`} property.\n *\n * @event ready\n */\n\n/**\n * Fired when this editor instance is destroyed. The editor at this point is not usable and this event should be used to\n * perform the clean-up in any plugin.\n *\n *\n * See also the {@link #state `editor.state`} property.\n *\n * @event destroy\n */\n\n/**\n * This error is thrown when a user tries to use a `<textarea>` element to create a non-classic editor in it.\n *\n * Textarea element represents a plain-text and cannot be used as a editable root element with included CKEditor5.\n * Content of an editor should be nicely present to the user and show him how it's going to looks like. Textarea element\n * doesn't support such behavior.\n *\n * Only {@glink builds/guides/overview#classic-editor Classic Editor} has implemented a special system, which\n * **replace** DOM element and load data from it\n * ({@link module:editor-classic/classiceditor~ClassicEditor.create more information}). All other editors\n * use an existing element, load data from it and make this element editable. Details about behaviour of each editor\n * might be found in an associated description of a `create` method of each editor.\n *\n * @error editor-wrong-element\n */\n\n/**\n * An array of plugins built into this editor class.\n * It is used in CKEditor 5 builds to provide a list of plugins which are later automatically initialized\n * during the editor initialization.\n *\n * They will be automatically initialized by the editor, unless listed in `config.removePlugins` and\n * unless `config.plugins` is passed.\n *\n *\t\t// Build some plugins into the editor class first.\n *\t\tClassicEditor.builtinPlugins = [ FooPlugin, BarPlugin ];\n *\n *\t\t// Normally, you need to define config.plugins, but since ClassicEditor.builtinPlugins was\n *\t\t// defined, now you can call create() without any configuration.\n *\t\tClassicEditor\n *\t\t\t.create( sourceElement )\n *\t\t\t.then( editor => {\n *\t\t\t\teditor.plugins.get( FooPlugin ); // -> instance of the Foo plugin\n *\t\t\t\teditor.plugins.get( BarPlugin ); // -> instance of the Bar plugin\n *\t\t\t} );\n *\n *\t\tClassicEditor\n *\t\t\t.create( sourceElement, {\n *\t\t\t\t// Don't initialize this plugins (note: it's defined by a string):\n *\t\t\t\tremovePlugins: [ 'Foo' ]\n *\t\t\t} )\n *\t\t\t.then( editor => {\n *\t\t\t\teditor.plugins.get( FooPlugin ); // -> undefined\n *\t\t\t\teditor.config.get( BarPlugin ); // -> instance of the Bar plugin\n *\t\t\t} );\n *\n *\t\tClassicEditor\n *\t\t\t.create( sourceElement, {\n *\t\t\t\t// Load only this plugin. Can also be define by a string if\n *\t\t\t\t// this plugin was built into the editor class.\n *\t\t\t\tplugins: [ FooPlugin ]\n *\t\t\t} )\n *\t\t\t.then( editor => {\n *\t\t\t\teditor.plugins.get( FooPlugin ); // -> instance of the Foo plugin\n *\t\t\t\teditor.config.get( BarPlugin ); // -> undefined\n *\t\t\t} );\n *\n * See also {@link module:core/editor/editor~Editor.defaultConfig}.\n *\n * @static\n * @member {Array.<Function>} module:core/editor/editor~Editor.builtinPlugins\n */\n\n/**\n * The default config which is built into the editor class.\n * It is used in CKEditor 5 builds to provide the default config options which are later used during editor initialization.\n *\n *\t\tClassicEditor.defaultConfig = {\n *\t\t\tfoo: 1,\n *\t\t\tbar: 2\n *\t\t};\n *\n *\t\tClassicEditor\n *\t\t\t.create( sourceElement )\n *\t\t\t.then( editor => {\n *\t\t\t\teditor.config.get( 'foo' ); // -> 1\n *\t\t\t\teditor.config.get( 'bar' ); // -> 2\n *\t\t\t} );\n *\n *\t\t// The default options can be overridden by the config passed to create().\n *\t\tClassicEditor\n *\t\t\t.create( sourceElement, { bar: 3 } )\n *\t\t\t.then( editor => {\n *\t\t\t\teditor.config.get( 'foo' ); // -> 1\n *\t\t\t\teditor.config.get( 'bar' ); // -> 3\n *\t\t\t} );\n *\n * See also {@link module:core/editor/editor~Editor.builtinPlugins}.\n *\n * @static\n * @member {Object} module:core/editor/editor~Editor.defaultConfig\n */","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module core/editor/utils/dataapimixin\n */\n\n/**\n * Implementation of the {@link module:core/editor/utils/dataapimixin~DataApi}.\n *\n * @mixin DataApiMixin\n * @implements module:core/editor/utils/dataapimixin~DataApi\n */\nvar DataApiMixin = {\n  /**\n   * @inheritDoc\n   */\n  setData: function setData(data) {\n    this.data.set(data);\n  },\n\n  /**\n   * @inheritDoc\n   */\n  getData: function getData(options) {\n    return this.data.get(options);\n  }\n};\nexport default DataApiMixin;\n/**\n * Interface defining editor methods for setting and getting data to and from the editor's main root element\n * using the {@link module:core/editor/editor~Editor#data data pipeline}.\n *\n * This interface is not a part of the {@link module:core/editor/editor~Editor} class because one may want to implement\n * an editor with multiple root elements, in which case the methods for setting and getting data will need to be implemented\n * differently.\n *\n * @interface DataApi\n */\n\n/**\n * Sets the data in the editor.\n *\n *\t\teditor.setData( '<p>This is editor!</p>' );\n *\n * By default the editor accepts HTML. This can be controlled by injecting a different data processor.\n * See the {@glink features/markdown Markdown output} guide for more details.\n *\n * Note: Not only is the format of the data configurable, but the type of the `setData()`'s parameter does not\n * have to be a string either. You can e.g. accept an object or a DOM `DocumentFragment` if you consider this\n * the right format for you.\n *\n * @method #setData\n * @param {String} data Input data.\n */\n\n/**\n * Gets the data from the editor.\n *\n *\t\teditor.getData(); // -> '<p>This is editor!</p>'\n *\n * By default the editor outputs HTML. This can be controlled by injecting a different data processor.\n * See the {@glink features/markdown Markdown output} guide for more details.\n *\n * Note: Not only is the format of the data configurable, but the type of the `getData()`'s return value does not\n * have to be a string either. You can e.g. return an object or a DOM `DocumentFragment` if you consider this\n * the right format for you.\n *\n * @method #getData\n * @param {Object} [options]\n * @param {String} [options.rootName='main'] Root name.\n * @param {String} [options.trim='empty'] Whether returned data should be trimmed. This option is set to `'empty'` by default,\n * which means that whenever editor content is considered empty, an empty string is returned. To turn off trimming\n * use `'none'`. In such cases exact content will be returned (for example `'<p>&nbsp;</p>'` for an empty editor).\n * @returns {String} Output data.\n */","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport setDataInElement from '@ckeditor/ckeditor5-utils/src/dom/setdatainelement';\n/**\n * @module core/editor/utils/elementapimixin\n */\n\n/**\n * Implementation of the {@link module:core/editor/utils/elementapimixin~ElementApi}.\n *\n * @mixin ElementApiMixin\n * @implements module:core/editor/utils/elementapimixin~ElementApi\n */\n\nvar ElementApiMixin = {\n  /**\n   * @inheritDoc\n   */\n  updateSourceElement: function updateSourceElement() {\n    if (!this.sourceElement) {\n      /**\n       * Cannot update the source element of a detached editor.\n       *\n       * The {@link ~ElementApi#updateSourceElement `updateSourceElement()`} method cannot be called if you did not\n       * pass an element to `Editor.create()`.\n       *\n       * @error editor-missing-sourceelement\n       */\n      throw new CKEditorError('editor-missing-sourceelement: Cannot update the source element of a detached editor.', this);\n    }\n\n    setDataInElement(this.sourceElement, this.data.get());\n  }\n};\nexport default ElementApiMixin;\n/**\n * Interface describing an editor that replaced a DOM element (was \"initialized on an element\").\n *\n * Such an editor should provide a method to\n * {@link module:core/editor/utils/elementapimixin~ElementApi#updateSourceElement update the replaced element with the current data}.\n *\n * @interface ElementApi\n */\n\n/**\n * The element on which the editor has been initialized.\n *\n * @readonly\n * @member {HTMLElement} #sourceElement\n */\n\n/**\n * Updates the {@link #sourceElement editor source element}'s content with the data.\n *\n * @method #updateSourceElement\n */","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/setdatainelement\n */\n\n/* globals HTMLTextAreaElement */\n\n/**\n * Sets data in a given element.\n *\n * @param {HTMLElement} el The element in which the data will be set.\n * @param {String} data The data string.\n */\nexport default function setDataInElement(el, data) {\n  if (el instanceof HTMLTextAreaElement) {\n    el.value = data;\n  }\n\n  el.innerHTML = data;\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/dataprocessor/basichtmlwriter\n */\n\n/* globals document */\n\n/**\n * Basic HTML writer. It uses the native `innerHTML` property for basic conversion\n * from a document fragment to an HTML string.\n *\n * @implements module:engine/dataprocessor/htmlwriter~HtmlWriter\n */\nvar BasicHtmlWriter =\n/*#__PURE__*/\nfunction () {\n  function BasicHtmlWriter() {\n    _classCallCheck(this, BasicHtmlWriter);\n  }\n\n  _createClass(BasicHtmlWriter, [{\n    key: \"getHtml\",\n\n    /**\n     * Returns an HTML string created from the document fragment.\n     *\n     * @param {DocumentFragment} fragment\n     * @returns {String}\n     */\n    value: function getHtml(fragment) {\n      var doc = document.implementation.createHTMLDocument('');\n      var container = doc.createElement('div');\n      container.appendChild(fragment);\n      return container.innerHTML;\n    }\n  }]);\n\n  return BasicHtmlWriter;\n}();\n\nexport { BasicHtmlWriter as default };","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/dataprocessor/htmldataprocessor\n */\n\n/* globals document, DOMParser */\nimport BasicHtmlWriter from './basichtmlwriter';\nimport DomConverter from '../view/domconverter';\nimport { NBSP_FILLER } from '../view/filler';\n/**\n * The HTML data processor class.\n * This data processor implementation uses HTML as input and output data.\n *\n * @implements module:engine/dataprocessor/dataprocessor~DataProcessor\n */\n\nvar HtmlDataProcessor =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a new instance of the HTML data processor class.\n   */\n  function HtmlDataProcessor() {\n    _classCallCheck(this, HtmlDataProcessor);\n\n    /**\n     * A DOM parser instance used to parse an HTML string to an HTML document.\n     *\n     * @private\n     * @member {DOMParser}\n     */\n    this._domParser = new DOMParser();\n    /**\n     * A DOM converter used to convert DOM elements to view elements.\n     *\n     * @private\n     * @member {module:engine/view/domconverter~DomConverter}\n     */\n\n    this._domConverter = new DomConverter({\n      blockFiller: NBSP_FILLER\n    });\n    /**\n     * A basic HTML writer instance used to convert DOM elements to an HTML string.\n     *\n     * @private\n     * @member {module:engine/dataprocessor/basichtmlwriter~BasicHtmlWriter}\n     */\n\n    this._htmlWriter = new BasicHtmlWriter();\n  }\n  /**\n   * Converts a provided {@link module:engine/view/documentfragment~DocumentFragment document fragment}\n   * to data format &mdash; in this case to an HTML string.\n   *\n   * @param {module:engine/view/documentfragment~DocumentFragment} viewFragment\n   * @returns {String} HTML string.\n   */\n\n\n  _createClass(HtmlDataProcessor, [{\n    key: \"toData\",\n    value: function toData(viewFragment) {\n      // Convert view DocumentFragment to DOM DocumentFragment.\n      var domFragment = this._domConverter.viewToDom(viewFragment, document); // Convert DOM DocumentFragment to HTML output.\n\n\n      return this._htmlWriter.getHtml(domFragment);\n    }\n    /**\n     * Converts the provided HTML string to a view tree.\n     *\n     * @param {String} data An HTML string.\n     * @returns {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment|null} A converted view element.\n     */\n\n  }, {\n    key: \"toView\",\n    value: function toView(data) {\n      // Convert input HTML data to DOM DocumentFragment.\n      var domFragment = this._toDom(data); // Convert DOM DocumentFragment to view DocumentFragment.\n\n\n      return this._domConverter.domToView(domFragment);\n    }\n    /**\n     * Converts an HTML string to its DOM representation. Returns a document fragment containing nodes parsed from\n     * the provided data.\n     *\n     * @private\n     * @param {String} data\n     * @returns {DocumentFragment}\n     */\n\n  }, {\n    key: \"_toDom\",\n    value: function _toDom(data) {\n      var document = this._domParser.parseFromString(data, 'text/html');\n\n      var fragment = document.createDocumentFragment();\n      var nodes = document.body.childNodes;\n\n      while (nodes.length > 0) {\n        fragment.appendChild(nodes[0]);\n      }\n\n      return fragment;\n    }\n  }]);\n\n  return HtmlDataProcessor;\n}();\n\nexport { HtmlDataProcessor as default };","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/componentfactory\n */\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * A helper class implementing the UI component ({@link module:ui/view~View view}) factory.\n *\n * It allows functions producing specific UI components to be registered under their unique names\n * in the factory. A registered component can be then instantiated by providing its name.\n * Note that names are case insensitive.\n *\n *\t\t// The editor provides localization tools for the factory.\n *\t\tconst factory = new ComponentFactory( editor );\n *\n *\t\tfactory.add( 'foo', locale => new FooView( locale ) );\n *\t\tfactory.add( 'bar', locale => new BarView( locale ) );\n *\n *\t\t// An instance of FooView.\n *\t\tconst fooInstance = factory.create( 'foo' );\n *\n *\t\t// Names are case insensitive so this is also allowed:\n *\t\tconst barInstance = factory.create( 'Bar' );\n *\n * The {@link module:core/editor/editor~Editor#locale editor locale} is passed to the factory\n * function when {@link module:ui/componentfactory~ComponentFactory#create} is called.\n */\n\nvar ComponentFactory =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of the factory.\n   *\n   * @constructor\n   * @param {module:core/editor/editor~Editor} editor The editor instance.\n   */\n  function ComponentFactory(editor) {\n    _classCallCheck(this, ComponentFactory);\n\n    /**\n     * The editor instance that the factory belongs to.\n     *\n     * @readonly\n     * @member {module:core/editor/editor~Editor}\n     */\n    this.editor = editor;\n    /**\n     * Registered component factories.\n     *\n     * @private\n     * @member {Map}\n     */\n\n    this._components = new Map();\n  }\n  /**\n   * Returns an iterator of registered component names. Names are returned in lower case.\n   *\n   * @returns {Iterable.<String>}\n   */\n\n\n  _createClass(ComponentFactory, [{\n    key: \"names\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function names() {\n      var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, value;\n\n      return regeneratorRuntime.wrap(function names$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _iteratorError = undefined;\n              _context.prev = 3;\n              _iterator = this._components.values()[Symbol.iterator]();\n\n            case 5:\n              if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                _context.next = 12;\n                break;\n              }\n\n              value = _step.value;\n              _context.next = 9;\n              return value.originalName;\n\n            case 9:\n              _iteratorNormalCompletion = true;\n              _context.next = 5;\n              break;\n\n            case 12:\n              _context.next = 18;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](3);\n              _didIteratorError = true;\n              _iteratorError = _context.t0;\n\n            case 18:\n              _context.prev = 18;\n              _context.prev = 19;\n\n              if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n                _iterator[\"return\"]();\n              }\n\n            case 21:\n              _context.prev = 21;\n\n              if (!_didIteratorError) {\n                _context.next = 24;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 24:\n              return _context.finish(21);\n\n            case 25:\n              return _context.finish(18);\n\n            case 26:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, names, this, [[3, 14, 18, 26], [19,, 21, 25]]);\n    })\n    /**\n     * Registers a component factory function that will be used by the\n     * {@link #create create} method and called with the\n     * {@link module:core/editor/editor~Editor#locale editor locale} as an argument,\n     * allowing localization of the {@link module:ui/view~View view}.\n     *\n     * @param {String} name The name of the component.\n     * @param {Function} callback The callback that returns the component.\n     */\n\n  }, {\n    key: \"add\",\n    value: function add(name, callback) {\n      if (this.has(name)) {\n        /**\n         * The item already exists in the component factory.\n         *\n         * @error componentfactory-item-exists\n         * @param {String} name The name of the component.\n         */\n        throw new CKEditorError('componentfactory-item-exists: The item already exists in the component factory.', this, {\n          name: name\n        });\n      }\n\n      this._components.set(getNormalized(name), {\n        callback: callback,\n        originalName: name\n      });\n    }\n    /**\n     * Creates an instance of a component registered in the factory under a specific name.\n     *\n     * When called, the {@link module:core/editor/editor~Editor#locale editor locale} is passed to\n     * the previously {@link #add added} factory function, allowing localization of the\n     * {@link module:ui/view~View view}.\n     *\n     * @param {String} name The name of the component.\n     * @returns {module:ui/view~View} The instantiated component view.\n     */\n\n  }, {\n    key: \"create\",\n    value: function create(name) {\n      if (!this.has(name)) {\n        /**\n         * The required component is not registered in the component factory. Please make sure\n         * the provided name is correct and the component has been correctly\n         * {@link #add added} to the factory.\n         *\n         * @error componentfactory-item-missing\n         * @param {String} name The name of the missing component.\n         */\n        throw new CKEditorError('componentfactory-item-missing: The required component is not registered in the factory.', this, {\n          name: name\n        });\n      }\n\n      return this._components.get(getNormalized(name)).callback(this.editor.locale);\n    }\n    /**\n     * Checks if a component of a given name is registered in the factory.\n     *\n     * @param {String} name The name of the component.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"has\",\n    value: function has(name) {\n      return this._components.has(getNormalized(name));\n    }\n  }]);\n\n  return ComponentFactory;\n}(); //\n// Ensures that the component name used as the key in the internal map is in lower case.\n//\n// @private\n// @param {String} name\n// @returns {String}\n\n\nexport { ComponentFactory as default };\n\nfunction getNormalized(name) {\n  return String(name).toLowerCase();\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* global setTimeout, clearTimeout */\n\n/**\n * @module utils/focustracker\n */\nimport DomEmitterMixin from './dom/emittermixin';\nimport ObservableMixin from './observablemixin';\nimport CKEditorError from './ckeditorerror';\nimport mix from './mix';\n/**\n * Allows observing a group of `HTMLElement`s whether at least one of them is focused.\n *\n * Used by the {@link module:core/editor/editor~Editor} in order to track whether the focus is still within the application,\n * or were used outside of its UI.\n *\n * **Note** `focus` and `blur` listeners use event capturing, so it is only needed to register wrapper `HTMLElement`\n * which contain other `focusable` elements. But note that this wrapper element has to be focusable too\n * (have e.g. `tabindex=\"-1\"`).\n *\n * @mixes module:utils/dom/emittermixin~EmitterMixin\n * @mixes module:utils/observablemixin~ObservableMixin\n */\n\nvar FocusTracker =\n/*#__PURE__*/\nfunction () {\n  function FocusTracker() {\n    _classCallCheck(this, FocusTracker);\n\n    /**\n     * True when one of the registered elements is focused.\n     *\n     * @readonly\n     * @observable\n     * @member {Boolean} #isFocused\n     */\n    this.set('isFocused', false);\n    /**\n     * The currently focused element.\n     *\n     * While {@link #isFocused `isFocused`} remains `true`, the focus can\n     * move between different UI elements. This property tracks those\n     * elements and tells which one is currently focused.\n     *\n     * @readonly\n     * @observable\n     * @member {HTMLElement|null}\n     */\n\n    this.set('focusedElement', null);\n    /**\n     * List of registered elements.\n     *\n     * @private\n     * @member {Set.<HTMLElement>}\n     */\n\n    this._elements = new Set();\n    /**\n     * Event loop timeout.\n     *\n     * @private\n     * @member {Number}\n     */\n\n    this._nextEventLoopTimeout = null;\n  }\n  /**\n   * Starts tracking the specified element.\n   *\n   * @param {HTMLElement} element\n   */\n\n\n  _createClass(FocusTracker, [{\n    key: \"add\",\n    value: function add(element) {\n      var _this = this;\n\n      if (this._elements.has(element)) {\n        throw new CKEditorError('focusTracker-add-element-already-exist', this);\n      }\n\n      this.listenTo(element, 'focus', function () {\n        return _this._focus(element);\n      }, {\n        useCapture: true\n      });\n      this.listenTo(element, 'blur', function () {\n        return _this._blur();\n      }, {\n        useCapture: true\n      });\n\n      this._elements.add(element);\n    }\n    /**\n     * Stops tracking the specified element and stops listening on this element.\n     *\n     * @param {HTMLElement} element\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(element) {\n      if (element === this.focusedElement) {\n        this._blur(element);\n      }\n\n      if (this._elements.has(element)) {\n        this.stopListening(element);\n\n        this._elements[\"delete\"](element);\n      }\n    }\n    /**\n     * Destroys the focus tracker by:\n     * - Disabling all event listeners attached to tracked elements.\n     * - Removing all tracked elements that were previously added.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.stopListening();\n    }\n    /**\n     * Stores currently focused element and set {#isFocused} as `true`.\n     *\n     * @private\n     * @param {HTMLElement} element Element which has been focused.\n     */\n\n  }, {\n    key: \"_focus\",\n    value: function _focus(element) {\n      clearTimeout(this._nextEventLoopTimeout);\n      this.focusedElement = element;\n      this.isFocused = true;\n    }\n    /**\n     * Clears currently focused element and set {@link #isFocused} as `false`.\n     * This method uses `setTimeout` to change order of fires `blur` and `focus` events.\n     *\n     * @private\n     * @fires blur\n     */\n\n  }, {\n    key: \"_blur\",\n    value: function _blur() {\n      var _this2 = this;\n\n      clearTimeout(this._nextEventLoopTimeout);\n      this._nextEventLoopTimeout = setTimeout(function () {\n        _this2.focusedElement = null;\n        _this2.isFocused = false;\n      }, 0);\n    }\n    /**\n     * @event focus\n     */\n\n    /**\n     * @event blur\n     */\n\n  }]);\n\n  return FocusTracker;\n}();\n\nexport { FocusTracker as default };\nmix(FocusTracker, DomEmitterMixin);\nmix(FocusTracker, ObservableMixin);","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module core/editor/editorui\n */\nimport ComponentFactory from '@ckeditor/ckeditor5-ui/src/componentfactory';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport log from '@ckeditor/ckeditor5-utils/src/log';\n/**\n * A class providing the minimal interface that is required to successfully bootstrap any editor UI.\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n */\n\nvar EditorUI =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of the editor UI class.\n   *\n   * @param {module:core/editor/editor~Editor} editor The editor instance.\n   */\n  function EditorUI(editor) {\n    var _this = this;\n\n    _classCallCheck(this, EditorUI);\n\n    /**\n     * The editor that the UI belongs to.\n     *\n     * @readonly\n     * @member {module:core/editor/editor~Editor} #editor\n     */\n    this.editor = editor;\n    /**\n     * An instance of the {@link module:ui/componentfactory~ComponentFactory}, a registry used by plugins\n     * to register factories of specific UI components.\n     *\n     * @readonly\n     * @member {module:ui/componentfactory~ComponentFactory} #componentFactory\n     */\n\n    this.componentFactory = new ComponentFactory(editor);\n    /**\n     * Stores the information about the editor UI focus and propagates it so various plugins and components\n     * are unified as a focus group.\n     *\n     * @readonly\n     * @member {module:utils/focustracker~FocusTracker} #focusTracker\n     */\n\n    this.focusTracker = new FocusTracker();\n    /**\n     * Stores all editable elements used by the editor instance.\n     *\n     * @private\n     * @member {Map.<String,HTMLElement>}\n     */\n\n    this._editableElementsMap = new Map(); // Informs UI components that should be refreshed after layout change.\n\n    this.listenTo(editor.editing.view.document, 'layoutChanged', function () {\n      return _this.update();\n    });\n  }\n  /**\n   * The main (outermost) DOM element of the editor UI.\n   *\n   * For example, in {@link module:editor-classic/classiceditor~ClassicEditor} it is a `<div>` which\n   * wraps the editable element and the toolbar. In {@link module:editor-inline/inlineeditor~InlineEditor}\n   * it is the editable element itself (as there is no other wrapper). However, in\n   * {@link module:editor-decoupled/decouplededitor~DecoupledEditor} it is set to `null` because this editor does not\n   * come with a single \"main\" HTML element (its editable element and toolbar are separate).\n   *\n   * This property can be understood as a shorthand for retrieving the element that a specific editor integration\n   * considers to be its main DOM element.\n   *\n   * @readonly\n   * @member {HTMLElement|null} #element\n   */\n\n\n  _createClass(EditorUI, [{\n    key: \"update\",\n\n    /**\n     * Fires the {@link module:core/editor/editorui~EditorUI#event:update `update`} event.\n     *\n     * This method should be called when the editor UI (e.g. positions of its balloons) needs to be updated due to\n     * some environmental change which CKEditor 5 is not aware of (e.g. resize of a container in which it is used).\n     */\n    value: function update() {\n      this.fire('update');\n    }\n    /**\n     * Destroys the UI.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.stopListening();\n      this.focusTracker.destroy(); // Clean–up the references to the CKEditor instance stored in the native editable DOM elements.\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this._editableElementsMap.values()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var domElement = _step.value;\n          domElement.ckeditorInstance = null;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      this._editableElementsMap = new Map();\n    }\n    /**\n     * Store the native DOM editable element used by the editor under\n     * a unique name.\n     *\n     * @param {String} rootName The unique name of the editable element.\n     * @param {HTMLElement} domElement The native DOM editable element.\n     */\n\n  }, {\n    key: \"setEditableElement\",\n    value: function setEditableElement(rootName, domElement) {\n      this._editableElementsMap.set(rootName, domElement); // Put a reference to the CKEditor instance in the editable native DOM element.\n      // It helps 3rd–party software (browser extensions, other libraries) access and recognize\n      // CKEditor 5 instances (editing roots) and use their API (there is no global editor\n      // instance registry).\n\n\n      domElement.ckeditorInstance = this.editor;\n    }\n    /**\n     * Returns the editable editor element with the given name or null if editable does not exist.\n     *\n     * @param {String} [rootName=main] The editable name.\n     * @returns {HTMLElement|undefined}\n     */\n\n  }, {\n    key: \"getEditableElement\",\n    value: function getEditableElement() {\n      var rootName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'main';\n      return this._editableElementsMap.get(rootName);\n    }\n    /**\n     * Returns array of names of all editor editable elements.\n     *\n     * @returns {Iterable.<String>}\n     */\n\n  }, {\n    key: \"getEditableElementsNames\",\n    value: function getEditableElementsNames() {\n      return this._editableElementsMap.keys();\n    }\n    /**\n     * Stores all editable elements used by the editor instance.\n     *\n     * @protected\n     * @deprecated\n     * @member {Map.<String,HTMLElement>}\n     */\n\n  }, {\n    key: \"element\",\n    get: function get() {\n      return null;\n    }\n  }, {\n    key: \"_editableElements\",\n    get: function get() {\n      /**\n       * The {@link module:core/editor/editorui~EditorUI#_editableElements `EditorUI#_editableElements`} property has been\n       * deprecated and will be removed in the near future. Please use {@link #setEditableElement `setEditableElement()`} and\n       * {@link #getEditableElement `getEditableElement()`} methods instead.\n       *\n       * @error editor-ui-deprecated-editable-elements\n       * @param {module:core/editor/editorui~EditorUI} editorUI Editor UI instance the deprecated property belongs to.\n       */\n      log.warn('editor-ui-deprecated-editable-elements: ' + 'The EditorUI#_editableElements property has been deprecated and will be removed in the near future.', {\n        editorUI: this\n      });\n      return this._editableElementsMap;\n    }\n    /**\n     * Fired when the editor UI is ready.\n     *\n     * Fired before {@link module:engine/controller/datacontroller~DataController#event:ready}.\n     *\n     * @event ready\n     */\n\n    /**\n     * Fired whenever the UI (all related components) should be refreshed.\n     *\n     * **Note:**: The event is fired after each {@link module:engine/view/document~Document#event:layoutChanged}.\n     * It can also be fired manually via the {@link module:core/editor/editorui~EditorUI#update} method.\n     *\n     * @event update\n     */\n\n  }]);\n\n  return EditorUI;\n}();\n\nexport { EditorUI as default };\nmix(EditorUI, EmitterMixin);","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/placeholder\n */\nimport '../../theme/placeholder.css'; // Each document stores information about its placeholder elements and check functions.\n\nvar documentPlaceholders = new WeakMap();\n/**\n * A helper that enables a placeholder on the provided view element (also updates its visibility).\n * The placeholder is a CSS pseudo–element (with a text content) attached to the element.\n *\n * To change the placeholder text, simply call this method again with new options.\n *\n * To disable the placeholder, use {@link module:engine/view/placeholder~disablePlaceholder `disablePlaceholder()`} helper.\n *\n * @param {Object} [options] Configuration options of the placeholder.\n * @param {module:engine/view/view~View} options.view Editing view instance.\n * @param {module:engine/view/element~Element} options.element Element that will gain a placeholder.\n * See `options.isDirectHost` to learn more.\n * @param {String} options.text Placeholder text.\n * @param {Boolean} [options.isDirectHost=true] If set `false`, the placeholder will not be enabled directly\n * in the passed `element` but in one of its children (selected automatically, i.e. a first empty child element).\n * Useful when attaching placeholders to elements that can host other elements (not just text), for instance,\n * editable root elements.\n */\n\nexport function enablePlaceholder(options) {\n  var view = options.view,\n      element = options.element,\n      text = options.text,\n      _options$isDirectHost = options.isDirectHost,\n      isDirectHost = _options$isDirectHost === void 0 ? true : _options$isDirectHost;\n  var doc = view.document; // Use a single a single post fixer per—document to update all placeholders.\n\n  if (!documentPlaceholders.has(doc)) {\n    documentPlaceholders.set(doc, new Map()); // If a post-fixer callback makes a change, it should return `true` so other post–fixers\n    // can re–evaluate the document again.\n\n    doc.registerPostFixer(function (writer) {\n      return updateDocumentPlaceholders(doc, writer);\n    });\n  } // Store information about the element placeholder under its document.\n\n\n  documentPlaceholders.get(doc).set(element, {\n    text: text,\n    isDirectHost: isDirectHost\n  }); // Update the placeholders right away.\n\n  view.change(function (writer) {\n    return updateDocumentPlaceholders(doc, writer);\n  });\n}\n/**\n * Disables the placeholder functionality from a given element.\n *\n * See {@link module:engine/view/placeholder~enablePlaceholder `enablePlaceholder()`} to learn more.\n *\n * @param {module:engine/view/view~View} view\n * @param {module:engine/view/element~Element} element\n */\n\nexport function disablePlaceholder(view, element) {\n  var doc = element.document;\n  view.change(function (writer) {\n    if (!documentPlaceholders.has(doc)) {\n      return;\n    }\n\n    var placeholders = documentPlaceholders.get(doc);\n    var config = placeholders.get(element);\n    writer.removeAttribute('data-placeholder', config.hostElement);\n    hidePlaceholder(writer, config.hostElement);\n    placeholders[\"delete\"](element);\n  });\n}\n/**\n * Shows a placeholder in the provided element by changing related attributes and CSS classes.\n *\n * **Note**: This helper will not update the placeholder visibility nor manage the\n * it in any way in the future. What it does is a one–time state change of an element. Use\n * {@link module:engine/view/placeholder~enablePlaceholder `enablePlaceholder()`} and\n * {@link module:engine/view/placeholder~disablePlaceholder `disablePlaceholder()`} for full\n * placeholder functionality.\n *\n * **Note**: This helper will blindly show the placeholder directly in the root editable element if\n * one is passed, which could result in a visual clash if the editable element has some children\n * (for instance, an empty paragraph). Use {@link module:engine/view/placeholder~enablePlaceholder `enablePlaceholder()`}\n * in that case or make sure the correct element is passed to the helper.\n *\n * @param {module:engine/view/downcastwriter~DowncastWriter} writer\n * @param {module:engine/view/element~Element} element\n * @returns {Boolean} `true`, if any changes were made to the `element`.\n */\n\nexport function showPlaceholder(writer, element) {\n  if (!element.hasClass('ck-placeholder')) {\n    writer.addClass('ck-placeholder', element);\n    return true;\n  }\n\n  return false;\n}\n/**\n * Hides a placeholder in the element by changing related attributes and CSS classes.\n *\n * **Note**: This helper will not update the placeholder visibility nor manage the\n * it in any way in the future. What it does is a one–time state change of an element. Use\n * {@link module:engine/view/placeholder~enablePlaceholder `enablePlaceholder()`} and\n * {@link module:engine/view/placeholder~disablePlaceholder `disablePlaceholder()`} for full\n * placeholder functionality.\n *\n * @param {module:engine/view/downcastwriter~DowncastWriter} writer\n * @param {module:engine/view/element~Element} element\n * @returns {Boolean} `true`, if any changes were made to the `element`.\n */\n\nexport function hidePlaceholder(writer, element) {\n  if (element.hasClass('ck-placeholder')) {\n    writer.removeClass('ck-placeholder', element);\n    return true;\n  }\n\n  return false;\n}\n/**\n * Checks if a placeholder should be displayed in the element.\n *\n * **Note**: This helper will blindly check the possibility of showing a placeholder directly in the\n * root editable element if one is passed, which may not be the expected result. If an element can\n * host other elements (not just text), most likely one of its children should be checked instead\n * because it will be the final host for the placeholder. Use\n * {@link module:engine/view/placeholder~enablePlaceholder `enablePlaceholder()`} in that case or make\n * sure the correct element is passed to the helper.\n *\n * @param {module:engine/view/element~Element} element\n * @returns {Boolean}\n */\n\nexport function needsPlaceholder(element) {\n  var doc = element.document; // The element was removed from document.\n\n  if (!doc) {\n    return false;\n  } // The element is empty only as long as it contains nothing but uiElements.\n\n\n  var isEmptyish = !Array.from(element.getChildren()).some(function (element) {\n    return !element.is('uiElement');\n  }); // If the element is empty and the document is blurred.\n\n  if (!doc.isFocused && isEmptyish) {\n    return true;\n  }\n\n  var viewSelection = doc.selection;\n  var selectionAnchor = viewSelection.anchor; // If document is focused and the element is empty but the selection is not anchored inside it.\n\n  if (isEmptyish && selectionAnchor && selectionAnchor.parent !== element) {\n    return true;\n  }\n\n  return false;\n} // Updates all placeholders associated with a document in a post–fixer callback.\n//\n// @private\n// @param { module:engine/view/document~Document} doc\n// @param {module:engine/view/downcastwriter~DowncastWriter} writer\n// @returns {Boolean} True if any changes were made to the view document.\n\nfunction updateDocumentPlaceholders(doc, writer) {\n  var placeholders = documentPlaceholders.get(doc);\n  var wasViewModified = false;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = placeholders[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var _step$value = _slicedToArray(_step.value, 2),\n          element = _step$value[0],\n          config = _step$value[1];\n\n      if (updatePlaceholder(writer, element, config)) {\n        wasViewModified = true;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return wasViewModified;\n} // Updates a single placeholder in a post–fixer callback.\n//\n// @private\n// @param {module:engine/view/downcastwriter~DowncastWriter} writer\n// @param {module:engine/view/element~Element} element\n// @param {Object} config Configuration of the placeholder\n// @param {String} config.text\n// @param {Boolean} config.isDirectHost\n// @returns {Boolean} True if any changes were made to the view document.\n\n\nfunction updatePlaceholder(writer, element, config) {\n  var text = config.text,\n      isDirectHost = config.isDirectHost;\n  var hostElement = isDirectHost ? element : getChildPlaceholderHostSubstitute(element);\n  var wasViewModified = false; // When not a direct host, it could happen that there is no child element\n  // capable of displaying a placeholder.\n\n  if (!hostElement) {\n    return false;\n  } // Cache the host element. It will be necessary for disablePlaceholder() to know\n  // which element should have class and attribute removed because, depending on\n  // the config.isDirectHost value, it could be the element or one of its descendants.\n\n\n  config.hostElement = hostElement; // This may be necessary when updating the placeholder text to something else.\n\n  if (hostElement.getAttribute('data-placeholder') !== text) {\n    writer.setAttribute('data-placeholder', text, hostElement);\n    wasViewModified = true;\n  }\n\n  if (needsPlaceholder(hostElement)) {\n    if (showPlaceholder(writer, hostElement)) {\n      wasViewModified = true;\n    }\n  } else if (hidePlaceholder(writer, hostElement)) {\n    wasViewModified = true;\n  }\n\n  return wasViewModified;\n} // Gets a child element capable of displaying a placeholder if a parent element can host more\n// than just text (for instance, when it is a root editable element). The child element\n// can then be used in other placeholder helpers as a substitute of its parent.\n//\n// @private\n// @param {module:engine/view/element~Element} parent\n// @returns {module:engine/view/element~Element|null}\n\n\nfunction getChildPlaceholderHostSubstitute(parent) {\n  if (parent.childCount === 1) {\n    var firstChild = parent.getChild(0);\n\n    if (firstChild.is('element') && !firstChild.is('uiElement')) {\n      return firstChild;\n    }\n  }\n\n  return null;\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/elementreplacer\n */\n\n/**\n * Utility class allowing to hide existing HTML elements or replace them with given ones in a way that doesn't remove\n * the original elements from the DOM.\n */\nvar ElementReplacer =\n/*#__PURE__*/\nfunction () {\n  function ElementReplacer() {\n    _classCallCheck(this, ElementReplacer);\n\n    /**\n     * The elements replaced by {@link #replace} and their replacements.\n     *\n     * @private\n     * @member {Array.<Object>}\n     */\n    this._replacedElements = [];\n  }\n  /**\n   * Hides the `element` and, if specified, inserts the the given element next to it.\n   *\n   * The effect of this method can be reverted by {@link #restore}.\n   *\n   * @param {HTMLElement} element The element to replace.\n   * @param {HTMLElement} [newElement] The replacement element. If not passed, then the `element` will just be hidden.\n   */\n\n\n  _createClass(ElementReplacer, [{\n    key: \"replace\",\n    value: function replace(element, newElement) {\n      this._replacedElements.push({\n        element: element,\n        newElement: newElement\n      });\n\n      element.style.display = 'none';\n\n      if (newElement) {\n        element.parentNode.insertBefore(newElement, element.nextSibling);\n      }\n    }\n    /**\n     * Restores what {@link #replace} did.\n     */\n\n  }, {\n    key: \"restore\",\n    value: function restore() {\n      this._replacedElements.forEach(function (_ref) {\n        var element = _ref.element,\n            newElement = _ref.newElement;\n        element.style.display = '';\n\n        if (newElement) {\n          newElement.remove();\n        }\n      });\n\n      this._replacedElements = [];\n    }\n  }]);\n\n  return ElementReplacer;\n}();\n\nexport { ElementReplacer as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module editor-classic/classiceditorui\n */\nimport EditorUI from '@ckeditor/ckeditor5-core/src/editor/editorui';\nimport enableToolbarKeyboardFocus from '@ckeditor/ckeditor5-ui/src/toolbar/enabletoolbarkeyboardfocus';\nimport normalizeToolbarConfig from '@ckeditor/ckeditor5-ui/src/toolbar/normalizetoolbarconfig';\nimport { enablePlaceholder } from '@ckeditor/ckeditor5-engine/src/view/placeholder';\nimport ElementReplacer from '@ckeditor/ckeditor5-utils/src/elementreplacer';\n/**\n * The classic editor UI class.\n *\n * @extends module:core/editor/editorui~EditorUI\n */\n\nvar ClassicEditorUI =\n/*#__PURE__*/\nfunction (_EditorUI) {\n  _inherits(ClassicEditorUI, _EditorUI);\n\n  /**\n   * Creates an instance of the classic editor UI class.\n   *\n   * @param {module:core/editor/editor~Editor} editor The editor instance.\n   * @param {module:ui/editorui/editoruiview~EditorUIView} view The view of the UI.\n   */\n  function ClassicEditorUI(editor, view) {\n    var _this;\n\n    _classCallCheck(this, ClassicEditorUI);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ClassicEditorUI).call(this, editor));\n    /**\n     * The main (top–most) view of the editor UI.\n     *\n     * @readonly\n     * @member {module:ui/editorui/editoruiview~EditorUIView} #view\n     */\n\n    _this.view = view;\n    /**\n     * A normalized `config.toolbar` object.\n     *\n     * @private\n     * @member {Object}\n     */\n\n    _this._toolbarConfig = normalizeToolbarConfig(editor.config.get('toolbar'));\n    /**\n     * The element replacer instance used to hide the editor's source element.\n     *\n     * @protected\n     * @member {module:utils/elementreplacer~ElementReplacer}\n     */\n\n    _this._elementReplacer = new ElementReplacer();\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(ClassicEditorUI, [{\n    key: \"init\",\n\n    /**\n     * Initializes the UI.\n     *\n     * @param {HTMLElement|null} replacementElement The DOM element that will be the source for the created editor.\n     */\n    value: function init(replacementElement) {\n      var editor = this.editor;\n      var view = this.view;\n      var editingView = editor.editing.view;\n      var editable = view.editable;\n      var editingRoot = editingView.document.getRoot(); // The editable UI and editing root should share the same name. Then name is used\n      // to recognize the particular editable, for instance in ARIA attributes.\n\n      editable.name = editingRoot.rootName;\n      view.render(); // The editable UI element in DOM is available for sure only after the editor UI view has been rendered.\n      // But it can be available earlier if a DOM element has been passed to BalloonEditor.create().\n\n      var editableElement = editable.element; // Register the editable UI view in the editor. A single editor instance can aggregate multiple\n      // editable areas (roots) but the classic editor has only one.\n\n      this.setEditableElement(editable.name, editableElement); // Let the global focus tracker know that the editable UI element is focusable and\n      // belongs to the editor. From now on, the focus tracker will sustain the editor focus\n      // as long as the editable is focused (e.g. the user is typing).\n\n      this.focusTracker.add(editableElement); // Let the editable UI element respond to the changes in the global editor focus\n      // tracker. It has been added to the same tracker a few lines above but, in reality, there are\n      // many focusable areas in the editor, like balloons, toolbars or dropdowns and as long\n      // as they have focus, the editable should act like it is focused too (although technically\n      // it isn't), e.g. by setting the proper CSS class, visually announcing focus to the user.\n      // Doing otherwise will result in editable focus styles disappearing, once e.g. the\n      // toolbar gets focused.\n\n      view.editable.bind('isFocused').to(this.focusTracker); // Bind the editable UI element to the editing view, making it an end– and entry–point\n      // of the editor's engine. This is where the engine meets the UI.\n\n      editingView.attachDomRoot(editableElement); // If an element containing the initial data of the editor was provided, replace it with\n      // an editor instance's UI in DOM until the editor is destroyed. For instance, a <textarea>\n      // can be such element.\n\n      if (replacementElement) {\n        this._elementReplacer.replace(replacementElement, this.element);\n      }\n\n      this._initPlaceholder();\n\n      this._initToolbar();\n\n      this.fire('ready');\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var view = this.view;\n      var editingView = this.editor.editing.view;\n\n      this._elementReplacer.restore();\n\n      editingView.detachDomRoot(view.editable.name);\n      view.destroy();\n\n      _get(_getPrototypeOf(ClassicEditorUI.prototype), \"destroy\", this).call(this);\n    }\n    /**\n     * Initializes the editor toolbar.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_initToolbar\",\n    value: function _initToolbar() {\n      var editor = this.editor;\n      var view = this.view;\n      var editingView = editor.editing.view; // Set–up the sticky panel with toolbar.\n\n      view.stickyPanel.bind('isActive').to(this.focusTracker, 'isFocused');\n      view.stickyPanel.limiterElement = view.element;\n\n      if (this._toolbarConfig.viewportTopOffset) {\n        view.stickyPanel.viewportTopOffset = this._toolbarConfig.viewportTopOffset;\n      }\n\n      view.toolbar.fillFromConfig(this._toolbarConfig.items, this.componentFactory);\n      enableToolbarKeyboardFocus({\n        origin: editingView,\n        originFocusTracker: this.focusTracker,\n        originKeystrokeHandler: editor.keystrokes,\n        toolbar: view.toolbar\n      });\n    }\n    /**\n     * Enable the placeholder text on the editing root, if any was configured.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_initPlaceholder\",\n    value: function _initPlaceholder() {\n      var editor = this.editor;\n      var editingView = editor.editing.view;\n      var editingRoot = editingView.document.getRoot();\n      var sourceElement = editor.sourceElement;\n      var placeholderText = editor.config.get('placeholder') || sourceElement && sourceElement.tagName.toLowerCase() === 'textarea' && sourceElement.getAttribute('placeholder');\n\n      if (placeholderText) {\n        enablePlaceholder({\n          view: editingView,\n          element: editingRoot,\n          text: placeholderText,\n          isDirectHost: false\n        });\n      }\n    }\n  }, {\n    key: \"element\",\n    get: function get() {\n      return this.view.element;\n    }\n  }]);\n\n  return ClassicEditorUI;\n}(EditorUI);\n\nexport { ClassicEditorUI as default };","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/toolbar/normalizetoolbarconfig\n */\n\n/**\n * Normalizes the toolbar configuration (`config.toolbar`), which:\n *\n * * may be defined as an `Array`:\n *\n * \t\ttoolbar: [ 'heading', 'bold', 'italic', 'link', ... ]\n *\n * * or an `Object`:\n *\n *\t\ttoolbar: {\n *\t\t\titems: [ 'heading', 'bold', 'italic', 'link', ... ],\n *\t\t\t...\n *\t\t}\n *\n * * or may not be defined at all (`undefined`)\n *\n * and returns it in the object form.\n *\n * @param {Array|Object|undefined} config The value of `config.toolbar`.\n * @returns {Object} A normalized toolbar config object.\n */\nexport default function normalizeToolbarConfig(config) {\n  if (Array.isArray(config)) {\n    return {\n      items: config\n    };\n  }\n\n  if (!config) {\n    return {\n      items: []\n    };\n  }\n\n  return Object.assign({\n    items: []\n  }, config);\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/toolbar/enabletoolbarkeyboardfocus\n */\n\n/**\n * Enables focus/blur toolbar navigation using `Alt+F10` and `Esc` keystrokes.\n *\n * @param {Object} options Options of the utility.\n * @param {*} options.origin A view to which the focus will return when `Esc` is pressed and\n * `options.toolbar` is focused.\n * @param {module:utils/keystrokehandler~KeystrokeHandler} options.originKeystrokeHandler A keystroke\n * handler to register `Alt+F10` keystroke.\n * @param {module:utils/focustracker~FocusTracker} options.originFocusTracker A focus tracker\n * for `options.origin`.\n * @param {module:ui/toolbar/toolbarview~ToolbarView} options.toolbar A toolbar which is to gain\n * focus when `Alt+F10` is pressed.\n * @param {Function} [options.beforeFocus] A callback executed before the `options.toolbar` gains focus\n * upon the `Alt+F10` keystroke.\n * @param {Function} [options.afterBlur] A callback executed after `options.toolbar` loses focus upon\n * `Esc` keystroke but before the focus goes back to `options.origin`.\n */\nexport default function enableToolbarKeyboardFocus(_ref) {\n  var origin = _ref.origin,\n      originKeystrokeHandler = _ref.originKeystrokeHandler,\n      originFocusTracker = _ref.originFocusTracker,\n      toolbar = _ref.toolbar,\n      beforeFocus = _ref.beforeFocus,\n      afterBlur = _ref.afterBlur;\n  // Because toolbar items can get focus, the overall state of the toolbar must\n  // also be tracked.\n  originFocusTracker.add(toolbar.element); // Focus the toolbar on the keystroke, if not already focused.\n\n  originKeystrokeHandler.set('Alt+F10', function (data, cancel) {\n    if (originFocusTracker.isFocused && !toolbar.focusTracker.isFocused) {\n      if (beforeFocus) {\n        beforeFocus();\n      }\n\n      toolbar.focus();\n      cancel();\n    }\n  }); // Blur the toolbar and bring the focus back to origin.\n\n  toolbar.keystrokes.set('Esc', function (data, cancel) {\n    if (toolbar.focusTracker.isFocused) {\n      origin.focus();\n\n      if (afterBlur) {\n        afterBlur();\n      }\n\n      cancel();\n    }\n  });\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/viewcollection\n */\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\n/**\n * Collects {@link module:ui/view~View} instances.\n *\n *\t\tconst parentView = new ParentView( locale );\n *\t\tconst collection = new ViewCollection( locale );\n *\n *\t\tcollection.setParent( parentView.element );\n *\n *\t\tconst viewA = new ChildView( locale );\n *\t\tconst viewB = new ChildView( locale );\n *\n * View collection renders and manages view {@link module:ui/view~View#element elements}:\n *\n *\t\tcollection.add( viewA );\n *\t\tcollection.add( viewB );\n *\n *\t\tconsole.log( parentView.element.firsChild ); // -> viewA.element\n *\t\tconsole.log( parentView.element.lastChild ); // -> viewB.element\n *\n * It {@link module:ui/viewcollection~ViewCollection#delegate propagates} DOM events too:\n *\n *\t\t// Delegate #click and #keydown events from viewA and viewB to the parentView.\n *\t\tcollection.delegate( 'click' ).to( parentView );\n *\n *\t\tparentView.on( 'click', ( evt ) => {\n *\t\t\tconsole.log( `${ evt.source } has been clicked.` );\n *\t\t} );\n *\n *\t\t// This event will be delegated to the parentView.\n *\t\tviewB.fire( 'click' );\n *\n * **Note**: A view collection can be used directly in the {@link module:ui/template~TemplateDefinition definition}\n * of a {@link module:ui/template~Template template}.\n *\n * @extends module:utils/collection~Collection\n * @mixes module:utils/observablemixin~ObservableMixin\n */\n\nvar ViewCollection =\n/*#__PURE__*/\nfunction (_Collection) {\n  _inherits(ViewCollection, _Collection);\n\n  /**\n   * Creates a new instance of the {@link module:ui/viewcollection~ViewCollection}.\n   *\n   * @param {module:utils/locale~Locale} [locale] The {@link module:core/editor/editor~Editor editor's locale} instance.\n   */\n  function ViewCollection(locale) {\n    var _this;\n\n    _classCallCheck(this, ViewCollection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ViewCollection).call(this, {\n      // An #id Number attribute should be legal and not break the `ViewCollection` instance.\n      // https://github.com/ckeditor/ckeditor5-ui/issues/93\n      idProperty: 'viewUid'\n    })); // Handle {@link module:ui/view~View#element} in DOM when a new view is added to the collection.\n\n    _this.on('add', function (evt, view, index) {\n      if (!view.isRendered) {\n        view.render();\n      }\n\n      if (view.element && _this._parentElement) {\n        _this._parentElement.insertBefore(view.element, _this._parentElement.children[index]);\n      }\n    }); // Handle {@link module:ui/view~View#element} in DOM when a view is removed from the collection.\n\n\n    _this.on('remove', function (evt, view) {\n      if (view.element && _this._parentElement) {\n        view.element.remove();\n      }\n    });\n    /**\n     * The {@link module:core/editor/editor~Editor#locale editor's locale} instance.\n     * See the view {@link module:ui/view~View#locale locale} property.\n     *\n     * @member {module:utils/locale~Locale}\n     */\n\n\n    _this.locale = locale;\n    /**\n     * A parent element within which child views are rendered and managed in DOM.\n     *\n     * @protected\n     * @member {HTMLElement}\n     */\n\n    _this._parentElement = null;\n    return _this;\n  }\n  /**\n   * Destroys the view collection along with child views.\n   * See the view {@link module:ui/view~View#destroy} method.\n   */\n\n\n  _createClass(ViewCollection, [{\n    key: \"destroy\",\n    value: function destroy() {\n      this.map(function (view) {\n        return view.destroy();\n      });\n    }\n    /**\n     * Sets the parent HTML element of this collection. When parent is set, {@link #add adding} and\n     * {@link #remove removing} views in the collection synchronizes their\n     * {@link module:ui/view~View#element elements} in the parent element.\n     *\n     * @param {HTMLElement} element A new parent element.\n     */\n\n  }, {\n    key: \"setParent\",\n    value: function setParent(elementOrDocFragment) {\n      this._parentElement = elementOrDocFragment;\n    }\n    /**\n     * Delegates selected events coming from within views in the collection to any\n     * {@link module:utils/emittermixin~Emitter}.\n     *\n     * For the following views and collection:\n     *\n     *\t\tconst viewA = new View();\n     *\t\tconst viewB = new View();\n     *\t\tconst viewC = new View();\n     *\n     *\t\tconst views = parentView.createCollection();\n     *\n     *\t\tviews.delegate( 'eventX' ).to( viewB );\n     *\t\tviews.delegate( 'eventX', 'eventY' ).to( viewC );\n     *\n     *\t\tviews.add( viewA );\n     *\n     * the `eventX` is delegated (fired by) `viewB` and `viewC` along with `customData`:\n     *\n     *\t\tviewA.fire( 'eventX', customData );\n     *\n     * and `eventY` is delegated (fired by) `viewC` along with `customData`:\n     *\n     *\t\tviewA.fire( 'eventY', customData );\n     *\n     * See {@link module:utils/emittermixin~EmitterMixin#delegate}.\n     *\n     * @param {...String} events {@link module:ui/view~View} event names to be delegated to another\n     * {@link module:utils/emittermixin~Emitter}.\n     * @returns {Object}\n     * @returns {Function} return.to A function which accepts the destination of\n     * {@link module:utils/emittermixin~EmitterMixin#delegate delegated} events.\n     */\n\n  }, {\n    key: \"delegate\",\n    value: function delegate() {\n      var _this2 = this;\n\n      for (var _len = arguments.length, events = new Array(_len), _key = 0; _key < _len; _key++) {\n        events[_key] = arguments[_key];\n      }\n\n      if (!events.length || !isStringArray(events)) {\n        /**\n         * All event names must be strings.\n         *\n         * @error ui-viewcollection-delegate-wrong-events\n         */\n        throw new CKEditorError('ui-viewcollection-delegate-wrong-events: All event names must be strings.', this);\n      }\n\n      return {\n        /**\n         * Selects destination for {@link module:utils/emittermixin~EmitterMixin#delegate} events.\n         *\n         * @memberOf module:ui/viewcollection~ViewCollection#delegate\n         * @function module:ui/viewcollection~ViewCollection#delegate.to\n         * @param {module:utils/emittermixin~EmitterMixin} dest An `EmitterMixin` instance which is\n         * the destination for delegated events.\n         */\n        to: function to(dest) {\n          // Activate delegating on existing views in this collection.\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = _this2[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var view = _step.value;\n\n              for (var _i3 = 0, _events3 = events; _i3 < _events3.length; _i3++) {\n                var evtName = _events3[_i3];\n                view.delegate(evtName).to(dest);\n              }\n            } // Activate delegating on future views in this collection.\n\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n                _iterator[\"return\"]();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          _this2.on('add', function (evt, view) {\n            for (var _i = 0, _events = events; _i < _events.length; _i++) {\n              var evtName = _events[_i];\n              view.delegate(evtName).to(dest);\n            }\n          }); // Deactivate delegating when view is removed from this collection.\n\n\n          _this2.on('remove', function (evt, view) {\n            for (var _i2 = 0, _events2 = events; _i2 < _events2.length; _i2++) {\n              var evtName = _events2[_i2];\n              view.stopDelegating(evtName, dest);\n            }\n          });\n        }\n      };\n    }\n    /**\n     * Removes a child view from the collection. If the {@link #setParent parent element} of the\n     * collection has been set, the {@link module:ui/view~View#element element} of the view is also removed\n     * in DOM, reflecting the order of the collection.\n     *\n     * See the {@link #add} method.\n     *\n     * @method #remove\n     * @param {module:ui/view~View|Number|String} subject The view to remove, its id or index in the collection.\n     * @returns {Object} The removed view.\n     */\n\n  }]);\n\n  return ViewCollection;\n}(Collection); // Check if all entries of the array are of `String` type.\n//\n// @private\n// @param {Array} arr An array to be checked.\n// @returns {Boolean}\n\n\nexport { ViewCollection as default };\n\nfunction isStringArray(arr) {\n  return arr.every(function (a) {\n    return typeof a == 'string';\n  });\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/template\n */\n\n/* global document */\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport View from './view';\nimport ViewCollection from './viewcollection';\nimport isNode from '@ckeditor/ckeditor5-utils/src/dom/isnode';\nimport log from '@ckeditor/ckeditor5-utils/src/log';\nimport { isObject, cloneDeepWith } from 'lodash-es';\nvar xhtmlNs = 'http://www.w3.org/1999/xhtml';\n/**\n * A basic Template class. It renders a DOM HTML element or text from a\n * {@link module:ui/template~TemplateDefinition definition} and supports element attributes, children,\n * bindings to {@link module:utils/observablemixin~Observable observables} and DOM event propagation.\n *\n * A simple template can look like this:\n *\n *\t\tconst bind = Template.bind( observable, emitter );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\t\t\tattributes: {\n *\t\t\t\tclass: 'foo',\n *\t\t\t\tstyle: {\n *\t\t\t\t\tbackgroundColor: 'yellow'\n *\t\t\t\t}\n *\t\t\t},\n *\t\t\ton: {\n *\t\t\t\tclick: bind.to( 'clicked' )\n *\t\t\t}\n *\t\t\tchildren: [\n *\t\t\t\t'A paragraph.'\n *\t\t\t]\n *\t\t} ).render();\n *\n * and it will render the following HTML element:\n *\n *\t\t<p class=\"foo\" style=\"background-color: yellow;\">A paragraph.</p>\n *\n * Additionally, the `observable` will always fire `clicked` upon clicking `<p>` in the DOM.\n *\n * See {@link module:ui/template~TemplateDefinition} to know more about templates and complex\n * template definitions.\n *\n* @mixes module:utils/emittermixin~EmitterMixin\n */\n\nvar Template =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of the {@link ~Template} class.\n   *\n   * @param {module:ui/template~TemplateDefinition} def The definition of the template.\n   */\n  function Template(def) {\n    _classCallCheck(this, Template);\n\n    Object.assign(this, normalize(clone(def)));\n    /**\n     * Indicates whether this particular Template instance has been\n     * {@link #render rendered}.\n     *\n     * @readonly\n     * @protected\n     * @member {Boolean}\n     */\n\n    this._isRendered = false;\n    /**\n     * The tag (`tagName`) of this template, e.g. `div`. It also indicates that the template\n     * renders to an HTML element.\n     *\n     * @member {String} #tag\n     */\n\n    /**\n     * The text of the template. It also indicates that the template renders to a DOM text node.\n     *\n     * @member {Array.<String|module:ui/template~TemplateValueSchema>} #text\n     */\n\n    /**\n     * The attributes of the template, e.g. `{ id: [ 'ck-id' ] }`, corresponding with\n     * the attributes of an HTML element.\n     *\n     * **Note**: This property only makes sense when {@link #tag} is defined.\n     *\n     * @member {Object} #attributes\n     */\n\n    /**\n     * The children of the template. They can be either:\n     * * independent instances of {@link ~Template} (sub–templates),\n     * * native DOM Nodes.\n     *\n     * **Note**: This property only makes sense when {@link #tag} is defined.\n     *\n     * @member {Array.<module:ui/template~Template|Node>} #children\n     */\n\n    /**\n     * The DOM event listeners of the template.\n     *\n     * @member {Object} #eventListeners\n     */\n\n    /**\n     * The data used by the {@link #revert} method to restore a node to its original state.\n     *\n     * See: {@link #apply}.\n     *\n     * @readonly\n     * @protected\n     * @member {module:ui/template~RenderData}\n     */\n\n    this._revertData = null;\n  }\n  /**\n   * Renders a DOM Node (an HTML element or text) out of the template.\n   *\n   *\t\tconst domNode = new Template( { ... } ).render();\n   *\n   * See: {@link #apply}.\n   *\n   * @returns {HTMLElement|Text}\n   */\n\n\n  _createClass(Template, [{\n    key: \"render\",\n    value: function render() {\n      var node = this._renderNode({\n        intoFragment: true\n      });\n\n      this._isRendered = true;\n      return node;\n    }\n    /**\n     * Applies the template to an existing DOM Node, either HTML element or text.\n     *\n     * **Note:** No new DOM nodes will be created. Applying extends:\n     *\n     * {@link module:ui/template~TemplateDefinition attributes},\n     * {@link module:ui/template~TemplateDefinition event listeners}, and\n     * `textContent` of {@link module:ui/template~TemplateDefinition children} only.\n     *\n     * **Note:** Existing `class` and `style` attributes are extended when a template\n     * is applied to an HTML element, while other attributes and `textContent` are overridden.\n     *\n     * **Note:** The process of applying a template can be easily reverted using the\n     * {@link module:ui/template~Template#revert} method.\n     *\n     *\t\tconst element = document.createElement( 'div' );\n     *\t\tconst observable = new Model( { divClass: 'my-div' } );\n     *\t\tconst emitter = Object.create( EmitterMixin );\n     *\t\tconst bind = Template.bind( observable, emitter );\n     *\n     *\t\tnew Template( {\n     *\t\t\tattributes: {\n     *\t\t\t\tid: 'first-div',\n     *\t\t\t\tclass: bind.to( 'divClass' )\n     *\t\t\t},\n     *\t\t\ton: {\n     *\t\t\t\tclick: bind( 'elementClicked' ) // Will be fired by the observable.\n     *\t\t\t},\n     *\t\t\tchildren: [\n     *\t\t\t\t'Div text.'\n     *\t\t\t]\n     *\t\t} ).apply( element );\n     *\n     *\t\tconsole.log( element.outerHTML ); // -> '<div id=\"first-div\" class=\"my-div\"></div>'\n     *\n     * @see module:ui/template~Template#render\n     * @see module:ui/template~Template#revert\n     * @param {Node} node Root node for the template to apply.\n     */\n\n  }, {\n    key: \"apply\",\n    value: function apply(node) {\n      this._revertData = getEmptyRevertData();\n\n      this._renderNode({\n        node: node,\n        isApplying: true,\n        revertData: this._revertData\n      });\n\n      return node;\n    }\n    /**\n     * Reverts a template {@link module:ui/template~Template#apply applied} to a DOM node.\n     *\n     * @param {Node} node The root node for the template to revert. In most of the cases, it is the\n     * same node used by {@link module:ui/template~Template#apply}.\n     */\n\n  }, {\n    key: \"revert\",\n    value: function revert(node) {\n      if (!this._revertData) {\n        /**\n         * Attempting to revert a template which has not been applied yet.\n         *\n         * @error ui-template-revert-not-applied\n         */\n        throw new CKEditorError('ui-template-revert-not-applied: Attempting to revert a template which has not been applied yet.', [this, node]);\n      }\n\n      this._revertTemplateFromNode(node, this._revertData);\n    }\n    /**\n     * Returns an iterator which traverses the template in search of {@link module:ui/view~View}\n     * instances and returns them one by one.\n     *\n     *\t\tconst viewFoo = new View();\n     *\t\tconst viewBar = new View();\n     *\t\tconst viewBaz = new View();\n     *\t\tconst template = new Template( {\n     *\t\t\ttag: 'div',\n     *\t\t\tchildren: [\n     *\t\t\t\tviewFoo,\n     *\t\t\t\t{\n     *\t\t\t\t\ttag: 'div',\n     *\t\t\t\t\tchildren: [\n     *\t\t\t\t\t\tviewBar\n     *\t\t\t\t\t]\n     *\t\t\t\t},\n     *\t\t\t\tviewBaz\n     *\t\t\t]\n     *\t\t} );\n     *\n     *\t\t// Logs: viewFoo, viewBar, viewBaz\n     *\t\tfor ( const view of template.getViews() ) {\n     *\t\t\tconsole.log( view );\n     *\t\t}\n     *\n     * @returns {Iterable.<module:ui/view~View>}\n     */\n\n  }, {\n    key: \"getViews\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function getViews() {\n      var _marked, search;\n\n      return regeneratorRuntime.wrap(function getViews$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              search = function _ref(def) {\n                var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, child;\n\n                return regeneratorRuntime.wrap(function search$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        if (!def.children) {\n                          _context.next = 32;\n                          break;\n                        }\n\n                        _iteratorNormalCompletion = true;\n                        _didIteratorError = false;\n                        _iteratorError = undefined;\n                        _context.prev = 4;\n                        _iterator = def.children[Symbol.iterator]();\n\n                      case 6:\n                        if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                          _context.next = 18;\n                          break;\n                        }\n\n                        child = _step.value;\n\n                        if (!isView(child)) {\n                          _context.next = 13;\n                          break;\n                        }\n\n                        _context.next = 11;\n                        return child;\n\n                      case 11:\n                        _context.next = 15;\n                        break;\n\n                      case 13:\n                        if (!isTemplate(child)) {\n                          _context.next = 15;\n                          break;\n                        }\n\n                        return _context.delegateYield(search(child), \"t0\", 15);\n\n                      case 15:\n                        _iteratorNormalCompletion = true;\n                        _context.next = 6;\n                        break;\n\n                      case 18:\n                        _context.next = 24;\n                        break;\n\n                      case 20:\n                        _context.prev = 20;\n                        _context.t1 = _context[\"catch\"](4);\n                        _didIteratorError = true;\n                        _iteratorError = _context.t1;\n\n                      case 24:\n                        _context.prev = 24;\n                        _context.prev = 25;\n\n                        if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n                          _iterator[\"return\"]();\n                        }\n\n                      case 27:\n                        _context.prev = 27;\n\n                        if (!_didIteratorError) {\n                          _context.next = 30;\n                          break;\n                        }\n\n                        throw _iteratorError;\n\n                      case 30:\n                        return _context.finish(27);\n\n                      case 31:\n                        return _context.finish(24);\n\n                      case 32:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _marked, null, [[4, 20, 24, 32], [25,, 27, 31]]);\n              };\n\n              _marked =\n              /*#__PURE__*/\n              regeneratorRuntime.mark(search);\n              return _context2.delegateYield(search(this), \"t0\", 3);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, getViews, this);\n    })\n    /**\n     * An entry point to the interface which binds DOM nodes to\n     * {@link module:utils/observablemixin~Observable observables}.\n     * There are two types of bindings:\n     *\n     * * HTML element attributes or text `textContent` synchronized with attributes of an\n     * {@link module:utils/observablemixin~Observable}. Learn more about {@link module:ui/template~BindChain#to}\n     * and {@link module:ui/template~BindChain#if}.\n     *\n     *\t\tconst bind = Template.bind( observable, emitter );\n     *\n     *\t\tnew Template( {\n     *\t\t\tattributes: {\n     *\t\t\t\t// Binds the element \"class\" attribute to observable#classAttribute.\n     *\t\t\t\tclass: bind.to( 'classAttribute' )\n     *\t\t\t}\n     *\t\t} ).render();\n     *\n     * * DOM events fired on HTML element propagated through\n     * {@link module:utils/observablemixin~Observable}. Learn more about {@link module:ui/template~BindChain#to}.\n     *\n     *\t\tconst bind = Template.bind( observable, emitter );\n     *\n     *\t\tnew Template( {\n     *\t\t\ton: {\n     *\t\t\t\t// Will be fired by the observable.\n     *\t\t\t\tclick: bind( 'elementClicked' )\n     *\t\t\t}\n     *\t\t} ).render();\n     *\n     * Also see {@link module:ui/view~View#bindTemplate}.\n     *\n     * @param {module:utils/observablemixin~Observable} observable An observable which provides boundable attributes.\n     * @param {module:utils/emittermixin~Emitter} emitter An emitter that listens to observable attribute\n     * changes or DOM Events (depending on the kind of the binding). Usually, a {@link module:ui/view~View} instance.\n     * @returns {module:ui/template~BindChain}\n     */\n\n  }, {\n    key: \"_renderNode\",\n\n    /**\n     * Renders a DOM Node (either an HTML element or text) out of the template.\n     *\n     * @protected\n     * @param {module:ui/template~RenderData} data Rendering data.\n     */\n    value: function _renderNode(data) {\n      var isInvalid;\n\n      if (data.node) {\n        // When applying, a definition cannot have \"tag\" and \"text\" at the same time.\n        isInvalid = this.tag && this.text;\n      } else {\n        // When rendering, a definition must have either \"tag\" or \"text\": XOR( this.tag, this.text ).\n        isInvalid = this.tag ? this.text : !this.text;\n      }\n\n      if (isInvalid) {\n        /**\n         * Node definition cannot have the \"tag\" and \"text\" properties at the same time.\n         * Node definition must have either \"tag\" or \"text\" when rendering a new Node.\n         *\n         * @error ui-template-wrong-syntax\n         */\n        throw new CKEditorError('ui-template-wrong-syntax: Node definition must have either \"tag\" or \"text\" when rendering a new Node.', this);\n      }\n\n      if (this.text) {\n        return this._renderText(data);\n      } else {\n        return this._renderElement(data);\n      }\n    }\n    /**\n     * Renders an HTML element out of the template.\n     *\n     * @protected\n     * @param {module:ui/template~RenderData} data Rendering data.\n     */\n\n  }, {\n    key: \"_renderElement\",\n    value: function _renderElement(data) {\n      var node = data.node;\n\n      if (!node) {\n        node = data.node = document.createElementNS(this.ns || xhtmlNs, this.tag);\n      }\n\n      this._renderAttributes(data);\n\n      this._renderElementChildren(data);\n\n      this._setUpListeners(data);\n\n      return node;\n    }\n    /**\n     * Renders a text node out of {@link module:ui/template~Template#text}.\n     *\n     * @protected\n     * @param {module:ui/template~RenderData} data Rendering data.\n     */\n\n  }, {\n    key: \"_renderText\",\n    value: function _renderText(data) {\n      var node = data.node; // Save the original textContent to revert it in #revert().\n\n      if (node) {\n        data.revertData.text = node.textContent;\n      } else {\n        node = data.node = document.createTextNode('');\n      } // Check if this Text Node is bound to Observable. Cases:\n      //\n      //\t\ttext: [ Template.bind( ... ).to( ... ) ]\n      //\n      //\t\ttext: [\n      //\t\t\t'foo',\n      //\t\t\tTemplate.bind( ... ).to( ... ),\n      //\t\t\t...\n      //\t\t]\n      //\n\n\n      if (hasTemplateBinding(this.text)) {\n        this._bindToObservable({\n          schema: this.text,\n          updater: getTextUpdater(node),\n          data: data\n        });\n      } // Simply set text. Cases:\n      //\n      //\t\ttext: [ 'all', 'are', 'static' ]\n      //\n      //\t\ttext: [ 'foo' ]\n      //\n      else {\n          node.textContent = this.text.join('');\n        }\n\n      return node;\n    }\n    /**\n     * Renders HTML element attributes out of {@link module:ui/template~Template#attributes}.\n     *\n     * @protected\n     * @param {module:ui/template~RenderData} data Rendering data.\n     */\n\n  }, {\n    key: \"_renderAttributes\",\n    value: function _renderAttributes(data) {\n      var attrName, attrValue, domAttrValue, attrNs;\n\n      if (!this.attributes) {\n        return;\n      }\n\n      var node = data.node;\n      var revertData = data.revertData;\n\n      for (attrName in this.attributes) {\n        // Current attribute value in DOM.\n        domAttrValue = node.getAttribute(attrName); // The value to be set.\n\n        attrValue = this.attributes[attrName]; // Save revert data.\n\n        if (revertData) {\n          revertData.attributes[attrName] = domAttrValue;\n        } // Detect custom namespace:\n        //\n        //\t\tclass: {\n        //\t\t\tns: 'abc',\n        //\t\t\tvalue: Template.bind( ... ).to( ... )\n        //\t\t}\n        //\n\n\n        attrNs = isObject(attrValue[0]) && attrValue[0].ns ? attrValue[0].ns : null; // Activate binding if one is found. Cases:\n        //\n        //\t\tclass: [\n        //\t\t\tTemplate.bind( ... ).to( ... )\n        //\t\t]\n        //\n        //\t\tclass: [\n        //\t\t\t'bar',\n        //\t\t\tTemplate.bind( ... ).to( ... ),\n        //\t\t\t'baz'\n        //\t\t]\n        //\n        //\t\tclass: {\n        //\t\t\tns: 'abc',\n        //\t\t\tvalue: Template.bind( ... ).to( ... )\n        //\t\t}\n        //\n\n        if (hasTemplateBinding(attrValue)) {\n          // Normalize attributes with additional data like namespace:\n          //\n          //\t\tclass: {\n          //\t\t\tns: 'abc',\n          //\t\t\tvalue: [ ... ]\n          //\t\t}\n          //\n          var valueToBind = attrNs ? attrValue[0].value : attrValue; // Extend the original value of attributes like \"style\" and \"class\",\n          // don't override them.\n\n          if (revertData && shouldExtend(attrName)) {\n            valueToBind.unshift(domAttrValue);\n          }\n\n          this._bindToObservable({\n            schema: valueToBind,\n            updater: getAttributeUpdater(node, attrName, attrNs),\n            data: data\n          });\n        } // Style attribute could be an Object so it needs to be parsed in a specific way.\n        //\n        //\t\tstyle: {\n        //\t\t\twidth: '100px',\n        //\t\t\theight: Template.bind( ... ).to( ... )\n        //\t\t}\n        //\n        else if (attrName == 'style' && typeof attrValue[0] !== 'string') {\n            this._renderStyleAttribute(attrValue[0], data);\n          } // Otherwise simply set the static attribute:\n          //\n          //\t\tclass: [ 'foo' ]\n          //\n          //\t\tclass: [ 'all', 'are', 'static' ]\n          //\n          //\t\tclass: [\n          //\t\t\t{\n          //\t\t\t\tns: 'abc',\n          //\t\t\t\tvalue: [ 'foo' ]\n          //\t\t\t}\n          //\t\t]\n          //\n          else {\n              // Extend the original value of attributes like \"style\" and \"class\",\n              // don't override them.\n              if (revertData && domAttrValue && shouldExtend(attrName)) {\n                attrValue.unshift(domAttrValue);\n              }\n\n              attrValue = attrValue // Retrieve \"values\" from:\n              //\n              //\t\tclass: [\n              //\t\t\t{\n              //\t\t\t\tns: 'abc',\n              //\t\t\t\tvalue: [ ... ]\n              //\t\t\t}\n              //\t\t]\n              //\n              .map(function (val) {\n                return val ? val.value || val : val;\n              }) // Flatten the array.\n              .reduce(function (prev, next) {\n                return prev.concat(next);\n              }, []) // Convert into string.\n              .reduce(arrayValueReducer, '');\n\n              if (!isFalsy(attrValue)) {\n                node.setAttributeNS(attrNs, attrName, attrValue);\n              }\n            }\n      }\n    }\n    /**\n     * Renders the `style` attribute of an HTML element based on\n     * {@link module:ui/template~Template#attributes}.\n     *\n     * A style attribute is an {Object} with static values:\n     *\n     *\t\tattributes: {\n     *\t\t\tstyle: {\n     *\t\t\t\tcolor: 'red'\n     *\t\t\t}\n     *\t\t}\n     *\n     * or values bound to {@link module:ui/model~Model} properties:\n     *\n     *\t\tattributes: {\n     *\t\t\tstyle: {\n     *\t\t\t\tcolor: bind.to( ... )\n     *\t\t\t}\n     *\t\t}\n     *\n     * Note: The `style` attribute is rendered without setting the namespace. It does not seem to be\n     * needed.\n     *\n     * @private\n     * @param {Object} styles Styles located in `attributes.style` of {@link module:ui/template~TemplateDefinition}.\n     * @param {module:ui/template~RenderData} data Rendering data.\n     */\n\n  }, {\n    key: \"_renderStyleAttribute\",\n    value: function _renderStyleAttribute(styles, data) {\n      var node = data.node;\n\n      for (var styleName in styles) {\n        var styleValue = styles[styleName]; // Cases:\n        //\n        //\t\tstyle: {\n        //\t\t\tcolor: bind.to( 'attribute' )\n        //\t\t}\n        //\n\n        if (hasTemplateBinding(styleValue)) {\n          this._bindToObservable({\n            schema: [styleValue],\n            updater: getStyleUpdater(node, styleName),\n            data: data\n          });\n        } // Cases:\n        //\n        //\t\tstyle: {\n        //\t\t\tcolor: 'red'\n        //\t\t}\n        //\n        else {\n            node.style[styleName] = styleValue;\n          }\n      }\n    }\n    /**\n     * Recursively renders HTML element's children from {@link module:ui/template~Template#children}.\n     *\n     * @protected\n     * @param {module:ui/template~RenderData} data Rendering data.\n     */\n\n  }, {\n    key: \"_renderElementChildren\",\n    value: function _renderElementChildren(data) {\n      var node = data.node;\n      var container = data.intoFragment ? document.createDocumentFragment() : node;\n      var isApplying = data.isApplying;\n      var childIndex = 0;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.children[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var child = _step2.value;\n\n          if (isViewCollection(child)) {\n            if (!isApplying) {\n              child.setParent(node); // Note: ViewCollection renders its children.\n\n              var _iteratorNormalCompletion3 = true;\n              var _didIteratorError3 = false;\n              var _iteratorError3 = undefined;\n\n              try {\n                for (var _iterator3 = child[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                  var view = _step3.value;\n                  container.appendChild(view.element);\n                }\n              } catch (err) {\n                _didIteratorError3 = true;\n                _iteratorError3 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n                    _iterator3[\"return\"]();\n                  }\n                } finally {\n                  if (_didIteratorError3) {\n                    throw _iteratorError3;\n                  }\n                }\n              }\n            }\n          } else if (isView(child)) {\n            if (!isApplying) {\n              if (!child.isRendered) {\n                child.render();\n              }\n\n              container.appendChild(child.element);\n            }\n          } else if (isNode(child)) {\n            container.appendChild(child);\n          } else {\n            if (isApplying) {\n              var revertData = data.revertData;\n              var childRevertData = getEmptyRevertData();\n              revertData.children.push(childRevertData);\n\n              child._renderNode({\n                node: container.childNodes[childIndex++],\n                isApplying: true,\n                revertData: childRevertData\n              });\n            } else {\n              container.appendChild(child.render());\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      if (data.intoFragment) {\n        node.appendChild(container);\n      }\n    }\n    /**\n     * Activates `on` event listeners from the {@link module:ui/template~TemplateDefinition}\n     * on an HTML element.\n     *\n     * @protected\n     * @param {module:ui/template~RenderData} data Rendering data.\n     */\n\n  }, {\n    key: \"_setUpListeners\",\n    value: function _setUpListeners(data) {\n      var _this = this;\n\n      if (!this.eventListeners) {\n        return;\n      }\n\n      var _loop = function _loop(key) {\n        var revertBindings = _this.eventListeners[key].map(function (schemaItem) {\n          var _key$split = key.split('@'),\n              _key$split2 = _slicedToArray(_key$split, 2),\n              domEvtName = _key$split2[0],\n              domSelector = _key$split2[1];\n\n          return schemaItem.activateDomEventListener(domEvtName, domSelector, data);\n        });\n\n        if (data.revertData) {\n          data.revertData.bindings.push(revertBindings);\n        }\n      };\n\n      for (var key in this.eventListeners) {\n        _loop(key);\n      }\n    }\n    /**\n     * For a given {@link module:ui/template~TemplateValueSchema} containing {@link module:ui/template~TemplateBinding}\n     * activates the binding and sets its initial value.\n     *\n     * Note: {@link module:ui/template~TemplateValueSchema} can be for HTML element attributes or\n     * text node `textContent`.\n     *\n     * @protected\n     * @param {Object} options Binding options.\n     * @param {module:ui/template~TemplateValueSchema} options.schema\n     * @param {Function} options.updater A function which updates the DOM (like attribute or text).\n     * @param {module:ui/template~RenderData} options.data Rendering data.\n     */\n\n  }, {\n    key: \"_bindToObservable\",\n    value: function _bindToObservable(_ref2) {\n      var schema = _ref2.schema,\n          updater = _ref2.updater,\n          data = _ref2.data;\n      var revertData = data.revertData; // Set initial values.\n\n      syncValueSchemaValue(schema, updater, data);\n      var revertBindings = schema // Filter \"falsy\" (false, undefined, null, '') value schema components out.\n      .filter(function (item) {\n        return !isFalsy(item);\n      }) // Filter inactive bindings from schema, like static strings ('foo'), numbers (42), etc.\n      .filter(function (item) {\n        return item.observable;\n      }) // Once only the actual binding are left, let the emitter listen to observable change:attribute event.\n      // TODO: Reduce the number of listeners attached as many bindings may listen\n      // to the same observable attribute.\n      .map(function (templateBinding) {\n        return templateBinding.activateAttributeListener(schema, updater, data);\n      });\n\n      if (revertData) {\n        revertData.bindings.push(revertBindings);\n      }\n    }\n    /**\n     * Reverts {@link module:ui/template~RenderData#revertData template data} from a node to\n     * return it to the original state.\n     *\n     * @protected\n     * @param {HTMLElement|Text} node A node to be reverted.\n     * @param {module:ui/template~RenderData#revertData} revertData Stores information about\n     * what changes have been made by {@link #apply} to the node.\n     */\n\n  }, {\n    key: \"_revertTemplateFromNode\",\n    value: function _revertTemplateFromNode(node, revertData) {\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = revertData.bindings[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var binding = _step4.value;\n          // Each binding may consist of several observable+observable#attribute.\n          // like the following has 2:\n          //\n          //\t\tclass: [\n          //\t\t\t'x',\n          //\t\t\tbind.to( 'foo' ),\n          //\t\t\t'y',\n          //\t\t\tbind.to( 'bar' )\n          //\t\t]\n          //\n          var _iteratorNormalCompletion5 = true;\n          var _didIteratorError5 = false;\n          var _iteratorError5 = undefined;\n\n          try {\n            for (var _iterator5 = binding[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n              var revertBinding = _step5.value;\n              revertBinding();\n            }\n          } catch (err) {\n            _didIteratorError5 = true;\n            _iteratorError5 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion5 && _iterator5[\"return\"] != null) {\n                _iterator5[\"return\"]();\n              }\n            } finally {\n              if (_didIteratorError5) {\n                throw _iteratorError5;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4[\"return\"] != null) {\n            _iterator4[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      if (revertData.text) {\n        node.textContent = revertData.text;\n        return;\n      }\n\n      for (var attrName in revertData.attributes) {\n        var attrValue = revertData.attributes[attrName]; // When the attribute has **not** been set before #apply().\n\n        if (attrValue === null) {\n          node.removeAttribute(attrName);\n        } else {\n          node.setAttribute(attrName, attrValue);\n        }\n      }\n\n      for (var i = 0; i < revertData.children.length; ++i) {\n        this._revertTemplateFromNode(node.childNodes[i], revertData.children[i]);\n      }\n    }\n  }], [{\n    key: \"bind\",\n    value: function bind(observable, emitter) {\n      return {\n        to: function to(eventNameOrFunctionOrAttribute, callback) {\n          return new TemplateToBinding({\n            eventNameOrFunction: eventNameOrFunctionOrAttribute,\n            attribute: eventNameOrFunctionOrAttribute,\n            observable: observable,\n            emitter: emitter,\n            callback: callback\n          });\n        },\n        \"if\": function _if(attribute, valueIfTrue, callback) {\n          return new TemplateIfBinding({\n            observable: observable,\n            emitter: emitter,\n            attribute: attribute,\n            valueIfTrue: valueIfTrue,\n            callback: callback\n          });\n        }\n      };\n    }\n    /**\n     * Extends an existing {@link module:ui/template~Template} instance with some additional content\n     * from another {@link module:ui/template~TemplateDefinition}.\n     *\n     *\t\tconst bind = Template.bind( observable, emitter );\n     *\n     *\t\tconst template = new Template( {\n     *\t\t\ttag: 'p',\n     *\t\t\tattributes: {\n     *\t\t\t\tclass: 'a',\n     *\t\t\t\tdata-x: bind.to( 'foo' )\n     *\t\t\t},\n     *\t\t\tchildren: [\n     *\t\t\t\t{\n     *\t\t\t\t\ttag: 'span',\n     *\t\t\t\t\tattributes: {\n     *\t\t\t\t\t\tclass: 'b'\n     *\t\t\t\t\t},\n     *\t\t\t\t\tchildren: [\n     *\t\t\t\t\t\t'Span'\n     *\t\t\t\t\t]\n     *\t\t\t\t}\n     *\t\t\t]\n     *\t\t } );\n     *\n     *\t\t// Instance-level extension.\n     *\t\tTemplate.extend( template, {\n     *\t\t\tattributes: {\n     *\t\t\t\tclass: 'b',\n     *\t\t\t\tdata-x: bind.to( 'bar' )\n     *\t\t\t},\n     *\t\t\tchildren: [\n     *\t\t\t\t{\n     *\t\t\t\t\tattributes: {\n     *\t\t\t\t\t\tclass: 'c'\n     *\t\t\t\t\t}\n     *\t\t\t\t}\n     *\t\t\t]\n     *\t\t} );\n     *\n     *\t\t// Child extension.\n     *\t\tTemplate.extend( template.children[ 0 ], {\n     *\t\t\tattributes: {\n     *\t\t\t\tclass: 'd'\n     *\t\t\t}\n     *\t\t} );\n     *\n     * the `outerHTML` of `template.render()` is:\n     *\n     *\t\t<p class=\"a b\" data-x=\"{ observable.foo } { observable.bar }\">\n     *\t\t\t<span class=\"b c d\">Span</span>\n     *\t\t</p>\n     *\n     * @param {module:ui/template~Template} template An existing template instance to be extended.\n     * @param {module:ui/template~TemplateDefinition} def Additional definition to be applied to a template.\n     */\n\n  }, {\n    key: \"extend\",\n    value: function extend(template, def) {\n      if (template._isRendered) {\n        /**\n         * Extending a template after rendering may not work as expected. To make sure\n         * the {@link module:ui/template~Template.extend extending} works for an element,\n         * make sure it happens before {@link #render} is called.\n         *\n         * @error template-extend-render\n         */\n        log.warn('template-extend-render: Attempting to extend a template which has already been rendered.');\n      }\n\n      extendTemplate(template, normalize(clone(def)));\n    }\n  }]);\n\n  return Template;\n}();\n\nexport { Template as default };\nmix(Template, EmitterMixin);\n/**\n * Describes a binding created by the {@link module:ui/template~Template.bind} interface.\n *\n * @protected\n */\n\nexport var TemplateBinding =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of the {@link module:ui/template~TemplateBinding} class.\n   *\n   * @param {module:ui/template~TemplateDefinition} def The definition of the binding.\n   */\n  function TemplateBinding(def) {\n    _classCallCheck(this, TemplateBinding);\n\n    Object.assign(this, def);\n    /**\n     * An observable instance of the binding. It either:\n     *\n     * * provides the attribute with the value,\n     * * or passes the event when a corresponding DOM event is fired.\n     *\n     * @member {module:utils/observablemixin~ObservableMixin} module:ui/template~TemplateBinding#observable\n     */\n\n    /**\n     * An {@link module:utils/emittermixin~Emitter} used by the binding to:\n     *\n     * * listen to the attribute change in the {@link module:ui/template~TemplateBinding#observable},\n     * * or listen to the event in the DOM.\n     *\n     * @member {module:utils/emittermixin~EmitterMixin} module:ui/template~TemplateBinding#emitter\n     */\n\n    /**\n     * The name of the {@link module:ui/template~TemplateBinding#observable observed attribute}.\n     *\n     * @member {String} module:ui/template~TemplateBinding#attribute\n     */\n\n    /**\n     * A custom function to process the value of the {@link module:ui/template~TemplateBinding#attribute}.\n     *\n     * @member {Function} [module:ui/template~TemplateBinding#callback]\n     */\n  }\n  /**\n   * Returns the value of the binding. It is the value of the {@link module:ui/template~TemplateBinding#attribute} in\n   * {@link module:ui/template~TemplateBinding#observable}. The value may be processed by the\n   * {@link module:ui/template~TemplateBinding#callback}, if such has been passed to the binding.\n   *\n   * @param {Node} [node] A native DOM node, passed to the custom {@link module:ui/template~TemplateBinding#callback}.\n   * @returns {*} The value of {@link module:ui/template~TemplateBinding#attribute} in\n   * {@link module:ui/template~TemplateBinding#observable}.\n   */\n\n\n  _createClass(TemplateBinding, [{\n    key: \"getValue\",\n    value: function getValue(node) {\n      var value = this.observable[this.attribute];\n      return this.callback ? this.callback(value, node) : value;\n    }\n    /**\n     * Activates the listener which waits for changes of the {@link module:ui/template~TemplateBinding#attribute} in\n     * {@link module:ui/template~TemplateBinding#observable}, then updates the DOM with the aggregated\n     * value of {@link module:ui/template~TemplateValueSchema}.\n     *\n     * @param {module:ui/template~TemplateValueSchema} schema A full schema to generate an attribute or text in the DOM.\n     * @param {Function} updater A DOM updater function used to update the native DOM attribute or text.\n     * @param {module:ui/template~RenderData} data Rendering data.\n     * @returns {Function} A function to sever the listener binding.\n     */\n\n  }, {\n    key: \"activateAttributeListener\",\n    value: function activateAttributeListener(schema, updater, data) {\n      var _this2 = this;\n\n      var callback = function callback() {\n        return syncValueSchemaValue(schema, updater, data);\n      };\n\n      this.emitter.listenTo(this.observable, 'change:' + this.attribute, callback); // Allows revert of the listener.\n\n      return function () {\n        _this2.emitter.stopListening(_this2.observable, 'change:' + _this2.attribute, callback);\n      };\n    }\n  }]);\n\n  return TemplateBinding;\n}();\n/**\n * Describes either:\n *\n * * a binding to an {@link module:utils/observablemixin~Observable},\n * * or a native DOM event binding.\n *\n * It is created by the {@link module:ui/template~BindChain#to} method.\n *\n * @protected\n */\n\nexport var TemplateToBinding =\n/*#__PURE__*/\nfunction (_TemplateBinding) {\n  _inherits(TemplateToBinding, _TemplateBinding);\n\n  function TemplateToBinding() {\n    _classCallCheck(this, TemplateToBinding);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TemplateToBinding).apply(this, arguments));\n  }\n\n  _createClass(TemplateToBinding, [{\n    key: \"activateDomEventListener\",\n\n    /**\n     * Activates the listener for the native DOM event, which when fired, is propagated by\n     * the {@link module:ui/template~TemplateBinding#emitter}.\n     *\n     * @param {String} domEvtName The name of the native DOM event.\n     * @param {String} domSelector The selector in the DOM to filter delegated events.\n     * @param {module:ui/template~RenderData} data Rendering data.\n     * @returns {Function} A function to sever the listener binding.\n     */\n    value: function activateDomEventListener(domEvtName, domSelector, data) {\n      var _this3 = this;\n\n      var callback = function callback(evt, domEvt) {\n        if (!domSelector || domEvt.target.matches(domSelector)) {\n          if (typeof _this3.eventNameOrFunction == 'function') {\n            _this3.eventNameOrFunction(domEvt);\n          } else {\n            _this3.observable.fire(_this3.eventNameOrFunction, domEvt);\n          }\n        }\n      };\n\n      this.emitter.listenTo(data.node, domEvtName, callback); // Allows revert of the listener.\n\n      return function () {\n        _this3.emitter.stopListening(data.node, domEvtName, callback);\n      };\n    }\n  }]);\n\n  return TemplateToBinding;\n}(TemplateBinding);\n/**\n * Describes a binding to {@link module:utils/observablemixin~ObservableMixin} created by the {@link module:ui/template~BindChain#if}\n * method.\n *\n * @protected\n */\n\nexport var TemplateIfBinding =\n/*#__PURE__*/\nfunction (_TemplateBinding2) {\n  _inherits(TemplateIfBinding, _TemplateBinding2);\n\n  function TemplateIfBinding() {\n    _classCallCheck(this, TemplateIfBinding);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TemplateIfBinding).apply(this, arguments));\n  }\n\n  _createClass(TemplateIfBinding, [{\n    key: \"getValue\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function getValue(node) {\n      var value = _get(_getPrototypeOf(TemplateIfBinding.prototype), \"getValue\", this).call(this, node);\n\n      return isFalsy(value) ? false : this.valueIfTrue || true;\n    }\n    /**\n     * The value of the DOM attribute or text to be set if the {@link module:ui/template~TemplateBinding#attribute} in\n     * {@link module:ui/template~TemplateBinding#observable} is `true`.\n     *\n     * @member {String} [module:ui/template~TemplateIfBinding#valueIfTrue]\n     */\n\n  }]);\n\n  return TemplateIfBinding;\n}(TemplateBinding); // Checks whether given {@link module:ui/template~TemplateValueSchema} contains a\n// {@link module:ui/template~TemplateBinding}.\n//\n// @param {module:ui/template~TemplateValueSchema} schema\n// @returns {Boolean}\n\nfunction hasTemplateBinding(schema) {\n  if (!schema) {\n    return false;\n  } // Normalize attributes with additional data like namespace:\n  //\n  //\t\tclass: {\n  //\t\t\tns: 'abc',\n  //\t\t\tvalue: [ ... ]\n  //\t\t}\n  //\n\n\n  if (schema.value) {\n    schema = schema.value;\n  }\n\n  if (Array.isArray(schema)) {\n    return schema.some(hasTemplateBinding);\n  } else if (schema instanceof TemplateBinding) {\n    return true;\n  }\n\n  return false;\n} // Assembles the value using {@link module:ui/template~TemplateValueSchema} and stores it in a form of\n// an Array. Each entry of the Array corresponds to one of {@link module:ui/template~TemplateValueSchema}\n// items.\n//\n// @param {module:ui/template~TemplateValueSchema} schema\n// @param {Node} node DOM Node updated when {@link module:utils/observablemixin~ObservableMixin} changes.\n// @returns {Array}\n\n\nfunction getValueSchemaValue(schema, node) {\n  return schema.map(function (schemaItem) {\n    // Process {@link module:ui/template~TemplateBinding} bindings.\n    if (schemaItem instanceof TemplateBinding) {\n      return schemaItem.getValue(node);\n    } // All static values like strings, numbers, and \"falsy\" values (false, null, undefined, '', etc.) just pass.\n\n\n    return schemaItem;\n  });\n} // A function executed each time the bound Observable attribute changes, which updates the DOM with a value\n// constructed from {@link module:ui/template~TemplateValueSchema}.\n//\n// @param {module:ui/template~TemplateValueSchema} schema\n// @param {Function} updater A function which updates the DOM (like attribute or text).\n// @param {Node} node DOM Node updated when {@link module:utils/observablemixin~ObservableMixin} changes.\n\n\nfunction syncValueSchemaValue(schema, updater, _ref3) {\n  var node = _ref3.node;\n  var value = getValueSchemaValue(schema, node); // Check if schema is a single Template.bind.if, like:\n  //\n  //\t\tclass: Template.bind.if( 'foo' )\n  //\n\n  if (schema.length == 1 && schema[0] instanceof TemplateIfBinding) {\n    value = value[0];\n  } else {\n    value = value.reduce(arrayValueReducer, '');\n  }\n\n  if (isFalsy(value)) {\n    updater.remove();\n  } else {\n    updater.set(value);\n  }\n} // Returns an object consisting of `set` and `remove` functions, which\n// can be used in the context of DOM Node to set or reset `textContent`.\n// @see module:ui/view~View#_bindToObservable\n//\n// @param {Node} node DOM Node to be modified.\n// @returns {Object}\n\n\nfunction getTextUpdater(node) {\n  return {\n    set: function set(value) {\n      node.textContent = value;\n    },\n    remove: function remove() {\n      node.textContent = '';\n    }\n  };\n} // Returns an object consisting of `set` and `remove` functions, which\n// can be used in the context of DOM Node to set or reset an attribute.\n// @see module:ui/view~View#_bindToObservable\n//\n// @param {Node} node DOM Node to be modified.\n// @param {String} attrName Name of the attribute to be modified.\n// @param {String} [ns=null] Namespace to use.\n// @returns {Object}\n\n\nfunction getAttributeUpdater(el, attrName, ns) {\n  return {\n    set: function set(value) {\n      el.setAttributeNS(ns, attrName, value);\n    },\n    remove: function remove() {\n      el.removeAttributeNS(ns, attrName);\n    }\n  };\n} // Returns an object consisting of `set` and `remove` functions, which\n// can be used in the context of CSSStyleDeclaration to set or remove a style.\n// @see module:ui/view~View#_bindToObservable\n//\n// @param {Node} node DOM Node to be modified.\n// @param {String} styleName Name of the style to be modified.\n// @returns {Object}\n\n\nfunction getStyleUpdater(el, styleName) {\n  return {\n    set: function set(value) {\n      el.style[styleName] = value;\n    },\n    remove: function remove() {\n      el.style[styleName] = null;\n    }\n  };\n} // Clones definition of the template.\n//\n// @param {module:ui/template~TemplateDefinition} def\n// @returns {module:ui/template~TemplateDefinition}\n\n\nfunction clone(def) {\n  var clone = cloneDeepWith(def, function (value) {\n    // Don't clone the `Template.bind`* bindings because of the references to Observable\n    // and DomEmitterMixin instances inside, which would also be traversed and cloned by greedy\n    // cloneDeepWith algorithm. There's no point in cloning Observable/DomEmitterMixins\n    // along with the definition.\n    //\n    // Don't clone Template instances if provided as a child. They're simply #render()ed\n    // and nothing should interfere.\n    //\n    // Also don't clone View instances if provided as a child of the Template. The template\n    // instance will be extracted from the View during the normalization and there's no need\n    // to clone it.\n    if (value && (value instanceof TemplateBinding || isTemplate(value) || isView(value) || isViewCollection(value))) {\n      return value;\n    }\n  });\n  return clone;\n} // Normalizes given {@link module:ui/template~TemplateDefinition}.\n//\n// See:\n//  * {@link normalizeAttributes}\n//  * {@link normalizeListeners}\n//  * {@link normalizePlainTextDefinition}\n//  * {@link normalizeTextDefinition}\n//\n// @param {module:ui/template~TemplateDefinition} def\n// @returns {module:ui/template~TemplateDefinition} Normalized definition.\n\n\nfunction normalize(def) {\n  if (typeof def == 'string') {\n    def = normalizePlainTextDefinition(def);\n  } else if (def.text) {\n    normalizeTextDefinition(def);\n  }\n\n  if (def.on) {\n    def.eventListeners = normalizeListeners(def.on); // Template mixes EmitterMixin, so delete #on to avoid collision.\n\n    delete def.on;\n  }\n\n  if (!def.text) {\n    if (def.attributes) {\n      normalizeAttributes(def.attributes);\n    }\n\n    var children = [];\n\n    if (def.children) {\n      if (isViewCollection(def.children)) {\n        children.push(def.children);\n      } else {\n        var _iteratorNormalCompletion6 = true;\n        var _didIteratorError6 = false;\n        var _iteratorError6 = undefined;\n\n        try {\n          for (var _iterator6 = def.children[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n            var child = _step6.value;\n\n            if (isTemplate(child) || isView(child) || isNode(child)) {\n              children.push(child);\n            } else {\n              children.push(new Template(child));\n            }\n          }\n        } catch (err) {\n          _didIteratorError6 = true;\n          _iteratorError6 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion6 && _iterator6[\"return\"] != null) {\n              _iterator6[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError6) {\n              throw _iteratorError6;\n            }\n          }\n        }\n      }\n    }\n\n    def.children = children;\n  }\n\n  return def;\n} // Normalizes \"attributes\" section of {@link module:ui/template~TemplateDefinition}.\n//\n//\t\tattributes: {\n//\t\t\ta: 'bar',\n//\t\t\tb: {@link module:ui/template~TemplateBinding},\n//\t\t\tc: {\n//\t\t\t\tvalue: 'bar'\n//\t\t\t}\n//\t\t}\n//\n// becomes\n//\n//\t\tattributes: {\n//\t\t\ta: [ 'bar' ],\n//\t\t\tb: [ {@link module:ui/template~TemplateBinding} ],\n//\t\t\tc: {\n//\t\t\t\tvalue: [ 'bar' ]\n//\t\t\t}\n//\t\t}\n//\n// @param {Object} attributes\n\n\nfunction normalizeAttributes(attributes) {\n  for (var a in attributes) {\n    if (attributes[a].value) {\n      attributes[a].value = [].concat(attributes[a].value);\n    }\n\n    arrayify(attributes, a);\n  }\n} // Normalizes \"on\" section of {@link module:ui/template~TemplateDefinition}.\n//\n//\t\ton: {\n//\t\t\ta: 'bar',\n//\t\t\tb: {@link module:ui/template~TemplateBinding},\n//\t\t\tc: [ {@link module:ui/template~TemplateBinding}, () => { ... } ]\n//\t\t}\n//\n// becomes\n//\n//\t\ton: {\n//\t\t\ta: [ 'bar' ],\n//\t\t\tb: [ {@link module:ui/template~TemplateBinding} ],\n//\t\t\tc: [ {@link module:ui/template~TemplateBinding}, () => { ... } ]\n//\t\t}\n//\n// @param {Object} listeners\n// @returns {Object} Object containing normalized listeners.\n\n\nfunction normalizeListeners(listeners) {\n  for (var l in listeners) {\n    arrayify(listeners, l);\n  }\n\n  return listeners;\n} // Normalizes \"string\" {@link module:ui/template~TemplateDefinition}.\n//\n//\t\t\"foo\"\n//\n// becomes\n//\n//\t\t{ text: [ 'foo' ] },\n//\n// @param {String} def\n// @returns {module:ui/template~TemplateDefinition} Normalized template definition.\n\n\nfunction normalizePlainTextDefinition(def) {\n  return {\n    text: [def]\n  };\n} // Normalizes text {@link module:ui/template~TemplateDefinition}.\n//\n//\t\tchildren: [\n//\t\t\t{ text: 'def' },\n//\t\t\t{ text: {@link module:ui/template~TemplateBinding} }\n//\t\t]\n//\n// becomes\n//\n//\t\tchildren: [\n//\t\t\t{ text: [ 'def' ] },\n//\t\t\t{ text: [ {@link module:ui/template~TemplateBinding} ] }\n//\t\t]\n//\n// @param {module:ui/template~TemplateDefinition} def\n\n\nfunction normalizeTextDefinition(def) {\n  if (!Array.isArray(def.text)) {\n    def.text = [def.text];\n  }\n} // Wraps an entry in Object in an Array, if not already one.\n//\n//\t\t{\n//\t\t\tx: 'y',\n//\t\t\ta: [ 'b' ]\n//\t\t}\n//\n// becomes\n//\n//\t\t{\n//\t\t\tx: [ 'y' ],\n//\t\t\ta: [ 'b' ]\n//\t\t}\n//\n// @param {Object} obj\n// @param {String} key\n\n\nfunction arrayify(obj, key) {\n  if (!Array.isArray(obj[key])) {\n    obj[key] = [obj[key]];\n  }\n} // A helper which concatenates the value avoiding unwanted\n// leading white spaces.\n//\n// @param {String} prev\n// @param {String} cur\n// @returns {String}\n\n\nfunction arrayValueReducer(prev, cur) {\n  if (isFalsy(cur)) {\n    return prev;\n  } else if (isFalsy(prev)) {\n    return cur;\n  } else {\n    return \"\".concat(prev, \" \").concat(cur);\n  }\n} // Extends one object defined in the following format:\n//\n//\t\t{\n//\t\t\tkey1: [Array1],\n//\t\t\tkey2: [Array2],\n//\t\t\t...\n//\t\t\tkeyN: [ArrayN]\n//\t\t}\n//\n// with another object of the same data format.\n//\n// @param {Object} obj Base object.\n// @param {Object} ext Object extending base.\n// @returns {String}\n\n\nfunction extendObjectValueArray(obj, ext) {\n  for (var a in ext) {\n    if (obj[a]) {\n      var _obj$a;\n\n      (_obj$a = obj[a]).push.apply(_obj$a, _toConsumableArray(ext[a]));\n    } else {\n      obj[a] = ext[a];\n    }\n  }\n} // A helper for {@link module:ui/template~Template#extend}. Recursively extends {@link module:ui/template~Template} instance\n// with content from {@link module:ui/template~TemplateDefinition}. See {@link module:ui/template~Template#extend} to learn more.\n//\n// @param {module:ui/template~Template} def A template instance to be extended.\n// @param {module:ui/template~TemplateDefinition} def A definition which is to extend the template instance.\n// @param {Object} Error context.\n\n\nfunction extendTemplate(template, def) {\n  if (def.attributes) {\n    if (!template.attributes) {\n      template.attributes = {};\n    }\n\n    extendObjectValueArray(template.attributes, def.attributes);\n  }\n\n  if (def.eventListeners) {\n    if (!template.eventListeners) {\n      template.eventListeners = {};\n    }\n\n    extendObjectValueArray(template.eventListeners, def.eventListeners);\n  }\n\n  if (def.text) {\n    var _template$text;\n\n    (_template$text = template.text).push.apply(_template$text, _toConsumableArray(def.text));\n  }\n\n  if (def.children && def.children.length) {\n    if (template.children.length != def.children.length) {\n      /**\n       * The number of children in extended definition does not match.\n       *\n       * @error ui-template-extend-children-mismatch\n       */\n      throw new CKEditorError('ui-template-extend-children-mismatch: The number of children in extended definition does not match.', template);\n    }\n\n    var childIndex = 0;\n    var _iteratorNormalCompletion7 = true;\n    var _didIteratorError7 = false;\n    var _iteratorError7 = undefined;\n\n    try {\n      for (var _iterator7 = def.children[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n        var childDef = _step7.value;\n        extendTemplate(template.children[childIndex++], childDef);\n      }\n    } catch (err) {\n      _didIteratorError7 = true;\n      _iteratorError7 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion7 && _iterator7[\"return\"] != null) {\n          _iterator7[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError7) {\n          throw _iteratorError7;\n        }\n      }\n    }\n  }\n} // Checks if value is \"falsy\".\n// Note: 0 (Number) is not \"falsy\" in this context.\n//\n// @private\n// @param {*} value Value to be checked.\n\n\nfunction isFalsy(value) {\n  return !value && value !== 0;\n} // Checks if the item is an instance of {@link module:ui/view~View}\n//\n// @private\n// @param {*} value Value to be checked.\n\n\nfunction isView(item) {\n  return item instanceof View;\n} // Checks if the item is an instance of {@link module:ui/template~Template}\n//\n// @private\n// @param {*} value Value to be checked.\n\n\nfunction isTemplate(item) {\n  return item instanceof Template;\n} // Checks if the item is an instance of {@link module:ui/viewcollection~ViewCollection}\n//\n// @private\n// @param {*} value Value to be checked.\n\n\nfunction isViewCollection(item) {\n  return item instanceof ViewCollection;\n} // Creates an empty skeleton for {@link module:ui/template~Template#revert}\n// data.\n//\n// @private\n\n\nfunction getEmptyRevertData() {\n  return {\n    children: [],\n    bindings: [],\n    attributes: {}\n  };\n} // Checks whether an attribute should be extended when\n// {@link module:ui/template~Template#apply} is called.\n//\n// @private\n// @param {String} attrName Attribute name to check.\n\n\nfunction shouldExtend(attrName) {\n  return attrName == 'class' || attrName == 'style';\n}\n/**\n * A definition of the {@link module:ui/template~Template}. It describes what kind of\n * node a template will render (HTML element or text), attributes of an element, DOM event\n * listeners and children.\n *\n * Also see:\n * * {@link module:ui/template~TemplateValueSchema} to learn about HTML element attributes,\n * * {@link module:ui/template~TemplateListenerSchema} to learn about DOM event listeners.\n *\n * A sample definition on an HTML element can look like this:\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\t\t\tchildren: [\n *\t\t\t\t{\n *\t\t\t\t\ttag: 'span',\n *\t\t\t\t\tattributes: { ... },\n *\t\t\t\t\tchildren: [ ... ],\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\ttext: 'static–text'\n *\t\t\t\t},\n *\t\t\t\t'also-static–text',\n *\t\t\t],\n *\t\t\tattributes: {\n *\t\t\t\tclass: {@link module:ui/template~TemplateValueSchema},\n *\t\t\t\tid: {@link module:ui/template~TemplateValueSchema},\n *\t\t\t\tstyle: {@link module:ui/template~TemplateValueSchema}\n *\n *\t\t\t\t// ...\n *\t\t\t},\n *\t\t\ton: {\n *\t\t\t\t'click': {@link module:ui/template~TemplateListenerSchema}\n *\n *\t\t\t\t// Document.querySelector format is also accepted.\n *\t\t\t\t'keyup@a.some-class': {@link module:ui/template~TemplateListenerSchema}\n *\n *\t\t\t\t// ...\n *\t\t\t}\n *\t\t} );\n *\n * A {@link module:ui/view~View}, another {@link module:ui/template~Template} or a native DOM node\n * can also become a child of a template. When a view is passed, its {@link module:ui/view~View#element} is used:\n *\n *\t\tconst view = new SomeView();\n *\t\tconst childTemplate = new Template( { ... } );\n *\t\tconst childNode = document.createElement( 'b' );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\n *\t\t\tchildren: [\n *\t\t\t\t// view#element will be added as a child of this <p>.\n *\t\t\t\tview,\n *\n * \t\t\t\t// The output of childTemplate.render() will be added here.\n *\t\t\t\tchildTemplate,\n *\n *\t\t\t\t// Native DOM nodes are included directly in the rendered output.\n *\t\t\t\tchildNode\n *\t\t\t]\n *\t\t} );\n *\n * An entire {@link module:ui/viewcollection~ViewCollection} can be used as a child in the definition:\n *\n *\t\tconst collection = new ViewCollection();\n *\t\tcollection.add( someView );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\n *\t\t\tchildren: collection\n *\t\t} );\n *\n * @typedef module:ui/template~TemplateDefinition\n * @type Object\n *\n * @property {String} tag See the template {@link module:ui/template~Template#tag} property.\n *\n * @property {Array.<module:ui/template~TemplateDefinition>} [children]\n * See the template {@link module:ui/template~Template#children} property.\n *\n * @property {Object.<String, module:ui/template~TemplateValueSchema>} [attributes]\n * See the template {@link module:ui/template~Template#attributes} property.\n *\n * @property {String|module:ui/template~TemplateValueSchema|Array.<String|module:ui/template~TemplateValueSchema>} [text]\n * See the template {@link module:ui/template~Template#text} property.\n *\n * @property {Object.<String, module:ui/template~TemplateListenerSchema>} [on]\n * See the template {@link module:ui/template~Template#eventListeners} property.\n */\n\n/**\n * Describes a value of an HTML element attribute or `textContent`. It allows combining multiple\n * data sources like static values and {@link module:utils/observablemixin~Observable} attributes.\n *\n * Also see:\n * * {@link module:ui/template~TemplateDefinition} to learn where to use it,\n * * {@link module:ui/template~Template.bind} to learn how to configure\n * {@link module:utils/observablemixin~Observable} attribute bindings,\n * * {@link module:ui/template~Template#render} to learn how to render a template,\n * * {@link module:ui/template~BindChain#to `to()`} and {@link module:ui/template~BindChain#if `if()`}\n * methods to learn more about bindings.\n *\n * Attribute values can be described in many different ways:\n *\n *\t\t// Bind helper will create bindings to attributes of the observable.\n *\t\tconst bind = Template.bind( observable, emitter );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\t\t\tattributes: {\n *\t\t\t\t// A plain string schema.\n *\t\t\t\t'class': 'static-text',\n *\n *\t\t\t\t// An object schema, binds to the \"foo\" attribute of the\n *\t\t\t\t// observable and follows its value.\n *\t\t\t\t'class': bind.to( 'foo' ),\n *\n *\t\t\t\t// An array schema, combines the above.\n *\t\t\t\t'class': [\n *\t\t\t\t\t'static-text',\n *\t\t\t\t\tbind.to( 'bar', () => { ... } ),\n *\n * \t\t\t\t\t// Bindings can also be conditional.\n *\t\t\t\t\tbind.if( 'baz', 'class-when-baz-is-true' )\n *\t\t\t\t],\n *\n *\t\t\t\t// An array schema, with a custom namespace, e.g. useful for creating SVGs.\n *\t\t\t\t'class': {\n *\t\t\t\t\tns: 'http://ns.url',\n *\t\t\t\t\tvalue: [\n *\t\t\t\t\t\tbind.if( 'baz', 'value-when-true' ),\n *\t\t\t\t\t\t'static-text'\n *\t\t\t\t\t]\n *\t\t\t\t},\n *\n *\t\t\t\t// An object schema, specific for styles.\n *\t\t\t\tstyle: {\n *\t\t\t\t\tcolor: 'red',\n *\t\t\t\t\tbackgroundColor: bind.to( 'qux', () => { ... } )\n *\t\t\t\t}\n *\t\t\t}\n *\t\t} );\n *\n * Text nodes can also have complex values:\n *\n *\t\tconst bind = Template.bind( observable, emitter );\n *\n *\t\t// Will render a \"foo\" text node.\n *\t\tnew Template( {\n *\t\t\ttext: 'foo'\n *\t\t} );\n *\n *\t\t// Will render a \"static text: {observable.foo}\" text node.\n *\t\t// The text of the node will be updated as the \"foo\" attribute changes.\n *\t\tnew Template( {\n *\t\t\ttext: [\n *\t\t\t\t'static text: ',\n *\t\t\t\tbind.to( 'foo', () => { ... } )\n *\t\t\t]\n *\t\t} );\n *\n * @typedef module:ui/template~TemplateValueSchema\n * @type {Object|String|Array}\n */\n\n/**\n * Describes an event listener attached to an HTML element. Such listener can propagate DOM events\n * through an {@link module:utils/observablemixin~Observable} instance, execute custom callbacks\n * or both, if necessary.\n *\n * Also see:\n * * {@link module:ui/template~TemplateDefinition} to learn more about template definitions,\n * * {@link module:ui/template~BindChain#to `to()`} method to learn more about bindings.\n *\n * Check out different ways of attaching event listeners below:\n *\n *\t\t// Bind helper will propagate events through the observable.\n *\t\tconst bind = Template.bind( observable, emitter );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\t\t\ton: {\n *\t\t\t\t// An object schema. The observable will fire the \"clicked\" event upon DOM \"click\".\n *\t\t\t\tclick: bind.to( 'clicked' )\n *\n *\t\t\t\t// An object schema. It will work for \"click\" event on \"a.foo\" children only.\n *\t\t\t\t'click@a.foo': bind.to( 'clicked' )\n *\n *\t\t\t\t// An array schema, makes the observable propagate multiple events.\n *\t\t\t\tclick: [\n *\t\t\t\t\tbind.to( 'clicked' ),\n *\t\t\t\t\tbind.to( 'executed' )\n *\t\t\t\t],\n *\n *\t\t\t\t// An array schema with a custom callback.\n *\t\t\t\t'click@a.foo': {\n *\t\t\t\t\tbind.to( 'clicked' ),\n *\t\t\t\t\tbind.to( evt => {\n *\t\t\t\t\t\tconsole.log( `${ evt.target } has been clicked!` );\n *\t\t\t\t\t} }\n *\t\t\t\t}\n *\t\t\t}\n *\t\t} );\n *\n * @typedef module:ui/template~TemplateListenerSchema\n * @type {Object|String|Array}\n */\n\n/**\n * The return value of {@link ~Template.bind `Template.bind()`}. It provides `to()` and `if()`\n * methods to create the {@link module:utils/observablemixin~Observable observable} attribute and event bindings.\n *\n * @interface module:ui/template~BindChain\n */\n\n/**\n * Binds an {@link module:utils/observablemixin~Observable observable} to either:\n *\n * * an HTML element attribute or a text node `textContent`, so it remains in sync with the observable\n * attribute as it changes,\n * * or an HTML element DOM event, so the DOM events are propagated through an observable.\n *\n * Some common use cases of `to()` bindings are presented below:\n *\n *\t\tconst bind = Template.bind( observable, emitter );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\t\t\tattributes: {\n *\t\t\t\t// class=\"...\" attribute gets bound to `observable#a`\n *\t\t\t\tclass: bind.to( 'a' )\n *\t\t\t},\n *\t\t\tchildren: [\n *\t\t\t\t// <p>...</p> gets bound to observable#b; always `toUpperCase()`.\n *\t\t\t\t{\n *\t\t\t\t\ttext: bind.to( 'b', ( value, node ) => value.toUpperCase() )\n *\t\t\t\t}\n *\t\t\t],\n *\t\t\ton: {\n *\t\t\t\tclick: [\n *\t\t\t\t\t// An observable will fire \"clicked\" upon \"click\" in the DOM.\n *\t\t\t\t\tbind.to( 'clicked' ),\n *\n *\t\t\t\t\t// A custom callback will be executed upon \"click\" in the DOM.\n *\t\t\t\t\tbind.to( () => {\n *\t\t\t\t\t\t...\n *\t\t\t\t\t} )\n *\t\t\t\t]\n *\t\t\t}\n *\t\t} ).render();\n *\n * Learn more about using `to()` in the {@link module:ui/template~TemplateValueSchema} and\n * {@link module:ui/template~TemplateListenerSchema}.\n *\n * @method #to\n * @param {String|Function} eventNameOrFunctionOrAttribute An attribute name of\n * {@link module:utils/observablemixin~Observable} or a DOM event name or an event callback.\n * @param {Function} [callback] Allows for processing of the value. Accepts `Node` and `value` as arguments.\n * @returns {module:ui/template~TemplateBinding}\n */\n\n/**\n * Binds an {@link module:utils/observablemixin~Observable observable} to an HTML element attribute or a text\n * node `textContent` so it remains in sync with the observable attribute as it changes.\n *\n * Unlike {@link module:ui/template~BindChain#to}, it controls the presence of the attribute or `textContent`\n * depending on the \"falseness\" of an {@link module:utils/observablemixin~Observable} attribute.\n *\n *\t\tconst bind = Template.bind( observable, emitter );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'input',\n *\t\t\tattributes: {\n *\t\t\t\t// <input checked> when `observable#a` is not undefined/null/false/''\n *\t\t\t\t// <input> when `observable#a` is undefined/null/false\n *\t\t\t\tchecked: bind.if( 'a' )\n *\t\t\t},\n *\t\t\tchildren: [\n *\t\t\t\t{\n *\t\t\t\t\t// <input>\"b-is-not-set\"</input> when `observable#b` is undefined/null/false/''\n *\t\t\t\t\t// <input></input> when `observable#b` is not \"falsy\"\n *\t\t\t\t\ttext: bind.if( 'b', 'b-is-not-set', ( value, node ) => !value )\n *\t\t\t\t}\n *\t\t\t]\n *\t\t} ).render();\n *\n * Learn more about using `if()` in the {@link module:ui/template~TemplateValueSchema}.\n *\n * @method #if\n * @param {String} attribute An attribute name of {@link module:utils/observablemixin~Observable} used in the binding.\n * @param {String} [valueIfTrue] Value set when the {@link module:utils/observablemixin~Observable} attribute is not\n * undefined/null/false/'' (empty string).\n * @param {Function} [callback] Allows for processing of the value. Accepts `Node` and `value` as arguments.\n * @returns {module:ui/template~TemplateBinding}\n */\n\n/**\n * The {@link module:ui/template~Template#_renderNode} configuration.\n *\n * @private\n * @interface module:ui/template~RenderData\n */\n\n/**\n * Tells {@link module:ui/template~Template#_renderNode} to render\n * children into `DocumentFragment` first and then append the fragment\n * to the parent element. It is a speed optimization.\n *\n * @member {Boolean} #intoFragment\n */\n\n/**\n * A node which is being rendered.\n *\n * @member {HTMLElement|Text} #node\n */\n\n/**\n * Indicates whether the {@module:ui/template~RenderNodeOptions#node} has\n * been provided by {@module:ui/template~Template#apply}.\n *\n * @member {Boolean} #isApplying\n */\n\n/**\n * An object storing the data that helps {@module:ui/template~Template#revert}\n * bringing back an element to its initial state, i.e. before\n * {@module:ui/template~Template#apply} was called.\n *\n * @member {Object} #revertData\n */","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/view\n */\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport ViewCollection from './viewcollection';\nimport Template from './template';\nimport DomEmitterMixin from '@ckeditor/ckeditor5-utils/src/dom/emittermixin';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\nimport '../theme/globals/globals.css';\n/**\n * The basic view class, which represents an HTML element created out of a\n * {@link module:ui/view~View#template}. Views are building blocks of the user interface and handle\n * interaction\n *\n * Views {@link module:ui/view~View#registerChild aggregate} children in\n * {@link module:ui/view~View#createCollection collections} and manage the life cycle of DOM\n * listeners e.g. by handling rendering and destruction.\n *\n * See the {@link module:ui/template~TemplateDefinition} syntax to learn more about shaping view\n * elements, attributes and listeners.\n *\n *\t\tclass SampleView extends View {\n *\t\t\tconstructor( locale ) {\n *\t\t\t\tsuper( locale );\n *\n *\t\t\t\tconst bind = this.bindTemplate;\n *\n *\t\t\t\t// Views define their interface (state) using observable attributes.\n *\t\t\t\tthis.set( 'elementClass', 'bar' );\n *\n *\t\t\t\tthis.setTemplate( {\n *\t\t\t\t\ttag: 'p',\n *\n *\t\t\t\t\t// The element of the view can be defined with its children.\n *\t\t\t\t\tchildren: [\n *\t\t\t\t\t\t'Hello',\n *\t\t\t\t\t\t{\n *\t\t\t\t\t\t\ttag: 'b',\n *\t\t\t\t\t\t\tchildren: [ 'world!' ]\n *\t\t\t\t\t\t}\n *\t\t\t\t\t],\n *\t\t\t\t\tattributes: {\n *\t\t\t\t\t\tclass: [\n *\t\t\t\t\t\t\t'foo',\n *\n *\t\t\t\t\t\t\t// Observable attributes control the state of the view in DOM.\n *\t\t\t\t\t\t\tbind.to( 'elementClass' )\n *\t\t\t\t\t\t]\n *\t\t\t\t\t},\n *\t\t\t\t\ton: {\n *\t\t\t\t\t\t// Views listen to DOM events and propagate them.\n *\t\t\t\t\t\tclick: bind.to( 'clicked' )\n *\t\t\t\t\t}\n *\t\t\t\t} );\n *\t\t\t}\n *\t\t}\n *\n *\t\tconst view = new SampleView( locale );\n *\n *\t\tview.render();\n *\n *\t\t// Append <p class=\"foo bar\">Hello<b>world</b></p> to the <body>\n *\t\tdocument.body.appendChild( view.element );\n *\n *\t\t// Change the class attribute to <p class=\"foo baz\">Hello<b>world</b></p>\n *\t\tview.elementClass = 'baz';\n *\n *\t\t// Respond to the \"click\" event in DOM by executing a custom action.\n *\t\tview.on( 'clicked', () => {\n *\t\t\tconsole.log( 'The view has been clicked!' );\n *\t\t} );\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\n\nvar View =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of the {@link module:ui/view~View} class.\n   *\n   * Also see {@link #render}.\n   *\n   * @param {module:utils/locale~Locale} [locale] The localization services instance.\n   */\n  function View(locale) {\n    _classCallCheck(this, View);\n\n    /**\n     * An HTML element of the view. `null` until {@link #render rendered}\n     * from the {@link #template}.\n     *\n     *\t\tclass SampleView extends View {\n     *\t\t\tconstructor() {\n     *\t\t\t\tsuper();\n     *\n     *\t\t\t\t// A template instance the #element will be created from.\n     *\t\t\t\tthis.setTemplate( {\n     *\t\t\t\t\ttag: 'p'\n     *\n     *\t\t\t\t\t// ...\n     *\t\t\t\t} );\n     *\t\t\t}\n     *\t\t}\n     *\n     *\t\tconst view = new SampleView();\n     *\n     *\t\t// Renders the #template.\n     *\t\tview.render();\n     *\n     *\t\t// Append the HTML element of the view to <body>.\n     *\t\tdocument.body.appendChild( view.element );\n     *\n     * **Note**: The element of the view can also be assigned directly:\n     *\n     *\t\tview.element = document.querySelector( '#my-container' );\n     *\n     * @member {HTMLElement}\n     */\n    this.element = null;\n    /**\n     * Set `true` when the view has already been {@link module:ui/view~View#render rendered}.\n     *\n     * @readonly\n     * @member {Boolean} #isRendered\n     */\n\n    this.isRendered = false;\n    /**\n     * A set of tools to localize the user interface.\n     *\n     * Also see {@link module:core/editor/editor~Editor#locale}.\n     *\n     * @readonly\n     * @member {module:utils/locale~Locale}\n     */\n\n    this.locale = locale;\n    /**\n     * Shorthand for {@link module:utils/locale~Locale#t}.\n     *\n     * Note: If {@link #locale} instance hasn't been passed to the view this method may not\n     * be available.\n     *\n     * @see module:utils/locale~Locale#t\n     * @method\n     */\n\n    this.t = locale && locale.t;\n    /**\n     * Collections registered with {@link #createCollection}.\n     *\n     * @protected\n     * @member {Set.<module:ui/viewcollection~ViewCollection>}\n     */\n\n    this._viewCollections = new Collection();\n    /**\n     * A collection of view instances, which have been added directly\n     * into the {@link module:ui/template~Template#children}.\n     *\n     * @protected\n     * @member {module:ui/viewcollection~ViewCollection}\n     */\n\n    this._unboundChildren = this.createCollection(); // Pass parent locale to its children.\n\n    this._viewCollections.on('add', function (evt, collection) {\n      collection.locale = locale;\n    });\n    /**\n     * Template of this view. It provides the {@link #element} representing\n     * the view in DOM, which is {@link #render rendered}.\n     *\n     * @member {module:ui/template~Template} #template\n     */\n\n    /**\n     * Cached {@link module:ui/template~BindChain bind chain} object created by the\n     * {@link #template}. See {@link #bindTemplate}.\n     *\n     * @private\n     * @member {Object} #_bindTemplate\n     */\n\n\n    this.decorate('render');\n  }\n  /**\n   * Shorthand for {@link module:ui/template~Template.bind}, a binding\n   * {@link module:ui/template~BindChain interface} pre–configured for the view instance.\n   *\n   * It provides {@link module:ui/template~BindChain#to `to()`} and\n   * {@link module:ui/template~BindChain#if `if()`} methods that initialize bindings with\n   * observable attributes and attach DOM listeners.\n   *\n   *\t\tclass SampleView extends View {\n   *\t\t\tconstructor( locale ) {\n   *\t\t\t\tsuper( locale );\n   *\n   *\t\t\t\tconst bind = this.bindTemplate;\n   *\n   *\t\t\t\t// These {@link module:utils/observablemixin~Observable observable} attributes will control\n   *\t\t\t\t// the state of the view in DOM.\n   *\t\t\t\tthis.set( {\n   *\t\t\t\t\telementClass: 'foo',\n   *\t\t\t\t \tisEnabled: true\n   *\t\t\t\t } );\n   *\n   *\t\t\t\tthis.setTemplate( {\n   *\t\t\t\t\ttag: 'p',\n   *\n   *\t\t\t\t\tattributes: {\n   *\t\t\t\t\t\t// The class HTML attribute will follow elementClass\n   *\t\t\t\t\t\t// and isEnabled view attributes.\n   *\t\t\t\t\t\tclass: [\n   *\t\t\t\t\t\t\tbind.to( 'elementClass' )\n   *\t\t\t\t\t\t\tbind.if( 'isEnabled', 'present-when-enabled' )\n   *\t\t\t\t\t\t]\n   *\t\t\t\t\t},\n   *\n   *\t\t\t\t\ton: {\n   *\t\t\t\t\t\t// The view will fire the \"clicked\" event upon clicking <p> in DOM.\n   *\t\t\t\t\t\tclick: bind.to( 'clicked' )\n   *\t\t\t\t\t}\n   *\t\t\t\t} );\n   *\t\t\t}\n   *\t\t}\n   *\n   * @method #bindTemplate\n   */\n\n\n  _createClass(View, [{\n    key: \"createCollection\",\n\n    /**\n     * Creates a new collection of views, which can be used as\n     * {@link module:ui/template~Template#children} of this view.\n     *\n     *\t\tclass SampleView extends View {\n     *\t\t\tconstructor( locale ) {\n     *\t\t\t\tsuper( locale );\n     *\n     *\t\t\t\tthis.items = this.createCollection();\n    \t *\n     *\t\t\t\tthis.setTemplate( {\n     *\t\t\t\t\ttag: 'p',\n     *\n     *\t\t\t\t\t// `items` collection will render here.\n     *\t\t\t\t\tchildren: this.items\n     *\t\t\t\t} );\n     *\t\t\t}\n     *\t\t}\n     *\n     *\t\tconst view = new SampleView( locale );\n     *\t\tconst child = new ChildView( locale );\n     *\n     *\t\tview.render();\n     *\n     *\t\t// It will append <p></p> to the <body>.\n     *\t\tdocument.body.appendChild( view.element );\n     *\n     *\t\t// From now on the child is nested under its parent, which is also reflected in DOM.\n     *\t\t// <p><child#element></p>\n     *\t\tview.items.add( child );\n     *\n     * @returns {module:ui/viewcollection~ViewCollection} A new collection of view instances.\n     */\n    value: function createCollection() {\n      var collection = new ViewCollection();\n\n      this._viewCollections.add(collection);\n\n      return collection;\n    }\n    /**\n     * Registers a new child view under the view instance. Once registered, a child\n     * view is managed by its parent, including {@link #render rendering}\n     * and {@link #destroy destruction}.\n     *\n     * To revert this, use {@link #deregisterChild}.\n     *\n     *\t\tclass SampleView extends View {\n     *\t\t\tconstructor( locale ) {\n     *\t\t\t\tsuper( locale );\n     *\n     *\t\t\t\tthis.childA = new SomeChildView( locale );\n     *\t\t\t\tthis.childB = new SomeChildView( locale );\n     *\n     *\t\t\t\tthis.setTemplate( { tag: 'p' } );\n     *\n     *\t\t\t\t// Register the children.\n     *\t\t\t\tthis.registerChild( [ this.childA, this.childB ] );\n     *\t\t\t}\n     *\n     *\t\t\trender() {\n     *\t\t\t\tsuper.render();\n     *\n     *\t\t\t\tthis.element.appendChild( this.childA.element );\n     *\t\t\t\tthis.element.appendChild( this.childB.element );\n     *\t\t\t}\n     *\t\t}\n     *\n     *\t\tconst view = new SampleView( locale );\n     *\n     *\t\tview.render();\n     *\n     *\t\t// Will append <p><childA#element><b></b><childB#element></p>.\n     *\t\tdocument.body.appendChild( view.element );\n     *\n     * **Note**: There's no need to add child views if they're already referenced in the\n     * {@link #template}:\n     *\n     *\t\tclass SampleView extends View {\n     *\t\t\tconstructor( locale ) {\n     *\t\t\t\tsuper( locale );\n     *\n     *\t\t\t\tthis.childA = new SomeChildView( locale );\n     *\t\t\t\tthis.childB = new SomeChildView( locale );\n     *\n     *\t\t\t\tthis.setTemplate( {\n     *\t\t\t\t\ttag: 'p',\n     *\n    \t *\t\t\t\t\t// These children will be added automatically. There's no\n    \t *\t\t\t\t\t// need to call {@link #registerChild} for any of them.\n     *\t\t\t\t\tchildren: [ this.childA, this.childB ]\n     *\t\t\t\t} );\n     *\t\t\t}\n     *\n     *\t\t\t// ...\n     *\t\t}\n     *\n     * @param {module:ui/view~View|Iterable.<module:ui/view~View>} children Children views to be registered.\n     */\n\n  }, {\n    key: \"registerChild\",\n    value: function registerChild(children) {\n      if (!isIterable(children)) {\n        children = [children];\n      }\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var child = _step.value;\n\n          this._unboundChildren.add(child);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n    /**\n     * The opposite of {@link #registerChild}. Removes a child view from this view instance.\n     * Once removed, the child is no longer managed by its parent, e.g. it can safely\n     * become a child of another parent view.\n     *\n     * @see #registerChild\n     * @param {module:ui/view~View|Iterable.<module:ui/view~View>} children Child views to be removed.\n     */\n\n  }, {\n    key: \"deregisterChild\",\n    value: function deregisterChild(children) {\n      if (!isIterable(children)) {\n        children = [children];\n      }\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = children[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var child = _step2.value;\n\n          this._unboundChildren.remove(child);\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n    /**\n     * Sets the {@link #template} of the view with with given definition.\n     *\n     * A shorthand for:\n     *\n     *\t\tview.setTemplate( definition );\n     *\n     * @param {module:ui/template~TemplateDefinition} definition Definition of view's template.\n     */\n\n  }, {\n    key: \"setTemplate\",\n    value: function setTemplate(definition) {\n      this.template = new Template(definition);\n    }\n    /**\n     * {@link module:ui/template~Template.extend Extends} the {@link #template} of the view with\n     * with given definition.\n     *\n     * A shorthand for:\n     *\n     *\t\tTemplate.extend( view.template, definition );\n     *\n     * **Note**: Is requires the {@link #template} to be already set. See {@link #setTemplate}.\n     *\n     * @param {module:ui/template~TemplateDefinition} definition Definition which\n     * extends the {@link #template}.\n     */\n\n  }, {\n    key: \"extendTemplate\",\n    value: function extendTemplate(definition) {\n      Template.extend(this.template, definition);\n    }\n    /**\n     * Recursively renders the view.\n     *\n     * Once the view is rendered:\n     * * the {@link #element} becomes an HTML element out of {@link #template},\n     * * the {@link #isRendered} flag is set `true`.\n     *\n     * **Note**: The children of the view:\n     * * defined directly in the {@link #template}\n     * * residing in collections created by the {@link #createCollection} method,\n     * * and added by {@link #registerChild}\n     * are also rendered in the process.\n     *\n     * In general, `render()` method is the right place to keep the code which refers to the\n     * {@link #element} and should be executed at the very beginning of the view's life cycle.\n     *\n     * It is possible to {@link module:ui/template~Template.extend} the {@link #template} before\n     * the view is rendered. To allow an early customization of the view (e.g. by its parent),\n     * such references should be done in `render()`.\n     *\n     *\t\tclass SampleView extends View {\n     *\t\t\tconstructor() {\n     *\t\t\t\tthis.setTemplate( {\n     *\t\t\t\t\t// ...\n     *\t\t\t\t} );\n     *\t\t\t},\n     *\n     *\t\t\trender() {\n     *\t\t\t\t// View#element becomes available.\n     *\t\t\t\tsuper.render();\n     *\n     *\t\t\t\t// The \"scroll\" listener depends on #element.\n     *\t\t\t\tthis.listenTo( window, 'scroll', () => {\n     *\t\t\t\t\t// A reference to #element would render the #template and make it non-extendable.\n     *\t\t\t\t\tif ( window.scrollY > 0 ) {\n     *\t\t\t\t\t\tthis.element.scrollLeft = 100;\n     *\t\t\t\t\t} else {\n     *\t\t\t\t\t\tthis.element.scrollLeft = 0;\n     *\t\t\t\t\t}\n     *\t\t\t\t} );\n     *\t\t\t}\n     *\t\t}\n     *\n     *\t\tconst view = new SampleView();\n     *\n     *\t\t// Let's customize the view before it gets rendered.\n     *\t\tview.extendTemplate( {\n     *\t\t\tattributes: {\n     *\t\t\t\tclass: [\n     *\t\t\t\t\t'additional-class'\n     *\t\t\t\t]\n     *\t\t\t}\n     *\t\t} );\n     *\n     *\t\t// Late rendering allows customization of the view.\n     *\t\tview.render();\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.isRendered) {\n        /**\n         * This View has already been rendered.\n         *\n         * @error ui-view-render-rendered\n         */\n        throw new CKEditorError('ui-view-render-already-rendered: This View has already been rendered.', this);\n      } // Render #element of the view.\n\n\n      if (this.template) {\n        this.element = this.template.render(); // Auto–register view children from #template.\n\n        this.registerChild(this.template.getViews());\n      }\n\n      this.isRendered = true;\n    }\n    /**\n     * Recursively destroys the view instance and child views added by {@link #registerChild} and\n     * residing in collections created by the {@link #createCollection}.\n     *\n     * Destruction disables all event listeners:\n     * * created on the view, e.g. `view.on( 'event', () => {} )`,\n     * * defined in the {@link #template} for DOM events.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.stopListening();\n\n      this._viewCollections.map(function (c) {\n        return c.destroy();\n      }); // Template isn't obligatory for views.\n\n\n      if (this.template && this.template._revertData) {\n        this.template.revert(this.element);\n      }\n    }\n    /**\n     * Event fired by the {@link #render} method. Actual rendering is executed as a listener to\n     * this event with the default priority.\n     *\n     * See {@link module:utils/observablemixin~ObservableMixin#decorate} for more information and samples.\n     *\n     * @event render\n     */\n\n  }, {\n    key: \"bindTemplate\",\n    get: function get() {\n      if (this._bindTemplate) {\n        return this._bindTemplate;\n      }\n\n      return this._bindTemplate = Template.bind(this, this);\n    }\n  }]);\n\n  return View;\n}();\n\nexport { View as default };\nmix(View, DomEmitterMixin);\nmix(View, ObservableMixin);","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/editorui/editoruiview\n */\n\n/* globals document */\nimport View from '../view';\nimport Template from '../template';\nimport '../../theme/components/editorui/editorui.css';\n/**\n * The editor UI view class. Base class for the editor main views.\n *\n * @extends module:ui/view~View\n */\n\nvar EditorUIView =\n/*#__PURE__*/\nfunction (_View) {\n  _inherits(EditorUIView, _View);\n\n  /**\n   * Creates an instance of the editor UI view class.\n   *\n   * @param {module:utils/locale~Locale} [locale] The locale instance.\n   */\n  function EditorUIView(locale) {\n    var _this;\n\n    _classCallCheck(this, EditorUIView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditorUIView).call(this, locale));\n    /**\n     * Collection of the child views, detached from the DOM\n     * structure of the editor, like panels, icons etc.\n     *\n     * @readonly\n     * @member {module:ui/viewcollection~ViewCollection} #body\n     */\n\n    _this.body = _this.createCollection();\n    /**\n     * The element holding elements of the 'body' region.\n     *\n     * @private\n     * @member {HTMLElement} #_bodyCollectionContainer\n     */\n\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(EditorUIView, [{\n    key: \"render\",\n    value: function render() {\n      _get(_getPrototypeOf(EditorUIView.prototype), \"render\", this).call(this);\n\n      this._renderBodyCollection();\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._bodyCollectionContainer.remove();\n\n      return _get(_getPrototypeOf(EditorUIView.prototype), \"destroy\", this).call(this);\n    }\n    /**\n     * Creates and appends to `<body>` the {@link #body} collection container.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_renderBodyCollection\",\n    value: function _renderBodyCollection() {\n      var bodyElement = this._bodyCollectionContainer = new Template({\n        tag: 'div',\n        attributes: {\n          \"class\": ['ck', 'ck-reset_all', 'ck-body', 'ck-rounded-corners']\n        },\n        children: this.body\n      }).render();\n      document.body.appendChild(bodyElement);\n    }\n  }]);\n\n  return EditorUIView;\n}(View);\n\nexport { EditorUIView as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/label/labelview\n */\nimport View from '../view';\nimport '../../theme/components/label/label.css';\n/**\n * The label view class.\n *\n * @extends module:ui/view~View\n */\n\nvar LabelView =\n/*#__PURE__*/\nfunction (_View) {\n  _inherits(LabelView, _View);\n\n  /**\n   * @inheritDoc\n   */\n  function LabelView(locale) {\n    var _this;\n\n    _classCallCheck(this, LabelView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LabelView).call(this, locale));\n    /**\n     * The text of the label.\n     *\n     * @observable\n     * @member {String} #text\n     */\n\n    _this.set('text');\n    /**\n     * The `for` attribute of the label (i.e. to pair with an `<input>` element).\n     *\n     * @observable\n     * @member {String} #for\n     */\n\n\n    _this.set('for');\n\n    var bind = _this.bindTemplate;\n\n    _this.setTemplate({\n      tag: 'label',\n      attributes: {\n        \"class\": ['ck', 'ck-label'],\n        \"for\": bind.to('for')\n      },\n      children: [{\n        text: bind.to('text')\n      }]\n    });\n\n    return _this;\n  }\n\n  return LabelView;\n}(View);\n\nexport { LabelView as default };","function _typeof(obj) {\n    if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {\n        _typeof = function _typeof(obj) {\n            return typeof obj;\n        };\n    } else {\n        _typeof = function _typeof(obj) {\n            return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n        };\n    }\n    return _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError('Cannot call a class as a function');\n    }\n}\nfunction _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if ('value' in descriptor)\n            descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps)\n        _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps)\n        _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === 'object' || typeof call === 'function')) {\n        return call;\n    }\n    return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError('this hasn\\'t been initialised - super() hasn\\'t been called');\n    }\n    return self;\n}\nfunction _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== 'function' && superClass !== null) {\n        throw new TypeError('Super expression must either be null or a function');\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass)\n        _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return _setPrototypeOf(o, p);\n}\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module ui/editorui/boxed/boxededitoruiview\n */\nimport EditorUIView from '../../editorui/editoruiview';\nimport LabelView from '../../label/labelview';\nimport uid from '@ckeditor/ckeditor5-utils/src/uid';\n/**\n * The boxed editor UI view class. This class represents an editor interface\n * consisting of a toolbar and an editable area, enclosed within a box.\n *\n * @extends module:ui/editorui/editoruiview~EditorUIView\n */\nvar BoxedEditorUIView = /*#__PURE__*/\nfunction (_EditorUIView) {\n    _inherits(BoxedEditorUIView, _EditorUIView);\n    /**\n   * Creates an instance of the boxed editor UI view class.\n   *\n   * @param {module:utils/locale~Locale} locale The locale instance..\n   */\n    function BoxedEditorUIView(locale) {\n        var _this;\n        _classCallCheck(this, BoxedEditorUIView);\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(BoxedEditorUIView).call(this, locale));\n        var ariaLabelUid = uid();\n        /**\n     * Collection of the child views located in the top (`.ck-editor__top`)\n     * area of the UI.\n     *\n     * @readonly\n     * @member {module:ui/viewcollection~ViewCollection}\n     */\n        _this.top = _this.createCollection();\n        /**\n     * Collection of the child views located in the main (`.ck-editor__main`)\n     * area of the UI.\n     *\n     * @readonly\n     * @member {module:ui/viewcollection~ViewCollection}\n     */\n        _this.main = _this.createCollection();\n        /**\n     * Voice label of the UI.\n     *\n     * @protected\n     * @readonly\n     * @member {module:ui/view~View} #_voiceLabelView\n     */\n        _this._voiceLabelView = _this._createVoiceLabel(ariaLabelUid);\n        _this.setTemplate({\n            tag: 'div',\n            attributes: {\n                'class': [\n                    'ck',\n                    'ck-reset',\n                    'ck-editor',\n                    'ck-rounded-corners'\n                ],\n                role: 'application',\n                dir: 'ltr',\n                lang: locale.language,\n                'aria-labelledby': 'ck-editor__aria-label_'.concat(ariaLabelUid)\n            },\n            children: [\n                _this._voiceLabelView,\n                {\n                    tag: 'div',\n                    attributes: {\n                        'class': [\n                            'ck',\n                            'ck-editor__top',\n                            'ck-reset_all'\n                        ],\n                        role: 'presentation'\n                    },\n                    children: _this.top\n                },\n                {\n                    tag: 'div',\n                    attributes: {\n                        'class': [\n                            'ck',\n                            'ck-editor__main'\n                        ],\n                        role: 'presentation'\n                    },\n                    children: _this.main\n                }\n            ]\n        });\n        return _this;\n    }\n    /**\n   * Creates a voice label view instance.\n   *\n   * @private\n   * @returns {module:ui/label/labelview~LabelView}\n   */\n    _createClass(BoxedEditorUIView, [{\n            key: '_createVoiceLabel',\n            value: function _createVoiceLabel(ariaLabelUid) {\n                var t = this.t;\n                var voiceLabel = new LabelView();\n                voiceLabel.text = t('r');\n                voiceLabel.extendTemplate({\n                    attributes: {\n                        id: 'ck-editor__aria-label_'.concat(ariaLabelUid),\n                        'class': 'ck-voice-label'\n                    }\n                });\n                return voiceLabel;\n            }\n        }]);\n    return BoxedEditorUIView;\n}(EditorUIView);\nexport {\n    BoxedEditorUIView as default\n};","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/editableui/editableuiview\n */\nimport View from '../view';\n/**\n * The editable UI view class.\n *\n * @extends module:ui/view~View\n */\n\nvar EditableUIView =\n/*#__PURE__*/\nfunction (_View) {\n  _inherits(EditableUIView, _View);\n\n  /**\n   * Creates an instance of EditableUIView class.\n   *\n   * @param {module:utils/locale~Locale} [locale] The locale instance.\n   * @param {module:engine/view/view~View} editingView The editing view instance the editable is related to.\n   * @param {HTMLElement} [editableElement] The editable element. If not specified, this view\n   * should create it. Otherwise, the existing element should be used.\n   */\n  function EditableUIView(locale, editingView, editableElement) {\n    var _this;\n\n    _classCallCheck(this, EditableUIView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditableUIView).call(this, locale));\n\n    _this.setTemplate({\n      tag: 'div',\n      attributes: {\n        \"class\": ['ck', 'ck-content', 'ck-editor__editable', 'ck-rounded-corners']\n      }\n    });\n    /**\n     * The name of the editable UI view.\n     *\n     * @member {String} #name\n     */\n\n\n    _this.name = null;\n    /**\n     * Controls whether the editable is focused, i.e. the user is typing in it.\n     *\n     * @observable\n     * @member {Boolean} #isFocused\n     */\n\n    _this.set('isFocused', false);\n    /**\n     * The element which is the main editable element (usually the one with `contentEditable=\"true\"`).\n     *\n     * @private\n     * @member {HTMLElement} #_editableElement\n     */\n\n\n    _this._editableElement = editableElement;\n    /**\n     * Whether an external {@link #_editableElement} was passed into the constructor, which also means\n     * the view will not render its {@link #template}.\n     *\n     * @private\n     * @member {Boolean} #_hasExternalElement\n     */\n\n    _this._hasExternalElement = !!_this._editableElement;\n    /**\n     * The editing view instance the editable is related to. Editable uses the editing\n     * view to dynamically modify its certain DOM attributes after {@link #render rendering}.\n     *\n     * **Note**: The DOM attributes are performed by the editing view and not UI\n     * {@link module:ui/view~View#bindTemplate template bindings} because once rendered,\n     * the editable DOM element must remain under the full control of the engine to work properly.\n     *\n     * @protected\n     * @member {module:engine/view/view~View} #isFocused\n     */\n\n    _this._editingView = editingView;\n    return _this;\n  }\n  /**\n   * Renders the view by either applying the {@link #template} to the existing\n   * {@link #_editableElement} or assigning {@link #element} as {@link #_editableElement}.\n   */\n\n\n  _createClass(EditableUIView, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      _get(_getPrototypeOf(EditableUIView.prototype), \"render\", this).call(this);\n\n      if (this._hasExternalElement) {\n        this.template.apply(this.element = this._editableElement);\n      } else {\n        this._editableElement = this.element;\n      }\n\n      this.on('change:isFocused', function () {\n        return _this2._updateIsFocusedClasses();\n      });\n\n      this._updateIsFocusedClasses();\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this._hasExternalElement) {\n        this.template.revert(this._editableElement);\n      }\n\n      _get(_getPrototypeOf(EditableUIView.prototype), \"destroy\", this).call(this);\n    }\n    /**\n     * Updates the `ck-focused` and `ck-blurred` CSS classes on the {@link #element} according to\n     * the {@link #isFocused} property value using the {@link #_editingView editing view} API.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_updateIsFocusedClasses\",\n    value: function _updateIsFocusedClasses() {\n      var editingView = this._editingView;\n\n      if (editingView.isRenderingInProgress) {\n        updateAfterRender(this);\n      } else {\n        update(this);\n      }\n\n      function update(view) {\n        editingView.change(function (writer) {\n          var viewRoot = editingView.document.getRoot(view.name);\n          writer.addClass(view.isFocused ? 'ck-focused' : 'ck-blurred', viewRoot);\n          writer.removeClass(view.isFocused ? 'ck-blurred' : 'ck-focused', viewRoot);\n        });\n      } // In a case of a multi-root editor, a callback will be attached more than once (one callback for each root).\n      // While executing one callback the `isRenderingInProgress` observable is changing what causes executing another\n      // callback and render is called inside the already pending render.\n      // We need to be sure that callback is executed only when the value has changed from `true` to `false`.\n      // See https://github.com/ckeditor/ckeditor5/issues/1676.\n\n\n      function updateAfterRender(view) {\n        editingView.once('change:isRenderingInProgress', function (evt, name, value) {\n          if (!value) {\n            update(view);\n          } else {\n            updateAfterRender(view);\n          }\n        });\n      }\n    }\n  }]);\n\n  return EditableUIView;\n}(View);\n\nexport { EditableUIView as default };","function _typeof(obj) {\n    if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {\n        _typeof = function _typeof(obj) {\n            return typeof obj;\n        };\n    } else {\n        _typeof = function _typeof(obj) {\n            return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n        };\n    }\n    return _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError('Cannot call a class as a function');\n    }\n}\nfunction _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if ('value' in descriptor)\n            descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps)\n        _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps)\n        _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === 'object' || typeof call === 'function')) {\n        return call;\n    }\n    return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError('this hasn\\'t been initialised - super() hasn\\'t been called');\n    }\n    return self;\n}\nfunction _get(target, property, receiver) {\n    if (typeof Reflect !== 'undefined' && Reflect.get) {\n        _get = Reflect.get;\n    } else {\n        _get = function _get(target, property, receiver) {\n            var base = _superPropBase(target, property);\n            if (!base)\n                return;\n            var desc = Object.getOwnPropertyDescriptor(base, property);\n            if (desc.get) {\n                return desc.get.call(receiver);\n            }\n            return desc.value;\n        };\n    }\n    return _get(target, property, receiver || target);\n}\nfunction _superPropBase(object, property) {\n    while (!Object.prototype.hasOwnProperty.call(object, property)) {\n        object = _getPrototypeOf(object);\n        if (object === null)\n            break;\n    }\n    return object;\n}\nfunction _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== 'function' && superClass !== null) {\n        throw new TypeError('Super expression must either be null or a function');\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass)\n        _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return _setPrototypeOf(o, p);\n}\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module ui/editableui/inline/inlineeditableuiview\n */\nimport EditableUIView from '../../editableui/editableuiview';\n/**\n * The inline editable UI class implementing an inline {@link module:ui/editableui/editableuiview~EditableUIView}.\n *\n * @extends module:ui/editableui/editableuiview~EditableUIView\n */\nvar InlineEditableUIView = /*#__PURE__*/\nfunction (_EditableUIView) {\n    _inherits(InlineEditableUIView, _EditableUIView);\n    /**\n   * Creates an instance of the InlineEditableUIView class.\n   *\n   * @param {module:utils/locale~Locale} [locale] The locale instance.\n   * @param {module:engine/view/view~View} editingView The editing view instance the editable is related to.\n   * @param {HTMLElement} [editableElement] The editable element. If not specified, the\n   * {@link module:ui/editableui/editableuiview~EditableUIView}\n   * will create it. Otherwise, the existing element will be used.\n   */\n    function InlineEditableUIView(locale, editingView, editableElement) {\n        var _this;\n        _classCallCheck(this, InlineEditableUIView);\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(InlineEditableUIView).call(this, locale, editingView, editableElement));\n        _this.extendTemplate({\n            attributes: {\n                role: 'textbox',\n                'class': 'ck-editor__editable_inline'\n            }\n        });\n        return _this;\n    }\n    /**\n   * @inheritDoc\n   */\n    _createClass(InlineEditableUIView, [{\n            key: 'render',\n            value: function render() {\n                var _this2 = this;\n                _get(_getPrototypeOf(InlineEditableUIView.prototype), 'render', this).call(this);\n                var editingView = this._editingView;\n                var t = this.t;\n                editingView.change(function (writer) {\n                    var viewRoot = editingView.document.getRoot(_this2.name);\n                    writer.setAttribute('aria-label', t('q', [_this2.name]), viewRoot);\n                });\n            }\n        }]);\n    return InlineEditableUIView;\n}(EditableUIView);\nexport {\n    InlineEditableUIView as default\n};","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/panel/sticky/stickypanelview\n */\nimport global from '@ckeditor/ckeditor5-utils/src/dom/global';\nimport View from '../../view';\nimport Template from '../../template';\nimport toUnit from '@ckeditor/ckeditor5-utils/src/dom/tounit';\nimport '../../../theme/components/panel/stickypanel.css';\nvar toPx = toUnit('px');\n/**\n * The sticky panel view class.\n */\n\nvar StickyPanelView =\n/*#__PURE__*/\nfunction (_View) {\n  _inherits(StickyPanelView, _View);\n\n  /**\n   * @inheritDoc\n   */\n  function StickyPanelView(locale) {\n    var _this;\n\n    _classCallCheck(this, StickyPanelView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StickyPanelView).call(this, locale));\n    var bind = _this.bindTemplate;\n    /**\n     * Controls whether the sticky panel should be active.\n     *\n     * @readonly\n     * @observable\n     * @member {Boolean} #isActive\n     */\n\n    _this.set('isActive', false);\n    /**\n     * Controls whether the sticky panel is in the \"sticky\" state.\n     *\n     * @readonly\n     * @observable\n     * @member {Boolean} #isSticky\n     */\n\n\n    _this.set('isSticky', false);\n    /**\n     * The limiter element for the sticky panel instance. Its bounding rect limits\n     * the \"stickyness\" of the panel, i.e. when the panel reaches the bottom\n     * edge of the limiter, it becomes sticky to that edge and does not float\n     * off the limiter. It is mandatory for the panel to work properly and once\n     * set, it cannot be changed.\n     *\n     * @readonly\n     * @observable\n     * @member {HTMLElement} #limiterElement\n     */\n\n\n    _this.set('limiterElement', null);\n    /**\n     * The offset from the bottom edge of {@link #limiterElement}\n     * which stops the panel from stickying any further to prevent limiter's content\n     * from being completely covered.\n     *\n     * @readonly\n     * @observable\n     * @default 50\n     * @member {Number} #limiterBottomOffset\n     */\n\n\n    _this.set('limiterBottomOffset', 50);\n    /**\n     * The offset from the top edge of the web browser's viewport which makes the\n     * panel become sticky. The default value is `0`, which means the panel becomes\n     * sticky when it's upper edge touches the top of the page viewport.\n     *\n     * This attribute is useful when the web page has UI elements positioned to the top\n     * either using `position: fixed` or `position: sticky`, which would cover the\n     * sticky panel or vice–versa (depending on the `z-index` hierarchy).\n     *\n     * @readonly\n     * @observable\n     * @default 0\n     * @member {Number} #viewportTopOffset\n     */\n\n\n    _this.set('viewportTopOffset', 0);\n    /**\n     * Controls the `margin-left` CSS style of the panel.\n     *\n     * @protected\n     * @readonly\n     * @observable\n     * @member {String} #_marginLeft\n     */\n\n\n    _this.set('_marginLeft', null);\n    /**\n     * Set `true` if the sticky panel reached the bottom edge of the\n     * {@link #limiterElement}.\n     *\n     * @protected\n     * @readonly\n     * @observable\n     * @member {Boolean} #_isStickyToTheLimiter\n     */\n\n\n    _this.set('_isStickyToTheLimiter', false);\n    /**\n     * Set `true` if the sticky panel uses the {@link #viewportTopOffset},\n     * i.e. not {@link #_isStickyToTheLimiter} and the {@link #viewportTopOffset}\n     * is not `0`.\n     *\n     * @protected\n     * @readonly\n     * @observable\n     * @member {Boolean} #_hasViewportTopOffset\n     */\n\n\n    _this.set('_hasViewportTopOffset', false);\n    /**\n     * Collection of the child views which creates balloon panel contents.\n     *\n     * @readonly\n     * @member {module:ui/viewcollection~ViewCollection}\n     */\n\n\n    _this.content = _this.createCollection();\n    /**\n     * The DOM bounding client rect of the {@link module:ui/view~View#element} of the panel.\n     *\n     * @protected\n     * @member {Object} #_panelRect\n     */\n\n    /**\n     * The DOM bounding client rect of the {@link #limiterElement}\n     * of the panel.\n     *\n     * @protected\n     * @member {Object} #_limiterRect\n     */\n\n    /**\n     * A dummy element which visually fills the space as long as the\n     * actual panel is sticky. It prevents flickering of the UI.\n     *\n     * @protected\n     * @property {HTMLElement}\n     */\n\n    _this._contentPanelPlaceholder = new Template({\n      tag: 'div',\n      attributes: {\n        \"class\": ['ck', 'ck-sticky-panel__placeholder'],\n        style: {\n          display: bind.to('isSticky', function (isSticky) {\n            return isSticky ? 'block' : 'none';\n          }),\n          height: bind.to('isSticky', function (isSticky) {\n            return isSticky ? toPx(_this._panelRect.height) : null;\n          })\n        }\n      }\n    }).render();\n    /**\n     * The panel which accepts children into {@link #content} collection.\n     * Also an element which is positioned when {@link #isSticky}.\n     *\n     * @protected\n     * @property {HTMLElement}\n     */\n\n    _this._contentPanel = new Template({\n      tag: 'div',\n      attributes: {\n        \"class\": ['ck', 'ck-sticky-panel__content', // Toggle class of the panel when \"sticky\" state changes in the view.\n        bind[\"if\"]('isSticky', 'ck-sticky-panel__content_sticky'), bind[\"if\"]('_isStickyToTheLimiter', 'ck-sticky-panel__content_sticky_bottom-limit')],\n        style: {\n          width: bind.to('isSticky', function (isSticky) {\n            return isSticky ? toPx(_this._contentPanelPlaceholder.getBoundingClientRect().width) : null;\n          }),\n          top: bind.to('_hasViewportTopOffset', function (_hasViewportTopOffset) {\n            return _hasViewportTopOffset ? toPx(_this.viewportTopOffset) : null;\n          }),\n          bottom: bind.to('_isStickyToTheLimiter', function (_isStickyToTheLimiter) {\n            return _isStickyToTheLimiter ? toPx(_this.limiterBottomOffset) : null;\n          }),\n          marginLeft: bind.to('_marginLeft')\n        }\n      },\n      children: _this.content\n    }).render();\n\n    _this.setTemplate({\n      tag: 'div',\n      attributes: {\n        \"class\": ['ck', 'ck-sticky-panel']\n      },\n      children: [_this._contentPanelPlaceholder, _this._contentPanel]\n    });\n\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(StickyPanelView, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      _get(_getPrototypeOf(StickyPanelView.prototype), \"render\", this).call(this); // Check if the panel should go into the sticky state immediately.\n\n\n      this._checkIfShouldBeSticky(); // Update sticky state of the panel as the window is being scrolled.\n\n\n      this.listenTo(global.window, 'scroll', function () {\n        _this2._checkIfShouldBeSticky();\n      }); // Synchronize with `model.isActive` because sticking an inactive panel is pointless.\n\n      this.listenTo(this, 'change:isActive', function () {\n        _this2._checkIfShouldBeSticky();\n      });\n    }\n    /**\n     * Analyzes the environment to decide whether the panel should\n     * be sticky or not.\n     *\n     * @protected\n     */\n\n  }, {\n    key: \"_checkIfShouldBeSticky\",\n    value: function _checkIfShouldBeSticky() {\n      var panelRect = this._panelRect = this._contentPanel.getBoundingClientRect();\n\n      var limiterRect;\n\n      if (!this.limiterElement) {\n        this.isSticky = false;\n      } else {\n        limiterRect = this._limiterRect = this.limiterElement.getBoundingClientRect(); // The panel must be active to become sticky.\n\n        this.isSticky = this.isActive && // The limiter's top edge must be beyond the upper edge of the visible viewport (+the viewportTopOffset).\n        limiterRect.top < this.viewportTopOffset && // The model#limiterElement's height mustn't be smaller than the panel's height and model#limiterBottomOffset.\n        // There's no point in entering the sticky mode if the model#limiterElement is very, very small, because\n        // it would immediately set model#_isStickyToTheLimiter true and, given model#limiterBottomOffset, the panel\n        // would be positioned before the model#limiterElement.\n        this._panelRect.height + this.limiterBottomOffset < limiterRect.height;\n      } // Stick the panel to the top edge of the viewport simulating CSS position:sticky.\n      // TODO: Possibly replaced by CSS in the future http://caniuse.com/#feat=css-sticky\n\n\n      if (this.isSticky) {\n        this._isStickyToTheLimiter = limiterRect.bottom < panelRect.height + this.limiterBottomOffset + this.viewportTopOffset;\n        this._hasViewportTopOffset = !this._isStickyToTheLimiter && !!this.viewportTopOffset;\n        this._marginLeft = this._isStickyToTheLimiter ? null : toPx(-global.window.scrollX);\n      } // Detach the panel from the top edge of the viewport.\n      else {\n          this._isStickyToTheLimiter = false;\n          this._hasViewportTopOffset = false;\n          this._marginLeft = null;\n        }\n    }\n  }]);\n\n  return StickyPanelView;\n}(View);\n\nexport { StickyPanelView as default };","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/tounit\n */\n\n/**\n * Returns a helper function, which adds a desired trailing\n * `unit` to the passed value.\n *\n * @param {String} unit An unit like \"px\" or \"em\".\n * @returns {module:utils/dom/tounit~helper}\n */\nexport default function toUnit(unit) {\n  /**\n   * A function, which adds a pre–defined trailing `unit`\n   * to the passed `value`.\n   *\n   * @function helper\n  \t * @param {*} value A value to be given the unit.\n  \t * @returns {String} A value with the trailing unit.\n   */\n  return function (value) {\n    return value + unit;\n  };\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/focuscycler\n */\nimport global from '@ckeditor/ckeditor5-utils/src/dom/global';\n/**\n * A utility class that helps cycling over focusable {@link module:ui/view~View views} in a\n * {@link module:ui/viewcollection~ViewCollection} when the focus is tracked by the\n * {@link module:utils/focustracker~FocusTracker} instance. It helps implementing keyboard\n * navigation in HTML forms, toolbars, lists and the like.\n *\n * To work properly it requires:\n * * a collection of focusable (HTML `tabindex` attribute) views that implement the `focus()` method,\n * * an associated focus tracker to determine which view is focused.\n *\n * A simple cycler setup can look like this:\n *\n *\t\tconst focusables = new ViewCollection();\n *\t\tconst focusTracker = new FocusTracker();\n *\n *\t\t// Add focusable views to the focus tracker.\n *\t\tfocusTracker.add( ... );\n *\n * Then, the cycler can be used manually:\n *\n *\t\tconst cycler = new FocusCycler( { focusables, focusTracker } );\n *\n *\t\t// Will focus the first focusable view in #focusables.\n *\t\tcycler.focusFirst();\n *\n *\t\t// Will log the next focusable item in #focusables.\n *\t\tconsole.log( cycler.next );\n *\n * Alternatively, it can work side by side with the {@link module:utils/keystrokehandler~KeystrokeHandler}:\n *\n *\t\tconst keystrokeHandler = new KeystrokeHandler();\n *\n *\t\t// Activate the keystroke handler.\n *\t\tkeystrokeHandler.listenTo( sourceOfEvents );\n *\n *\t\tconst cycler = new FocusCycler( {\n *\t\t\tfocusables, focusTracker, keystrokeHandler,\n *\t\t\tactions: {\n *\t\t\t\t// When arrowup of arrowleft is detected by the #keystrokeHandler,\n *\t\t\t\t// focusPrevious() will be called on the cycler.\n *\t\t\t\tfocusPrevious: [ 'arrowup', 'arrowleft' ],\n *\t\t\t}\n *\t\t} );\n */\n\nvar FocusCycler =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of the focus cycler utility.\n   *\n   * @param {Object} options Configuration options.\n   * @param {module:utils/collection~Collection|Object} options.focusables\n   * @param {module:utils/focustracker~FocusTracker} options.focusTracker\n   * @param {module:utils/keystrokehandler~KeystrokeHandler} [options.keystrokeHandler]\n   * @param {Object} [options.actions]\n   */\n  function FocusCycler(options) {\n    var _this = this;\n\n    _classCallCheck(this, FocusCycler);\n\n    Object.assign(this, options);\n    /**\n     * A {@link module:ui/view~View view} collection that the cycler operates on.\n     *\n     * @readonly\n     * @member {module:utils/collection~Collection} #focusables\n     */\n\n    /**\n     * A focus tracker instance that the cycler uses to determine the current focus\n     * state in {@link #focusables}.\n     *\n     * @readonly\n     * @member {module:utils/focustracker~FocusTracker} #focusTracker\n     */\n\n    /**\n     * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}\n     * which can respond to certain keystrokes and cycle the focus.\n     *\n     * @readonly\n     * @member {module:utils/keystrokehandler~KeystrokeHandler} #keystrokeHandler\n     */\n\n    /**\n     * Actions that the cycler can take when a keystroke is pressed. Requires\n     * `options.keystrokeHandler` to be passed and working. When an action is\n     * performed, `preventDefault` and `stopPropagation` will be called on the event\n     * the keystroke fired in the DOM.\n     *\n     *\t\tactions: {\n     *\t\t\t// Will call #focusPrevious() when arrowleft or arrowup is pressed.\n     *\t\t\tfocusPrevious: [ 'arrowleft', 'arrowup' ],\n     *\n     *\t\t\t// Will call #focusNext() when arrowdown is pressed.\n     *\t\t\tfocusNext: 'arrowdown'\n     *\t\t}\n     *\n     * @readonly\n     * @member {Object} #actions\n     */\n\n    if (options.actions && options.keystrokeHandler) {\n      var _loop = function _loop(methodName) {\n        var actions = options.actions[methodName];\n\n        if (typeof actions == 'string') {\n          actions = [actions];\n        }\n\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = actions[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var keystroke = _step.value;\n            options.keystrokeHandler.set(keystroke, function (data, cancel) {\n              _this[methodName]();\n\n              cancel();\n            });\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n              _iterator[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      };\n\n      for (var methodName in options.actions) {\n        _loop(methodName);\n      }\n    }\n  }\n  /**\n   * Returns the first focusable view in {@link #focusables}.\n   * Returns `null` if there is none.\n   *\n   * @readonly\n   * @member {module:ui/view~View|null} #first\n   */\n\n\n  _createClass(FocusCycler, [{\n    key: \"focusFirst\",\n\n    /**\n     * Focuses the {@link #first} item in {@link #focusables}.\n     */\n    value: function focusFirst() {\n      this._focus(this.first);\n    }\n    /**\n     * Focuses the {@link #last} item in {@link #focusables}.\n     */\n\n  }, {\n    key: \"focusLast\",\n    value: function focusLast() {\n      this._focus(this.last);\n    }\n    /**\n     * Focuses the {@link #next} item in {@link #focusables}.\n     */\n\n  }, {\n    key: \"focusNext\",\n    value: function focusNext() {\n      this._focus(this.next);\n    }\n    /**\n     * Focuses the {@link #previous} item in {@link #focusables}.\n     */\n\n  }, {\n    key: \"focusPrevious\",\n    value: function focusPrevious() {\n      this._focus(this.previous);\n    }\n    /**\n     * Focuses the given view if it exists.\n     *\n     * @protected\n     * @param {module:ui/view~View} view\n     */\n\n  }, {\n    key: \"_focus\",\n    value: function _focus(view) {\n      if (view) {\n        view.focus();\n      }\n    }\n    /**\n     * Returns the next or previous focusable view in {@link #focusables} with respect\n     * to {@link #current}.\n     *\n     * @protected\n     * @param {Number} step Either `1` for checking forward from {@link #current} or\n     * `-1` for checking backwards.\n     * @returns {module:ui/view~View|null}\n     */\n\n  }, {\n    key: \"_getFocusableItem\",\n    value: function _getFocusableItem(step) {\n      // Cache for speed.\n      var current = this.current;\n      var collectionLength = this.focusables.length;\n\n      if (!collectionLength) {\n        return null;\n      } // Start from the beginning if no view is focused.\n      // https://github.com/ckeditor/ckeditor5-ui/issues/206\n\n\n      if (current === null) {\n        return this[step === 1 ? 'first' : 'last'];\n      } // Cycle in both directions.\n\n\n      var index = (current + collectionLength + step) % collectionLength;\n\n      do {\n        var view = this.focusables.get(index); // TODO: Check if view is visible.\n\n        if (isFocusable(view)) {\n          return view;\n        } // Cycle in both directions.\n\n\n        index = (index + collectionLength + step) % collectionLength;\n      } while (index !== current);\n\n      return null;\n    }\n  }, {\n    key: \"first\",\n    get: function get() {\n      return this.focusables.find(isFocusable) || null;\n    }\n    /**\n     * Returns the last focusable view in {@link #focusables}.\n     * Returns `null` if there is none.\n     *\n     * @readonly\n     * @member {module:ui/view~View|null} #last\n     */\n\n  }, {\n    key: \"last\",\n    get: function get() {\n      return this.focusables.filter(isFocusable).slice(-1)[0] || null;\n    }\n    /**\n     * Returns the next focusable view in {@link #focusables} based on {@link #current}.\n     * Returns `null` if there is none.\n     *\n     * @readonly\n     * @member {module:ui/view~View|null} #next\n     */\n\n  }, {\n    key: \"next\",\n    get: function get() {\n      return this._getFocusableItem(1);\n    }\n    /**\n     * Returns the previous focusable view in {@link #focusables} based on {@link #current}.\n     * Returns `null` if there is none.\n     *\n     * @readonly\n     * @member {module:ui/view~View|null} #previous\n     */\n\n  }, {\n    key: \"previous\",\n    get: function get() {\n      return this._getFocusableItem(-1);\n    }\n    /**\n     * An index of the view in the {@link #focusables} which is focused according\n     * to {@link #focusTracker}. Returns `null` when there is no such view.\n     *\n     * @readonly\n     * @member {Number|null} #current\n     */\n\n  }, {\n    key: \"current\",\n    get: function get() {\n      var _this2 = this;\n\n      var index = null; // There's no focused view in the focusables.\n\n      if (this.focusTracker.focusedElement === null) {\n        return null;\n      }\n\n      this.focusables.find(function (view, viewIndex) {\n        var focused = view.element === _this2.focusTracker.focusedElement;\n\n        if (focused) {\n          index = viewIndex;\n        }\n\n        return focused;\n      });\n      return index;\n    }\n  }]);\n\n  return FocusCycler;\n}(); // Checks whether a view is focusable.\n//\n// @private\n// @param {module:ui/view~View} view A view to be checked.\n// @returns {Boolean}\n\n\nexport { FocusCycler as default };\n\nfunction isFocusable(view) {\n  return !!(view.focus && global.window.getComputedStyle(view.element).display != 'none');\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/toolbar/toolbarseparatorview\n */\nimport View from '../view';\n/**\n * The toolbar separator view class.\n *\n * @extends module:ui/view~View\n */\n\nvar ToolbarSeparatorView =\n/*#__PURE__*/\nfunction (_View) {\n  _inherits(ToolbarSeparatorView, _View);\n\n  /**\n   * @inheritDoc\n   */\n  function ToolbarSeparatorView(locale) {\n    var _this;\n\n    _classCallCheck(this, ToolbarSeparatorView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ToolbarSeparatorView).call(this, locale));\n\n    _this.setTemplate({\n      tag: 'span',\n      attributes: {\n        \"class\": ['ck', 'ck-toolbar__separator']\n      }\n    });\n\n    return _this;\n  }\n\n  return ToolbarSeparatorView;\n}(View);\n\nexport { ToolbarSeparatorView as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/toolbar/toolbarview\n */\nimport View from '../view';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport FocusCycler from '../focuscycler';\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\nimport ToolbarSeparatorView from './toolbarseparatorview';\nimport preventDefault from '../bindings/preventdefault.js';\nimport log from '@ckeditor/ckeditor5-utils/src/log';\nimport '../../theme/components/toolbar/toolbar.css';\n/**\n * The toolbar view class.\n *\n * @extends module:ui/view~View\n * @implements module:ui/dropdown/dropdownpanelfocusable~DropdownPanelFocusable\n */\n\nvar ToolbarView =\n/*#__PURE__*/\nfunction (_View) {\n  _inherits(ToolbarView, _View);\n\n  /**\n   * @inheritDoc\n   */\n  function ToolbarView(locale) {\n    var _this;\n\n    _classCallCheck(this, ToolbarView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ToolbarView).call(this, locale));\n    var bind = _this.bindTemplate;\n    /**\n     * Collection of the toolbar items (like buttons).\n     *\n     * @readonly\n     * @member {module:ui/viewcollection~ViewCollection}\n     */\n\n    _this.items = _this.createCollection();\n    /**\n     * Tracks information about DOM focus in the list.\n     *\n     * @readonly\n     * @member {module:utils/focustracker~FocusTracker}\n     */\n\n    _this.focusTracker = new FocusTracker();\n    /**\n     * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n     *\n     * @readonly\n     * @member {module:utils/keystrokehandler~KeystrokeHandler}\n     */\n\n    _this.keystrokes = new KeystrokeHandler();\n    /**\n     * Controls the orientation of toolbar items.\n     *\n     * @observable\n     * @member {Boolean} #isVertical\n     */\n\n    _this.set('isVertical', false);\n    /**\n     * An additional CSS class added to the {@link #element}.\n     *\n     * @observable\n     * @member {String} #class\n     */\n\n\n    _this.set('class');\n    /**\n     * Helps cycling over focusable {@link #items} in the toolbar.\n     *\n     * @readonly\n     * @protected\n     * @member {module:ui/focuscycler~FocusCycler}\n     */\n\n\n    _this._focusCycler = new FocusCycler({\n      focusables: _this.items,\n      focusTracker: _this.focusTracker,\n      keystrokeHandler: _this.keystrokes,\n      actions: {\n        // Navigate toolbar items backwards using the arrow[left,up] keys.\n        focusPrevious: ['arrowleft', 'arrowup'],\n        // Navigate toolbar items forwards using the arrow[right,down] keys.\n        focusNext: ['arrowright', 'arrowdown']\n      }\n    });\n\n    _this.setTemplate({\n      tag: 'div',\n      attributes: {\n        \"class\": ['ck', 'ck-toolbar', bind[\"if\"]('isVertical', 'ck-toolbar_vertical'), bind.to('class')]\n      },\n      children: _this.items,\n      on: {\n        // https://github.com/ckeditor/ckeditor5-ui/issues/206\n        mousedown: preventDefault(_assertThisInitialized(_this))\n      }\n    });\n\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(ToolbarView, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      _get(_getPrototypeOf(ToolbarView.prototype), \"render\", this).call(this); // Items added before rendering should be known to the #focusTracker.\n\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.items[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n          this.focusTracker.add(item.element);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      this.items.on('add', function (evt, item) {\n        _this2.focusTracker.add(item.element);\n      });\n      this.items.on('remove', function (evt, item) {\n        _this2.focusTracker.remove(item.element);\n      }); // Start listening for the keystrokes coming from #element.\n\n      this.keystrokes.listenTo(this.element);\n    }\n    /**\n     * Focuses the first focusable in {@link #items}.\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this._focusCycler.focusFirst();\n    }\n    /**\n     * Focuses the last focusable in {@link #items}.\n     */\n\n  }, {\n    key: \"focusLast\",\n    value: function focusLast() {\n      this._focusCycler.focusLast();\n    }\n    /**\n     * A utility which expands a plain toolbar configuration into\n     * {@link module:ui/toolbar/toolbarview~ToolbarView#items} using a given component factory.\n     *\n     * @param {Array.<String>} config The toolbar items config.\n     * @param {module:ui/componentfactory~ComponentFactory} factory A factory producing toolbar items.\n     */\n\n  }, {\n    key: \"fillFromConfig\",\n    value: function fillFromConfig(config, factory) {\n      var _this3 = this;\n\n      config.map(function (name) {\n        if (name == '|') {\n          _this3.items.add(new ToolbarSeparatorView());\n        } else if (factory.has(name)) {\n          _this3.items.add(factory.create(name));\n        } else {\n          /**\n           * There was a problem processing the configuration of the toolbar. The item with the given\n           * name does not exist so it was omitted when rendering the toolbar.\n           *\n           * This warning usually shows up when the {@link module:core/plugin~Plugin} which is supposed\n           * to provide a toolbar item has not been loaded or there is a typo in the configuration.\n           *\n           * Make sure the plugin responsible for this toolbar item is loaded and the toolbar configuration\n           * is correct, e.g. {@link module:basic-styles/bold~Bold} is loaded for the `'bold'` toolbar item.\n           *\n           * You can use the following snippet to retrieve all available toolbar items:\n           *\n           *\t\tArray.from( editor.ui.componentFactory.names() );\n           *\n           * @error toolbarview-item-unavailable\n           * @param {String} name The name of the component.\n           */\n          log.warn('toolbarview-item-unavailable: The requested toolbar item is unavailable.', {\n            name: name\n          });\n        }\n      });\n    }\n  }]);\n\n  return ToolbarView;\n}(View);\n\nexport { ToolbarView as default };","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/bindings/preventdefault\n */\n\n/**\n * A helper which executes a native `Event.preventDefault()` if the target of an event equals the\n * {@link module:ui/view~View#element element of the view}. It shortens the definition of a\n * {@link module:ui/view~View#template template}.\n *\n *\t\t// In a class extending View.\n *\t\timport preventDefault from '@ckeditor/ckeditor5-ui/src/bindings/preventdefault';\n *\n *\t\t// ...\n *\n *\t\tthis.setTemplate( {\n *\t\t\ttag: 'div',\n *\n *\t\t\ton: {\n *\t\t\t\t// Prevent the default mousedown action on this view.\n *\t\t\t\tmousedown: preventDefault( this )\n *\t\t\t}\n *\t\t} );\n *\n * @param {module:ui/view~View} view View instance that defines the template.\n * @returns {module:ui/template~TemplateToBinding}\n */\nexport default function preventDefault(view) {\n  return view.bindTemplate.to(function (evt) {\n    if (evt.target === view.element) {\n      evt.preventDefault();\n    }\n  });\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module editor-classic/classiceditoruiview\n */\nimport BoxedEditorUIView from '@ckeditor/ckeditor5-ui/src/editorui/boxed/boxededitoruiview';\nimport InlineEditableUIView from '@ckeditor/ckeditor5-ui/src/editableui/inline/inlineeditableuiview';\nimport StickyPanelView from '@ckeditor/ckeditor5-ui/src/panel/sticky/stickypanelview';\nimport ToolbarView from '@ckeditor/ckeditor5-ui/src/toolbar/toolbarview';\nimport '../theme/classiceditor.css';\n/**\n * Classic editor UI view. Uses an inline editable and a sticky toolbar, all\n * enclosed in a boxed UI view.\n *\n * @extends module:ui/editorui/boxed/boxededitoruiview~BoxedEditorUIView\n */\n\nvar ClassicEditorUIView =\n/*#__PURE__*/\nfunction (_BoxedEditorUIView) {\n  _inherits(ClassicEditorUIView, _BoxedEditorUIView);\n\n  /**\n   * Creates an instance of the classic editor UI view.\n   *\n   * @param {module:utils/locale~Locale} locale The {@link module:core/editor/editor~Editor#locale} instance.\n   * @param {module:engine/view/view~View} editingView The editing view instance this view is related to.\n   */\n  function ClassicEditorUIView(locale, editingView) {\n    var _this;\n\n    _classCallCheck(this, ClassicEditorUIView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ClassicEditorUIView).call(this, locale));\n    /**\n     * Sticky panel view instance. This is a parent view of a {@link #toolbar}\n     * that makes toolbar sticky.\n     *\n     * @readonly\n     * @member {module:ui/panel/sticky/stickypanelview~StickyPanelView}\n     */\n\n    _this.stickyPanel = new StickyPanelView(locale);\n    /**\n     * Toolbar view instance.\n     *\n     * @readonly\n     * @member {module:ui/toolbar/toolbarview~ToolbarView}\n     */\n\n    _this.toolbar = new ToolbarView(locale);\n    /**\n     * Editable UI view.\n     *\n     * @readonly\n     * @member {module:ui/editableui/inline/inlineeditableuiview~InlineEditableUIView}\n     */\n\n    _this.editable = new InlineEditableUIView(locale, editingView);\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(ClassicEditorUIView, [{\n    key: \"render\",\n    value: function render() {\n      _get(_getPrototypeOf(ClassicEditorUIView.prototype), \"render\", this).call(this); // Set toolbar as a child of a stickyPanel and makes toolbar sticky.\n\n\n      this.stickyPanel.content.add(this.toolbar);\n      this.top.add(this.stickyPanel);\n      this.main.add(this.editable);\n    }\n  }]);\n\n  return ClassicEditorUIView;\n}(BoxedEditorUIView);\n\nexport { ClassicEditorUIView as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module editor-classic/classiceditor\n */\nimport Editor from '@ckeditor/ckeditor5-core/src/editor/editor';\nimport DataApiMixin from '@ckeditor/ckeditor5-core/src/editor/utils/dataapimixin';\nimport ElementApiMixin from '@ckeditor/ckeditor5-core/src/editor/utils/elementapimixin';\nimport attachToForm from '@ckeditor/ckeditor5-core/src/editor/utils/attachtoform';\nimport HtmlDataProcessor from '@ckeditor/ckeditor5-engine/src/dataprocessor/htmldataprocessor';\nimport ClassicEditorUI from './classiceditorui';\nimport ClassicEditorUIView from './classiceditoruiview';\nimport getDataFromElement from '@ckeditor/ckeditor5-utils/src/dom/getdatafromelement';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport { isElement } from 'lodash-es';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * The {@glink builds/guides/overview#classic-editor classic editor} implementation.\n * It uses an inline editable and a sticky toolbar, all enclosed in a boxed UI.\n * See the {@glink examples/builds/classic-editor demo}.\n *\n * In order to create a classic editor instance, use the static\n * {@link module:editor-classic/classiceditor~ClassicEditor.create `ClassicEditor.create()`} method.\n *\n * # Classic editor and classic build\n *\n * The classic editor can be used directly from source (if you installed the\n * [`@ckeditor/ckeditor5-editor-classic`](https://www.npmjs.com/package/@ckeditor/ckeditor5-editor-classic) package)\n * but it is also available in the {@glink builds/guides/overview#classic-editor classic build}.\n *\n * {@glink builds/guides/overview Builds} are ready-to-use editors with plugins bundled in. When using the editor from\n * source you need to take care of loading all plugins by yourself\n * (through the {@link module:core/editor/editorconfig~EditorConfig#plugins `config.plugins`} option).\n * Using the editor from source gives much better flexibility and allows easier customization.\n *\n * Read more about initializing the editor from source or as a build in\n * {@link module:editor-classic/classiceditor~ClassicEditor.create `ClassicEditor.create()`}.\n *\n * @mixes module:core/editor/utils/dataapimixin~DataApiMixin\n * @mixes module:core/editor/utils/elementapimixin~ElementApiMixin\n * @implements module:core/editor/editorwithui~EditorWithUI\n * @extends module:core/editor/editor~Editor\n */\n\nvar ClassicEditor =\n/*#__PURE__*/\nfunction (_Editor) {\n  _inherits(ClassicEditor, _Editor);\n\n  /**\n   * Creates an instance of the classic editor.\n   *\n   * **Note:** do not use the constructor to create editor instances. Use the static\n   * {@link module:editor-classic/classiceditor~ClassicEditor.create `ClassicEditor.create()`} method instead.\n   *\n   * @protected\n   * @param {HTMLElement|String} sourceElementOrData The DOM element that will be the source for the created editor\n   * or the editor's initial data. For more information see\n   * {@link module:editor-classic/classiceditor~ClassicEditor.create `ClassicEditor.create()`}.\n   * @param {module:core/editor/editorconfig~EditorConfig} config The editor configuration.\n   */\n  function ClassicEditor(sourceElementOrData, config) {\n    var _this;\n\n    _classCallCheck(this, ClassicEditor);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ClassicEditor).call(this, config));\n\n    if (isElement(sourceElementOrData)) {\n      _this.sourceElement = sourceElementOrData;\n    }\n\n    _this.data.processor = new HtmlDataProcessor();\n\n    _this.model.document.createRoot();\n\n    _this.ui = new ClassicEditorUI(_assertThisInitialized(_this), new ClassicEditorUIView(_this.locale, _this.editing.view));\n    attachToForm(_assertThisInitialized(_this));\n    return _this;\n  }\n  /**\n   * Destroys the editor instance, releasing all resources used by it.\n   *\n   * Updates the editor's source element with the data.\n   *\n   * @returns {Promise}\n   */\n\n\n  _createClass(ClassicEditor, [{\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.sourceElement) {\n        this.updateSourceElement();\n      }\n\n      this.ui.destroy();\n      return _get(_getPrototypeOf(ClassicEditor.prototype), \"destroy\", this).call(this);\n    }\n    /**\n     * Creates a new classic editor instance.\n     *\n     * There are three ways how the editor can be initialized.\n     *\n     * # Replacing a DOM element (and loading data from it)\n     *\n     * You can initialize the editor using an existing DOM element:\n     *\n     *\t\tClassicEditor\n     *\t\t\t.create( document.querySelector( '#editor' ) )\n     *\t\t\t.then( editor => {\n     *\t\t\t\tconsole.log( 'Editor was initialized', editor );\n     *\t\t\t} )\n     *\t\t\t.catch( err => {\n     *\t\t\t\tconsole.error( err.stack );\n     *\t\t\t} );\n     *\n     * The element's content will be used as the editor data and the element will be replaced by the editor UI.\n     *\n     * # Creating a detached editor\n     *\n     * Alternatively, you can initialize the editor by passing the initial data directly as a string.\n     * In this case, the editor will render an element that must be inserted into the DOM:\n     *\n     *\t\tClassicEditor\n     *\t\t\t.create( '<p>Hello world!</p>' )\n     *\t\t\t.then( editor => {\n     *\t\t\t\tconsole.log( 'Editor was initialized', editor );\n     *\n     *\t\t\t\t// Initial data was provided so the editor UI element needs to be added manually to the DOM.\n     *\t\t\t\tdocument.body.appendChild( editor.ui.element );\n     *\t\t\t} )\n     *\t\t\t.catch( err => {\n     *\t\t\t\tconsole.error( err.stack );\n     *\t\t\t} );\n     *\n     * This lets you dynamically append the editor to your web page whenever it is convenient for you. You may use this method if your\n     * web page content is generated on the client side and the DOM structure is not ready at the moment when you initialize the editor.\n     *\n     * # Replacing a DOM element (and data provided in `config.initialData`)\n     *\n     * You can also mix these two ways by providing a DOM element to be used and passing the initial data through the configuration:\n     *\n     *\t\tClassicEditor\n     *\t\t\t.create( document.querySelector( '#editor' ), {\n     *\t\t\t\tinitialData: '<h2>Initial data</h2><p>Foo bar.</p>'\n     *\t\t\t} )\n     *\t\t\t.then( editor => {\n     *\t\t\t\tconsole.log( 'Editor was initialized', editor );\n     *\t\t\t} )\n     *\t\t\t.catch( err => {\n     *\t\t\t\tconsole.error( err.stack );\n     *\t\t\t} );\n     *\n     * This method can be used to initialize the editor on an existing element with the specified content in case if your integration\n     * makes it difficult to set the content of the source element.\n     *\n     * Note that an error will be thrown if you pass the initial data both as the first parameter and also in the configuration.\n     *\n     * # Configuring the editor\n     *\n     * See the {@link module:core/editor/editorconfig~EditorConfig editor configuration documentation} to learn more about\n     * customizing plugins, toolbar and more.\n     *\n     * # Using the editor from source\n     *\n     * The code samples listed in the previous sections of this documentation assume that you are using an\n     * {@glink builds/guides/overview editor build} (for example – `@ckeditor/ckeditor5-build-classic`).\n     *\n     * If you want to use the classic editor from source (`@ckeditor/ckeditor5-editor-classic/src/classiceditor`),\n     * you need to define the list of\n     * {@link module:core/editor/editorconfig~EditorConfig#plugins plugins to be initialized} and\n     * {@link module:core/editor/editorconfig~EditorConfig#toolbar toolbar items}. Read more about using the editor from\n     * source in the {@glink builds/guides/integration/advanced-setup \"Advanced setup\" guide}.\n     *\n     * @param {HTMLElement|String} sourceElementOrData The DOM element that will be the source for the created editor\n     * or the editor's initial data.\n     *\n     * If a DOM element is passed, its content will be automatically loaded to the editor upon initialization\n     * and the {@link module:editor-classic/classiceditorui~ClassicEditorUI#element editor element} will replace the passed element\n     * in the DOM (the original one will be hidden and the editor will be injected next to it).\n     *\n     * Moreover, the editor data will be set back to the original element once the editor is destroyed and when a form, in which\n     * this element is contained, is submitted (if the original element is a `<textarea>`). This ensures seamless integration with native\n     * web forms.\n     *\n     * If the initial data is passed, a detached editor will be created. In this case you need to insert it into the DOM manually.\n     * It is available under the {@link module:editor-classic/classiceditorui~ClassicEditorUI#element `editor.ui.element`} property.\n     *\n     * @param {module:core/editor/editorconfig~EditorConfig} [config] The editor configuration.\n     * @returns {Promise} A promise resolved once the editor is ready. The promise resolves with the created editor instance.\n     */\n\n  }], [{\n    key: \"create\",\n    value: function create(sourceElementOrData) {\n      var _this2 = this;\n\n      var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return new Promise(function (resolve) {\n        var editor = new _this2(sourceElementOrData, config);\n        resolve(editor.initPlugins().then(function () {\n          return editor.ui.init(isElement(sourceElementOrData) ? sourceElementOrData : null);\n        }).then(function () {\n          if (!isElement(sourceElementOrData) && config.initialData) {\n            // Documented in core/editor/editorconfig.jdoc.\n            throw new CKEditorError('editor-create-initial-data: ' + 'The config.initialData option cannot be used together with initial data passed in Editor.create().', null);\n          }\n\n          var initialData = config.initialData || getInitialData(sourceElementOrData);\n          return editor.data.init(initialData);\n        }).then(function () {\n          return editor.fire('ready');\n        }).then(function () {\n          return editor;\n        }));\n      });\n    }\n  }]);\n\n  return ClassicEditor;\n}(Editor);\n\nexport { ClassicEditor as default };\nmix(ClassicEditor, DataApiMixin);\nmix(ClassicEditor, ElementApiMixin);\n\nfunction getInitialData(sourceElementOrData) {\n  return isElement(sourceElementOrData) ? getDataFromElement(sourceElementOrData) : sourceElementOrData;\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\nimport { isFunction } from 'lodash-es';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * @module core/editor/utils/attachtoform\n */\n\n/**\n * Checks if the editor is initialized on a `<textarea>` element that belongs to a form. If yes, it updates the editor's element\n * content before submitting the form.\n *\n * This helper requires the {@link module:core/editor/utils/elementapimixin~ElementApi ElementApi interface}.\n *\n * @param {module:core/editor/editor~Editor} editor Editor instance.\n */\n\nexport default function attachToForm(editor) {\n  if (!isFunction(editor.updateSourceElement)) {\n    /**\n     * The editor passed to `attachToForm()` must implement the\n     * {@link module:core/editor/utils/elementapimixin~ElementApi} interface.\n     *\n     * @error attachtoform-missing-elementapi-interface\n     */\n    throw new CKEditorError('attachtoform-missing-elementapi-interface: Editor passed to attachToForm() must implement ElementApi.', editor);\n  }\n\n  var sourceElement = editor.sourceElement; // Only when replacing a textarea which is inside of a form element.\n\n  if (sourceElement && sourceElement.tagName.toLowerCase() === 'textarea' && sourceElement.form) {\n    var originalSubmit;\n    var form = sourceElement.form;\n\n    var onSubmit = function onSubmit() {\n      return editor.updateSourceElement();\n    }; // Replace the original form#submit() to call a custom submit function first.\n    // Check if #submit is a function because the form might have an input named \"submit\".\n\n\n    if (isFunction(form.submit)) {\n      originalSubmit = form.submit;\n\n      form.submit = function () {\n        onSubmit();\n        originalSubmit.apply(form);\n      };\n    } // Update the replaced textarea with data before each form#submit event.\n\n\n    form.addEventListener('submit', onSubmit); // Remove the submit listener and revert the original submit method on\n    // editor#destroy.\n\n    editor.on('destroy', function () {\n      form.removeEventListener('submit', onSubmit);\n\n      if (originalSubmit) {\n        form.submit = originalSubmit;\n      }\n    });\n  }\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* globals HTMLTextAreaElement */\n\n/**\n * @module utils/dom/getdatafromelement\n */\n\n/**\n * Gets data from a given source element.\n *\n * @param {HTMLElement} el The element from which the data will be retrieved.\n * @returns {String} The data string.\n */\nexport default function getDataFromElement(el) {\n  if (el instanceof HTMLTextAreaElement) {\n    return el.value;\n  }\n\n  return el.innerHTML;\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module core/plugin\n */\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n/**\n * The base class for CKEditor plugin classes.\n *\n * @implements module:core/plugin~PluginInterface\n * @mixes module:utils/observablemixin~ObservableMixin\n */\n\nvar Plugin =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @inheritDoc\n   */\n  function Plugin(editor) {\n    _classCallCheck(this, Plugin);\n\n    /**\n     * The editor instance.\n     *\n     * Note that most editors implement the {@link module:core/editor/editorwithui~EditorWithUI} interface in addition\n     * to the base {@link module:core/editor/editor~Editor} interface. However, editors with an external UI\n     * (i.e. Bootstrap-based) or a headless editor may not implement the {@link module:core/editor/editorwithui~EditorWithUI}\n     * interface.\n     *\n     * Because of above, to make plugins more universal, it is recommended to split features into:\n     *  - The \"editing\" part that only uses the {@link module:core/editor/editor~Editor} interface.\n     *  - The \"UI\" part that uses both the {@link module:core/editor/editor~Editor} interface and\n     *  the {@link module:core/editor/editorwithui~EditorWithUI} interface.\n     *\n     * @readonly\n     * @member {module:core/editor/editor~Editor} #editor\n     */\n    this.editor = editor;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(Plugin, [{\n    key: \"destroy\",\n    value: function destroy() {\n      this.stopListening();\n    }\n  }]);\n\n  return Plugin;\n}();\n\nexport { Plugin as default };\nmix(Plugin, ObservableMixin);\n/**\n * The base interface for CKEditor plugins.\n *\n * In its minimal form it can be a simple function (it will be used as a constructor) that accepts\n * {@link module:core/editor/editor~Editor the editor} as a parameter.\n * It can also implement a few methods which, when present, will be used to properly initialize and destroy the plugin.\n *\n *\t\t// A simple plugin that enables a data processor.\n *\t\tfunction MyPlugin( editor ) {\n *\t\t\teditor.data.processor = new MyDataProcessor();\n *\t\t}\n *\n * In most cases, however, you will want to inherit from the {@link module:core/plugin~Plugin} class which implements the\n * {@link module:utils/observablemixin~ObservableMixin} and is, therefore, more convenient:\n *\n *\t\tclass MyPlugin extends Plugin {\n *\t\t\tinit() {\n *\t\t\t\t// `listenTo()` and `editor` are available thanks to `Plugin`.\n *\t\t\t\t// By using `listenTo()` you will ensure that the listener is removed when\n *\t\t\t\t// the plugin is destroyed.\n *\t\t\t\tthis.listenTo( this.editor.data, 'ready', () => {\n *\t\t\t\t\t// Do something when the data is ready.\n *\t\t\t\t} );\n *\t\t\t}\n *\t\t}\n *\n * @interface PluginInterface\n */\n\n/**\n * Creates a new plugin instance. This is the first step of the plugin initialization.\n * See also {@link #init} and {@link #afterInit}.\n *\n * A plugin is always instantiated after its {@link module:core/plugin~PluginInterface.requires dependencies} and the\n * {@link #init} and {@link #afterInit} methods are called in the same order.\n *\n * Usually, you will want to put your plugin's initialization code in the {@link #init} method.\n * The constructor can be understood as \"before init\" and used in special cases, just like\n * {@link #afterInit} serves the special \"after init\" scenarios (e.g.the code which depends on other\n * plugins, but which does not {@link module:core/plugin~PluginInterface.requires explicitly require} them).\n *\n * @method #constructor\n * @param {module:core/editor/editor~Editor} editor\n */\n\n/**\n * An array of plugins required by this plugin.\n *\n * To keep the plugin class definition tight it is recommended to define this property as a static getter:\n *\n *\t\timport Image from './image.js';\n *\n *\t\texport default class ImageCaption {\n *\t\t\tstatic get requires() {\n *\t\t\t\treturn [ Image ];\n *\t\t\t}\n *\t\t}\n *\n * @static\n * @readonly\n * @member {Array.<Function>|undefined} module:core/plugin~PluginInterface.requires\n */\n\n/**\n * An optional name of the plugin. If set, the plugin will be available in\n * {@link module:core/plugincollection~PluginCollection#get} by its\n * name and its constructor. If not, then only by its constructor.\n *\n * The name should reflect the constructor name.\n *\n * To keep the plugin class definition tight it is recommended to define this property as a static getter:\n *\n *\t\texport default class ImageCaption {\n *\t\t\tstatic get pluginName() {\n *\t\t\t\treturn 'ImageCaption';\n *\t\t\t}\n *\t\t}\n *\n * Note: The native `Function.name` property could not be used to keep the plugin name because\n * it will be mangled during code minification.\n *\n * Naming a plugin is necessary to enable removing it through the\n * {@link module:core/editor/editorconfig~EditorConfig#removePlugins `config.removePlugins`} option.\n *\n * @static\n * @readonly\n * @member {String|undefined} module:core/plugin~PluginInterface.pluginName\n */\n\n/**\n * The second stage (after plugin {@link #constructor}) of plugin initialization.\n * Unlike the plugin constructor this method can be asynchronous.\n *\n * A plugin's `init()` method is called after its {@link module:core/plugin~PluginInterface.requires dependencies} are initialized,\n * so in the same order as constructors of these plugins.\n *\n * **Note:** This method is optional. A plugin instance does not need to have it defined.\n *\n * @method #init\n * @returns {null|Promise}\n */\n\n/**\n * The third (and last) stage of plugin initialization. See also {@link #constructor} and {@link #init}.\n *\n * **Note:** This method is optional. A plugin instance does not need to have it defined.\n *\n * @method #afterInit\n * @returns {null|Promise}\n */\n\n/**\n * Destroys the plugin.\n *\n * **Note:** This method is optional. A plugin instance does not need to have it defined.\n *\n * @method #destroy\n * @returns {null|Promise}\n */\n\n/**\n * Array of loaded plugins.\n *\n * @typedef {Array.<module:core/plugin~PluginInterface>} module:core/plugin~LoadedPlugins\n */","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module clipboard/datatransfer\n */\n\n/**\n * Facade over the native [`DataTransfer`](https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer) object.\n */\nvar DataTransfer =\n/*#__PURE__*/\nfunction () {\n  function DataTransfer(nativeDataTransfer) {\n    _classCallCheck(this, DataTransfer);\n\n    /**\n     * The array of files created from the native `DataTransfer#files` or `DataTransfer#items`.\n     *\n     * @readonly\n     * @member {Array.<File>} #files\n     */\n    this.files = getFiles(nativeDataTransfer);\n    /**\n     * The native DataTransfer object.\n     *\n     * @private\n     * @member {DataTransfer} #_native\n     */\n\n    this._native = nativeDataTransfer;\n  }\n  /**\n   * Returns an array of available native content types.\n   *\n   * @returns {Array.<String>}\n   */\n\n\n  _createClass(DataTransfer, [{\n    key: \"getData\",\n\n    /**\n     * Gets data from the data transfer by its mime type.\n     *\n     *\t\tdataTransfer.getData( 'text/plain' );\n     *\n     * @param {String} type The mime type. E.g. `text/html` or `text/plain`.\n     * @returns {String}\n     */\n    value: function getData(type) {\n      return this._native.getData(type);\n    }\n    /**\n     * Sets data in the data transfer.\n     *\n     * @param {String} type The mime type. E.g. `text/html` or `text/plain`.\n     * @param {String} data\n     */\n\n  }, {\n    key: \"setData\",\n    value: function setData(type, data) {\n      this._native.setData(type, data);\n    }\n  }, {\n    key: \"types\",\n    get: function get() {\n      return this._native.types;\n    }\n  }]);\n\n  return DataTransfer;\n}();\n\nexport { DataTransfer as default };\n\nfunction getFiles(nativeDataTransfer) {\n  // DataTransfer.files and items are Array-like and might not have an iterable interface.\n  var files = nativeDataTransfer.files ? Array.from(nativeDataTransfer.files) : [];\n  var items = nativeDataTransfer.items ? Array.from(nativeDataTransfer.items) : [];\n\n  if (files.length) {\n    return files;\n  } // Chrome have empty DataTransfer.files, but let get files through the items interface.\n\n\n  return items.filter(function (item) {\n    return item.kind === 'file';\n  }).map(function (item) {\n    return item.getAsFile();\n  });\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module clipboard/clipboardobserver\n */\nimport DomEventObserver from '@ckeditor/ckeditor5-engine/src/view/observer/domeventobserver';\nimport EventInfo from '@ckeditor/ckeditor5-utils/src/eventinfo';\nimport DataTransfer from './datatransfer';\n/**\n * Clipboard events observer.\n *\n * Fires the following events:\n *\n * * {@link module:engine/view/document~Document#event:clipboardInput}\n * * {@link module:engine/view/document~Document#event:dragover}\n * * {@link module:engine/view/document~Document#event:drop}\n * * {@link module:engine/view/document~Document#event:paste}\n * * {@link module:engine/view/document~Document#event:copy}\n * * {@link module:engine/view/document~Document#event:cut}\n *\n * Note that this observer is not available by default (it is not added by the engine).\n * To make it available it needs to be added to {@link module:engine/view/document~Document} by\n * the {@link module:engine/view/view~View#addObserver `View#addObserver()`} method. You can also load the\n * {@link module:clipboard/clipboard~Clipboard} plugin which adds this observer automatically (because it uses it).\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\n\nvar ClipboardObserver =\n/*#__PURE__*/\nfunction (_DomEventObserver) {\n  _inherits(ClipboardObserver, _DomEventObserver);\n\n  function ClipboardObserver(view) {\n    var _this;\n\n    _classCallCheck(this, ClipboardObserver);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ClipboardObserver).call(this, view));\n    var viewDocument = _this.document;\n    _this.domEventType = ['paste', 'copy', 'cut', 'drop', 'dragover'];\n\n    _this.listenTo(viewDocument, 'paste', handleInput, {\n      priority: 'low'\n    });\n\n    _this.listenTo(viewDocument, 'drop', handleInput, {\n      priority: 'low'\n    });\n\n    function handleInput(evt, data) {\n      data.preventDefault();\n      var targetRanges = data.dropRange ? [data.dropRange] : Array.from(viewDocument.selection.getRanges());\n      var eventInfo = new EventInfo(viewDocument, 'clipboardInput');\n      viewDocument.fire(eventInfo, {\n        dataTransfer: data.dataTransfer,\n        targetRanges: targetRanges\n      }); // If CKEditor handled the input, do not bubble the original event any further.\n      // This helps external integrations recognize that fact and act accordingly.\n      // https://github.com/ckeditor/ckeditor5-upload/issues/92\n\n      if (eventInfo.stop.called) {\n        data.stopPropagation();\n      }\n    }\n\n    return _this;\n  }\n\n  _createClass(ClipboardObserver, [{\n    key: \"onDomEvent\",\n    value: function onDomEvent(domEvent) {\n      var evtData = {\n        dataTransfer: new DataTransfer(domEvent.clipboardData ? domEvent.clipboardData : domEvent.dataTransfer)\n      };\n\n      if (domEvent.type == 'drop') {\n        evtData.dropRange = getDropViewRange(this.view, domEvent);\n      }\n\n      this.fire(domEvent.type, domEvent, evtData);\n    }\n  }]);\n\n  return ClipboardObserver;\n}(DomEventObserver);\n\nexport { ClipboardObserver as default };\n\nfunction getDropViewRange(view, domEvent) {\n  var domDoc = domEvent.target.ownerDocument;\n  var x = domEvent.clientX;\n  var y = domEvent.clientY;\n  var domRange; // Webkit & Blink.\n\n  if (domDoc.caretRangeFromPoint && domDoc.caretRangeFromPoint(x, y)) {\n    domRange = domDoc.caretRangeFromPoint(x, y);\n  } // FF.\n  else if (domEvent.rangeParent) {\n      domRange = domDoc.createRange();\n      domRange.setStart(domEvent.rangeParent, domEvent.rangeOffset);\n      domRange.collapse(true);\n    }\n\n  if (domRange) {\n    return view.domConverter.domRangeToView(domRange);\n  } else {\n    return view.document.selection.getFirstRange();\n  }\n}\n/**\n * Fired as a continuation of {@link #event:paste} and {@link #event:drop} events.\n *\n * It is a part of the {@glink framework/guides/deep-dive/clipboard#input-pipeline \"clipboard input pipeline\"}.\n *\n * Fired with a `dataTransfer` which comes from the clipboard and which content should be processed\n * and inserted into the editor.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @see module:clipboard/clipboard~Clipboard\n * @event module:engine/view/document~Document#event:clipboardInput\n * @param {Object} data Event data.\n * @param {module:clipboard/datatransfer~DataTransfer} data.dataTransfer Data transfer instance.\n * @param {Array.<module:engine/view/range~Range>} data.targetRanges Ranges which are the target of the operation\n * (usually – into which the content should be inserted).\n * If clipboard input was triggered by a paste operation, then these are the selection ranges. If by a drop operation,\n * then it's the drop position (which can be different than the selection at the moment of drop).\n */\n\n/**\n * Fired when user drags content over one of the editables.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:engine/view/document~Document#event:clipboardInput\n * @event module:engine/view/document~Document#event:dragover\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\n */\n\n/**\n * Fired when user dropped content into one of the editables.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:engine/view/document~Document#event:clipboardInput\n * @event module:engine/view/document~Document#event:drop\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\n * @param {module:engine/view/range~Range} dropRange The position into which the content is dropped.\n */\n\n/**\n * Fired when user pasted content into one of the editables.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:engine/view/document~Document#event:clipboardInput\n * @event module:engine/view/document~Document#event:paste\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\n */\n\n/**\n * Fired when user copied content from one of the editables.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @event module:engine/view/document~Document#event:copy\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\n */\n\n/**\n * Fired when user cut content from one of the editables.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @event module:engine/view/document~Document#event:cut\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\n */\n\n/**\n * The value of the {@link module:engine/view/document~Document#event:paste},\n * {@link module:engine/view/document~Document#event:copy} and {@link module:engine/view/document~Document#event:cut} events.\n *\n * In order to access clipboard data use `dataTransfer` property.\n *\n * @class module:clipboard/clipboardobserver~ClipboardEventData\n * @extends module:engine/view/observer/domeventdata~DomEventData\n */\n\n/**\n * Data transfer instance.\n *\n * @readonly\n * @member {module:clipboard/datatransfer~DataTransfer} module:clipboard/clipboardobserver~ClipboardEventData#dataTransfer\n */","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module clipboard/utils/viewtoplaintext\n */\n// Elements which should not have empty-line padding.\n// Most `view.ContainerElement` want to be separate by new-line, but some are creating one structure\n// together (like `<li>`) so it is better to separate them by only one \"\\n\".\nvar smallPaddingElements = ['figcaption', 'li'];\n/**\n * Converts {@link module:engine/view/item~Item view item} and all of its children to plain text.\n *\n * @param {module:engine/view/item~Item} viewItem View item to convert.\n * @returns {String} Plain text representation of `viewItem`.\n */\n\nexport default function viewToPlainText(viewItem) {\n  var text = '';\n\n  if (viewItem.is('text') || viewItem.is('textProxy')) {\n    // If item is `Text` or `TextProxy` simple take its text data.\n    text = viewItem.data;\n  } else if (viewItem.is('img') && viewItem.hasAttribute('alt')) {\n    // Special case for images - use alt attribute if it is provided.\n    text = viewItem.getAttribute('alt');\n  } else {\n    // Other elements are document fragments, attribute elements or container elements.\n    // They don't have their own text value, so convert their children.\n    var prev = null;\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = viewItem.getChildren()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var child = _step.value;\n        var childText = viewToPlainText(child); // Separate container element children with one or more new-line characters.\n\n        if (prev && (prev.is('containerElement') || child.is('containerElement'))) {\n          if (smallPaddingElements.includes(prev.name) || smallPaddingElements.includes(child.name)) {\n            text += '\\n';\n          } else {\n            text += '\\n\\n';\n          }\n        }\n\n        text += childText;\n        prev = child;\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n          _iterator[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  }\n\n  return text;\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module clipboard/clipboard\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ClipboardObserver from './clipboardobserver';\nimport plainTextToHtml from './utils/plaintexttohtml';\nimport normalizeClipboardHtml from './utils/normalizeclipboarddata';\nimport viewToPlainText from './utils/viewtoplaintext.js';\nimport HtmlDataProcessor from '@ckeditor/ckeditor5-engine/src/dataprocessor/htmldataprocessor';\n/**\n * The clipboard feature. It is responsible for intercepting the `paste` and `drop` events and\n * passing the pasted content through the clipboard pipeline in order to insert it into the editor's content.\n * It also handles the `cut` and `copy` events to fill the native clipboard with serialized editor's data.\n *\n * Read more about the clipboard integration in {@glink framework/guides/deep-dive/clipboard \"Clipboard\" deep dive} guide.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar Clipboard =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(Clipboard, _Plugin);\n\n  function Clipboard() {\n    _classCallCheck(this, Clipboard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Clipboard).apply(this, arguments));\n  }\n\n  _createClass(Clipboard, [{\n    key: \"init\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function init() {\n      var _this = this;\n\n      var editor = this.editor;\n      var modelDocument = editor.model.document;\n      var view = editor.editing.view;\n      var viewDocument = view.document;\n      /**\n       * Data processor used to convert pasted HTML to a view structure.\n       *\n       * @private\n       * @member {module:engine/dataprocessor/htmldataprocessor~HtmlDataProcessor} #_htmlDataProcessor\n       */\n\n      this._htmlDataProcessor = new HtmlDataProcessor();\n      view.addObserver(ClipboardObserver); // The clipboard paste pipeline.\n      // Pasting and dropping is disabled when editor is read-only.\n      // See: https://github.com/ckeditor/ckeditor5-clipboard/issues/26.\n\n      this.listenTo(viewDocument, 'clipboardInput', function (evt) {\n        if (editor.isReadOnly) {\n          evt.stop();\n        }\n      }, {\n        priority: 'highest'\n      });\n      this.listenTo(viewDocument, 'clipboardInput', function (evt, data) {\n        var dataTransfer = data.dataTransfer;\n        var content = '';\n\n        if (dataTransfer.getData('text/html')) {\n          content = normalizeClipboardHtml(dataTransfer.getData('text/html'));\n        } else if (dataTransfer.getData('text/plain')) {\n          content = plainTextToHtml(dataTransfer.getData('text/plain'));\n        }\n\n        content = _this._htmlDataProcessor.toView(content);\n\n        _this.fire('inputTransformation', {\n          content: content,\n          dataTransfer: dataTransfer\n        });\n\n        view.scrollToTheSelection();\n      }, {\n        priority: 'low'\n      });\n      this.listenTo(this, 'inputTransformation', function (evt, data) {\n        if (!data.content.isEmpty) {\n          var dataController = _this.editor.data;\n          var model = _this.editor.model; // Convert the pasted content to a model document fragment.\n          // Conversion is contextual, but in this case we need an \"all allowed\" context and for that\n          // we use the $clipboardHolder item.\n\n          var modelFragment = dataController.toModel(data.content, '$clipboardHolder');\n\n          if (modelFragment.childCount == 0) {\n            return;\n          }\n\n          model.insertContent(modelFragment);\n        }\n      }, {\n        priority: 'low'\n      }); // The clipboard copy/cut pipeline.\n\n      function onCopyCut(evt, data) {\n        var dataTransfer = data.dataTransfer;\n        data.preventDefault();\n        var content = editor.data.toView(editor.model.getSelectedContent(modelDocument.selection));\n        viewDocument.fire('clipboardOutput', {\n          dataTransfer: dataTransfer,\n          content: content,\n          method: evt.name\n        });\n      }\n\n      this.listenTo(viewDocument, 'copy', onCopyCut, {\n        priority: 'low'\n      });\n      this.listenTo(viewDocument, 'cut', function (evt, data) {\n        // Cutting is disabled when editor is read-only.\n        // See: https://github.com/ckeditor/ckeditor5-clipboard/issues/26.\n        if (editor.isReadOnly) {\n          data.preventDefault();\n        } else {\n          onCopyCut(evt, data);\n        }\n      }, {\n        priority: 'low'\n      });\n      this.listenTo(viewDocument, 'clipboardOutput', function (evt, data) {\n        if (!data.content.isEmpty) {\n          data.dataTransfer.setData('text/html', _this._htmlDataProcessor.toData(data.content));\n          data.dataTransfer.setData('text/plain', viewToPlainText(data.content));\n        }\n\n        if (data.method == 'cut') {\n          editor.model.deleteContent(modelDocument.selection);\n        }\n      }, {\n        priority: 'low'\n      });\n    }\n  }], [{\n    key: \"pluginName\",\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return 'Clipboard';\n    }\n  }]);\n\n  return Clipboard;\n}(Plugin);\n/**\n * Fired with a `content` and `dataTransfer` objects. The `content` which comes from the clipboard (was pasted or dropped)\n * should be processed in order to be inserted into the editor. The `dataTransfer` object is available\n * in case the transformation functions needs access to a raw clipboard data.\n *\n * It is a part of the {@glink framework/guides/deep-dive/clipboard#input-pipeline \"clipboard input pipeline\"}.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @see module:clipboard/clipboard~Clipboard\n * @event module:clipboard/clipboard~Clipboard#event:inputTransformation\n * @param {Object} data Event data.\n * @param {module:engine/view/documentfragment~DocumentFragment} data.content Event data. Content to be inserted into the editor.\n * It can be modified by the event listeners. Read more about the clipboard pipelines in\n * {@glink framework/guides/deep-dive/clipboard \"Clipboard\" deep dive}.\n * @param {module:clipboard/datatransfer~DataTransfer} data.dataTransfer Data transfer instance.\n */\n\n/**\n * Fired on {@link module:engine/view/document~Document#event:copy} and {@link module:engine/view/document~Document#event:cut}\n * with a copy of selected content. The content can be processed before it ends up in the clipboard.\n *\n * It is a part of the {@glink framework/guides/deep-dive/clipboard#output-pipeline \"clipboard output pipeline\"}.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @see module:clipboard/clipboard~Clipboard\n * @event module:engine/view/document~Document#event:clipboardOutput\n * @param {module:clipboard/clipboard~ClipboardOutputEventData} data Event data.\n */\n\n/**\n * The value of the {@link module:engine/view/document~Document#event:clipboardOutput} event.\n *\n * @class module:clipboard/clipboard~ClipboardOutputEventData\n */\n\n/**\n * Data transfer instance.\n *\n * @readonly\n * @member {module:clipboard/datatransfer~DataTransfer} module:clipboard/clipboard~ClipboardOutputEventData#dataTransfer\n */\n\n/**\n * Content to be put into the clipboard. It can be modified by the event listeners.\n * Read more about the clipboard pipelines in {@glink framework/guides/deep-dive/clipboard \"Clipboard\" deep dive}.\n *\n * @member {module:engine/view/documentfragment~DocumentFragment} module:clipboard/clipboard~ClipboardOutputEventData#content\n */\n\n/**\n * Whether the event was triggered by copy or cut operation.\n *\n * @member {'copy'|'cut'} module:clipboard/clipboard~ClipboardOutputEventData#method\n */\n\n\nexport { Clipboard as default };","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module clipboard/utils/normalizeclipboarddata\n */\n\n/**\n * Removes some popular browser quirks out of the clipboard data (HTML).\n *\n * @param {String} data The HTML data to normalize.\n * @returns {String} Normalized HTML.\n */\nexport default function normalizeClipboardData(data) {\n  return data.replace(/<span(?: class=\"Apple-converted-space\"|)>(\\s+)<\\/span>/g, function (fullMatch, spaces) {\n    // Handle the most popular and problematic case when even a single space becomes an nbsp;.\n    // Decode those to normal spaces. Read more in https://github.com/ckeditor/ckeditor5-clipboard/issues/2.\n    if (spaces.length == 1) {\n      return ' ';\n    }\n\n    return spaces;\n  });\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module clipboard/utils/plaintexttohtml\n */\n\n/**\n * Converts plain text to its HTML-ized version.\n *\n * @param {String} text The plain text to convert.\n * @returns {String} HTML generated from the plain text.\n */\nexport default function plainTextToHtml(text) {\n  text = text // Encode <>.\n  .replace(/</g, '&lt;').replace(/>/g, '&gt;') // Creates paragraphs for every line breaks.\n  .replace(/\\n/g, '</p><p>') // Preserve trailing spaces (only the first and last one – the rest is handled below).\n  .replace(/^\\s/, '&nbsp;').replace(/\\s$/, '&nbsp;') // Preserve other subsequent spaces now.\n  .replace(/\\s\\s/g, ' &nbsp;');\n\n  if (text.indexOf('</p><p>') > -1) {\n    // If we created paragraphs above, add the trailing ones.\n    text = \"<p>\".concat(text, \"</p>\");\n  } // TODO:\n  // * What about '\\nfoo' vs ' foo'?\n\n\n  return text;\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module core/command\n */\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n/**\n * The base class for CKEditor commands.\n *\n * Commands are the main way to manipulate editor contents and state. They are mostly used by UI elements (or by other\n * commands) to make changes in the model. Commands are available in every part of code that has access to\n * the {@link module:core/editor/editor~Editor editor} instance.\n *\n * Instances of registered commands can be retrieved from {@link module:core/editor/editor~Editor#commands `editor.commands`}.\n * The easiest way to execute a command is through {@link module:core/editor/editor~Editor#execute `editor.execute()`}.\n *\n * By default commands are disabled when the editor is in {@link module:core/editor/editor~Editor#isReadOnly read-only} mode.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\n\nvar Command =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a new `Command` instance.\n   *\n   * @param {module:core/editor/editor~Editor} editor Editor on which this command will be used.\n   */\n  function Command(editor) {\n    var _this = this;\n\n    _classCallCheck(this, Command);\n\n    /**\n     * The editor on which this command will be used.\n     *\n     * @readonly\n     * @member {module:core/editor/editor~Editor}\n     */\n    this.editor = editor;\n    /**\n     * The value of the command. A concrete command class should define what it represents for it.\n     *\n     * For example, the `'bold'` command's value indicates whether the selection starts in a bolded text.\n     * And the value of the `'link'` command may be an object with links details.\n     *\n     * It is possible for a command to have no value (e.g. for stateless actions such as `'imageUpload'`).\n     *\n     * A concrete command class should control this value by overriding the {@link #refresh `refresh()`} method.\n     *\n     * @observable\n     * @readonly\n     * @member #value\n     */\n\n    this.set('value', undefined);\n    /**\n     * Flag indicating whether a command is enabled or disabled.\n     * A disabled command will do nothing when executed.\n     *\n     * A concrete command class should control this value by overriding the {@link #refresh `refresh()`} method.\n     *\n     * It is possible to disable a command from \"outside\". For instance, in your integration you may want to disable\n     * a certain set of commands for the time being. To do that, you can use the fact that `isEnabled` is observable\n     * and it fires the `set:isEnabled` event every time anyone tries to modify its value:\n     *\n     *\t\tfunction disableCommand( cmd ) {\n     *\t\t\tcmd.on( 'set:isEnabled', forceDisable, { priority: 'highest' } );\n     *\n     *\t\t\tcmd.isEnabled = false;\n     *\n     *\t\t\t// Make it possible to enable the command again.\n     *\t\t\treturn () => {\n     *\t\t\t\tcmd.off( 'set:isEnabled', forceDisable );\n     *\t\t\t\tcmd.refresh();\n     *\t\t\t};\n     *\n     *\t\t\tfunction forceDisable( evt ) {\n     *\t\t\t\tevt.return = false;\n     *\t\t\t\tevt.stop();\n     *\t\t\t}\n     *\t\t}\n     *\n     *\t\t// Usage:\n     *\n     *\t\t// Disabling the command.\n     *\t\tconst enableBold = disableCommand( editor.commands.get( 'bold' ) );\n     *\n     *\t\t// Enabling the command again.\n     *\t\tenableBold();\n     *\n     * @observable\n     * @readonly\n     * @member {Boolean} #isEnabled\n     */\n\n    this.set('isEnabled', false);\n    /**\n     * Holds identifiers for {@link #forceDisabled} mechanism.\n     *\n     * @type {Set.<String>}\n     * @private\n     */\n\n    this._disableStack = new Set();\n    this.decorate('execute'); // By default every command is refreshed when changes are applied to the model.\n\n    this.listenTo(this.editor.model.document, 'change', function () {\n      _this.refresh();\n    });\n    this.on('execute', function (evt) {\n      if (!_this.isEnabled) {\n        evt.stop();\n      }\n    }, {\n      priority: 'high'\n    }); // By default commands are disabled when the editor is in read-only mode.\n\n    this.listenTo(editor, 'change:isReadOnly', function (evt, name, value) {\n      if (value) {\n        _this.forceDisabled('readOnlyMode');\n      } else {\n        _this.clearForceDisabled('readOnlyMode');\n      }\n    });\n  }\n  /**\n   * Refreshes the command. The command should update its {@link #isEnabled} and {@link #value} properties\n   * in this method.\n   *\n   * This method is automatically called when\n   * {@link module:engine/model/document~Document#event:change any changes are applied to the document}.\n   */\n\n\n  _createClass(Command, [{\n    key: \"refresh\",\n    value: function refresh() {\n      this.isEnabled = true;\n    }\n    /**\n     * Disables the command.\n     *\n     * Command may be disabled by multiple features or algorithms (at once). When disabling a command, unique id should be passed\n     * (e.g. feature name). The same identifier should be used when {@link #clearForceDisabled enabling back} the command.\n     * The command becomes enabled only after all features {@link #clearForceDisabled enabled it back}.\n     *\n     * Disabling and enabling a command:\n     *\n     *\t\tcommand.isEnabled; // -> true\n     *\t\tcommand.forceDisabled( 'MyFeature' );\n     *\t\tcommand.isEnabled; // -> false\n     *\t\tcommand.clearForceDisabled( 'MyFeature' );\n     *\t\tcommand.isEnabled; // -> true\n     *\n     * Command disabled by multiple features:\n     *\n     *\t\tcommand.forceDisabled( 'MyFeature' );\n     *\t\tcommand.forceDisabled( 'OtherFeature' );\n     *\t\tcommand.clearForceDisabled( 'MyFeature' );\n     *\t\tcommand.isEnabled; // -> false\n     *\t\tcommand.clearForceDisabled( 'OtherFeature' );\n     *\t\tcommand.isEnabled; // -> true\n     *\n     * Multiple disabling with the same identifier is redundant:\n     *\n     *\t\tcommand.forceDisabled( 'MyFeature' );\n     *\t\tcommand.forceDisabled( 'MyFeature' );\n     *\t\tcommand.clearForceDisabled( 'MyFeature' );\n     *\t\tcommand.isEnabled; // -> true\n     *\n     * **Note:** some commands or algorithms may have more complex logic when it comes to enabling or disabling certain commands,\n     * so the command might be still disabled after {@link #clearForceDisabled} was used.\n     *\n     * @param {String} id Unique identifier for disabling. Use the same id when {@link #clearForceDisabled enabling back} the command.\n     */\n\n  }, {\n    key: \"forceDisabled\",\n    value: function forceDisabled(id) {\n      this._disableStack.add(id);\n\n      if (this._disableStack.size == 1) {\n        this.on('set:isEnabled', forceDisable, {\n          priority: 'highest'\n        });\n        this.isEnabled = false;\n      }\n    }\n    /**\n     * Clears forced disable previously set through {@link #clearForceDisabled}. See {@link #clearForceDisabled}.\n     *\n     * @param {String} id Unique identifier, equal to the one passed in {@link #forceDisabled} call.\n     */\n\n  }, {\n    key: \"clearForceDisabled\",\n    value: function clearForceDisabled(id) {\n      this._disableStack[\"delete\"](id);\n\n      if (this._disableStack.size == 0) {\n        this.off('set:isEnabled', forceDisable);\n        this.refresh();\n      }\n    }\n    /**\n     * Executes the command.\n     *\n     * A command may accept parameters. They will be passed from {@link module:core/editor/editor~Editor#execute `editor.execute()`}\n     * to the command.\n     *\n     * The `execute()` method will automatically abort when the command is disabled ({@link #isEnabled} is `false`).\n     * This behavior is implemented by a high priority listener to the {@link #event:execute} event.\n     *\n     * In order to see how to disable a command from \"outside\" see the {@link #isEnabled} documentation.\n     *\n     * @fires execute\n     */\n\n  }, {\n    key: \"execute\",\n    value: function execute() {}\n    /**\n     * Destroys the command.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.stopListening();\n    }\n    /**\n     * Event fired by the {@link #execute} method. The command action is a listener to this event so it's\n     * possible to change/cancel the behavior of the command by listening to this event.\n     *\n     * See {@link module:utils/observablemixin~ObservableMixin#decorate} for more information and samples.\n     *\n     * **Note:** This event is fired even if command is disabled. However, it is automatically blocked\n     * by a high priority listener in order to prevent command execution.\n     *\n     * @event execute\n     */\n\n  }]);\n\n  return Command;\n}();\n\nexport { Command as default };\nmix(Command, ObservableMixin); // Helper function that forces command to be disabled.\n\nfunction forceDisable(evt) {\n  evt[\"return\"] = false;\n  evt.stop();\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module enter/entercommand\n */\nimport Command from '@ckeditor/ckeditor5-core/src/command';\n/**\n * Enter command. It is used by the {@link module:enter/enter~Enter Enter feature} to handle the <kbd>Enter</kbd> key.\n *\n * @extends module:core/command~Command\n */\n\nvar EnterCommand =\n/*#__PURE__*/\nfunction (_Command) {\n  _inherits(EnterCommand, _Command);\n\n  function EnterCommand() {\n    _classCallCheck(this, EnterCommand);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(EnterCommand).apply(this, arguments));\n  }\n\n  _createClass(EnterCommand, [{\n    key: \"execute\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function execute() {\n      var _this = this;\n\n      var model = this.editor.model;\n      var doc = model.document;\n      model.change(function (writer) {\n        enterBlock(_this.editor.model, writer, doc.selection, model.schema);\n\n        _this.fire('afterExecute', {\n          writer: writer\n        });\n      });\n    }\n  }]);\n\n  return EnterCommand;\n}(Command); // Creates a new block in the way that the <kbd>Enter</kbd> key is expected to work.\n//\n// @param {module:engine/model~Model} model\n// @param {module:engine/model/writer~Writer} writer\n// @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n// Selection on which the action should be performed.\n// @param {module:engine/model/schema~Schema} schema\n\n\nexport { EnterCommand as default };\n\nfunction enterBlock(model, writer, selection, schema) {\n  var isSelectionEmpty = selection.isCollapsed;\n  var range = selection.getFirstRange();\n  var startElement = range.start.parent;\n  var endElement = range.end.parent; // Don't touch the roots and other limit elements.\n\n  if (schema.isLimit(startElement) || schema.isLimit(endElement)) {\n    // Delete the selected content but only if inside a single limit element.\n    // Abort, when crossing limit elements boundary (e.g. <limit1>x[x</limit1>donttouchme<limit2>y]y</limit2>).\n    // This is an edge case and it's hard to tell what should actually happen because such a selection\n    // is not entirely valid.\n    if (!isSelectionEmpty && startElement == endElement) {\n      model.deleteContent(selection);\n    }\n\n    return;\n  }\n\n  if (isSelectionEmpty) {\n    splitBlock(writer, range.start);\n  } else {\n    var leaveUnmerged = !(range.start.isAtStart && range.end.isAtEnd);\n    var isContainedWithinOneElement = startElement == endElement;\n    model.deleteContent(selection, {\n      leaveUnmerged: leaveUnmerged\n    });\n\n    if (leaveUnmerged) {\n      // Partially selected elements.\n      //\n      // <h>x[xx]x</h>\t\t-> <h>x^x</h>\t\t\t-> <h>x</h><h>^x</h>\n      if (isContainedWithinOneElement) {\n        splitBlock(writer, selection.focus);\n      } // Selection over multiple elements.\n      //\n      // <h>x[x</h><p>y]y<p>\t-> <h>x^</h><p>y</p>\t-> <h>x</h><p>^y</p>\n      else {\n          writer.setSelection(endElement, 0);\n        }\n    }\n  }\n}\n\nfunction splitBlock(writer, splitPos) {\n  writer.split(splitPos);\n  writer.setSelection(splitPos.parent.nextSibling, 0);\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module enter/enterobserver\n */\nimport Observer from '@ckeditor/ckeditor5-engine/src/view/observer/observer';\nimport DomEventData from '@ckeditor/ckeditor5-engine/src/view/observer/domeventdata';\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\n/**\n * Enter observer introduces the {@link module:engine/view/document~Document#event:enter} event.\n *\n * @extends module:engine/view/observer~Observer\n */\n\nvar EnterObserver =\n/*#__PURE__*/\nfunction (_Observer) {\n  _inherits(EnterObserver, _Observer);\n\n  function EnterObserver(view) {\n    var _this;\n\n    _classCallCheck(this, EnterObserver);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EnterObserver).call(this, view));\n    var doc = _this.document;\n    doc.on('keydown', function (evt, data) {\n      if (_this.isEnabled && data.keyCode == keyCodes.enter) {\n        // Save the event object to check later if it was stopped or not.\n        var event;\n        doc.once('enter', function (evt) {\n          return event = evt;\n        }, {\n          priority: 'highest'\n        });\n        doc.fire('enter', new DomEventData(doc, data.domEvent, {\n          isSoft: data.shiftKey\n        })); // Stop `keydown` event if `enter` event was stopped.\n        // https://github.com/ckeditor/ckeditor5/issues/753\n\n        if (event && event.stop.called) {\n          evt.stop();\n        }\n      }\n    });\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(EnterObserver, [{\n    key: \"observe\",\n    value: function observe() {}\n  }]);\n\n  return EnterObserver;\n}(Observer);\n/**\n * Event fired when the user presses the <kbd>Enter</kbd> key.\n *\n * Note: This event is fired by the {@link module:enter/enterobserver~EnterObserver observer}\n * (usually registered by the {@link module:enter/enter~Enter Enter feature} and\n * {@link module:enter/shiftenter~ShiftEnter ShiftEnter feature}).\n *\n * @event module:engine/view/document~Document#event:enter\n * @param {module:engine/view/observer/domeventdata~DomEventData} data\n * @param {Boolean} data.isSoft Whether it's a soft enter (<kbd>Shift</kbd>+<kbd>Enter</kbd>) or hard enter (<kbd>Enter</kbd>).\n */\n\n\nexport { EnterObserver as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module enter/enter\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport EnterCommand from './entercommand';\nimport EnterObserver from './enterobserver';\n/**\n * This plugin handles the <kbd>Enter</kbd> key (hard line break) in the editor.\n *\n * See also the {@link module:enter/shiftenter~ShiftEnter} plugin.\n *\n * For more information about this feature see the {@glink api/enter package page}.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar Enter =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(Enter, _Plugin);\n\n  function Enter() {\n    _classCallCheck(this, Enter);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Enter).apply(this, arguments));\n  }\n\n  _createClass(Enter, [{\n    key: \"init\",\n    value: function init() {\n      var editor = this.editor;\n      var view = editor.editing.view;\n      var viewDocument = view.document;\n      view.addObserver(EnterObserver);\n      editor.commands.add('enter', new EnterCommand(editor));\n      this.listenTo(viewDocument, 'enter', function (evt, data) {\n        data.preventDefault(); // The soft enter key is handled by the ShiftEnter plugin.\n\n        if (data.isSoft) {\n          return;\n        }\n\n        editor.execute('enter');\n        view.scrollToTheSelection();\n      }, {\n        priority: 'low'\n      });\n    }\n  }], [{\n    key: \"pluginName\",\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return 'Enter';\n    }\n  }]);\n\n  return Enter;\n}(Plugin);\n\nexport { Enter as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module enter/shiftentercommand\n */\nimport Command from '@ckeditor/ckeditor5-core/src/command';\n/**\n * ShiftEnter command. It is used by the {@link module:enter/shiftenter~ShiftEnter ShiftEnter feature} to handle\n * the <kbd>Shift</kbd>+<kbd>Enter</kbd> keystroke.\n *\n * @extends module:core/command~Command\n */\n\nvar ShiftEnterCommand =\n/*#__PURE__*/\nfunction (_Command) {\n  _inherits(ShiftEnterCommand, _Command);\n\n  function ShiftEnterCommand() {\n    _classCallCheck(this, ShiftEnterCommand);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ShiftEnterCommand).apply(this, arguments));\n  }\n\n  _createClass(ShiftEnterCommand, [{\n    key: \"execute\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function execute() {\n      var _this = this;\n\n      var model = this.editor.model;\n      var doc = model.document;\n      model.change(function (writer) {\n        softBreakAction(model, writer, doc.selection);\n\n        _this.fire('afterExecute', {\n          writer: writer\n        });\n      });\n    }\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      var model = this.editor.model;\n      var doc = model.document;\n      this.isEnabled = isEnabled(model.schema, doc.selection);\n    }\n  }]);\n\n  return ShiftEnterCommand;\n}(Command); // Checks whether the ShiftEnter command should be enabled in the specified selection.\n//\n// @param {module:engine/model/schema~Schema} schema\n// @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n\n\nexport { ShiftEnterCommand as default };\n\nfunction isEnabled(schema, selection) {\n  // At this moment it is okay to support single range selections only.\n  // But in the future we may need to change that.\n  if (selection.rangeCount > 1) {\n    return false;\n  }\n\n  var anchorPos = selection.anchor; // Check whether the break element can be inserted in the current selection anchor.\n\n  if (!anchorPos || !schema.checkChild(anchorPos, 'softBreak')) {\n    return false;\n  }\n\n  var range = selection.getFirstRange();\n  var startElement = range.start.parent;\n  var endElement = range.end.parent; // Do not modify the content if selection is cross-limit elements.\n\n  if ((isInsideLimitElement(startElement, schema) || isInsideLimitElement(endElement, schema)) && startElement !== endElement) {\n    return false;\n  }\n\n  return true;\n} // Creates a break in the way that the <kbd>Shift</kbd>+<kbd>Enter</kbd> keystroke is expected to work.\n//\n// @param {module:engine/model~Model} model\n// @param {module:engine/model/writer~Writer} writer\n// @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n// Selection on which the action should be performed.\n\n\nfunction softBreakAction(model, writer, selection) {\n  var isSelectionEmpty = selection.isCollapsed;\n  var range = selection.getFirstRange();\n  var startElement = range.start.parent;\n  var endElement = range.end.parent;\n  var isContainedWithinOneElement = startElement == endElement;\n\n  if (isSelectionEmpty) {\n    insertBreak(writer, range.end);\n  } else {\n    var leaveUnmerged = !(range.start.isAtStart && range.end.isAtEnd);\n    model.deleteContent(selection, {\n      leaveUnmerged: leaveUnmerged\n    }); // Selection within one element:\n    //\n    // <h>x[xx]x</h>\t\t-> <h>x^x</h>\t\t\t-> <h>x<br>^x</h>\n\n    if (isContainedWithinOneElement) {\n      insertBreak(writer, selection.focus);\n    } // Selection over multiple elements.\n    //\n    // <h>x[x</h><p>y]y<p>\t-> <h>x^</h><p>y</p>\t-> <h>x</h><p>^y</p>\n    //\n    // We chose not to insert a line break in this case because:\n    //\n    // * it's not a very common scenario,\n    // * it actually surprised me when I saw the \"expected behavior\" in real life.\n    //\n    // It's ok if the user will need to be more specific where they want the <br> to be inserted.\n    else {\n        // Move the selection to the 2nd element (last step of the example above).\n        if (leaveUnmerged) {\n          writer.setSelection(endElement, 0);\n        }\n      }\n  }\n}\n\nfunction insertBreak(writer, position) {\n  var breakLineElement = writer.createElement('softBreak');\n  writer.insert(breakLineElement, position);\n  writer.setSelection(breakLineElement, 'after');\n} // Checks whether the specified `element` is a child of the limit element.\n//\n// Checking whether the `<p>` element is inside a limit element:\n//   - <$root><p>Text.</p></$root> => false\n//   - <$root><limitElement><p>Text</p></limitElement></$root> => true\n//\n// @param {module:engine/model/element~Element} element\n// @param {module:engine/schema~Schema} schema\n// @returns {Boolean}\n\n\nfunction isInsideLimitElement(element, schema) {\n  // `$root` is a limit element but in this case is an invalid element.\n  if (element.is('rootElement')) {\n    return false;\n  }\n\n  return schema.isLimit(element) || isInsideLimitElement(element.parent, schema);\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module enter/shiftenter\n */\nimport ShiftEnterCommand from './shiftentercommand';\nimport EnterObserver from './enterobserver';\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n/**\n * This plugin handles the <kbd>Shift</kbd>+<kbd>Enter</kbd> keystroke (soft line break) in the editor.\n *\n * See also the {@link module:enter/enter~Enter} plugin.\n *\n * For more information about this feature see the {@glink api/enter package page}.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar ShiftEnter =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(ShiftEnter, _Plugin);\n\n  function ShiftEnter() {\n    _classCallCheck(this, ShiftEnter);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ShiftEnter).apply(this, arguments));\n  }\n\n  _createClass(ShiftEnter, [{\n    key: \"init\",\n    value: function init() {\n      var editor = this.editor;\n      var schema = editor.model.schema;\n      var conversion = editor.conversion;\n      var view = editor.editing.view;\n      var viewDocument = view.document; // Configure the schema.\n\n      schema.register('softBreak', {\n        allowWhere: '$text',\n        isInline: true\n      }); // Configure converters.\n\n      conversion[\"for\"]('upcast').elementToElement({\n        model: 'softBreak',\n        view: 'br'\n      });\n      conversion[\"for\"]('downcast').elementToElement({\n        model: 'softBreak',\n        view: function view(modelElement, viewWriter) {\n          return viewWriter.createEmptyElement('br');\n        }\n      });\n      view.addObserver(EnterObserver);\n      editor.commands.add('shiftEnter', new ShiftEnterCommand(editor));\n      this.listenTo(viewDocument, 'enter', function (evt, data) {\n        data.preventDefault(); // The hard enter key is handled by the Enter plugin.\n\n        if (!data.isSoft) {\n          return;\n        }\n\n        editor.execute('shiftEnter');\n        view.scrollToTheSelection();\n      }, {\n        priority: 'low'\n      });\n    }\n  }], [{\n    key: \"pluginName\",\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return 'ShiftEnter';\n    }\n  }]);\n\n  return ShiftEnter;\n}(Plugin);\n\nexport { ShiftEnter as default };","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/utils/changebuffer\n */\n\n/**\n * Change buffer allows to group atomic changes (like characters that have been typed) into\n * {@link module:engine/model/batch~Batch batches}.\n *\n * Batches represent single undo steps, hence changes added to one single batch are undone together.\n *\n * The buffer has a configurable limit of atomic changes that it can accommodate. After the limit was\n * exceeded (see {@link ~ChangeBuffer#input}), a new batch is created in {@link ~ChangeBuffer#batch}.\n *\n * To use the change buffer you need to let it know about the number of changes that were added to the batch:\n *\n *\t\tconst buffer = new ChangeBuffer( model, LIMIT );\n *\n *\t\t// Later on in your feature:\n *\t\tbuffer.batch.insert( pos, insertedCharacters );\n *\t\tbuffer.input( insertedCharacters.length );\n *\n */\nvar ChangeBuffer =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a new instance of the change buffer.\n   *\n   * @param {module:engine/model/model~Model} model\n   * @param {Number} [limit=20] The maximum number of atomic changes which can be contained in one batch.\n   */\n  function ChangeBuffer(model) {\n    var _this = this;\n\n    var limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 20;\n\n    _classCallCheck(this, ChangeBuffer);\n\n    /**\n     * The model instance.\n     *\n     * @readonly\n     * @member {module:engine/model/model~Model} #model\n     */\n    this.model = model;\n    /**\n     * The number of atomic changes in the buffer. Once it exceeds the {@link #limit},\n     * the {@link #batch batch} is set to a new one.\n     *\n     * @readonly\n     * @member {Number} #size\n     */\n\n    this.size = 0;\n    /**\n     * The maximum number of atomic changes which can be contained in one batch.\n     *\n     * @readonly\n     * @member {Number} #limit\n     */\n\n    this.limit = limit;\n    /**\n     * Whether the buffer is locked. A locked buffer cannot be reset unless it gets unlocked.\n     *\n     * @readonly\n     * @member {Boolean} #isLocked\n     */\n\n    this.isLocked = false; // The function to be called in order to notify the buffer about batches which appeared in the document.\n    // The callback will check whether it is a new batch and in that case the buffer will be flushed.\n    //\n    // The reason why the buffer needs to be flushed whenever a new batch appears is that the changes added afterwards\n    // should be added to a new batch. For instance, when the  user types, then inserts an image, and then types again,\n    // the characters typed after inserting the image should be added to a different batch than the characters typed before.\n\n    this._changeCallback = function (evt, batch) {\n      if (batch.type != 'transparent' && batch !== _this._batch) {\n        _this._reset(true);\n      }\n    };\n\n    this._selectionChangeCallback = function () {\n      _this._reset();\n    };\n\n    this.model.document.on('change', this._changeCallback);\n    this.model.document.selection.on('change:range', this._selectionChangeCallback);\n    this.model.document.selection.on('change:attribute', this._selectionChangeCallback);\n    /**\n     * The current batch instance.\n     *\n     * @private\n     * @member #_batch\n     */\n\n    /**\n     * The callback to document the change event which later needs to be removed.\n     *\n     * @private\n     * @member #_changeCallback\n     */\n\n    /**\n     * The callback to document selection `change:attribute` and `change:range` events which resets the buffer.\n     *\n     * @private\n     * @member #_selectionChangeCallback\n     */\n  }\n  /**\n   * The current batch to which a feature should add its operations. Once the {@link #size}\n   * is reached or exceeds the {@link #limit}, the batch is set to a new instance and the size is reset.\n   *\n   * @type {module:engine/model/batch~Batch}\n   */\n\n\n  _createClass(ChangeBuffer, [{\n    key: \"input\",\n\n    /**\n     * The input number of changes into the buffer. Once the {@link #size} is\n     * reached or exceeds the {@link #limit}, the batch is set to a new instance and the size is reset.\n     *\n     * @param {Number} changeCount The number of atomic changes to input.\n     */\n    value: function input(changeCount) {\n      this.size += changeCount;\n\n      if (this.size >= this.limit) {\n        this._reset(true);\n      }\n    }\n    /**\n     * Locks the buffer.\n     */\n\n  }, {\n    key: \"lock\",\n    value: function lock() {\n      this.isLocked = true;\n    }\n    /**\n     * Unlocks the buffer.\n     */\n\n  }, {\n    key: \"unlock\",\n    value: function unlock() {\n      this.isLocked = false;\n    }\n    /**\n     * Destroys the buffer.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.model.document.off('change', this._changeCallback);\n      this.model.document.selection.off('change:range', this._selectionChangeCallback);\n      this.model.document.selection.off('change:attribute', this._selectionChangeCallback);\n    }\n    /**\n     * Resets the change buffer.\n     *\n     * @private\n     * @param {Boolean} [ignoreLock] Whether internal lock {@link #isLocked} should be ignored.\n     */\n\n  }, {\n    key: \"_reset\",\n    value: function _reset(ignoreLock) {\n      if (!this.isLocked || ignoreLock) {\n        this._batch = null;\n        this.size = 0;\n      }\n    }\n  }, {\n    key: \"batch\",\n    get: function get() {\n      if (!this._batch) {\n        this._batch = this.model.createBatch();\n      }\n\n      return this._batch;\n    }\n  }]);\n\n  return ChangeBuffer;\n}();\n\nexport { ChangeBuffer as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/inputcommand\n */\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport ChangeBuffer from './utils/changebuffer';\n/**\n * The input command. Used by the {@link module:typing/input~Input input feature} to handle typing.\n *\n * @extends module:core/command~Command\n */\n\nvar InputCommand =\n/*#__PURE__*/\nfunction (_Command) {\n  _inherits(InputCommand, _Command);\n\n  /**\n   * Creates an instance of the command.\n   *\n   * @param {module:core/editor/editor~Editor} editor\n   * @param {Number} undoStepSize The maximum number of atomic changes\n   * which can be contained in one batch in the command buffer.\n   */\n  function InputCommand(editor, undoStepSize) {\n    var _this;\n\n    _classCallCheck(this, InputCommand);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InputCommand).call(this, editor));\n    /**\n     * Typing's change buffer used to group subsequent changes into batches.\n     *\n     * @readonly\n     * @private\n     * @member {module:typing/utils/changebuffer~ChangeBuffer} #_buffer\n     */\n\n    _this._buffer = new ChangeBuffer(editor.model, undoStepSize);\n    return _this;\n  }\n  /**\n   * The current change buffer.\n   *\n   * @type {module:typing/utils/changebuffer~ChangeBuffer}\n   */\n\n\n  _createClass(InputCommand, [{\n    key: \"destroy\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function destroy() {\n      _get(_getPrototypeOf(InputCommand.prototype), \"destroy\", this).call(this);\n\n      this._buffer.destroy();\n    }\n    /**\n     * Executes the input command. It replaces the content within the given range with the given text.\n     * Replacing is a two step process, first the content within the range is removed and then the new text is inserted\n     * at the beginning of the range (which after the removal is a collapsed range).\n     *\n     * @fires execute\n     * @param {Object} [options] The command options.\n     * @param {String} [options.text=''] The text to be inserted.\n     * @param {module:engine/model/range~Range} [options.range] The range in which the text is inserted. Defaults\n     * to the first range in the current selection.\n     * @param {module:engine/model/range~Range} [options.resultRange] The range where the selection\n     * should be placed after the insertion. If not specified, the selection will be placed right after\n     * the inserted text.\n     */\n\n  }, {\n    key: \"execute\",\n    value: function execute() {\n      var _this2 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var model = this.editor.model;\n      var doc = model.document;\n      var text = options.text || '';\n      var textInsertions = text.length;\n      var range = options.range || doc.selection.getFirstRange();\n      var resultRange = options.resultRange;\n      model.enqueueChange(this._buffer.batch, function (writer) {\n        var isCollapsedRange = range.isCollapsed;\n\n        _this2._buffer.lock();\n\n        model.deleteContent(model.createSelection(range));\n\n        if (text) {\n          model.insertContent(writer.createText(text, doc.selection.getAttributes()), range.start);\n        }\n\n        if (resultRange) {\n          writer.setSelection(resultRange);\n        } else if (isCollapsedRange) {\n          // If range was collapsed just shift the selection by the number of inserted characters.\n          writer.setSelection(range.start.getShiftedBy(textInsertions));\n        }\n\n        _this2._buffer.unlock();\n\n        _this2._buffer.input(textInsertions);\n      });\n    }\n  }, {\n    key: \"buffer\",\n    get: function get() {\n      return this._buffer;\n    }\n  }]);\n\n  return InputCommand;\n}(Command);\n\nexport { InputCommand as default };","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/utils/injectunsafekeystrokeshandling\n */\nimport { getCode } from '@ckeditor/ckeditor5-utils/src/keyboard';\nimport env from '@ckeditor/ckeditor5-utils/src/env';\n/**\n * Handles keystrokes which are unsafe for typing. This handler's logic is explained\n * in https://github.com/ckeditor/ckeditor5-typing/issues/83#issuecomment-398690251.\n *\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n */\n\nexport default function injectUnsafeKeystrokesHandling(editor) {\n  var latestCompositionSelection = null;\n  var model = editor.model;\n  var view = editor.editing.view;\n  var inputCommand = editor.commands.get('input'); // For Android, we want to handle keystrokes on `beforeinput` to be sure that code in `DeleteObserver` already had a chance to be fired.\n\n  if (env.isAndroid) {\n    view.document.on('beforeinput', function (evt, evtData) {\n      return handleUnsafeKeystroke(evtData);\n    }, {\n      priority: 'lowest'\n    });\n  } else {\n    view.document.on('keydown', function (evt, evtData) {\n      return handleUnsafeKeystroke(evtData);\n    }, {\n      priority: 'lowest'\n    });\n  }\n\n  view.document.on('compositionstart', handleCompositionStart, {\n    priority: 'lowest'\n  });\n  view.document.on('compositionend', function () {\n    latestCompositionSelection = model.createSelection(model.document.selection);\n  }, {\n    priority: 'lowest'\n  }); // Handles the keydown event. We need to guess whether such keystroke is going to result\n  // in typing. If so, then before character insertion happens, any selected content needs\n  // to be deleted. Otherwise the default browser deletion mechanism would be\n  // triggered, resulting in:\n  //\n  // * Hundreds of mutations which could not be handled.\n  // * But most importantly, loss of control over how the content is being deleted.\n  //\n  // The method is used in a low-priority listener, hence allowing other listeners (e.g. delete or enter features)\n  // to handle the event.\n  //\n  // @param {module:engine/view/observer/keyobserver~KeyEventData} evtData\n\n  function handleUnsafeKeystroke(evtData) {\n    var doc = model.document;\n    var isComposing = view.document.isComposing;\n    var isSelectionUnchanged = latestCompositionSelection && latestCompositionSelection.isEqual(doc.selection); // Reset stored composition selection.\n\n    latestCompositionSelection = null; // By relying on the state of the input command we allow disabling the entire input easily\n    // by just disabling the input command. We could’ve used here the delete command but that\n    // would mean requiring the delete feature which would block loading one without the other.\n    // We could also check the editor.isReadOnly property, but that wouldn't allow to block\n    // the input without blocking other features.\n\n    if (!inputCommand.isEnabled) {\n      return;\n    }\n\n    if (isSafeKeystroke(evtData) || doc.selection.isCollapsed) {\n      return;\n    } // If during composition, deletion should be prevented as it may remove composed sequence (#83).\n\n\n    if (isComposing && evtData.keyCode === 229) {\n      return;\n    } // If there is a `keydown` event fired with '229' keycode it might be related\n    // to recent composition. Check if selection is the same as upon ending recent composition,\n    // if so do not remove selected content as it will remove composed sequence (#83).\n\n\n    if (!isComposing && evtData.keyCode === 229 && isSelectionUnchanged) {\n      return;\n    }\n\n    deleteSelectionContent();\n  } // Handles the `compositionstart` event. It is used only in special cases to remove the contents\n  // of a non-collapsed selection so composition itself does not result in complex mutations.\n  //\n  // The special case mentioned above is a situation in which the `keydown` event is fired after\n  // `compositionstart` event. In such cases {@link #handleKeydown} cannot clear current selection\n  // contents (because it is too late and will break the composition) so the composition handler takes care of it.\n\n\n  function handleCompositionStart() {\n    var doc = model.document;\n    var isFlatSelection = doc.selection.rangeCount === 1 ? doc.selection.getFirstRange().isFlat : true; // If on `compositionstart` there is a non-collapsed selection which start and end have different parents\n    // it means the `handleKeydown()` method did not remove its contents. It happens usually because\n    // of different order of events (`compositionstart` before `keydown` - in Safari). In such cases\n    // we need to remove selection contents on composition start (#83).\n\n    if (doc.selection.isCollapsed || isFlatSelection) {\n      return;\n    }\n\n    deleteSelectionContent();\n  }\n\n  function deleteSelectionContent() {\n    var buffer = inputCommand.buffer;\n    buffer.lock();\n    model.enqueueChange(buffer.batch, function () {\n      model.deleteContent(model.document.selection);\n    });\n    buffer.unlock();\n  }\n}\nvar safeKeycodes = [getCode('arrowUp'), getCode('arrowRight'), getCode('arrowDown'), getCode('arrowLeft'), 9, // Tab\n16, // Shift\n17, // Ctrl\n18, // Alt\n19, // Pause\n20, // CapsLock\n27, // Escape\n33, // PageUp\n34, // PageDown\n35, // Home\n36, // End,\n45, // Insert,\n91, // Windows,\n93, // Menu key,\n144, // NumLock\n145, // ScrollLock,\n173, // Mute/Unmute\n174, // Volume up\n175, // Volume down,\n176, // Next song,\n177, // Previous song,\n178, // Stop,\n179, // Play/Pause,\n255 // Display brightness (increase and decrease)\n]; // Function keys.\n\nfor (var code = 112; code <= 135; code++) {\n  safeKeycodes.push(code);\n} // Returns `true` if a keystroke should not cause any content change caused by \"typing\".\n//\n// Note: This implementation is very simple and will need to be refined with time.\n//\n// @private\n// @param {engine.view.observer.keyObserver.KeyEventData} keyData\n// @returns {Boolean}\n\n\nfunction isSafeKeystroke(keyData) {\n  // Keystrokes which contain Ctrl don't represent typing.\n  if (keyData.ctrlKey) {\n    return true;\n  }\n\n  return safeKeycodes.includes(keyData.keyCode);\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/utils/utils\n */\nimport diff from '@ckeditor/ckeditor5-utils/src/diff';\nimport diffToChanges from '@ckeditor/ckeditor5-utils/src/difftochanges';\n/**\n * Returns true if container children have mutated or more than a single text node was changed.\n *\n * @private\n * @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|\n * module:engine/view/observer/mutationobserver~MutatedChildren>} mutations\n * @returns {Boolean}\n */\n\nexport function containerChildrenMutated(mutations) {\n  if (mutations.length == 0) {\n    return false;\n  } // Check if there is any mutation of `children` type or any mutation that changes more than one text node.\n\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = mutations[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var mutation = _step.value;\n\n      if (mutation.type === 'children' && !getSingleTextNodeChange(mutation)) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return false;\n}\n/**\n * Returns change made to a single text node.\n *\n * @private\n * @param {module:engine/view/observer/mutationobserver~MutatedText|\n * module:engine/view/observer/mutationobserver~MutatedChildren} mutation\n * @returns {Object|undefined} Change object (see {@link module:utils/difftochanges~diffToChanges} output)\n * or undefined if more than a single text node was changed.\n */\n\nexport function getSingleTextNodeChange(mutation) {\n  // One new node.\n  if (mutation.newChildren.length - mutation.oldChildren.length != 1) {\n    return;\n  } // Which is text.\n\n\n  var diffResult = diff(mutation.oldChildren, mutation.newChildren, compareChildNodes);\n  var changes = diffToChanges(diffResult, mutation.newChildren); // In case of [ delete, insert, insert ] the previous check will not exit.\n\n  if (changes.length > 1) {\n    return;\n  }\n\n  var change = changes[0]; // Which is text.\n\n  if (!(!!change.values[0] && change.values[0].is('text'))) {\n    return;\n  }\n\n  return change;\n}\n/**\n * Checks whether two view nodes are identical, which means they are the same object\n * or contain exactly same data (in case of text nodes).\n *\n * @private\n * @param {module:engine/view/node~Node} oldChild\n * @param {module:engine/view/node~Node} newChild\n * @returns {Boolean}\n */\n\nexport function compareChildNodes(oldChild, newChild) {\n  if (!!oldChild && oldChild.is('text') && !!newChild && newChild.is('text')) {\n    return oldChild.data === newChild.data;\n  } else {\n    return oldChild === newChild;\n  }\n}","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/difftochanges\n */\n\n/**\n * Creates a set of changes which need to be applied to the input in order to transform\n * it into the output. This function can be used with strings or arrays.\n *\n *\t\tconst input = Array.from( 'abc' );\n *\t\tconst output = Array.from( 'xaby' );\n *\t\tconst changes = diffToChanges( diff( input, output ), output );\n *\n *\t\tchanges.forEach( change => {\n *\t\t\tif ( change.type == 'insert' ) {\n *\t\t\t\tinput.splice( change.index, 0, ...change.values );\n *\t\t\t} else if ( change.type == 'delete' ) {\n *\t\t\t\tinput.splice( change.index, change.howMany );\n *\t\t\t}\n *\t\t} );\n *\n *\t\tinput.join( '' ) == output.join( '' ); // -> true\n *\n * @param {Array.<'equal'|'insert'|'delete'>} diff Result of {@link module:utils/diff~diff}.\n * @param {String|Array} output The string or array which was passed as diff's output.\n * @returns {Array.<Object>} Set of changes (insert or delete) which need to be applied to the input\n * in order to transform it into the output.\n */\nexport default function diffToChanges(diff, output) {\n  var changes = [];\n  var index = 0;\n  var lastOperation;\n  diff.forEach(function (change) {\n    if (change == 'equal') {\n      pushLast();\n      index++;\n    } else if (change == 'insert') {\n      if (isContinuationOf('insert')) {\n        lastOperation.values.push(output[index]);\n      } else {\n        pushLast();\n        lastOperation = {\n          type: 'insert',\n          index: index,\n          values: [output[index]]\n        };\n      }\n\n      index++;\n    } else\n      /* if ( change == 'delete' ) */\n      {\n        if (isContinuationOf('delete')) {\n          lastOperation.howMany++;\n        } else {\n          pushLast();\n          lastOperation = {\n            type: 'delete',\n            index: index,\n            howMany: 1\n          };\n        }\n      }\n  });\n  pushLast();\n  return changes;\n\n  function pushLast() {\n    if (lastOperation) {\n      changes.push(lastOperation);\n      lastOperation = null;\n    }\n  }\n\n  function isContinuationOf(expected) {\n    return lastOperation && lastOperation.type == expected;\n  }\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/utils/injecttypingmutationshandling\n */\nimport diff from '@ckeditor/ckeditor5-utils/src/diff';\nimport DomConverter from '@ckeditor/ckeditor5-engine/src/view/domconverter';\nimport { getSingleTextNodeChange, containerChildrenMutated } from './utils';\n/**\n * Handles mutations caused by normal typing.\n *\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n */\n\nexport default function injectTypingMutationsHandling(editor) {\n  editor.editing.view.document.on('mutations', function (evt, mutations, viewSelection) {\n    new MutationHandler(editor).handle(mutations, viewSelection);\n  });\n}\n/**\n * Helper class for translating DOM mutations into model changes.\n *\n * @private\n */\n\nvar MutationHandler =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of the mutation handler.\n   *\n   * @param {module:core/editor/editor~Editor} editor\n   */\n  function MutationHandler(editor) {\n    _classCallCheck(this, MutationHandler);\n\n    /**\n     * Editor instance for which mutations are handled.\n     *\n     * @readonly\n     * @member {module:core/editor/editor~Editor} #editor\n     */\n    this.editor = editor;\n    /**\n     * The editing controller.\n     *\n     * @readonly\n     * @member {module:engine/controller/editingcontroller~EditingController} #editing\n     */\n\n    this.editing = this.editor.editing;\n  }\n  /**\n   * Handles given mutations.\n   *\n   * @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|\n   * module:engine/view/observer/mutationobserver~MutatedChildren>} mutations\n   * @param {module:engine/view/selection~Selection|null} viewSelection\n   */\n\n\n  _createClass(MutationHandler, [{\n    key: \"handle\",\n    value: function handle(mutations, viewSelection) {\n      if (containerChildrenMutated(mutations)) {\n        this._handleContainerChildrenMutations(mutations, viewSelection);\n      } else {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = mutations[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var mutation = _step.value;\n\n            // Fortunately it will never be both.\n            this._handleTextMutation(mutation, viewSelection);\n\n            this._handleTextNodeInsertion(mutation);\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n              _iterator[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n    }\n    /**\n     * Handles situations when container's children mutated during input. This can happen when\n     * the browser is trying to \"fix\" DOM in certain situations. For example, when the user starts to type\n     * in `<p><a href=\"\"><i>Link{}</i></a></p>`, the browser might change the order of elements\n     * to `<p><i><a href=\"\">Link</a>x{}</i></p>`. A similar situation happens when the spell checker\n     * replaces a word wrapped with `<strong>` with a word wrapped with a `<b>` element.\n     *\n     * To handle such situations, the common DOM ancestor of all mutations is converted to the model representation\n     * and then compared with the current model to calculate the proper text change.\n     *\n     * Note: Single text node insertion is handled in {@link #_handleTextNodeInsertion} and text node mutation is handled\n     * in {@link #_handleTextMutation}).\n     *\n     * @private\n     * @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|\n     * module:engine/view/observer/mutationobserver~MutatedChildren>} mutations\n     * @param {module:engine/view/selection~Selection|null} viewSelection\n     */\n\n  }, {\n    key: \"_handleContainerChildrenMutations\",\n    value: function _handleContainerChildrenMutations(mutations, viewSelection) {\n      // Get common ancestor of all mutations.\n      var mutationsCommonAncestor = getMutationsContainer(mutations); // Quit if there is no common ancestor.\n\n      if (!mutationsCommonAncestor) {\n        return;\n      }\n\n      var domConverter = this.editor.editing.view.domConverter; // Get common ancestor in DOM.\n\n      var domMutationCommonAncestor = domConverter.mapViewToDom(mutationsCommonAncestor); // Create fresh DomConverter so it will not use existing mapping and convert current DOM to model.\n      // This wouldn't be needed if DomConverter would allow to create fresh view without checking any mappings.\n\n      var freshDomConverter = new DomConverter();\n      var modelFromCurrentDom = this.editor.data.toModel(freshDomConverter.domToView(domMutationCommonAncestor)).getChild(0); // Current model.\n\n      var currentModel = this.editor.editing.mapper.toModelElement(mutationsCommonAncestor); // If common ancestor is not mapped, do not do anything. It probably is a parent of another view element.\n      // That means that we would need to diff model elements (see `if` below). Better return early instead of\n      // trying to get a reasonable model ancestor. It will fell into the `if` below anyway.\n      // This situation happens for example for lists. If `<ul>` is a common ancestor, `currentModel` is `undefined`\n      // because `<ul>` is not mapped (`<li>`s are).\n      // See https://github.com/ckeditor/ckeditor5/issues/718.\n\n      if (!currentModel) {\n        return;\n      } // Get children from both ancestors.\n\n\n      var modelFromDomChildren = Array.from(modelFromCurrentDom.getChildren());\n      var currentModelChildren = Array.from(currentModel.getChildren()); // Remove the last `<softBreak>` from the end of `modelFromDomChildren` if there is no `<softBreak>` in current model.\n      // If the described scenario happened, it means that this is a bogus `<br />` added by a browser.\n\n      var lastDomChild = modelFromDomChildren[modelFromDomChildren.length - 1];\n      var lastCurrentChild = currentModelChildren[currentModelChildren.length - 1];\n\n      if (lastDomChild && lastDomChild.is('softBreak') && lastCurrentChild && !lastCurrentChild.is('softBreak')) {\n        modelFromDomChildren.pop();\n      }\n\n      var schema = this.editor.model.schema; // Skip situations when common ancestor has any container elements.\n\n      if (!isSafeForTextMutation(modelFromDomChildren, schema) || !isSafeForTextMutation(currentModelChildren, schema)) {\n        return;\n      } // Replace &nbsp; inserted by the browser with normal space. See comment in `_handleTextMutation`.\n      // Replace non-texts with any character. This is potentially dangerous but passes in manual tests. The thing is\n      // that we need to take care of proper indexes so we cannot simply remove non-text elements from the content.\n      // By inserting a character we keep all the real texts on their indexes.\n\n\n      var newText = modelFromDomChildren.map(function (item) {\n        return item.is('text') ? item.data : '@';\n      }).join('').replace(/\\u00A0/g, ' ');\n      var oldText = currentModelChildren.map(function (item) {\n        return item.is('text') ? item.data : '@';\n      }).join('').replace(/\\u00A0/g, ' '); // Do nothing if mutations created same text.\n\n      if (oldText === newText) {\n        return;\n      }\n\n      var diffResult = diff(oldText, newText);\n\n      var _calculateChanges = calculateChanges(diffResult),\n          firstChangeAt = _calculateChanges.firstChangeAt,\n          insertions = _calculateChanges.insertions,\n          deletions = _calculateChanges.deletions; // Try setting new model selection according to passed view selection.\n\n\n      var modelSelectionRange = null;\n\n      if (viewSelection) {\n        modelSelectionRange = this.editing.mapper.toModelRange(viewSelection.getFirstRange());\n      }\n\n      var insertText = newText.substr(firstChangeAt, insertions);\n      var removeRange = this.editor.model.createRange(this.editor.model.createPositionAt(currentModel, firstChangeAt), this.editor.model.createPositionAt(currentModel, firstChangeAt + deletions));\n      this.editor.execute('input', {\n        text: insertText,\n        range: removeRange,\n        resultRange: modelSelectionRange\n      });\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_handleTextMutation\",\n    value: function _handleTextMutation(mutation, viewSelection) {\n      if (mutation.type != 'text') {\n        return;\n      } // Replace &nbsp; inserted by the browser with normal space.\n      // We want only normal spaces in the model and in the view. Renderer and DOM Converter will be then responsible\n      // for rendering consecutive spaces using &nbsp;, but the model and the view has to be clear.\n      // Other feature may introduce inserting non-breakable space on specific key stroke (for example shift + space).\n      // However then it will be handled outside of mutations, like enter key is.\n      // The replacing is here because it has to be done before `diff` and `diffToChanges` functions, as they\n      // take `newText` and compare it to (cleaned up) view.\n      // It could also be done in mutation observer too, however if any outside plugin would like to\n      // introduce additional events for mutations, they would get already cleaned up version (this may be good or not).\n\n\n      var newText = mutation.newText.replace(/\\u00A0/g, ' '); // To have correct `diffResult`, we also compare view node text data with &nbsp; replaced by space.\n\n      var oldText = mutation.oldText.replace(/\\u00A0/g, ' '); // Do nothing if mutations created same text.\n\n      if (oldText === newText) {\n        return;\n      }\n\n      var diffResult = diff(oldText, newText);\n\n      var _calculateChanges2 = calculateChanges(diffResult),\n          firstChangeAt = _calculateChanges2.firstChangeAt,\n          insertions = _calculateChanges2.insertions,\n          deletions = _calculateChanges2.deletions; // Try setting new model selection according to passed view selection.\n\n\n      var modelSelectionRange = null;\n\n      if (viewSelection) {\n        modelSelectionRange = this.editing.mapper.toModelRange(viewSelection.getFirstRange());\n      } // Get the position in view and model where the changes will happen.\n\n\n      var viewPos = this.editing.view.createPositionAt(mutation.node, firstChangeAt);\n      var modelPos = this.editing.mapper.toModelPosition(viewPos);\n      var removeRange = this.editor.model.createRange(modelPos, modelPos.getShiftedBy(deletions));\n      var insertText = newText.substr(firstChangeAt, insertions);\n      this.editor.execute('input', {\n        text: insertText,\n        range: removeRange,\n        resultRange: modelSelectionRange\n      });\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_handleTextNodeInsertion\",\n    value: function _handleTextNodeInsertion(mutation) {\n      if (mutation.type != 'children') {\n        return;\n      }\n\n      var change = getSingleTextNodeChange(mutation);\n      var viewPos = this.editing.view.createPositionAt(mutation.node, change.index);\n      var modelPos = this.editing.mapper.toModelPosition(viewPos);\n      var insertedText = change.values[0].data;\n      this.editor.execute('input', {\n        // Replace &nbsp; inserted by the browser with normal space.\n        // See comment in `_handleTextMutation`.\n        // In this case we don't need to do this before `diff` because we diff whole nodes.\n        // Just change &nbsp; in case there are some.\n        text: insertedText.replace(/\\u00A0/g, ' '),\n        range: this.editor.model.createRange(modelPos)\n      });\n    }\n  }]);\n\n  return MutationHandler;\n}(); // Returns first common ancestor of all mutations that is either {@link module:engine/view/containerelement~ContainerElement}\n// or {@link module:engine/view/rootelement~RootElement}.\n//\n// @private\n// @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|\n// module:engine/view/observer/mutationobserver~MutatedChildren>} mutations\n// @returns {module:engine/view/containerelement~ContainerElement|engine/view/rootelement~RootElement|undefined}\n\n\nfunction getMutationsContainer(mutations) {\n  var lca = mutations.map(function (mutation) {\n    return mutation.node;\n  }).reduce(function (commonAncestor, node) {\n    return commonAncestor.getCommonAncestor(node, {\n      includeSelf: true\n    });\n  });\n\n  if (!lca) {\n    return;\n  } // We need to look for container and root elements only, so check all LCA's\n  // ancestors (starting from itself).\n\n\n  return lca.getAncestors({\n    includeSelf: true,\n    parentFirst: true\n  }).find(function (element) {\n    return element.is('containerElement') || element.is('rootElement');\n  });\n} // Returns true if provided array contains content that won't be problematic during diffing and text mutation handling.\n//\n// @param {Array.<module:engine/model/node~Node>} children\n// @param {module:engine/model/schema~Schema} schema\n// @returns {Boolean}\n\n\nfunction isSafeForTextMutation(children, schema) {\n  return children.every(function (child) {\n    return schema.isInline(child);\n  });\n} // Calculates first change index and number of characters that should be inserted and deleted starting from that index.\n//\n// @private\n// @param diffResult\n// @returns {{insertions: number, deletions: number, firstChangeAt: *}}\n\n\nfunction calculateChanges(diffResult) {\n  // Index where the first change happens. Used to set the position from which nodes will be removed and where will be inserted.\n  var firstChangeAt = null; // Index where the last change happens. Used to properly count how many characters have to be removed and inserted.\n\n  var lastChangeAt = null; // Get `firstChangeAt` and `lastChangeAt`.\n\n  for (var i = 0; i < diffResult.length; i++) {\n    var change = diffResult[i];\n\n    if (change != 'equal') {\n      firstChangeAt = firstChangeAt === null ? i : firstChangeAt;\n      lastChangeAt = i;\n    }\n  } // How many characters, starting from `firstChangeAt`, should be removed.\n\n\n  var deletions = 0; // How many characters, starting from `firstChangeAt`, should be inserted.\n\n  var insertions = 0;\n\n  for (var _i = firstChangeAt; _i <= lastChangeAt; _i++) {\n    // If there is no change (equal) or delete, the character is existing in `oldText`. We count it for removing.\n    if (diffResult[_i] != 'insert') {\n      deletions++;\n    } // If there is no change (equal) or insert, the character is existing in `newText`. We count it for inserting.\n\n\n    if (diffResult[_i] != 'delete') {\n      insertions++;\n    }\n  }\n\n  return {\n    insertions: insertions,\n    deletions: deletions,\n    firstChangeAt: firstChangeAt\n  };\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/input\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport InputCommand from './inputcommand';\nimport injectUnsafeKeystrokesHandling from './utils/injectunsafekeystrokeshandling';\nimport injectTypingMutationsHandling from './utils/injecttypingmutationshandling';\n/**\n * Handles text input coming from the keyboard or other input methods.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar Input =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(Input, _Plugin);\n\n  function Input() {\n    _classCallCheck(this, Input);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Input).apply(this, arguments));\n  }\n\n  _createClass(Input, [{\n    key: \"init\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function init() {\n      var editor = this.editor; // TODO The above default configuration value should be defined using editor.config.define() once it's fixed.\n\n      var inputCommand = new InputCommand(editor, editor.config.get('typing.undoStep') || 20);\n      editor.commands.add('input', inputCommand);\n      injectUnsafeKeystrokesHandling(editor);\n      injectTypingMutationsHandling(editor);\n    }\n  }], [{\n    key: \"pluginName\",\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return 'Input';\n    }\n  }]);\n\n  return Input;\n}(Plugin);\n\nexport { Input as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/deletecommand\n */\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport count from '@ckeditor/ckeditor5-utils/src/count';\nimport ChangeBuffer from './utils/changebuffer';\n/**\n * The delete command. Used by the {@link module:typing/delete~Delete delete feature} to handle the <kbd>Delete</kbd> and\n * <kbd>Backspace</kbd> keys.\n *\n * @extends module:core/command~Command\n */\n\nvar DeleteCommand =\n/*#__PURE__*/\nfunction (_Command) {\n  _inherits(DeleteCommand, _Command);\n\n  /**\n   * Creates an instance of the command.\n   *\n   * @param {module:core/editor/editor~Editor} editor\n   * @param {'forward'|'backward'} direction The directionality of the delete describing in what direction it\n   * should consume the content when the selection is collapsed.\n   */\n  function DeleteCommand(editor, direction) {\n    var _this;\n\n    _classCallCheck(this, DeleteCommand);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DeleteCommand).call(this, editor));\n    /**\n     * The directionality of the delete describing in what direction it should\n     * consume the content when the selection is collapsed.\n     *\n     * @readonly\n     * @member {'forward'|'backward'} #direction\n     */\n\n    _this.direction = direction;\n    /**\n     * Delete's change buffer used to group subsequent changes into batches.\n     *\n     * @readonly\n     * @private\n     * @member {typing.ChangeBuffer} #buffer\n     */\n\n    _this._buffer = new ChangeBuffer(editor.model, editor.config.get('typing.undoStep'));\n    return _this;\n  }\n  /**\n   * The current change buffer.\n   *\n   * @type {module:typing/utils/changebuffer~ChangeBuffer}\n   */\n\n\n  _createClass(DeleteCommand, [{\n    key: \"execute\",\n\n    /**\n     * Executes the delete command. Depending on whether the selection is collapsed or not, deletes its content\n     * or a piece of content in the {@link #direction defined direction}.\n     *\n     * @fires execute\n     * @param {Object} [options] The command options.\n     * @param {'character'} [options.unit='character'] See {@link module:engine/model/utils/modifyselection~modifySelection}'s options.\n     * @param {Number} [options.sequence=1] A number describing which subsequent delete event it is without the key being released.\n     * See the {@link module:engine/view/document~Document#event:delete} event data.\n     * @param {module:engine/model/selection~Selection} [options.selection] Selection to remove. If not set, current model selection\n     * will be used.\n     */\n    value: function execute() {\n      var _this2 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var model = this.editor.model;\n      var doc = model.document;\n      model.enqueueChange(this._buffer.batch, function (writer) {\n        _this2._buffer.lock();\n\n        var selection = writer.createSelection(options.selection || doc.selection); // Do not replace the whole selected content if selection was collapsed.\n        // This prevents such situation:\n        //\n        // <h1></h1><p>[]</p>\t-->  <h1>[</h1><p>]</p> \t\t-->  <p></p>\n        // starting content\t\t-->   after `modifySelection`\t-->  after `deleteContent`.\n\n        var doNotResetEntireContent = selection.isCollapsed; // Try to extend the selection in the specified direction.\n\n        if (selection.isCollapsed) {\n          model.modifySelection(selection, {\n            direction: _this2.direction,\n            unit: options.unit\n          });\n        } // Check if deleting in an empty editor. See #61.\n\n\n        if (_this2._shouldEntireContentBeReplacedWithParagraph(options.sequence || 1)) {\n          _this2._replaceEntireContentWithParagraph(writer);\n\n          return;\n        } // If selection is still collapsed, then there's nothing to delete.\n\n\n        if (selection.isCollapsed) {\n          return;\n        }\n\n        var changeCount = 0;\n        selection.getFirstRange().getMinimalFlatRanges().forEach(function (range) {\n          changeCount += count(range.getWalker({\n            singleCharacters: true,\n            ignoreElementEnd: true,\n            shallow: true\n          }));\n        });\n        model.deleteContent(selection, {\n          doNotResetEntireContent: doNotResetEntireContent\n        });\n\n        _this2._buffer.input(changeCount);\n\n        writer.setSelection(selection);\n\n        _this2._buffer.unlock();\n      });\n    }\n    /**\n     * If the user keeps <kbd>Backspace</kbd> or <kbd>Delete</kbd> key pressed, the content of the current\n     * editable will be cleared. However, this will not yet lead to resetting the remaining block to a paragraph\n     * (which happens e.g. when the user does <kbd>Ctrl</kbd> + <kbd>A</kbd>, <kbd>Backspace</kbd>).\n     *\n     * But, if the user pressed the key in an empty editable for the first time,\n     * we want to replace the entire content with a paragraph if:\n     *\n     * * the current limit element is empty,\n     * * the paragraph is allowed in the limit element,\n     * * the limit doesn't already have a paragraph inside.\n     *\n     * See https://github.com/ckeditor/ckeditor5-typing/issues/61.\n     *\n     * @private\n     * @param {Number} sequence A number describing which subsequent delete event it is without the key being released.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"_shouldEntireContentBeReplacedWithParagraph\",\n    value: function _shouldEntireContentBeReplacedWithParagraph(sequence) {\n      // Does nothing if user pressed and held the \"Backspace\" or \"Delete\" key.\n      if (sequence > 1) {\n        return false;\n      }\n\n      var model = this.editor.model;\n      var doc = model.document;\n      var selection = doc.selection;\n      var limitElement = model.schema.getLimitElement(selection); // If a collapsed selection contains the whole content it means that the content is empty\n      // (from the user perspective).\n\n      var limitElementIsEmpty = selection.isCollapsed && selection.containsEntireContent(limitElement);\n\n      if (!limitElementIsEmpty) {\n        return false;\n      }\n\n      if (!model.schema.checkChild(limitElement, 'paragraph')) {\n        return false;\n      }\n\n      var limitElementFirstChild = limitElement.getChild(0); // Does nothing if the limit element already contains only a paragraph.\n      // We ignore the case when paragraph might have some inline elements (<p><inlineWidget>[]</inlineWidget></p>)\n      // because we don't support such cases yet and it's unclear whether inlineWidget shouldn't be a limit itself.\n\n      if (limitElementFirstChild && limitElementFirstChild.name === 'paragraph') {\n        return false;\n      }\n\n      return true;\n    }\n    /**\n     * The entire content is replaced with the paragraph. Selection is moved inside the paragraph.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_replaceEntireContentWithParagraph\",\n    value: function _replaceEntireContentWithParagraph(writer) {\n      var model = this.editor.model;\n      var doc = model.document;\n      var selection = doc.selection;\n      var limitElement = model.schema.getLimitElement(selection);\n      var paragraph = writer.createElement('paragraph');\n      writer.remove(writer.createRangeIn(limitElement));\n      writer.insert(paragraph, limitElement);\n      writer.setSelection(paragraph, 0);\n    }\n  }, {\n    key: \"buffer\",\n    get: function get() {\n      return this._buffer;\n    }\n  }]);\n\n  return DeleteCommand;\n}(Command);\n\nexport { DeleteCommand as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/deleteobserver\n */\nimport Observer from '@ckeditor/ckeditor5-engine/src/view/observer/observer';\nimport DomEventData from '@ckeditor/ckeditor5-engine/src/view/observer/domeventdata';\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\nimport env from '@ckeditor/ckeditor5-utils/src/env';\n/**\n * Delete observer introduces the {@link module:engine/view/document~Document#event:delete} event.\n *\n * @extends module:engine/view/observer/observer~Observer\n */\n\nvar DeleteObserver =\n/*#__PURE__*/\nfunction (_Observer) {\n  _inherits(DeleteObserver, _Observer);\n\n  function DeleteObserver(view) {\n    var _this;\n\n    _classCallCheck(this, DeleteObserver);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DeleteObserver).call(this, view));\n    var document = view.document;\n    var sequence = 0;\n    document.on('keyup', function (evt, data) {\n      if (data.keyCode == keyCodes[\"delete\"] || data.keyCode == keyCodes.backspace) {\n        sequence = 0;\n      }\n    });\n    document.on('keydown', function (evt, data) {\n      var deleteData = {};\n\n      if (data.keyCode == keyCodes[\"delete\"]) {\n        deleteData.direction = 'forward';\n        deleteData.unit = 'character';\n      } else if (data.keyCode == keyCodes.backspace) {\n        deleteData.direction = 'backward';\n        deleteData.unit = 'codePoint';\n      } else {\n        return;\n      }\n\n      var hasWordModifier = env.isMac ? data.altKey : data.ctrlKey;\n      deleteData.unit = hasWordModifier ? 'word' : deleteData.unit;\n      deleteData.sequence = ++sequence;\n      fireViewDeleteEvent(evt, data.domEvent, deleteData);\n    }); // `beforeinput` is handled only for Android devices. Desktop Chrome and iOS are skipped because they are working fine now.\n\n    if (env.isAndroid) {\n      document.on('beforeinput', function (evt, data) {\n        // If event type is other than `deleteContentBackward` then this is not deleting.\n        if (data.domEvent.inputType != 'deleteContentBackward') {\n          return;\n        }\n\n        var deleteData = {\n          unit: 'codepoint',\n          direction: 'backward',\n          sequence: 1\n        }; // Android IMEs may change the DOM selection on `beforeinput` event so that the selection contains all the text\n        // that the IME wants to remove. We will pass this information to `delete` event so proper part of the content is removed.\n        //\n        // Sometimes it is only expanding by a one character (in case of collapsed selection). In this case we don't need to\n        // set a different selection to remove, it will work just fine.\n\n        var domSelection = data.domTarget.ownerDocument.defaultView.getSelection();\n\n        if (domSelection.anchorNode == domSelection.focusNode && domSelection.anchorOffset + 1 != domSelection.focusOffset) {\n          deleteData.selectionToRemove = view.domConverter.domSelectionToView(domSelection);\n        }\n\n        fireViewDeleteEvent(evt, data.domEvent, deleteData);\n      });\n    }\n\n    function fireViewDeleteEvent(originalEvent, domEvent, deleteData) {\n      // Save the event object to check later if it was stopped or not.\n      var event;\n      document.once('delete', function (evt) {\n        return event = evt;\n      }, {\n        priority: Number.POSITIVE_INFINITY\n      });\n      document.fire('delete', new DomEventData(document, domEvent, deleteData)); // Stop the original event if `delete` event was stopped.\n      // https://github.com/ckeditor/ckeditor5/issues/753\n\n      if (event && event.stop.called) {\n        originalEvent.stop();\n      }\n    }\n\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(DeleteObserver, [{\n    key: \"observe\",\n    value: function observe() {}\n  }]);\n\n  return DeleteObserver;\n}(Observer);\n/**\n * Event fired when the user tries to delete content (e.g. presses <kbd>Delete</kbd> or <kbd>Backspace</kbd>).\n *\n * Note: This event is fired by the {@link module:typing/deleteobserver~DeleteObserver observer}\n * (usually registered by the {@link module:typing/delete~Delete delete feature}).\n *\n * @event module:engine/view/document~Document#event:delete\n * @param {module:engine/view/observer/domeventdata~DomEventData} data\n * @param {'forward'|'delete'} data.direction The direction in which the deletion should happen.\n * @param {'character'|'word'} data.unit The \"amount\" of content that should be deleted.\n * @param {Number} data.sequence A number describing which subsequent delete event it is without the key being released.\n * If it's 2 or more it means that the key was pressed and hold.\n * @param {module:engine/view/selection~Selection} [data.selectionToRemove] View selection which content should be removed. If not set,\n * current selection should be used.\n */\n\n\nexport { DeleteObserver as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/delete\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport DeleteCommand from './deletecommand';\nimport DeleteObserver from './deleteobserver';\nimport env from '@ckeditor/ckeditor5-utils/src/env';\n/**\n * The delete and backspace feature. Handles the <kbd>Delete</kbd> and <kbd>Backspace</kbd> keys in the editor.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar Delete =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(Delete, _Plugin);\n\n  function Delete() {\n    _classCallCheck(this, Delete);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Delete).apply(this, arguments));\n  }\n\n  _createClass(Delete, [{\n    key: \"init\",\n    value: function init() {\n      var editor = this.editor;\n      var view = editor.editing.view;\n      var viewDocument = view.document;\n      view.addObserver(DeleteObserver);\n      editor.commands.add('forwardDelete', new DeleteCommand(editor, 'forward'));\n      editor.commands.add('delete', new DeleteCommand(editor, 'backward'));\n      this.listenTo(viewDocument, 'delete', function (evt, data) {\n        var deleteCommandParams = {\n          unit: data.unit,\n          sequence: data.sequence\n        }; // If a specific (view) selection to remove was set, convert it to a model selection and set as a parameter for `DeleteCommand`.\n\n        if (data.selectionToRemove) {\n          var modelSelection = editor.model.createSelection();\n          var ranges = [];\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = data.selectionToRemove.getRanges()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var viewRange = _step.value;\n              ranges.push(editor.editing.mapper.toModelRange(viewRange));\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n                _iterator[\"return\"]();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          modelSelection.setTo(ranges);\n          deleteCommandParams.selection = modelSelection;\n        }\n\n        editor.execute(data.direction == 'forward' ? 'forwardDelete' : 'delete', deleteCommandParams);\n        data.preventDefault();\n        view.scrollToTheSelection();\n      }); // Android IMEs have a quirk - they change DOM selection after the input changes were performed by the browser.\n      // This happens on `keyup` event. Android doesn't know anything about our deletion and selection handling. Even if the selection\n      // was changed during input events, IME remembers the position where the selection \"should\" be placed and moves it there.\n      //\n      // To prevent incorrect selection, we save the selection after deleting here and then re-set it on `keyup`. This has to be done\n      // on DOM selection level, because on `keyup` the model selection is still the same as it was just after deletion, so it\n      // wouldn't be changed and the fix would do nothing.\n      //\n\n      if (env.isAndroid) {\n        var domSelectionAfterDeletion = null;\n        this.listenTo(viewDocument, 'delete', function (evt, data) {\n          var domSelection = data.domTarget.ownerDocument.defaultView.getSelection();\n          domSelectionAfterDeletion = {\n            anchorNode: domSelection.anchorNode,\n            anchorOffset: domSelection.anchorOffset,\n            focusNode: domSelection.focusNode,\n            focusOffset: domSelection.focusOffset\n          };\n        }, {\n          priority: 'lowest'\n        });\n        this.listenTo(viewDocument, 'keyup', function (evt, data) {\n          var domSelection = data.domTarget.ownerDocument.defaultView.getSelection();\n          domSelection.collapse(domSelectionAfterDeletion.anchorNode, domSelectionAfterDeletion.anchorOffset);\n          domSelection.extend(domSelectionAfterDeletion.focusNode, domSelectionAfterDeletion.focusOffset);\n          domSelectionAfterDeletion = null;\n        });\n      }\n    }\n  }], [{\n    key: \"pluginName\",\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return 'Delete';\n    }\n  }]);\n\n  return Delete;\n}(Plugin);\n\nexport { Delete as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module typing/typing\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport Input from './input';\nimport Delete from './delete';\n/**\n * The typing feature. It handles typing.\n *\n * This is a \"glue\" plugin which loads the {@link module:typing/input~Input} and {@link module:typing/delete~Delete}\n * plugins.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar Typing =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(Typing, _Plugin);\n\n  function Typing() {\n    _classCallCheck(this, Typing);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Typing).apply(this, arguments));\n  }\n\n  _createClass(Typing, null, [{\n    key: \"requires\",\n    get: function get() {\n      return [Input, Delete];\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"pluginName\",\n    get: function get() {\n      return 'Typing';\n    }\n  }]);\n\n  return Typing;\n}(Plugin);\n/**\n * The configuration of the typing features. Used by the features from the `@ckeditor/ckeditor5-typing` package.\n *\n * Read more in {@link module:typing/typing~TypingConfig}.\n *\n * @member {module:typing/typing~TypingConfig} module:core/editor/editorconfig~EditorConfig#typing\n */\n\n/**\n * The configuration of the typing features. Used by the typing features in `@ckeditor/ckeditor5-typing` package.\n *\n *\t\tClassicEditor\n *\t\t\t.create( editorElement, {\n * \t\t\t\ttyping: ... // Typing feature options.\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * See {@link module:core/editor/editorconfig~EditorConfig all editor options}.\n *\n * @interface TypingConfig\n */\n\n/**\n * The granularity of undo/redo for typing and deleting. The value `20` means (more or less) that a new undo step\n * is created every 20 characters are inserted or deleted.\n *\n * @member {Number} [module:typing/typing~TypingConfig#undoStep=20]\n */\n\n\nexport { Typing as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/model/operation/nooperation\n */\nimport Operation from './operation';\n/**\n * Operation which is doing nothing (\"empty operation\", \"do-nothing operation\", \"noop\"). This is an operation,\n * which when executed does not change the tree model. It still has some parameters defined for transformation purposes.\n *\n * In most cases this operation is a result of transforming operations. When transformation returns\n * {@link module:engine/model/operation/nooperation~NoOperation} it means that changes done by the transformed operation\n * have already been applied.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\n\nvar NoOperation =\n/*#__PURE__*/\nfunction (_Operation) {\n  _inherits(NoOperation, _Operation);\n\n  function NoOperation() {\n    _classCallCheck(this, NoOperation);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(NoOperation).apply(this, arguments));\n  }\n\n  _createClass(NoOperation, [{\n    key: \"clone\",\n\n    /**\n     * Creates and returns an operation that has the same parameters as this operation.\n     *\n     * @returns {module:engine/model/operation/nooperation~NoOperation} Clone of this operation.\n     */\n    value: function clone() {\n      return new NoOperation(this.baseVersion);\n    }\n    /**\n     * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n     *\n     * @returns {module:engine/model/operation/nooperation~NoOperation}\n     */\n\n  }, {\n    key: \"getReversed\",\n    value: function getReversed() {\n      return new NoOperation(this.baseVersion + 1);\n    }\n  }, {\n    key: \"_execute\",\n    value: function _execute() {}\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"type\",\n    get: function get() {\n      return 'noop';\n    }\n  }], [{\n    key: \"className\",\n    get: function get() {\n      return 'NoOperation';\n    }\n  }]);\n\n  return NoOperation;\n}(Operation);\n\nexport { NoOperation as default };","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\nimport InsertOperation from './insertoperation';\nimport AttributeOperation from './attributeoperation';\nimport RenameOperation from './renameoperation';\nimport MarkerOperation from './markeroperation';\nimport MoveOperation from './moveoperation';\nimport RootAttributeOperation from './rootattributeoperation';\nimport MergeOperation from './mergeoperation';\nimport SplitOperation from './splitoperation';\nimport NoOperation from './nooperation';\nimport Range from '../range';\nimport Position from '../position';\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\nimport log from '@ckeditor/ckeditor5-utils/src/log';\nvar transformations = new Map();\n/**\n * @module engine/model/operation/transform\n */\n\n/**\n * Sets a transformation function to be be used to transform instances of class `OperationA` by instances of class `OperationB`.\n *\n * The `transformationFunction` is passed three parameters:\n *\n * * `a` - operation to be transformed, an instance of `OperationA`,\n * * `b` - operation to be transformed by, an instance of `OperationB`,\n * * {@link module:engine/model/operation/transform~TransformationContext `context`} - object with additional information about\n * transformation context.\n *\n * The `transformationFunction` should return transformation result, which is an array with one or multiple\n * {@link module:engine/model/operation/operation~Operation operation} instances.\n *\n * @protected\n * @param {Function} OperationA\n * @param {Function} OperationB\n * @param {Function} transformationFunction Function to use for transforming.\n */\n\nfunction setTransformation(OperationA, OperationB, transformationFunction) {\n  var aGroup = transformations.get(OperationA);\n\n  if (!aGroup) {\n    aGroup = new Map();\n    transformations.set(OperationA, aGroup);\n  }\n\n  aGroup.set(OperationB, transformationFunction);\n}\n/**\n * Returns a previously set transformation function for transforming an instance of `OperationA` by an instance of `OperationB`.\n *\n * If no transformation was set for given pair of operations, {@link module:engine/model/operation/transform~noUpdateTransformation}\n * is returned. This means that if no transformation was set, the `OperationA` instance will not change when transformed\n * by the `OperationB` instance.\n *\n * @private\n * @param {Function} OperationA\n * @param {Function} OperationB\n * @returns {Function} Function set to transform an instance of `OperationA` by an instance of `OperationB`.\n */\n\n\nfunction getTransformation(OperationA, OperationB) {\n  var aGroup = transformations.get(OperationA);\n\n  if (aGroup && aGroup.has(OperationB)) {\n    return aGroup.get(OperationB);\n  }\n\n  return noUpdateTransformation;\n}\n/**\n * A transformation function that only clones operation to transform, without changing it.\n *\n * @private\n * @param {module:engine/model/operation/operation~Operation} a Operation to transform.\n * @returns {Array.<module:engine/model/operation/operation~Operation>}\n */\n\n\nfunction noUpdateTransformation(a) {\n  return [a];\n}\n/**\n * Transforms operation `a` by operation `b`.\n *\n * @param {module:engine/model/operation/operation~Operation} a Operation to be transformed.\n * @param {module:engine/model/operation/operation~Operation} b Operation to transform by.\n * @param {module:engine/model/operation/transform~TransformationContext} context Transformation context for this transformation.\n * @returns {Array.<module:engine/model/operation/operation~Operation>} Transformation result.\n */\n\n\nexport function transform(a, b) {\n  var context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var transformationFunction = getTransformation(a.constructor, b.constructor);\n\n  try {\n    a = a.clone();\n    return transformationFunction(a, b, context);\n  } catch (e) {\n    log.error('Error during operation transformation!', e.message);\n    log.error('Transformed operation', a);\n    log.error('Operation transformed by', b);\n    log.error('context.aIsStrong', context.aIsStrong);\n    log.error('context.aWasUndone', context.aWasUndone);\n    log.error('context.bWasUndone', context.bWasUndone);\n    log.error('context.abRelation', context.abRelation);\n    log.error('context.baRelation', context.baRelation);\n    throw e;\n  }\n}\n/**\n * Performs a transformation of two sets of operations - `operationsA` and `operationsB`. The transformation is two-way -\n * both transformed `operationsA` and transformed `operationsB` are returned.\n *\n * Note, that the first operation in each set should base on the same document state (\n * {@link module:engine/model/document~Document#version document version}).\n *\n * It is assumed that `operationsA` are \"more important\" during conflict resolution between two operations.\n *\n * New copies of both passed arrays and operations inside them are returned. Passed arguments are not altered.\n *\n * Base versions of the transformed operations sets are updated accordingly. For example, assume that base versions are `4`\n * and there are `3` operations in `operationsA` and `5` operations in `operationsB`. Then:\n *\n * * transformed `operationsA` will start from base version `9` (`4` base version + `5` operations B),\n * * transformed `operationsB` will start from base version `7` (`4` base version + `3` operations A).\n *\n * If no operation was broken into two during transformation, then both sets will end up with an operation that bases on version `11`:\n *\n * * transformed `operationsA` start from `9` and there are `3` of them, so the last will have `baseVersion` equal to `11`,\n * * transformed `operationsB` start from `7` and there are `5` of them, so the last will have `baseVersion` equal to `11`.\n *\n * @param {Array.<module:engine/model/operation/operation~Operation>} operationsA\n * @param {Array.<module:engine/model/operation/operation~Operation>} operationsB\n * @param {Object} options Additional transformation options.\n * @param {module:engine/model/document~Document|null} options.document Document which the operations change.\n * @param {Boolean} [options.useRelations=false] Whether during transformation relations should be used (used during undo for\n * better conflict resolution).\n * @param {Boolean} [options.padWithNoOps=false] Whether additional {@link module:engine/model/operation/nooperation~NoOperation}s\n * should be added to the transformation results to force the same last base version for both transformed sets (in case\n * if some operations got broken into multiple operations during transformation).\n * @returns {Object} Transformation result.\n * @returns {Array.<module:engine/model/operation/operation~Operation>} return.operationsA Transformed `operationsA`.\n * @returns {Array.<module:engine/model/operation/operation~Operation>} return.operationsB Transformed `operationsB`.\n */\n\nexport function transformSets(operationsA, operationsB, options) {\n  // Create new arrays so the originally passed arguments are not changed.\n  // No need to clone operations, they are cloned as they are transformed.\n  operationsA = operationsA.slice();\n  operationsB = operationsB.slice(); // If one of sets is empty there is simply nothing to transform, so return sets as they are.\n\n  if (operationsA.length == 0 || operationsB.length == 0) {\n    return {\n      operationsA: operationsA,\n      operationsB: operationsB\n    };\n  } //\n  // Following is a description of transformation process:\n  //\n  // There are `operationsA` and `operationsB` to be transformed, both by both.\n  //\n  // So, suppose we have sets of two operations each: `operationsA` = `[ a1, a2 ]`, `operationsB` = `[ b1, b2 ]`.\n  //\n  // Remember, that we can only transform operations that base on the same context. We assert that `a1` and `b1` base on\n  // the same context and we transform them. Then, we get `a1'` and `b1'`. `a2` bases on a context with `a1` -- `a2`\n  // is an operation that followed `a1`. Similarly, `b2` bases on a context with `b1`.\n  //\n  // However, since `a1'` is a result of transformation by `b1`, `a1'` now also has a context with `b1`. This means that\n  // we can safely transform `a1'` by `b2`. As we finish transforming `a1`, we also transformed all `operationsB`.\n  // All `operationsB` also have context including `a1`. Now, we can properly transform `a2` by those operations.\n  //\n  // The transformation process can be visualized on a transformation diagram (\"diamond diagram\"):\n  //\n  //          [the initial state]\n  //         [common for a1 and b1]\n  //\n  //                   *\n  //                  / \\\n  //                 /   \\\n  //               b1     a1\n  //               /       \\\n  //              /         \\\n  //             *           *\n  //            / \\         / \\\n  //           /   \\       /   \\\n  //         b2    a1'   b1'    a2\n  //         /       \\   /       \\\n  //        /         \\ /         \\\n  //       *           *           *\n  //        \\         / \\         /\n  //         \\       /   \\       /\n  //        a1''   b2'   a2'   b1''\n  //           \\   /       \\   /\n  //            \\ /         \\ /\n  //             *           *\n  //              \\         /\n  //               \\       /\n  //              a2''   b2''\n  //                 \\   /\n  //                  \\ /\n  //                   *\n  //\n  //           [the final state]\n  //\n  // The final state can be reached from the initial state by applying `a1`, `a2`, `b1''` and `b2''`, as well as by\n  // applying `b1`, `b2`, `a1''`, `a2''`. Note how the operations get to a proper common state before each pair is\n  // transformed.\n  //\n  // Another thing to consider is that an operation during transformation can be broken into multiple operations.\n  // Suppose that `a1` * `b1` = `[ a11', a12' ]` (instead of `a1'` that we considered previously).\n  //\n  // In that case, we leave `a12'` for later and we continue transforming `a11'` until it is transformed by all `operationsB`\n  // (in our case it is just `b2`). At this point, `b1` is transformed by \"whole\" `a1`, while `b2` is only transformed\n  // by `a11'`. Similarly, `a12'` is only transformed by `b1`. This leads to a conclusion that we need to start transforming `a12'`\n  // from the moment just after it was broken. So, `a12'` is transformed by `b2`. Now, \"the whole\" `a1` is transformed\n  // by `operationsB`, while all `operationsB` are transformed by \"the whole\" `a1`. This means that we can continue with\n  // following `operationsA` (in our case it is just `a2`).\n  //\n  // Of course, also `operationsB` can be broken. However, since we focus on transforming operation `a` to the end,\n  // the only thing to do is to store both pieces of operation `b`, so that the next transformed operation `a` will\n  // be transformed by both of them.\n  //\n  //                       *\n  //                      / \\\n  //                     /   \\\n  //                    /     \\\n  //                  b1       a1\n  //                  /         \\\n  //                 /           \\\n  //                /             \\\n  //               *               *\n  //              / \\             / \\\n  //             /  a11'         /   \\\n  //            /     \\         /     \\\n  //          b2       *      b1'      a2\n  //          /       / \\     /         \\\n  //         /       /  a12' /           \\\n  //        /       /     \\ /             \\\n  //       *       b2'     *               *\n  //        \\     /       / \\             /\n  //       a11'' /     b21'' \\           /\n  //          \\ /       /     \\         /\n  //           *       *      a2'     b1''\n  //            \\     / \\       \\     /\n  //          a12'' b22''\\       \\   /\n  //              \\ /     \\       \\ /\n  //               *      a2''     *\n  //                \\       \\     /\n  //                 \\       \\  b21'''\n  //                  \\       \\ /\n  //                a2'''      *\n  //                    \\     /\n  //                     \\  b22'''\n  //                      \\ /\n  //                       *\n  //\n  // Note, how `a1` is broken and transformed into `a11'` and `a12'`, while `b2'` got broken and transformed into `b21''` and `b22''`.\n  //\n  // Having all that on mind, here is an outline for the transformation process algorithm:\n  //\n  // 1. We have `operationsA` and `operationsB` array, which we dynamically update as the transformation process goes.\n  //\n  // 2. We take next (or first) operation from `operationsA` and check from which operation `b` we need to start transforming it.\n  // All original `operationsA` are set to be transformed starting from the first operation `b`.\n  //\n  // 3. We take operations from `operationsB`, one by one, starting from the correct one, and transform operation `a`\n  // by operation `b` (and vice versa). We update `operationsA` and `operationsB` by replacing the original operations\n  // with the transformation results.\n  //\n  // 4. If operation is broken into multiple operations, we save all the new operations in the place of the\n  // original operation.\n  //\n  // 5. Additionally, if operation `a` was broken, for the \"new\" operation, we remember from which operation `b` it should\n  // be transformed by.\n  //\n  // 6. We continue transforming \"current\" operation `a` until it is transformed by all `operationsB`. Then, go to 2.\n  // unless the last operation `a` was transformed.\n  //\n  // The actual implementation of the above algorithm is slightly different, as only one loop (while) is used.\n  // The difference is that we have \"current\" `a` operation to transform and we store the index of the next `b` operation\n  // to transform by. Each loop operates on two indexes then: index pointing to currently processed `a` operation and\n  // index pointing to next `b` operation. Each loop is just one `a * b` + `b * a` transformation. After each loop\n  // operation `b` index is updated. If all `b` operations were visited for the current `a` operation, we change\n  // current `a` operation index to the next one.\n  //\n  // For each operation `a`, keeps information what is the index in `operationsB` from which the transformation should start.\n\n\n  var nextTransformIndex = new WeakMap(); // For all the original `operationsA`, set that they should be transformed starting from the first of `operationsB`.\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = operationsA[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var op = _step.value;\n      nextTransformIndex.set(op, 0);\n    } // Additional data that is used for some postprocessing after the main transformation process is done.\n\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var data = {\n    nextBaseVersionA: operationsA[operationsA.length - 1].baseVersion + 1,\n    nextBaseVersionB: operationsB[operationsB.length - 1].baseVersion + 1,\n    originalOperationsACount: operationsA.length,\n    originalOperationsBCount: operationsB.length\n  };\n  var contextFactory = new ContextFactory(options.document, options.useRelations, options.forceWeakRemove);\n  contextFactory.setOriginalOperations(operationsA);\n  contextFactory.setOriginalOperations(operationsB); // Index of currently transformed operation `a`.\n\n  var i = 0; // While not all `operationsA` are transformed...\n\n  while (i < operationsA.length) {\n    var _operationsA, _operationsB;\n\n    // Get \"current\" operation `a`.\n    var opA = operationsA[i]; // For the \"current\" operation `a`, get the index of the next operation `b` to transform by.\n\n    var indexB = nextTransformIndex.get(opA); // If operation `a` was already transformed by every operation `b`, change \"current\" operation `a` to the next one.\n\n    if (indexB == operationsB.length) {\n      i++;\n      continue;\n    }\n\n    var opB = operationsB[indexB]; // Transform `a` by `b` and `b` by `a`.\n\n    var newOpsA = transform(opA, opB, contextFactory.getContext(opA, opB, true));\n    var newOpsB = transform(opB, opA, contextFactory.getContext(opB, opA, false)); // As a result we get one or more `newOpsA` and one or more `newOpsB` operations.\n    // Update contextual information about operations.\n\n    contextFactory.updateRelation(opA, opB);\n    contextFactory.setOriginalOperations(newOpsA, opA);\n    contextFactory.setOriginalOperations(newOpsB, opB); // For new `a` operations, update their index of the next operation `b` to transform them by.\n    //\n    // This is needed even if there was only one result (`a` was not broken) because that information is used\n    // at the beginning of this loop every time.\n\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n      for (var _iterator2 = newOpsA[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        var newOpA = _step2.value;\n        // Acknowledge, that operation `b` also might be broken into multiple operations.\n        //\n        // This is why we raise `indexB` not just by 1. If `newOpsB` are multiple operations, they will be\n        // spliced in the place of `opB`. So we need to change `transformBy` accordingly, so that an operation won't\n        // be transformed by the same operation (part of it) again.\n        nextTransformIndex.set(newOpA, indexB + newOpsB.length);\n      } // Update `operationsA` and `operationsB` with the transformed versions.\n\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n          _iterator2[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n\n    (_operationsA = operationsA).splice.apply(_operationsA, [i, 1].concat(_toConsumableArray(newOpsA)));\n\n    (_operationsB = operationsB).splice.apply(_operationsB, [indexB, 1].concat(_toConsumableArray(newOpsB)));\n  }\n\n  if (options.padWithNoOps) {\n    // If no-operations padding is enabled, count how many extra `a` and `b` operations were generated.\n    var brokenOperationsACount = operationsA.length - data.originalOperationsACount;\n    var brokenOperationsBCount = operationsB.length - data.originalOperationsBCount; // Then, if that number is not the same, pad `operationsA` or `operationsB` with correct number of no-ops so\n    // that the base versions are equalled.\n    //\n    // Note that only one array will be updated, as only one of those subtractions can be greater than zero.\n\n    padWithNoOps(operationsA, brokenOperationsBCount - brokenOperationsACount);\n    padWithNoOps(operationsB, brokenOperationsACount - brokenOperationsBCount);\n  } // Finally, update base versions of transformed operations.\n\n\n  updateBaseVersions(operationsA, data.nextBaseVersionB);\n  updateBaseVersions(operationsB, data.nextBaseVersionA);\n  return {\n    operationsA: operationsA,\n    operationsB: operationsB\n  };\n} // Gathers additional data about operations processed during transformation. Can be used to obtain contextual information\n// about two operations that are about to be transformed. This contextual information can be used for better conflict resolution.\n\nvar ContextFactory =\n/*#__PURE__*/\nfunction () {\n  // Creates `ContextFactory` instance.\n  //\n  // @param {module:engine/model/document~Document} document Document which the operations change.\n  // @param {Boolean} useRelations Whether during transformation relations should be used (used during undo for\n  // better conflict resolution).\n  // @param {Boolean} [forceWeakRemove=false] If set to `false`, remove operation will be always stronger than move operation,\n  // so the removed nodes won't end up back in the document root. When set to `true`, context data will be used.\n  function ContextFactory(document, useRelations) {\n    var forceWeakRemove = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    _classCallCheck(this, ContextFactory);\n\n    // `model.History` instance which information about undone operations will be taken from.\n    this._history = document.history; // Whether additional context should be used.\n\n    this._useRelations = useRelations;\n    this._forceWeakRemove = !!forceWeakRemove; // For each operation that is created during transformation process, we keep a reference to the original operation\n    // which it comes from. The original operation works as a kind of \"identifier\". Every contextual information\n    // gathered during transformation that we want to save for given operation, is actually saved for the original operation.\n    // This way no matter if operation `a` is cloned, then transformed, even breaks, we still have access to the previously\n    // gathered data through original operation reference.\n\n    this._originalOperations = new Map(); // Relations is a double-map structure (maps in map) where for two operations we store how those operations were related\n    // to each other. Those relations are evaluated during transformation process. For every transformated pair of operations\n    // we keep relations between them.\n\n    this._relations = new Map();\n  } // Sets \"original operation\" for given operations.\n  //\n  // During transformation process, operations are cloned, then changed, then processed again, sometimes broken into two\n  // or multiple operations. When gathering additional data it is important that all operations can be somehow linked\n  // so a cloned and transformed \"version\" still kept track of the data assigned earlier to it.\n  //\n  // The original operation object will be used as such an universal linking id. Throughout the transformation process\n  // all cloned operations will refer to \"the original operation\" when storing and reading additional data.\n  //\n  // If `takeFrom` is not set, each operation from `operations` array will be assigned itself as \"the original operation\".\n  // This should be used as an initialization step.\n  //\n  // If `takeFrom` is set, each operation from `operations` will be assigned the same original operation as assigned\n  // for `takeFrom` operation. This should be used to update original operations. It should be used in a way that\n  // `operations` are the result of `takeFrom` transformation to ensure proper \"original operation propagation\".\n  //\n  // @param {Array.<module:engine/model/operation/operation~Operation>} operations\n  // @param {module:engine/model/operation/operation~Operation|null} [takeFrom=null]\n\n\n  _createClass(ContextFactory, [{\n    key: \"setOriginalOperations\",\n    value: function setOriginalOperations(operations) {\n      var takeFrom = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var originalOperation = takeFrom ? this._originalOperations.get(takeFrom) : null;\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = operations[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var operation = _step3.value;\n\n          this._originalOperations.set(operation, originalOperation || operation);\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n            _iterator3[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    } // Saves a relation between operations `opA` and `opB`.\n    //\n    // Relations are then later used to help solve conflicts when operations are transformed.\n    //\n    // @param {module:engine/model/operation/operation~Operation} opA\n    // @param {module:engine/model/operation/operation~Operation} opB\n\n  }, {\n    key: \"updateRelation\",\n    value: function updateRelation(opA, opB) {\n      // The use of relations is described in a bigger detail in transformation functions.\n      //\n      // In brief, this function, for specified pairs of operation types, checks how positions defined in those operations relate.\n      // Then those relations are saved. For example, for two move operations, it is saved if one of those operations target\n      // position is before the other operation source position. This kind of information gives contextual information when\n      // transformation is used during undo. Similar checks are done for other pairs of operations.\n      //\n      switch (opA.constructor) {\n        case MoveOperation:\n          {\n            switch (opB.constructor) {\n              case MergeOperation:\n                {\n                  if (opA.targetPosition.isEqual(opB.sourcePosition) || opB.movedRange.containsPosition(opA.targetPosition)) {\n                    this._setRelation(opA, opB, 'insertAtSource');\n                  } else if (opA.targetPosition.isEqual(opB.deletionPosition)) {\n                    this._setRelation(opA, opB, 'insertBetween');\n                  } else if (opA.targetPosition.isAfter(opB.sourcePosition)) {\n                    this._setRelation(opA, opB, 'moveTargetAfter');\n                  }\n\n                  break;\n                }\n\n              case MoveOperation:\n                {\n                  if (opA.targetPosition.isEqual(opB.sourcePosition) || opA.targetPosition.isBefore(opB.sourcePosition)) {\n                    this._setRelation(opA, opB, 'insertBefore');\n                  } else {\n                    this._setRelation(opA, opB, 'insertAfter');\n                  }\n\n                  break;\n                }\n            }\n\n            break;\n          }\n\n        case SplitOperation:\n          {\n            switch (opB.constructor) {\n              case MergeOperation:\n                {\n                  if (opA.splitPosition.isBefore(opB.sourcePosition)) {\n                    this._setRelation(opA, opB, 'splitBefore');\n                  }\n\n                  break;\n                }\n\n              case MoveOperation:\n                {\n                  if (opA.splitPosition.isEqual(opB.sourcePosition) || opA.splitPosition.isBefore(opB.sourcePosition)) {\n                    this._setRelation(opA, opB, 'splitBefore');\n                  }\n\n                  break;\n                }\n            }\n\n            break;\n          }\n\n        case MergeOperation:\n          {\n            switch (opB.constructor) {\n              case MergeOperation:\n                {\n                  if (!opA.targetPosition.isEqual(opB.sourcePosition)) {\n                    this._setRelation(opA, opB, 'mergeTargetNotMoved');\n                  }\n\n                  if (opA.sourcePosition.isEqual(opB.targetPosition)) {\n                    this._setRelation(opA, opB, 'mergeSourceNotMoved');\n                  }\n\n                  if (opA.sourcePosition.isEqual(opB.sourcePosition)) {\n                    this._setRelation(opA, opB, 'mergeSameElement');\n                  }\n\n                  break;\n                }\n\n              case SplitOperation:\n                {\n                  if (opA.sourcePosition.isEqual(opB.splitPosition)) {\n                    this._setRelation(opA, opB, 'splitAtSource');\n                  }\n                }\n            }\n\n            break;\n          }\n\n        case MarkerOperation:\n          {\n            var markerRange = opA.newRange;\n\n            if (!markerRange) {\n              return;\n            }\n\n            switch (opB.constructor) {\n              case MoveOperation:\n                {\n                  var movedRange = Range._createFromPositionAndShift(opB.sourcePosition, opB.howMany);\n\n                  var affectedLeft = movedRange.containsPosition(markerRange.start) || movedRange.start.isEqual(markerRange.start);\n                  var affectedRight = movedRange.containsPosition(markerRange.end) || movedRange.end.isEqual(markerRange.end);\n\n                  if ((affectedLeft || affectedRight) && !movedRange.containsRange(markerRange)) {\n                    this._setRelation(opA, opB, {\n                      side: affectedLeft ? 'left' : 'right',\n                      path: affectedLeft ? markerRange.start.path.slice() : markerRange.end.path.slice()\n                    });\n                  }\n\n                  break;\n                }\n\n              case MergeOperation:\n                {\n                  var wasInLeftElement = markerRange.start.isEqual(opB.targetPosition);\n                  var wasStartBeforeMergedElement = markerRange.start.isEqual(opB.deletionPosition);\n                  var wasEndBeforeMergedElement = markerRange.end.isEqual(opB.deletionPosition);\n                  var wasInRightElement = markerRange.end.isEqual(opB.sourcePosition);\n\n                  if (wasInLeftElement || wasStartBeforeMergedElement || wasEndBeforeMergedElement || wasInRightElement) {\n                    this._setRelation(opA, opB, {\n                      wasInLeftElement: wasInLeftElement,\n                      wasStartBeforeMergedElement: wasStartBeforeMergedElement,\n                      wasEndBeforeMergedElement: wasEndBeforeMergedElement,\n                      wasInRightElement: wasInRightElement\n                    });\n                  }\n\n                  break;\n                }\n            }\n\n            break;\n          }\n      }\n    } // Evaluates and returns contextual information about two given operations `opA` and `opB` which are about to be transformed.\n    //\n    // @param {module:engine/model/operation/operation~Operation} opA\n    // @param {module:engine/model/operation/operation~Operation} opB\n    // @returns {module:engine/model/operation/transform~TransformationContext}\n\n  }, {\n    key: \"getContext\",\n    value: function getContext(opA, opB, aIsStrong) {\n      return {\n        aIsStrong: aIsStrong,\n        aWasUndone: this._wasUndone(opA),\n        bWasUndone: this._wasUndone(opB),\n        abRelation: this._useRelations ? this._getRelation(opA, opB) : null,\n        baRelation: this._useRelations ? this._getRelation(opB, opA) : null,\n        forceWeakRemove: this._forceWeakRemove\n      };\n    } // Returns whether given operation `op` has already been undone.\n    //\n    // Information whether an operation was undone gives more context when making a decision when two operations are in conflict.\n    //\n    // @param {module:engine/model/operation/operation~Operation} op\n    // @returns {Boolean}\n\n  }, {\n    key: \"_wasUndone\",\n    value: function _wasUndone(op) {\n      // For `op`, get its original operation. After all, if `op` is a clone (or even transformed clone) of another\n      // operation, literally `op` couldn't be undone. It was just generated. If anything, it was the operation it origins\n      // from which was undone. So get that original operation.\n      var originalOp = this._originalOperations.get(op); // And check with the document if the original operation was undone.\n\n\n      return originalOp.wasUndone || this._history.isUndoneOperation(originalOp);\n    } // Returns a relation between `opA` and an operation which is undone by `opB`. This can be `String` value if a relation\n    // was set earlier or `null` if there was no relation between those operations.\n    //\n    // This is a little tricky to understand, so let's compare it to `ContextFactory#_wasUndone`.\n    //\n    // When `wasUndone( opB )` is used, we check if the `opB` has already been undone. It is obvious, that the\n    // undoing operation must happen after the undone operation. So, essentially, we have `opB`, we take document history,\n    // we look forward in the future and ask if in that future `opB` was undone.\n    //\n    // Relations is a backward process to `wasUndone()`.\n    //\n    // Long story short - using relations is asking what happened in the past. Looking back. This time we have an undoing\n    // operation `opB` which has undone some other operation. When there is a transformation `opA` x `opB` and there is\n    // a conflict to solve and `opB` is an undoing operation, we can look back in the history and see what was a relation\n    // between `opA` and the operation which `opB` undone. Basing on that relation from the past, we can now make\n    // a better decision when resolving a conflict between two operations, because we know more about the context of\n    // those two operations.\n    //\n    // This is why this function does not return a relation directly between `opA` and `opB` because we need to look\n    // back to search for a meaningful contextual information.\n    //\n    // @param {module:engine/model/operation/operation~Operation} opA\n    // @param {module:engine/model/operation/operation~Operation} opB\n    // @returns {String|null}\n\n  }, {\n    key: \"_getRelation\",\n    value: function _getRelation(opA, opB) {\n      // Get the original operation. Similarly as in `wasUndone()` it is used as an universal identifier for stored data.\n      var origB = this._originalOperations.get(opB);\n\n      var undoneB = this._history.getUndoneOperation(origB); // If `opB` is not undoing any operation, there is no relation.\n\n\n      if (!undoneB) {\n        return null;\n      }\n\n      var origA = this._originalOperations.get(opA);\n\n      var relationsA = this._relations.get(origA); // Get all relations for `opA`, and check if there is a relation with `opB`-undone-counterpart. If so, return it.\n\n\n      if (relationsA) {\n        return relationsA.get(undoneB) || null;\n      }\n\n      return null;\n    } // Helper function for `ContextFactory#updateRelations`.\n    //\n    // @private\n    // @param {module:engine/model/operation/operation~Operation} opA\n    // @param {module:engine/model/operation/operation~Operation} opB\n    // @param {String} relation\n\n  }, {\n    key: \"_setRelation\",\n    value: function _setRelation(opA, opB, relation) {\n      // As always, setting is for original operations, not the clones/transformed operations.\n      var origA = this._originalOperations.get(opA);\n\n      var origB = this._originalOperations.get(opB);\n\n      var relationsA = this._relations.get(origA);\n\n      if (!relationsA) {\n        relationsA = new Map();\n\n        this._relations.set(origA, relationsA);\n      }\n\n      relationsA.set(origB, relation);\n    }\n  }]);\n\n  return ContextFactory;\n}();\n/**\n * Holds additional contextual information about a transformed pair of operations (`a` and `b`). Those information\n * can be used for better conflict resolving.\n *\n * @typedef {Object} module:engine/model/operation/transform~TransformationContext\n *\n * @property {Boolean} aIsStrong Whether `a` is strong operation in this transformation, or weak.\n * @property {Boolean} aWasUndone Whether `a` operation was undone.\n * @property {Boolean} bWasUndone Whether `b` operation was undone.\n * @property {String|null} abRelation The relation between `a` operation and an operation undone by `b` operation.\n * @property {String|null} baRelation The relation between `b` operation and an operation undone by `a` operation.\n */\n\n/**\n * An utility function that updates {@link module:engine/model/operation/operation~Operation#baseVersion base versions}\n * of passed operations.\n *\n * The function simply sets `baseVersion` as a base version of the first passed operation and then increments it for\n * each following operation in `operations`.\n *\n * @private\n * @param {Array.<module:engine/model/operation/operation~Operation>} operations Operations to update.\n * @param {Number} baseVersion Base version to set for the first operation in `operations`.\n */\n\n\nfunction updateBaseVersions(operations, baseVersion) {\n  var _iteratorNormalCompletion4 = true;\n  var _didIteratorError4 = false;\n  var _iteratorError4 = undefined;\n\n  try {\n    for (var _iterator4 = operations[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n      var operation = _step4.value;\n      operation.baseVersion = baseVersion++;\n    }\n  } catch (err) {\n    _didIteratorError4 = true;\n    _iteratorError4 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion4 && _iterator4[\"return\"] != null) {\n        _iterator4[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError4) {\n        throw _iteratorError4;\n      }\n    }\n  }\n}\n/**\n * Adds `howMany` instances of {@link module:engine/model/operation/nooperation~NoOperation} to `operations` set.\n *\n * @private\n * @param {Array.<module:engine/model/operation/operation~Operation>} operations\n * @param {Number} howMany\n */\n\n\nfunction padWithNoOps(operations, howMany) {\n  for (var i = 0; i < howMany; i++) {\n    operations.push(new NoOperation(0));\n  }\n} // -----------------------\n\n\nsetTransformation(AttributeOperation, AttributeOperation, function (a, b, context) {\n  if (a.key === b.key) {\n    // If operations attributes are in conflict, check if their ranges intersect and manage them properly.\n    // First, we want to apply change to the part of a range that has not been changed by the other operation.\n    var operations = a.range.getDifference(b.range).map(function (range) {\n      return new AttributeOperation(range, a.key, a.oldValue, a.newValue, 0);\n    }); // Then we take care of the common part of ranges.\n\n    var common = a.range.getIntersection(b.range);\n\n    if (common) {\n      // If this operation is more important, we also want to apply change to the part of the\n      // original range that has already been changed by the other operation. Since that range\n      // got changed we also have to update `oldValue`.\n      if (context.aIsStrong) {\n        operations.push(new AttributeOperation(common, b.key, b.newValue, a.newValue, 0));\n      }\n    }\n\n    if (operations.length == 0) {\n      return [new NoOperation(0)];\n    }\n\n    return operations;\n  } else {\n    // If operations don't conflict, simply return an array containing just a clone of this operation.\n    return [a];\n  }\n});\nsetTransformation(AttributeOperation, InsertOperation, function (a, b) {\n  // Case 1:\n  //\n  // The attribute operation range includes the position where nodes were inserted.\n  // There are two possible scenarios: the inserted nodes were text and they should receive attributes or\n  // the inserted nodes were elements and they should not receive attributes.\n  //\n  if (a.range.start.hasSameParentAs(b.position) && a.range.containsPosition(b.position)) {\n    // If new nodes should not receive attributes, two separated ranges will be returned.\n    // Otherwise, one expanded range will be returned.\n    var range = a.range._getTransformedByInsertion(b.position, b.howMany, !b.shouldReceiveAttributes);\n\n    var result = range.map(function (r) {\n      return new AttributeOperation(r, a.key, a.oldValue, a.newValue, a.baseVersion);\n    });\n\n    if (b.shouldReceiveAttributes) {\n      // `AttributeOperation#range` includes some newly inserted text.\n      // The operation should also change the attribute of that text. An example:\n      //\n      // Bold should be applied on the following range:\n      // <p>Fo[zb]ar</p>\n      //\n      // In meantime, new text is typed:\n      // <p>Fozxxbar</p>\n      //\n      // Bold should be applied also on the new text:\n      // <p>Fo[zxxb]ar</p>\n      // <p>Fo<$text bold=\"true\">zxxb</$text>ar</p>\n      //\n      // There is a special case to consider here to consider.\n      //\n      // Consider setting an attribute with multiple possible values, for example `highlight`. The inserted text might\n      // have already an attribute value applied and the `oldValue` property of the attribute operation might be wrong:\n      //\n      // Attribute `highlight=\"yellow\"` should be applied on the following range:\n      // <p>Fo[zb]ar<p>\n      //\n      // In meantime, character `x` with `highlight=\"red\"` is typed:\n      // <p>Fo[z<$text highlight=\"red\">x</$text>b]ar</p>\n      //\n      // In this case we cannot simply apply operation changing the attribute value from `null` to `\"yellow\"` for the whole range\n      // because that would lead to an exception (`oldValue` is incorrect for `x`).\n      //\n      // We also cannot break the original range as this would mess up a scenario when there are multiple following\n      // insert operations, because then only the first inserted character is included in those ranges:\n      // <p>Fo[z][x][b]ar</p>   -->   <p>Fo[z][x]x[b]ar</p>   -->   <p>Fo[z][x]xx[b]ar</p>\n      //\n      // So, the attribute range needs be expanded, no matter what attributes are set on the inserted nodes:\n      //\n      // <p>Fo[z<$text highlight=\"red\">x</$text>b]ar</p>      <--- Change from `null` to `yellow`, throwing an exception.\n      //\n      // But before that operation would be applied, we will add an additional attribute operation that will change\n      // attributes on the inserted nodes in a way which would make the original operation correct:\n      //\n      // <p>Fo[z{<$text highlight=\"red\">}x</$text>b]ar</p>    <--- Change range `{}` from `red` to `null`.\n      // <p>Fo[zxb]ar</p>                                     <--- Now change from `null` to `yellow` is completely fine.\n      //\n      // Generate complementary attribute operation. Be sure to add it before the original operation.\n      var op = _getComplementaryAttributeOperations(b, a.key, a.oldValue);\n\n      if (op) {\n        result.unshift(op);\n      }\n    } // If nodes should not receive new attribute, we are done here.\n\n\n    return result;\n  } // If insert operation is not expanding the attribute operation range, simply transform the range.\n\n\n  a.range = a.range._getTransformedByInsertion(b.position, b.howMany, false)[0];\n  return [a];\n});\n/**\n * Helper function for `AttributeOperation` x `InsertOperation` (and reverse) transformation.\n *\n * For given `insertOperation` it checks the inserted node if it has an attribute `key` set to a value different\n * than `newValue`. If so, it generates an `AttributeOperation` which changes the value of `key` attribute to `newValue`.\n *\n * @private\n * @param {module:engine/model/operation/insertoperation~InsertOperation} insertOperation\n * @param {String} key\n * @param {*} newValue\n * @returns {module:engine/model/operation/attributeoperation~AttributeOperation|null}\n */\n\nfunction _getComplementaryAttributeOperations(insertOperation, key, newValue) {\n  var nodes = insertOperation.nodes; // At the beginning we store the attribute value from the first node.\n\n  var insertValue = nodes.getNode(0).getAttribute(key);\n\n  if (insertValue == newValue) {\n    return null;\n  }\n\n  var range = new Range(insertOperation.position, insertOperation.position.getShiftedBy(insertOperation.howMany));\n  return new AttributeOperation(range, key, insertValue, newValue, 0);\n}\n\nsetTransformation(AttributeOperation, MergeOperation, function (a, b) {\n  var ranges = []; // Case 1:\n  //\n  // Attribute change on the merged element. In this case, the merged element was moved to the graveyard.\n  // An additional attribute operation that will change the (re)moved element needs to be generated.\n  //\n\n  if (a.range.start.hasSameParentAs(b.deletionPosition)) {\n    if (a.range.containsPosition(b.deletionPosition) || a.range.start.isEqual(b.deletionPosition)) {\n      ranges.push(Range._createFromPositionAndShift(b.graveyardPosition, 1));\n    }\n  }\n\n  var range = a.range._getTransformedByMergeOperation(b); // Do not add empty (collapsed) ranges to the result. `range` may be collapsed if it contained only the merged element.\n\n\n  if (!range.isCollapsed) {\n    ranges.push(range);\n  } // Create `AttributeOperation`s out of the ranges.\n\n\n  return ranges.map(function (range) {\n    return new AttributeOperation(range, a.key, a.oldValue, a.newValue, a.baseVersion);\n  });\n});\nsetTransformation(AttributeOperation, MoveOperation, function (a, b) {\n  var ranges = _breakRangeByMoveOperation(a.range, b); // Create `AttributeOperation`s out of the ranges.\n\n\n  return ranges.map(function (range) {\n    return new AttributeOperation(range, a.key, a.oldValue, a.newValue, a.baseVersion);\n  });\n}); // Helper function for `AttributeOperation` x `MoveOperation` transformation.\n//\n// Takes the passed `range` and transforms it by move operation `moveOp` in a specific way. Only top-level nodes of `range`\n// are considered to be in the range. If move operation moves nodes deep from inside of the range, those nodes won't\n// be included in the result. In other words, top-level nodes of the ranges from the result are exactly the same as\n// top-level nodes of the original `range`.\n//\n// This is important for `AttributeOperation` because, for its range, it changes only the top-level nodes. So we need to\n// track only how those nodes have been affected by `MoveOperation`.\n//\n// @private\n// @param {module:engine/model/range~Range} range\n// @param {module:engine/model/operation/moveoperation~MoveOperation} moveOp\n// @returns {Array.<module:engine/model/range~Range>}\n\nfunction _breakRangeByMoveOperation(range, moveOp) {\n  var moveRange = Range._createFromPositionAndShift(moveOp.sourcePosition, moveOp.howMany); // We are transforming `range` (original range) by `moveRange` (range moved by move operation). As usual when it comes to\n  // transforming a ranges, we may have a common part of the ranges and we may have a difference part (zero to two ranges).\n\n\n  var common = null;\n  var difference = []; // Let's compare the ranges.\n\n  if (moveRange.containsRange(range, true)) {\n    // If the whole original range is moved, treat it whole as a common part. There's also no difference part.\n    common = range;\n  } else if (range.start.hasSameParentAs(moveRange.start)) {\n    // If the ranges are \"on the same level\" (in the same parent) then move operation may move exactly those nodes\n    // that are changed by the attribute operation. In this case we get common part and difference part in the usual way.\n    difference = range.getDifference(moveRange);\n    common = range.getIntersection(moveRange);\n  } else {\n    // In any other situation we assume that original range is different than move range, that is that move operation\n    // moves other nodes that attribute operation change. Even if the moved range is deep inside in the original range.\n    //\n    // Note that this is different than in `.getIntersection` (we would get a common part in that case) and different\n    // than `.getDifference` (we would get two ranges).\n    difference = [range];\n  }\n\n  var result = []; // The default behaviour of `_getTransformedByMove` might get wrong results for difference part, though, so\n  // we do it by hand.\n\n  var _iteratorNormalCompletion5 = true;\n  var _didIteratorError5 = false;\n  var _iteratorError5 = undefined;\n\n  try {\n    for (var _iterator5 = difference[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n      var diff = _step5.value;\n      // First, transform the range by removing moved nodes. Since this is a difference, this is safe, `null` won't be returned\n      // as the range is different than the moved range.\n      diff = diff._getTransformedByDeletion(moveOp.sourcePosition, moveOp.howMany); // Transform also `targetPosition`.\n\n      var targetPosition = moveOp.getMovedRangeStart(); // Spread the range only if moved nodes are inserted only between the top-level nodes of the `diff` range.\n\n      var spread = diff.start.hasSameParentAs(targetPosition); // Transform by insertion of moved nodes.\n\n      diff = diff._getTransformedByInsertion(targetPosition, moveOp.howMany, spread);\n      result.push.apply(result, _toConsumableArray(diff));\n    } // Common part can be simply transformed by the move operation. This is because move operation will not target to\n    // that common part (the operation would have to target inside its own moved range).\n\n  } catch (err) {\n    _didIteratorError5 = true;\n    _iteratorError5 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion5 && _iterator5[\"return\"] != null) {\n        _iterator5[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError5) {\n        throw _iteratorError5;\n      }\n    }\n  }\n\n  if (common) {\n    result.push(common._getTransformedByMove(moveOp.sourcePosition, moveOp.targetPosition, moveOp.howMany, false)[0]);\n  }\n\n  return result;\n}\n\nsetTransformation(AttributeOperation, SplitOperation, function (a, b) {\n  // Case 1:\n  //\n  // Split node is the last node in `AttributeOperation#range`.\n  // `AttributeOperation#range` needs to be expanded to include the new (split) node.\n  //\n  // Attribute `type` to be changed to `numbered` but the `listItem` is split.\n  // <listItem type=\"bulleted\">foobar</listItem>\n  //\n  // After split:\n  // <listItem type=\"bulleted\">foo</listItem><listItem type=\"bulleted\">bar</listItem>\n  //\n  // After attribute change:\n  // <listItem type=\"numbered\">foo</listItem><listItem type=\"numbered\">foo</listItem>\n  //\n  if (a.range.end.isEqual(b.insertionPosition)) {\n    if (!b.graveyardPosition) {\n      a.range.end.offset++;\n    }\n\n    return [a];\n  } // Case 2:\n  //\n  // Split position is inside `AttributeOperation#range`, at the same level, so the nodes to change are\n  // not going to make a flat range.\n  //\n  // Content with range-to-change and split position:\n  // <p>Fo[zb^a]r</p>\n  //\n  // After split:\n  // <p>Fozb</p><p>ar</p>\n  //\n  // Make two separate ranges containing all nodes to change:\n  // <p>Fo[zb]</p><p>[a]r</p>\n  //\n\n\n  if (a.range.start.hasSameParentAs(b.splitPosition) && a.range.containsPosition(b.splitPosition)) {\n    var secondPart = a.clone();\n    secondPart.range = new Range(b.moveTargetPosition.clone(), a.range.end._getCombined(b.splitPosition, b.moveTargetPosition));\n    a.range.end = b.splitPosition.clone();\n    a.range.end.stickiness = 'toPrevious';\n    return [a, secondPart];\n  } // The default case.\n  //\n\n\n  a.range = a.range._getTransformedBySplitOperation(b);\n  return [a];\n});\nsetTransformation(InsertOperation, AttributeOperation, function (a, b) {\n  var result = [a]; // Case 1:\n  //\n  // The attribute operation range includes the position where nodes were inserted.\n  // There are two possible scenarios: the inserted nodes were text and they should receive attributes or\n  // the inserted nodes were elements and they should not receive attributes.\n  //\n  // This is a mirror scenario to the one described in `AttributeOperation` x `InsertOperation` transformation,\n  // although this case is a little less complicated. In this case we simply need to change attributes of the\n  // inserted nodes and that's it.\n  //\n\n  if (a.shouldReceiveAttributes && a.position.hasSameParentAs(b.range.start) && b.range.containsPosition(a.position)) {\n    var op = _getComplementaryAttributeOperations(a, b.key, b.newValue);\n\n    if (op) {\n      result.push(op);\n    }\n  } // The default case is: do nothing.\n  // `AttributeOperation` does not change the model tree structure so `InsertOperation` does not need to be changed.\n  //\n\n\n  return result;\n});\nsetTransformation(InsertOperation, InsertOperation, function (a, b, context) {\n  // Case 1:\n  //\n  // Two insert operations insert nodes at the same position. Since they are the same, it needs to be decided\n  // what will be the order of inserted nodes. However, there is no additional information to help in that\n  // decision. Also, when `b` will be transformed by `a`, the same order must be maintained.\n  //\n  // To achieve that, we will check if the operation is strong.\n  // If it is, it won't get transformed. If it is not, it will be moved.\n  //\n  if (a.position.isEqual(b.position) && context.aIsStrong) {\n    return [a];\n  } // The default case.\n  //\n\n\n  a.position = a.position._getTransformedByInsertOperation(b);\n  return [a];\n});\nsetTransformation(InsertOperation, MoveOperation, function (a, b) {\n  // The default case.\n  //\n  a.position = a.position._getTransformedByMoveOperation(b);\n  return [a];\n});\nsetTransformation(InsertOperation, SplitOperation, function (a, b) {\n  // The default case.\n  //\n  a.position = a.position._getTransformedBySplitOperation(b);\n  return [a];\n});\nsetTransformation(InsertOperation, MergeOperation, function (a, b) {\n  a.position = a.position._getTransformedByMergeOperation(b);\n  return [a];\n}); // -----------------------\n\nsetTransformation(MarkerOperation, InsertOperation, function (a, b) {\n  if (a.oldRange) {\n    a.oldRange = a.oldRange._getTransformedByInsertOperation(b)[0];\n  }\n\n  if (a.newRange) {\n    a.newRange = a.newRange._getTransformedByInsertOperation(b)[0];\n  }\n\n  return [a];\n});\nsetTransformation(MarkerOperation, MarkerOperation, function (a, b, context) {\n  if (a.name == b.name) {\n    if (context.aIsStrong) {\n      a.oldRange = b.newRange ? b.newRange.clone() : null;\n    } else {\n      return [new NoOperation(0)];\n    }\n  }\n\n  return [a];\n});\nsetTransformation(MarkerOperation, MergeOperation, function (a, b) {\n  if (a.oldRange) {\n    a.oldRange = a.oldRange._getTransformedByMergeOperation(b);\n  }\n\n  if (a.newRange) {\n    a.newRange = a.newRange._getTransformedByMergeOperation(b);\n  }\n\n  return [a];\n});\nsetTransformation(MarkerOperation, MoveOperation, function (a, b, context) {\n  if (a.oldRange) {\n    a.oldRange = Range._createFromRanges(a.oldRange._getTransformedByMoveOperation(b));\n  }\n\n  if (a.newRange) {\n    if (context.abRelation) {\n      var aNewRange = Range._createFromRanges(a.newRange._getTransformedByMoveOperation(b));\n\n      if (context.abRelation.side == 'left' && b.targetPosition.isEqual(a.newRange.start)) {\n        a.newRange.start.path = context.abRelation.path;\n        a.newRange.end = aNewRange.end;\n        return [a];\n      } else if (context.abRelation.side == 'right' && b.targetPosition.isEqual(a.newRange.end)) {\n        a.newRange.start = aNewRange.start;\n        a.newRange.end.path = context.abRelation.path;\n        return [a];\n      }\n    }\n\n    a.newRange = Range._createFromRanges(a.newRange._getTransformedByMoveOperation(b));\n  }\n\n  return [a];\n});\nsetTransformation(MarkerOperation, SplitOperation, function (a, b, context) {\n  if (a.oldRange) {\n    a.oldRange = a.oldRange._getTransformedBySplitOperation(b);\n  }\n\n  if (a.newRange) {\n    if (context.abRelation) {\n      var aNewRange = a.newRange._getTransformedBySplitOperation(b);\n\n      if (a.newRange.start.isEqual(b.splitPosition) && context.abRelation.wasStartBeforeMergedElement) {\n        a.newRange.start = Position._createAt(b.insertionPosition);\n      } else if (a.newRange.start.isEqual(b.splitPosition) && !context.abRelation.wasInLeftElement) {\n        a.newRange.start = Position._createAt(b.moveTargetPosition);\n      }\n\n      if (a.newRange.end.isEqual(b.splitPosition) && context.abRelation.wasInRightElement) {\n        a.newRange.end = Position._createAt(b.moveTargetPosition);\n      } else if (a.newRange.end.isEqual(b.splitPosition) && context.abRelation.wasEndBeforeMergedElement) {\n        a.newRange.end = Position._createAt(b.insertionPosition);\n      } else {\n        a.newRange.end = aNewRange.end;\n      }\n\n      return [a];\n    }\n\n    a.newRange = a.newRange._getTransformedBySplitOperation(b);\n  }\n\n  return [a];\n}); // -----------------------\n\nsetTransformation(MergeOperation, InsertOperation, function (a, b) {\n  if (a.sourcePosition.hasSameParentAs(b.position)) {\n    a.howMany += b.howMany;\n  }\n\n  a.sourcePosition = a.sourcePosition._getTransformedByInsertOperation(b);\n  a.targetPosition = a.targetPosition._getTransformedByInsertOperation(b);\n  return [a];\n});\nsetTransformation(MergeOperation, MergeOperation, function (a, b, context) {\n  // Case 1:\n  //\n  // Same merge operations.\n  //\n  // Both operations have same source and target positions. So the element already got merged and there is\n  // theoretically nothing to do.\n  //\n  if (a.sourcePosition.isEqual(b.sourcePosition) && a.targetPosition.isEqual(b.targetPosition)) {\n    // There are two ways that we can provide a do-nothing operation.\n    //\n    // First is simply a NoOperation instance. We will use it if `b` operation was not undone.\n    //\n    // Second is a merge operation that has the source operation in the merged element - in the graveyard -\n    // same target position and `howMany` equal to `0`. So it is basically merging an empty element from graveyard\n    // which is almost the same as NoOperation.\n    //\n    // This way the merge operation can be later transformed by split operation\n    // to provide correct undo. This will be used if `b` operation was undone (only then it is correct).\n    //\n    if (!context.bWasUndone) {\n      return [new NoOperation(0)];\n    } else {\n      var path = b.graveyardPosition.path.slice();\n      path.push(0);\n      a.sourcePosition = new Position(b.graveyardPosition.root, path);\n      a.howMany = 0;\n      return [a];\n    }\n  } // Case 2:\n  //\n  // Same merge source position but different target position.\n  //\n  // This can happen during collaboration. For example, if one client merged a paragraph to the previous paragraph\n  // and the other person removed that paragraph and merged the same paragraph to something before:\n  //\n  // Client A:\n  // <p>Foo</p><p>Bar</p><p>[]Xyz</p>\n  // <p>Foo</p><p>BarXyz</p>\n  //\n  // Client B:\n  // <p>Foo</p>[<p>Bar</p>]<p>Xyz</p>\n  // <p>Foo</p><p>[]Xyz</p>\n  // <p>FooXyz</p>\n  //\n  // In this case we need to decide where finally \"Xyz\" will land:\n  //\n  // <p>FooXyz</p>               graveyard: <p>Bar</p>\n  // <p>Foo</p>                  graveyard: <p>BarXyz</p>\n  //\n  // Let's move it in a way so that a merge operation that does not target to graveyard is more important so that\n  // nodes does not end up in the graveyard. It makes sense. Both for Client A and for Client B \"Xyz\" finally did not\n  // end up in the graveyard (see above).\n  //\n  // If neither or both operations point to graveyard, then let `aIsStrong` decide.\n  //\n\n\n  if (a.sourcePosition.isEqual(b.sourcePosition) && !a.targetPosition.isEqual(b.targetPosition) && !context.bWasUndone && context.abRelation != 'splitAtSource') {\n    var aToGraveyard = a.targetPosition.root.rootName == '$graveyard';\n    var bToGraveyard = b.targetPosition.root.rootName == '$graveyard'; // If `aIsWeak` it means that `a` points to graveyard while `b` doesn't. Don't move nodes then.\n\n    var aIsWeak = aToGraveyard && !bToGraveyard; // If `bIsWeak` it means that `b` points to graveyard while `a` doesn't. Force moving nodes then.\n\n    var bIsWeak = bToGraveyard && !aToGraveyard; // Force move if `b` is weak or neither operation is weak but `a` is stronger through `context.aIsStrong`.\n\n    var forceMove = bIsWeak || !aIsWeak && context.aIsStrong;\n\n    if (forceMove) {\n      var sourcePosition = b.targetPosition._getTransformedByMergeOperation(b);\n\n      var targetPosition = a.targetPosition._getTransformedByMergeOperation(b);\n\n      return [new MoveOperation(sourcePosition, a.howMany, targetPosition, 0)];\n    } else {\n      return [new NoOperation(0)];\n    }\n  } // The default case.\n  //\n\n\n  if (a.sourcePosition.hasSameParentAs(b.targetPosition)) {\n    a.howMany += b.howMany;\n  }\n\n  a.sourcePosition = a.sourcePosition._getTransformedByMergeOperation(b);\n  a.targetPosition = a.targetPosition._getTransformedByMergeOperation(b); // Handle positions in graveyard.\n  // If graveyard positions are same and `a` operation is strong - do not transform.\n\n  if (!a.graveyardPosition.isEqual(b.graveyardPosition) || !context.aIsStrong) {\n    a.graveyardPosition = a.graveyardPosition._getTransformedByMergeOperation(b);\n  }\n\n  return [a];\n});\nsetTransformation(MergeOperation, MoveOperation, function (a, b, context) {\n  // Case 1:\n  //\n  // The element to merge got removed.\n  //\n  // Merge operation does support merging elements which are not siblings. So it would not be a problem\n  // from technical point of view. However, if the element was removed, the intention of the user deleting it\n  // was to have it all deleted, together with its children. From user experience point of view, moving back the\n  // removed nodes might be unexpected. This means that in this scenario we will block the merging.\n  //\n  // The exception of this rule would be if the remove operation was later undone.\n  //\n  var removedRange = Range._createFromPositionAndShift(b.sourcePosition, b.howMany);\n\n  if (b.type == 'remove' && !context.bWasUndone && !context.forceWeakRemove) {\n    if (a.deletionPosition.hasSameParentAs(b.sourcePosition) && removedRange.containsPosition(a.sourcePosition)) {\n      return [new NoOperation(0)];\n    }\n  } // The default case.\n  //\n\n\n  if (a.sourcePosition.hasSameParentAs(b.targetPosition)) {\n    a.howMany += b.howMany;\n  }\n\n  if (a.sourcePosition.hasSameParentAs(b.sourcePosition)) {\n    a.howMany -= b.howMany;\n  }\n\n  a.sourcePosition = a.sourcePosition._getTransformedByMoveOperation(b);\n  a.targetPosition = a.targetPosition._getTransformedByMoveOperation(b); // `MergeOperation` graveyard position is like `MoveOperation` target position. It is a position where element(s) will\n  // be moved. Like in other similar cases, we need to consider the scenario when those positions are same.\n  // Here, we will treat `MergeOperation` like it is always strong (see `InsertOperation` x `InsertOperation` for comparison).\n  // This means that we won't transform graveyard position if it is equal to move operation target position.\n\n  if (!a.graveyardPosition.isEqual(b.targetPosition)) {\n    a.graveyardPosition = a.graveyardPosition._getTransformedByMoveOperation(b);\n  }\n\n  return [a];\n});\nsetTransformation(MergeOperation, SplitOperation, function (a, b, context) {\n  if (b.graveyardPosition) {\n    // If `b` operation defines graveyard position, a node from graveyard will be moved. This means that we need to\n    // transform `a.graveyardPosition` accordingly.\n    a.graveyardPosition = a.graveyardPosition._getTransformedByDeletion(b.graveyardPosition, 1); // This is a scenario foreseen in `MergeOperation` x `MergeOperation`, with two identical merge operations.\n    //\n    // So, there was `MergeOperation` x `MergeOperation` transformation earlier. Now, `a` is a merge operation which\n    // source position is in graveyard. Interestingly, split operation wants to use the node to be merged by `a`. This\n    // means that `b` is undoing that merge operation from earlier, which caused `a` to be in graveyard.\n    //\n    // If that's the case, at this point, we will only \"fix\" `a.howMany`. It was earlier set to `0` in\n    // `MergeOperation` x `MergeOperation` transformation. Later transformations in this function will change other\n    // properties.\n    //\n\n    if (a.deletionPosition.isEqual(b.graveyardPosition)) {\n      a.howMany = b.howMany;\n    }\n  } // Case 1:\n  //\n  // Merge operation moves nodes to the place where split happens.\n  // This is a classic situation when there are two paragraphs, and there is a split (enter) after the first\n  // paragraph and there is a merge (delete) at the beginning of the second paragraph:\n  //\n  // <p>Foo{}</p><p>[]Bar</p>.\n  //\n  // Split is after `Foo`, while merge is from `Bar` to the end of `Foo`.\n  //\n  // State after split:\n  // <p>Foo</p><p></p><p>Bar</p>\n  //\n  // Now, `Bar` should be merged to the new paragraph:\n  // <p>Foo</p><p>Bar</p>\n  //\n  // Instead of merging it to the original paragraph:\n  // <p>FooBar</p><p></p>\n  //\n  // This means that `targetPosition` needs to be transformed. This is the default case though.\n  // For example, if the split would be after `F`, `targetPosition` should also be transformed.\n  //\n  // There are three exceptions, though, when we want to keep `targetPosition` as it was.\n  //\n  // First exception is when the merge target position is inside an element (not at the end, as usual). This\n  // happens when the merge operation earlier was transformed by \"the same\" merge operation. If merge operation\n  // targets inside the element we want to keep the original target position (and not transform it) because\n  // we have additional context telling us that we want to merge to the original element. We can check if the\n  // merge operation points inside element by checking what is `SplitOperation#howMany`. Since merge target position\n  // is same as split position, if `howMany` is non-zero, it means that the merge target position is inside an element.\n  //\n  // Second exception is when the element to merge is in the graveyard and split operation uses it. In that case\n  // if target position would be transformed, the merge operation would target at the source position:\n  //\n  // root: <p>Foo</p>\t\t\t\tgraveyard: <p></p>\n  //\n  // SplitOperation: root [ 0, 3 ] using graveyard [ 0 ] (howMany = 0)\n  // MergeOperation: graveyard [ 0, 0 ] -> root [ 0, 3 ] (howMany = 0)\n  //\n  // Since split operation moves the graveyard node back to the root, the merge operation source position changes.\n  // We would like to merge from the empty <p> to the \"Foo\" <p>:\n  //\n  // root: <p>Foo</p><p></p>\t\t\tgraveyard:\n  //\n  // MergeOperation#sourcePosition = root [ 1, 0 ]\n  //\n  // If `targetPosition` is transformed, it would become root [ 1, 0 ] as well. It has to be kept as it was.\n  //\n  // Third exception is connected with relations. If this happens during undo and we have explicit information\n  // that target position has not been affected by the operation which is undone by this split then this split should\n  // not move the target position either.\n  //\n\n\n  if (a.targetPosition.isEqual(b.splitPosition)) {\n    var mergeInside = b.howMany != 0;\n    var mergeSplittingElement = b.graveyardPosition && a.deletionPosition.isEqual(b.graveyardPosition);\n\n    if (mergeInside || mergeSplittingElement || context.abRelation == 'mergeTargetNotMoved') {\n      a.sourcePosition = a.sourcePosition._getTransformedBySplitOperation(b);\n      return [a];\n    }\n  } // Case 2:\n  //\n  // Merge source is at the same position as split position. This sometimes happen, mostly during undo.\n  // The decision here is mostly to choose whether merge source position should stay where it is (so it will be at the end of the\n  // split element) or should be move to the beginning of the new element.\n  //\n\n\n  if (a.sourcePosition.isEqual(b.splitPosition)) {\n    // Use context to check if `SplitOperation` is not undoing a merge operation, that didn't change the `a` operation.\n    // This scenario happens the undone merge operation moved nodes at the source position of `a` operation.\n    // In that case `a` operation source position should stay where it is.\n    if (context.abRelation == 'mergeSourceNotMoved') {\n      a.howMany = 0;\n      a.targetPosition = a.targetPosition._getTransformedBySplitOperation(b);\n      return [a];\n    } // This merge operation might have been earlier transformed by a merge operation which both merged the same element.\n    // See that case in `MergeOperation` x `MergeOperation` transformation. In that scenario, if the merge operation has been undone,\n    // the special case is not applied.\n    //\n    // Now, the merge operation is transformed by the split which has undone that previous merge operation.\n    // So now we are fixing situation which was skipped in `MergeOperation` x `MergeOperation` case.\n    //\n\n\n    if (context.abRelation == 'mergeSameElement' || a.sourcePosition.offset > 0) {\n      a.sourcePosition = b.moveTargetPosition.clone();\n      a.targetPosition = a.targetPosition._getTransformedBySplitOperation(b);\n      return [a];\n    }\n  } // The default case.\n  //\n\n\n  if (a.sourcePosition.hasSameParentAs(b.splitPosition)) {\n    a.howMany = b.splitPosition.offset;\n  }\n\n  a.sourcePosition = a.sourcePosition._getTransformedBySplitOperation(b);\n  a.targetPosition = a.targetPosition._getTransformedBySplitOperation(b);\n  return [a];\n}); // -----------------------\n\nsetTransformation(MoveOperation, InsertOperation, function (a, b) {\n  var moveRange = Range._createFromPositionAndShift(a.sourcePosition, a.howMany);\n\n  var transformed = moveRange._getTransformedByInsertOperation(b, false)[0];\n\n  a.sourcePosition = transformed.start;\n  a.howMany = transformed.end.offset - transformed.start.offset; // See `InsertOperation` x `MoveOperation` transformation for details on this case.\n  //\n  // In summary, both operations point to the same place, so the order of nodes needs to be decided.\n  // `MoveOperation` is considered weaker, so it is always transformed, unless there was a certain relation\n  // between operations.\n  //\n\n  if (!a.targetPosition.isEqual(b.position)) {\n    a.targetPosition = a.targetPosition._getTransformedByInsertOperation(b);\n  }\n\n  return [a];\n});\nsetTransformation(MoveOperation, MoveOperation, function (a, b, context) {\n  //\n  // Setting and evaluating some variables that will be used in special cases and default algorithm.\n  //\n  // Create ranges from `MoveOperations` properties.\n  var rangeA = Range._createFromPositionAndShift(a.sourcePosition, a.howMany);\n\n  var rangeB = Range._createFromPositionAndShift(b.sourcePosition, b.howMany); // Assign `context.aIsStrong` to a different variable, because the value may change during execution of\n  // this algorithm and we do not want to override original `context.aIsStrong` that will be used in later transformations.\n\n\n  var aIsStrong = context.aIsStrong; // This will be used to decide the order of nodes if both operations target at the same position.\n  // By default, use strong/weak operation mechanism.\n\n  var insertBefore = !context.aIsStrong; // If the relation is set, then use it to decide nodes order.\n\n  if (context.abRelation == 'insertBefore' || context.baRelation == 'insertAfter') {\n    insertBefore = true;\n  } else if (context.abRelation == 'insertAfter' || context.baRelation == 'insertBefore') {\n    insertBefore = false;\n  } // `a.targetPosition` could be affected by the `b` operation. We will transform it.\n\n\n  var newTargetPosition;\n\n  if (a.targetPosition.isEqual(b.targetPosition) && insertBefore) {\n    newTargetPosition = a.targetPosition._getTransformedByDeletion(b.sourcePosition, b.howMany);\n  } else {\n    newTargetPosition = a.targetPosition._getTransformedByMove(b.sourcePosition, b.targetPosition, b.howMany);\n  } //\n  // Special case #1 + mirror.\n  //\n  // Special case when both move operations' target positions are inside nodes that are\n  // being moved by the other move operation. So in other words, we move ranges into inside of each other.\n  // This case can't be solved reasonably (on the other hand, it should not happen often).\n\n\n  if (_moveTargetIntoMovedRange(a, b) && _moveTargetIntoMovedRange(b, a)) {\n    // Instead of transforming operation, we return a reverse of the operation that we transform by.\n    // So when the results of this \"transformation\" will be applied, `b` MoveOperation will get reversed.\n    return [b.getReversed()];\n  } //\n  // End of special case #1.\n  //\n  //\n  // Special case #2.\n  //\n  // Check if `b` operation targets inside `rangeA`.\n\n\n  var bTargetsToA = rangeA.containsPosition(b.targetPosition); // If `b` targets to `rangeA` and `rangeA` contains `rangeB`, `b` operation has no influence on `a` operation.\n  // You might say that operation `b` is captured inside operation `a`.\n\n  if (bTargetsToA && rangeA.containsRange(rangeB, true)) {\n    // There is a mini-special case here, where `rangeB` is on other level than `rangeA`. That's why\n    // we need to transform `a` operation anyway.\n    rangeA.start = rangeA.start._getTransformedByMove(b.sourcePosition, b.targetPosition, b.howMany);\n    rangeA.end = rangeA.end._getTransformedByMove(b.sourcePosition, b.targetPosition, b.howMany);\n    return _makeMoveOperationsFromRanges([rangeA], newTargetPosition);\n  } //\n  // Special case #2 mirror.\n  //\n\n\n  var aTargetsToB = rangeB.containsPosition(a.targetPosition);\n\n  if (aTargetsToB && rangeB.containsRange(rangeA, true)) {\n    // `a` operation is \"moved together\" with `b` operation.\n    // Here, just move `rangeA` \"inside\" `rangeB`.\n    rangeA.start = rangeA.start._getCombined(b.sourcePosition, b.getMovedRangeStart());\n    rangeA.end = rangeA.end._getCombined(b.sourcePosition, b.getMovedRangeStart());\n    return _makeMoveOperationsFromRanges([rangeA], newTargetPosition);\n  } //\n  // End of special case #2.\n  //\n  //\n  // Special case #3 + mirror.\n  //\n  // `rangeA` has a node which is an ancestor of `rangeB`. In other words, `rangeB` is inside `rangeA`\n  // but not on the same tree level. In such case ranges have common part but we have to treat it\n  // differently, because in such case those ranges are not really conflicting and should be treated like\n  // two separate ranges. Also we have to discard two difference parts.\n\n\n  var aCompB = compareArrays(a.sourcePosition.getParentPath(), b.sourcePosition.getParentPath());\n\n  if (aCompB == 'prefix' || aCompB == 'extension') {\n    // Transform `rangeA` by `b` operation and make operation out of it, and that's all.\n    // Note that this is a simplified version of default case, but here we treat the common part (whole `rangeA`)\n    // like a one difference part.\n    rangeA.start = rangeA.start._getTransformedByMove(b.sourcePosition, b.targetPosition, b.howMany);\n    rangeA.end = rangeA.end._getTransformedByMove(b.sourcePosition, b.targetPosition, b.howMany);\n    return _makeMoveOperationsFromRanges([rangeA], newTargetPosition);\n  } //\n  // End of special case #3.\n  //\n  //\n  // Default case - ranges are on the same level or are not connected with each other.\n  //\n  // Modifier for default case.\n  // Modifies `aIsStrong` flag in certain conditions.\n  //\n  // If only one of operations is a remove operation, we force remove operation to be the \"stronger\" one\n  // to provide more expected results.\n\n\n  if (a.type == 'remove' && b.type != 'remove' && !context.aWasUndone && !context.forceWeakRemove) {\n    aIsStrong = true;\n  } else if (a.type != 'remove' && b.type == 'remove' && !context.bWasUndone && !context.forceWeakRemove) {\n    aIsStrong = false;\n  } // Handle operation's source ranges - check how `rangeA` is affected by `b` operation.\n  // This will aggregate transformed ranges.\n\n\n  var ranges = []; // Get the \"difference part\" of `a` operation source range.\n  // This is an array with one or two ranges. Two ranges if `rangeB` is inside `rangeA`.\n\n  var difference = rangeA.getDifference(rangeB);\n  var _iteratorNormalCompletion6 = true;\n  var _didIteratorError6 = false;\n  var _iteratorError6 = undefined;\n\n  try {\n    for (var _iterator6 = difference[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n      var range = _step6.value;\n      // Transform those ranges by `b` operation. For example if `b` moved range from before those ranges, fix those ranges.\n      range.start = range.start._getTransformedByDeletion(b.sourcePosition, b.howMany);\n      range.end = range.end._getTransformedByDeletion(b.sourcePosition, b.howMany); // If `b` operation targets into `rangeA` on the same level, spread `rangeA` into two ranges.\n\n      var shouldSpread = compareArrays(range.start.getParentPath(), b.getMovedRangeStart().getParentPath()) == 'same';\n\n      var newRanges = range._getTransformedByInsertion(b.getMovedRangeStart(), b.howMany, shouldSpread);\n\n      ranges.push.apply(ranges, _toConsumableArray(newRanges));\n    } // Then, we have to manage the \"common part\" of both move ranges.\n\n  } catch (err) {\n    _didIteratorError6 = true;\n    _iteratorError6 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion6 && _iterator6[\"return\"] != null) {\n        _iterator6[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError6) {\n        throw _iteratorError6;\n      }\n    }\n  }\n\n  var common = rangeA.getIntersection(rangeB);\n\n  if (common !== null && aIsStrong) {\n    // Calculate the new position of that part of original range.\n    common.start = common.start._getCombined(b.sourcePosition, b.getMovedRangeStart());\n    common.end = common.end._getCombined(b.sourcePosition, b.getMovedRangeStart()); // Take care of proper range order.\n    //\n    // Put `common` at appropriate place. Keep in mind that we are interested in original order.\n    // Basically there are only three cases: there is zero, one or two difference ranges.\n    //\n    // If there is zero difference ranges, just push `common` in the array.\n\n    if (ranges.length === 0) {\n      ranges.push(common);\n    } // If there is one difference range, we need to check whether common part was before it or after it.\n    else if (ranges.length == 1) {\n        if (rangeB.start.isBefore(rangeA.start) || rangeB.start.isEqual(rangeA.start)) {\n          ranges.unshift(common);\n        } else {\n          ranges.push(common);\n        }\n      } // If there are more ranges (which means two), put common part between them. This is the only scenario\n      // where there could be two difference ranges so we don't have to make any comparisons.\n      else {\n          ranges.splice(1, 0, common);\n        }\n  }\n\n  if (ranges.length === 0) {\n    // If there are no \"source ranges\", nothing should be changed.\n    // Note that this can happen only if `aIsStrong == false` and `rangeA.isEqual( rangeB )`.\n    return [new NoOperation(a.baseVersion)];\n  }\n\n  return _makeMoveOperationsFromRanges(ranges, newTargetPosition);\n});\nsetTransformation(MoveOperation, SplitOperation, function (a, b, context) {\n  var newTargetPosition = a.targetPosition.clone(); // Do not transform if target position is same as split insertion position and this split comes from undo.\n  // This should be done on relations but it is too much work for now as it would require relations working in collaboration.\n  // We need to make a decision how we will resolve such conflict and this is less harmful way.\n\n  if (!a.targetPosition.isEqual(b.insertionPosition) || !b.graveyardPosition || context.abRelation == 'moveTargetAfter') {\n    newTargetPosition = a.targetPosition._getTransformedBySplitOperation(b);\n  } // Case 1:\n  //\n  // Last element in the moved range got split.\n  //\n  // In this case the default range transformation will not work correctly as the element created by\n  // split operation would be outside the range. The range to move needs to be fixed manually.\n  //\n\n\n  var moveRange = Range._createFromPositionAndShift(a.sourcePosition, a.howMany);\n\n  if (moveRange.end.isEqual(b.insertionPosition)) {\n    // Do it only if this is a \"natural\" split, not a one that comes from undo.\n    // If this is undo split, only `targetPosition` needs to be changed (if the move is a remove).\n    if (!b.graveyardPosition) {\n      a.howMany++;\n    }\n\n    a.targetPosition = newTargetPosition;\n    return [a];\n  } // Case 2:\n  //\n  // Split happened between the moved nodes. In this case two ranges to move need to be generated.\n  //\n  // Characters `ozba` are moved to the end of paragraph `Xyz` but split happened.\n  // <p>F[oz|ba]r</p><p>Xyz</p>\n  //\n  // After split:\n  // <p>F[oz</p><p>ba]r</p><p>Xyz</p>\n  //\n  // Correct ranges:\n  // <p>F[oz]</p><p>[ba]r</p><p>Xyz</p>\n  //\n  // After move:\n  // <p>F</p><p>r</p><p>Xyzozba</p>\n  //\n\n\n  if (moveRange.start.hasSameParentAs(b.splitPosition) && moveRange.containsPosition(b.splitPosition)) {\n    var rightRange = new Range(b.splitPosition, moveRange.end);\n    rightRange = rightRange._getTransformedBySplitOperation(b);\n    var _ranges = [new Range(moveRange.start, b.splitPosition), rightRange];\n    return _makeMoveOperationsFromRanges(_ranges, newTargetPosition);\n  } // Case 3:\n  //\n  // Move operation targets at the split position. We need to decide if the nodes should be inserted\n  // at the end of the split element or at the beginning of the new element.\n  //\n\n\n  if (a.targetPosition.isEqual(b.splitPosition) && context.abRelation == 'insertAtSource') {\n    newTargetPosition = b.moveTargetPosition;\n  } // Case 4:\n  //\n  // Move operation targets just after the split element. We need to decide if the nodes should be inserted\n  // between two parts of split element, or after the new element.\n  //\n  // Split at `|`, while move operation moves `<p>Xyz</p>` and targets at `^`:\n  // <p>Foo|bar</p>^<p>baz</p>\n  // <p>Foo</p>^<p>bar</p><p>baz</p> or <p>Foo</p><p>bar</p>^<p>baz</p>?\n  //\n  // If there is no contextual information between operations (for example, they come from collaborative\n  // editing), we don't want to put some unrelated content (move) between parts of related content (split parts).\n  // However, if the split is from undo, in the past, the moved content might be targeting between the\n  // split parts, meaning that was exactly user's intention:\n  //\n  // <p>Foo</p>^<p>bar</p>\t\t<--- original situation, in \"past\".\n  // <p>Foobar</p>^\t\t\t\t<--- after merge target position is transformed.\n  // <p>Foo|bar</p>^\t\t\t\t<--- then the merge is undone, and split happens, which leads us to current situation.\n  //\n  // In this case it is pretty clear that the intention was to put new paragraph between those nodes,\n  // so we need to transform accordingly. We can detect this scenario thanks to relations.\n  //\n\n\n  if (a.targetPosition.isEqual(b.insertionPosition) && context.abRelation == 'insertBetween') {\n    newTargetPosition = a.targetPosition;\n  } // The default case.\n  //\n\n\n  var transformed = moveRange._getTransformedBySplitOperation(b);\n\n  var ranges = [transformed]; // Case 5:\n  //\n  // Moved range contains graveyard element used by split operation. Add extra move operation to the result.\n  //\n\n  if (b.graveyardPosition) {\n    var movesGraveyardElement = moveRange.start.isEqual(b.graveyardPosition) || moveRange.containsPosition(b.graveyardPosition);\n\n    if (a.howMany > 1 && movesGraveyardElement && !context.aWasUndone) {\n      ranges.push(Range._createFromPositionAndShift(b.insertionPosition, 1));\n    }\n  }\n\n  return _makeMoveOperationsFromRanges(ranges, newTargetPosition);\n});\nsetTransformation(MoveOperation, MergeOperation, function (a, b, context) {\n  var movedRange = Range._createFromPositionAndShift(a.sourcePosition, a.howMany);\n\n  if (b.deletionPosition.hasSameParentAs(a.sourcePosition) && movedRange.containsPosition(b.sourcePosition)) {\n    if (a.type == 'remove' && !context.forceWeakRemove) {\n      // Case 1:\n      //\n      // The element to remove got merged.\n      //\n      // Merge operation does support merging elements which are not siblings. So it would not be a problem\n      // from technical point of view. However, if the element was removed, the intention of the user\n      // deleting it was to have it all deleted. From user experience point of view, moving back the\n      // removed nodes might be unexpected. This means that in this scenario we will reverse merging and remove the element.\n      //\n      if (!context.aWasUndone) {\n        var results = [];\n        var gyMoveSource = b.graveyardPosition.clone();\n\n        var splitNodesMoveSource = b.targetPosition._getTransformedByMergeOperation(b);\n\n        if (a.howMany > 1) {\n          results.push(new MoveOperation(a.sourcePosition, a.howMany - 1, a.targetPosition, 0));\n          gyMoveSource = gyMoveSource._getTransformedByMove(a.sourcePosition, a.targetPosition, a.howMany - 1);\n          splitNodesMoveSource = splitNodesMoveSource._getTransformedByMove(a.sourcePosition, a.targetPosition, a.howMany - 1);\n        }\n\n        var gyMoveTarget = b.deletionPosition._getCombined(a.sourcePosition, a.targetPosition);\n\n        var gyMove = new MoveOperation(gyMoveSource, 1, gyMoveTarget, 0);\n        var splitNodesMoveTargetPath = gyMove.getMovedRangeStart().path.slice();\n        splitNodesMoveTargetPath.push(0);\n        var splitNodesMoveTarget = new Position(gyMove.targetPosition.root, splitNodesMoveTargetPath);\n        splitNodesMoveSource = splitNodesMoveSource._getTransformedByMove(gyMoveSource, gyMoveTarget, 1);\n        var splitNodesMove = new MoveOperation(splitNodesMoveSource, b.howMany, splitNodesMoveTarget, 0);\n        results.push(gyMove);\n        results.push(splitNodesMove);\n        return results;\n      }\n    } else {\n      // Case 2:\n      //\n      // The element to move got merged and it was the only element to move.\n      // In this case just don't do anything, leave the node in the graveyard. Without special case\n      // it would be a move operation that moves 0 nodes, so maybe it is better just to return no-op.\n      //\n      if (a.howMany == 1) {\n        if (!context.bWasUndone) {\n          return [new NoOperation(0)];\n        } else {\n          a.sourcePosition = b.graveyardPosition.clone();\n          a.targetPosition = a.targetPosition._getTransformedByMergeOperation(b);\n          return [a];\n        }\n      }\n    }\n  } // The default case.\n  //\n\n\n  var moveRange = Range._createFromPositionAndShift(a.sourcePosition, a.howMany);\n\n  var transformed = moveRange._getTransformedByMergeOperation(b);\n\n  a.sourcePosition = transformed.start;\n  a.howMany = transformed.end.offset - transformed.start.offset;\n  a.targetPosition = a.targetPosition._getTransformedByMergeOperation(b);\n  return [a];\n}); // -----------------------\n\nsetTransformation(RenameOperation, InsertOperation, function (a, b) {\n  a.position = a.position._getTransformedByInsertOperation(b);\n  return [a];\n});\nsetTransformation(RenameOperation, MergeOperation, function (a, b) {\n  // Case 1:\n  //\n  // Element to rename got merged, so it was moved to `b.graveyardPosition`.\n  //\n  if (a.position.isEqual(b.deletionPosition)) {\n    a.position = b.graveyardPosition.clone();\n    a.position.stickiness = 'toNext';\n    return [a];\n  }\n\n  a.position = a.position._getTransformedByMergeOperation(b);\n  return [a];\n});\nsetTransformation(RenameOperation, MoveOperation, function (a, b) {\n  a.position = a.position._getTransformedByMoveOperation(b);\n  return [a];\n});\nsetTransformation(RenameOperation, RenameOperation, function (a, b, context) {\n  if (a.position.isEqual(b.position)) {\n    if (context.aIsStrong) {\n      a.oldName = b.newName;\n    } else {\n      return [new NoOperation(0)];\n    }\n  }\n\n  return [a];\n});\nsetTransformation(RenameOperation, SplitOperation, function (a, b) {\n  // Case 1:\n  //\n  // The element to rename has been split. In this case, the new element should be also renamed.\n  //\n  // User decides to change the paragraph to a list item:\n  // <paragraph>Foobar</paragraph>\n  //\n  // However, in meantime, split happens:\n  // <paragraph>Foo</paragraph><paragraph>bar</paragraph>\n  //\n  // As a result, rename both elements:\n  // <listItem>Foo</listItem><listItem>bar</listItem>\n  //\n  var renamePath = a.position.path;\n  var splitPath = b.splitPosition.getParentPath();\n\n  if (compareArrays(renamePath, splitPath) == 'same' && !b.graveyardPosition) {\n    var extraRename = new RenameOperation(a.position.getShiftedBy(1), a.oldName, a.newName, 0);\n    return [a, extraRename];\n  } // The default case.\n  //\n\n\n  a.position = a.position._getTransformedBySplitOperation(b);\n  return [a];\n}); // -----------------------\n\nsetTransformation(RootAttributeOperation, RootAttributeOperation, function (a, b, context) {\n  if (a.root === b.root && a.key === b.key) {\n    if (!context.aIsStrong || a.newValue === b.newValue) {\n      return [new NoOperation(0)];\n    } else {\n      a.oldValue = b.newValue;\n    }\n  }\n\n  return [a];\n}); // -----------------------\n\nsetTransformation(SplitOperation, InsertOperation, function (a, b) {\n  // The default case.\n  //\n  if (a.splitPosition.hasSameParentAs(b.position) && a.splitPosition.offset < b.position.offset) {\n    a.howMany += b.howMany;\n  }\n\n  a.splitPosition = a.splitPosition._getTransformedByInsertOperation(b);\n  a.insertionPosition = SplitOperation.getInsertionPosition(a.splitPosition);\n  return [a];\n});\nsetTransformation(SplitOperation, MergeOperation, function (a, b, context) {\n  // Case 1:\n  //\n  // Split element got merged. If two different elements were merged, clients will have different content.\n  //\n  // Example. Merge at `{}`, split at `[]`:\n  // <heading>Foo</heading>{}<paragraph>B[]ar</paragraph>\n  //\n  // On merge side it will look like this:\n  // <heading>FooB[]ar</heading>\n  // <heading>FooB</heading><heading>ar</heading>\n  //\n  // On split side it will look like this:\n  // <heading>Foo</heading>{}<paragraph>B</paragraph><paragraph>ar</paragraph>\n  // <heading>FooB</heading><paragraph>ar</paragraph>\n  //\n  // Clearly, the second element is different for both clients.\n  //\n  // We could use the removed merge element from graveyard as a split element but then clients would have a different\n  // model state (in graveyard), because the split side client would still have an element in graveyard (removed by merge).\n  //\n  // To overcome this, in `SplitOperation` x `MergeOperation` transformation we will add additional `SplitOperation`\n  // in the graveyard, which will actually clone the merged-and-deleted element. Then, that cloned element will be\n  // used for splitting. Example below.\n  //\n  // Original state:\n  // <heading>Foo</heading>{}<paragraph>B[]ar</paragraph>\n  //\n  // Merge side client:\n  //\n  // After merge:\n  // <heading>FooB[]ar</heading>                                 graveyard: <paragraph></paragraph>\n  //\n  // Extra split:\n  // <heading>FooB[]ar</heading>                                 graveyard: <paragraph></paragraph><paragraph></paragraph>\n  //\n  // Use the \"cloned\" element from graveyard:\n  // <heading>FooB</heading><paragraph>ar</paragraph>            graveyard: <paragraph></paragraph>\n  //\n  // Split side client:\n  //\n  // After split:\n  // <heading>Foo</heading>{}<paragraph>B</paragraph><paragraph>ar</paragraph>\n  //\n  // After merge:\n  // <heading>FooB</heading><paragraph>ar</paragraph>            graveyard: <paragraph></paragraph>\n  //\n  // This special case scenario only applies if the original split operation clones the split element.\n  // If the original split operation has `graveyardPosition` set, it all doesn't have sense because split operation\n  // knows exactly which element it should use. So there would be no original problem with different contents.\n  //\n  // Additionally, the special case applies only if the merge wasn't already undone.\n  //\n  if (!a.graveyardPosition && !context.bWasUndone && a.splitPosition.hasSameParentAs(b.sourcePosition)) {\n    var splitPath = b.graveyardPosition.path.slice();\n    splitPath.push(0);\n    var splitPosition = new Position(b.graveyardPosition.root, splitPath);\n    var insertionPosition = SplitOperation.getInsertionPosition(new Position(b.graveyardPosition.root, splitPath));\n    var additionalSplit = new SplitOperation(splitPosition, 0, null, 0);\n    additionalSplit.insertionPosition = insertionPosition;\n    a.splitPosition = a.splitPosition._getTransformedByMergeOperation(b);\n    a.insertionPosition = SplitOperation.getInsertionPosition(a.splitPosition);\n    a.graveyardPosition = additionalSplit.insertionPosition.clone();\n    a.graveyardPosition.stickiness = 'toNext';\n    return [additionalSplit, a];\n  } // The default case.\n  //\n\n\n  if (a.splitPosition.hasSameParentAs(b.deletionPosition) && !a.splitPosition.isAfter(b.deletionPosition)) {\n    a.howMany--;\n  }\n\n  if (a.splitPosition.hasSameParentAs(b.targetPosition)) {\n    a.howMany += b.howMany;\n  }\n\n  a.splitPosition = a.splitPosition._getTransformedByMergeOperation(b);\n  a.insertionPosition = SplitOperation.getInsertionPosition(a.splitPosition);\n\n  if (a.graveyardPosition) {\n    a.graveyardPosition = a.graveyardPosition._getTransformedByMergeOperation(b);\n  }\n\n  return [a];\n});\nsetTransformation(SplitOperation, MoveOperation, function (a, b, context) {\n  var rangeToMove = Range._createFromPositionAndShift(b.sourcePosition, b.howMany);\n\n  if (a.graveyardPosition) {\n    // Case 1:\n    //\n    // Split operation graveyard node was moved. In this case move operation is stronger. Since graveyard element\n    // is already moved to the correct position, we need to only move the nodes after the split position.\n    // This will be done by `MoveOperation` instead of `SplitOperation`.\n    //\n    var gyElementMoved = rangeToMove.start.isEqual(a.graveyardPosition) || rangeToMove.containsPosition(a.graveyardPosition);\n\n    if (!context.bWasUndone && gyElementMoved) {\n      var sourcePosition = a.splitPosition._getTransformedByMoveOperation(b);\n\n      var newParentPosition = a.graveyardPosition._getTransformedByMoveOperation(b);\n\n      var newTargetPath = newParentPosition.path.slice();\n      newTargetPath.push(0);\n      var newTargetPosition = new Position(newParentPosition.root, newTargetPath);\n      var moveOp = new MoveOperation(sourcePosition, a.howMany, newTargetPosition, 0);\n      return [moveOp];\n    }\n\n    a.graveyardPosition = a.graveyardPosition._getTransformedByMoveOperation(b);\n  } // Case 2:\n  //\n  // If the split position is inside the moved range, we need to shift the split position to a proper place.\n  // The position cannot be moved together with moved range because that would result in splitting of an incorrect element.\n  //\n  // Characters `bc` should be moved to the second paragraph while split position is between them:\n  // <paragraph>A[b|c]d</paragraph><paragraph>Xyz</paragraph>\n  //\n  // After move, new split position is incorrect:\n  // <paragraph>Ad</paragraph><paragraph>Xb|cyz</paragraph>\n  //\n  // Correct split position:\n  // <paragraph>A|d</paragraph><paragraph>Xbcyz</paragraph>\n  //\n  // After split:\n  // <paragraph>A</paragraph><paragraph>d</paragraph><paragraph>Xbcyz</paragraph>\n  //\n\n\n  if (a.splitPosition.hasSameParentAs(b.sourcePosition) && rangeToMove.containsPosition(a.splitPosition)) {\n    var howManyRemoved = b.howMany - (a.splitPosition.offset - b.sourcePosition.offset);\n    a.howMany -= howManyRemoved;\n\n    if (a.splitPosition.hasSameParentAs(b.targetPosition) && a.splitPosition.offset < b.targetPosition.offset) {\n      a.howMany += b.howMany;\n    }\n\n    a.splitPosition = b.sourcePosition.clone();\n    a.insertionPosition = SplitOperation.getInsertionPosition(a.splitPosition);\n    return [a];\n  } // Case 3:\n  //\n  // Split is at a position where nodes were moved.\n  //\n  // This is a scenario described in `MoveOperation` x `SplitOperation` transformation but from the\n  // \"split operation point of view\".\n  //\n\n\n  var splitAtTarget = a.splitPosition.isEqual(b.targetPosition);\n\n  if (splitAtTarget && (context.baRelation == 'insertAtSource' || context.abRelation == 'splitBefore')) {\n    a.howMany += b.howMany;\n    a.splitPosition = a.splitPosition._getTransformedByDeletion(b.sourcePosition, b.howMany);\n    a.insertionPosition = SplitOperation.getInsertionPosition(a.splitPosition);\n    return [a];\n  } // The default case.\n  // Don't change `howMany` if move operation does not really move anything.\n  //\n\n\n  if (!b.sourcePosition.isEqual(b.targetPosition)) {\n    if (a.splitPosition.hasSameParentAs(b.sourcePosition) && a.splitPosition.offset <= b.sourcePosition.offset) {\n      a.howMany -= b.howMany;\n    }\n\n    if (a.splitPosition.hasSameParentAs(b.targetPosition) && a.splitPosition.offset < b.targetPosition.offset) {\n      a.howMany += b.howMany;\n    }\n  } // Change position stickiness to force a correct transformation.\n\n\n  a.splitPosition.stickiness = 'toNone';\n  a.splitPosition = a.splitPosition._getTransformedByMoveOperation(b);\n  a.splitPosition.stickiness = 'toNext';\n\n  if (a.graveyardPosition) {\n    a.insertionPosition = a.insertionPosition._getTransformedByMoveOperation(b);\n  } else {\n    a.insertionPosition = SplitOperation.getInsertionPosition(a.splitPosition);\n  }\n\n  return [a];\n});\nsetTransformation(SplitOperation, SplitOperation, function (a, b, context) {\n  // Case 1:\n  //\n  // Split at the same position.\n  //\n  // If there already was a split at the same position as in `a` operation, it means that the intention\n  // conveyed by `a` operation has already been fulfilled and `a` should not do anything (to avoid double split).\n  //\n  // However, there is a difference if these are new splits or splits created by undo. These have different\n  // intentions. Also splits moving back different elements from graveyard have different intentions. They\n  // are just different operations.\n  //\n  // So we cancel split operation only if it was really identical.\n  //\n  // Also, there is additional case, where split operations aren't identical and should not be cancelled, however the\n  // default transformation is incorrect too.\n  //\n  if (a.splitPosition.isEqual(b.splitPosition)) {\n    if (!a.graveyardPosition && !b.graveyardPosition) {\n      return [new NoOperation(0)];\n    }\n\n    if (a.graveyardPosition && b.graveyardPosition && a.graveyardPosition.isEqual(b.graveyardPosition)) {\n      return [new NoOperation(0)];\n    } // Use context to know that the `a.splitPosition` should stay where it is.\n    // This happens during undo when first a merge operation moved nodes to `a.splitPosition` and now `b` operation undoes that merge.\n\n\n    if (context.abRelation == 'splitBefore') {\n      // Since split is at the same position, there are no nodes left to split.\n      a.howMany = 0; // Note: there was `if ( a.graveyardPosition )` here but it was uncovered in tests and I couldn't find any scenarios for now.\n      // That would have to be a `SplitOperation` that didn't come from undo but is transformed by operations that were undone.\n      // It could happen if `context` is enabled in collaboration.\n\n      a.graveyardPosition = a.graveyardPosition._getTransformedBySplitOperation(b);\n      return [a];\n    }\n  } // Case 2:\n  //\n  // Same node is using to split different elements. This happens in undo when previously same element was merged to\n  // two different elements. This is described in `MergeOperation` x `MergeOperation` transformation.\n  //\n  // In this case we will follow the same logic. We will assume that `insertionPosition` is same for both\n  // split operations. This might not always be true but in the real cases that were experienced it was. After all,\n  // if these splits are reverses of merge operations that were merging the same element, then the `insertionPosition`\n  // should be same for both of those splits.\n  //\n  // Again, we will decide which operation is stronger by checking if split happens in graveyard or in non-graveyard root.\n  //\n\n\n  if (a.graveyardPosition && b.graveyardPosition && a.graveyardPosition.isEqual(b.graveyardPosition)) {\n    var aInGraveyard = a.splitPosition.root.rootName == '$graveyard';\n    var bInGraveyard = b.splitPosition.root.rootName == '$graveyard'; // If `aIsWeak` it means that `a` points to graveyard while `b` doesn't. Don't move nodes then.\n\n    var aIsWeak = aInGraveyard && !bInGraveyard; // If `bIsWeak` it means that `b` points to graveyard while `a` doesn't. Force moving nodes then.\n\n    var bIsWeak = bInGraveyard && !aInGraveyard; // Force move if `b` is weak or neither operation is weak but `a` is stronger through `context.aIsStrong`.\n\n    var forceMove = bIsWeak || !aIsWeak && context.aIsStrong;\n\n    if (forceMove) {\n      var result = []; // First we need to move any nodes split by `b` back to where they were.\n      // Do it only if `b` actually moved something.\n\n      if (b.howMany) {\n        result.push(new MoveOperation(b.moveTargetPosition, b.howMany, b.splitPosition, 0));\n      } // Then we need to move nodes from `a` split position to their new element.\n      // Do it only if `a` actually should move something.\n\n\n      if (a.howMany) {\n        result.push(new MoveOperation(a.splitPosition, a.howMany, a.moveTargetPosition, 0));\n      }\n\n      return result;\n    } else {\n      return [new NoOperation(0)];\n    }\n  }\n\n  if (a.graveyardPosition) {\n    a.graveyardPosition = a.graveyardPosition._getTransformedBySplitOperation(b);\n  } // Case 3:\n  //\n  // Position where operation `b` inserted a new node after split is the same as the operation `a` split position.\n  // As in similar cases, there is ambiguity if the split should be before the new node (created by `b`) or after.\n  //\n\n\n  if (a.splitPosition.isEqual(b.insertionPosition) && context.abRelation == 'splitBefore') {\n    a.howMany++;\n    return [a];\n  } // Case 4:\n  //\n  // This is a mirror to the case 2. above.\n  //\n\n\n  if (b.splitPosition.isEqual(a.insertionPosition) && context.baRelation == 'splitBefore') {\n    var newPositionPath = b.insertionPosition.path.slice();\n    newPositionPath.push(0);\n    var newPosition = new Position(b.insertionPosition.root, newPositionPath);\n    var moveOp = new MoveOperation(a.insertionPosition, 1, newPosition, 0);\n    return [a, moveOp];\n  } // The default case.\n  //\n\n\n  if (a.splitPosition.hasSameParentAs(b.splitPosition) && a.splitPosition.offset < b.splitPosition.offset) {\n    a.howMany -= b.howMany;\n  }\n\n  a.splitPosition = a.splitPosition._getTransformedBySplitOperation(b);\n  a.insertionPosition = SplitOperation.getInsertionPosition(a.splitPosition);\n  return [a];\n}); // Checks whether `MoveOperation` `targetPosition` is inside a node from the moved range of the other `MoveOperation`.\n//\n// @private\n// @param {module:engine/model/operation/moveoperation~MoveOperation} a\n// @param {module:engine/model/operation/moveoperation~MoveOperation} b\n// @returns {Boolean}\n\nfunction _moveTargetIntoMovedRange(a, b) {\n  return a.targetPosition._getTransformedByDeletion(b.sourcePosition, b.howMany) === null;\n} // Helper function for `MoveOperation` x `MoveOperation` transformation. Converts given ranges and target position to\n// move operations and returns them.\n//\n// Ranges and target position will be transformed on-the-fly when generating operations.\n//\n// Given `ranges` should be in the order of how they were in the original transformed operation.\n//\n// Given `targetPosition` is the target position of the first range from `ranges`.\n//\n// @private\n// @param {Array.<module:engine/model/range~Range>} ranges\n// @param {module:engine/model/position~Position} targetPosition\n// @returns {Array.<module:engine/model/operation/moveoperation~MoveOperation>}\n\n\nfunction _makeMoveOperationsFromRanges(ranges, targetPosition) {\n  // At this moment we have some ranges and a target position, to which those ranges should be moved.\n  // Order in `ranges` array is the go-to order of after transformation.\n  //\n  // We are almost done. We have `ranges` and `targetPosition` to make operations from.\n  // Unfortunately, those operations may affect each other. Precisely, first operation after move\n  // may affect source range and target position of second and third operation. Same with second\n  // operation affecting third.\n  //\n  // We need to fix those source ranges and target positions once again, before converting `ranges` to operations.\n  var operations = []; // Keep in mind that nothing will be transformed if there is just one range in `ranges`.\n\n  for (var i = 0; i < ranges.length; i++) {\n    // Create new operation out of a range and target position.\n    var range = ranges[i];\n    var op = new MoveOperation(range.start, range.end.offset - range.start.offset, targetPosition, 0);\n    operations.push(op); // Transform other ranges by the generated operation.\n\n    for (var j = i + 1; j < ranges.length; j++) {\n      // All ranges in `ranges` array should be:\n      //\n      // * non-intersecting (these are part of original operation source range), and\n      // * `targetPosition` does not target into them (opposite would mean that transformed operation targets \"inside itself\").\n      //\n      // This means that the transformation will be \"clean\" and always return one result.\n      ranges[j] = ranges[j]._getTransformedByMove(op.sourcePosition, op.targetPosition, op.howMany)[0];\n    }\n\n    targetPosition = targetPosition._getTransformedByMove(op.sourcePosition, op.targetPosition, op.howMany);\n  }\n\n  return operations;\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module undo/basecommand\n */\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport { transformSets } from '@ckeditor/ckeditor5-engine/src/model/operation/transform';\n/**\n * Base class for undo feature commands: {@link module:undo/undocommand~UndoCommand} and {@link module:undo/redocommand~RedoCommand}.\n *\n * @protected\n * @extends module:core/command~Command\n */\n\nvar BaseCommand =\n/*#__PURE__*/\nfunction (_Command) {\n  _inherits(BaseCommand, _Command);\n\n  function BaseCommand(editor) {\n    var _this;\n\n    _classCallCheck(this, BaseCommand);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BaseCommand).call(this, editor));\n    /**\n     * Stack of items stored by the command. These are pairs of:\n     *\n     * * {@link module:engine/model/batch~Batch batch} saved by the command,\n     * * {@link module:engine/model/selection~Selection selection} state at the moment of saving the batch.\n     *\n     * @protected\n     * @member {Array} #_stack\n     */\n\n    _this._stack = [];\n    /**\n     * Stores all batches that were created by this command.\n     *\n     * @protected\n     * @member {WeakSet.<module:engine/model/batch~Batch>} #_createdBatches\n     */\n\n    _this._createdBatches = new WeakSet(); // Refresh state, so the command is inactive right after initialization.\n\n    _this.refresh();\n\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(BaseCommand, [{\n    key: \"refresh\",\n    value: function refresh() {\n      this.isEnabled = this._stack.length > 0;\n    }\n    /**\n     * Stores a batch in the command, together with the selection state of the {@link module:engine/model/document~Document document}\n     * created by the editor which this command is registered to.\n     *\n     * @param {module:engine/model/batch~Batch} batch The batch to add.\n     */\n\n  }, {\n    key: \"addBatch\",\n    value: function addBatch(batch) {\n      var docSelection = this.editor.model.document.selection;\n      var selection = {\n        ranges: docSelection.hasOwnRange ? Array.from(docSelection.getRanges()) : [],\n        isBackward: docSelection.isBackward\n      };\n\n      this._stack.push({\n        batch: batch,\n        selection: selection\n      });\n\n      this.refresh();\n    }\n    /**\n     * Removes all items from the stack.\n     */\n\n  }, {\n    key: \"clearStack\",\n    value: function clearStack() {\n      this._stack = [];\n      this.refresh();\n    }\n    /**\n     * Restores the {@link module:engine/model/document~Document#selection document selection} state after a batch was undone.\n     *\n     * @protected\n     * @param {Array.<module:engine/model/range~Range>} ranges Ranges to be restored.\n     * @param {Boolean} isBackward A flag describing whether the restored range was selected forward or backward.\n     * @param {Array.<module:engine/model/operation/operation~Operation>} operations Operations which has been applied\n     * since selection has been stored.\n     */\n\n  }, {\n    key: \"_restoreSelection\",\n    value: function _restoreSelection(ranges, isBackward, operations) {\n      var model = this.editor.model;\n      var document = model.document; // This will keep the transformed selection ranges.\n\n      var selectionRanges = []; // Transform all ranges from the restored selection.\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = ranges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var range = _step.value;\n          var transformed = transformSelectionRange(range, operations); // For each `range` from `ranges`, we take only one transformed range.\n          // This is because we want to prevent situation where single-range selection\n          // got transformed to multi-range selection. We will take the first range that\n          // is not in the graveyard.\n\n          var newRange = transformed.find(function (range) {\n            return range.start.root != document.graveyard;\n          }); // `transformedRange` might be `undefined` if transformed range ended up in graveyard.\n\n          if (newRange) {\n            selectionRanges.push(newRange);\n          }\n        } // `selectionRanges` may be empty if all ranges ended up in graveyard. If that is the case, do not restore selection.\n\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      if (selectionRanges.length) {\n        model.change(function (writer) {\n          writer.setSelection(selectionRanges, {\n            backward: isBackward\n          });\n        });\n      }\n    }\n    /**\n     * Undoes a batch by reversing that batch, transforming reversed batch and finally applying it.\n     * This is a helper method for {@link #execute}.\n     *\n     * @protected\n     * @param {module:engine/model/batch~Batch} batchToUndo The batch to be undone.\n     * @param {module:engine/model/batch~Batch} undoingBatch The batch that will contain undoing changes.\n     */\n\n  }, {\n    key: \"_undo\",\n    value: function _undo(batchToUndo, undoingBatch) {\n      var model = this.editor.model;\n      var document = model.document; // All changes done by the command execution will be saved as one batch.\n\n      this._createdBatches.add(undoingBatch);\n\n      var operationsToUndo = batchToUndo.operations.slice().filter(function (operation) {\n        return operation.isDocumentOperation;\n      });\n      operationsToUndo.reverse(); // We will process each operation from `batchToUndo`, in reverse order. If there were operations A, B and C in undone batch,\n      // we need to revert them in reverse order, so first C' (reversed C), then B', then A'.\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = operationsToUndo[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var operationToUndo = _step2.value;\n          var nextBaseVersion = operationToUndo.baseVersion + 1;\n          var historyOperations = Array.from(document.history.getOperations(nextBaseVersion));\n          var transformedSets = transformSets([operationToUndo.getReversed()], historyOperations, {\n            useRelations: true,\n            document: this.editor.model.document,\n            padWithNoOps: false,\n            forceWeakRemove: true\n          });\n          var reversedOperations = transformedSets.operationsA; // After reversed operation has been transformed by all history operations, apply it.\n\n          var _iteratorNormalCompletion3 = true;\n          var _didIteratorError3 = false;\n          var _iteratorError3 = undefined;\n\n          try {\n            for (var _iterator3 = reversedOperations[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n              var operation = _step3.value;\n              // Before applying, add the operation to the `undoingBatch`.\n              undoingBatch.addOperation(operation);\n              model.applyOperation(operation);\n              document.history.setOperationAsUndone(operationToUndo, operation);\n            }\n          } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n                _iterator3[\"return\"]();\n              }\n            } finally {\n              if (_didIteratorError3) {\n                throw _iteratorError3;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n  }]);\n\n  return BaseCommand;\n}(Command); // Transforms given range `range` by given `operations`.\n// Returns an array containing one or more ranges, which are result of the transformation.\n\n\nexport { BaseCommand as default };\n\nfunction transformSelectionRange(range, operations) {\n  var transformed = range.getTransformedByOperations(operations); // After `range` got transformed, we have an array of ranges. Some of those\n  // ranges may be \"touching\" -- they can be next to each other and could be merged.\n  // First, we have to sort those ranges to assure that they are in order.\n\n  transformed.sort(function (a, b) {\n    return a.start.isBefore(b.start) ? -1 : 1;\n  }); // Then, we check if two consecutive ranges are touching.\n\n  for (var i = 1; i < transformed.length; i++) {\n    var a = transformed[i - 1];\n    var b = transformed[i];\n\n    if (a.end.isTouching(b.start)) {\n      // And join them together if they are.\n      a.end = b.end;\n      transformed.splice(i, 1);\n      i--;\n    }\n  }\n\n  return transformed;\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module undo/undocommand\n */\nimport BaseCommand from './basecommand';\n/**\n * The undo command stores {@link module:engine/model/batch~Batch batches} applied to the\n * {@link module:engine/model/document~Document document} and is able to undo a batch by reversing it and transforming by\n * batches from {@link module:engine/model/document~Document#history history} that happened after the reversed batch.\n *\n * The undo command also takes care of restoring the {@link module:engine/model/document~Document#selection document selection}.\n *\n * @extends module:undo/basecommand~BaseCommand\n */\n\nvar UndoCommand =\n/*#__PURE__*/\nfunction (_BaseCommand) {\n  _inherits(UndoCommand, _BaseCommand);\n\n  function UndoCommand() {\n    _classCallCheck(this, UndoCommand);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(UndoCommand).apply(this, arguments));\n  }\n\n  _createClass(UndoCommand, [{\n    key: \"execute\",\n\n    /**\n     * Executes the command. This method reverts a {@link module:engine/model/batch~Batch batch} added to the command's stack, transforms\n     * and applies the reverted version on the {@link module:engine/model/document~Document document} and removes the batch from the stack.\n     * Then, it restores the {@link module:engine/model/document~Document#selection document selection}.\n     *\n     * @fires execute\n     * @fires revert\n     * @param {module:engine/model/batch~Batch} [batch] A batch that should be undone. If not set, the last added batch will be undone.\n     */\n    value: function execute() {\n      var _this = this;\n\n      var batch = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      // If batch is not given, set `batchIndex` to the last index in command stack.\n      var batchIndex = batch ? this._stack.findIndex(function (a) {\n        return a.batch == batch;\n      }) : this._stack.length - 1;\n\n      var item = this._stack.splice(batchIndex, 1)[0];\n\n      var undoingBatch = this.editor.model.createBatch('transparent'); // All changes has to be done in one `enqueueChange` callback so other listeners will not\n      // step between consecutive operations, or won't do changes to the document before selection is properly restored.\n\n      this.editor.model.enqueueChange(undoingBatch, function () {\n        _this._undo(item.batch, undoingBatch);\n\n        var operations = _this.editor.model.document.history.getOperations(item.batch.baseVersion);\n\n        _this._restoreSelection(item.selection.ranges, item.selection.isBackward, operations);\n\n        _this.fire('revert', item.batch, undoingBatch);\n      });\n      this.refresh();\n    }\n  }]);\n\n  return UndoCommand;\n}(BaseCommand);\n/**\n * Fired when execution of the command reverts some batch.\n *\n * @event revert\n */\n\n\nexport { UndoCommand as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module undo/redocommand\n */\nimport BaseCommand from './basecommand';\n/**\n * The redo command stores {@link module:engine/model/batch~Batch batches} that were used to undo a batch by\n * {@link module:undo/undocommand~UndoCommand}. It is able to redo a previously undone batch by reversing the undoing\n * batches created by `UndoCommand`. The reversed batch is transformed by all the batches from\n * {@link module:engine/model/document~Document#history history} that happened after the reversed undo batch.\n *\n * The redo command also takes care of restoring the {@link module:engine/model/document~Document#selection document selection}.\n *\n * @extends module:undo/basecommand~BaseCommand\n */\n\nvar RedoCommand =\n/*#__PURE__*/\nfunction (_BaseCommand) {\n  _inherits(RedoCommand, _BaseCommand);\n\n  function RedoCommand() {\n    _classCallCheck(this, RedoCommand);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RedoCommand).apply(this, arguments));\n  }\n\n  _createClass(RedoCommand, [{\n    key: \"execute\",\n\n    /**\n     * Executes the command. This method reverts the last {@link module:engine/model/batch~Batch batch} added to\n     * the command's stack, applies the reverted and transformed version on the\n     * {@link module:engine/model/document~Document document} and removes the batch from the stack.\n     * Then, it restores the {@link module:engine/model/document~Document#selection document selection}.\n     *\n     * @fires execute\n     */\n    value: function execute() {\n      var _this = this;\n\n      var item = this._stack.pop();\n\n      var redoingBatch = this.editor.model.createBatch('transparent'); // All changes have to be done in one `enqueueChange` callback so other listeners will not step between consecutive\n      // operations, or won't do changes to the document before selection is properly restored.\n\n      this.editor.model.enqueueChange(redoingBatch, function () {\n        var lastOperation = item.batch.operations[item.batch.operations.length - 1];\n        var nextBaseVersion = lastOperation.baseVersion + 1;\n\n        var operations = _this.editor.model.document.history.getOperations(nextBaseVersion);\n\n        _this._restoreSelection(item.selection.ranges, item.selection.isBackward, operations);\n\n        _this._undo(item.batch, redoingBatch);\n      });\n      this.refresh();\n    }\n  }]);\n\n  return RedoCommand;\n}(BaseCommand);\n\nexport { RedoCommand as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module undo/undoediting\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport UndoCommand from './undocommand';\nimport RedoCommand from './redocommand';\n/**\n * The undo engine feature.\n *\n * It introduces the `'undo'` and `'redo'` commands to the editor.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar UndoEditing =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(UndoEditing, _Plugin);\n\n  /**\n   * @inheritDoc\n   */\n  function UndoEditing(editor) {\n    var _this;\n\n    _classCallCheck(this, UndoEditing);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UndoEditing).call(this, editor));\n    /**\n     * The command that manages undo {@link module:engine/model/batch~Batch batches} stack (history).\n     * Created and registered during the {@link #init feature initialization}.\n     *\n     * @private\n     * @member {module:undo/undocommand~UndoCommand} #_undoCommand\n     */\n\n    /**\n     * The command that manages redo {@link module:engine/model/batch~Batch batches} stack (history).\n     * Created and registered during the {@link #init feature initialization}.\n     *\n     * @private\n     * @member {module:undo/undocommand~UndoCommand} #_redoCommand\n     */\n\n    /**\n     * Keeps track of which batches were registered in undo.\n     *\n     * @private\n     * @member {WeakSet.<module:engine/model/batch~Batch>}\n     */\n\n    _this._batchRegistry = new WeakSet();\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(UndoEditing, [{\n    key: \"init\",\n    value: function init() {\n      var _this2 = this;\n\n      var editor = this.editor; // Create commands.\n\n      this._undoCommand = new UndoCommand(editor);\n      this._redoCommand = new RedoCommand(editor); // Register command to the editor.\n\n      editor.commands.add('undo', this._undoCommand);\n      editor.commands.add('redo', this._redoCommand);\n      this.listenTo(editor.model, 'applyOperation', function (evt, args) {\n        var operation = args[0]; // Do not register batch if the operation is not a document operation.\n        // This prevents from creating empty undo steps, where all operations where non-document operations.\n        // Non-document operations creates and alters content in detached tree fragments (for example, document fragments).\n        // Most of time this is preparing data before it is inserted into actual tree (for example during copy & paste).\n        // Such operations should not be reversed.\n\n        if (!operation.isDocumentOperation) {\n          return;\n        }\n\n        var batch = operation.batch;\n\n        var isRedoBatch = _this2._redoCommand._createdBatches.has(batch);\n\n        var isUndoBatch = _this2._undoCommand._createdBatches.has(batch);\n\n        var isRegisteredBatch = _this2._batchRegistry.has(batch); // If changes are not a part of a batch or this is not a new batch, omit those changes.\n\n\n        if (isRegisteredBatch || batch.type == 'transparent' && !isRedoBatch && !isUndoBatch) {\n          return;\n        } else {\n          if (isRedoBatch) {\n            // If this batch comes from `redoCommand`, add it to `undoCommand` stack.\n            _this2._undoCommand.addBatch(batch);\n          } else if (!isUndoBatch) {\n            // A default batch - these are new changes in the document, not introduced by undo feature.\n            // Add them to `undoCommand` stack and clear `redoCommand` stack.\n            _this2._undoCommand.addBatch(batch);\n\n            _this2._redoCommand.clearStack();\n          }\n        } // Add the batch to the registry so it will not be processed again.\n\n\n        _this2._batchRegistry.add(batch);\n      }, {\n        priority: 'highest'\n      });\n      this.listenTo(this._undoCommand, 'revert', function (evt, undoneBatch, undoingBatch) {\n        _this2._redoCommand.addBatch(undoingBatch);\n      });\n      editor.keystrokes.set('CTRL+Z', 'undo');\n      editor.keystrokes.set('CTRL+Y', 'redo');\n      editor.keystrokes.set('CTRL+SHIFT+Z', 'redo');\n    }\n  }]);\n\n  return UndoEditing;\n}(Plugin);\n\nexport { UndoEditing as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* global DOMParser */\n\n/**\n * @module ui/icon/iconview\n */\nimport View from '../view';\nimport '../../theme/components/icon/icon.css';\n/**\n * The icon view class.\n *\n * @extends module:ui/view~View\n */\n\nvar IconView =\n/*#__PURE__*/\nfunction (_View) {\n  _inherits(IconView, _View);\n\n  /**\n   * @inheritDoc\n   */\n  function IconView() {\n    var _this;\n\n    _classCallCheck(this, IconView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(IconView).call(this));\n    var bind = _this.bindTemplate;\n    /**\n     * The SVG source of the icon.\n     *\n     * @observable\n     * @member {String} #content\n     */\n\n    _this.set('content', '');\n    /**\n     * This attribute specifies the boundaries to which the\n     * icon content should stretch.\n     *\n     * @observable\n     * @default '0 0 20 20'\n     * @member {String} #viewBox\n     */\n\n\n    _this.set('viewBox', '0 0 20 20');\n    /**\n     * The fill color of the child `path.ck-icon__fill`.\n     *\n     * @observable\n     * @default ''\n     * @member {String} #fillColor\n     */\n\n\n    _this.set('fillColor', '');\n\n    _this.setTemplate({\n      tag: 'svg',\n      ns: 'http://www.w3.org/2000/svg',\n      attributes: {\n        \"class\": ['ck', 'ck-icon'],\n        viewBox: bind.to('viewBox')\n      }\n    });\n\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(IconView, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      _get(_getPrototypeOf(IconView.prototype), \"render\", this).call(this);\n\n      this._updateXMLContent();\n\n      this._colorFillPaths(); // This is a hack for lack of innerHTML binding.\n      // See: https://github.com/ckeditor/ckeditor5-ui/issues/99.\n\n\n      this.on('change:content', function () {\n        _this2._updateXMLContent();\n\n        _this2._colorFillPaths();\n      });\n      this.on('change:fillColor', function () {\n        _this2._colorFillPaths();\n      });\n    }\n    /**\n     * Updates the {@link #element} with the value of {@link #content}.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_updateXMLContent\",\n    value: function _updateXMLContent() {\n      if (this.content) {\n        var parsed = new DOMParser().parseFromString(this.content.trim(), 'image/svg+xml');\n        var svg = parsed.querySelector('svg');\n        var viewBox = svg.getAttribute('viewBox');\n\n        if (viewBox) {\n          this.viewBox = viewBox;\n        }\n\n        this.element.innerHTML = '';\n\n        while (svg.childNodes.length > 0) {\n          this.element.appendChild(svg.childNodes[0]);\n        }\n      }\n    }\n    /**\n     * Fills all child `path.ck-icon__fill` with the `#fillColor`.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_colorFillPaths\",\n    value: function _colorFillPaths() {\n      var _this3 = this;\n\n      if (this.fillColor) {\n        this.element.querySelectorAll('.ck-icon__fill').forEach(function (path) {\n          path.style.fill = _this3.fillColor;\n        });\n      }\n    }\n  }]);\n\n  return IconView;\n}(View);\n\nexport { IconView as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/tooltip/tooltipview\n */\nimport View from '../view';\nimport '../../theme/components/tooltip/tooltip.css';\n/**\n * The tooltip view class.\n *\n * @extends module:ui/view~View\n */\n\nvar TooltipView =\n/*#__PURE__*/\nfunction (_View) {\n  _inherits(TooltipView, _View);\n\n  /**\n   * @inheritDoc\n   */\n  function TooltipView(locale) {\n    var _this;\n\n    _classCallCheck(this, TooltipView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TooltipView).call(this, locale));\n    /**\n     * The text of the tooltip visible to the user.\n     *\n     * @observable\n     * @member {String} #text\n     */\n\n    _this.set('text', '');\n    /**\n     * The position of the tooltip (south or north).\n     *\n     *\t\t+-----------+\n     *\t\t|   north   |\n     *\t\t+-----------+\n     *\t\t      V\n     *\t\t  [element]\n     *\n     *\t\t  [element]\n     *\t\t      ^\n     *\t\t+-----------+\n     *\t\t|   south   |\n     *\t\t+-----------+\n     *\n     * @observable\n     * @default 's'\n     * @member {'s'|'n'} #position\n     */\n\n\n    _this.set('position', 's');\n\n    var bind = _this.bindTemplate;\n\n    _this.setTemplate({\n      tag: 'span',\n      attributes: {\n        \"class\": ['ck', 'ck-tooltip', bind.to('position', function (position) {\n          return 'ck-tooltip_' + position;\n        }), bind[\"if\"]('text', 'ck-hidden', function (value) {\n          return !value.trim();\n        })]\n      },\n      children: [{\n        tag: 'span',\n        attributes: {\n          \"class\": ['ck', 'ck-tooltip__text']\n        },\n        children: [{\n          text: bind.to('text')\n        }]\n      }]\n    });\n\n    return _this;\n  }\n\n  return TooltipView;\n}(View);\n\nexport { TooltipView as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/button/buttonview\n */\nimport View from '../view';\nimport IconView from '../icon/iconview';\nimport TooltipView from '../tooltip/tooltipview';\nimport uid from '@ckeditor/ckeditor5-utils/src/uid';\nimport { getEnvKeystrokeText } from '@ckeditor/ckeditor5-utils/src/keyboard';\nimport '../../theme/components/button/button.css';\n/**\n * The button view class.\n *\n *\t\tconst view = new ButtonView();\n *\n *\t\tview.set( {\n *\t\t\tlabel: 'A button',\n *\t\t\tkeystroke: 'Ctrl+B',\n *\t\t\ttooltip: true,\n *\t\t\twithText: true\n *\t\t} );\n *\n *\t\tview.render();\n *\n *\t\tdocument.body.append( view.element );\n *\n * @extends module:ui/view~View\n * @implements module:ui/button/button~Button\n */\n\nvar ButtonView =\n/*#__PURE__*/\nfunction (_View) {\n  _inherits(ButtonView, _View);\n\n  /**\n   * @inheritDoc\n   */\n  function ButtonView(locale) {\n    var _this;\n\n    _classCallCheck(this, ButtonView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ButtonView).call(this, locale));\n    var bind = _this.bindTemplate;\n    var ariaLabelUid = uid(); // Implement the Button interface.\n\n    _this.set('class');\n\n    _this.set('labelStyle');\n\n    _this.set('icon');\n\n    _this.set('isEnabled', true);\n\n    _this.set('isOn', false);\n\n    _this.set('isVisible', true);\n\n    _this.set('keystroke');\n\n    _this.set('label');\n\n    _this.set('tabindex', -1);\n\n    _this.set('tooltip');\n\n    _this.set('tooltipPosition', 's');\n\n    _this.set('type', 'button');\n\n    _this.set('withText', false);\n    /**\n     * Collection of the child views inside of the button {@link #element}.\n     *\n     * @readonly\n     * @member {module:ui/viewcollection~ViewCollection}\n     */\n\n\n    _this.children = _this.createCollection();\n    /**\n     * Tooltip of the button view. It is configurable using the {@link #tooltip tooltip attribute}.\n     *\n     * @readonly\n     * @member {module:ui/tooltip/tooltipview~TooltipView} #tooltipView\n     */\n\n    _this.tooltipView = _this._createTooltipView();\n    /**\n     * Label of the button view. It is configurable using the {@link #label label attribute}.\n     *\n     * @readonly\n     * @member {module:ui/view~View} #labelView\n     */\n\n    _this.labelView = _this._createLabelView(ariaLabelUid);\n    /**\n     * The icon view of the button. Will be added to {@link #children} when the\n     * {@link #icon icon attribute} is defined.\n     *\n     * @readonly\n     * @member {module:ui/icon/iconview~IconView} #iconView\n     */\n\n    _this.iconView = new IconView();\n\n    _this.iconView.extendTemplate({\n      attributes: {\n        \"class\": 'ck-button__icon'\n      }\n    });\n    /**\n     * Tooltip of the button bound to the template.\n     *\n     * @see #tooltip\n     * @see #_getTooltipString\n     * @private\n     * @observable\n     * @member {Boolean} #_tooltipString\n     */\n\n\n    _this.bind('_tooltipString').to(_assertThisInitialized(_this), 'tooltip', _assertThisInitialized(_this), 'label', _assertThisInitialized(_this), 'keystroke', _this._getTooltipString.bind(_assertThisInitialized(_this)));\n\n    _this.setTemplate({\n      tag: 'button',\n      attributes: {\n        \"class\": ['ck', 'ck-button', bind.to('class'), bind[\"if\"]('isEnabled', 'ck-disabled', function (value) {\n          return !value;\n        }), bind[\"if\"]('isVisible', 'ck-hidden', function (value) {\n          return !value;\n        }), bind.to('isOn', function (value) {\n          return value ? 'ck-on' : 'ck-off';\n        }), bind[\"if\"]('withText', 'ck-button_with-text')],\n        type: bind.to('type', function (value) {\n          return value ? value : 'button';\n        }),\n        tabindex: bind.to('tabindex'),\n        'aria-labelledby': \"ck-editor__aria-label_\".concat(ariaLabelUid),\n        'aria-disabled': bind[\"if\"]('isEnabled', true, function (value) {\n          return !value;\n        }),\n        'aria-pressed': bind[\"if\"]('isOn', true)\n      },\n      children: _this.children,\n      on: {\n        mousedown: bind.to(function (evt) {\n          evt.preventDefault();\n        }),\n        click: bind.to(function (evt) {\n          // We can't make the button disabled using the disabled attribute, because it won't be focusable.\n          // Though, shouldn't this condition be moved to the button controller?\n          if (_this.isEnabled) {\n            _this.fire('execute');\n          } else {\n            // Prevent the default when button is disabled, to block e.g.\n            // automatic form submitting. See ckeditor/ckeditor5-link#74.\n            evt.preventDefault();\n          }\n        })\n      }\n    });\n\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(ButtonView, [{\n    key: \"render\",\n    value: function render() {\n      _get(_getPrototypeOf(ButtonView.prototype), \"render\", this).call(this);\n\n      if (this.icon) {\n        this.iconView.bind('content').to(this, 'icon');\n        this.children.add(this.iconView);\n      }\n\n      this.children.add(this.tooltipView);\n      this.children.add(this.labelView);\n    }\n    /**\n     * Focuses the {@link #element} of the button.\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.element.focus();\n    }\n    /**\n     * Creates a {@link module:ui/tooltip/tooltipview~TooltipView} instance and binds it with button\n     * attributes.\n     *\n     * @private\n     * @returns {module:ui/tooltip/tooltipview~TooltipView}\n     */\n\n  }, {\n    key: \"_createTooltipView\",\n    value: function _createTooltipView() {\n      var tooltipView = new TooltipView();\n      tooltipView.bind('text').to(this, '_tooltipString');\n      tooltipView.bind('position').to(this, 'tooltipPosition');\n      return tooltipView;\n    }\n    /**\n     * Creates a label view instance and binds it with button attributes.\n     *\n     * @private\n     * @param {String} ariaLabelUid The aria label UID.\n     * @returns {module:ui/view~View}\n     */\n\n  }, {\n    key: \"_createLabelView\",\n    value: function _createLabelView(ariaLabelUid) {\n      var labelView = new View();\n      var bind = this.bindTemplate;\n      labelView.setTemplate({\n        tag: 'span',\n        attributes: {\n          \"class\": ['ck', 'ck-button__label'],\n          style: bind.to('labelStyle'),\n          id: \"ck-editor__aria-label_\".concat(ariaLabelUid)\n        },\n        children: [{\n          text: this.bindTemplate.to('label')\n        }]\n      });\n      return labelView;\n    }\n    /**\n     * Gets the text for the {@link #tooltipView} from the combination of\n     * {@link #tooltip}, {@link #label} and {@link #keystroke} attributes.\n     *\n     * @private\n     * @see #tooltip\n     * @see #_tooltipString\n     * @param {Boolean|String|Function} tooltip Button tooltip.\n     * @param {String} label Button label.\n     * @param {String} keystroke Button keystroke.\n     * @returns {String}\n     */\n\n  }, {\n    key: \"_getTooltipString\",\n    value: function _getTooltipString(tooltip, label, keystroke) {\n      if (tooltip) {\n        if (typeof tooltip == 'string') {\n          return tooltip;\n        } else {\n          if (keystroke) {\n            keystroke = getEnvKeystrokeText(keystroke);\n          }\n\n          if (tooltip instanceof Function) {\n            return tooltip(label, keystroke);\n          } else {\n            return \"\".concat(label).concat(keystroke ? \" (\".concat(keystroke, \")\") : '');\n          }\n        }\n      }\n\n      return '';\n    }\n  }]);\n\n  return ButtonView;\n}(View);\n\nexport { ButtonView as default };","function _typeof(obj) {\n    if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {\n        _typeof = function _typeof(obj) {\n            return typeof obj;\n        };\n    } else {\n        _typeof = function _typeof(obj) {\n            return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n        };\n    }\n    return _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError('Cannot call a class as a function');\n    }\n}\nfunction _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if ('value' in descriptor)\n            descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps)\n        _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps)\n        _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === 'object' || typeof call === 'function')) {\n        return call;\n    }\n    return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError('this hasn\\'t been initialised - super() hasn\\'t been called');\n    }\n    return self;\n}\nfunction _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== 'function' && superClass !== null) {\n        throw new TypeError('Super expression must either be null or a function');\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass)\n        _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return _setPrototypeOf(o, p);\n}\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module undo/undoui\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport undoIcon from '../theme/icons/undo.svg';\nimport redoIcon from '../theme/icons/redo.svg';\n/**\n * The undo UI feature. It introduces the `'undo'` and `'redo'` buttons to the editor.\n *\n * @extends module:core/plugin~Plugin\n */\nvar UndoUI = /*#__PURE__*/\nfunction (_Plugin) {\n    _inherits(UndoUI, _Plugin);\n    function UndoUI() {\n        _classCallCheck(this, UndoUI);\n        return _possibleConstructorReturn(this, _getPrototypeOf(UndoUI).apply(this, arguments));\n    }\n    _createClass(UndoUI, [\n        {\n            key: 'init',\n            /**\n     * @inheritDoc\n     */\n            value: function init() {\n                var editor = this.editor;\n                var t = editor.t;\n                this._addButton('undo', t('o'), 'CTRL+Z', undoIcon);\n                this._addButton('redo', t('p'), 'CTRL+Y', redoIcon);\n            }    /**\n     * Creates a button for the specified command.\n     *\n     * @private\n     * @param {String} name Command name.\n     * @param {String} label Button label.\n     * @param {String} keystroke Command keystroke.\n     * @param {String} Icon Source of the icon.\n     */\n        },\n        {\n            key: '_addButton',\n            value: function _addButton(name, label, keystroke, Icon) {\n                var _this = this;\n                var editor = this.editor;\n                editor.ui.componentFactory.add(name, function (locale) {\n                    var command = editor.commands.get(name);\n                    var view = new ButtonView(locale);\n                    view.set({\n                        label: label,\n                        icon: Icon,\n                        keystroke: keystroke,\n                        tooltip: true\n                    });\n                    view.bind('isEnabled').to(command, 'isEnabled');\n                    _this.listenTo(view, 'execute', function () {\n                        return editor.execute(name);\n                    });\n                    return view;\n                });\n            }\n        }\n    ]);\n    return UndoUI;\n}(Plugin);\nexport {\n    UndoUI as default\n};","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module undo/undo\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport UndoEditing from './undoediting';\nimport UndoUI from './undoui';\n/**\n * The undo feature.\n *\n * This is a \"glue\" plugin which loads the {@link module:undo/undoediting~UndoEditing undo editing feature}\n * and {@link module:undo/undoui~UndoUI undo UI feature}.\n *\n * Below is the explanation of the undo mechanism working together with {@link module:engine/model/history~History History}:\n *\n * Whenever a {@link module:engine/model/operation/operation~Operation operation} is applied to the\n * {@link module:engine/model/document~Document document}, it is saved to `History` as is.\n * The {@link module:engine/model/batch~Batch batch} that owns that operation is also saved, in\n * {@link module:undo/undocommand~UndoCommand}, together with the selection that was present in the document before the\n * operation was applied. A batch is saved instead of the operation because changes are undone batch-by-batch, not operation-by-operation\n * and a batch is seen as one undo step.\n *\n * After some changes happen to the document, the `History` and `UndoCommand` stack can be represented as follows:\n *\n *\t\t    History                            Undo stack\n *\t\t==============             ==================================\n *\t\t[operation A1]                         [batch A]\n *\t\t[operation B1]                         [batch B]\n *\t\t[operation B2]                         [batch C]\n *\t\t[operation C1]\n *\t\t[operation C2]\n *\t\t[operation B3]\n *\t\t[operation C3]\n *\n * Where operations starting with the same letter are from same batch.\n *\n * Undoing a batch means that a set of operations which will reverse the effects of that batch needs to be generated.\n * For example, if a batch added several letters, undoing the batch should remove them. It is important to apply undoing\n * operations in the reversed order, so if a batch has operation `X`, `Y`, `Z`, reversed operations `Zr`, `Yr` and `Xr`\n * need to be applied. Otherwise reversed operation `Xr` would operate on a wrong document state, because operation `X`\n * does not know that operations `Y` and `Z` happened.\n *\n * After operations from an undone batch got {@link module:engine/model/operation/operation~Operation#getReversed reversed},\n * one needs to make sure if they are ready to be applied. In the scenario above, operation `C3` is the last operation and `C3r`\n * bases on up-to-date document state, so it can be applied to the document.\n *\n *\t\t     History                             Undo stack\n *\t\t=================             ==================================\n *\t\t[ operation A1  ]                      [  batch A  ]\n *\t\t[ operation B1  ]                      [  batch B  ]\n *\t\t[ operation B2  ]             [   processing undoing batch C   ]\n *\t\t[ operation C1  ]\n *\t\t[ operation C2  ]\n *\t\t[ operation B3  ]\n *\t\t[ operation C3  ]\n *\t\t[ operation C3r ]\n *\n * Next is operation `C2`, reversed to `C2r`. `C2r` bases on `C2`, so it bases on the wrong document state. It needs to be\n * transformed by operations from history that happened after it, so it \"knows\" about them. Let us assume that `C2' = C2r * B3 * C3 * C3r`,\n * where `*` means \"transformed by\". Rest of operations from that batch are processed in the same fashion.\n *\n *\t\t     History                             Undo stack                                      Redo stack\n *\t\t=================             ==================================             ==================================\n *\t\t[ operation A1  ]                      [  batch A  ]                                    [ batch Cr ]\n *\t\t[ operation B1  ]                      [  batch B  ]\n *\t\t[ operation B2  ]\n *\t\t[ operation C1  ]\n *\t\t[ operation C2  ]\n *\t\t[ operation B3  ]\n *\t\t[ operation C3  ]\n *\t\t[ operation C3r ]\n *\t\t[ operation C2' ]\n *\t\t[ operation C1' ]\n *\n * Selective undo works on the same basis, however, instead of undoing the last batch in the undo stack, any batch can be undone.\n * The same algorithm applies: operations from a batch (i.e. `A1`) are reversed and then transformed by operations stored in history.\n *\n * Redo also is very similar to undo. It has its own stack that is filled with undoing (reversed batches). Operations from\n * batch that is re-done are reversed-back, transformed in proper order and applied to the document.\n *\n *\t\t     History                             Undo stack                                      Redo stack\n *\t\t=================             ==================================             ==================================\n *\t\t[ operation A1  ]                      [  batch A  ]\n *\t\t[ operation B1  ]                      [  batch B  ]\n *\t\t[ operation B2  ]                      [ batch Crr ]\n *\t\t[ operation C1  ]\n *\t\t[ operation C2  ]\n *\t\t[ operation B3  ]\n *\t\t[ operation C3  ]\n *\t\t[ operation C3r ]\n *\t\t[ operation C2' ]\n *\t\t[ operation C1' ]\n *\t\t[ operation C1'r]\n *\t\t[ operation C2'r]\n *\t\t[ operation C3rr]\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar Undo =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(Undo, _Plugin);\n\n  function Undo() {\n    _classCallCheck(this, Undo);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Undo).apply(this, arguments));\n  }\n\n  _createClass(Undo, null, [{\n    key: \"requires\",\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return [UndoEditing, UndoUI];\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"pluginName\",\n    get: function get() {\n      return 'Undo';\n    }\n  }]);\n\n  return Undo;\n}(Plugin);\n\nexport { Undo as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module essentials/essentials\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport Clipboard from '@ckeditor/ckeditor5-clipboard/src/clipboard';\nimport Enter from '@ckeditor/ckeditor5-enter/src/enter';\nimport ShiftEnter from '@ckeditor/ckeditor5-enter/src/shiftenter';\nimport Typing from '@ckeditor/ckeditor5-typing/src/typing';\nimport Undo from '@ckeditor/ckeditor5-undo/src/undo';\n/**\n * A plugin including all essential editing features. It represents a set of features that enables similar functionalities\n * to a `<textarea>` element.\n *\n * It includes:\n *\n * * {@link module:clipboard/clipboard~Clipboard},\n * * {@link module:enter/enter~Enter},\n * * {@link module:enter/shiftenter~ShiftEnter},\n * * {@link module:typing/typing~Typing},\n * * {@link module:undo/undo~Undo}.\n *\n * This plugin set does not define any block-level containers (such as {@link module:paragraph/paragraph~Paragraph}).\n * If your editor is supposed to handle block content, make sure to include it.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar Essentials =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(Essentials, _Plugin);\n\n  function Essentials() {\n    _classCallCheck(this, Essentials);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Essentials).apply(this, arguments));\n  }\n\n  _createClass(Essentials, null, [{\n    key: \"requires\",\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return [Clipboard, Enter, ShiftEnter, Typing, Undo];\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"pluginName\",\n    get: function get() {\n      return 'Essentials';\n    }\n  }]);\n\n  return Essentials;\n}(Plugin);\n\nexport { Essentials as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module basic-styles/attributecommand\n */\nimport Command from '@ckeditor/ckeditor5-core/src/command';\n/**\n * An extension of the base {@link module:core/command~Command} class, which provides utilities for a command\n * that toggles a single attribute on a text or an element.\n *\n * `AttributeCommand` uses {@link module:engine/model/document~Document#selection}\n * to decide which nodes (if any) should be changed, and applies or removes the attribute from them.\n *\n * The command checks the {@link module:engine/model/model~Model#schema} to decide if it can be enabled\n * for the current selection and to which nodes the attribute can be applied.\n *\n * @extends module:core/command~Command\n */\n\nvar AttributeCommand =\n/*#__PURE__*/\nfunction (_Command) {\n  _inherits(AttributeCommand, _Command);\n\n  /**\n   * @param {module:core/editor/editor~Editor} editor\n   * @param {String} attributeKey Attribute that will be set by the command.\n   */\n  function AttributeCommand(editor, attributeKey) {\n    var _this;\n\n    _classCallCheck(this, AttributeCommand);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AttributeCommand).call(this, editor));\n    /**\n     * The attribute that will be set by the command.\n     *\n     * @readonly\n     * @member {String}\n     */\n\n    _this.attributeKey = attributeKey;\n    /**\n     * Flag indicating whether the command is active. The command is active when the\n     * {@link module:engine/model/selection~Selection#hasAttribute selection has the attribute} which means that:\n     *\n     * * If the selection is not empty &ndash; That the attribute is set on the first node in the selection that allows this attribute.\n     * * If the selection is empty &ndash; That the selection has the attribute itself (which means that newly typed\n     * text will have this attribute, too).\n     *\n     * @observable\n     * @readonly\n     * @member {Boolean} #value\n     */\n\n    return _this;\n  }\n  /**\n   * Updates the command's {@link #value} and {@link #isEnabled} based on the current selection.\n   */\n\n\n  _createClass(AttributeCommand, [{\n    key: \"refresh\",\n    value: function refresh() {\n      var model = this.editor.model;\n      var doc = model.document;\n      this.value = this._getValueFromFirstAllowedNode();\n      this.isEnabled = model.schema.checkAttributeInSelection(doc.selection, this.attributeKey);\n    }\n    /**\n     * Executes the command &mdash; applies the attribute to the selection or removes it from the selection.\n     *\n     * If the command is active (`value == true`), it will remove attributes. Otherwise, it will set attributes.\n     *\n     * The execution result differs, depending on the {@link module:engine/model/document~Document#selection}:\n     *\n     * * If the selection is on a range, the command applies the attribute to all nodes in that range\n     * (if they are allowed to have this attribute by the {@link module:engine/model/schema~Schema schema}).\n     * * If the selection is collapsed in a non-empty node, the command applies the attribute to the\n     * {@link module:engine/model/document~Document#selection} itself (note that typed characters copy attributes from the selection).\n     * * If the selection is collapsed in an empty node, the command applies the attribute to the parent node of the selection (note\n     * that the selection inherits all attributes from a node if it is in an empty node).\n     *\n     * @fires execute\n     * @param {Object} [options] Command options.\n     * @param {Boolean} [options.forceValue] If set, it will force the command behavior. If `true`, the command will apply the attribute,\n     * otherwise the command will remove the attribute.\n     * If not set, the command will look for its current value to decide what it should do.\n     */\n\n  }, {\n    key: \"execute\",\n    value: function execute() {\n      var _this2 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var model = this.editor.model;\n      var doc = model.document;\n      var selection = doc.selection;\n      var value = options.forceValue === undefined ? !this.value : options.forceValue;\n      model.change(function (writer) {\n        if (selection.isCollapsed) {\n          if (value) {\n            writer.setSelectionAttribute(_this2.attributeKey, true);\n          } else {\n            writer.removeSelectionAttribute(_this2.attributeKey);\n          }\n        } else {\n          var ranges = model.schema.getValidRanges(selection.getRanges(), _this2.attributeKey);\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = ranges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var range = _step.value;\n\n              if (value) {\n                writer.setAttribute(_this2.attributeKey, value, range);\n              } else {\n                writer.removeAttribute(_this2.attributeKey, range);\n              }\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n                _iterator[\"return\"]();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n        }\n      });\n    }\n    /**\n     * Checks the attribute value of the first node in the selection that allows the attribute.\n     * For the collapsed selection returns the selection attribute.\n     *\n     * @private\n     * @returns {Boolean} The attribute value.\n     */\n\n  }, {\n    key: \"_getValueFromFirstAllowedNode\",\n    value: function _getValueFromFirstAllowedNode() {\n      var model = this.editor.model;\n      var schema = model.schema;\n      var selection = model.document.selection;\n\n      if (selection.isCollapsed) {\n        return selection.hasAttribute(this.attributeKey);\n      }\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = selection.getRanges()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var range = _step2.value;\n          var _iteratorNormalCompletion3 = true;\n          var _didIteratorError3 = false;\n          var _iteratorError3 = undefined;\n\n          try {\n            for (var _iterator3 = range.getItems()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n              var item = _step3.value;\n\n              if (schema.checkAttribute(item, this.attributeKey)) {\n                return item.hasAttribute(this.attributeKey);\n              }\n            }\n          } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n                _iterator3[\"return\"]();\n              }\n            } finally {\n              if (_didIteratorError3) {\n                throw _iteratorError3;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return false;\n    }\n  }]);\n\n  return AttributeCommand;\n}(Command);\n\nexport { AttributeCommand as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module basic-styles/bold/boldediting\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport AttributeCommand from '../attributecommand';\nvar BOLD = 'bold';\n/**\n * The bold editing feature.\n *\n * It registers the `'bold'` command and introduces the `bold` attribute in the model which renders to the view\n * as a `<strong>` element.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar BoldEditing =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(BoldEditing, _Plugin);\n\n  function BoldEditing() {\n    _classCallCheck(this, BoldEditing);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BoldEditing).apply(this, arguments));\n  }\n\n  _createClass(BoldEditing, [{\n    key: \"init\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function init() {\n      var editor = this.editor; // Allow bold attribute on text nodes.\n\n      editor.model.schema.extend('$text', {\n        allowAttributes: BOLD\n      });\n      editor.model.schema.setAttributeProperties(BOLD, {\n        isFormatting: true\n      }); // Build converter from model to view for data and editing pipelines.\n\n      editor.conversion.attributeToElement({\n        model: BOLD,\n        view: 'strong',\n        upcastAlso: ['b', {\n          styles: {\n            'font-weight': 'bold'\n          }\n        }]\n      }); // Create bold command.\n\n      editor.commands.add(BOLD, new AttributeCommand(editor, BOLD)); // Set the Ctrl+B keystroke.\n\n      editor.keystrokes.set('CTRL+B', BOLD);\n    }\n  }]);\n\n  return BoldEditing;\n}(Plugin);\n\nexport { BoldEditing as default };","function _typeof(obj) {\n    if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {\n        _typeof = function _typeof(obj) {\n            return typeof obj;\n        };\n    } else {\n        _typeof = function _typeof(obj) {\n            return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n        };\n    }\n    return _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError('Cannot call a class as a function');\n    }\n}\nfunction _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if ('value' in descriptor)\n            descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps)\n        _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps)\n        _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === 'object' || typeof call === 'function')) {\n        return call;\n    }\n    return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError('this hasn\\'t been initialised - super() hasn\\'t been called');\n    }\n    return self;\n}\nfunction _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== 'function' && superClass !== null) {\n        throw new TypeError('Super expression must either be null or a function');\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass)\n        _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return _setPrototypeOf(o, p);\n}\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module basic-styles/bold/boldui\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport boldIcon from '../../theme/icons/bold.svg';\nvar BOLD = 'bold';\n/**\n * The bold UI feature. It introduces the Bold button.\n *\n * @extends module:core/plugin~Plugin\n */\nvar BoldUI = /*#__PURE__*/\nfunction (_Plugin) {\n    _inherits(BoldUI, _Plugin);\n    function BoldUI() {\n        _classCallCheck(this, BoldUI);\n        return _possibleConstructorReturn(this, _getPrototypeOf(BoldUI).apply(this, arguments));\n    }\n    _createClass(BoldUI, [{\n            key: 'init',\n            /**\n     * @inheritDoc\n     */\n            value: function init() {\n                var _this = this;\n                var editor = this.editor;\n                var t = editor.t;\n                // Add bold button to feature components.\n                editor.ui.componentFactory.add(BOLD, function (locale) {\n                    var command = editor.commands.get(BOLD);\n                    var view = new ButtonView(locale);\n                    view.set({\n                        label: t('b'),\n                        icon: boldIcon,\n                        keystroke: 'CTRL+B',\n                        tooltip: true\n                    });\n                    view.bind('isOn', 'isEnabled').to(command, 'value', 'isEnabled');\n                    // Execute command.\n                    _this.listenTo(view, 'execute', function () {\n                        return editor.execute(BOLD);\n                    });\n                    return view;\n                });\n            }\n        }]);\n    return BoldUI;\n}(Plugin);\nexport {\n    BoldUI as default\n};","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module basic-styles/bold\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport BoldEditing from './bold/boldediting';\nimport BoldUI from './bold/boldui';\n/**\n * The bold feature.\n *\n * For a detailed overview check the {@glink features/basic-styles Basic styles feature documentation}\n * and the {@glink api/basic-styles package page}.\n *\n * This is a \"glue\" plugin which loads the {@link module:basic-styles/bold/boldediting~BoldEditing bold editing feature}\n * and {@link module:basic-styles/bold/boldui~BoldUI bold UI feature}.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar Bold =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(Bold, _Plugin);\n\n  function Bold() {\n    _classCallCheck(this, Bold);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Bold).apply(this, arguments));\n  }\n\n  _createClass(Bold, null, [{\n    key: \"requires\",\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return [BoldEditing, BoldUI];\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"pluginName\",\n    get: function get() {\n      return 'Bold';\n    }\n  }]);\n\n  return Bold;\n}(Plugin);\n\nexport { Bold as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module basic-styles/italic/italicediting\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport AttributeCommand from '../attributecommand';\nvar ITALIC = 'italic';\n/**\n * The italic editing feature.\n *\n * It registers the `'italic'` command, the <kbd>Ctrl+I</kbd> keystroke and introduces the `italic` attribute in the model\n * which renders to the view as an `<i>` element.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar ItalicEditing =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(ItalicEditing, _Plugin);\n\n  function ItalicEditing() {\n    _classCallCheck(this, ItalicEditing);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ItalicEditing).apply(this, arguments));\n  }\n\n  _createClass(ItalicEditing, [{\n    key: \"init\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function init() {\n      var editor = this.editor; // Allow italic attribute on text nodes.\n\n      editor.model.schema.extend('$text', {\n        allowAttributes: ITALIC\n      });\n      editor.model.schema.setAttributeProperties(ITALIC, {\n        isFormatting: true\n      });\n      editor.conversion.attributeToElement({\n        model: ITALIC,\n        view: 'i',\n        upcastAlso: ['em', {\n          styles: {\n            'font-style': 'italic'\n          }\n        }]\n      }); // Create italic command.\n\n      editor.commands.add(ITALIC, new AttributeCommand(editor, ITALIC)); // Set the Ctrl+I keystroke.\n\n      editor.keystrokes.set('CTRL+I', ITALIC);\n    }\n  }]);\n\n  return ItalicEditing;\n}(Plugin);\n\nexport { ItalicEditing as default };","function _typeof(obj) {\n    if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {\n        _typeof = function _typeof(obj) {\n            return typeof obj;\n        };\n    } else {\n        _typeof = function _typeof(obj) {\n            return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n        };\n    }\n    return _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError('Cannot call a class as a function');\n    }\n}\nfunction _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if ('value' in descriptor)\n            descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps)\n        _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps)\n        _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === 'object' || typeof call === 'function')) {\n        return call;\n    }\n    return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError('this hasn\\'t been initialised - super() hasn\\'t been called');\n    }\n    return self;\n}\nfunction _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== 'function' && superClass !== null) {\n        throw new TypeError('Super expression must either be null or a function');\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass)\n        _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return _setPrototypeOf(o, p);\n}\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module basic-styles/italic/italicui\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport italicIcon from '../../theme/icons/italic.svg';\nvar ITALIC = 'italic';\n/**\n * The italic UI feature. It introduces the Italic button.\n *\n * @extends module:core/plugin~Plugin\n */\nvar ItalicUI = /*#__PURE__*/\nfunction (_Plugin) {\n    _inherits(ItalicUI, _Plugin);\n    function ItalicUI() {\n        _classCallCheck(this, ItalicUI);\n        return _possibleConstructorReturn(this, _getPrototypeOf(ItalicUI).apply(this, arguments));\n    }\n    _createClass(ItalicUI, [{\n            key: 'init',\n            /**\n     * @inheritDoc\n     */\n            value: function init() {\n                var _this = this;\n                var editor = this.editor;\n                var t = editor.t;\n                // Add bold button to feature components.\n                editor.ui.componentFactory.add(ITALIC, function (locale) {\n                    var command = editor.commands.get(ITALIC);\n                    var view = new ButtonView(locale);\n                    view.set({\n                        label: t('c'),\n                        icon: italicIcon,\n                        keystroke: 'CTRL+I',\n                        tooltip: true\n                    });\n                    view.bind('isOn', 'isEnabled').to(command, 'value', 'isEnabled');\n                    // Execute command.\n                    _this.listenTo(view, 'execute', function () {\n                        return editor.execute(ITALIC);\n                    });\n                    return view;\n                });\n            }\n        }]);\n    return ItalicUI;\n}(Plugin);\nexport {\n    ItalicUI as default\n};","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module basic-styles/italic\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ItalicEditing from './italic/italicediting';\nimport ItalicUI from './italic/italicui';\n/**\n * The italic feature.\n *\n * For a detailed overview check the {@glink features/basic-styles Basic styles feature documentation}\n * and the {@glink api/basic-styles package page}.\n *\n * This is a \"glue\" plugin which loads the {@link module:basic-styles/italic/italicediting~ItalicEditing} and\n * {@link module:basic-styles/italic/italicui~ItalicUI} plugins.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar Italic =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(Italic, _Plugin);\n\n  function Italic() {\n    _classCallCheck(this, Italic);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Italic).apply(this, arguments));\n  }\n\n  _createClass(Italic, null, [{\n    key: \"requires\",\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return [ItalicEditing, ItalicUI];\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"pluginName\",\n    get: function get() {\n      return 'Italic';\n    }\n  }]);\n\n  return Italic;\n}(Plugin);\n\nexport { Italic as default };","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/first\n */\n\n/**\n * Returns first item of the given `iterable`.\n *\n * @param {Iterable.<*>} iterable\n * @returns {*}\n */\nexport default function first(iterable) {\n  var iteratorItem = iterable.next();\n\n  if (iteratorItem.done) {\n    return null;\n  }\n\n  return iteratorItem.value;\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module block-quote/blockquotecommand\n */\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport first from '@ckeditor/ckeditor5-utils/src/first';\n/**\n * The block quote command plugin.\n *\n * @extends module:core/command~Command\n */\n\nvar BlockQuoteCommand =\n/*#__PURE__*/\nfunction (_Command) {\n  _inherits(BlockQuoteCommand, _Command);\n\n  function BlockQuoteCommand() {\n    _classCallCheck(this, BlockQuoteCommand);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BlockQuoteCommand).apply(this, arguments));\n  }\n\n  _createClass(BlockQuoteCommand, [{\n    key: \"refresh\",\n\n    /**\n     * Whether the selection starts in a block quote.\n     *\n     * @observable\n     * @readonly\n     * @member {Boolean} #value\n     */\n\n    /**\n     * @inheritDoc\n     */\n    value: function refresh() {\n      this.value = this._getValue();\n      this.isEnabled = this._checkEnabled();\n    }\n    /**\n     * Executes the command. When the command {@link #value is on}, all top-most block quotes within\n     * the selection will be removed. If it is off, all selected blocks will be wrapped with\n     * a block quote.\n     *\n     * @fires execute\n     * @param {Object} [options] Command options.\n     * @param {Boolean} [options.forceValue] If set, it will force the command behavior. If `true`, the command will apply a block quote,\n     * otherwise the command will remove the block quote. If not set, the command will act basing on its current value.\n     */\n\n  }, {\n    key: \"execute\",\n    value: function execute() {\n      var _this = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var model = this.editor.model;\n      var schema = model.schema;\n      var selection = model.document.selection;\n      var blocks = Array.from(selection.getTopMostBlocks());\n      var value = options.forceValue === undefined ? !this.value : options.forceValue;\n      model.change(function (writer) {\n        if (!value) {\n          _this._removeQuote(writer, blocks.filter(findQuote));\n        } else {\n          var blocksToQuote = blocks.filter(function (block) {\n            // Already quoted blocks needs to be considered while quoting too\n            // in order to reuse their <bQ> elements.\n            return findQuote(block) || checkCanBeQuoted(schema, block);\n          });\n\n          _this._applyQuote(writer, blocksToQuote);\n        }\n      });\n    }\n    /**\n     * Checks the command's {@link #value}.\n     *\n     * @private\n     * @returns {Boolean} The current value.\n     */\n\n  }, {\n    key: \"_getValue\",\n    value: function _getValue() {\n      var selection = this.editor.model.document.selection;\n      var firstBlock = first(selection.getTopMostBlocks()); // In the current implementation, the block quote must be an immediate parent of a block element.\n\n      return !!(firstBlock && findQuote(firstBlock));\n    }\n    /**\n     * Checks whether the command can be enabled in the current context.\n     *\n     * @private\n     * @returns {Boolean} Whether the command should be enabled.\n     */\n\n  }, {\n    key: \"_checkEnabled\",\n    value: function _checkEnabled() {\n      if (this.value) {\n        return true;\n      }\n\n      var selection = this.editor.model.document.selection;\n      var schema = this.editor.model.schema;\n      var firstBlock = first(selection.getSelectedBlocks());\n\n      if (!firstBlock) {\n        return false;\n      }\n\n      return checkCanBeQuoted(schema, firstBlock);\n    }\n    /**\n     * Removes the quote from given blocks.\n     *\n     * If blocks which are supposed to be \"unquoted\" are in the middle of a quote,\n     * start it or end it, then the quote will be split (if needed) and the blocks\n     * will be moved out of it, so other quoted blocks remained quoted.\n     *\n     * @private\n     * @param {module:engine/model/writer~Writer} writer\n     * @param {Array.<module:engine/model/element~Element>} blocks\n     */\n\n  }, {\n    key: \"_removeQuote\",\n    value: function _removeQuote(writer, blocks) {\n      // Unquote all groups of block. Iterate in the reverse order to not break following ranges.\n      getRangesOfBlockGroups(writer, blocks).reverse().forEach(function (groupRange) {\n        if (groupRange.start.isAtStart && groupRange.end.isAtEnd) {\n          writer.unwrap(groupRange.start.parent);\n          return;\n        } // The group of blocks are at the beginning of an <bQ> so let's move them left (out of the <bQ>).\n\n\n        if (groupRange.start.isAtStart) {\n          var positionBefore = writer.createPositionBefore(groupRange.start.parent);\n          writer.move(groupRange, positionBefore);\n          return;\n        } // The blocks are in the middle of an <bQ> so we need to split the <bQ> after the last block\n        // so we move the items there.\n\n\n        if (!groupRange.end.isAtEnd) {\n          writer.split(groupRange.end);\n        } // Now we are sure that groupRange.end.isAtEnd is true, so let's move the blocks right.\n\n\n        var positionAfter = writer.createPositionAfter(groupRange.end.parent);\n        writer.move(groupRange, positionAfter);\n      });\n    }\n    /**\n     * Applies the quote to given blocks.\n     *\n     * @private\n     * @param {module:engine/model/writer~Writer} writer\n     * @param {Array.<module:engine/model/element~Element>} blocks\n     */\n\n  }, {\n    key: \"_applyQuote\",\n    value: function _applyQuote(writer, blocks) {\n      var quotesToMerge = []; // Quote all groups of block. Iterate in the reverse order to not break following ranges.\n\n      getRangesOfBlockGroups(writer, blocks).reverse().forEach(function (groupRange) {\n        var quote = findQuote(groupRange.start);\n\n        if (!quote) {\n          quote = writer.createElement('blockQuote');\n          writer.wrap(groupRange, quote);\n        }\n\n        quotesToMerge.push(quote);\n      }); // Merge subsequent <bQ> elements. Reverse the order again because this time we want to go through\n      // the <bQ> elements in the source order (due to how merge works – it moves the right element's content\n      // to the first element and removes the right one. Since we may need to merge a couple of subsequent `<bQ>` elements\n      // we want to keep the reference to the first (furthest left) one.\n\n      quotesToMerge.reverse().reduce(function (currentQuote, nextQuote) {\n        if (currentQuote.nextSibling == nextQuote) {\n          writer.merge(writer.createPositionAfter(currentQuote));\n          return currentQuote;\n        }\n\n        return nextQuote;\n      });\n    }\n  }]);\n\n  return BlockQuoteCommand;\n}(Command);\n\nexport { BlockQuoteCommand as default };\n\nfunction findQuote(elementOrPosition) {\n  return elementOrPosition.parent.name == 'blockQuote' ? elementOrPosition.parent : null;\n} // Returns a minimal array of ranges containing groups of subsequent blocks.\n//\n// content:         abcdefgh\n// blocks:          [ a, b, d, f, g, h ]\n// output ranges:   [ab]c[d]e[fgh]\n//\n// @param {Array.<module:engine/model/element~Element>} blocks\n// @returns {Array.<module:engine/model/range~Range>}\n\n\nfunction getRangesOfBlockGroups(writer, blocks) {\n  var startPosition;\n  var i = 0;\n  var ranges = [];\n\n  while (i < blocks.length) {\n    var block = blocks[i];\n    var nextBlock = blocks[i + 1];\n\n    if (!startPosition) {\n      startPosition = writer.createPositionBefore(block);\n    }\n\n    if (!nextBlock || block.nextSibling != nextBlock) {\n      ranges.push(writer.createRange(startPosition, writer.createPositionAfter(block)));\n      startPosition = null;\n    }\n\n    i++;\n  }\n\n  return ranges;\n} // Checks whether <bQ> can wrap the block.\n\n\nfunction checkCanBeQuoted(schema, block) {\n  // TMP will be replaced with schema.checkWrap().\n  var isBQAllowed = schema.checkChild(block.parent, 'blockQuote');\n  var isBlockAllowedInBQ = schema.checkChild(['$root', 'blockQuote'], block);\n  return isBQAllowed && isBlockAllowedInBQ;\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module block-quote/blockquoteediting\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport BlockQuoteCommand from './blockquotecommand';\n/**\n * The block quote editing.\n *\n * Introduces the `'blockQuote'` command and the `'blockQuote'` model element.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar BlockQuoteEditing =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(BlockQuoteEditing, _Plugin);\n\n  function BlockQuoteEditing() {\n    _classCallCheck(this, BlockQuoteEditing);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BlockQuoteEditing).apply(this, arguments));\n  }\n\n  _createClass(BlockQuoteEditing, [{\n    key: \"init\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function init() {\n      var editor = this.editor;\n      var schema = editor.model.schema;\n      editor.commands.add('blockQuote', new BlockQuoteCommand(editor));\n      schema.register('blockQuote', {\n        allowWhere: '$block',\n        allowContentOf: '$root'\n      }); // Disallow blockQuote in blockQuote.\n\n      schema.addChildCheck(function (ctx, childDef) {\n        if (ctx.endsWith('blockQuote') && childDef.name == 'blockQuote') {\n          return false;\n        }\n      });\n      editor.conversion.elementToElement({\n        model: 'blockQuote',\n        view: 'blockquote'\n      }); // Postfixer which cleans incorrect model states connected with block quotes.\n\n      editor.model.document.registerPostFixer(function (writer) {\n        var changes = editor.model.document.differ.getChanges();\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = changes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var entry = _step.value;\n\n            if (entry.type == 'insert') {\n              var element = entry.position.nodeAfter;\n\n              if (!element) {\n                // We are inside a text node.\n                continue;\n              }\n\n              if (element.is('blockQuote') && element.isEmpty) {\n                // Added an empty blockQuote - remove it.\n                writer.remove(element);\n                return true;\n              } else if (element.is('blockQuote') && !schema.checkChild(entry.position, element)) {\n                // Added a blockQuote in incorrect place - most likely inside another blockQuote. Unwrap it\n                // so the content inside is not lost.\n                writer.unwrap(element);\n                return true;\n              } else if (element.is('element')) {\n                // Just added an element. Check its children to see if there are no nested blockQuotes somewhere inside.\n                var range = writer.createRangeIn(element);\n                var _iteratorNormalCompletion2 = true;\n                var _didIteratorError2 = false;\n                var _iteratorError2 = undefined;\n\n                try {\n                  for (var _iterator2 = range.getItems()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var child = _step2.value;\n\n                    if (child.is('blockQuote') && !schema.checkChild(writer.createPositionBefore(child), child)) {\n                      writer.unwrap(child);\n                      return true;\n                    }\n                  }\n                } catch (err) {\n                  _didIteratorError2 = true;\n                  _iteratorError2 = err;\n                } finally {\n                  try {\n                    if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n                      _iterator2[\"return\"]();\n                    }\n                  } finally {\n                    if (_didIteratorError2) {\n                      throw _iteratorError2;\n                    }\n                  }\n                }\n              }\n            } else if (entry.type == 'remove') {\n              var parent = entry.position.parent;\n\n              if (parent.is('blockQuote') && parent.isEmpty) {\n                // Something got removed and now blockQuote is empty. Remove the blockQuote as well.\n                writer.remove(parent);\n                return true;\n              }\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n              _iterator[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        return false;\n      });\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"afterInit\",\n    value: function afterInit() {\n      var _this = this;\n\n      var editor = this.editor;\n      var command = editor.commands.get('blockQuote'); // Overwrite default Enter key behavior.\n      // If Enter key is pressed with selection collapsed in empty block inside a quote, break the quote.\n      // This listener is added in afterInit in order to register it after list's feature listener.\n      // We can't use a priority for this, because 'low' is already used by the enter feature, unless\n      // we'd use numeric priority in this case.\n\n      this.listenTo(this.editor.editing.view.document, 'enter', function (evt, data) {\n        var doc = _this.editor.model.document;\n        var positionParent = doc.selection.getLastPosition().parent;\n\n        if (doc.selection.isCollapsed && positionParent.isEmpty && command.value) {\n          _this.editor.execute('blockQuote');\n\n          _this.editor.editing.view.scrollToTheSelection();\n\n          data.preventDefault();\n          evt.stop();\n        }\n      });\n    }\n  }]);\n\n  return BlockQuoteEditing;\n}(Plugin);\n\nexport { BlockQuoteEditing as default };","function _typeof(obj) {\n    if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {\n        _typeof = function _typeof(obj) {\n            return typeof obj;\n        };\n    } else {\n        _typeof = function _typeof(obj) {\n            return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n        };\n    }\n    return _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError('Cannot call a class as a function');\n    }\n}\nfunction _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if ('value' in descriptor)\n            descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps)\n        _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps)\n        _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === 'object' || typeof call === 'function')) {\n        return call;\n    }\n    return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError('this hasn\\'t been initialised - super() hasn\\'t been called');\n    }\n    return self;\n}\nfunction _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== 'function' && superClass !== null) {\n        throw new TypeError('Super expression must either be null or a function');\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass)\n        _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return _setPrototypeOf(o, p);\n}\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module block-quote/blockquoteui\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport quoteIcon from '@ckeditor/ckeditor5-core/theme/icons/quote.svg';\nimport '../theme/blockquote.css';\n/**\n * The block quote UI plugin.\n *\n * It introduces the `'blockQuote'` button.\n *\n * @extends module:core/plugin~Plugin\n */\nvar BlockQuoteUI = /*#__PURE__*/\nfunction (_Plugin) {\n    _inherits(BlockQuoteUI, _Plugin);\n    function BlockQuoteUI() {\n        _classCallCheck(this, BlockQuoteUI);\n        return _possibleConstructorReturn(this, _getPrototypeOf(BlockQuoteUI).apply(this, arguments));\n    }\n    _createClass(BlockQuoteUI, [{\n            key: 'init',\n            /**\n     * @inheritDoc\n     */\n            value: function init() {\n                var _this = this;\n                var editor = this.editor;\n                var t = editor.t;\n                editor.ui.componentFactory.add('blockQuote', function (locale) {\n                    var command = editor.commands.get('blockQuote');\n                    var buttonView = new ButtonView(locale);\n                    buttonView.set({\n                        label: t('a'),\n                        icon: quoteIcon,\n                        tooltip: true\n                    });\n                    // Bind button model to command.\n                    buttonView.bind('isOn', 'isEnabled').to(command, 'value', 'isEnabled');\n                    // Execute command.\n                    _this.listenTo(buttonView, 'execute', function () {\n                        return editor.execute('blockQuote');\n                    });\n                    return buttonView;\n                });\n            }\n        }]);\n    return BlockQuoteUI;\n}(Plugin);\nexport {\n    BlockQuoteUI as default\n};","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module block-quote/blockquote\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport BlockQuoteEditing from './blockquoteediting';\nimport BlockQuoteUI from './blockquoteui';\n/**\n * The block quote plugin.\n *\n * For more information about this feature check the {@glink api/block-quote package page}.\n *\n * This is a \"glue\" plugin which loads the {@link module:block-quote/blockquoteediting~BlockQuoteEditing block quote editing feature}\n * and {@link module:block-quote/blockquoteui~BlockQuoteUI block quote UI feature}.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar BlockQuote =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(BlockQuote, _Plugin);\n\n  function BlockQuote() {\n    _classCallCheck(this, BlockQuote);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BlockQuote).apply(this, arguments));\n  }\n\n  _createClass(BlockQuote, null, [{\n    key: \"requires\",\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return [BlockQuoteEditing, BlockQuoteUI];\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"pluginName\",\n    get: function get() {\n      return 'BlockQuote';\n    }\n  }]);\n\n  return BlockQuote;\n}(Plugin);\n\nexport { BlockQuote as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module paragraph/paragraphcommand\n */\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport first from '@ckeditor/ckeditor5-utils/src/first';\n/**\n * The paragraph command.\n *\n * @extends module:core/command~Command\n */\n\nvar ParagraphCommand =\n/*#__PURE__*/\nfunction (_Command) {\n  _inherits(ParagraphCommand, _Command);\n\n  function ParagraphCommand() {\n    _classCallCheck(this, ParagraphCommand);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ParagraphCommand).apply(this, arguments));\n  }\n\n  _createClass(ParagraphCommand, [{\n    key: \"refresh\",\n\n    /**\n     * The value of the command. Indicates whether the selection start is placed in a paragraph.\n     *\n     * @readonly\n     * @observable\n     * @member {Boolean} #value\n     */\n\n    /**\n     * @inheritDoc\n     */\n    value: function refresh() {\n      var model = this.editor.model;\n      var document = model.document;\n      var block = first(document.selection.getSelectedBlocks());\n      this.value = !!block && block.is('paragraph');\n      this.isEnabled = !!block && checkCanBecomeParagraph(block, model.schema);\n    }\n    /**\n     * Executes the command. All the blocks (see {@link module:engine/model/schema~Schema}) in the selection\n     * will be turned to paragraphs.\n     *\n     * @fires execute\n     * @param {Object} [options] Options for the executed command.\n     * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} [options.selection]\n     * The selection that the command should be applied to.\n     * By default, if not provided, the command is applied to the {@link module:engine/model/document~Document#selection}.\n     */\n\n  }, {\n    key: \"execute\",\n    value: function execute() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var model = this.editor.model;\n      var document = model.document;\n      model.change(function (writer) {\n        var blocks = (options.selection || document.selection).getSelectedBlocks();\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = blocks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var block = _step.value;\n\n            if (!block.is('paragraph') && checkCanBecomeParagraph(block, model.schema)) {\n              writer.rename(block, 'paragraph');\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n              _iterator[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      });\n    }\n  }]);\n\n  return ParagraphCommand;\n}(Command); // Checks whether the given block can be replaced by a paragraph.\n//\n// @private\n// @param {module:engine/model/element~Element} block A block to be tested.\n// @param {module:engine/model/schema~Schema} schema The schema of the document.\n// @returns {Boolean}\n\n\nexport { ParagraphCommand as default };\n\nfunction checkCanBecomeParagraph(block, schema) {\n  return schema.checkChild(block.parent, 'paragraph') && !schema.isObject(block);\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module paragraph/paragraph\n */\nimport ParagraphCommand from './paragraphcommand';\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n/**\n * The paragraph feature for the editor.\n *\n * It introduces the `<paragraph>` element in the model which renders as a `<p>` element in the DOM and data.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar Paragraph =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(Paragraph, _Plugin);\n\n  function Paragraph() {\n    _classCallCheck(this, Paragraph);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Paragraph).apply(this, arguments));\n  }\n\n  _createClass(Paragraph, [{\n    key: \"init\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function init() {\n      var _this = this;\n\n      var editor = this.editor;\n      var model = editor.model;\n      var data = editor.data;\n      editor.commands.add('paragraph', new ParagraphCommand(editor)); // Schema.\n\n      model.schema.register('paragraph', {\n        inheritAllFrom: '$block'\n      });\n      editor.conversion.elementToElement({\n        model: 'paragraph',\n        view: 'p'\n      }); // Content autoparagraphing. --------------------------------------------------\n      // Handles element which has not been converted by any plugin and checks if it would be converted if\n      // we wrap it in a paragraph or change it to a paragraph.\n\n      editor.conversion[\"for\"]('upcast').elementToElement({\n        model: function model(viewElement, modelWriter) {\n          if (!Paragraph.paragraphLikeElements.has(viewElement.name)) {\n            return null;\n          } // Do not auto-paragraph empty elements.\n\n\n          if (viewElement.isEmpty) {\n            return null;\n          }\n\n          return modelWriter.createElement('paragraph');\n        },\n        converterPriority: 'low'\n      });\n      data.upcastDispatcher.on('element', function (evt, data, conversionApi) {\n        // Do not try auto-paragraphing if the element was already converted.\n        if (!conversionApi.consumable.test(data.viewItem, {\n          name: data.viewItem.name\n        })) {\n          return;\n        } // If the element is not paragraph-like try wrapping it in a paragraph.\n\n\n        if (isParagraphable(data.viewItem, data.modelCursor, conversionApi.schema)) {\n          Object.assign(data, wrapInParagraph(data.viewItem, data.modelCursor, conversionApi));\n        }\n      }, {\n        priority: 'low'\n      }); // Handles not converted text nodes and checks if would be converted if we wraps then by a paragraph.\n\n      data.upcastDispatcher.on('text', function (evt, data, conversionApi) {\n        // When node is already converted then do nothing.\n        if (data.modelRange) {\n          return;\n        }\n\n        if (isParagraphable(data.viewItem, data.modelCursor, conversionApi.schema)) {\n          Object.assign(data, wrapInParagraph(data.viewItem, data.modelCursor, conversionApi));\n        }\n      }, {\n        priority: 'lowest'\n      }); // Empty roots autoparagraphing. -----------------------------------------------\n      // Post-fixer which takes care of adding empty paragraph elements to empty roots.\n      // Besides fixing content on #changesDone we also need to handle editor.data#ready event because\n      // if initial data is empty or setData() wasn't even called there will be no #change fired.\n\n      model.document.registerPostFixer(function (writer) {\n        return _this._autoparagraphEmptyRoots(writer);\n      });\n      editor.data.on('ready', function () {\n        model.enqueueChange('transparent', function (writer) {\n          return _this._autoparagraphEmptyRoots(writer);\n        });\n      }, {\n        priority: 'lowest'\n      });\n    }\n    /**\n     * Fixes all empty roots.\n     *\n     * @private\n     * @returns {Boolean} `true` if any change has been applied, `false` otherwise.\n     */\n\n  }, {\n    key: \"_autoparagraphEmptyRoots\",\n    value: function _autoparagraphEmptyRoots(writer) {\n      var model = this.editor.model;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = model.document.getRootNames()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var rootName = _step.value;\n          var root = model.document.getRoot(rootName);\n\n          if (root.isEmpty && root.rootName != '$graveyard') {\n            // If paragraph element is allowed in the root, create paragraph element.\n            if (model.schema.checkChild(root, 'paragraph')) {\n              writer.insertElement('paragraph', root);\n              return true;\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }], [{\n    key: \"pluginName\",\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return 'Paragraph';\n    }\n  }]);\n\n  return Paragraph;\n}(Plugin);\n/**\n * A list of element names which should be treated by the autoparagraphing algorithms as\n * paragraph-like. This means that e.g. the following content:\n *\n *\t\t<h1>Foo</h1>\n *\t\t<table>\n *\t\t\t<tr>\n *\t\t\t\t<td>X</td>\n *\t\t\t\t<td>\n *\t\t\t\t\t<ul>\n *\t\t\t\t\t\t<li>Y</li>\n *\t\t\t\t\t\t<li>Z</li>\n *\t\t\t\t\t</ul>\n *\t\t\t\t</td>\n *\t\t\t</tr>\n *\t\t</table>\n *\n * contains five paragraph-like elements: `<h1>`, two `<td>`s and two `<li>`s.\n * Hence, if none of the features is going to convert those elements the above content will be automatically handled\n * by the paragraph feature and converted to:\n *\n *\t\t<p>Foo</p>\n *\t\t<p>X</p>\n *\t\t<p>Y</p>\n *\t\t<p>Z</p>\n *\n * Note: The `<td>` containing two `<li>` elements was ignored as the innermost paragraph-like elements\n * have a priority upon conversion.\n *\n * @member {Set.<String>} module:paragraph/paragraph~Paragraph.paragraphLikeElements\n */\n\n\nexport { Paragraph as default };\nParagraph.paragraphLikeElements = new Set(['blockquote', 'dd', 'div', 'dt', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'li', 'p', 'td']);\n\nfunction wrapInParagraph(input, position, conversionApi) {\n  var paragraph = conversionApi.writer.createElement('paragraph');\n  conversionApi.writer.insert(paragraph, position);\n  return conversionApi.convertItem(input, conversionApi.writer.createPositionAt(paragraph, 0));\n}\n\nfunction isParagraphable(node, position, schema) {\n  var context = schema.createContext(position); // When paragraph is allowed in this context...\n\n  if (!schema.checkChild(context, 'paragraph')) {\n    return false;\n  } // And a node would be allowed in this paragraph...\n\n\n  if (!schema.checkChild(context.push('paragraph'), node)) {\n    return false;\n  }\n\n  return true;\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module heading/headingcommand\n */\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport first from '@ckeditor/ckeditor5-utils/src/first';\n/**\n * The heading command. It is used by the {@link module:heading/heading~Heading heading feature} to apply headings.\n *\n * @extends module:core/command~Command\n */\n\nvar HeadingCommand =\n/*#__PURE__*/\nfunction (_Command) {\n  _inherits(HeadingCommand, _Command);\n\n  /**\n   * Creates an instance of the command.\n   *\n   * @param {module:core/editor/editor~Editor} editor Editor instance.\n   * @param {Array.<String>} modelElements Names of the element which this command can apply in the model.\n   */\n  function HeadingCommand(editor, modelElements) {\n    var _this;\n\n    _classCallCheck(this, HeadingCommand);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HeadingCommand).call(this, editor));\n    /**\n     * If the selection starts in a heading (which {@link #modelElements is supported by this command})\n     * the value is set to the name of that heading model element.\n     * It is  set to `false` otherwise.\n     *\n     * @observable\n     * @readonly\n     * @member {Boolean|String} #value\n     */\n\n    /**\n     * Set of defined model's elements names that this command support.\n     * See {@link module:heading/heading~HeadingOption}.\n     *\n     * @readonly\n     * @member {Array.<String>}\n     */\n\n    _this.modelElements = modelElements;\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(HeadingCommand, [{\n    key: \"refresh\",\n    value: function refresh() {\n      var _this2 = this;\n\n      var block = first(this.editor.model.document.selection.getSelectedBlocks());\n      this.value = !!block && this.modelElements.includes(block.name) && block.name;\n      this.isEnabled = !!block && this.modelElements.some(function (heading) {\n        return checkCanBecomeHeading(block, heading, _this2.editor.model.schema);\n      });\n    }\n    /**\n     * Executes the command. Applies the heading to the selected blocks or, if the first selected\n     * block is a heading already, turns selected headings (of this level only) to paragraphs.\n     *\n     * @param {Object} options\n     * @param {String} options.value Name of the element which this command will apply in the model.\n     * @fires execute\n     */\n\n  }, {\n    key: \"execute\",\n    value: function execute(options) {\n      var model = this.editor.model;\n      var document = model.document;\n      var modelElement = options.value;\n      model.change(function (writer) {\n        var blocks = Array.from(document.selection.getSelectedBlocks()).filter(function (block) {\n          return checkCanBecomeHeading(block, modelElement, model.schema);\n        });\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = blocks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var block = _step.value;\n\n            if (!block.is(modelElement)) {\n              writer.rename(block, modelElement);\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n              _iterator[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      });\n    }\n  }]);\n\n  return HeadingCommand;\n}(Command); // Checks whether the given block can be replaced by a specific heading.\n//\n// @private\n// @param {module:engine/model/element~Element} block A block to be tested.\n// @param {module:heading/headingcommand~HeadingCommand#modelElement} heading Command element name in the model.\n// @param {module:engine/model/schema~Schema} schema The schema of the document.\n// @returns {Boolean}\n\n\nexport { HeadingCommand as default };\n\nfunction checkCanBecomeHeading(block, heading, schema) {\n  return schema.checkChild(block.parent, heading) && !schema.isObject(block);\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module heading/headingediting\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport Paragraph from '@ckeditor/ckeditor5-paragraph/src/paragraph';\nimport HeadingCommand from './headingcommand';\nimport priorities from '@ckeditor/ckeditor5-utils/src/priorities';\nvar defaultModelElement = 'paragraph';\n/**\n * The headings engine feature. It handles switching between block formats &ndash; headings and paragraph.\n * This class represents the engine part of the heading feature. See also {@link module:heading/heading~Heading}.\n * It introduces `heading1`-`headingN` commands which allow to convert paragraphs into headings.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar HeadingEditing =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(HeadingEditing, _Plugin);\n\n  /**\n   * @inheritDoc\n   */\n  function HeadingEditing(editor) {\n    var _this;\n\n    _classCallCheck(this, HeadingEditing);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HeadingEditing).call(this, editor));\n    editor.config.define('heading', {\n      options: [{\n        model: 'paragraph',\n        title: 'Paragraph',\n        \"class\": 'ck-heading_paragraph'\n      }, {\n        model: 'heading1',\n        view: 'h2',\n        title: 'Heading 1',\n        \"class\": 'ck-heading_heading1'\n      }, {\n        model: 'heading2',\n        view: 'h3',\n        title: 'Heading 2',\n        \"class\": 'ck-heading_heading2'\n      }, {\n        model: 'heading3',\n        view: 'h4',\n        title: 'Heading 3',\n        \"class\": 'ck-heading_heading3'\n      }]\n    });\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(HeadingEditing, [{\n    key: \"init\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function init() {\n      var editor = this.editor;\n      var options = editor.config.get('heading.options');\n      var modelElements = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = options[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var option = _step.value;\n\n          // Skip paragraph - it is defined in required Paragraph feature.\n          if (option.model !== defaultModelElement) {\n            // Schema.\n            editor.model.schema.register(option.model, {\n              inheritAllFrom: '$block'\n            });\n            editor.conversion.elementToElement(option);\n            modelElements.push(option.model);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      this._addDefaultH1Conversion(editor); // Register the heading command for this option.\n\n\n      editor.commands.add('heading', new HeadingCommand(editor, modelElements));\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"afterInit\",\n    value: function afterInit() {\n      // If the enter command is added to the editor, alter its behavior.\n      // Enter at the end of a heading element should create a paragraph.\n      var editor = this.editor;\n      var enterCommand = editor.commands.get('enter');\n      var options = editor.config.get('heading.options');\n\n      if (enterCommand) {\n        this.listenTo(enterCommand, 'afterExecute', function (evt, data) {\n          var positionParent = editor.model.document.selection.getFirstPosition().parent;\n          var isHeading = options.some(function (option) {\n            return positionParent.is(option.model);\n          });\n\n          if (isHeading && !positionParent.is(defaultModelElement) && positionParent.childCount === 0) {\n            data.writer.rename(positionParent, defaultModelElement);\n          }\n        });\n      }\n    }\n    /**\n     * Adds default conversion for `h1` -> `heading1` with a low priority.\n     *\n     * @private\n     * @param {module:core/editor/editor~Editor} editor Editor instance on which to add the `h1` conversion.\n     */\n\n  }, {\n    key: \"_addDefaultH1Conversion\",\n    value: function _addDefaultH1Conversion(editor) {\n      editor.conversion[\"for\"]('upcast').elementToElement({\n        model: 'heading1',\n        view: 'h1',\n        // With a `low` priority, `paragraph` plugin autoparagraphing mechanism is executed. Make sure\n        // this listener is called before it. If not, `h1` will be transformed into a paragraph.\n        converterPriority: priorities.get('low') + 1\n      });\n    }\n  }], [{\n    key: \"requires\",\n    get: function get() {\n      return [Paragraph];\n    }\n  }]);\n\n  return HeadingEditing;\n}(Plugin);\n\nexport { HeadingEditing as default };","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/model\n */\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport { extend } from 'lodash-es';\n/**\n * The base MVC model class.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\n\nvar Model =\n/**\n * Creates a new Model instance.\n *\n * @param {Object} [attributes] The model state attributes to be defined during the instance creation.\n * @param {Object} [properties] The (out of state) properties to be appended to the instance during creation.\n */\nfunction Model(attributes, properties) {\n  _classCallCheck(this, Model);\n\n  // Extend this instance with the additional (out of state) properties.\n  if (properties) {\n    extend(this, properties);\n  } // Initialize the attributes.\n\n\n  if (attributes) {\n    this.set(attributes);\n  }\n};\n\nexport { Model as default };\nmix(Model, ObservableMixin);","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/dropdown/dropdownpanelview\n */\nimport View from '../view';\n/**\n * The dropdown panel view class.\n *\n * See {@link module:ui/dropdown/dropdownview~DropdownView} to learn about the common usage.\n *\n * @extends module:ui/view~View\n */\n\nvar DropdownPanelView =\n/*#__PURE__*/\nfunction (_View) {\n  _inherits(DropdownPanelView, _View);\n\n  /**\n   * @inheritDoc\n   */\n  function DropdownPanelView(locale) {\n    var _this;\n\n    _classCallCheck(this, DropdownPanelView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DropdownPanelView).call(this, locale));\n    var bind = _this.bindTemplate;\n    /**\n     * Controls whether the panel is visible.\n     *\n     * @observable\n     * @member {Boolean} #isVisible\n     */\n\n    _this.set('isVisible', false);\n    /**\n     * The position of the panel, relative to the parent.\n     *\n     * This property is reflected in the CSS class set to {@link #element} that controls\n     * the position of the panel.\n     *\n     * @observable\n     * @default 'se'\n     * @member {'se'|'sw'|'ne'|'nw'} #position\n     */\n\n\n    _this.set('position', 'se');\n    /**\n     * Collection of the child views in this panel.\n     *\n     * A common child type is the {@link module:ui/list/listview~ListView} and {@link module:ui/toolbar/toolbarview~ToolbarView}.\n     * See {@link module:ui/dropdown/utils~addListToDropdown} and\n     * {@link module:ui/dropdown/utils~addToolbarToDropdown} to learn more about child views of dropdowns.\n     *\n     * @readonly\n     * @member {module:ui/viewcollection~ViewCollection}\n     */\n\n\n    _this.children = _this.createCollection();\n\n    _this.setTemplate({\n      tag: 'div',\n      attributes: {\n        \"class\": ['ck', 'ck-reset', 'ck-dropdown__panel', bind.to('position', function (value) {\n          return \"ck-dropdown__panel_\".concat(value);\n        }), bind[\"if\"]('isVisible', 'ck-dropdown__panel-visible')]\n      },\n      children: _this.children,\n      on: {\n        // Drag and drop in the panel should not break the selection in the editor.\n        // https://github.com/ckeditor/ckeditor5-ui/issues/228\n        selectstart: bind.to(function (evt) {\n          return evt.preventDefault();\n        })\n      }\n    });\n\n    return _this;\n  }\n  /**\n   * Focuses the view element or first item in view collection on opening dropdown's panel.\n   *\n   * See also {@link module:ui/dropdown/dropdownpanelfocusable~DropdownPanelFocusable}.\n   */\n\n\n  _createClass(DropdownPanelView, [{\n    key: \"focus\",\n    value: function focus() {\n      if (this.children.length) {\n        this.children.first.focus();\n      }\n    }\n    /**\n     * Focuses the view element or last item in view collection on opening dropdown's panel.\n     *\n     * See also {@link module:ui/dropdown/dropdownpanelfocusable~DropdownPanelFocusable}.\n     */\n\n  }, {\n    key: \"focusLast\",\n    value: function focusLast() {\n      if (this.children.length) {\n        var lastChild = this.children.last;\n\n        if (typeof lastChild.focusLast === 'function') {\n          lastChild.focusLast();\n        } else {\n          lastChild.focus();\n        }\n      }\n    }\n  }]);\n\n  return DropdownPanelView;\n}(View);\n\nexport { DropdownPanelView as default };","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/position\n */\nimport global from './global';\nimport Rect from './rect';\nimport getPositionedAncestor from './getpositionedancestor';\nimport getBorderWidths from './getborderwidths';\nimport { isFunction } from 'lodash-es';\n/**\n * Calculates the `position: absolute` coordinates of a given element so it can be positioned with respect to the\n * target in the visually most efficient way, taking various restrictions like viewport or limiter geometry\n * into consideration.\n *\n *\t\t// The element which is to be positioned.\n *\t\tconst element = document.body.querySelector( '#toolbar' );\n *\n *\t\t// A target to which the element is positioned relatively.\n *\t\tconst target = document.body.querySelector( '#container' );\n *\n *\t\t// Finding the optimal coordinates for the positioning.\n *\t\tconst { left, top, name } = getOptimalPosition( {\n *\t\t\telement: element,\n *\t\t\ttarget: target,\n *\n * \t\t\t// The algorithm will chose among these positions to meet the requirements such\n * \t\t\t// as \"limiter\" element or \"fitInViewport\", set below. The positions are considered\n * \t\t\t// in the order of the array.\n *\t\t\tpositions: [\n *\t\t\t\t//\n *\t\t\t \t//\t[ Target ]\n *\t\t\t\t//\t+-----------------+\n *\t\t\t\t//\t|     Element     |\n *\t\t\t\t//\t+-----------------+\n *\t\t\t\t//\n *\t\t\t\ttargetRect => ( {\n *\t\t\t\t\ttop: targetRect.bottom,\n *\t\t\t\t\tleft: targetRect.left,\n *\t\t\t\t\tname: 'mySouthEastPosition'\n *\t\t\t\t} ),\n *\n *\t\t\t\t//\n *\t\t\t\t//\t+-----------------+\n *\t\t\t\t//\t|     Element     |\n *\t\t\t\t//\t+-----------------+\n *\t\t\t\t//\t[ Target ]\n *\t\t\t\t//\n *\t\t\t\t( targetRect, elementRect ) => ( {\n *\t\t\t\t\ttop: targetRect.top - elementRect.height,\n *\t\t\t\t\tleft: targetRect.left,\n *\t\t\t\t\tname: 'myNorthEastPosition'\n *\t\t\t\t} )\n *\t\t\t],\n *\n *\t\t\t// Find a position such guarantees the element remains within visible boundaries of <body>.\n *\t\t\tlimiter: document.body,\n *\n *\t\t\t// Find a position such guarantees the element remains within visible boundaries of the browser viewport.\n *\t\t\tfitInViewport: true\n *\t\t} );\n *\n *\t\t// The best position which fits into document.body and the viewport. May be useful\n *\t\t// to set proper class on the `element`.\n *\t\tconsole.log( name ); // -> \"myNorthEastPosition\"\n *\n *\t\t// Using the absolute coordinates which has been found to position the element\n *\t\t// as in the diagram depicting the \"myNorthEastPosition\" position.\n *\t\telement.style.top = top;\n *\t\telement.style.left = left;\n *\n * @param {module:utils/dom/position~Options} options Positioning options object.\n * @returns {module:utils/dom/position~Position}\n */\n\nexport function getOptimalPosition(_ref) {\n  var element = _ref.element,\n      target = _ref.target,\n      positions = _ref.positions,\n      limiter = _ref.limiter,\n      fitInViewport = _ref.fitInViewport;\n\n  // If the {@link module:utils/dom/position~Options#target} is a function, use what it returns.\n  // https://github.com/ckeditor/ckeditor5-utils/issues/157\n  if (isFunction(target)) {\n    target = target();\n  } // If the {@link module:utils/dom/position~Options#limiter} is a function, use what it returns.\n  // https://github.com/ckeditor/ckeditor5-ui/issues/260\n\n\n  if (isFunction(limiter)) {\n    limiter = limiter();\n  }\n\n  var positionedElementAncestor = getPositionedAncestor(element.parentElement);\n  var elementRect = new Rect(element);\n  var targetRect = new Rect(target);\n  var bestPosition;\n  var name; // If there are no limits, just grab the very first position and be done with that drama.\n\n  if (!limiter && !fitInViewport) {\n    var _getPosition = getPosition(positions[0], targetRect, elementRect);\n\n    var _getPosition2 = _slicedToArray(_getPosition, 2);\n\n    name = _getPosition2[0];\n    bestPosition = _getPosition2[1];\n  } else {\n    var limiterRect = limiter && new Rect(limiter).getVisible();\n    var viewportRect = fitInViewport && new Rect(global.window);\n\n    var _ref2 = getBestPosition(positions, targetRect, elementRect, limiterRect, viewportRect) || // If there's no best position found, i.e. when all intersections have no area because\n    // rects have no width or height, then just use the first available position.\n    getPosition(positions[0], targetRect, elementRect);\n\n    var _ref3 = _slicedToArray(_ref2, 2);\n\n    name = _ref3[0];\n    bestPosition = _ref3[1];\n  }\n\n  var _getAbsoluteRectCoord = getAbsoluteRectCoordinates(bestPosition),\n      left = _getAbsoluteRectCoord.left,\n      top = _getAbsoluteRectCoord.top;\n\n  if (positionedElementAncestor) {\n    var ancestorPosition = getAbsoluteRectCoordinates(new Rect(positionedElementAncestor));\n    var ancestorBorderWidths = getBorderWidths(positionedElementAncestor); // (https://github.com/ckeditor/ckeditor5-ui-default/issues/126)\n    // If there's some positioned ancestor of the panel, then its `Rect` must be taken into\n    // consideration. `Rect` is always relative to the viewport while `position: absolute` works\n    // with respect to that positioned ancestor.\n\n    left -= ancestorPosition.left;\n    top -= ancestorPosition.top; // (https://github.com/ckeditor/ckeditor5-utils/issues/139)\n    // If there's some positioned ancestor of the panel, not only its position must be taken into\n    // consideration (see above) but also its internal scrolls. Scroll have an impact here because `Rect`\n    // is relative to the viewport (it doesn't care about scrolling), while `position: absolute`\n    // must compensate that scrolling.\n\n    left += positionedElementAncestor.scrollLeft;\n    top += positionedElementAncestor.scrollTop; // (https://github.com/ckeditor/ckeditor5-utils/issues/139)\n    // If there's some positioned ancestor of the panel, then its `Rect` includes its CSS `borderWidth`\n    // while `position: absolute` positioning does not consider it.\n    // E.g. `{ position: absolute, top: 0, left: 0 }` means upper left corner of the element,\n    // not upper-left corner of its border.\n\n    left -= ancestorBorderWidths.left;\n    top -= ancestorBorderWidths.top;\n  }\n\n  return {\n    left: left,\n    top: top,\n    name: name\n  };\n} // For given position function, returns a corresponding `Rect` instance.\n//\n// @private\n// @param {Function} position A function returning {@link module:utils/dom/position~Position}.\n// @param {utils/dom/rect~Rect} targetRect A rect of the target.\n// @param {utils/dom/rect~Rect} elementRect A rect of positioned element.\n// @returns {Array} An array containing position name and its Rect.\n\nfunction getPosition(position, targetRect, elementRect) {\n  var _position = position(targetRect, elementRect),\n      left = _position.left,\n      top = _position.top,\n      name = _position.name;\n\n  return [name, elementRect.clone().moveTo(left, top)];\n} // For a given array of positioning functions, returns such that provides the best\n// fit of the `elementRect` into the `limiterRect` and `viewportRect`.\n//\n// @private\n// @param {module:utils/dom/position~Options#positions} positions Functions returning\n// {@link module:utils/dom/position~Position} to be checked, in the order of preference.\n// @param {utils/dom/rect~Rect} targetRect A rect of the {@link module:utils/dom/position~Options#target}.\n// @param {utils/dom/rect~Rect} elementRect A rect of positioned {@link module:utils/dom/position~Options#element}.\n// @param {utils/dom/rect~Rect} limiterRect A rect of the {@link module:utils/dom/position~Options#limiter}.\n// @param {utils/dom/rect~Rect} viewportRect A rect of the viewport.\n// @returns {Array} An array containing the name of the position and it's rect.\n\n\nfunction getBestPosition(positions, targetRect, elementRect, limiterRect, viewportRect) {\n  var maxLimiterIntersectArea = 0;\n  var maxViewportIntersectArea = 0;\n  var bestPositionRect;\n  var bestPositionName; // This is when element is fully visible.\n\n  var elementRectArea = elementRect.getArea();\n  positions.some(function (position) {\n    var _getPosition3 = getPosition(position, targetRect, elementRect),\n        _getPosition4 = _slicedToArray(_getPosition3, 2),\n        positionName = _getPosition4[0],\n        positionRect = _getPosition4[1];\n\n    var limiterIntersectArea;\n    var viewportIntersectArea;\n\n    if (limiterRect) {\n      if (viewportRect) {\n        // Consider only the part of the limiter which is visible in the viewport. So the limiter is getting limited.\n        var limiterViewportIntersectRect = limiterRect.getIntersection(viewportRect);\n\n        if (limiterViewportIntersectRect) {\n          // If the limiter is within the viewport, then check the intersection between that part of the\n          // limiter and actual position.\n          limiterIntersectArea = limiterViewportIntersectRect.getIntersectionArea(positionRect);\n        } else {\n          limiterIntersectArea = 0;\n        }\n      } else {\n        limiterIntersectArea = limiterRect.getIntersectionArea(positionRect);\n      }\n    }\n\n    if (viewportRect) {\n      viewportIntersectArea = viewportRect.getIntersectionArea(positionRect);\n    } // The only criterion: intersection with the viewport.\n\n\n    if (viewportRect && !limiterRect) {\n      if (viewportIntersectArea > maxViewportIntersectArea) {\n        setBestPosition();\n      }\n    } // The only criterion: intersection with the limiter.\n    else if (!viewportRect && limiterRect) {\n        if (limiterIntersectArea > maxLimiterIntersectArea) {\n          setBestPosition();\n        }\n      } // Two criteria: intersection with the viewport and the limiter visible in the viewport.\n      else {\n          if (viewportIntersectArea > maxViewportIntersectArea && limiterIntersectArea >= maxLimiterIntersectArea) {\n            setBestPosition();\n          } else if (viewportIntersectArea >= maxViewportIntersectArea && limiterIntersectArea > maxLimiterIntersectArea) {\n            setBestPosition();\n          }\n        }\n\n    function setBestPosition() {\n      maxViewportIntersectArea = viewportIntersectArea;\n      maxLimiterIntersectArea = limiterIntersectArea;\n      bestPositionRect = positionRect;\n      bestPositionName = positionName;\n    } // If a such position is found that element is fully container by the limiter then, obviously,\n    // there will be no better one, so finishing.\n\n\n    return limiterIntersectArea === elementRectArea;\n  });\n  return bestPositionRect ? [bestPositionName, bestPositionRect] : null;\n} // DOMRect (also Rect) works in a scroll–independent geometry but `position: absolute` doesn't.\n// This function converts Rect to `position: absolute` coordinates.\n//\n// @private\n// @param {utils/dom/rect~Rect} rect A rect to be converted.\n// @returns {Object} Object containing `left` and `top` properties, in absolute coordinates.\n\n\nfunction getAbsoluteRectCoordinates(_ref4) {\n  var left = _ref4.left,\n      top = _ref4.top;\n  var _global$window = global.window,\n      scrollX = _global$window.scrollX,\n      scrollY = _global$window.scrollY;\n  return {\n    left: left + scrollX,\n    top: top + scrollY\n  };\n}\n/**\n * The `getOptimalPosition` helper options.\n *\n * @interface module:utils/dom/position~Options\n */\n\n/**\n * Element that is to be positioned.\n *\n * @member {HTMLElement} #element\n */\n\n/**\n * Target with respect to which the `element` is to be positioned.\n *\n * @member {HTMLElement|Range|ClientRect|Rect|Function} #target\n */\n\n/**\n * An array of functions which return {@link module:utils/dom/position~Position} relative\n * to the `target`, in the order of preference.\n *\n * @member {Array.<Function>} #positions\n */\n\n/**\n * When set, the algorithm will chose position which fits the most in the\n * limiter's bounding rect.\n *\n * @member {HTMLElement|Range|ClientRect|Rect|Function} #limiter\n */\n\n/**\n * When set, the algorithm will chose such a position which fits `element`\n * the most inside visible viewport.\n *\n * @member {Boolean} #fitInViewport\n */\n\n/**\n * An object describing a position in `position: absolute` coordinate\n * system, along with position name.\n *\n * @typedef {Object} module:utils/dom/position~Position\n *\n * @property {Number} top Top position offset.\n * @property {Number} left Left position offset.\n * @property {String} name Name of the position.\n */","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/getpositionedancestor\n */\nimport global from './global';\n/**\n * For a given element, returns the nearest ancestor element which CSS position is not \"static\".\n *\n * @param {HTMLElement} element The native DOM element to be checked.\n * @returns {HTMLElement|null}\n */\n\nexport default function getPositionedAncestor(element) {\n  while (element && element.tagName.toLowerCase() != 'html') {\n    if (global.window.getComputedStyle(element).position != 'static') {\n      return element;\n    }\n\n    element = element.parentElement;\n  }\n\n  return null;\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/dropdown/dropdownview\n */\nimport View from '../view';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\nimport '../../theme/components/dropdown/dropdown.css';\nimport { getOptimalPosition } from '@ckeditor/ckeditor5-utils/src/dom/position';\n/**\n * The dropdown view class. It manages the dropdown button and dropdown panel.\n *\n * In most cases, the easiest way to create a dropdown is by using the {@link module:ui/dropdown/utils~createDropdown}\n * util:\n *\n *\t\tconst dropdown = createDropdown( locale );\n *\n *\t\t// Configure dropdown's button properties:\n *\t\tdropdown.buttonView.set( {\n *\t\t\tlabel: 'A dropdown',\n *\t\t\twithText: true\n *\t\t} );\n *\n *\t\tdropdown.render();\n *\n *\t\tdropdown.panelView.element.textContent = 'Content of the panel';\n *\n *\t\t// Will render a dropdown with a panel containing a \"Content of the panel\" text.\n *\t\tdocument.body.appendChild( dropdown.element );\n *\n * If you want to add a richer content to the dropdown panel, you can use the {@link module:ui/dropdown/utils~addListToDropdown}\n * and {@link module:ui/dropdown/utils~addToolbarToDropdown} helpers. See more examples in\n * {@link module:ui/dropdown/utils~createDropdown} documentation.\n *\n * If you want to create a completely custom dropdown, then you can compose it manually:\n *\n *\t\tconst button = new DropdownButtonView( locale );\n *\t\tconst panel = new DropdownPanelView( locale );\n *\t\tconst dropdown = new DropdownView( locale, button, panel );\n *\n *\t\tbutton.set( {\n *\t\t\tlabel: 'A dropdown',\n *\t\t\twithText: true\n *\t\t} );\n *\n *\t\tdropdown.render();\n *\n *\t\tpanel.element.textContent = 'Content of the panel';\n *\n *\t\t// Will render a dropdown with a panel containing a \"Content of the panel\" text.\n *\t\tdocument.body.appendChild( dropdown.element );\n *\n * However, dropdown created this way will contain little behavior. You will need to implement handlers for actions\n * such as {@link module:ui/bindings/clickoutsidehandler~clickOutsideHandler clicking outside an open dropdown}\n * (which should close it) and support for arrow keys inside the panel. Therefore, unless you really know what\n * you do and you really need to do it, it is recommended to use the {@link module:ui/dropdown/utils~createDropdown} helper.\n *\n * @extends module:ui/view~View\n */\n\nvar DropdownView =\n/*#__PURE__*/\nfunction (_View) {\n  _inherits(DropdownView, _View);\n\n  /**\n   * Creates an instance of the dropdown.\n   *\n   * Also see {@link #render}.\n   *\n   * @param {module:utils/locale~Locale} [locale] The localization services instance.\n   * @param {module:ui/dropdown/button/dropdownbutton~DropdownButton} buttonView\n   * @param {module:ui/dropdown/dropdownpanelview~DropdownPanelView} panelView\n   */\n  function DropdownView(locale, buttonView, panelView) {\n    var _this;\n\n    _classCallCheck(this, DropdownView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DropdownView).call(this, locale));\n    var bind = _this.bindTemplate;\n    /**\n     * Button of the dropdown view. Clicking the button opens the {@link #panelView}.\n     *\n     * @readonly\n     * @member {module:ui/button/buttonview~ButtonView} #buttonView\n     */\n\n    _this.buttonView = buttonView;\n    /**\n     * Panel of the dropdown. It opens when the {@link #buttonView} is\n     * {@link module:ui/button/buttonview~ButtonView#event:execute executed} (i.e. clicked).\n     *\n     * Child views can be added to the panel's `children` collection:\n     *\n     *\t\tdropdown.panelView.children.add( childView );\n     *\n     * See {@link module:ui/dropdown/dropdownpanelview~DropdownPanelView#children} and\n     * {@link module:ui/viewcollection~ViewCollection#add}.\n     *\n     * @readonly\n     * @member {module:ui/dropdown/dropdownpanelview~DropdownPanelView} #panelView\n     */\n\n    _this.panelView = panelView;\n    /**\n     * Controls whether the dropdown view is open, i.e. shows or hides the {@link #panelView panel}.\n     *\n     * @observable\n     * @member {Boolean} #isOpen\n     */\n\n    _this.set('isOpen', false);\n    /**\n     * Controls whether the dropdown is enabled, i.e. it can be clicked and execute an action.\n     *\n     * See {@link module:ui/button/buttonview~ButtonView#isEnabled}.\n     *\n     * @observable\n     * @member {Boolean} #isEnabled\n     */\n\n\n    _this.set('isEnabled', true);\n    /**\n     * (Optional) The additional CSS class set on the dropdown {@link #element}.\n     *\n     * @observable\n     * @member {String} #class\n     */\n\n\n    _this.set('class');\n    /**\n     * The position of the panel, relative to the dropdown.\n     *\n     * **Note**: When `'auto'`, the panel will use one of the remaining positions to stay\n     * in the viewport, visible to the user. The positions correspond directly to\n     * {@link module:ui/dropdown/dropdownview~DropdownView.defaultPanelPositions default panel positions}.\n     *\n     * **Note**: This value has an impact on the\n     * {@link module:ui/dropdown/dropdownpanelview~DropdownPanelView#position} property\n     * each time the panel becomes {@link #isOpen open}.\n     *\n     * @observable\n     * @default 'auto'\n     * @member {'auto'|'se'|'sw'|'ne'|'nw'} #panelPosition\n     */\n\n\n    _this.set('panelPosition', 'auto');\n    /**\n     * Tracks information about DOM focus in the dropdown.\n     *\n     * @readonly\n     * @member {module:utils/focustracker~FocusTracker}\n     */\n\n\n    _this.focusTracker = new FocusTracker();\n    /**\n     * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}. It manages\n     * keystrokes of the dropdown:\n     *\n     * * <kbd>▼</kbd> opens the dropdown,\n     * * <kbd>◀</kbd> and <kbd>Esc</kbd> closes the dropdown.\n     *\n     * @readonly\n     * @member {module:utils/keystrokehandler~KeystrokeHandler}\n     */\n\n    _this.keystrokes = new KeystrokeHandler();\n\n    _this.setTemplate({\n      tag: 'div',\n      attributes: {\n        \"class\": ['ck', 'ck-dropdown', bind.to('class'), bind[\"if\"]('isEnabled', 'ck-disabled', function (value) {\n          return !value;\n        })]\n      },\n      children: [buttonView, panelView]\n    });\n\n    buttonView.extendTemplate({\n      attributes: {\n        \"class\": ['ck-dropdown__button']\n      }\n    });\n    /**\n     * A child {@link module:ui/list/listview~ListView list view} of the dropdown located\n     * in its {@link module:ui/dropdown/dropdownview~DropdownView#panelView panel}.\n     *\n     * **Note**: Only supported when dropdown has list view added using {@link module:ui/dropdown/utils~addListToDropdown}.\n     *\n     * @readonly\n     * @member {module:ui/list/listview~ListView} #listView\n     */\n\n    /**\n     * A child toolbar of the dropdown located in the\n     * {@link module:ui/dropdown/dropdownview~DropdownView#panelView panel}.\n     *\n     * **Note**: Only supported when dropdown has list view added using {@link module:ui/dropdown/utils~addToolbarToDropdown}.\n     *\n     * @readonly\n     * @member {module:ui/toolbar/toolbarview~ToolbarView} #toolbarView\n     */\n\n    /**\n     * Fired when the toolbar button or list item is executed.\n     *\n     * For {@link #listView} It fires when a child of some {@link module:ui/list/listitemview~ListItemView}\n     * fired `execute`.\n     *\n     * For {@link #toolbarView} It fires when one of the buttons has been\n     * {@link module:ui/button/buttonview~ButtonView#event:execute executed}.\n     *\n     * **Note**: Only supported when dropdown has list view added using {@link module:ui/dropdown/utils~addListToDropdown}\n     * or {@link module:ui/dropdown/utils~addToolbarToDropdown}.\n     *\n     * @event execute\n     */\n\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(DropdownView, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      _get(_getPrototypeOf(DropdownView.prototype), \"render\", this).call(this); // Toggle the dropdown when its button has been clicked.\n\n\n      this.listenTo(this.buttonView, 'open', function () {\n        _this2.isOpen = !_this2.isOpen;\n      }); // Toggle the visibility of the panel when the dropdown becomes open.\n\n      this.panelView.bind('isVisible').to(this, 'isOpen'); // Let the dropdown control the position of the panel. The position must\n      // be updated every time the dropdown is open.\n\n      this.on('change:isOpen', function () {\n        if (!_this2.isOpen) {\n          return;\n        } // If \"auto\", find the best position of the panel to fit into the viewport.\n        // Otherwise, simply assign the static position.\n\n\n        if (_this2.panelPosition === 'auto') {\n          var defaultPanelPositions = DropdownView.defaultPanelPositions;\n          _this2.panelView.position = getOptimalPosition({\n            element: _this2.panelView.element,\n            target: _this2.buttonView.element,\n            fitInViewport: true,\n            positions: [defaultPanelPositions.southEast, defaultPanelPositions.southWest, defaultPanelPositions.northEast, defaultPanelPositions.northWest]\n          }).name;\n        } else {\n          _this2.panelView.position = _this2.panelPosition;\n        }\n      }); // Listen for keystrokes coming from within #element.\n\n      this.keystrokes.listenTo(this.element); // Register #element in the focus tracker.\n\n      this.focusTracker.add(this.element);\n\n      var closeDropdown = function closeDropdown(data, cancel) {\n        if (_this2.isOpen) {\n          _this2.buttonView.focus();\n\n          _this2.isOpen = false;\n          cancel();\n        }\n      }; // Open the dropdown panel using the arrow down key, just like with return or space.\n\n\n      this.keystrokes.set('arrowdown', function (data, cancel) {\n        // Don't open if the dropdown is disabled or already open.\n        if (_this2.buttonView.isEnabled && !_this2.isOpen) {\n          _this2.isOpen = true;\n          cancel();\n        }\n      }); // Block the right arrow key (until nested dropdowns are implemented).\n\n      this.keystrokes.set('arrowright', function (data, cancel) {\n        if (_this2.isOpen) {\n          cancel();\n        }\n      }); // Close the dropdown using the arrow left/escape key.\n\n      this.keystrokes.set('arrowleft', closeDropdown);\n      this.keystrokes.set('esc', closeDropdown);\n    }\n    /**\n     * Focuses the {@link #buttonView}.\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.buttonView.focus();\n    }\n  }]);\n\n  return DropdownView;\n}(View);\n/**\n * A set of positioning functions used by the dropdown view to determine\n * the optimal position (i.e. fitting into the browser viewport) of its\n * {@link module:ui/dropdown/dropdownview~DropdownView#panelView panel} when\n * {@link module:ui/dropdown/dropdownview~DropdownView#panelPosition} is set to 'auto'`.\n *\n * The available positioning functions are as follow:\n *\n * **South**\n *\n * * `southEast`\n *\n *\t\t[ Button ]\n *\t\t+-----------------+\n *\t\t|      Panel      |\n *\t\t+-----------------+\n *\n * * `southWest`\n *\n *\t\t         [ Button ]\n *\t\t+-----------------+\n *\t\t|      Panel      |\n *\t\t+-----------------+\n *\n * **North**\n *\n * * `northEast`\n *\n *\t\t+-----------------+\n *\t\t|      Panel      |\n *\t\t+-----------------+\n *\t\t[ Button ]\n *\n * * `northWest`\n *\n *\t\t+-----------------+\n *\t\t|      Panel      |\n *\t\t+-----------------+\n *\t\t         [ Button ]\n *\n * Positioning functions are compatible with {@link module:utils/dom/position~Position}.\n *\n * The name that position function returns will be reflected in dropdown panel's class that\n * controls its placement. See {@link module:ui/dropdown/dropdownview~DropdownView#panelPosition}\n * to learn more.\n *\n * @member {Object} module:ui/dropdown/dropdownview~DropdownView.defaultPanelPositions\n */\n\n\nexport { DropdownView as default };\nDropdownView.defaultPanelPositions = {\n  southEast: function southEast(buttonRect) {\n    return {\n      top: buttonRect.bottom,\n      left: buttonRect.left,\n      name: 'se'\n    };\n  },\n  southWest: function southWest(buttonRect, panelRect) {\n    return {\n      top: buttonRect.bottom,\n      left: buttonRect.left - panelRect.width + buttonRect.width,\n      name: 'sw'\n    };\n  },\n  northEast: function northEast(buttonRect, panelRect) {\n    return {\n      top: buttonRect.top - panelRect.height,\n      left: buttonRect.left,\n      name: 'ne'\n    };\n  },\n  northWest: function northWest(buttonRect, panelRect) {\n    return {\n      top: buttonRect.bottom - panelRect.height,\n      left: buttonRect.left - panelRect.width + buttonRect.width,\n      name: 'nw'\n    };\n  }\n};","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/dropdown/button/dropdownbuttonview\n */\nimport ButtonView from '../../button/buttonview';\nimport dropdownArrowIcon from '../../../theme/icons/dropdown-arrow.svg';\nimport IconView from '../../icon/iconview';\n/**\n * The default dropdown button view class.\n *\n *\t\tconst view = new DropdownButtonView();\n *\n *\t\tview.set( {\n *\t\t\tlabel: 'A button',\n *\t\t\tkeystroke: 'Ctrl+B',\n *\t\t\ttooltip: true\n *\t\t} );\n *\n *\t\tview.render();\n *\n *\t\tdocument.body.append( view.element );\n *\n * Also see the {@link module:ui/dropdown/utils~createDropdown `createDropdown()` util}.\n *\n * @implements module:ui/dropdown/button/dropdownbutton~DropdownButton\n * @extends module:ui/button/buttonview~ButtonView\n */\n\nvar DropdownButtonView =\n/*#__PURE__*/\nfunction (_ButtonView) {\n  _inherits(DropdownButtonView, _ButtonView);\n\n  /**\n   * @inheritDoc\n   */\n  function DropdownButtonView(locale) {\n    var _this;\n\n    _classCallCheck(this, DropdownButtonView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DropdownButtonView).call(this, locale));\n    /**\n     * An icon that displays arrow to indicate a dropdown button.\n     *\n     * @readonly\n     * @member {module:ui/icon/iconview~IconView}\n     */\n\n    _this.arrowView = _this._createArrowView();\n\n    _this.extendTemplate({\n      attributes: {\n        'aria-haspopup': true\n      }\n    }); // The DropdownButton interface expects the open event upon which will open the dropdown.\n\n\n    _this.delegate('execute').to(_assertThisInitialized(_this), 'open');\n\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(DropdownButtonView, [{\n    key: \"render\",\n    value: function render() {\n      _get(_getPrototypeOf(DropdownButtonView.prototype), \"render\", this).call(this);\n\n      this.children.add(this.arrowView);\n    }\n    /**\n     * Creates a {@link module:ui/icon/iconview~IconView} instance as {@link #arrowView}.\n     *\n     * @private\n     * @returns {module:ui/icon/iconview~IconView}\n     */\n\n  }, {\n    key: \"_createArrowView\",\n    value: function _createArrowView() {\n      var arrowView = new IconView();\n      arrowView.content = dropdownArrowIcon;\n      arrowView.extendTemplate({\n        attributes: {\n          \"class\": 'ck-dropdown__arrow'\n        }\n      });\n      return arrowView;\n    }\n  }]);\n\n  return DropdownButtonView;\n}(ButtonView);\n\nexport { DropdownButtonView as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/list/listview\n */\nimport View from '../view';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport FocusCycler from '../focuscycler';\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\nimport '../../theme/components/list/list.css';\n/**\n * The list view class.\n *\n * @extends module:ui/view~View\n * @implements module:ui/dropdown/dropdownpanelfocusable~DropdownPanelFocusable\n */\n\nvar ListView =\n/*#__PURE__*/\nfunction (_View) {\n  _inherits(ListView, _View);\n\n  /**\n   * @inheritDoc\n   */\n  function ListView() {\n    var _this;\n\n    _classCallCheck(this, ListView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ListView).call(this));\n    /**\n     * Collection of the child list views.\n     *\n     * @readonly\n     * @member {module:ui/viewcollection~ViewCollection}\n     */\n\n    _this.items = _this.createCollection();\n    /**\n     * Tracks information about DOM focus in the list.\n     *\n     * @readonly\n     * @member {module:utils/focustracker~FocusTracker}\n     */\n\n    _this.focusTracker = new FocusTracker();\n    /**\n     * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n     *\n     * @readonly\n     * @member {module:utils/keystrokehandler~KeystrokeHandler}\n     */\n\n    _this.keystrokes = new KeystrokeHandler();\n    /**\n     * Helps cycling over focusable {@link #items} in the list.\n     *\n     * @readonly\n     * @protected\n     * @member {module:ui/focuscycler~FocusCycler}\n     */\n\n    _this._focusCycler = new FocusCycler({\n      focusables: _this.items,\n      focusTracker: _this.focusTracker,\n      keystrokeHandler: _this.keystrokes,\n      actions: {\n        // Navigate list items backwards using the arrowup key.\n        focusPrevious: 'arrowup',\n        // Navigate toolbar items forwards using the arrowdown key.\n        focusNext: 'arrowdown'\n      }\n    });\n\n    _this.setTemplate({\n      tag: 'ul',\n      attributes: {\n        \"class\": ['ck', 'ck-reset', 'ck-list']\n      },\n      children: _this.items\n    });\n\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(ListView, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      _get(_getPrototypeOf(ListView.prototype), \"render\", this).call(this); // Items added before rendering should be known to the #focusTracker.\n\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.items[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n          this.focusTracker.add(item.element);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      this.items.on('add', function (evt, item) {\n        _this2.focusTracker.add(item.element);\n      });\n      this.items.on('remove', function (evt, item) {\n        _this2.focusTracker.remove(item.element);\n      }); // Start listening for the keystrokes coming from #element.\n\n      this.keystrokes.listenTo(this.element);\n    }\n    /**\n     * Focuses the first focusable in {@link #items}.\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this._focusCycler.focusFirst();\n    }\n    /**\n     * Focuses the last focusable in {@link #items}.\n     */\n\n  }, {\n    key: \"focusLast\",\n    value: function focusLast() {\n      this._focusCycler.focusLast();\n    }\n  }]);\n\n  return ListView;\n}(View);\n\nexport { ListView as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/list/listitemview\n */\nimport View from '../view';\n/**\n * The list item view class.\n *\n * @extends module:ui/view~View\n */\n\nvar ListItemView =\n/*#__PURE__*/\nfunction (_View) {\n  _inherits(ListItemView, _View);\n\n  /**\n   * @inheritDoc\n   */\n  function ListItemView(locale) {\n    var _this;\n\n    _classCallCheck(this, ListItemView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ListItemView).call(this, locale));\n    /**\n     * Collection of the child views inside of the list item {@link #element}.\n     *\n     * @readonly\n     * @member {module:ui/viewcollection~ViewCollection}\n     */\n\n    _this.children = _this.createCollection();\n\n    _this.setTemplate({\n      tag: 'li',\n      attributes: {\n        \"class\": ['ck', 'ck-list__item']\n      },\n      children: _this.children\n    });\n\n    return _this;\n  }\n  /**\n   * Focuses the list item.\n   */\n\n\n  _createClass(ListItemView, [{\n    key: \"focus\",\n    value: function focus() {\n      this.children.first.focus();\n    }\n  }]);\n\n  return ListItemView;\n}(View);\n\nexport { ListItemView as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/list/listseparatorview\n */\nimport View from '../view';\n/**\n * The list separator view class.\n *\n * @extends module:ui/view~View\n */\n\nvar ListSeparatorView =\n/*#__PURE__*/\nfunction (_View) {\n  _inherits(ListSeparatorView, _View);\n\n  /**\n   * @inheritDoc\n   */\n  function ListSeparatorView(locale) {\n    var _this;\n\n    _classCallCheck(this, ListSeparatorView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ListSeparatorView).call(this, locale));\n\n    _this.setTemplate({\n      tag: 'li',\n      attributes: {\n        \"class\": ['ck', 'ck-list__separator']\n      }\n    });\n\n    return _this;\n  }\n\n  return ListSeparatorView;\n}(View);\n\nexport { ListSeparatorView as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/button/switchbuttonview\n */\nimport View from '../view';\nimport ButtonView from './buttonview';\nimport '../../theme/components/button/switchbutton.css';\n/**\n * The switch button view class.\n *\n *\t\tconst view = new SwitchButtonView();\n *\n *\t\tview.set( {\n *\t\t\twithText: true,\n *\t\t\tlabel: 'Switch me!'\n *\t\t} );\n *\n *\t\tview.render();\n *\n *\t\tdocument.body.append( view.element );\n *\n * @extends module:ui/button/buttonview~ButtonView\n */\n\nvar SwitchButtonView =\n/*#__PURE__*/\nfunction (_ButtonView) {\n  _inherits(SwitchButtonView, _ButtonView);\n\n  /**\n   * @inheritDoc\n   */\n  function SwitchButtonView(locale) {\n    var _this;\n\n    _classCallCheck(this, SwitchButtonView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SwitchButtonView).call(this, locale));\n    /**\n     * The toggle switch of the button.\n     *\n     * @readonly\n     * @member {module:ui/view~View} #toggleSwitchView\n     */\n\n    _this.toggleSwitchView = _this._createToggleView();\n\n    _this.extendTemplate({\n      attributes: {\n        \"class\": 'ck-switchbutton'\n      }\n    });\n\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(SwitchButtonView, [{\n    key: \"render\",\n    value: function render() {\n      _get(_getPrototypeOf(SwitchButtonView.prototype), \"render\", this).call(this);\n\n      this.children.add(this.toggleSwitchView);\n    }\n    /**\n     * Creates a toggle child view.\n     *\n     * @private\n     * @returns {module:ui/view~View}\n     */\n\n  }, {\n    key: \"_createToggleView\",\n    value: function _createToggleView() {\n      var toggleSwitchView = new View();\n      toggleSwitchView.setTemplate({\n        tag: 'span',\n        attributes: {\n          \"class\": ['ck', 'ck-button__toggle']\n        },\n        children: [{\n          tag: 'span',\n          attributes: {\n            \"class\": ['ck', 'ck-button__toggle__inner']\n          }\n        }]\n      });\n      return toggleSwitchView;\n    }\n  }]);\n\n  return SwitchButtonView;\n}(ButtonView);\n\nexport { SwitchButtonView as default };","function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/dropdown/utils\n */\nimport DropdownPanelView from './dropdownpanelview';\nimport DropdownView from './dropdownview';\nimport DropdownButtonView from './button/dropdownbuttonview';\nimport ToolbarView from '../toolbar/toolbarview';\nimport ListView from '../list/listview';\nimport ListItemView from '../list/listitemview';\nimport ListSeparatorView from '../list/listseparatorview';\nimport ButtonView from '../button/buttonview';\nimport SwitchButtonView from '../button/switchbuttonview';\nimport clickOutsideHandler from '../bindings/clickoutsidehandler';\nimport '../../theme/components/dropdown/toolbardropdown.css';\nimport '../../theme/components/dropdown/listdropdown.css';\n/**\n * A helper for creating dropdowns. It creates an instance of a {@link module:ui/dropdown/dropdownview~DropdownView dropdown},\n * with a {@link module:ui/dropdown/button/dropdownbutton~DropdownButton button},\n * {@link module:ui/dropdown/dropdownpanelview~DropdownPanelView panel} and all standard dropdown's behaviors.\n *\n * # Creating dropdowns\n *\n * By default, the default {@link module:ui/dropdown/button/dropdownbuttonview~DropdownButtonView} class is used as\n * definition of the button:\n *\n *\t\tconst dropdown = createDropdown( model );\n *\n *\t\t// Configure dropdown's button properties:\n *\t\tdropdown.buttonView.set( {\n *\t\t\tlabel: 'A dropdown',\n *\t\t\twithText: true\n *\t\t} );\n *\n *\t\tdropdown.render();\n *\n *\t\t// Will render a dropdown labeled \"A dropdown\" with an empty panel.\n *\t\tdocument.body.appendChild( dropdown.element );\n *\n * You can also provide other button views (they need to implement the\n * {@link module:ui/dropdown/button/dropdownbutton~DropdownButton} interface). For instance, you can use\n * {@link module:ui/dropdown/button/splitbuttonview~SplitButtonView} to create a dropdown with a split button.\n *\n *\t\tconst dropdown = createDropdown( model, SplitButtonView );\n *\n *\t\t// Configure dropdown's button properties:\n *\t\tdropdown.buttonView.set( {\n *\t\t\tlabel: 'A dropdown',\n *\t\t\twithText: true\n *\t\t} );\n *\n *\t\tdropdown.buttonView.on( 'execute', () => {\n *\t\t\t// Add the behavior of the \"action part\" of the split button.\n *\t\t\t// Split button consists of the \"action part\" and \"arrow part\".\n *\t\t\t// The arrow opens the dropdown while the action part can have some other behavior.\n * \t\t} );\n *\n *\t\tdropdown.render();\n *\n *\t\t// Will render a dropdown labeled \"A dropdown\" with an empty panel.\n *\t\tdocument.body.appendChild( dropdown.element );\n *\n * # Adding content to the dropdown's panel\n *\n * The content of the panel can be inserted directly into the `dropdown.panelView.element`:\n *\n *\t\tdropdown.panelView.element.textContent = 'Content of the panel';\n *\n * However, most of the time you will want to add there either a {@link module:ui/list/listview~ListView list of options}\n * or a list of buttons (i.e. a {@link module:ui/toolbar/toolbarview~ToolbarView toolbar}).\n * To simplify the task, you can use, respectively, {@link module:ui/dropdown/utils~addListToDropdown} or\n * {@link module:ui/dropdown/utils~addToolbarToDropdown} utils.\n *\n * @param {module:utils/locale~Locale} locale The locale instance.\n * @param {Function} ButtonClass The dropdown button view class. Needs to implement the\n * {@link module:ui/dropdown/button/dropdownbutton~DropdownButton} interface.\n * @returns {module:ui/dropdown/dropdownview~DropdownView} The dropdown view instance.\n */\n\nexport function createDropdown(locale) {\n  var ButtonClass = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DropdownButtonView;\n  var buttonView = new ButtonClass(locale);\n  var panelView = new DropdownPanelView(locale);\n  var dropdownView = new DropdownView(locale, buttonView, panelView);\n  buttonView.bind('isEnabled').to(dropdownView);\n\n  if (buttonView instanceof DropdownButtonView) {\n    buttonView.bind('isOn').to(dropdownView, 'isOpen');\n  } else {\n    buttonView.arrowView.bind('isOn').to(dropdownView, 'isOpen');\n  }\n\n  addDefaultBehavior(dropdownView);\n  return dropdownView;\n}\n/**\n * Adds an instance of {@link module:ui/toolbar/toolbarview~ToolbarView} to a dropdown.\n *\n *\t\tconst buttons = [];\n *\n *\t\t// Either create a new ButtonView instance or create existing.\n *\t\tbuttons.push( new ButtonView() );\n *\t\tbuttons.push( editor.ui.componentFactory.get( 'someButton' ) );\n *\n *\t\tconst dropdown = createDropdown( locale );\n *\n *\t\taddToolbarToDropdown( dropdown, buttons );\n *\n *\t\tdropdown.toolbarView.isVertical = true;\n *\n *\t\t// Will render a vertical button dropdown labeled \"A button dropdown\"\n *\t\t// with a button group in the panel containing two buttons.\n *\t\tdropdown.render()\n *\t\tdocument.body.appendChild( dropdown.element );\n *\n * See {@link module:ui/dropdown/utils~createDropdown} and {@link module:ui/toolbar/toolbarview~ToolbarView}.\n *\n * @param {module:ui/dropdown/dropdownview~DropdownView} dropdownView A dropdown instance to which `ToolbarView` will be added.\n * @param {Iterable.<module:ui/button/buttonview~ButtonView>} buttons\n */\n\nexport function addToolbarToDropdown(dropdownView, buttons) {\n  var toolbarView = dropdownView.toolbarView = new ToolbarView();\n  dropdownView.extendTemplate({\n    attributes: {\n      \"class\": ['ck-toolbar-dropdown']\n    }\n  });\n  buttons.map(function (view) {\n    return toolbarView.items.add(view);\n  });\n  dropdownView.panelView.children.add(toolbarView);\n  toolbarView.items.delegate('execute').to(dropdownView);\n}\n/**\n * Adds an instance of {@link module:ui/list/listview~ListView} to a dropdown.\n *\n *\t\tconst items = new Collection();\n *\n *\t\titems.add( {\n *\t\t\ttype: 'button',\n *\t\t\tmodel: new Model( {\n *\t\t\t\twithText: true,\n *\t\t\t\tlabel: 'First item',\n *\t\t\t\tlabelStyle: 'color: red'\n *\t\t\t} )\n *\t\t} );\n *\n *\t\titems.add( {\n *\t\t\t type: 'button',\n *\t\t\t model: new Model( {\n *\t\t\t\twithText: true,\n *\t\t\t\tlabel: 'Second item',\n *\t\t\t\tlabelStyle: 'color: green',\n *\t\t\t\tclass: 'foo'\n *\t\t\t} )\n *\t\t} );\n *\n *\t\tconst dropdown = createDropdown( locale );\n *\n *\t\taddListToDropdown( dropdown, items );\n *\n *\t\t// Will render a dropdown with a list in the panel containing two items.\n *\t\tdropdown.render()\n *\t\tdocument.body.appendChild( dropdown.element );\n *\n * The `items` collection passed to this methods controls the presence and attributes of respective\n * {@link module:ui/list/listitemview~ListItemView list items}.\n *\n *\n * See {@link module:ui/dropdown/utils~createDropdown} and {@link module:list/list~List}.\n *\n * @param {module:ui/dropdown/dropdownview~DropdownView} dropdownView A dropdown instance to which `ListVIew` will be added.\n * @param {Iterable.<module:ui/dropdown/utils~ListDropdownItemDefinition>} items\n * A collection of the list item definitions to populate the list.\n */\n\nexport function addListToDropdown(dropdownView, items) {\n  var locale = dropdownView.locale;\n  var listView = dropdownView.listView = new ListView(locale);\n  listView.items.bindTo(items).using(function (_ref) {\n    var type = _ref.type,\n        model = _ref.model;\n\n    if (type === 'separator') {\n      return new ListSeparatorView(locale);\n    } else if (type === 'button' || type === 'switchbutton') {\n      var _buttonView;\n\n      var listItemView = new ListItemView(locale);\n      var buttonView;\n\n      if (type === 'button') {\n        buttonView = new ButtonView(locale);\n      } else {\n        buttonView = new SwitchButtonView(locale);\n      } // Bind all model properties to the button view.\n\n\n      (_buttonView = buttonView).bind.apply(_buttonView, _toConsumableArray(Object.keys(model))).to(model);\n\n      buttonView.delegate('execute').to(listItemView);\n      listItemView.children.add(buttonView);\n      return listItemView;\n    }\n  });\n  dropdownView.panelView.children.add(listView);\n  listView.items.delegate('execute').to(dropdownView);\n} // Add a set of default behaviors to dropdown view.\n//\n// @param {module:ui/dropdown/dropdownview~DropdownView} dropdownView\n\nfunction addDefaultBehavior(dropdownView) {\n  closeDropdownOnBlur(dropdownView);\n  closeDropdownOnExecute(dropdownView);\n  focusDropdownContentsOnArrows(dropdownView);\n} // Adds a behavior to a dropdownView that closes opened dropdown when user clicks outside the dropdown.\n//\n// @param {module:ui/dropdown/dropdownview~DropdownView} dropdownView\n\n\nfunction closeDropdownOnBlur(dropdownView) {\n  dropdownView.on('render', function () {\n    clickOutsideHandler({\n      emitter: dropdownView,\n      activator: function activator() {\n        return dropdownView.isOpen;\n      },\n      callback: function callback() {\n        dropdownView.isOpen = false;\n      },\n      contextElements: [dropdownView.element]\n    });\n  });\n} // Adds a behavior to a dropdownView that closes the dropdown view on \"execute\" event.\n//\n// @param {module:ui/dropdown/dropdownview~DropdownView} dropdownView\n\n\nfunction closeDropdownOnExecute(dropdownView) {\n  // Close the dropdown when one of the list items has been executed.\n  dropdownView.on('execute', function (evt) {\n    // Toggling a switch button view should not close the dropdown.\n    if (evt.source instanceof SwitchButtonView) {\n      return;\n    }\n\n    dropdownView.isOpen = false;\n  });\n} // Adds a behavior to a dropdownView that focuses the dropdown's panel view contents on keystrokes.\n//\n// @param {module:ui/dropdown/dropdownview~DropdownView} dropdownView\n\n\nfunction focusDropdownContentsOnArrows(dropdownView) {\n  // If the dropdown panel is already open, the arrow down key should focus the first child of the #panelView.\n  dropdownView.keystrokes.set('arrowdown', function (data, cancel) {\n    if (dropdownView.isOpen) {\n      dropdownView.panelView.focus();\n      cancel();\n    }\n  }); // If the dropdown panel is already open, the arrow up key should focus the last child of the #panelView.\n\n  dropdownView.keystrokes.set('arrowup', function (data, cancel) {\n    if (dropdownView.isOpen) {\n      dropdownView.panelView.focusLast();\n      cancel();\n    }\n  });\n}\n/**\n * A definition of the list item used by the {@link module:ui/dropdown/utils~addListToDropdown}\n * utility.\n *\n * @typedef {Object} module:ui/dropdown/utils~ListDropdownItemDefinition\n *\n * @property {String} type Either `'separator'`, `'button'` or `'switchbutton'`.\n * @property {module:ui/model~Model} [model] Model of the item (when **not** `'separator'`).\n * Its properties fuel the newly created list item (or its children, depending on the `type`).\n */","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module ui/bindings/clickoutsidehandler\n */\n\n/* global document */\n\n/**\n * Handles clicking **outside** of a specified set of elements, then fires an action.\n *\n * **Note**: Actually, the action is executed upon `mousedown`, not `click`. It prevents\n * certain issues when the user keeps holding the mouse button and the UI cannot react\n * properly.\n *\n * @param {Object} options Configuration options.\n * @param {module:utils/dom/emittermixin~Emitter} options.emitter The emitter to which this behavior\n * should be added.\n * @param {Function} options.activator Function returning a `Boolean`, to determine whether the handler is active.\n * @param {Array.<HTMLElement>} options.contextElements HTML elements that determine the scope of the\n * handler. Clicking any of them or their descendants will **not** fire the callback.\n * @param {Function} options.callback An action executed by the handler.\n */\nexport default function clickOutsideHandler(_ref) {\n  var emitter = _ref.emitter,\n      activator = _ref.activator,\n      callback = _ref.callback,\n      contextElements = _ref.contextElements;\n  emitter.listenTo(document, 'mousedown', function (evt, _ref2) {\n    var target = _ref2.target;\n\n    if (!activator()) {\n      return;\n    }\n\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = contextElements[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var contextElement = _step.value;\n\n        if (contextElement.contains(target)) {\n          return;\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n          _iterator[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    callback();\n  });\n}","function _typeof(obj) {\n    if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {\n        _typeof = function _typeof(obj) {\n            return typeof obj;\n        };\n    } else {\n        _typeof = function _typeof(obj) {\n            return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n        };\n    }\n    return _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError('Cannot call a class as a function');\n    }\n}\nfunction _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if ('value' in descriptor)\n            descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps)\n        _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps)\n        _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === 'object' || typeof call === 'function')) {\n        return call;\n    }\n    return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError('this hasn\\'t been initialised - super() hasn\\'t been called');\n    }\n    return self;\n}\nfunction _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== 'function' && superClass !== null) {\n        throw new TypeError('Super expression must either be null or a function');\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass)\n        _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return _setPrototypeOf(o, p);\n}\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module heading/headingui\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport Model from '@ckeditor/ckeditor5-ui/src/model';\nimport {\n    createDropdown,\n    addListToDropdown\n} from '@ckeditor/ckeditor5-ui/src/dropdown/utils';\nimport { getLocalizedOptions } from './utils';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport '../theme/heading.css';\n/**\n * The headings UI feature. It introduces the `headings` dropdown.\n *\n * @extends module:core/plugin~Plugin\n */\nvar HeadingUI = /*#__PURE__*/\nfunction (_Plugin) {\n    _inherits(HeadingUI, _Plugin);\n    function HeadingUI() {\n        _classCallCheck(this, HeadingUI);\n        return _possibleConstructorReturn(this, _getPrototypeOf(HeadingUI).apply(this, arguments));\n    }\n    _createClass(HeadingUI, [{\n            key: 'init',\n            /**\n     * @inheritDoc\n     */\n            value: function init() {\n                var _this = this;\n                var editor = this.editor;\n                var t = editor.t;\n                var options = getLocalizedOptions(editor);\n                var defaultTitle = t('f');\n                var dropdownTooltip = t('g');\n                // Register UI component.\n                editor.ui.componentFactory.add('heading', function (locale) {\n                    var titles = {};\n                    var itemDefinitions = new Collection();\n                    var headingCommand = editor.commands.get('heading');\n                    var paragraphCommand = editor.commands.get('paragraph');\n                    var commands = [headingCommand];\n                    var _iteratorNormalCompletion = true;\n                    var _didIteratorError = false;\n                    var _iteratorError = undefined;\n                    try {\n                        var _loop = function _loop() {\n                            var option = _step.value;\n                            var def = {\n                                type: 'button',\n                                model: new Model({\n                                    label: option.title,\n                                    'class': option['class'],\n                                    withText: true\n                                })\n                            };\n                            if (option.model === 'paragraph') {\n                                def.model.bind('isOn').to(paragraphCommand, 'value');\n                                def.model.set('commandName', 'paragraph');\n                                commands.push(paragraphCommand);\n                            } else {\n                                def.model.bind('isOn').to(headingCommand, 'value', function (value) {\n                                    return value === option.model;\n                                });\n                                def.model.set({\n                                    commandName: 'heading',\n                                    commandValue: option.model\n                                });\n                            }\n                            // Add the option to the collection.\n                            itemDefinitions.add(def);\n                            titles[option.model] = option.title;\n                        };\n                        for (var _iterator = options[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                            _loop();\n                        }\n                    } catch (err) {\n                        _didIteratorError = true;\n                        _iteratorError = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion && _iterator['return'] != null) {\n                                _iterator['return']();\n                            }\n                        } finally {\n                            if (_didIteratorError) {\n                                throw _iteratorError;\n                            }\n                        }\n                    }\n                    var dropdownView = createDropdown(locale);\n                    addListToDropdown(dropdownView, itemDefinitions);\n                    dropdownView.buttonView.set({\n                        isOn: false,\n                        withText: true,\n                        tooltip: dropdownTooltip\n                    });\n                    dropdownView.extendTemplate({ attributes: { 'class': ['ck-heading-dropdown'] } });\n                    dropdownView.bind('isEnabled').toMany(commands, 'isEnabled', function () {\n                        for (var _len = arguments.length, areEnabled = new Array(_len), _key = 0; _key < _len; _key++) {\n                            areEnabled[_key] = arguments[_key];\n                        }\n                        return areEnabled.some(function (isEnabled) {\n                            return isEnabled;\n                        });\n                    });\n                    dropdownView.buttonView.bind('label').to(headingCommand, 'value', paragraphCommand, 'value', function (value, para) {\n                        var whichModel = value || para && 'paragraph';\n                        // If none of the commands is active, display default title.\n                        return titles[whichModel] ? titles[whichModel] : defaultTitle;\n                    });\n                    // Execute command when an item from the dropdown is selected.\n                    _this.listenTo(dropdownView, 'execute', function (evt) {\n                        editor.execute(evt.source.commandName, evt.source.commandValue ? { value: evt.source.commandValue } : undefined);\n                        editor.editing.view.focus();\n                    });\n                    return dropdownView;\n                });\n            }\n        }]);\n    return HeadingUI;\n}(Plugin);\nexport {\n    HeadingUI as default\n};","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module heading/utils\n */\n/**\n * Returns heading options as defined in `config.heading.options` but processed to consider\n * editor localization, i.e. to display {@link module:heading/heading~HeadingOption}\n * in the correct language.\n *\n * Note: The reason behind this method is that there's no way to use {@link module:utils/locale~Locale#t}\n * when the user config is defined because the editor does not exist yet.\n *\n * @param {module:core/editor/editor~Editor} editor\n * @returns {Array.<module:heading/heading~HeadingOption>}.\n */\nexport function getLocalizedOptions(editor) {\n    var t = editor.t;\n    var localizedTitles = {\n        Paragraph: t('h'),\n        'Heading 1': t('i'),\n        'Heading 2': t('j'),\n        'Heading 3': t('k'),\n        'Heading 4': t('l'),\n        'Heading 5': t('m'),\n        'Heading 6': t('n')\n    };\n    return editor.config.get('heading.options').map(function (option) {\n        var title = localizedTitles[option.title];\n        if (title && title != option.title) {\n            option.title = title;\n        }\n        return option;\n    });\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module heading/heading\n */\nimport HeadingEditing from './headingediting';\nimport HeadingUI from './headingui';\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport '../theme/heading.css';\n/**\n * The headings feature.\n *\n * For a detailed overview, check the {@glink features/headings Headings feature documentation}\n * and the {@glink api/heading package page}.\n *\n * This is a \"glue\" plugin which loads the {@link module:heading/headingediting~HeadingEditing heading editing feature}\n * and {@link module:heading/headingui~HeadingUI heading UI feature}.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar Heading =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(Heading, _Plugin);\n\n  function Heading() {\n    _classCallCheck(this, Heading);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Heading).apply(this, arguments));\n  }\n\n  _createClass(Heading, null, [{\n    key: \"requires\",\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return [HeadingEditing, HeadingUI];\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"pluginName\",\n    get: function get() {\n      return 'Heading';\n    }\n  }]);\n\n  return Heading;\n}(Plugin);\n/**\n * The configuration of the heading feature. Introduced by the {@link module:heading/headingediting~HeadingEditing} feature.\n *\n * Read more in {@link module:heading/heading~HeadingConfig}.\n *\n * @member {module:heading/heading~HeadingConfig} module:core/editor/editorconfig~EditorConfig#heading\n */\n\n/**\n * The configuration of the heading feature.\n * The option is used by the {@link module:heading/headingediting~HeadingEditing} feature.\n *\n *\t\tClassicEditor\n *\t\t\t.create( {\n * \t\t\t\theading: ... // Heading feature config.\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * See {@link module:core/editor/editorconfig~EditorConfig all editor options}.\n *\n * @interface HeadingConfig\n */\n\n/**\n * The available heading options.\n *\n * The default value is:\n *\n *\t\tconst headingConfig = {\n *\t\t\toptions: [\n *\t\t\t\t{ model: 'paragraph', title: 'Paragraph', class: 'ck-heading_paragraph' },\n *\t\t\t\t{ model: 'heading1', view: 'h2', title: 'Heading 1', class: 'ck-heading_heading1' },\n *\t\t\t\t{ model: 'heading2', view: 'h3', title: 'Heading 2', class: 'ck-heading_heading2' },\n *\t\t\t\t{ model: 'heading3', view: 'h4', title: 'Heading 3', class: 'ck-heading_heading3' }\n *\t\t\t]\n *\t\t};\n *\n * It defines 3 levels of headings. In the editor model they will use `heading1`, `heading2`, and `heading3` elements.\n * Their respective view elements (so the elements output by the editor) will be: `h2`, `h3`, and `h4`. This means that\n * if you choose \"Heading 1\" in the headings dropdown the editor will turn the current block to `<heading1>` in the model\n * which will result in rendering (and outputting to data) the `<h2>` element.\n *\n * The `title` and `class` properties will be used by the `headings` dropdown to render available options.\n * Usually, the first option in the headings dropdown is the \"Paragraph\" option, hence it's also defined on the list.\n * However, you don't need to define its view representation because it's handled by\n * the {@link module:paragraph/paragraph~Paragraph} feature (which is required by\n * the {@link module:heading/headingediting~HeadingEditing} feature).\n *\n * You can **read more** about configuring heading levels and **see more examples** in\n * the {@glink features/headings Headings} guide.\n *\n * Note: In the model you should always start from `heading1`, regardless of how the headings are represented in the view.\n * That's assumption is used by features like {@link module:autoformat/autoformat~Autoformat} to know which element\n * they should use when applying the first level heading.\n *\n * The defined headings are also available as values passed to the `'heading'` command under their model names.\n * For example, the below code will apply `<heading1>` to the current selection:\n *\n *\t\teditor.execute( 'heading', { value: 'heading1' } );\n *\n * @member {Array.<module:heading/heading~HeadingOption>} module:heading/heading~HeadingConfig#options\n */\n\n/**\n * Heading option descriptor.\n *\n * @typedef {Object} module:heading/heading~HeadingOption\n * @property {String} model Name of the model element to convert.\n * @property {module:engine/view/elementdefinition~ElementDefinition} view Definition of a view element to convert from/to.\n * @property {String} title The user-readable title of the option.\n * @property {String} class The class which will be added to the dropdown item representing this option.\n * @property {String} [icon] Icon used by {@link module:heading/headingbuttonsui~HeadingButtonsUI}. It can be omitted when using\n * the default configuration.\n * @extends module:engine/conversion/conversion~ConverterDefinition\n */\n\n\nexport { Heading as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module list/listcommand\n */\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport first from '@ckeditor/ckeditor5-utils/src/first';\n/**\n * The list command. It is used by the {@link module:list/list~List list feature}.\n *\n * @extends module:core/command~Command\n */\n\nvar ListCommand =\n/*#__PURE__*/\nfunction (_Command) {\n  _inherits(ListCommand, _Command);\n\n  /**\n   * Creates an instance of the command.\n   *\n   * @param {module:core/editor/editor~Editor} editor The editor instance.\n   * @param {'numbered'|'bulleted'} type List type that will be handled by this command.\n   */\n  function ListCommand(editor, type) {\n    var _this;\n\n    _classCallCheck(this, ListCommand);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ListCommand).call(this, editor));\n    /**\n     * The type of the list created by the command.\n     *\n     * @readonly\n     * @member {'numbered'|'bulleted'}\n     */\n\n    _this.type = type == 'bulleted' ? 'bulleted' : 'numbered';\n    /**\n     * A flag indicating whether the command is active, which means that the selection starts in a list of the same type.\n     *\n     * @observable\n     * @readonly\n     * @member {Boolean} #value\n     */\n\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(ListCommand, [{\n    key: \"refresh\",\n    value: function refresh() {\n      this.value = this._getValue();\n      this.isEnabled = this._checkEnabled();\n    }\n    /**\n     * Executes the command.\n     *\n     * @protected\n     */\n\n  }, {\n    key: \"execute\",\n    value: function execute() {\n      var _this2 = this;\n\n      var model = this.editor.model;\n      var document = model.document;\n      var blocks = Array.from(document.selection.getSelectedBlocks()).filter(function (block) {\n        return checkCanBecomeListItem(block, model.schema);\n      }); // Whether we are turning off some items.\n\n      var turnOff = this.value === true; // If we are turning off items, we are going to rename them to paragraphs.\n\n      model.change(function (writer) {\n        // If part of a list got turned off, we need to handle (outdent) all of sub-items of the last turned-off item.\n        // To be sure that model is all the time in a good state, we first fix items below turned-off item.\n        if (turnOff) {\n          // Start from the model item that is just after the last turned-off item.\n          var next = blocks[blocks.length - 1].nextSibling;\n          var currentIndent = Number.POSITIVE_INFINITY;\n          var changes = []; // Correct indent of all items after the last turned off item.\n          // Rules that should be followed:\n          // 1. All direct sub-items of turned-off item should become indent 0, because the first item after it\n          //    will be the first item of a new list. Other items are at the same level, so should have same 0 index.\n          // 2. All items with indent lower than indent of turned-off item should become indent 0, because they\n          //    should not end up as a child of any of list items that they were not children of before.\n          // 3. All other items should have their indent changed relatively to it's parent.\n          //\n          // For example:\n          // 1  * --------\n          // 2     * --------\n          // 3        * --------\t\t\t<-- this is turned off.\n          // 4           * --------\t\t<-- this has to become indent = 0, because it will be first item on a new list.\n          // 5              * --------\t<-- this should be still be a child of item above, so indent = 1.\n          // 6        * --------\t\t\t<-- this has to become indent = 0, because it should not be a child of any of items above.\n          // 7           * --------\t\t<-- this should be still be a child of item above, so indent = 1.\n          // 8     * --------\t\t\t\t<-- this has to become indent = 0.\n          // 9        * --------\t\t\t<-- this should still be a child of item above, so indent = 1.\n          // 10          * --------\t\t<-- this should still be a child of item above, so indent = 2.\n          // 11          * --------\t\t<-- this should still be at the same level as item above, so indent = 2.\n          // 12 * --------\t\t\t\t<-- this and all below are left unchanged.\n          // 13    * --------\n          // 14       * --------\n          //\n          // After turning off 3 the list becomes:\n          //\n          // 1  * --------\n          // 2     * --------\n          //\n          // 3  --------\n          //\n          // 4  * --------\n          // 5     * --------\n          // 6  * --------\n          // 7     * --------\n          // 8  * --------\n          // 9     * --------\n          // 10       * --------\n          // 11       * --------\n          // 12 * --------\n          // 13    * --------\n          // 14       * --------\n          //\n          // Thanks to this algorithm no lists are mismatched and no items get unexpected children/parent, while\n          // those parent-child connection which are possible to maintain are still maintained. It's worth noting\n          // that this is the same effect that we would be get by multiple use of outdent command. However doing\n          // it like this is much more efficient because it's less operation (less memory usage, easier OT) and\n          // less conversion (faster).\n\n          while (next && next.name == 'listItem' && next.getAttribute('listIndent') !== 0) {\n            // Check each next list item, as long as its indent is bigger than 0.\n            // If the indent is 0 we are not going to change anything anyway.\n            var indent = next.getAttribute('listIndent'); // We check if that's item indent is lower as current relative indent.\n\n            if (indent < currentIndent) {\n              // If it is, current relative indent becomes that indent.\n              currentIndent = indent;\n            } // Fix indent relatively to current relative indent.\n            // Note, that if we just changed the current relative indent, the newIndent will be equal to 0.\n\n\n            var newIndent = indent - currentIndent; // Save the entry in changes array. We do not apply it at the moment, because we will need to\n            // reverse the changes so the last item is changed first.\n            // This is to keep model in correct state all the time.\n\n            changes.push({\n              element: next,\n              listIndent: newIndent\n            }); // Find next item.\n\n            next = next.nextSibling;\n          }\n\n          changes = changes.reverse();\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = changes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var item = _step.value;\n              writer.setAttribute('listIndent', item.listIndent, item.element);\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n                _iterator[\"return\"]();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n        } // If we are turning on, we might change some items that are already `listItem`s but with different type.\n        // Changing one nested list item to other type should also trigger changing all its siblings so the\n        // whole nested list is of the same type.\n        // Example (assume changing to numbered list):\n        // * ------\t\t\t\t<-- do not fix, top level item\n        //   * ------\t\t\t<-- fix, because latter list item of this item's list is changed\n        //      * ------\t\t<-- do not fix, item is not affected (different list)\n        //   * ------\t\t\t<-- fix, because latter list item of this item's list is changed\n        //      * ------\t\t<-- fix, because latter list item of this item's list is changed\n        //      * ---[--\t\t<-- already in selection\n        //   * ------\t\t\t<-- already in selection\n        //   * ------\t\t\t<-- already in selection\n        // * ------\t\t\t\t<-- already in selection, but does not cause other list items to change because is top-level\n        //   * ---]--\t\t\t<-- already in selection\n        //   * ------\t\t\t<-- fix, because preceding list item of this item's list is changed\n        //      * ------\t\t<-- do not fix, item is not affected (different list)\n        // * ------\t\t\t\t<-- do not fix, top level item\n\n\n        if (!turnOff) {\n          // Find lowest indent among selected items. This will be indicator what is the indent of\n          // top-most list affected by the command.\n          var lowestIndent = Number.POSITIVE_INFINITY;\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = blocks[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var _item = _step2.value;\n\n              if (_item.is('listItem') && _item.getAttribute('listIndent') < lowestIndent) {\n                lowestIndent = _item.getAttribute('listIndent');\n              }\n            } // Do not execute the fix for top-level lists.\n\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n                _iterator2[\"return\"]();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n\n          lowestIndent = lowestIndent === 0 ? 1 : lowestIndent; // Fix types of list items that are \"before\" the selected blocks.\n\n          _fixType(blocks, true, lowestIndent); // Fix types of list items that are \"after\" the selected blocks.\n\n\n          _fixType(blocks, false, lowestIndent);\n        } // Phew! Now it will be easier :).\n        // For each block element that was in the selection, we will either: turn it to list item,\n        // turn it to paragraph, or change it's type. Or leave it as it is.\n        // Do it in reverse as there might be multiple blocks (same as with changing indents).\n\n\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n          for (var _iterator3 = blocks.reverse()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n            var element = _step3.value;\n\n            if (turnOff && element.name == 'listItem') {\n              // We are turning off and the element is a `listItem` - it should be converted to `paragraph`.\n              // List item specific attributes are removed by post fixer.\n              writer.rename(element, 'paragraph');\n            } else if (!turnOff && element.name != 'listItem') {\n              // We are turning on and the element is not a `listItem` - it should be converted to `listItem`.\n              // The order of operations is important to keep model in correct state.\n              writer.setAttributes({\n                listType: _this2.type,\n                listIndent: 0\n              }, element);\n              writer.rename(element, 'listItem');\n            } else if (!turnOff && element.name == 'listItem' && element.getAttribute('listType') != _this2.type) {\n              // We are turning on and the element is a `listItem` but has different type - change it's type and\n              // type of it's all siblings that have same indent.\n              writer.setAttribute('listType', _this2.type, element);\n            }\n          }\n        } catch (err) {\n          _didIteratorError3 = true;\n          _iteratorError3 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n              _iterator3[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError3) {\n              throw _iteratorError3;\n            }\n          }\n        }\n      });\n    }\n    /**\n     * Checks the command's {@link #value}.\n     *\n     * @private\n     * @returns {Boolean} The current value.\n     */\n\n  }, {\n    key: \"_getValue\",\n    value: function _getValue() {\n      // Check whether closest `listItem` ancestor of the position has a correct type.\n      var listItem = first(this.editor.model.document.selection.getSelectedBlocks());\n      return !!listItem && listItem.is('listItem') && listItem.getAttribute('listType') == this.type;\n    }\n    /**\n     * Checks whether the command can be enabled in the current context.\n     *\n     * @private\n     * @returns {Boolean} Whether the command should be enabled.\n     */\n\n  }, {\n    key: \"_checkEnabled\",\n    value: function _checkEnabled() {\n      // If command value is true it means that we are in list item, so the command should be enabled.\n      if (this.value) {\n        return true;\n      }\n\n      var selection = this.editor.model.document.selection;\n      var schema = this.editor.model.schema;\n      var firstBlock = first(selection.getSelectedBlocks());\n\n      if (!firstBlock) {\n        return false;\n      } // Otherwise, check if list item can be inserted at the position start.\n\n\n      return checkCanBecomeListItem(firstBlock, schema);\n    }\n  }]);\n\n  return ListCommand;\n}(Command); // Helper function used when one or more list item have their type changed. Fixes type of other list items\n// that are affected by the change (are in same lists) but are not directly in selection. The function got extracted\n// not to duplicated code, as same fix has to be performed before and after selection.\n//\n// @param {Array.<module:engine/model/node~Node>} blocks Blocks that are in selection.\n// @param {Boolean} isBackward Specified whether fix will be applied for blocks before first selected block (`true`)\n// or blocks after last selected block (`false`).\n// @param {Number} lowestIndent Lowest indent among selected blocks.\n\n\nexport { ListCommand as default };\n\nfunction _fixType(blocks, isBackward, lowestIndent) {\n  // We need to check previous sibling of first changed item and next siblings of last changed item.\n  var startingItem = isBackward ? blocks[0] : blocks[blocks.length - 1];\n\n  if (startingItem.is('listItem')) {\n    var item = startingItem[isBackward ? 'previousSibling' : 'nextSibling']; // During processing items, keeps the lowest indent of already processed items.\n    // This saves us from changing too many items.\n    // Following example is for going forward as it is easier to read, however same applies to going backward.\n    // * ------\n    //   * ------\n    //     * --[---\n    //   * ------\t\t<-- `lowestIndent` should be 1\n    //     * --]---\t\t<-- `startingItem`, `currentIndent` = 2, `lowestIndent` == 1\n    //     * ------\t\t<-- should be fixed, `indent` == 2 == `currentIndent`\n    //   * ------\t\t<-- should be fixed, set `currentIndent` to 1, `indent` == 1 == `currentIndent`\n    //     * ------\t\t<-- should not be fixed, item is in different list, `indent` = 2, `indent` != `currentIndent`\n    //   * ------\t\t<-- should be fixed, `indent` == 1 == `currentIndent`\n    // * ------\t\t\t<-- break loop (`indent` < `lowestIndent`)\n\n    var currentIndent = startingItem.getAttribute('listIndent'); // Look back until a list item with indent lower than reference `lowestIndent`.\n    // That would be the parent of nested sublist which contains item having `lowestIndent`.\n\n    while (item && item.is('listItem') && item.getAttribute('listIndent') >= lowestIndent) {\n      if (currentIndent > item.getAttribute('listIndent')) {\n        currentIndent = item.getAttribute('listIndent');\n      } // Found an item that is in the same nested sublist.\n\n\n      if (item.getAttribute('listIndent') == currentIndent) {\n        // Just add the item to selected blocks like it was selected by the user.\n        blocks[isBackward ? 'unshift' : 'push'](item);\n      }\n\n      item = item[isBackward ? 'previousSibling' : 'nextSibling'];\n    }\n  }\n} // Checks whether the given block can be replaced by a listItem.\n//\n// @private\n// @param {module:engine/model/element~Element} block A block to be tested.\n// @param {module:engine/model/schema~Schema} schema The schema of the document.\n// @returns {Boolean}\n\n\nfunction checkCanBecomeListItem(block, schema) {\n  return schema.checkChild(block.parent, 'listItem') && !schema.isObject(block);\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module list/indentcommand\n */\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport first from '@ckeditor/ckeditor5-utils/src/first';\n/**\n * The list indent command. It is used by the {@link module:list/list~List list feature}.\n *\n * @extends module:core/command~Command\n */\n\nvar IndentCommand =\n/*#__PURE__*/\nfunction (_Command) {\n  _inherits(IndentCommand, _Command);\n\n  /**\n   * Creates an instance of the command.\n   *\n   * @param {module:core/editor/editor~Editor} editor The editor instance.\n   * @param {'forward'|'backward'} indentDirection The direction of indent. If it is equal to `backward`, the command\n   * will outdent a list item.\n   */\n  function IndentCommand(editor, indentDirection) {\n    var _this;\n\n    _classCallCheck(this, IndentCommand);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(IndentCommand).call(this, editor));\n    /**\n     * Determines by how much the command will change the list item's indent attribute.\n     *\n     * @readonly\n     * @private\n     * @member {Number}\n     */\n\n    _this._indentBy = indentDirection == 'forward' ? 1 : -1;\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(IndentCommand, [{\n    key: \"refresh\",\n    value: function refresh() {\n      this.isEnabled = this._checkEnabled();\n    }\n    /**\n     * Indents or outdents (depends on the {@link #constructor}'s `indentDirection` parameter) selected list items.\n     *\n     * @fires execute\n     */\n\n  }, {\n    key: \"execute\",\n    value: function execute() {\n      var _this2 = this;\n\n      var model = this.editor.model;\n      var doc = model.document;\n      var itemsToChange = Array.from(doc.selection.getSelectedBlocks());\n      model.change(function (writer) {\n        var lastItem = itemsToChange[itemsToChange.length - 1]; // Indenting a list item should also indent all the items that are already sub-items of indented item.\n\n        var next = lastItem.nextSibling; // Check all items after last indented item, as long as their indent is bigger than indent of that item.\n\n        while (next && next.name == 'listItem' && next.getAttribute('listIndent') > lastItem.getAttribute('listIndent')) {\n          itemsToChange.push(next);\n          next = next.nextSibling;\n        } // We need to be sure to keep model in correct state after each small change, because converters\n        // bases on that state and assumes that model is correct.\n        // Because of that, if the command outdents items, we will outdent them starting from the last item, as\n        // it is safer.\n\n\n        if (_this2._indentBy < 0) {\n          itemsToChange = itemsToChange.reverse();\n        }\n\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = itemsToChange[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var item = _step.value;\n\n            var indent = item.getAttribute('listIndent') + _this2._indentBy; // If indent is lower than 0, it means that the item got outdented when it was not indented.\n            // This means that we need to convert that list item to paragraph.\n\n\n            if (indent < 0) {\n              // To keep the model as correct as possible, first rename listItem, then remove attributes,\n              // as listItem without attributes is very incorrect and will cause problems in converters.\n              // No need to remove attributes, will be removed by post fixer.\n              writer.rename(item, 'paragraph');\n            } // If indent is >= 0, change the attribute value.\n            else {\n                writer.setAttribute('listIndent', indent, item);\n              }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n              _iterator[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      });\n    }\n    /**\n     * Checks whether the command can be enabled in the current context.\n     *\n     * @private\n     * @returns {Boolean} Whether the command should be enabled.\n     */\n\n  }, {\n    key: \"_checkEnabled\",\n    value: function _checkEnabled() {\n      // Check whether any of position's ancestor is a list item.\n      var listItem = first(this.editor.model.document.selection.getSelectedBlocks()); // If selection is not in a list item, the command is disabled.\n\n      if (!listItem || !listItem.is('listItem')) {\n        return false;\n      }\n\n      if (this._indentBy > 0) {\n        // Cannot indent first item in it's list. Check if before `listItem` is a list item that is in same list.\n        // To be in the same list, the item has to have same attributes and cannot be \"split\" by an item with lower indent.\n        var indent = listItem.getAttribute('listIndent');\n        var type = listItem.getAttribute('listType');\n        var prev = listItem.previousSibling;\n\n        while (prev && prev.is('listItem') && prev.getAttribute('listIndent') >= indent) {\n          if (prev.getAttribute('listIndent') == indent) {\n            // The item is on the same level.\n            // If it has same type, it means that we found a preceding sibling from the same list.\n            // If it does not have same type, it means that `listItem` is on different list (this can happen only\n            // on top level lists, though).\n            return prev.getAttribute('listType') == type;\n          }\n\n          prev = prev.previousSibling;\n        } // Could not find similar list item, this means that `listItem` is first in its list.\n\n\n        return false;\n      } // If we are outdenting it is enough to be in list item. Every list item can always be outdented.\n\n\n      return true;\n    }\n  }]);\n\n  return IndentCommand;\n}(Command);\n\nexport { IndentCommand as default };","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module list/utils\n */\nimport { getFillerOffset } from '@ckeditor/ckeditor5-engine/src/view/containerelement';\n/**\n * Creates list item {@link module:engine/view/containerelement~ContainerElement}.\n *\n * @param {module:engine/view/downcastwriter~DowncastWriter} writer The writer instance.\n * @returns {module:engine/view/containerelement~ContainerElement}\n */\n\nexport function createViewListItemElement(writer) {\n  var viewItem = writer.createContainerElement('li');\n  viewItem.getFillerOffset = getListItemFillerOffset;\n  return viewItem;\n} // Implementation of getFillerOffset for view list item element.\n//\n// @returns {Number|null} Block filler offset or `null` if block filler is not needed.\n\nfunction getListItemFillerOffset() {\n  var hasOnlyLists = !this.isEmpty && (this.getChild(0).name == 'ul' || this.getChild(0).name == 'ol');\n\n  if (this.isEmpty || hasOnlyLists) {\n    return 0;\n  }\n\n  return getFillerOffset.call(this);\n}","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module list/converters\n */\nimport { createViewListItemElement } from './utils';\nimport TreeWalker from '@ckeditor/ckeditor5-engine/src/model/treewalker';\n/**\n * A model-to-view converter for `listItem` model element insertion.\n *\n * It creates a `<ul><li></li><ul>` (or `<ol>`) view structure out of a `listItem` model element, inserts it at the correct\n * position, and merges the list with surrounding lists (if available).\n *\n * @see module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:insert\n * @param {module:engine/model/model~Model} model Model instance.\n * @returns {Function} Returns a conversion callback.\n */\n\nexport function modelViewInsertion(model) {\n  return function (evt, data, conversionApi) {\n    var consumable = conversionApi.consumable;\n\n    if (!consumable.test(data.item, 'insert') || !consumable.test(data.item, 'attribute:listType') || !consumable.test(data.item, 'attribute:listIndent')) {\n      return;\n    }\n\n    consumable.consume(data.item, 'insert');\n    consumable.consume(data.item, 'attribute:listType');\n    consumable.consume(data.item, 'attribute:listIndent');\n    var modelItem = data.item;\n    var viewItem = generateLiInUl(modelItem, conversionApi);\n    injectViewList(modelItem, viewItem, conversionApi, model);\n  };\n}\n/**\n * A model-to-view converter for `listItem` model element removal.\n *\n * @see module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:remove\n * @param {module:engine/model/model~Model} model Model instance.\n * @returns {Function} Returns a conversion callback.\n */\n\nexport function modelViewRemove(model) {\n  return function (evt, data, conversionApi) {\n    var viewStart = conversionApi.mapper.toViewPosition(data.position).getLastMatchingPosition(function (value) {\n      return !value.item.is('li');\n    });\n    var viewItem = viewStart.nodeAfter;\n    var viewWriter = conversionApi.writer; // 1. Break the container after and before the list item.\n    // This will create a view list with one view list item - the one to remove.\n\n    viewWriter.breakContainer(viewWriter.createPositionBefore(viewItem));\n    viewWriter.breakContainer(viewWriter.createPositionAfter(viewItem)); // 2. Remove the list with the item to remove.\n\n    var viewList = viewItem.parent;\n    var viewListPrev = viewList.previousSibling;\n    var removeRange = viewWriter.createRangeOn(viewList);\n    var removed = viewWriter.remove(removeRange); // 3. Merge the whole created by breaking and removing the list.\n\n    if (viewListPrev && viewListPrev.nextSibling) {\n      mergeViewLists(viewWriter, viewListPrev, viewListPrev.nextSibling);\n    } // 4. Bring back nested list that was in the removed <li>.\n\n\n    var modelItem = conversionApi.mapper.toModelElement(viewItem);\n    hoistNestedLists(modelItem.getAttribute('listIndent') + 1, data.position, removeRange.start, viewItem, conversionApi, model); // 5. Unbind removed view item and all children.\n\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = viewWriter.createRangeIn(removed).getItems()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var child = _step.value;\n        conversionApi.mapper.unbindViewElement(child);\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n          _iterator[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    evt.stop();\n  };\n}\n/**\n * A model-to-view converter for `type` attribute change on `listItem` model element.\n *\n * This change means that `<li>` elements parent changes from `<ul>` to `<ol>` (or vice versa). This is accomplished\n * by breaking view elements, changing their name and merging them.\n *\n * @see module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:attribute\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Object} data Additional information about the change.\n * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface.\n */\n\nexport function modelViewChangeType(evt, data, conversionApi) {\n  if (!conversionApi.consumable.consume(data.item, 'attribute:listType')) {\n    return;\n  }\n\n  var viewItem = conversionApi.mapper.toViewElement(data.item);\n  var viewWriter = conversionApi.writer; // 1. Break the container after and before the list item.\n  // This will create a view list with one view list item -- the one that changed type.\n\n  viewWriter.breakContainer(viewWriter.createPositionBefore(viewItem));\n  viewWriter.breakContainer(viewWriter.createPositionAfter(viewItem)); // 2. Change name of the view list that holds the changed view item.\n  // We cannot just change name property, because that would not render properly.\n\n  var viewList = viewItem.parent;\n  var listName = data.attributeNewValue == 'numbered' ? 'ol' : 'ul';\n  viewList = viewWriter.rename(listName, viewList); // 3. Merge the changed view list with other lists, if possible.\n\n  mergeViewLists(viewWriter, viewList, viewList.nextSibling);\n  mergeViewLists(viewWriter, viewList.previousSibling, viewList); // 4. Consumable insertion of children inside the item. They are already handled by re-building the item in view.\n\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = data.item.getChildren()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var child = _step2.value;\n      conversionApi.consumable.consume(child, 'insert');\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n        _iterator2[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n}\n/**\n * A model-to-view converter for `listIndent` attribute change on `listItem` model element.\n *\n * @see module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:attribute\n * @param {module:engine/model/model~Model} model Model instance.\n * @returns {Function} Returns a conversion callback.\n */\n\nexport function modelViewChangeIndent(model) {\n  return function (evt, data, conversionApi) {\n    if (!conversionApi.consumable.consume(data.item, 'attribute:listIndent')) {\n      return;\n    }\n\n    var viewItem = conversionApi.mapper.toViewElement(data.item);\n    var viewWriter = conversionApi.writer; // 1. Break the container after and before the list item.\n    // This will create a view list with one view list item -- the one that changed type.\n\n    viewWriter.breakContainer(viewWriter.createPositionBefore(viewItem));\n    viewWriter.breakContainer(viewWriter.createPositionAfter(viewItem)); // 2. Extract view list with changed view list item and merge \"hole\" possibly created by breaking and removing elements.\n\n    var viewList = viewItem.parent;\n    var viewListPrev = viewList.previousSibling;\n    var removeRange = viewWriter.createRangeOn(viewList);\n    viewWriter.remove(removeRange);\n\n    if (viewListPrev && viewListPrev.nextSibling) {\n      mergeViewLists(viewWriter, viewListPrev, viewListPrev.nextSibling);\n    } // 3. Bring back nested list that was in the removed <li>.\n\n\n    hoistNestedLists(data.attributeOldValue + 1, data.range.start, removeRange.start, viewItem, conversionApi, model); // 4. Inject view list like it is newly inserted.\n\n    injectViewList(data.item, viewItem, conversionApi, model); // 5. Consume insertion of children inside the item. They are already handled by re-building the item in view.\n\n    var _iteratorNormalCompletion3 = true;\n    var _didIteratorError3 = false;\n    var _iteratorError3 = undefined;\n\n    try {\n      for (var _iterator3 = data.item.getChildren()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n        var child = _step3.value;\n        conversionApi.consumable.consume(child, 'insert');\n      }\n    } catch (err) {\n      _didIteratorError3 = true;\n      _iteratorError3 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n          _iterator3[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError3) {\n          throw _iteratorError3;\n        }\n      }\n    }\n  };\n}\n/**\n * A special model-to-view converter introduced by the {@link module:list/list~List list feature}. This converter is fired for\n * insert change of every model item, and should be fired before the actual converter. The converter checks whether the inserted\n * model item is a non-`listItem` element. If it is, and it is inserted inside a view list, the converter breaks the\n * list so the model element is inserted to the view parent element corresponding to its model parent element.\n *\n * The converter prevents such situations:\n *\n *\t\t// Model:                        // View:\n *\t\t<listItem>foo</listItem>         <ul>\n *\t\t<listItem>bar</listItem>             <li>foo</li>\n *\t\t                                     <li>bar</li>\n *\t\t                                 </ul>\n *\n *\t\t// After change:                 // Correct view guaranteed by this converter:\n *\t\t<listItem>foo</listItem>         <ul><li>foo</li></ul><p>xxx</p><ul><li>bar</li></ul>\n *\t\t<paragraph>xxx</paragraph>       // Instead of this wrong view state:\n *\t\t<listItem>bar</listItem>         <ul><li>foo</li><p>xxx</p><li>bar</li></ul>\n *\n * @see module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:insert\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Object} data Additional information about the change.\n * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface.\n */\n\nexport function modelViewSplitOnInsert(evt, data, conversionApi) {\n  if (data.item.name != 'listItem') {\n    var viewPosition = conversionApi.mapper.toViewPosition(data.range.start);\n    var viewWriter = conversionApi.writer;\n    var lists = []; // Break multiple ULs/OLs if there are.\n    //\n    // Imagine following list:\n    //\n    // 1 --------\n    //   1.1 --------\n    //     1.1.1 --------\n    //     1.1.2 --------\n    //     1.1.3 --------\n    //       1.1.3.1 --------\n    //   1.2 --------\n    //     1.2.1 --------\n    // 2 --------\n    //\n    // Insert paragraph after item 1.1.1:\n    //\n    // 1 --------\n    //   1.1 --------\n    //     1.1.1 --------\n    //\n    // Lorem ipsum.\n    //\n    //     1.1.2 --------\n    //     1.1.3 --------\n    //       1.1.3.1 --------\n    //   1.2 --------\n    //     1.2.1 --------\n    // 2 --------\n    //\n    // In this case 1.1.2 has to become beginning of a new list.\n    // We need to break list before 1.1.2 (obvious), then we need to break list also before 1.2.\n    // Then we need to move those broken pieces one after another and merge:\n    //\n    // 1 --------\n    //   1.1 --------\n    //     1.1.1 --------\n    //\n    // Lorem ipsum.\n    //\n    // 1.1.2 --------\n    //   1.1.3 --------\n    //     1.1.3.1 --------\n    // 1.2 --------\n    //   1.2.1 --------\n    // 2 --------\n    //\n\n    while (viewPosition.parent.name == 'ul' || viewPosition.parent.name == 'ol') {\n      viewPosition = viewWriter.breakContainer(viewPosition);\n\n      if (viewPosition.parent.name != 'li') {\n        break;\n      } // Remove lists that are after inserted element.\n      // They will be brought back later, below the inserted element.\n\n\n      var removeStart = viewPosition;\n      var removeEnd = viewWriter.createPositionAt(viewPosition.parent, 'end'); // Don't remove if there is nothing to remove.\n\n      if (!removeStart.isEqual(removeEnd)) {\n        var removed = viewWriter.remove(viewWriter.createRange(removeStart, removeEnd));\n        lists.push(removed);\n      }\n\n      viewPosition = viewWriter.createPositionAfter(viewPosition.parent);\n    } // Bring back removed lists.\n\n\n    if (lists.length > 0) {\n      for (var i = 0; i < lists.length; i++) {\n        var previousList = viewPosition.nodeBefore;\n        var insertedRange = viewWriter.insert(viewPosition, lists[i]);\n        viewPosition = insertedRange.end; // Don't merge first list! We want a split in that place (this is why this converter is introduced).\n\n        if (i > 0) {\n          var mergePos = mergeViewLists(viewWriter, previousList, previousList.nextSibling); // If `mergePos` is in `previousList` it means that the lists got merged.\n          // In this case, we need to fix insert position.\n\n          if (mergePos && mergePos.parent == previousList) {\n            viewPosition.offset--;\n          }\n        }\n      } // Merge last inserted list with element after it.\n\n\n      mergeViewLists(viewWriter, viewPosition.nodeBefore, viewPosition.nodeAfter);\n    }\n  }\n}\n/**\n * A special model-to-view converter introduced by the {@link module:list/list~List list feature}. This converter takes care of\n * merging view lists after something is removed or moved from near them.\n *\n * Example:\n *\n *\t\t// Model:                        // View:\n *\t\t<listItem>foo</listItem>         <ul><li>foo</li></ul>\n *\t\t<paragraph>xxx</paragraph>       <p>xxx</p>\n *\t\t<listItem>bar</listItem>         <ul><li>bar</li></ul>\n *\n *\t\t// After change:                 // Correct view guaranteed by this converter:\n *\t\t<listItem>foo</listItem>         <ul>\n *\t\t<listItem>bar</listItem>             <li>foo</li>\n *\t\t                                     <li>bar</li>\n *\t\t                                 </ul>\n *\n * @see module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:remove\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Object} data Additional information about the change.\n * @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi Conversion interface.\n */\n\nexport function modelViewMergeAfter(evt, data, conversionApi) {\n  var viewPosition = conversionApi.mapper.toViewPosition(data.position);\n  var viewItemPrev = viewPosition.nodeBefore;\n  var viewItemNext = viewPosition.nodeAfter; // Merge lists if something (remove, move) was done from inside of list.\n  // Merging will be done only if both items are view lists of the same type.\n  // The check is done inside the helper function.\n\n  mergeViewLists(conversionApi.writer, viewItemPrev, viewItemNext);\n}\n/**\n * A view-to-model converter that converts `<li>` view elements into `listItem` model elements.\n *\n * To set correct values of the `listType` and `listIndent` attributes the converter:\n * * checks `<li>`'s parent,\n * * stores and increases the `conversionApi.store.indent` value when `<li>`'s sub-items are converted.\n *\n * @see module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:element\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Object} data An object containing conversion input and a placeholder for conversion output and possibly other values.\n * @param {module:engine/conversion/upcastdispatcher~UpcastConversionApi} conversionApi Conversion interface to be used by the callback.\n */\n\nexport function viewModelConverter(evt, data, conversionApi) {\n  if (conversionApi.consumable.consume(data.viewItem, {\n    name: true\n  })) {\n    var writer = conversionApi.writer;\n    var conversionStore = this.conversionApi.store; // 1. Create `listItem` model element.\n\n    var listItem = writer.createElement('listItem'); // 2. Handle `listItem` model element attributes.\n\n    conversionStore.indent = conversionStore.indent || 0;\n    writer.setAttribute('listIndent', conversionStore.indent, listItem); // Set 'bulleted' as default. If this item is pasted into a context,\n\n    var type = data.viewItem.parent && data.viewItem.parent.name == 'ol' ? 'numbered' : 'bulleted';\n    writer.setAttribute('listType', type, listItem); // `listItem`s created recursively should have bigger indent.\n\n    conversionStore.indent++; // Try to find allowed parent for list item.\n\n    var splitResult = conversionApi.splitToAllowedParent(listItem, data.modelCursor); // When there is no allowed parent it means that list item cannot be converted at current model position\n    // and in any of position ancestors.\n\n    if (!splitResult) {\n      return;\n    }\n\n    writer.insert(listItem, splitResult.position);\n    var nextPosition = viewToModelListItemChildrenConverter(listItem, data.viewItem.getChildren(), conversionApi);\n    conversionStore.indent--; // Result range starts before the first item and ends after the last.\n\n    data.modelRange = writer.createRange(data.modelCursor, nextPosition); // When `data.modelCursor` parent had to be split to insert list item...\n\n    if (splitResult.cursorParent) {\n      // Continue conversion in the split element.\n      data.modelCursor = writer.createPositionAt(splitResult.cursorParent, 0);\n    } else {\n      // Otherwise continue conversion after the last list item.\n      data.modelCursor = data.modelRange.end;\n    }\n  }\n}\n/**\n * A view-to-model converter for `<ul>` and `<ol>` view elements that cleans the input view of garbage.\n * This is mostly to clean whitespaces from between `<li>` view elements inside the view list element, however, also\n * incorrect data can be cleared if the view was incorrect.\n *\n * @see module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:element\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Object} data An object containing conversion input and a placeholder for conversion output and possibly other values.\n * @param {module:engine/conversion/upcastdispatcher~UpcastConversionApi} conversionApi Conversion interface to be used by the callback.\n */\n\nexport function cleanList(evt, data, conversionApi) {\n  if (conversionApi.consumable.test(data.viewItem, {\n    name: true\n  })) {\n    // Caching children because when we start removing them iterating fails.\n    var children = Array.from(data.viewItem.getChildren());\n\n    for (var _i = 0, _children = children; _i < _children.length; _i++) {\n      var child = _children[_i];\n\n      if (!child.is('li')) {\n        child._remove();\n      }\n    }\n  }\n}\n/**\n * A view-to-model converter for `<li>` elements that cleans whitespace formatting from the input view.\n *\n * @see module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:element\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Object} data An object containing conversion input and a placeholder for conversion output and possibly other values.\n * @param {module:engine/conversion/upcastdispatcher~UpcastConversionApi} conversionApi Conversion interface to be used by the callback.\n */\n\nexport function cleanListItem(evt, data, conversionApi) {\n  if (conversionApi.consumable.test(data.viewItem, {\n    name: true\n  })) {\n    if (data.viewItem.childCount === 0) {\n      return;\n    }\n\n    var children = _toConsumableArray(data.viewItem.getChildren());\n\n    var foundList = false;\n    var firstNode = true;\n    var _iteratorNormalCompletion4 = true;\n    var _didIteratorError4 = false;\n    var _iteratorError4 = undefined;\n\n    try {\n      for (var _iterator4 = children[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n        var child = _step4.value;\n\n        if (foundList && !child.is('ul') && !child.is('ol')) {\n          child._remove();\n        }\n\n        if (child.is('text')) {\n          // If this is the first node and it's a text node, left-trim it.\n          if (firstNode) {\n            child._data = child.data.replace(/^\\s+/, '');\n          } // If this is the last text node before <ul> or <ol>, right-trim it.\n\n\n          if (!child.nextSibling || child.nextSibling.is('ul') || child.nextSibling.is('ol')) {\n            child._data = child.data.replace(/\\s+$/, '');\n          }\n        } else if (child.is('ul') || child.is('ol')) {\n          // If this is a <ul> or <ol>, do not process it, just mark that we already visited list element.\n          foundList = true;\n        }\n\n        firstNode = false;\n      }\n    } catch (err) {\n      _didIteratorError4 = true;\n      _iteratorError4 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion4 && _iterator4[\"return\"] != null) {\n          _iterator4[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError4) {\n          throw _iteratorError4;\n        }\n      }\n    }\n  }\n}\n/**\n * Returns callback for model position to view position mapping for {@link module:engine/conversion/mapper~Mapper}. The callback fixes\n * positions between `listItem` elements that would be incorrectly mapped because of how list items are represented in model\n * and view.\n *\n * @see module:engine/conversion/mapper~Mapper#event:modelToViewPosition\n * @param {module:engine/view/view~View} view A view instance.\n * @returns {Function}\n */\n\nexport function modelToViewPosition(view) {\n  return function (evt, data) {\n    if (data.isPhantom) {\n      return;\n    }\n\n    var modelItem = data.modelPosition.nodeBefore;\n\n    if (modelItem && modelItem.is('listItem')) {\n      var viewItem = data.mapper.toViewElement(modelItem);\n      var topmostViewList = viewItem.getAncestors().find(function (element) {\n        return element.is('ul') || element.is('ol');\n      });\n      var walker = view.createPositionAt(viewItem, 0).getWalker();\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = walker[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var value = _step5.value;\n\n          if (value.type == 'elementStart' && value.item.is('li')) {\n            data.viewPosition = value.previousPosition;\n            break;\n          } else if (value.type == 'elementEnd' && value.item == topmostViewList) {\n            data.viewPosition = value.nextPosition;\n            break;\n          }\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5[\"return\"] != null) {\n            _iterator5[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n    }\n  };\n}\n/**\n * The callback for view position to model position mapping for {@link module:engine/conversion/mapper~Mapper}. The callback fixes\n * positions between `<li>` elements that would be incorrectly mapped because of how list items are represented in model\n * and view.\n *\n * @see module:engine/conversion/mapper~Mapper#event:viewToModelPosition\n * @param {module:engine/model/model~Model} model Model instance.\n * @returns {Function} Returns a conversion callback.\n */\n\nexport function viewToModelPosition(model) {\n  return function (evt, data) {\n    var viewPos = data.viewPosition;\n    var viewParent = viewPos.parent;\n    var mapper = data.mapper;\n\n    if (viewParent.name == 'ul' || viewParent.name == 'ol') {\n      // Position is directly in <ul> or <ol>.\n      if (!viewPos.isAtEnd) {\n        // If position is not at the end, it must be before <li>.\n        // Get that <li>, map it to `listItem` and set model position before that `listItem`.\n        var modelNode = mapper.toModelElement(viewPos.nodeAfter);\n        data.modelPosition = model.createPositionBefore(modelNode);\n      } else {\n        // Position is at the end of <ul> or <ol>, so there is no <li> after it to be mapped.\n        // There is <li> before the position, but we cannot just map it to `listItem` and set model position after it,\n        // because that <li> may contain nested items.\n        // We will check \"model length\" of that <li>, in other words - how many `listItem`s are in that <li>.\n        var _modelNode = mapper.toModelElement(viewPos.nodeBefore);\n\n        var modelLength = mapper.getModelLength(viewPos.nodeBefore); // Then we get model position before mapped `listItem` and shift it accordingly.\n\n        data.modelPosition = model.createPositionBefore(_modelNode).getShiftedBy(modelLength);\n      }\n\n      evt.stop();\n    } else if (viewParent.name == 'li' && viewPos.nodeBefore && (viewPos.nodeBefore.name == 'ul' || viewPos.nodeBefore.name == 'ol')) {\n      // In most cases when view position is in <li> it is in text and this is a correct position.\n      // However, if position is after <ul> or <ol> we have to fix it -- because in model <ul>/<ol> are not in the `listItem`.\n      var _modelNode2 = mapper.toModelElement(viewParent); // Check all <ul>s and <ol>s that are in the <li> but before mapped position.\n      // Get model length of those elements and then add it to the offset of `listItem` mapped to the original <li>.\n\n\n      var _modelLength = 1; // Starts from 1 because the original <li> has to be counted in too.\n\n      var viewList = viewPos.nodeBefore;\n\n      while (viewList && (viewList.is('ul') || viewList.is('ol'))) {\n        _modelLength += mapper.getModelLength(viewList);\n        viewList = viewList.previousSibling;\n      }\n\n      data.modelPosition = model.createPositionBefore(_modelNode2).getShiftedBy(_modelLength);\n      evt.stop();\n    }\n  };\n}\n/**\n * Post-fixer that reacts to changes on document and fixes incorrect model states.\n *\n * In an example below, there is a correct list structure.\n * Then the middle element will be removed so the list structure will become incorrect:\n *\n *\t\t<listItem listType=\"bulleted\" listIndent=0>Item 1</listItem>\n *\t\t<listItem listType=\"bulleted\" listIndent=1>Item 2</listItem>   <--- this is removed.\n *\t\t<listItem listType=\"bulleted\" listIndent=2>Item 3</listItem>\n *\n * List structure after the middle element removed:\n *\n * \t\t<listItem listType=\"bulleted\" listIndent=0>Item 1</listItem>\n *\t\t<listItem listType=\"bulleted\" listIndent=2>Item 3</listItem>\n *\n * Should become:\n *\n *\t\t<listItem listType=\"bulleted\" listIndent=0>Item 1</listItem>\n *\t\t<listItem listType=\"bulleted\" listIndent=1>Item 3</listItem>   <--- note that indent got post-fixed.\n *\n * @param {module:engine/model/model~Model} model The data model.\n * @param {module:engine/model/writer~Writer} writer The writer to do changes with.\n * @returns {Boolean} `true` if any change has been applied, `false` otherwise.\n */\n\nexport function modelChangePostFixer(model, writer) {\n  var changes = model.document.differ.getChanges();\n  var itemToListHead = new Map();\n  var applied = false;\n  var _iteratorNormalCompletion6 = true;\n  var _didIteratorError6 = false;\n  var _iteratorError6 = undefined;\n\n  try {\n    for (var _iterator6 = changes[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n      var entry = _step6.value;\n\n      if (entry.type == 'insert' && entry.name == 'listItem') {\n        _addListToFix(entry.position);\n      } else if (entry.type == 'insert' && entry.name != 'listItem') {\n        if (entry.name != '$text') {\n          // In case of renamed element.\n          var item = entry.position.nodeAfter;\n\n          if (item.hasAttribute('listIndent')) {\n            writer.removeAttribute('listIndent', item);\n            applied = true;\n          }\n\n          if (item.hasAttribute('listType')) {\n            writer.removeAttribute('listType', item);\n            applied = true;\n          }\n        }\n\n        var posAfter = entry.position.getShiftedBy(entry.length);\n\n        _addListToFix(posAfter);\n      } else if (entry.type == 'remove' && entry.name == 'listItem') {\n        _addListToFix(entry.position);\n      } else if (entry.type == 'attribute' && entry.attributeKey == 'listIndent') {\n        _addListToFix(entry.range.start);\n      } else if (entry.type == 'attribute' && entry.attributeKey == 'listType') {\n        _addListToFix(entry.range.start);\n      }\n    }\n  } catch (err) {\n    _didIteratorError6 = true;\n    _iteratorError6 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion6 && _iterator6[\"return\"] != null) {\n        _iterator6[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError6) {\n        throw _iteratorError6;\n      }\n    }\n  }\n\n  var _iteratorNormalCompletion7 = true;\n  var _didIteratorError7 = false;\n  var _iteratorError7 = undefined;\n\n  try {\n    for (var _iterator7 = itemToListHead.values()[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n      var listHead = _step7.value;\n\n      _fixListIndents(listHead);\n\n      _fixListTypes(listHead);\n    }\n  } catch (err) {\n    _didIteratorError7 = true;\n    _iteratorError7 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion7 && _iterator7[\"return\"] != null) {\n        _iterator7[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError7) {\n        throw _iteratorError7;\n      }\n    }\n  }\n\n  return applied;\n\n  function _addListToFix(position) {\n    var prev = position.nodeBefore;\n\n    if (!prev || !prev.is('listItem')) {\n      var item = position.nodeAfter;\n\n      if (item && item.is('listItem')) {\n        itemToListHead.set(item, item);\n      }\n    } else {\n      var listHead = prev;\n\n      if (itemToListHead.has(listHead)) {\n        return;\n      }\n\n      while (listHead.previousSibling && listHead.previousSibling.is('listItem')) {\n        listHead = listHead.previousSibling;\n\n        if (itemToListHead.has(listHead)) {\n          return;\n        }\n      }\n\n      itemToListHead.set(position.nodeBefore, listHead);\n    }\n  }\n\n  function _fixListIndents(item) {\n    var maxIndent = 0;\n    var fixBy = null;\n\n    while (item && item.is('listItem')) {\n      var itemIndent = item.getAttribute('listIndent');\n\n      if (itemIndent > maxIndent) {\n        var newIndent = void 0;\n\n        if (fixBy === null) {\n          fixBy = itemIndent - maxIndent;\n          newIndent = maxIndent;\n        } else {\n          if (fixBy > itemIndent) {\n            fixBy = itemIndent;\n          }\n\n          newIndent = itemIndent - fixBy;\n        }\n\n        writer.setAttribute('listIndent', newIndent, item);\n        applied = true;\n      } else {\n        fixBy = null;\n        maxIndent = item.getAttribute('listIndent') + 1;\n      }\n\n      item = item.nextSibling;\n    }\n  }\n\n  function _fixListTypes(item) {\n    var typesStack = [];\n    var prev = null;\n\n    while (item && item.is('listItem')) {\n      var itemIndent = item.getAttribute('listIndent');\n\n      if (prev && prev.getAttribute('listIndent') > itemIndent) {\n        typesStack = typesStack.slice(0, itemIndent + 1);\n      }\n\n      if (itemIndent != 0) {\n        if (typesStack[itemIndent]) {\n          var type = typesStack[itemIndent];\n\n          if (item.getAttribute('listType') != type) {\n            writer.setAttribute('listType', type, item);\n            applied = true;\n          }\n        } else {\n          typesStack[itemIndent] = item.getAttribute('listType');\n        }\n      }\n\n      prev = item;\n      item = item.nextSibling;\n    }\n  }\n}\n/**\n * A fixer for pasted content that includes list items.\n *\n * It fixes indentation of pasted list items so the pasted items match correctly to the context they are pasted into.\n *\n * Example:\n *\n *\t\t<listItem listType=\"bulleted\" listIndent=0>A</listItem>\n *\t\t<listItem listType=\"bulleted\" listIndent=1>B^</listItem>\n *\t\t// At ^ paste:  <listItem listType=\"bulleted\" listIndent=4>X</listItem>\n *\t\t//              <listItem listType=\"bulleted\" listIndent=5>Y</listItem>\n *\t\t<listItem listType=\"bulleted\" listIndent=2>C</listItem>\n *\n * Should become:\n *\n *\t\t<listItem listType=\"bulleted\" listIndent=0>A</listItem>\n *\t\t<listItem listType=\"bulleted\" listIndent=1>BX</listItem>\n *\t\t<listItem listType=\"bulleted\" listIndent=2>Y/listItem>\n *\t\t<listItem listType=\"bulleted\" listIndent=2>C</listItem>\n *\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Array} args Arguments of {@link module:engine/model/model~Model#insertContent}.\n */\n\nexport function modelIndentPasteFixer(evt, _ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n      content = _ref2[0],\n      selectable = _ref2[1];\n\n  // Check whether inserted content starts from a `listItem`. If it does not, it means that there are some other\n  // elements before it and there is no need to fix indents, because even if we insert that content into a list,\n  // that list will be broken.\n  // Note: we also need to handle singular elements because inserting item with indent 0 into 0,1,[],2\n  // would create incorrect model.\n  var item = content.is('documentFragment') ? content.getChild(0) : content;\n  var selection;\n\n  if (!selectable) {\n    selection = this.document.selection;\n  } else {\n    selection = this.createSelection(selectable);\n  }\n\n  if (item && item.is('listItem')) {\n    // Get a reference list item. Inserted list items will be fixed according to that item.\n    var pos = selection.getFirstPosition();\n    var refItem = null;\n\n    if (pos.parent.is('listItem')) {\n      refItem = pos.parent;\n    } else if (pos.nodeBefore && pos.nodeBefore.is('listItem')) {\n      refItem = pos.nodeBefore;\n    } // If there is `refItem` it means that we do insert list items into an existing list.\n\n\n    if (refItem) {\n      // First list item in `data` has indent equal to 0 (it is a first list item). It should have indent equal\n      // to the indent of reference item. We have to fix the first item and all of it's children and following siblings.\n      // Indent of all those items has to be adjusted to reference item.\n      var indentChange = refItem.getAttribute('listIndent'); // Fix only if there is anything to fix.\n\n      if (indentChange > 0) {\n        // Adjust indent of all \"first\" list items in inserted data.\n        while (item && item.is('listItem')) {\n          item._setAttribute('listIndent', item.getAttribute('listIndent') + indentChange);\n\n          item = item.nextSibling;\n        }\n      }\n    }\n  }\n} // Helper function that creates a `<ul><li></li></ul>` or (`<ol>`) structure out of given `modelItem` model `listItem` element.\n// Then, it binds created view list item (<li>) with model `listItem` element.\n// The function then returns created view list item (<li>).\n\nfunction generateLiInUl(modelItem, conversionApi) {\n  var mapper = conversionApi.mapper;\n  var viewWriter = conversionApi.writer;\n  var listType = modelItem.getAttribute('listType') == 'numbered' ? 'ol' : 'ul';\n  var viewItem = createViewListItemElement(viewWriter);\n  var viewList = viewWriter.createContainerElement(listType, null);\n  viewWriter.insert(viewWriter.createPositionAt(viewList, 0), viewItem);\n  mapper.bindElements(modelItem, viewItem);\n  return viewItem;\n} // Helper function that converts children of a given `<li>` view element into corresponding model elements.\n// The function maintains proper order of elements if model `listItem` is split during the conversion\n// due to block children conversion.\n//\n// @param {module:engine/model/element~Element} listItemModel List item model element to which converted children will be inserted.\n// @param {Iterable.<module:engine/view/node~Node>} viewChildren View elements which will be converted.\n// @param {module:engine/conversion/upcastdispatcher~UpcastConversionApi} conversionApi Conversion interface to be used by the callback.\n// @returns {module:engine/model/position~Position} Position on which next elements should be inserted after children conversion.\n\n\nfunction viewToModelListItemChildrenConverter(listItemModel, viewChildren, conversionApi) {\n  var writer = conversionApi.writer,\n      schema = conversionApi.schema; // A position after the last inserted `listItem`.\n\n  var nextPosition = writer.createPositionAfter(listItemModel); // Check all children of the converted `<li>`. At this point we assume there are no \"whitespace\" view text nodes\n  // in view list, between view list items. This should be handled by `<ul>` and `<ol>` converters.\n\n  var _iteratorNormalCompletion8 = true;\n  var _didIteratorError8 = false;\n  var _iteratorError8 = undefined;\n\n  try {\n    for (var _iterator8 = viewChildren[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n      var child = _step8.value;\n\n      if (child.name == 'ul' || child.name == 'ol') {\n        // If the children is a list, we will insert its conversion result after currently handled `listItem`.\n        // Then, next insertion position will be set after all the new list items (and maybe other elements if\n        // something split list item).\n        //\n        // If this is a list, we expect that some `listItem`s and possibly other blocks will be inserted, however `.modelCursor`\n        // should be set after last `listItem` (or block). This is why it feels safe to use it as `nextPosition`\n        nextPosition = conversionApi.convertItem(child, nextPosition).modelCursor;\n      } else {\n        // If this is not a list, try inserting content at the end of the currently handled `listItem`.\n        var result = conversionApi.convertItem(child, writer.createPositionAt(listItemModel, 'end')); // It may end up that the current `listItem` becomes split (if that content cannot be inside `listItem`). For example:\n        //\n        // <li><p>Foo</p></li>\n        //\n        // will be converted to:\n        //\n        // <listItem></listItem><paragraph>Foo</paragraph><listItem></listItem>\n        //\n\n        var convertedChild = result.modelRange.start.nodeAfter;\n        var wasSplit = convertedChild && convertedChild.is('element') && !schema.checkChild(listItemModel, convertedChild.name);\n\n        if (wasSplit) {\n          // As `lastListItem` got split, we need to update it to the second part of the split `listItem` element.\n          //\n          // `modelCursor` should be set to a position where the conversion should continue. There are multiple possible scenarios\n          // that may happen. Usually, `modelCursor` (marked as `#` below) would point to the second list item after conversion:\n          //\n          //\t\t`<li><p>Foo</p></li>` -> `<listItem></listItem><paragraph>Foo</paragraph><listItem>#</listItem>`\n          //\n          // However, in some cases, like auto-paragraphing, the position is placed at the end of the block element:\n          //\n          //\t\t`<li><div>Foo</div></li>` -> `<listItem></listItem><paragraph>Foo#</paragraph><listItem></listItem>`\n          //\n          // or after an element if another element broken auto-paragraphed element:\n          //\n          //\t\t`<li><div><h2>Foo</h2></div></li>` -> `<listItem></listItem><heading1>Foo</heading1>#<listItem></listItem>`\n          //\n          // We need to check for such cases and use proper list item and position based on it.\n          //\n          if (result.modelCursor.parent.is('listItem')) {\n            // (1).\n            listItemModel = result.modelCursor.parent;\n          } else {\n            // (2), (3).\n            listItemModel = findNextListItem(result.modelCursor);\n          }\n\n          nextPosition = writer.createPositionAfter(listItemModel);\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError8 = true;\n    _iteratorError8 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion8 && _iterator8[\"return\"] != null) {\n        _iterator8[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError8) {\n        throw _iteratorError8;\n      }\n    }\n  }\n\n  return nextPosition;\n} // Helper function that seeks for a next list item starting from given `startPosition`.\n\n\nfunction findNextListItem(startPosition) {\n  var treeWalker = new TreeWalker({\n    startPosition: startPosition\n  });\n  var value;\n\n  do {\n    value = treeWalker.next();\n  } while (!value.value.item.is('listItem'));\n\n  return value.value.item;\n} // Helper function that seeks for a previous list item sibling of given model item which meets given criteria.\n// `options` object may contain one or more of given values (by default they are `false`):\n// `options.sameIndent` - whether sought sibling should have same indent (default = no),\n// `options.smallerIndent` - whether sought sibling should have smaller indent (default = no).\n// `options.listIndent` - the reference indent.\n// Either `options.sameIndent` or `options.smallerIndent` should be set to `true`.\n\n\nfunction getSiblingListItem(modelItem, options) {\n  var sameIndent = !!options.sameIndent;\n  var smallerIndent = !!options.smallerIndent;\n  var indent = options.listIndent;\n  var item = modelItem;\n\n  while (item && item.name == 'listItem') {\n    var itemIndent = item.getAttribute('listIndent');\n\n    if (sameIndent && indent == itemIndent || smallerIndent && indent > itemIndent) {\n      return item;\n    }\n\n    item = item.previousSibling;\n  }\n\n  return null;\n} // Helper function that takes two parameters, that are expected to be view list elements, and merges them.\n// The merge happen only if both parameters are UL or OL elements.\n\n\nfunction mergeViewLists(viewWriter, firstList, secondList) {\n  if (firstList && secondList && (firstList.name == 'ul' || firstList.name == 'ol') && firstList.name == secondList.name) {\n    return viewWriter.mergeContainers(viewWriter.createPositionAfter(firstList));\n  }\n\n  return null;\n} // Helper function that takes model list item element `modelItem`, corresponding view list item element `injectedItem`\n// that is not added to the view and is inside a view list element (`ul` or `ol`) and is that's list only child.\n// The list is inserted at correct position (element breaking may be needed) and then merged with it's siblings.\n// See comments below to better understand the algorithm.\n\n\nfunction injectViewList(modelItem, injectedItem, conversionApi, model) {\n  var injectedList = injectedItem.parent;\n  var mapper = conversionApi.mapper;\n  var viewWriter = conversionApi.writer; // Position where view list will be inserted.\n\n  var insertPosition = mapper.toViewPosition(model.createPositionBefore(modelItem)); // 1. Find previous list item that has same or smaller indent. Basically we are looking for a first model item\n  // that is \"parent\" or \"sibling\" of injected model item.\n  // If there is no such list item, it means that injected list item is the first item in \"its list\".\n\n  var refItem = getSiblingListItem(modelItem.previousSibling, {\n    sameIndent: true,\n    smallerIndent: true,\n    listIndent: modelItem.getAttribute('listIndent')\n  });\n  var prevItem = modelItem.previousSibling;\n\n  if (refItem && refItem.getAttribute('listIndent') == modelItem.getAttribute('listIndent')) {\n    // There is a list item with same indent - we found same-level sibling.\n    // Break the list after it. Inserted view item will be inserted in the broken space.\n    var viewItem = mapper.toViewElement(refItem);\n    insertPosition = viewWriter.breakContainer(viewWriter.createPositionAfter(viewItem));\n  } else {\n    // There is no list item with same indent. Check previous model item.\n    if (prevItem && prevItem.name == 'listItem') {\n      // If it is a list item, it has to have lower indent.\n      // It means that inserted item should be added to it as its nested item.\n      insertPosition = mapper.toViewPosition(model.createPositionAt(prevItem, 'end'));\n    } else {\n      // Previous item is not a list item (or does not exist at all).\n      // Just map the position and insert the view item at mapped position.\n      insertPosition = mapper.toViewPosition(model.createPositionBefore(modelItem));\n    }\n  }\n\n  insertPosition = positionAfterUiElements(insertPosition); // Insert the view item.\n\n  viewWriter.insert(insertPosition, injectedList); // 2. Handle possible children of injected model item.\n\n  if (prevItem && prevItem.name == 'listItem') {\n    var prevView = mapper.toViewElement(prevItem);\n    var walkerBoundaries = viewWriter.createRange(viewWriter.createPositionAt(prevView, 0), insertPosition);\n    var walker = walkerBoundaries.getWalker({\n      ignoreElementEnd: true\n    });\n    var _iteratorNormalCompletion9 = true;\n    var _didIteratorError9 = false;\n    var _iteratorError9 = undefined;\n\n    try {\n      for (var _iterator9 = walker[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n        var value = _step9.value;\n\n        if (value.item.is('li')) {\n          var breakPosition = viewWriter.breakContainer(viewWriter.createPositionBefore(value.item));\n          var viewList = value.item.parent;\n          var targetPosition = viewWriter.createPositionAt(injectedItem, 'end');\n          mergeViewLists(viewWriter, targetPosition.nodeBefore, targetPosition.nodeAfter);\n          viewWriter.move(viewWriter.createRangeOn(viewList), targetPosition);\n          walker.position = breakPosition;\n        }\n      }\n    } catch (err) {\n      _didIteratorError9 = true;\n      _iteratorError9 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion9 && _iterator9[\"return\"] != null) {\n          _iterator9[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError9) {\n          throw _iteratorError9;\n        }\n      }\n    }\n  } else {\n    var nextViewList = injectedList.nextSibling;\n\n    if (nextViewList && (nextViewList.is('ul') || nextViewList.is('ol'))) {\n      var lastSubChild = null;\n      var _iteratorNormalCompletion10 = true;\n      var _didIteratorError10 = false;\n      var _iteratorError10 = undefined;\n\n      try {\n        for (var _iterator10 = nextViewList.getChildren()[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n          var child = _step10.value;\n          var modelChild = mapper.toModelElement(child);\n\n          if (modelChild && modelChild.getAttribute('listIndent') > modelItem.getAttribute('listIndent')) {\n            lastSubChild = child;\n          } else {\n            break;\n          }\n        }\n      } catch (err) {\n        _didIteratorError10 = true;\n        _iteratorError10 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion10 && _iterator10[\"return\"] != null) {\n            _iterator10[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError10) {\n            throw _iteratorError10;\n          }\n        }\n      }\n\n      if (lastSubChild) {\n        viewWriter.breakContainer(viewWriter.createPositionAfter(lastSubChild));\n        viewWriter.move(viewWriter.createRangeOn(lastSubChild.parent), viewWriter.createPositionAt(injectedItem, 'end'));\n      }\n    }\n  } // Merge inserted view list with its possible neighbour lists.\n\n\n  mergeViewLists(viewWriter, injectedList, injectedList.nextSibling);\n  mergeViewLists(viewWriter, injectedList.previousSibling, injectedList);\n} // Helper function that takes all children of given `viewRemovedItem` and moves them in a correct place, according\n// to other given parameters.\n\n\nfunction hoistNestedLists(nextIndent, modelRemoveStartPosition, viewRemoveStartPosition, viewRemovedItem, conversionApi, model) {\n  // Find correct previous model list item element.\n  // The element has to have either same or smaller indent than given reference indent.\n  // This will be the model element which will get nested items (if it has smaller indent) or sibling items (if it has same indent).\n  // Keep in mind that such element might not be found, if removed item was the first item.\n  var prevModelItem = getSiblingListItem(modelRemoveStartPosition.nodeBefore, {\n    sameIndent: true,\n    smallerIndent: true,\n    listIndent: nextIndent,\n    foo: 'b'\n  });\n  var mapper = conversionApi.mapper;\n  var viewWriter = conversionApi.writer; // Indent of found element or `null` if the element has not been found.\n\n  var prevIndent = prevModelItem ? prevModelItem.getAttribute('listIndent') : null;\n  var insertPosition;\n\n  if (!prevModelItem) {\n    // If element has not been found, simply insert lists at the position where the removed item was:\n    //\n    // Lorem ipsum.\n    // 1 --------           <--- this is removed, no previous list item, put nested items in place of removed item.\n    //   1.1 --------       <--- this is reference indent.\n    //     1.1.1 --------\n    //     1.1.2 --------\n    //   1.2 --------\n    //\n    // Becomes:\n    //\n    // Lorem ipsum.\n    // 1.1 --------\n    //   1.1.1 --------\n    //   1.1.2 --------\n    // 1.2 --------\n    insertPosition = viewRemoveStartPosition;\n  } else if (prevIndent == nextIndent) {\n    // If element has been found and has same indent as reference indent it means that nested items should\n    // become siblings of found element:\n    //\n    // 1 --------\n    //   1.1 --------\n    //   1.2 --------       <--- this is `prevModelItem`.\n    // 2 --------           <--- this is removed, previous list item has indent same as reference indent.\n    //   2.1 --------       <--- this is reference indent, this and 2.2 should become siblings of 1.2.\n    //   2.2 --------\n    //\n    // Becomes:\n    //\n    // 1 --------\n    //   1.1 --------\n    //   1.2 --------\n    //   2.1 --------\n    //   2.2 --------\n    var prevViewList = mapper.toViewElement(prevModelItem).parent;\n    insertPosition = viewWriter.createPositionAfter(prevViewList);\n  } else {\n    // If element has been found and has smaller indent as reference indent it means that nested items\n    // should become nested items of found item:\n    //\n    // 1 --------           <--- this is `prevModelItem`.\n    //   1.1 --------       <--- this is removed, previous list item has indent smaller than reference indent.\n    //     1.1.1 --------   <--- this is reference indent, this and 1.1.1 should become nested items of 1.\n    //     1.1.2 --------\n    //   1.2 --------\n    //\n    // Becomes:\n    //\n    // 1 --------\n    //   1.1.1 --------\n    //   1.1.2 --------\n    //   1.2 --------\n    //\n    // Note: in this case 1.1.1 have indent 2 while 1 have indent 0. In model that should not be possible,\n    // because following item may have indent bigger only by one. But this is fixed by postfixer.\n    var modelPosition = model.createPositionAt(prevModelItem, 'end');\n    insertPosition = mapper.toViewPosition(modelPosition);\n  }\n\n  insertPosition = positionAfterUiElements(insertPosition); // Handle multiple lists. This happens if list item has nested numbered and bulleted lists. Following lists\n  // are inserted after the first list (no need to recalculate insertion position for them).\n\n  for (var _i2 = 0, _arr2 = _toConsumableArray(viewRemovedItem.getChildren()); _i2 < _arr2.length; _i2++) {\n    var child = _arr2[_i2];\n\n    if (child.is('ul') || child.is('ol')) {\n      insertPosition = viewWriter.move(viewWriter.createRangeOn(child), insertPosition).end;\n      mergeViewLists(viewWriter, child, child.nextSibling);\n      mergeViewLists(viewWriter, child.previousSibling, child);\n    }\n  }\n} // Helper function that for given `view.Position`, returns a `view.Position` that is after all `view.UIElement`s that\n// are after given position.\n// For example:\n// <container:p>foo^<ui:span></ui:span><ui:span></ui:span>bar</contain:p>\n// For position ^, a position before \"bar\" will be returned.\n\n\nfunction positionAfterUiElements(viewPosition) {\n  return viewPosition.getLastMatchingPosition(function (value) {\n    return value.item.is('uiElement');\n  });\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module list/listediting\n */\nimport ListCommand from './listcommand';\nimport IndentCommand from './indentcommand';\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport Paragraph from '@ckeditor/ckeditor5-paragraph/src/paragraph';\nimport { cleanList, cleanListItem, modelViewInsertion, modelViewChangeType, modelViewMergeAfter, modelViewRemove, modelViewSplitOnInsert, modelViewChangeIndent, modelChangePostFixer, modelIndentPasteFixer, viewModelConverter, modelToViewPosition, viewToModelPosition } from './converters';\n/**\n * The engine of the list feature. It handles creating, editing and removing lists and list items.\n *\n * It registers the `'numberedList'`, `'bulletedList'`, `'indentList'` and `'outdentList'` commands.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar ListEditing =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(ListEditing, _Plugin);\n\n  function ListEditing() {\n    _classCallCheck(this, ListEditing);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ListEditing).apply(this, arguments));\n  }\n\n  _createClass(ListEditing, [{\n    key: \"init\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function init() {\n      var _this = this;\n\n      var editor = this.editor; // Schema.\n      // Note: in case `$block` will ever be allowed in `listItem`, keep in mind that this feature\n      // uses `Selection#getSelectedBlocks()` without any additional processing to obtain all selected list items.\n      // If there are blocks allowed inside list item, algorithms using `getSelectedBlocks()` will have to be modified.\n\n      editor.model.schema.register('listItem', {\n        inheritAllFrom: '$block',\n        allowAttributes: ['listType', 'listIndent']\n      }); // Converters.\n\n      var data = editor.data;\n      var editing = editor.editing;\n      editor.model.document.registerPostFixer(function (writer) {\n        return modelChangePostFixer(editor.model, writer);\n      });\n      editing.mapper.registerViewToModelLength('li', getViewListItemLength);\n      data.mapper.registerViewToModelLength('li', getViewListItemLength);\n      editing.mapper.on('modelToViewPosition', modelToViewPosition(editing.view));\n      editing.mapper.on('viewToModelPosition', viewToModelPosition(editor.model));\n      data.mapper.on('modelToViewPosition', modelToViewPosition(editing.view));\n      editing.downcastDispatcher.on('insert', modelViewSplitOnInsert, {\n        priority: 'high'\n      });\n      editing.downcastDispatcher.on('insert:listItem', modelViewInsertion(editor.model));\n      data.downcastDispatcher.on('insert', modelViewSplitOnInsert, {\n        priority: 'high'\n      });\n      data.downcastDispatcher.on('insert:listItem', modelViewInsertion(editor.model));\n      editing.downcastDispatcher.on('attribute:listType:listItem', modelViewChangeType);\n      data.downcastDispatcher.on('attribute:listType:listItem', modelViewChangeType);\n      editing.downcastDispatcher.on('attribute:listIndent:listItem', modelViewChangeIndent(editor.model));\n      data.downcastDispatcher.on('attribute:listIndent:listItem', modelViewChangeIndent(editor.model));\n      editing.downcastDispatcher.on('remove:listItem', modelViewRemove(editor.model));\n      editing.downcastDispatcher.on('remove', modelViewMergeAfter, {\n        priority: 'low'\n      });\n      data.downcastDispatcher.on('remove:listItem', modelViewRemove(editor.model));\n      data.downcastDispatcher.on('remove', modelViewMergeAfter, {\n        priority: 'low'\n      });\n      data.upcastDispatcher.on('element:ul', cleanList, {\n        priority: 'high'\n      });\n      data.upcastDispatcher.on('element:ol', cleanList, {\n        priority: 'high'\n      });\n      data.upcastDispatcher.on('element:li', cleanListItem, {\n        priority: 'high'\n      });\n      data.upcastDispatcher.on('element:li', viewModelConverter); // Fix indentation of pasted items.\n\n      editor.model.on('insertContent', modelIndentPasteFixer, {\n        priority: 'high'\n      }); // Register commands for numbered and bulleted list.\n\n      editor.commands.add('numberedList', new ListCommand(editor, 'numbered'));\n      editor.commands.add('bulletedList', new ListCommand(editor, 'bulleted')); // Register commands for indenting.\n\n      editor.commands.add('indentList', new IndentCommand(editor, 'forward'));\n      editor.commands.add('outdentList', new IndentCommand(editor, 'backward'));\n      var viewDocument = this.editor.editing.view.document; // Overwrite default Enter key behavior.\n      // If Enter key is pressed with selection collapsed in empty list item, outdent it instead of breaking it.\n\n      this.listenTo(viewDocument, 'enter', function (evt, data) {\n        var doc = _this.editor.model.document;\n        var positionParent = doc.selection.getLastPosition().parent;\n\n        if (doc.selection.isCollapsed && positionParent.name == 'listItem' && positionParent.isEmpty) {\n          _this.editor.execute('outdentList');\n\n          data.preventDefault();\n          evt.stop();\n        }\n      }); // Overwrite default Backspace key behavior.\n      // If Backspace key is pressed with selection collapsed on first position in first list item, outdent it. #83\n\n      this.listenTo(viewDocument, 'delete', function (evt, data) {\n        // Check conditions from those that require less computations like those immediately available.\n        if (data.direction !== 'backward') {\n          return;\n        }\n\n        var selection = _this.editor.model.document.selection;\n\n        if (!selection.isCollapsed) {\n          return;\n        }\n\n        var firstPosition = selection.getFirstPosition();\n\n        if (!firstPosition.isAtStart) {\n          return;\n        }\n\n        var positionParent = firstPosition.parent;\n\n        if (positionParent.name !== 'listItem') {\n          return;\n        }\n\n        var previousIsAListItem = positionParent.previousSibling && positionParent.previousSibling.name === 'listItem';\n\n        if (previousIsAListItem) {\n          return;\n        }\n\n        _this.editor.execute('outdentList');\n\n        data.preventDefault();\n        evt.stop();\n      }, {\n        priority: 'high'\n      });\n\n      var getCommandExecuter = function getCommandExecuter(commandName) {\n        return function (data, cancel) {\n          var command = _this.editor.commands.get(commandName);\n\n          if (command.isEnabled) {\n            _this.editor.execute(commandName);\n\n            cancel();\n          }\n        };\n      };\n\n      editor.keystrokes.set('Tab', getCommandExecuter('indentList'));\n      editor.keystrokes.set('Shift+Tab', getCommandExecuter('outdentList'));\n    }\n  }, {\n    key: \"afterInit\",\n    value: function afterInit() {\n      var commands = this.editor.commands;\n      var indent = commands.get('indent');\n      var outdent = commands.get('outdent');\n\n      if (indent) {\n        indent.registerChildCommand(commands.get('indentList'));\n      }\n\n      if (outdent) {\n        outdent.registerChildCommand(commands.get('outdentList'));\n      }\n    }\n  }], [{\n    key: \"requires\",\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return [Paragraph];\n    }\n  }]);\n\n  return ListEditing;\n}(Plugin);\n\nexport { ListEditing as default };\n\nfunction getViewListItemLength(element) {\n  var length = 1;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = element.getChildren()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var child = _step.value;\n\n      if (child.name == 'ul' || child.name == 'ol') {\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = child.getChildren()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var item = _step2.value;\n            length += getViewListItemLength(item);\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n              _iterator2[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return length;\n}","function _typeof(obj) {\n    if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {\n        _typeof = function _typeof(obj) {\n            return typeof obj;\n        };\n    } else {\n        _typeof = function _typeof(obj) {\n            return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n        };\n    }\n    return _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError('Cannot call a class as a function');\n    }\n}\nfunction _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if ('value' in descriptor)\n            descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps)\n        _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps)\n        _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === 'object' || typeof call === 'function')) {\n        return call;\n    }\n    return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError('this hasn\\'t been initialised - super() hasn\\'t been called');\n    }\n    return self;\n}\nfunction _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== 'function' && superClass !== null) {\n        throw new TypeError('Super expression must either be null or a function');\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass)\n        _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return _setPrototypeOf(o, p);\n}\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module list/listui\n */\nimport numberedListIcon from '../theme/icons/numberedlist.svg';\nimport bulletedListIcon from '../theme/icons/bulletedlist.svg';\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\n/**\n * The list UI feature. It introduces the `'numberedList'` and `'bulletedList'` buttons that\n * allow to convert paragraphs to and from list items and indent or outdent them.\n *\n * @extends module:core/plugin~Plugin\n */\nvar ListUI = /*#__PURE__*/\nfunction (_Plugin) {\n    _inherits(ListUI, _Plugin);\n    function ListUI() {\n        _classCallCheck(this, ListUI);\n        return _possibleConstructorReturn(this, _getPrototypeOf(ListUI).apply(this, arguments));\n    }\n    _createClass(ListUI, [\n        {\n            key: 'init',\n            /**\n     * @inheritDoc\n     */\n            value: function init() {\n                // Create two buttons and link them with numberedList and bulletedList commands.\n                var t = this.editor.t;\n                this._addButton('numberedList', t('d'), numberedListIcon);\n                this._addButton('bulletedList', t('e'), bulletedListIcon);\n            }    /**\n     * Helper method for initializing a button and linking it with an appropriate command.\n     *\n     * @private\n     * @param {String} commandName The name of the command.\n     * @param {Object} label The button label.\n     * @param {String} icon The source of the icon.\n     */\n        },\n        {\n            key: '_addButton',\n            value: function _addButton(commandName, label, icon) {\n                var _this = this;\n                var editor = this.editor;\n                editor.ui.componentFactory.add(commandName, function (locale) {\n                    var command = editor.commands.get(commandName);\n                    var buttonView = new ButtonView(locale);\n                    buttonView.set({\n                        label: label,\n                        icon: icon,\n                        tooltip: true\n                    });\n                    // Bind button model to command.\n                    buttonView.bind('isOn', 'isEnabled').to(command, 'value', 'isEnabled');\n                    // Execute command.\n                    _this.listenTo(buttonView, 'execute', function () {\n                        return editor.execute(commandName);\n                    });\n                    return buttonView;\n                });\n            }\n        }\n    ]);\n    return ListUI;\n}(Plugin);\nexport {\n    ListUI as default\n};","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module list/list\n */\nimport ListEditing from './listediting';\nimport ListUI from './listui';\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n/**\n * The list feature.\n *\n * This is a \"glue\" plugin which loads the {@link module:list/listediting~ListEditing list editing feature}\n * and {@link module:list/listui~ListUI list UI feature}.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar List =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(List, _Plugin);\n\n  function List() {\n    _classCallCheck(this, List);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(List).apply(this, arguments));\n  }\n\n  _createClass(List, null, [{\n    key: \"requires\",\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return [ListEditing, ListUI];\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"pluginName\",\n    get: function get() {\n      return 'List';\n    }\n  }]);\n\n  return List;\n}(Plugin);\n\nexport { List as default };","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * Original marked.js library renderer with fixes:\n * - No formatting for output HTML string &mdash; all newlines between tags are removed to create clean output.\n * - Changed long string concatenations to ES5 template strings.\n * - Changed code style.\n *\n * @see {@link https://github.com/chjj/marked#renderer} Methods description.\n * @param options\n * @constructor\n */\nfunction Renderer(options) {\n  this.options = options || {};\n}\n\nRenderer.prototype.code = function (code, lang, escaped) {\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n\n    if (out !== null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return \"<pre><code>\".concat(escaped ? code : escape(code, true), \"</code></pre>\");\n  }\n\n  var cssClass = this.options.langPrefix + escape(lang, true);\n  return \"<pre><code class=\\\"\".concat(cssClass, \"\\\">\").concat(escaped ? code : escape(code, true), \"</code></pre>\");\n};\n\nRenderer.prototype.blockquote = function (quote) {\n  return \"<blockquote>\".concat(quote, \"</blockquote>\");\n};\n\nRenderer.prototype.html = function (html) {\n  return html;\n};\n\nRenderer.prototype.heading = function (text, level, raw) {\n  return \"<h\".concat(level, \">\").concat(text, \"</h\").concat(level, \">\");\n};\n\nRenderer.prototype.hr = function () {\n  return this.options.xhtml ? '<hr/>' : '<hr>';\n};\n\nRenderer.prototype.list = function (body, ordered) {\n  var type = ordered ? 'ol' : 'ul';\n  return \"<\".concat(type, \">\").concat(body, \"</\").concat(type, \">\");\n};\n\nRenderer.prototype.listitem = function (text) {\n  return \"<li>\".concat(text, \"</li>\");\n};\n\nRenderer.prototype.paragraph = function (text) {\n  return \"<p>\".concat(text, \"</p>\");\n};\n\nRenderer.prototype.table = function (header, body) {\n  return \"<table><thead>\".concat(header, \"</thead><tbody>\").concat(body, \"</tbody></table>\");\n};\n\nRenderer.prototype.tablerow = function (content) {\n  return '<tr>' + content + '</tr>';\n};\n\nRenderer.prototype.tablecell = function (content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align ? \"<\".concat(type, \" align=\\\"\").concat(flags.align, \"\\\">\") : \"<\".concat(type, \">\");\n  return tag + content + \"</\".concat(type, \">\");\n}; // span level renderer\n\n\nRenderer.prototype.strong = function (text) {\n  return \"<strong>\".concat(text, \"</strong>\");\n};\n\nRenderer.prototype.em = function (text) {\n  return \"<em>\".concat(text, \"</em>\");\n};\n\nRenderer.prototype.codespan = function (text) {\n  return \"<code>\".concat(text.trim(), \"</code>\");\n};\n\nRenderer.prototype.br = function () {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function (text) {\n  return \"<del>\".concat(text, \"</del>\");\n};\n\nRenderer.prototype.link = function (href, title, text) {\n  if (this.options.sanitize) {\n    var prot;\n\n    try {\n      prot = decodeURIComponent(unescape(href)).replace(/[^\\w:]/g, '').toLowerCase();\n    } catch (e) {\n      return '';\n    }\n\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0) {\n      // jshint ignore:line\n      return '';\n    }\n  }\n\n  var out = '<a href=\"' + href + '\"';\n\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function (href, title, text) {\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nRenderer.prototype.text = function (text) {\n  return text;\n};\n\nexport default Renderer;\n\nfunction escape(html, encode) {\n  return html.replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n}\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/g, function (_, n) {\n    n = n.toLowerCase();\n\n    if (n === 'colon') {\n      return ':';\n    }\n\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1)); // jscs:ignore\n    }\n\n    return '';\n  });\n}","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n// Exports an array with custom converters used by to-markdown library.\nexport default [// Converting code blocks with class name matching output from marked library.\n{\n  filter: function filter(node) {\n    var regexp = /lang-(.+)/;\n    return node.nodeName === 'PRE' && node.firstChild && node.firstChild.nodeName === 'CODE' && regexp.test(node.firstChild.className);\n  },\n  replacement: function replacement(content, node) {\n    var regexp = /lang-(.+)/;\n    var lang = regexp.exec(node.firstChild.className)[1];\n    return '\\n\\n``` ' + lang + '\\n' + node.firstChild.textContent + '\\n```\\n\\n';\n  }\n}, // Converting empty links.\n{\n  filter: function filter(node) {\n    return node.nodeName === 'A' && !node.getAttribute('href');\n  },\n  replacement: function replacement(content, node) {\n    var title = node.title ? \"\\\"\".concat(node.title, \"\\\"\") : '';\n    return \"[\".concat(content, \"](\").concat(title, \")\");\n  }\n}, // Headers - fixing newline at the beginning.\n{\n  filter: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n  replacement: function replacement(content, node) {\n    var hLevel = node.nodeName.charAt(1);\n    var hPrefix = '';\n\n    for (var i = 0; i < hLevel; i++) {\n      hPrefix += '#';\n    }\n\n    return hPrefix + ' ' + content + '\\n';\n  }\n}, // Inline code - fixing backticks inside code blocks.\n{\n  filter: function filter(node) {\n    var hasSiblings = node.previousSibling || node.nextSibling;\n    var isCodeBlock = node.parentNode.nodeName === 'PRE' && !hasSiblings;\n    return node.nodeName === 'CODE' && !isCodeBlock;\n  },\n  replacement: function replacement(content) {\n    // If content starts or ends with backtick - use double backtick.\n    if (content.indexOf('`') > -1) {\n      return '`` ' + content + ' ``';\n    }\n\n    return '`' + content + '`';\n  }\n}];","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module markdown-gfm/gfmdataprocessor\n */\nimport marked from './lib/marked/marked';\nimport toMarkdown from './lib/to-markdown/to-markdown';\nimport HtmlDataProcessor from '@ckeditor/ckeditor5-engine/src/dataprocessor/htmldataprocessor';\nimport GFMRenderer from './lib/marked/renderer';\nimport converters from './lib/to-markdown/converters';\n/**\n * This data processor implementation uses GitHub Flavored Markdown as input/output data.\n *\n * See the {@glink features/markdown Markdown output} guide to learn more on how to enable it.\n *\n * @implements module:engine/dataprocessor/dataprocessor~DataProcessor\n */\n\nvar GFMDataProcessor =\n/*#__PURE__*/\nfunction () {\n  function GFMDataProcessor() {\n    _classCallCheck(this, GFMDataProcessor);\n\n    /**\n     * HTML data processor used to process HTML produced by the Markdown-to-HTML converter and the other way.\n     *\n     * @private\n     * @member {module:engine/dataprocessor/htmldataprocessor~HtmlDataProcessor}\n     */\n    this._htmlDP = new HtmlDataProcessor();\n  }\n  /**\n   * Converts the provided Markdown string to view tree.\n   *\n   * @param {String} data A Markdown string.\n   * @returns {module:engine/view/documentfragment~DocumentFragment} The converted view element.\n   */\n\n\n  _createClass(GFMDataProcessor, [{\n    key: \"toView\",\n    value: function toView(data) {\n      var html = marked.parse(data, {\n        gfm: true,\n        breaks: true,\n        tables: true,\n        xhtml: true,\n        renderer: new GFMRenderer()\n      });\n      return this._htmlDP.toView(html);\n    }\n    /**\n     * Converts the provided {@link module:engine/view/documentfragment~DocumentFragment} to data format &mdash; in this\n     * case to a Markdown string.\n     *\n     * @param {module:engine/view/documentfragment~DocumentFragment} viewFragment\n     * @returns {String} Markdown string.\n     */\n\n  }, {\n    key: \"toData\",\n    value: function toData(viewFragment) {\n      var html = this._htmlDP.toData(viewFragment);\n\n      return toMarkdown(html, {\n        gfm: true,\n        converters: converters\n      });\n    }\n  }]);\n\n  return GFMDataProcessor;\n}();\n\nexport { GFMDataProcessor as default };","/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n// The editor creator to use.\nimport ClassicEditorBase from '@ckeditor/ckeditor5-editor-classic/src/classiceditor';\n\nimport Essentials from '@ckeditor/ckeditor5-essentials/src/essentials';\nimport Bold from '@ckeditor/ckeditor5-basic-styles/src/bold';\nimport Italic from '@ckeditor/ckeditor5-basic-styles/src/italic';\nimport BlockQuote from '@ckeditor/ckeditor5-block-quote/src/blockquote';\nimport Heading from '@ckeditor/ckeditor5-heading/src/heading';\nimport List from '@ckeditor/ckeditor5-list/src/list';\nimport Paragraph from '@ckeditor/ckeditor5-paragraph/src/paragraph';\nimport GFMDataProcessor from '@ckeditor/ckeditor5-markdown-gfm/src/gfmdataprocessor';\n\nexport default class ClassicEditor extends ClassicEditorBase {}\n\nfunction Markdown(editor) {\n\teditor.data.processor = new GFMDataProcessor();\n}\n\n// Plugins to include in the build.\nClassicEditor.builtinPlugins = [\n\tMarkdown,\n\tEssentials,\n\tHeading,\n\tBold,\n\tItalic,\n\tList,\n\tBlockQuote,\n\tParagraph\n];\n\n// Editor configuration.\nClassicEditor.defaultConfig = {\n\ttoolbar: {\n\t\titems: [\n\t\t\t'heading',\n\t\t\t'|',\n\t\t\t'bold',\n\t\t\t'italic',\n\t\t\t'bulletedList',\n\t\t\t'numberedList',\n\t\t\t'blockQuote',\n\t\t\t'|',\n\t\t\t'undo',\n\t\t\t'redo'\n\t\t]\n\t},\n\theading: {\n\t\toptions: [\n\t\t\t{ model: 'paragraph', title: 'Paragraph', class: 'ck-heading_paragraph' },\n\t\t\t{ model: 'heading1', view: 'h1', title: 'Heading 1', class: 'ck-heading_heading1' },\n\t\t\t{ model: 'heading2', view: 'h2', title: 'Heading 2', class: 'ck-heading_heading2' },\n\t\t\t{ model: 'heading3', view: 'h3', title: 'Heading 3', class: 'ck-heading_heading3' },\n\t\t\t{ model: 'heading4', view: 'h4', title: 'Heading 4', class: 'ck-heading_heading4' }\n\t\t]\n\t},\n\n\tlanguage: 'en'\n};\n"],"sourceRoot":""}