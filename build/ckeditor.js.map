{"version":3,"sources":["webpack://ClassicEditor/webpack/universalModuleDefinition","webpack://ClassicEditor/webpack/bootstrap","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/ckeditorerror.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/range.js","webpack://ClassicEditor/./node_modules/lodash-es/last.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/position.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-core/src/plugin.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/position.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/mix.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/range.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/view.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/spy.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/eventinfo.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/emittermixin.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/keyboard.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-core/src/command.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/filler.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/log.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/element.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/observablemixin.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/text.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/text.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/moveoperation.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/splitoperation.js","webpack://ClassicEditor/./node_modules/style-loader/lib/addStyles.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/button/buttonview.js","webpack://ClassicEditor/./node_modules/lodash-es/_root.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/comparearrays.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/istext.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/operation.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/mergeoperation.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/conversion/upcast-converters.js","webpack://ClassicEditor/./node_modules/lodash-es/isObjectLike.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/global.js","webpack://ClassicEditor/./node_modules/lodash-es/isObject.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/element.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/isiterable.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/documentselection.js","webpack://ClassicEditor/./node_modules/lodash-es/isEqual.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/attributeoperation.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/textproxy.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/utils.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/insertoperation.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/conversion/downcast-converters.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/uid.js","webpack://ClassicEditor/./node_modules/lodash-es/_coreJsData.js","webpack://ClassicEditor/./node_modules/lodash-es/_isMasked.js","webpack://ClassicEditor/./node_modules/lodash-es/_baseIsNative.js","webpack://ClassicEditor/./node_modules/lodash-es/_getValue.js","webpack://ClassicEditor/./node_modules/lodash-es/_getNative.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/selection.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/collection.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/first.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/observer.js","webpack://ClassicEditor/./node_modules/lodash-es/_getRawTag.js","webpack://ClassicEditor/./node_modules/lodash-es/_objectToString.js","webpack://ClassicEditor/./node_modules/lodash-es/_baseGetTag.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/keystrokehandler.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/focustracker.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/selection.js","webpack://ClassicEditor/./node_modules/lodash-es/_Symbol.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/treewalker.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/textproxy.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/rect.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/diff.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/node.js","webpack://ClassicEditor/./node_modules/lodash-es/_copyObject.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/domeventobserver.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/node.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/nodelist.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/tomap.js","webpack://ClassicEditor/./node_modules/lodash-es/cloneDeepWith.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/template.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/treewalker.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/liveposition.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/attributeelement.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/renameoperation.js","webpack://ClassicEditor/./node_modules/lodash-es/isArray.js","webpack://ClassicEditor/./node_modules/lodash-es/_DataView.js","webpack://ClassicEditor/./node_modules/lodash-es/_Promise.js","webpack://ClassicEditor/./node_modules/lodash-es/_Set.js","webpack://ClassicEditor/./node_modules/lodash-es/_WeakMap.js","webpack://ClassicEditor/./node_modules/lodash-es/_getTag.js","webpack://ClassicEditor/./node_modules/lodash-es/_nodeUtil.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/matcher.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/isnode.js","webpack://ClassicEditor/./node_modules/lodash-es/_toSource.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/documentfragment.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/markeroperation.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/env.js","webpack://ClassicEditor/./node_modules/lodash-es/eq.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/emittermixin.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/viewcollection.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/focuscycler.js","webpack://ClassicEditor/./node_modules/lodash-es/_listCacheClear.js","webpack://ClassicEditor/./node_modules/lodash-es/_assocIndexOf.js","webpack://ClassicEditor/./node_modules/lodash-es/_listCacheDelete.js","webpack://ClassicEditor/./node_modules/lodash-es/_listCacheGet.js","webpack://ClassicEditor/./node_modules/lodash-es/_listCacheHas.js","webpack://ClassicEditor/./node_modules/lodash-es/_listCacheSet.js","webpack://ClassicEditor/./node_modules/lodash-es/_ListCache.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/documentfragment.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/containerelement.js","webpack://ClassicEditor/./node_modules/lodash-es/_Map.js","webpack://ClassicEditor/./node_modules/lodash-es/cloneDeep.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/indexof.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/getancestors.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/domconverter.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/getcommonancestor.js","webpack://ClassicEditor/./node_modules/lodash-es/isBuffer.js","webpack://ClassicEditor/./node_modules/lodash-es/_getPrototype.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/editableelement.js","webpack://ClassicEditor/./node_modules/lodash-es/_isPrototype.js","webpack://ClassicEditor/./node_modules/lodash-es/isArrayLike.js","webpack://ClassicEditor/./node_modules/lodash-es/_baseUnary.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/domeventdata.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/icon/iconview.js","webpack://ClassicEditor/./node_modules/lodash-es/_arrayEach.js","webpack://ClassicEditor/./node_modules/lodash-es/_baseAssign.js","webpack://ClassicEditor/./node_modules/lodash-es/_baseAssignIn.js","webpack://ClassicEditor/./node_modules/lodash-es/_copyArray.js","webpack://ClassicEditor/./node_modules/lodash-es/_copySymbols.js","webpack://ClassicEditor/./node_modules/lodash-es/_getSymbolsIn.js","webpack://ClassicEditor/./node_modules/lodash-es/_copySymbolsIn.js","webpack://ClassicEditor/./node_modules/lodash-es/_getAllKeysIn.js","webpack://ClassicEditor/./node_modules/lodash-es/_initCloneArray.js","webpack://ClassicEditor/./node_modules/lodash-es/_cloneArrayBuffer.js","webpack://ClassicEditor/./node_modules/lodash-es/_cloneDataView.js","webpack://ClassicEditor/./node_modules/lodash-es/_cloneRegExp.js","webpack://ClassicEditor/./node_modules/lodash-es/_cloneSymbol.js","webpack://ClassicEditor/./node_modules/lodash-es/_cloneTypedArray.js","webpack://ClassicEditor/./node_modules/lodash-es/_initCloneByTag.js","webpack://ClassicEditor/./node_modules/lodash-es/_baseCreate.js","webpack://ClassicEditor/./node_modules/lodash-es/_initCloneObject.js","webpack://ClassicEditor/./node_modules/lodash-es/_baseIsMap.js","webpack://ClassicEditor/./node_modules/lodash-es/isMap.js","webpack://ClassicEditor/./node_modules/lodash-es/_baseIsSet.js","webpack://ClassicEditor/./node_modules/lodash-es/isSet.js","webpack://ClassicEditor/./node_modules/lodash-es/_baseClone.js","webpack://ClassicEditor/./node_modules/lodash-es/_nativeKeysIn.js","webpack://ClassicEditor/./node_modules/lodash-es/_baseKeysIn.js","webpack://ClassicEditor/./node_modules/lodash-es/keysIn.js","webpack://ClassicEditor/./node_modules/lodash-es/_nativeKeys.js","webpack://ClassicEditor/./node_modules/lodash-es/_baseKeys.js","webpack://ClassicEditor/./node_modules/lodash-es/keys.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-paragraph/src/paragraphcommand.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-paragraph/src/paragraph.js","webpack://ClassicEditor/./node_modules/lodash-es/_arrayFilter.js","webpack://ClassicEditor/./node_modules/lodash-es/_getSymbols.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/isrange.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/liverange.js","webpack://ClassicEditor/./node_modules/lodash-es/_defineProperty.js","webpack://ClassicEditor/./node_modules/lodash-es/_Uint8Array.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/iswindow.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/dropdown/dropdownpanelview.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/dropdown/dropdownview.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/dropdown/button/dropdownbuttonview.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/list/listview.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/list/listitemview.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/list/listseparatorview.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/button/switchbuttonview.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/dropdown/utils.js","webpack://ClassicEditor/./node_modules/lodash-es/_stackClear.js","webpack://ClassicEditor/./node_modules/lodash-es/_stackDelete.js","webpack://ClassicEditor/./node_modules/lodash-es/_stackGet.js","webpack://ClassicEditor/./node_modules/lodash-es/_stackHas.js","webpack://ClassicEditor/./node_modules/lodash-es/_stackSet.js","webpack://ClassicEditor/./node_modules/lodash-es/_Stack.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/priorities.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/toolbar/toolbarseparatorview.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/toolbar/toolbarview.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/bindings/preventdefault.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/dataprocessor/basichtmlwriter.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/dataprocessor/htmldataprocessor.js","webpack://ClassicEditor/./node_modules/lodash-es/_getAllKeys.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/count.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/rootattributeoperation.js","webpack://ClassicEditor/./node_modules/lodash-es/isPlainObject.js","webpack://ClassicEditor/./node_modules/lodash-es/identity.js","webpack://ClassicEditor/./node_modules/lodash-es/_apply.js","webpack://ClassicEditor/./node_modules/lodash-es/_overRest.js","webpack://ClassicEditor/./node_modules/lodash-es/constant.js","webpack://ClassicEditor/./node_modules/lodash-es/_baseSetToString.js","webpack://ClassicEditor/./node_modules/lodash-es/_shortOut.js","webpack://ClassicEditor/./node_modules/lodash-es/_setToString.js","webpack://ClassicEditor/./node_modules/lodash-es/_baseRest.js","webpack://ClassicEditor/./node_modules/lodash-es/_isIterateeCall.js","webpack://ClassicEditor/./node_modules/lodash-es/_createAssigner.js","webpack://ClassicEditor/./node_modules/lodash-es/assignIn.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-clipboard/src/datatransfer.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-clipboard/src/clipboardobserver.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-clipboard/src/utils/viewtoplaintext.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-clipboard/src/clipboard.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-clipboard/src/utils/normalizeclipboarddata.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-clipboard/src/utils/plaintexttohtml.js","webpack://ClassicEditor/./node_modules/lodash-es/_freeGlobal.js","webpack://ClassicEditor/./node_modules/lodash-es/_overArg.js","webpack://ClassicEditor/./node_modules/lodash-es/isFunction.js","webpack://ClassicEditor/./node_modules/lodash-es/_baseAssignValue.js","webpack://ClassicEditor/./node_modules/lodash-es/_assignValue.js","webpack://ClassicEditor/./node_modules/lodash-es/stubArray.js","webpack://ClassicEditor/./node_modules/lodash-es/_arrayPush.js","webpack://ClassicEditor/./node_modules/lodash-es/isLength.js","webpack://ClassicEditor/./node_modules/lodash-es/_isIndex.js","webpack://ClassicEditor/./node_modules/lodash-es/_baseGetAllKeys.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/objecttomap.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/documentselection.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/getborderwidths.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-basic-styles/src/attributecommand.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/bindings/clickoutsidehandler.js","webpack://ClassicEditor/./node_modules/lodash-es/_nativeCreate.js","webpack://ClassicEditor/./node_modules/lodash-es/_hashClear.js","webpack://ClassicEditor/./node_modules/lodash-es/_hashDelete.js","webpack://ClassicEditor/./node_modules/lodash-es/_hashGet.js","webpack://ClassicEditor/./node_modules/lodash-es/_hashHas.js","webpack://ClassicEditor/./node_modules/lodash-es/_hashSet.js","webpack://ClassicEditor/./node_modules/lodash-es/_Hash.js","webpack://ClassicEditor/./node_modules/lodash-es/_mapCacheClear.js","webpack://ClassicEditor/./node_modules/lodash-es/_isKeyable.js","webpack://ClassicEditor/./node_modules/lodash-es/_getMapData.js","webpack://ClassicEditor/./node_modules/lodash-es/_mapCacheDelete.js","webpack://ClassicEditor/./node_modules/lodash-es/_mapCacheGet.js","webpack://ClassicEditor/./node_modules/lodash-es/_mapCacheHas.js","webpack://ClassicEditor/./node_modules/lodash-es/_mapCacheSet.js","webpack://ClassicEditor/./node_modules/lodash-es/_MapCache.js","webpack://ClassicEditor/./node_modules/lodash-es/_setCacheAdd.js","webpack://ClassicEditor/./node_modules/lodash-es/_setCacheHas.js","webpack://ClassicEditor/./node_modules/lodash-es/_SetCache.js","webpack://ClassicEditor/./node_modules/lodash-es/_arraySome.js","webpack://ClassicEditor/./node_modules/lodash-es/_cacheHas.js","webpack://ClassicEditor/./node_modules/lodash-es/_equalArrays.js","webpack://ClassicEditor/./node_modules/lodash-es/_mapToArray.js","webpack://ClassicEditor/./node_modules/lodash-es/_setToArray.js","webpack://ClassicEditor/./node_modules/lodash-es/_equalByTag.js","webpack://ClassicEditor/./node_modules/lodash-es/_equalObjects.js","webpack://ClassicEditor/./node_modules/lodash-es/_baseIsEqualDeep.js","webpack://ClassicEditor/./node_modules/lodash-es/_baseIsEqual.js","webpack://ClassicEditor/./node_modules/lodash-es/_baseTimes.js","webpack://ClassicEditor/./node_modules/lodash-es/_baseIsArguments.js","webpack://ClassicEditor/./node_modules/lodash-es/isArguments.js","webpack://ClassicEditor/./node_modules/lodash-es/_arrayLikeKeys.js","webpack://ClassicEditor/./node_modules/lodash-es/_baseIsTypedArray.js","webpack://ClassicEditor/./node_modules/lodash-es/isTypedArray.js","webpack://ClassicEditor/(webpack)/buildin/harmony-module.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/label/labelview.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/tounit.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/tooltip/tooltipview.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/model.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/nooperation.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/transform.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-undo/src/basecommand.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-undo/src/undocommand.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-undo/src/redocommand.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-undo/src/undoediting.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-undo/src/undoui.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-undo/src/undo.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/position.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/getpositionedancestor.js","webpack://ClassicEditor/(webpack)/buildin/global.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-heading/theme/heading.css?8ac6","webpack://ClassicEditor/./node_modules/lodash-es/stubFalse.js","webpack://ClassicEditor/./node_modules/lodash-es/_cloneBuffer.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-undo/theme/icons/undo.svg","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-undo/theme/icons/redo.svg","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-basic-styles/theme/icons/bold.svg","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-basic-styles/theme/icons/italic.svg","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-core/theme/icons/quote.svg","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/icons/dropdown-arrow.svg","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-list/theme/icons/numberedlist.svg","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-list/theme/icons/bulletedlist.svg","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/config.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/rooteditableelement.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/document.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/emptyelement.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/uielement.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/downcastwriter.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/insertat.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/remove.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/fastdiff.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/renderer.js","webpack://ClassicEditor/./node_modules/lodash-es/isEqualWith.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/mutationobserver.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/keyobserver.js","webpack://ClassicEditor/./node_modules/lodash-es/now.js","webpack://ClassicEditor/./node_modules/lodash-es/isSymbol.js","webpack://ClassicEditor/./node_modules/lodash-es/toNumber.js","webpack://ClassicEditor/./node_modules/lodash-es/debounce.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/fakeselectionobserver.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/selectionobserver.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/focusobserver.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/observer/compositionobserver.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/scroll.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/view/view.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/conversion/mapper.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/conversion/modelconsumable.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/conversion/downcastdispatcher.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/controller/editingcontroller.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/conversion/upcast-selection-converters.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/conversion/downcast-selection-converters.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-core/src/plugincollection.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-core/src/commandcollection.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/translation-service.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/locale.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/conversion/viewconsumable.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/schema.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/conversion/upcastdispatcher.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/controller/datacontroller.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/conversion/conversion.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/batch.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/operation/detachoperation.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/rootelement.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/writer.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/differ.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/history.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/unicode.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/document.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/markercollection.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/utils/insertcontent.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/utils/deletecontent.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/utils/modifyselection.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/utils/getselectedcontent.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/utils/selection-post-fixer.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-engine/src/model/model.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-core/src/editingkeystrokehandler.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-core/src/editor/editor.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-core/src/editor/utils/dataapimixin.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-core/src/editor/utils/elementapimixin.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/setdatainelement.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/componentfactory.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-core/src/editor/editorui.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-editor-classic/src/classiceditorui.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/toolbar/normalizetoolbarconfig.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/toolbar/enabletoolbarkeyboardfocus.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/editorui/editoruiview.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/editorui/boxed/boxededitoruiview.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/editableui/editableuiview.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/editableui/inline/inlineeditableuiview.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/src/panel/sticky/stickypanelview.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-editor-classic/src/classiceditoruiview.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/elementreplacer.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-editor-classic/src/classiceditor.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-core/src/editor/utils/attachtoform.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/dom/getdatafromelement.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-enter/src/entercommand.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-enter/src/enterobserver.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-enter/src/enter.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-enter/src/shiftentercommand.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-enter/src/shiftenter.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-typing/src/utils/changebuffer.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-typing/src/inputcommand.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-typing/src/utils/injectunsafekeystrokeshandling.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-typing/src/utils/utils.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/difftochanges.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-typing/src/utils/injecttypingmutationshandling.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-typing/src/input.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-typing/src/deletecommand.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-typing/src/deleteobserver.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-typing/src/utils/injectandroidbackspacemutationshandling.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-typing/src/delete.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-typing/src/typing.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-essentials/src/essentials.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-list/src/listcommand.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-list/src/indentcommand.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-list/src/utils.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-list/src/converters.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-list/src/listediting.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-list/src/listui.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-list/src/list.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-heading/src/headingcommand.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-heading/src/headingediting.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-heading/src/headingui.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-heading/src/utils.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-heading/src/heading.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-block-quote/src/blockquotecommand.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-block-quote/src/blockquoteediting.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-block-quote/src/blockquoteui.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-block-quote/src/blockquote.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-basic-styles/src/bold/boldediting.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-basic-styles/src/bold/boldui.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-basic-styles/src/bold.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-autoformat/src/blockautoformatediting.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-autoformat/src/inlineautoformatediting.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-autoformat/src/autoformat.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-basic-styles/src/italic/italicediting.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-basic-styles/src/italic/italicui.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-basic-styles/src/italic.js","webpack://ClassicEditor/./node_modules/lodash-es/isElement.js","webpack://ClassicEditor/./node_modules/@babel/runtime/regenerator/index.js","webpack://ClassicEditor/./node_modules/regenerator-runtime/runtime-module.js","webpack://ClassicEditor/./node_modules/regenerator-runtime/runtime.js","webpack://ClassicEditor/(webpack)/buildin/module.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-utils/src/version.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/globals/globals.css?5f9a","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/globals/globals.css","webpack://ClassicEditor/./node_modules/style-loader/lib/urls.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/editorui/editorui.css?3a4b","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/editorui/editorui.css","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/label/label.css?ed50","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/label/label.css","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/panel/stickypanel.css?d375","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/panel/stickypanel.css","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/toolbar/toolbar.css?cc59","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/toolbar/toolbar.css","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-editor-classic/theme/classiceditor.css?959e","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-editor-classic/theme/classiceditor.css","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/icon/icon.css?9817","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/icon/icon.css","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/tooltip/tooltip.css?2426","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/tooltip/tooltip.css","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/button/button.css?3567","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/button/button.css","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-block-quote/theme/blockquote.css?07a2","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-block-quote/theme/blockquote.css","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/dropdown/dropdown.css?eb7a","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/dropdown/dropdown.css","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/list/list.css?6f7e","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/list/list.css","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/button/switchbutton.css?17d1","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/button/switchbutton.css","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/dropdown/toolbardropdown.css?1641","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/dropdown/toolbardropdown.css","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/dropdown/listdropdown.css?2a7e","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-ui/theme/components/dropdown/listdropdown.css","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-heading/theme/heading.css","webpack://ClassicEditor/./node_modules/lodash-es/clone.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-markdown-gfm/src/lib/marked/marked.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-markdown-gfm/src/lib/to-markdown/to-markdown.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-markdown-gfm/src/lib/marked/renderer.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-markdown-gfm/src/lib/to-markdown/converters.js","webpack://ClassicEditor/./node_modules/@ckeditor/ckeditor5-markdown-gfm/src/gfmdataprocessor.js","webpack://ClassicEditor/./src/ckeditor.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_typeof","obj","iterator","constructor","_defineProperties","target","props","length","descriptor","configurable","writable","_possibleConstructorReturn","self","ReferenceError","_assertThisInitialized","_wrapNativeSuper","Class","_cache","Map","undefined","fn","Function","toString","indexOf","_isNativeFunction","TypeError","has","set","Wrapper","_construct","arguments","_getPrototypeOf","this","_setPrototypeOf","Parent","args","Reflect","construct","sham","Proxy","Date","e","isNativeReflectConstruct","a","push","apply","instance","setPrototypeOf","__proto__","getPrototypeOf","__webpack_exports__","CKEditorError","attachLinkToDocumentation","DOCUMENTATION_URL","_Error","message","data","_this","Constructor","_classCallCheck","JSON","stringify","subClass","superClass","_inherits","Error","protoProps","staticProps","_createClass","error","matchedErrorName","match","concat","Range","_position__WEBPACK_IMPORTED_MODULE_0__","_treewalker__WEBPACK_IMPORTED_MODULE_1__","_ckeditor_ckeditor5_utils_src_ckeditorerror__WEBPACK_IMPORTED_MODULE_2__","_ckeditor_ckeditor5_utils_src_comparearrays__WEBPACK_IMPORTED_MODULE_3__","_toConsumableArray","arr","Array","isArray","arr2","_arrayWithoutHoles","iter","from","_iterableToArray","_nonIterableSpread","start","end","_createAt","stickiness","isCollapsed","regeneratorRuntime","mark","wrap","_context","prev","next","delegateYield","boundaries","ignoreElementEnd","stop","position","isAfter","isBefore","otherRange","loose","containsStart","containsPosition","isEqual","containsEnd","item","pos","_createBefore","ranges","isIntersecting","commonRangeStart","commonRangeEnd","diffAt","getCommonPath","posParent","parent","path","howMany","maxOffset","offset","getShiftedBy","slice","_howMany","options","getItems","treeWalker","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_value","_args2","_context2","done","t0","return","finish","getPositions","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_value2","_args3","_context3","nextPosition","operation","type","_getTransformedByInsertOperation","_getTransformedByMoveOperation","_getTransformedBySplitOperation","_getTransformedByMergeOperation","operations","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_i","result","getTransformedByOperation","splice","err","range","j","containsRange","getCommonAncestor","toJSON","spread","_getTransformedByInsertion","sourcePosition","targetPosition","_getTransformedByMove","insertionPosition","deletionPosition","insertPosition","moveRange","_createFromPositionAndShift","_getTransformedByDeletion","differenceSet","getDifference","difference","common","getIntersection","transformedCommon","_getCombined","deletePosition","newStart","newEnd","startParentPath","getParentPath","endParentPath","shift","element","offsetSize","clone","ref","sort","b","refIndex","_i2","json","doc","fromJSON","last","array","position_Position","Position","is","ckeditorerror","getPath","otherPosition","comparearrays","skip","startPosition","treewalker","getAncestors","includeSelf","cmp","Math","min","ancestorsA","ancestorsB","shifted","compareWith","left","right","leftParent","thisParentPath","posParentPath","movedRange","splitPosition","moveTargetPosition","graveyardPosition","transformed","source","combined","lodash_es_last","newOffset","getChild","offsetToIndex","node","index","model_text","startOffset","textNode","itemOrPosition","_createAfter","endOffset","_pos","graveyard","getRoot","rootName","Plugin","_ckeditor_ckeditor5_utils_src_observablemixin__WEBPACK_IMPORTED_MODULE_0__","_ckeditor_ckeditor5_utils_src_mix__WEBPACK_IMPORTED_MODULE_1__","editor","stopListening","_treewalker__WEBPACK_IMPORTED_MODULE_0__","_ckeditor_ckeditor5_utils_src_comparearrays__WEBPACK_IMPORTED_MODULE_1__","_editableelement__WEBPACK_IMPORTED_MODULE_3__","thisPath","otherPath","childCount","editable","offsetInText","mix","baseClass","_len","mixins","_key","forEach","mixin","getOwnPropertyNames","getOwnPropertySymbols","sourceDescriptor","getOwnPropertyDescriptor","getLastMatchingPosition","enlargeTrimSkip","direction","isAtStart","isAtEnd","nodeAfterStart","nodeAfter","nodeBeforeEnd","nodeBefore","startElement","endElement","_createFromParentsAndOffsets","size","View","_ckeditor_ckeditor5_utils_src_ckeditorerror__WEBPACK_IMPORTED_MODULE_0__","_viewcollection__WEBPACK_IMPORTED_MODULE_1__","_template__WEBPACK_IMPORTED_MODULE_2__","_ckeditor_ckeditor5_utils_src_dom_emittermixin__WEBPACK_IMPORTED_MODULE_3__","_ckeditor_ckeditor5_utils_src_observablemixin__WEBPACK_IMPORTED_MODULE_4__","_ckeditor_ckeditor5_utils_src_collection__WEBPACK_IMPORTED_MODULE_5__","_ckeditor_ckeditor5_utils_src_mix__WEBPACK_IMPORTED_MODULE_6__","_ckeditor_ckeditor5_utils_src_isiterable__WEBPACK_IMPORTED_MODULE_7__","locale","isRendered","_viewCollections","_unboundChildren","createCollection","on","evt","collection","decorate","add","children","child","remove","definition","template","extend","render","registerChild","getViews","map","destroy","_bindTemplate","src_spy","spy","called","eventinfo_EventInfo","EventInfo","off","_slicedToArray","_arrayWithHoles","_arr","_n","_d","_e","_s","_iterableToArrayLimit","_nonIterableRest","_getEmitterListenedTo","_setEmitterId","_listeningTo","_emitterId","EmitterMixin","event","callback","listenTo","once","emitter","emitterInfo","eventCallbacks","emitters","_getEmitterId","emitterId","callbacks","eventName","events","getEvents","childEventName","newEventNodes","childEvents","substr","lastIndexOf","createEventNamespace","lists","getCallbacksListsForNamespace","priority","priorities","callbackDefinition","added","removeCallback","pop","fire","eventOrInfo","eventInfo","getCallbacksForEvent","_events","_len2","_key2","callbackArgs","_delegations","destinations","passAllDestinations","fireDelegatedEvents","delegate","_len3","_key3","to","nameOrFunction","stopDelegating","delete","clear","listeningEmitter","listenedToEmitterId","id","uid","eventNode","callbacksLists","childCallbacksLists","fireArgs","_step2$value","delegatedInfo","keyCodes","getCode","parseKeystroke","getEnvKeystrokeText","_ckeditorerror__WEBPACK_IMPORTED_MODULE_0__","_env__WEBPACK_IMPORTED_MODULE_1__","macGlyphsToModifiers","⌘","⇧","⌥","modifiersToMacGlyphs","ctrl","alt","arrowleft","arrowup","arrowright","arrowdown","backspace","enter","space","esc","tab","cmd","code","letter","String","fromCharCode","toLowerCase","_code","_code2","generateKnownKeyCodes","keyCode","altKey","ctrlKey","shiftKey","keystroke","splitKeystrokeText","reduce","sum","isMac","split","Command","model","document","refresh","isEnabled","forceDisable","BR_FILLER","NBSP_FILLER","INLINE_FILLER_LENGTH","INLINE_FILLER","startsWithFiller","isInlineFiller","getDataWithoutFiller","isBlockFiller","injectQuirksHandling","_ckeditor_ckeditor5_utils_src_keyboard__WEBPACK_IMPORTED_MODULE_0__","_ckeditor_ckeditor5_utils_src_dom_istext__WEBPACK_IMPORTED_MODULE_1__","domDocument","fillerBr","createElement","dataset","ckeFiller","createTextNode","domNode","domText","templateBlockFillers","WeakMap","blockFiller","templateBlockFiller","isEqualNode","view","jumpOverInlineFiller","domSelection","domTarget","ownerDocument","defaultView","getSelection","rangeCount","getRangeAt","collapsed","domParent","startContainer","domOffset","collapse","log","console","warn","Element","_node__WEBPACK_IMPORTED_MODULE_0__","_nodelist__WEBPACK_IMPORTED_MODULE_1__","_text__WEBPACK_IMPORTED_MODULE_2__","_textproxy__WEBPACK_IMPORTED_MODULE_3__","_ckeditor_ckeditor5_utils_src_isiterable__WEBPACK_IMPORTED_MODULE_4__","_get","receiver","base","_superPropBase","desc","_Node","attrs","_children","_insertChild","getNode","getNodeIndex","getNodeStartOffset","relativePath","_clone","getAttributes","nodes","items","normalize","_remove","_insertNodes","_removeNodes","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","attributes","_emittermixin__WEBPACK_IMPORTED_MODULE_0__","_ckeditorerror__WEBPACK_IMPORTED_MODULE_1__","lodash_es__WEBPACK_IMPORTED_MODULE_2__","lodash_es__WEBPACK_IMPORTED_MODULE_3__","observablePropertiesSymbol","boundObservablesSymbol","boundPropertiesSymbol","ObservableMixin","keys","initObservable","properties","oldValue","newValue","bindProperties","isStringArray","Set","boundProperties","propertyName","bindings","binding","bindTo","toMany","bindToMany","_observable","_bindProperties","_to","_bindings","unbind","_this2","boundObservables","unbindProperties","toObservable","toProperty","toProperties","toPropertyBindings","boundObservable","methodName","_this3","originalMethod","observable","_this4","parsedArgs","_len4","_key4","lastObservable","parsed","bindingsKeys","numberOfBindings","toBindings","updateBoundObservableProperty","attachBindToListeners","chain","toPropertyName","bindingsToObservable","updateBoundObservables","updateBindToBound","observables","attribute","observableAndAttributePairs","getBindingTargets","every","propertyValue","Text","_data","_textData","otherNode","_fireChange","MoveOperation","_operation__WEBPACK_IMPORTED_MODULE_0__","_position__WEBPACK_IMPORTED_MODULE_1__","_range__WEBPACK_IMPORTED_MODULE_2__","_ckeditor_ckeditor5_utils_src_ckeditorerror__WEBPACK_IMPORTED_MODULE_3__","_ckeditor_ckeditor5_utils_src_comparearrays__WEBPACK_IMPORTED_MODULE_4__","_utils__WEBPACK_IMPORTED_MODULE_5__","_Operation","baseVersion","newTargetPosition","getMovedRangeStart","sourceElement","targetElement","sourceOffset","targetOffset","SplitOperation","_mergeoperation__WEBPACK_IMPORTED_MODULE_1__","_position__WEBPACK_IMPORTED_MODULE_2__","_range__WEBPACK_IMPORTED_MODULE_3__","_utils__WEBPACK_IMPORTED_MODULE_4__","_ckeditor_ckeditor5_utils_src_ckeditorerror__WEBPACK_IMPORTED_MODULE_5__","getInsertionPosition","splitElement","newElement","sourceRange","Number","POSITIVE_INFINITY","stylesInDom","isOldIE","memo","memoize","all","atob","getElement","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","domStyle","refs","parts","addStyle","listToStyles","list","newStyles","part","css","media","sourceMap","insertStyleElement","style","insertInto","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","before","removeStyleElement","parentNode","removeChild","idx","createStyleElement","nonce","nc","getNonce","addAttrs","el","setAttribute","update","transform","default","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","btoa","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","unescape","encodeURIComponent","blob","oldSrc","href","styleSheet","cssText","newObj","DEBUG","newList","mayRemove","replaceText","textStore","replacement","filter","Boolean","join","cssNode","childNodes","ButtonView","_view__WEBPACK_IMPORTED_MODULE_0__","_icon_iconview__WEBPACK_IMPORTED_MODULE_1__","_tooltip_tooltipview__WEBPACK_IMPORTED_MODULE_2__","_ckeditor_ckeditor5_utils_src_uid__WEBPACK_IMPORTED_MODULE_3__","_ckeditor_ckeditor5_utils_src_keyboard__WEBPACK_IMPORTED_MODULE_4__","_View","bindTemplate","ariaLabelUid","tooltipView","_createTooltipView","labelView","_createLabelView","iconView","extendTemplate","class","_getTooltipString","setTemplate","tag","if","tabindex","aria-labelledby","aria-disabled","aria-pressed","mousedown","preventDefault","click","icon","focus","text","tooltip","label","freeSelf","freeGlobal","compareArrays","minLen","isText","Operation","isDocumentOperation","batch","assign","__className","className","MergeOperation","_splitoperation__WEBPACK_IMPORTED_MODULE_1__","mergedElement","_createIn","_createOn","upcastElementToElement","upcastElementToAttribute","upcastAttributeToAttribute","convertToModelFragment","convertText","_view_matcher__WEBPACK_IMPORTED_MODULE_0__","_model_range__WEBPACK_IMPORTED_MODULE_1__","_defineProperty","config","converter","matcher","conversionApi","viewItem","modelElement","input","writer","_getModelElement","consumable","test","splitResult","splitToAllowedParent","modelCursor","insert","childrenResult","convertChildren","createPositionAt","consume","modelRange","createPositionBefore","createPositionAfter","cursorParent","_prepareToElementConverter","elementName","_getViewElementNameFromConfig","dispatcher","converterPriority","_normalizeModelAttributeConfig","_prepareToAttributeConverter","viewKey","normalized","keyName","_normalizeViewAttributeKeyValueConfig","viewAttributeKeyToCopy","defaultModelValue","viewElement","getAttribute","shallow","modelKey","modelValue","classes","_onlyViewNameIsDefined","modelAttribute","schema","checkAttribute","_setAttributeOn","_conversionApi$conver","checkChild","createText","isObjectLike","isObject","_text__WEBPACK_IMPORTED_MODULE_1__","_textproxy__WEBPACK_IMPORTED_MODULE_2__","_ckeditor_ckeditor5_utils_src_objecttomap__WEBPACK_IMPORTED_MODULE_3__","_matcher__WEBPACK_IMPORTED_MODULE_5__","lodash_es__WEBPACK_IMPORTED_MODULE_6__","_attrs","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","_step8$value","parseAttributes","_classes","classString","parseClasses","_styles","parseInlineStyles","_customProperties","getAttributeKeys","entries","styleString","otherElement","_step3$value","_step5$value","_i3","patterns","getCustomProperties","deep","childrenClone","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","getChildren","cloned","getFillerOffset","count","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","_i4","stylesMap","stylesString","quoteType","propertyNameStart","propertyValueStart","charAt","char","trim","classesSet","classesString","classArray","isIterable","DocumentSelection","_ckeditor_ckeditor5_utils_src_mix__WEBPACK_IMPORTED_MODULE_0__","_ckeditor_ckeditor5_utils_src_emittermixin__WEBPACK_IMPORTED_MODULE_1__","_selection__WEBPACK_IMPORTED_MODULE_2__","_liverange__WEBPACK_IMPORTED_MODULE_3__","_text__WEBPACK_IMPORTED_MODULE_4__","_textproxy__WEBPACK_IMPORTED_MODULE_5__","_ckeditor_ckeditor5_utils_src_tomap__WEBPACK_IMPORTED_MODULE_6__","_ckeditor_ckeditor5_utils_src_ckeditorerror__WEBPACK_IMPORTED_MODULE_7__","_ckeditor_ckeditor5_utils_src_log__WEBPACK_IMPORTED_MODULE_8__","_ckeditor_ckeditor5_utils_src_uid__WEBPACK_IMPORTED_MODULE_9__","storePrefix","_selection","LiveSelection","getRanges","getFirstPosition","getLastPosition","getFirstRange","getLastRange","getSelectedBlocks","getSelectedElement","containsEntireContent","hasAttribute","setFocus","selectable","placeOrOffset","setTo","removeAttribute","_getStoredAttributes","overrideGravity","restoreGravity","anchor","hasOwnRange","isBackward","isGravityOverridden","_ranges","startsWith","_Selection","_model","_document","_attributePriority","_fixGraveyardRangesData","_hasChangedRange","_overriddenGravityRegister","_validateSelectionRange","_updateAttributes","differ","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_loop","entry","changeParent","isNoLongerEmpty","enqueueChange","storedAttributes","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","_iterator9","getChanges","clearAttributesStoredInElement","_this$_fixGraveyardRa","liveRange","_fixGraveyardSelection","directChange","detach","_getDefaultRange","optionsOrPlaceOrOffset","_refreshAttributes","_setAttribute","attributeKeys","_removeAttribute","overrideUid","_prepareRange","_checkRange","fromRange","oldRange","clearAll","newAttributes","_getSurroundingAttributes","oldAttributes","_setAttributesTo","changed","newKey","oldKey","_step6$value","selectionParent","realKey","isEmpty","getAttrsIfCharacter","previousSibling","_node","removedRangeStart","positionCandidate","selectionRange","getNearestSelectionRange","newRange","other","baseIsEqual","attributeoperation_AttributeOperation","AttributeOperation","isFlat","lodash_es_isEqual","utils","TextProxy","substring","parentFirst","ancestors","_insert","_move","_normalizeNodes","_documentfragment__WEBPACK_IMPORTED_MODULE_4__","_nodelist__WEBPACK_IMPORTED_MODULE_5__","_ckeditor_ckeditor5_utils_src_ckeditorerror__WEBPACK_IMPORTED_MODULE_6__","_splitNodeAtPosition","_mergeNodesAtIndex","removed","_removeChildren","_haveSameAttributes","mergedNode","offsetDiff","firstPart","secondPart","nodeA","nodeB","iteratorA","iteratorB","attr","InsertOperation","_nodelist__WEBPACK_IMPORTED_MODULE_2__","_moveoperation__WEBPACK_IMPORTED_MODULE_3__","_text__WEBPACK_IMPORTED_MODULE_5__","_element__WEBPACK_IMPORTED_MODULE_6__","shouldReceiveAttributes","gyPosition","originalNodes","downcastElementToElement","downcastAttributeToElement","downcastAttributeToAttribute","insertText","_model_selection__WEBPACK_IMPORTED_MODULE_1__","_view_attributeelement__WEBPACK_IMPORTED_MODULE_3__","_model_documentselection__WEBPACK_IMPORTED_MODULE_4__","_ckeditor_ckeditor5_utils_src_log__WEBPACK_IMPORTED_MODULE_5__","_normalizeToElementConfig","elementCreator","viewPosition","mapper","toViewPosition","bindElements","insertElement","values","_getFromAttributeCreator","oldViewElement","attributeOldValue","newViewElement","attributeNewValue","viewWriter","viewSelection","selection","viewRange","toViewRange","unwrap","_normalizeToAttributeConfig","attributeCreator","attributeKey","oldAttribute","newAttribute","toViewElement","removeClass","removeStyle","_className","addClass","_keys","setStyle","changeAttribute","viewElementType","modelData","viewElementDefinition","createContainerElement","DEFAULT_PRIORITY","createAttributeElement","createUIElement","_createViewElementFromDefinition","modelAttributeValue","viewText","viewStart","modelEnd","viewEnd","isPhantom","createRange","getTrimmed","createRangeIn","unbindViewElement","uuid","floor","random","coreJsData","maskSrcKey","exec","IE_PROTO","isMasked","func","reIsHostCtor","funcProto","objectProto","funcToString","reIsNative","RegExp","replace","baseIsNative","isFunction","toSource","getValue","getNative","Selection","_range__WEBPACK_IMPORTED_MODULE_1__","_ckeditor_ckeditor5_utils_src_mix__WEBPACK_IMPORTED_MODULE_3__","_ckeditor_ckeditor5_utils_src_emittermixin__WEBPACK_IMPORTED_MODULE_4__","_node__WEBPACK_IMPORTED_MODULE_5__","_ckeditor_ckeditor5_utils_src_count__WEBPACK_IMPORTED_MODULE_7__","_ckeditor_ckeditor5_utils_src_isiterable__WEBPACK_IMPORTED_MODULE_8__","_documentselection__WEBPACK_IMPORTED_MODULE_9__","_lastRangeBackward","_isFake","_fakeSelectionLabel","first","firstRange","lastRange","otherSelection","isFake","fakeSelectionLabel","thisRange","found","numOfRangesA","rangeA","rangeB","_setRanges","_setFakeOptions","fake","backward","newFocus","_addRange","newRanges","isLastBackward","_pushRange","storedRange","addedRange","intersectingRange","editableElement","Collection","_uid__WEBPACK_IMPORTED_MODULE_2__","_mix__WEBPACK_IMPORTED_MODULE_3__","_items","_itemMap","_idProperty","idProperty","_bindToExternalToInternalMap","_bindToInternalToExternalMap","_skippedIndexesFromExternal","itemId","idOrIndex","idOrItem","subject","itemDoesNotExist","externalItem","ctx","find","_bindToCollection","externalCollection","as","_setUpBindToBinding","using","callbackOrProperty","addItem","isExternalBoundToThis","externalItemBound","finalIndex","getIndex","skipped","iterable","iteratorItem","Observer","_ckeditor_ckeditor5_utils_src_dom_emittermixin__WEBPACK_IMPORTED_MODULE_0__","disable","nativeObjectToString","symToStringTag","getRawTag","isOwn","unmasked","objectToString","nullTag","undefinedTag","baseGetTag","KeystrokeHandler","_dom_emittermixin__WEBPACK_IMPORTED_MODULE_0__","_keyboard__WEBPACK_IMPORTED_MODULE_1__","_listener","keyEvtData","stopPropagation","FocusTracker","_observablemixin__WEBPACK_IMPORTED_MODULE_1__","_ckeditorerror__WEBPACK_IMPORTED_MODULE_2__","focusedElement","_elements","_nextEventLoopTimeout","_focus","useCapture","_blur","clearTimeout","isFocused","setTimeout","_element__WEBPACK_IMPORTED_MODULE_1__","_node__WEBPACK_IMPORTED_MODULE_2__","anyNewRange","some","_removeAllRanges","_popRange","visited","startBlock","endBlock","WeakSet","getParentBlock","getWalker","isUnvisitedBlockContainer","isTouching","t1","limitStartPosition","limitEndPosition","isBlock","block","TreeWalker","_text__WEBPACK_IMPORTED_MODULE_0__","_textproxy__WEBPACK_IMPORTED_MODULE_1__","_element__WEBPACK_IMPORTED_MODULE_2__","_position__WEBPACK_IMPORTED_MODULE_3__","_ckeditor_ckeditor5_utils_src_ckeditorerror__WEBPACK_IMPORTED_MODULE_4__","singleCharacters","_boundaryStartParent","_boundaryEndParent","_visitedParent","_skip","prevPosition","prevVisitedParent","_this$next","_next","_previous","previousPosition","formatReturnValue","charactersCount","offsetInTextNode","Rect","_isrange__WEBPACK_IMPORTED_MODULE_0__","_iswindow__WEBPACK_IMPORTED_MODULE_1__","_getborderwidths__WEBPACK_IMPORTED_MODULE_2__","_log__WEBPACK_IMPORTED_MODULE_3__","_istext__WEBPACK_IMPORTED_MODULE_4__","lodash_es__WEBPACK_IMPORTED_MODULE_5__","rectProperties","isSourceRange","_source","sourceNode","body","contains","copyRectProperties","getDomRangeRects","getBoundingClientRect","innerWidth","innerHeight","top","bottom","width","height","x","y","anotherRect","rect","max","getArea","visibleRect","isBody","commonAncestorContainer","parentRect","intersectionRect","prop","intersectRect","scrollBarWidth","scrollBarHeight","documentElement","clientWidth","clientHeight","borderWidths","offsetWidth","offsetHeight","moveBy","rects","clientRects","getClientRects","_rect","elementOrRange","diff","_delete","tmp","delta","es","fp","snake","k","y1","y2","dir","Node","_ckeditor_ckeditor5_utils_src_mix__WEBPACK_IMPORTED_MODULE_2__","lodash_es__WEBPACK_IMPORTED_MODULE_4__","unshift","nodePath","getChildIndex","_assignValue_js__WEBPACK_IMPORTED_MODULE_0__","_baseAssignValue_js__WEBPACK_IMPORTED_MODULE_1__","copyObject","customizer","isNew","baseAssignValue","assignValue","DomEventObserver","_observer__WEBPACK_IMPORTED_MODULE_0__","_domeventdata__WEBPACK_IMPORTED_MODULE_1__","_Observer","domElement","domEventType","domEvent","onDomEvent","eventType","additionalData","_ckeditor_ckeditor5_utils_src_tomap__WEBPACK_IMPORTED_MODULE_0__","_ckeditor_ckeditor5_utils_src_ckeditorerror__WEBPACK_IMPORTED_MODULE_1__","_ckeditor_ckeditor5_utils_src_comparearrays__WEBPACK_IMPORTED_MODULE_2__","getChildStartOffset","NodeList","_nodes","totalOffset","nodeList","_this$_nodes","indexStart","toMap","_objecttomap__WEBPACK_IMPORTED_MODULE_0__","lodash_es__WEBPACK_IMPORTED_MODULE_1__","CLONE_DEEP_FLAG","CLONE_SYMBOLS_FLAG","cloneDeepWith","baseClone","template_Template","Template","def","template_clone","_isRendered","_revertData","_renderNode","intoFragment","isApplying","revertData","_revertTemplateFromNode","_marked","search","isView","isTemplate","_renderText","_renderElement","createElementNS","_renderAttributes","_renderElementChildren","_setUpListeners","textContent","hasTemplateBinding","_bindToObservable","updater","getTextUpdater","attrName","attrValue","domAttrValue","attrNs","valueToBind","shouldExtend","getAttributeUpdater","_renderStyleAttribute","isFalsy","val","arrayValueReducer","setAttributeNS","styleName","styleValue","getStyleUpdater","container","createDocumentFragment","childIndex","isViewCollection","setParent","isnode","childRevertData","eventListeners","revertBindings","schemaItem","_key$split2","domEvtName","domSelector","activateDomEventListener","_ref2","syncValueSchemaValue","templateBinding","activateAttributeListener","revertBinding","eventNameOrFunctionOrAttribute","TemplateToBinding","eventNameOrFunction","valueIfTrue","TemplateIfBinding","extendObjectValueArray","_template$text","childDef","emittermixin","TemplateBinding","_TemplateBinding","domEvt","matches","_TemplateBinding2","_ref3","getValueSchemaValue","removeAttributeNS","lodash_es_cloneDeepWith","normalizePlainTextDefinition","normalizeTextDefinition","listeners","arrayify","normalizeListeners","normalizeAttributes","cur","ext","_obj$a","src_view","viewcollection","_element__WEBPACK_IMPORTED_MODULE_0__","_formatReturnValue","textLength","textProxy","LivePosition","_Position","oldPosition","toPosition","AttributeElement","_Element","_priority","_id","_clonesGroup","nonUiChildrenCount","RenameOperation","oldName","newName","DataView","Promise","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","getTag","ArrayBuffer","resolve","Ctor","ctorString","freeExports","nodeType","freeModule","freeProcess","process","nodeUtil","types","require","Matcher","_patterns","pattern","singleElement","isElementMatching","results","matchName","matchAttributes","getClassNames","hasClass","matchClasses","hasStyle","getStyle","matchStyles","isNode","Document","DocumentFragment","_nodelist__WEBPACK_IMPORTED_MODULE_0__","markers","MarkerOperation","affectsData","_markers","userAgent","navigator","env","isEdge","isGecko","eq","_uid__WEBPACK_IMPORTED_MODULE_1__","_isnode__WEBPACK_IMPORTED_MODULE_2__","_iswindow__WEBPACK_IMPORTED_MODULE_3__","DomEmitterMixin","_EmitterMixin$listenT","rest","proxy","_getProxyEmitter","ProxyEmitter","attach","getNodeUID","_domNode","_domListeners","domListener","_createDomListener","addEventListener","removeListener","removeEventListener","ViewCollection","_ckeditor_ckeditor5_utils_src_observablemixin__WEBPACK_IMPORTED_MODULE_1__","_ckeditor_ckeditor5_utils_src_collection__WEBPACK_IMPORTED_MODULE_2__","_Collection","_parentElement","elementOrDocFragment","dest","evtName","FocusCycler","_ckeditor_ckeditor5_utils_src_dom_global__WEBPACK_IMPORTED_MODULE_0__","actions","keystrokeHandler","cancel","previous","step","current","collectionLength","focusables","isFocusable","_getFocusableItem","focusTracker","viewIndex","focused","getComputedStyle","display","listCacheClear","__data__","assocIndexOf","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","ListCache","_ckeditor_ckeditor5_utils_src_isiterable__WEBPACK_IMPORTED_MODULE_3__","ContainerElement","lastChild","_getNative_js__WEBPACK_IMPORTED_MODULE_0__","_root_js__WEBPACK_IMPORTED_MODULE_1__","_baseClone_js__WEBPACK_IMPORTED_MODULE_0__","cloneDeep","DOCUMENT_NODE","domconverter_DomConverter","DomConverter","filler","preElements","blockElements","_domToViewMapping","_viewToDomMapping","_fakeSelectionMapping","viewDocumentSelection","unbindDomElement","domFragment","viewFragment","viewNode","textData","_processDataFromViewText","mapViewToDom","bindDocumentFragments","withChildren","viewChildrenToDom","fillerPositionOffset","childView","_args","viewToDom","domStart","viewPositionToDom","domEnd","domRange","setStart","setEnd","_domParent","domBefore","domAfter","viewParent","findCorrespondingDomText","istext","uiElement","getParentUIElement","_processDataFromDomText","view_text","isComment","mapDomToView","isDocumentFragment","documentfragment","viewName","keepOriginalCase","tagName","view_element","domChildrenToView","_appendChild","domChild","viewChild","domToView","fakeSelectionToView","isDomSelectionBackward","viewRanges","domRangeToView","domPositionToView","endContainer","findCorrespondingViewText","_viewParent","viewBefore","domElementOrDocumentFragment","isElement","_viewElement","documentFragmentOrElement","viewEditable","domEditable","activeElement","_global$window","global","scrollX","scrollY","scrollPositions","forEachDomNodeAncestor","scrollLeft","scrollTop","_scrollPositions$shif2","scrollTo","ELEMENT_NODE","DOCUMENT_FRAGMENT_NODE","COMMENT_NODE","anchorNode","anchorOffset","focusNode","focusOffset","_isDomSelectionPositionCorrect","includes","prevNode","_getTouchingViewTextNode","_nodeEndsWithSpace","_hasDomParentOfType","_getTouchingInlineDomNode","nextNode","shouldLeftTrim","_checkShouldLeftTrimDomText","shouldRightTrim","_checkShouldRightTrimDomText","getNext","topmostParent","createTreeWalker","NodeFilter","SHOW_TEXT","SHOW_ELEMENT","acceptNode","FILTER_ACCEPT","FILTER_SKIP","currentNode","touchingNode","lca","boundaryParent","parents","Buffer","isBuffer","stubFalse","_overArg_js__WEBPACK_IMPORTED_MODULE_0__","getPrototype","overArg","EditableElement","_containerelement__WEBPACK_IMPORTED_MODULE_0__","_ckeditor_ckeditor5_utils_src_observablemixin__WEBPACK_IMPORTED_MODULE_3__","documentSymbol","_ContainerElement","getCustomProperty","_setCustomProperty","isPrototype","_isFunction_js__WEBPACK_IMPORTED_MODULE_0__","_isLength_js__WEBPACK_IMPORTED_MODULE_1__","isArrayLike","isLength","baseUnary","DomEventData","lodash_es__WEBPACK_IMPORTED_MODULE_0__","domConverter","IconView","viewBox","_updateXMLContent","_colorFillPaths","content","svg","DOMParser","parseFromString","innerHTML","fillColor","querySelectorAll","fill","arrayEach","iteratee","baseAssign","baseAssignIn","keysIn","copyArray","copySymbols","getSymbols","getSymbolsIn","arrayPush","stubArray","copySymbolsIn","getAllKeysIn","baseGetAllKeys","initCloneArray","cloneArrayBuffer","arrayBuffer","byteLength","Uint8Array","cloneDataView","dataView","isDeep","buffer","byteOffset","reFlags","cloneRegExp","regexp","lastIndex","symbolProto","symbolValueOf","valueOf","cloneSymbol","symbol","cloneTypedArray","typedArray","boolTag","dateTag","mapTag","numberTag","regexpTag","setTag","stringTag","symbolTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","initCloneByTag","objectCreate","baseCreate","proto","initCloneObject","baseIsMap","nodeIsMap","isMap","baseIsSet","nodeIsSet","isSet","CLONE_FLAT_FLAG","argsTag","funcTag","genTag","objectTag","cloneableTags","bitmask","stack","isFull","isArr","isFunc","cloneBuffer","Stack","stacked","subValue","keysFunc","getAllKeys","nativeKeysIn","baseKeysIn","isProto","arrayLikeKeys","nativeKeys","baseKeys","paragraphcommand_ParagraphCommand","_Command","ParagraphCommand","command","checkCanBecomeParagraph","change","blocks","rename","paragraph_typeof","paragraph_defineProperties","paragraph_possibleConstructorReturn","paragraph_assertThisInitialized","paragraph_getPrototypeOf","paragraph_setPrototypeOf","paragraph_Paragraph","_Plugin","Paragraph","paragraph_classCallCheck","paragraph_inherits","src_plugin","paragraph_createClass","commands","register","inheritAllFrom","conversion","elementToElement","upcastDispatcher","paragraphLikeElements","paragraph","isParagraphable","wrapInParagraph","registerPostFixer","_autoparagraphEmptyRoots","getRootNames","convertItem","context","createContext","arrayFilter","predicate","resIndex","propertyIsEnumerable","nativeGetSymbols","isRange","LiveRange","_range__WEBPACK_IMPORTED_MODULE_0__","_Range","_createFromRanges","boundariesChanged","contentChanged","doesOperationChangeRangeContent","toRange","isWindow","stringifiedObject","DropdownPanelView","selectstart","focusLast","dropdownview_typeof","dropdownview_defineProperties","dropdownview_possibleConstructorReturn","dropdownview_assertThisInitialized","dropdownview_getPrototypeOf","dropdownview_setPrototypeOf","dropdownview_DropdownView","DropdownView","buttonView","panelView","dropdownview_classCallCheck","focustracker","keystrokes","keystrokehandler","dropdownview_inherits","dropdownview_createClass","isOpen","panelPosition","defaultPanelPositions","fitInViewport","positions","southEast","southWest","northEast","northWest","closeDropdown","buttonRect","panelRect","dropdownbuttonview_typeof","dropdownbuttonview_defineProperties","dropdownbuttonview_get","dropdownbuttonview_getPrototypeOf","dropdownbuttonview_superPropBase","dropdownbuttonview_setPrototypeOf","dropdownbuttonview_assertThisInitialized","dropdownbuttonview_DropdownButtonView","_ButtonView","DropdownButtonView","dropdownbuttonview_classCallCheck","dropdownbuttonview_possibleConstructorReturn","arrowView","_createArrowView","aria-haspopup","dropdownbuttonview_inherits","buttonview","dropdownbuttonview_createClass","iconview","dropdown_arrow_default","listview_typeof","listview_defineProperties","listview_possibleConstructorReturn","listview_assertThisInitialized","listview_get","listview_getPrototypeOf","listview_superPropBase","listview_setPrototypeOf","listview_ListView","ListView","listview_classCallCheck","_focusCycler","focuscycler","focusPrevious","focusNext","listview_inherits","listview_createClass","focusFirst","listitemview_typeof","listitemview_defineProperties","listitemview_possibleConstructorReturn","listitemview_assertThisInitialized","listitemview_getPrototypeOf","listitemview_setPrototypeOf","ListItemView","listitemview_classCallCheck","listitemview_inherits","listitemview_createClass","listseparatorview_typeof","listseparatorview_possibleConstructorReturn","listseparatorview_assertThisInitialized","listseparatorview_getPrototypeOf","listseparatorview_setPrototypeOf","ListSeparatorView","listseparatorview_classCallCheck","listseparatorview_inherits","switchbuttonview_typeof","switchbuttonview_defineProperties","switchbuttonview_possibleConstructorReturn","switchbuttonview_assertThisInitialized","switchbuttonview_get","switchbuttonview_getPrototypeOf","switchbuttonview_superPropBase","switchbuttonview_setPrototypeOf","switchbuttonview_SwitchButtonView","SwitchButtonView","switchbuttonview_classCallCheck","toggleSwitchView","_createToggleView","switchbuttonview_inherits","switchbuttonview_createClass","createDropdown","dropdownView","clickoutsidehandler","activator","contextElements","closeDropdownOnBlur","closeDropdownOnExecute","focusDropdownContentsOnArrows","addDefaultBehavior","addListToDropdown","listView","_ref","_buttonView","listItemView","stackClear","stackDelete","stackGet","stackHas","LARGE_ARRAY_SIZE","stackSet","pairs","MapCache","normal","highest","high","low","lowest","ToolbarSeparatorView","toolbarview_typeof","toolbarview_getPrototypeOf","toolbarview_setPrototypeOf","toolbarview_assertThisInitialized","toolbarview_ToolbarView","ToolbarView","toolbarview_classCallCheck","toolbarview_possibleConstructorReturn","toolbarview_inherits","BasicHtmlWriter","fragment","implementation","createHTMLDocument","htmldataprocessor_defineProperties","htmldataprocessor_HtmlDataProcessor","HtmlDataProcessor","htmldataprocessor_classCallCheck","_domParser","_domConverter","domconverter","_htmlWriter","htmldataprocessor_createClass","getHtml","_toDom","_baseGetAllKeys_js__WEBPACK_IMPORTED_MODULE_0__","_getSymbols_js__WEBPACK_IMPORTED_MODULE_1__","_keys_js__WEBPACK_IMPORTED_MODULE_2__","RootAttributeOperation","_baseGetTag_js__WEBPACK_IMPORTED_MODULE_0__","_getPrototype_js__WEBPACK_IMPORTED_MODULE_1__","_isObjectLike_js__WEBPACK_IMPORTED_MODULE_2__","objectCtorString","isPlainObject","identity","thisArg","nativeMax","overRest","otherArgs","constant","baseSetToString","string","HOT_COUNT","HOT_SPAN","nativeNow","now","shortOut","setToString","lastCalled","stamp","remaining","baseRest","isIterateeCall","isIndex","createAssigner","assigner","sources","guard","assignIn","DataTransfer","nativeDataTransfer","files","kind","getAsFile","getFiles","_native","getData","setData","clipboardobserver_defineProperties","clipboardobserver_ClipboardObserver","_DomEventObserver","ClipboardObserver","clipboardobserver_classCallCheck","viewDocument","handleInput","targetRanges","dropRange","dataTransfer","domeventobserver","clipboardobserver_createClass","evtData","clipboardData","domDoc","clientX","clientY","caretRangeFromPoint","rangeParent","rangeOffset","getDropViewRange","smallPaddingElements","clipboard_typeof","clipboard_defineProperties","clipboard_possibleConstructorReturn","clipboard_assertThisInitialized","clipboard_getPrototypeOf","clipboard_setPrototypeOf","clipboard_Clipboard","Clipboard","clipboard_classCallCheck","clipboard_inherits","clipboard_createClass","modelDocument","editing","onCopyCut","toView","getSelectedContent","method","_htmlDataProcessor","htmldataprocessor","addObserver","isReadOnly","fullMatch","spaces","normalizeClipboardData","plainTextToHtml","scrollToTheSelection","dataController","modelFragment","toModel","insertContent","toData","viewToPlainText","childText","deleteContent","arg","_isObject_js__WEBPACK_IMPORTED_MODULE_1__","asyncTag","proxyTag","_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__","_baseAssignValue_js__WEBPACK_IMPORTED_MODULE_0__","_eq_js__WEBPACK_IMPORTED_MODULE_1__","objValue","MAX_SAFE_INTEGER","reIsUint","_arrayPush_js__WEBPACK_IMPORTED_MODULE_0__","_isArray_js__WEBPACK_IMPORTED_MODULE_1__","symbolsFunc","objectToMap","_selection__WEBPACK_IMPORTED_MODULE_0__","_ckeditor_ckeditor5_utils_src_emittermixin__WEBPACK_IMPORTED_MODULE_2__","isSimilar","getBorderWidths","parseInt","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","AttributeCommand","_ckeditor_ckeditor5_core_src_command__WEBPACK_IMPORTED_MODULE_0__","_getValueFromFirstAllowedNode","checkAttributeInSelection","forceValue","setSelectionAttribute","removeSelectionAttribute","getValidRanges","clickOutsideHandler","nativeCreate","hashClear","hashDelete","HASH_UNDEFINED","hashGet","hashHas","hashSet","Hash","mapCacheClear","hash","isKeyable","getMapData","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","setCacheAdd","setCacheHas","SetCache","arraySome","cacheHas","cache","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","equalArrays","equalFunc","isPartial","arrLength","othLength","seen","arrValue","othValue","compared","othIndex","mapToArray","setToArray","errorTag","equalByTag","convert","equalObjects","objProps","objLength","skipCtor","objCtor","othCtor","arrayTag","baseIsEqualDeep","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","isTypedArray","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","baseTimes","baseIsArguments","isArguments","inherited","isArg","isBuff","isType","skipIndexes","typedArrayTags","baseIsTypedArray","nodeIsTypedArray","originalModule","webpackPolyfill","LabelView","for","toUnit","unit","TooltipView","Model","NoOperation","operation_operation","transform_defineProperties","transformations","setTransformation","OperationA","OperationB","transformationFunction","aGroup","noUpdateTransformation","getTransformation","aIsStrong","aWasUndone","bWasUndone","abRelation","baRelation","transformSets","operationsA","operationsB","nextTransformIndex","op","nextBaseVersionA","nextBaseVersionB","originalOperationsACount","originalOperationsBCount","contextFactory","transform_ContextFactory","useRelations","setOriginalOperations","_operationsA","_operationsB","opA","indexB","opB","newOpsA","getContext","newOpsB","updateRelation","newOpA","padWithNoOps","brokenOperationsACount","brokenOperationsBCount","updateBaseVersions","ContextFactory","transform_classCallCheck","_history","history","_useRelations","_originalOperations","_relations","transform_createClass","takeFrom","originalOperation","moveoperation","mergeoperation","_setRelation","splitoperation","_wasUndone","_getRelation","originalOp","wasUndone","isUndoneOperation","origB","undoneB","getUndoneOperation","origA","relationsA","relation","_getComplementaryAttributeOperations","insertOperation","insertValue","model_range","attributeoperation","_moveTargetIntoMovedRange","_makeMoveOperationsFromRanges","basecommand_typeof","basecommand_defineProperties","basecommand_possibleConstructorReturn","basecommand_assertThisInitialized","basecommand_getPrototypeOf","basecommand_setPrototypeOf","insertoperation","hasSameParentAs","moveOp","_breakRangeByMoveOperation","markeroperation","aToGraveyard","bToGraveyard","removedRange","mergeInside","mergeSplittingElement","getReversed","aCompB","shouldSpread","rightRange","movesGraveyardElement","gyMoveSource","splitNodesMoveSource","gyMoveTarget","gyMove","targetPositionPath","splitNodesMoveTarget","splitNodesMove","renameoperation","renamePath","splitPath","rootattributeoperation","additionalSplit","rangeToMove","newParentPosition","newTargetPath","howManyRemoved","aInGraveyard","bInGraveyard","newPositionPath","newPosition","basecommand_BaseCommand","BaseCommand","basecommand_classCallCheck","_stack","_createdBatches","basecommand_inherits","src_command","basecommand_createClass","docSelection","selectionRanges","transformSelectionRange","setSelection","batchToUndo","undoingBatch","operationsToUndo","reverse","operationToUndo","nextBaseVersion","historyOperations","getOperations","reversedOperations","addOperation","applyOperation","setOperationAsUndone","getTransformedByOperations","undocommand_typeof","undocommand_defineProperties","undocommand_possibleConstructorReturn","undocommand_assertThisInitialized","undocommand_getPrototypeOf","undocommand_setPrototypeOf","UndoCommand","_BaseCommand","undocommand_classCallCheck","undocommand_inherits","undocommand_createClass","batchIndex","findIndex","createBatch","_undo","_restoreSelection","redocommand_typeof","redocommand_defineProperties","redocommand_possibleConstructorReturn","redocommand_assertThisInitialized","redocommand_getPrototypeOf","redocommand_setPrototypeOf","RedoCommand","redocommand_classCallCheck","redocommand_inherits","redocommand_createClass","redoingBatch","undoediting_typeof","undoediting_defineProperties","undoediting_possibleConstructorReturn","undoediting_assertThisInitialized","undoediting_getPrototypeOf","undoediting_setPrototypeOf","undoediting_UndoEditing","UndoEditing","undoediting_classCallCheck","_batchRegistry","undoediting_inherits","undoediting_createClass","_undoCommand","_redoCommand","addBatch","clearStack","undoneBatch","undoui_typeof","undoui_defineProperties","undoui_possibleConstructorReturn","undoui_assertThisInitialized","undoui_getPrototypeOf","undoui_setPrototypeOf","undoui_UndoUI","UndoUI","undoui_classCallCheck","undoui_inherits","undoui_createClass","_addButton","undo_default","redo_default","Icon","ui","componentFactory","execute","undo_typeof","undo_defineProperties","undo_possibleConstructorReturn","undo_assertThisInitialized","undo_getPrototypeOf","undo_setPrototypeOf","undo_Undo","Undo","undo_classCallCheck","undo_inherits","undo_createClass","getOptimalPosition","limiter","bestPosition","positionedElementAncestor","parentElement","getPositionedAncestor","elementRect","targetRect","limiterRect","viewportRect","bestPositionRect","bestPositionName","maxLimiterIntersectArea","maxViewportIntersectArea","elementRectArea","limiterIntersectArea","viewportIntersectArea","_getPosition4","getPosition","positionName","positionRect","limiterViewportIntersectRect","getIntersectionArea","setBestPosition","getBestPosition","getVisible","_getPosition2","_getAbsoluteRectCoord","getAbsoluteRectCoordinates","ancestorPosition","ancestorBorderWidths","getborderwidths","_position","moveTo","_ref4","g","hmr","locals","allocUnsafe","copy","config_Config","Config","configurations","defaultConfigurations","_config","_setObjectToTarget","_setToTarget","_getFromSource","isDefine","configuration","rooteditableelement_defineProperties","rootNameSymbol","RootEditableElement","_EditableElement","rooteditableelement_classCallCheck","editableelement","rooteditableelement_createClass","document_defineProperties","document_Document","document_classCallCheck","documentselection","roots","_postFixers","document_createClass","postFixer","wasFixed","observablemixin","emptyelement_typeof","emptyelement_defineProperties","emptyelement_possibleConstructorReturn","emptyelement_assertThisInitialized","emptyelement_get","emptyelement_getPrototypeOf","emptyelement_superPropBase","emptyelement_setPrototypeOf","emptyelement_EmptyElement","EmptyElement","emptyelement_classCallCheck","emptyelement_inherits","emptyelement_createClass","view_node","uielement_typeof","uielement_defineProperties","uielement_possibleConstructorReturn","uielement_assertThisInitialized","uielement_get","uielement_getPrototypeOf","uielement_superPropBase","uielement_setPrototypeOf","uielement_UIElement","UIElement","uielement_classCallCheck","uielement_getFillerOffset","uielement_inherits","uielement_createClass","toDomElement","injectUiElementHandling","keyboard","domSelectionCollapsed","jumpedOverAnyUiElement","nextViewPosition","newDomPosition","jumpOverUiElement","downcastwriter_defineProperties","downcastwriter_DowncastWriter","DowncastWriter","downcastwriter_classCallCheck","_cloneGroups","downcastwriter_createClass","_setTo","_setFocus","attributeElement","attributeelement","containerelement","renderFunction","_addClass","_removeClass","_setStyle","_removeStyle","_removeCustomProperty","positionOrRange","view_position","_breakAttributes","_breakAttributesRange","view_range","move","positionOffset","positionParent","_removeFromClonedElementsGroup","mergeAttributes","mergeTextNodes","validateNodesToInsert","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","validNodesToInsert","validNode","_iterator14","isiterable","getParentContainer","_addToClonedElementsGroup","endPosition","rangeOrItem","validateRangeContainer","_this$_breakAttribute","breakStart","breakEnd","parentContainer","mergePosition","walker","rangeToRemove","ancestor","countBefore","_hasNonUiChildren","_wrapPosition","_wrapRange","_this$_breakAttribute2","_unwrapAttributeElement","_start","_end","_unwrapChildren","groupName","view_selection","wrapPositions","isAttribute","isUI","shouldABeOutsideB","_wrapChildren","offsetChange","unwrapPositions","unwrapped","rangeSpansOnAllChildren","_wrapAttributeElement","_end2","_start2","_this$_breakAttribute3","_start3","_end3","unwrappedRange","movePositionToTextNode","breakTextNode","fakePosition","wrapRange","wrapper","toWrap","canBeJoined","getStyleNames","toUnwrap","_key5","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","_key6","forceSplitText","rangeStart","rangeEnd","isContainerOrFragment","_newPosition","offsetAfter","clonedNode","nodesToMove","_newPosition2","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","group","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","getIdentity","textToMove","t2","nodeBeforeLength","nodeToInsert","remove_remove","fastDiff","oldText","newText","changeIndexes","firstIndex","lastIndexOld","lastIndexNew","changeIndexesToChanges","findFirstDifferenceIndex","oldTextReversed","cutAndReverse","newTextReversed","findChangeBoundaryIndexes","renderer_defineProperties","renderer_Renderer","Renderer","renderer_classCallCheck","domDocuments","markedAttributes","markedChildren","markedTexts","_inlineFiller","_fakeSelectionContainer","renderer_createClass","inlineFillerPosition","_updateChildrenMappings","_isSelectionInInlineFiller","_removeInlineFiller","_getInlineFillerPosition","_needsInlineFillerAtSelection","_element","_updateAttrs","_element2","_updateChildren","_updateText","fillerDomPosition","view_filler","addInlineFiller","_updateSelection","_updateFocus","actualDomChildren","expectedDomChildren","_diffNodeLists","_findReplaceActions","counter","equal","action","insertIndex","deleteIndex","_updateElementMappings","firstPos","selectionPosition","domFillerNode","selectionOffset","findAncestor","isEditable","newDomText","actualText","expectedText","insertData","deleteData","domAttrKeys","viewAttrKeys","nodesToUnbind","_markDescendantTextToSync","src_diff","actualDomChild","expectedDomChild","actualDom","expectedDom","newActions","actualSlice","expectedSlice","areSimilar","_removeDomSelection","_removeFakeSelection","domRoot","_updateFakeSelection","_updateDomSelection","removeAllRanges","selectNodeContents","addRange","bindFakeSelection","_domSelectionNeedsUpdate","childAtOffset","fixGeckoSelectionAfterBr","isDomSelectionCorrect","oldViewSelection","domSelectionToView","activeDomElement","domParentOrArray","nodeAfterFiller","fillerNode","node1","node2","isEqualWith","mutationobserver_typeof","mutationobserver_defineProperties","mutationobserver_get","mutationobserver_getPrototypeOf","mutationobserver_superPropBase","mutationobserver_setPrototypeOf","mutationobserver_assertThisInitialized","mutationobserver_MutationObserver","MutationObserver","mutationobserver_classCallCheck","mutationobserver_possibleConstructorReturn","childList","characterData","characterDataOldValue","subtree","renderer","_renderer","_domElements","_mutationObserver","_onMutations","mutationobserver_inherits","observer","mutationobserver_createClass","takeRecords","observe","disconnect","domMutations","mutatedTexts","mutatedElements","mutation","_isBogusBrMutation","_mutation","viewMutations","mutatedText","markToSync","viewChildren","newViewChildren","lodash_es_isEqualWith","sameNodes","oldChildren","newChildren","viewSelectionAnchor","viewSelectionFocus","child1","child2","addedNode","removedNodes","addedNodes","keyobserver_typeof","keyobserver_defineProperties","keyobserver_possibleConstructorReturn","keyobserver_assertThisInitialized","keyobserver_getPrototypeOf","keyobserver_setPrototypeOf","keyobserver_KeyObserver","KeyObserver","keyobserver_classCallCheck","keyobserver_inherits","keyobserver_createClass","metaKey","isSymbol","isSymbol_typeof","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","toNumber","isBinary","FUNC_ERROR_TEXT","nativeMin","debounce","wait","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","invokeFunc","time","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","timeWaiting","remainingWait","debounced","isInvoking","leadingEdge","flush","fakeselectionobserver_typeof","fakeselectionobserver_defineProperties","fakeselectionobserver_possibleConstructorReturn","fakeselectionobserver_assertThisInitialized","fakeselectionobserver_get","fakeselectionobserver_getPrototypeOf","fakeselectionobserver_superPropBase","fakeselectionobserver_setPrototypeOf","fakeselectionobserver_FakeSelectionObserver","FakeSelectionObserver","fakeselectionobserver_classCallCheck","_fireSelectionChangeDoneDebounced","lodash_es_debounce","fakeselectionobserver_inherits","fakeselectionobserver_createClass","_isArrowKeyCode","_handleSelectionMove","newSelection","oldSelection","selectionobserver_typeof","selectionobserver_defineProperties","selectionobserver_possibleConstructorReturn","selectionobserver_assertThisInitialized","selectionobserver_get","selectionobserver_getPrototypeOf","selectionobserver_superPropBase","selectionobserver_setPrototypeOf","selectionobserver_SelectionObserver","SelectionObserver","selectionobserver_classCallCheck","mutationObserver","getObserver","_documents","_clearInfiniteLoopInterval","setInterval","_clearInfiniteLoop","_loopbackCounter","selectionobserver_inherits","selectionobserver_createClass","_handleSelectionChange","clearInterval","newViewSelection","focusobserver_typeof","focusobserver_defineProperties","focusobserver_possibleConstructorReturn","focusobserver_assertThisInitialized","focusobserver_get","focusobserver_getPrototypeOf","focusobserver_superPropBase","focusobserver_setPrototypeOf","FocusObserver","focusobserver_classCallCheck","_renderTimeoutId","selectedEditable","focusobserver_inherits","focusobserver_createClass","compositionobserver_typeof","compositionobserver_defineProperties","compositionobserver_possibleConstructorReturn","compositionobserver_assertThisInitialized","compositionobserver_getPrototypeOf","compositionobserver_setPrototypeOf","CompositionObserver","compositionobserver_classCallCheck","isComposing","compositionobserver_inherits","compositionobserver_createClass","scrollViewportToShowTarget","_ref$viewportOffset","viewportOffset","targetWindow","getWindow","currentWindow","currentFrame","scrollAncestorsToShowRect","getParentElement","getRectRelativeToWindow","scrollWindowToShowRect","frameElement","targetShiftedDownRect","targetShiftedUpRect","dom_rect","excludeScrollbarsAndBorders","isAbove","isBelow","isLeftOf","isRightOf","getRect","parentWindow","firstRect","secondRect","isrange","relativeWindow","frame","frameRect","view_defineProperties","scrollAncestorsToShowTarget","view_View","view_classCallCheck","domRoots","_observers","_ongoingChange","_renderingInProgress","_postFixersInProgress","_renderingDisabled","_writer","_render","view_createClass","viewRoot","_name","enable","viewRangeToDom","callbackResult","_callPostFixers","disableObservers","enableObservers","mapper_defineProperties","mapper_Mapper","Mapper","mapper_classCallCheck","_modelToViewMapping","_viewToModelMapping","_viewToModelLengthCallbacks","_markerNameToElements","viewContainer","modelPosition","_findPositionIn","viewBlock","modelParent","modelOffset","_toModelOffset","model_position","mapper_createClass","toModelElement","elements","toModelPosition","boundElements","getElementsWithSameId","viewElementName","lengthCallback","viewOffset","getModelLength","len","expectedOffset","lastLength","_moveViewPositionToTextNode","modelconsumable_defineProperties","modelconsumable_ModelConsumable","ModelConsumable","modelconsumable_classCallCheck","_consumable","_textProxyRegistry","modelconsumable_createClass","_normalizeConsumableType","textproxy","_getSymbolForTextProxy","itemConsumables","startMap","endMap","_addSymbolForTextProxy","downcastdispatcher_defineProperties","downcastdispatcher_DowncastDispatcher","DowncastDispatcher","downcastdispatcher_classCallCheck","downcastdispatcher_createClass","getMarkersToRemove","convertMarkerRemove","convertInsert","convertRemove","convertAttribute","getMarkersToAdd","_change","convertMarkerAdd","_createInsertConsumable","_testAndFire","_clearConversionApi","_createConsumableForRange","markersAtSelection","getMarkersAtPosition","_createSelectionConsumable","marker","markerRange","getRange","shouldMarkerChangeBeConverted","markerName","containsItem","editingcontroller_defineProperties","editingcontroller_EditingController","EditingController","editingcontroller_classCallCheck","downcastDispatcher","convertChanges","convertSelection","modelSelection","model_selection","toModelRange","convertSelectionChange","downcast_converters","brokenPosition","breakAttributes","editingcontroller_createClass","plugincollection_slicedToArray","plugincollection_arrayWithHoles","plugincollection_iterableToArrayLimit","plugincollection_nonIterableRest","plugincollection_defineProperties","plugincollection_PluginCollection","PluginCollection","availablePlugins","plugincollection_classCallCheck","_editor","_availablePlugins","_plugins","PluginConstructor","pluginName","plugincollection_createClass","plugins","removePlugins","that","loading","loaded","pluginConstructors","mapToAvailableConstructors","removePluginConstructors","missingPlugins","pluginNameOrConstructor","getPluginConstructor","getMissingPluginNames","errorMsg","reject","loadPlugin","then","requires","RequiredPluginConstructorOrName","RequiredPluginConstructor","plugin","requiredBy","_add","instantiatePlugin","catch","PluginConstructorOrName","promises","pluginInstance","plugin1","plugin2","commandcollection_defineProperties","commandcollection_CommandCollection","CommandCollection","commandcollection_classCallCheck","_commands","commandcollection_createClass","commandName","names","translate","language","translationKey","numberOfLanguages","CKEDITOR_TRANSLATIONS","hasTranslation","locale_defineProperties","locale_Locale","Locale","locale_classCallCheck","_t","locale_createClass","str","translatedString","viewconsumable_toConsumableArray","viewconsumable_arrayWithoutHoles","viewconsumable_iterableToArray","viewconsumable_nonIterableSpread","viewconsumable_classCallCheck","viewconsumable_defineProperties","viewconsumable_createClass","ViewConsumable","_consumables","consumables","elementConsumables","viewconsumable_ViewElementConsumables","revert","consumablesFromElement","createFrom","ViewElementConsumables","_canConsumeName","_test","_consume","_revert","consumableName","combineWalkers","_marked2","convertToMinimalFlatRanges","schema_toConsumableArray","schema_arrayWithoutHoles","schema_iterableToArray","schema_nonIterableSpread","schema_slicedToArray","schema_arrayWithHoles","schema_iterableToArrayLimit","schema_nonIterableRest","schema_classCallCheck","schema_defineProperties","schema_createClass","schema_Schema","Schema","_sourceDefinitions","SchemaContext","getDefinition","itemName","_clearCache","_compiledDefinitions","_compile","getDefinitions","isLimit","_checkContextMatch","attributeName","allowAttributes","positionOrBaseElement","elementToMerge","model_element","checkMerge","retValue","selectionOrRangeOrPosition","rangeCommonAncestor","firstPosition","_getValidRangesForRange","backwardWalker","forwardWalker","removeDisallowedAttributes","compiledDefinitions","sourceRules","itemNames","compileBaseItemRule","compileAllowContentOf","compileAllowWhere","_i5","_itemName3","compileAllowAttributesOf","compileInheritPropertiesFrom","_i6","_itemName4","cleanUpAllowIn","cleanUpAllowAttributes","contextItemIndex","contextItem","getItem","allowIn","parentRule","mapContextItem","getNames","query","endsWith","sourceItemRules","itemRule","allowContentOf","allowWhere","allowAttributesOf","inheritTypesFrom","sourceItemRule","typeNames","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","copyTypes","copyProperty","_iteratorNormalCompletion17","_didIteratorError17","_iteratorError17","_step17","_iterator17","inheritFrom","makeInheritAllWork","allowContentOfItemName","getAllowedChildren","allowedItem","_compiledDefinitions$","allowedIn","_compiledDefinitions$2","inheritAttributes","existingItems","itemToCheck","_iteratorNormalCompletion16","_didIteratorError16","_iteratorError16","_step16","_iterator16","_itemRule$propertyNam","getValues","ctxItem","_context4","_context5","forward","_step18","_context6","_iteratorNormalCompletion18","_didIteratorError18","_iteratorError18","_iterator18","_step19","_context7","getMinimalFlatRanges","upcastdispatcher_defineProperties","upcastdispatcher_UpcastDispatcher","UpcastDispatcher","upcastdispatcher_classCallCheck","_removeIfEmpty","_modelCursor","_convertItem","_convertChildren","_splitToAllowedParent","upcastdispatcher_createClass","contextDefinition","append","createContextTree","store","documentFragment","_removeEmptyElements","modelItem","markerElements","markerElement","currentPosition","extractMarkersFromModelFragment","nextModelCursor","_arr2","allowedParent","findAllowedParent","datacontroller_slicedToArray","datacontroller_arrayWithHoles","datacontroller_iterableToArrayLimit","datacontroller_nonIterableRest","datacontroller_defineProperties","datacontroller_DataController","DataController","dataProcessor","datacontroller_classCallCheck","processor","upcast_converters","datacontroller_createClass","modelElementOrFragment","viewDocumentFragment","clearBindings","elementRange","intersection","_getMarkersRelativeToElement","_step$value","version","modelRoot","parse","viewElementOrFragment","conversion_marked","_getAllUpcastDefinitions","conversion_marked2","_getUpcastDefinition","conversion_defineProperties","conversion_Conversion","Conversion","conversion_classCallCheck","_dispatchersGroups","conversion_createClass","dispatchers","_getDispatchers","conversionHelper","_addToDispatchers","upcastAlso","upcastAlsoItem","batch_defineProperties","Batch","batch_classCallCheck","batch_createClass","detachoperation_typeof","detachoperation_defineProperties","detachoperation_possibleConstructorReturn","detachoperation_assertThisInitialized","detachoperation_get","detachoperation_getPrototypeOf","detachoperation_superPropBase","detachoperation_setPrototypeOf","detachoperation_DetachOperation","DetachOperation","detachoperation_classCallCheck","detachoperation_inherits","detachoperation_createClass","operation_utils","rootelement_typeof","rootelement_defineProperties","rootelement_possibleConstructorReturn","rootelement_assertThisInitialized","rootelement_get","rootelement_getPrototypeOf","rootelement_superPropBase","rootelement_setPrototypeOf","RootElement","rootelement_classCallCheck","_doc","rootelement_inherits","rootelement_createClass","writer_slicedToArray","writer_arrayWithHoles","writer_iterableToArrayLimit","writer_nonIterableRest","writer_defineProperties","writer_Writer","Writer","writer_classCallCheck","writer_createClass","model_documentfragment","_assertWriterUsedCorrectly","isSameTree","rangeRootPosition","addMarker","usingOperation","itemOrRange","setAttributeOnRange","setAttributeOnItem","tomap","removeAttributesFromItem","flat","applyRemoveOperation","_merge","_mergeDetached","createPositionFromPath","createRangeOn","createSelection","merge","renameOperation","limitElement","firstSplitElement","firstCopyElement","elementOrString","applyMarkerOperation","_set","markerOrName","currentMarker","hasUsingOperationDefined","affectsDataDefined","currentRange","updatedRange","managedUsingOperations","keyOrObjectOrIterable","_setSelectionAttribute","keyOrIterableOfKeys","_removeSelectionAttribute","_overrideGravity","_restoreGravity","storeKey","model_documentselection","_getStoreAttributeKey","_currentWriter","valueBefore","valueAfter","lastSplitPosition","previousValue","_version","rootA","rootB","differ_toConsumableArray","differ_arrayWithoutHoles","differ_iterableToArray","differ_nonIterableSpread","differ_slicedToArray","differ_arrayWithHoles","differ_iterableToArrayLimit","differ_nonIterableRest","differ_defineProperties","differ_Differ","Differ","markerCollection","differ_classCallCheck","_markerCollection","_changesInElement","_elementSnapshots","_changedMarkers","_changeCount","_cachedChanges","_cachedChangesWithGraveyard","differ_createClass","_isInInsertedElement","_markInsert","_markAttribute","sourceParentInserted","targetParentInserted","_markRemove","getMarkersIntersectingRange","bufferMarkerChange","graveyardParent","mergedIntoElement","buffered","_step4$value","includeChangesInGraveyard","diffSet","changes","snapshotChildren","elementChildren","_getChildrenSnapshot","_generateActionsFromChanges","_getInsertDiff","_getRemoveDiff","elementAttributes","snapshotAttributes","_getAttributesDiff","changeCount","prevDiff","thisDiff","isConsecutiveTextRemove","isConsecutiveTextAdd","isConsecutiveAttributeChange","_changesInGraveyardFilter","changeItem","_markChange","_removeAllNestedChanges","_makeSnapshot","_getChangesForElement","_handleChange","inc","nodesToHandle","old","incEnd","oldEnd","intersectionLength","_intersectionLength","_intersectionLength2","howManyAfter","attributePart","diffs","_step9$value","_step10$value","_newValue","snapshot","oldChildrenLength","oldChildrenHandled","repeat","posInGy","rangeInGy","history_defineProperties","History","history_classCallCheck","_operations","_undoPairs","_undoneOperations","history_createClass","undoneOperation","undoingOperation","isInsideSurrogatePair","character","isHighSurrogateHalf","isLowSurrogateHalf","isInsideCombinedSymbol","isCombiningMark","model_document_defineProperties","graveyardName","model_document_Document","model_document_classCallCheck","createRoot","bufferOperation","hasSelectionChanged","hasDataChanges","reset","model_document_createClass","defaultRoot","_getDefaultRoot","validateTextNodePosition","rangeBoundary","markercollection_classCallCheck","markercollection_defineProperties","markercollection_createClass","markercollection_MarkerCollection","MarkerCollection","markercollection_Marker","oldMarker","hasChanged","_attachLiveRange","liverange","_managedUsingOperations","_affectsData","_destroyMarker","getMarkersGroup","prefix","_detachLiveRange","Marker","_liveRange","insertcontent_defineProperties","insertcontent_Insertion","Insertion","insertcontent_classCallCheck","canMergeWith","_filterAttributesOf","insertcontent_createClass","parentContext","_handleNode","isFirst","isLast","nodeToSelect","_handleObject","_checkAndSplitToAllowedPosition","_mergeSiblingsOf","_handleDisallowedNode","_tryAutoparagraphing","handleNodes","livePos","liveposition","fromPosition","mergeLeft","_canMergeLeft","mergeRight","_canMergeRight","mergePosLeft","mergePosRight","livePosition","_livePosition","_getAllowedIn","tempPos","deletecontent_deleteContent","doNotResetEntireContent","getLimitElement","shouldEntireContentBeReplacedWithParagraph","selRange","startPos","endPos","leaveUnmerged","mergeBranches","startParent","endParent","leftPos","rightPos","rangeToCheck","checkCanBeMerged","parentToRemove","isTextAllowed","isParagraphAllowed","shouldAutoparagraph","insertParagraph","replaceEntireContentWithParagraph","modifyselection_typeof","wordBoundaryCharacters","modifyselection_modifySelection","isForward","searchEnd","getSearchRange","v","isAtWordBoundary","isAtNodeBoundary","boundaryChar","getCorrectWordBreakPosition","getCorrectPosition","tryExtendingTo","setSelectionFocus","_ret","offsetToCheck","removeRangeContent","parentsToCheck","itemRange","parentToCheck","removeRange","injectSelectionPostFixer","correctedRange","tryFixingRange","fixedRanges","selectionStart","selectionEnd","selectionPostFixer","originalPosition","nearestSelectionRange","fixedPosition","tryFixingCollapsedRange","isTextAllowedOnStart","isTextAllowedOnEnd","startLimitElement","endLimitElement","startIsOnBlock","endIsOnBlock","checkSelectionOnNonLimitElements","fixedStart","fixedEnd","isStartInLimit","isEndInLimit","_fixedStart","expandSelectionOnIsLimitNode","_fixedEnd","tryFixingNonCollapsedRage","expandToDirection","model_defineProperties","model_Model","model_classCallCheck","_pendingChanges","_validate","model_createClass","_runPendingChanges","batchOrType","_execute","nodesToInsert","insertion","getSelectionRange","insertcontent_insertContent","frag","flatSubtreeRange","commonPath","commonParent","getNodeByPath","appendText","leftExcessRange","getselectedcontent_getSelectedContent","rangeOrElement","ret","currentBatch","callbackReturnValue","editingkeystrokehandler_typeof","editingkeystrokehandler_defineProperties","editingkeystrokehandler_possibleConstructorReturn","editingkeystrokehandler_assertThisInitialized","editingkeystrokehandler_get","editingkeystrokehandler_getPrototypeOf","editingkeystrokehandler_superPropBase","editingkeystrokehandler_setPrototypeOf","EditingKeystrokeHandler","_KeystrokeHandler","editingkeystrokehandler_classCallCheck","editingkeystrokehandler_inherits","editingkeystrokehandler_createClass","editor_defineProperties","editor_Editor","Editor","editor_classCallCheck","builtinPlugins","defaultConfig","state","editor_createClass","extraPlugins","load","loadPlugins","loadedPlugins","initPlugins","promise","readyPromise","_this$commands","dataapimixin","elementapimixin","updateSourceElement","HTMLTextAreaElement","setDataInElement","componentfactory_defineProperties","componentfactory_ComponentFactory","ComponentFactory","componentfactory_classCallCheck","_components","componentfactory_createClass","originalName","getNormalized","editorui_defineProperties","editorui_EditorUI","EditorUI","editorui_classCallCheck","editorui_createClass","classiceditorui_typeof","classiceditorui_defineProperties","classiceditorui_possibleConstructorReturn","classiceditorui_assertThisInitialized","classiceditorui_getPrototypeOf","classiceditorui_setPrototypeOf","classiceditorui_ClassicEditorUI","_EditorUI","ClassicEditorUI","classiceditorui_classCallCheck","_toolbarConfig","normalizeToolbarConfig","classiceditorui_inherits","classiceditorui_createClass","stickyPanel","limiterElement","viewportTopOffset","editingRoot","toolbar","fillFromConfig","origin","originKeystrokeHandler","originFocusTracker","beforeFocus","afterBlur","enableToolbarKeyboardFocus","editoruiview_typeof","editoruiview_defineProperties","editoruiview_possibleConstructorReturn","editoruiview_assertThisInitialized","editoruiview_get","editoruiview_getPrototypeOf","editoruiview_superPropBase","editoruiview_setPrototypeOf","editoruiview_EditorUIView","EditorUIView","editoruiview_classCallCheck","editoruiview_inherits","editoruiview_createClass","_renderBodyCollection","_bodyCollectionContainer","bodyElement","boxededitoruiview_typeof","boxededitoruiview_defineProperties","boxededitoruiview_possibleConstructorReturn","boxededitoruiview_assertThisInitialized","boxededitoruiview_getPrototypeOf","boxededitoruiview_setPrototypeOf","boxededitoruiview_BoxedEditorUIView","_EditorUIView","BoxedEditorUIView","boxededitoruiview_classCallCheck","main","_voiceLabelView","_createVoiceLabel","role","lang","boxededitoruiview_inherits","boxededitoruiview_createClass","voiceLabel","labelview","editableuiview_typeof","editableuiview_defineProperties","editableuiview_possibleConstructorReturn","editableuiview_assertThisInitialized","editableuiview_get","editableuiview_getPrototypeOf","editableuiview_superPropBase","editableuiview_setPrototypeOf","EditableUIView","editableuiview_classCallCheck","contenteditable","externalElement","editableuiview_inherits","editableuiview_createClass","inlineeditableuiview_typeof","inlineeditableuiview_possibleConstructorReturn","inlineeditableuiview_assertThisInitialized","inlineeditableuiview_getPrototypeOf","inlineeditableuiview_setPrototypeOf","InlineEditableUIView","_EditableUIView","inlineeditableuiview_classCallCheck","aria-label","inlineeditableuiview_inherits","stickypanelview_typeof","stickypanelview_defineProperties","stickypanelview_possibleConstructorReturn","stickypanelview_assertThisInitialized","stickypanelview_get","stickypanelview_getPrototypeOf","stickypanelview_superPropBase","stickypanelview_setPrototypeOf","toPx","tounit","stickypanelview_StickyPanelView","StickyPanelView","stickypanelview_classCallCheck","_contentPanelPlaceholder","isSticky","_panelRect","_contentPanel","_hasViewportTopOffset","_isStickyToTheLimiter","limiterBottomOffset","marginLeft","stickypanelview_inherits","stickypanelview_createClass","_checkIfShouldBeSticky","_limiterRect","isActive","_marginLeft","classiceditoruiview_typeof","classiceditoruiview_defineProperties","classiceditoruiview_possibleConstructorReturn","classiceditoruiview_assertThisInitialized","classiceditoruiview_get","classiceditoruiview_getPrototypeOf","classiceditoruiview_superPropBase","classiceditoruiview_setPrototypeOf","classiceditoruiview_ClassicEditorUIView","_BoxedEditorUIView","ClassicEditorUIView","classiceditoruiview_classCallCheck","toolbarview","classiceditoruiview_inherits","classiceditoruiview_createClass","elementreplacer_defineProperties","ElementReplacer","elementreplacer_classCallCheck","_replacedElements","elementreplacer_createClass","classiceditor_typeof","classiceditor_defineProperties","classiceditor_get","classiceditor_getPrototypeOf","classiceditor_superPropBase","classiceditor_setPrototypeOf","classiceditor_assertThisInitialized","classiceditor_ClassicEditor","_Editor","ClassicEditor","sourceElementOrData","classiceditor_classCallCheck","classiceditor_possibleConstructorReturn","_elementReplacer","form","originalSubmit","onSubmit","submit","attachToForm","classiceditor_inherits","classiceditor_createClass","restore","init","attachDomRoot","initialData","getDataFromElement","EnterCommand","isSelectionEmpty","splitBlock","isContainedWithinOneElement","enterBlock","splitPos","enterobserver_typeof","enterobserver_defineProperties","enterobserver_possibleConstructorReturn","enterobserver_assertThisInitialized","enterobserver_getPrototypeOf","enterobserver_setPrototypeOf","enterobserver_EnterObserver","EnterObserver","enterobserver_classCallCheck","domeventdata","isSoft","enterobserver_inherits","enterobserver_createClass","enter_typeof","enter_defineProperties","enter_possibleConstructorReturn","enter_assertThisInitialized","enter_getPrototypeOf","enter_setPrototypeOf","enter_Enter","Enter","enter_classCallCheck","enter_inherits","enter_createClass","shiftentercommand_typeof","shiftentercommand_defineProperties","shiftentercommand_possibleConstructorReturn","shiftentercommand_assertThisInitialized","shiftentercommand_getPrototypeOf","shiftentercommand_setPrototypeOf","ShiftEnterCommand","shiftentercommand_classCallCheck","shiftentercommand_inherits","shiftentercommand_createClass","insertBreak","softBreakAction","anchorPos","isInsideLimitElement","breakLineElement","shiftenter_typeof","shiftenter_defineProperties","shiftenter_possibleConstructorReturn","shiftenter_assertThisInitialized","shiftenter_getPrototypeOf","shiftenter_setPrototypeOf","shiftenter_ShiftEnter","ShiftEnter","shiftenter_classCallCheck","shiftenter_inherits","shiftenter_createClass","createEmptyElement","changebuffer_defineProperties","ChangeBuffer","limit","changebuffer_classCallCheck","isLocked","_changeCallback","_batch","_reset","_selectionChangeCallback","changebuffer_createClass","ignoreLock","inputcommand_typeof","inputcommand_defineProperties","inputcommand_possibleConstructorReturn","inputcommand_assertThisInitialized","inputcommand_getPrototypeOf","inputcommand_setPrototypeOf","inputcommand_InputCommand","InputCommand","undoStepSize","inputcommand_classCallCheck","_buffer","inputcommand_inherits","inputcommand_createClass","textInsertions","resultRange","isCollapsedRange","lock","unlock","injectUnsafeKeystrokesHandling","latestCompositionSelection","inputCommand","deleteSelectionContent","isSelectionUnchanged","keyData","safeKeycodes","isSafeKeystroke","handleKeydown","isFlatSelection","containerChildrenMutated","mutations","getSingleTextNodeChange","output","lastOperation","pushLast","isContinuationOf","expected","diffToChanges","compareChildNodes","oldChild","newChild","injecttypingmutationshandling_defineProperties","injecttypingmutationshandling_MutationHandler","MutationHandler","injecttypingmutationshandling_classCallCheck","injecttypingmutationshandling_createClass","_handleContainerChildrenMutations","_handleTextMutation","_handleTextNodeInsertion","mutationsCommonAncestor","commonAncestor","getMutationsContainer","domMutationCommonAncestor","freshDomConverter","modelFromCurrentDom","currentModel","modelFromDomChildren","currentModelChildren","lastDomChild","lastCurrentChild","isSafeForTextMutation","_calculateChanges","calculateChanges","firstChangeAt","insertions","deletions","modelSelectionRange","_calculateChanges2","viewPos","modelPos","insertedText","diffResult","lastChangeAt","input_typeof","input_defineProperties","input_possibleConstructorReturn","input_assertThisInitialized","input_getPrototypeOf","input_setPrototypeOf","input_Input","Input","input_classCallCheck","input_inherits","input_createClass","handle","injectTypingMutationsHandling","deletecommand_typeof","deletecommand_defineProperties","deletecommand_possibleConstructorReturn","deletecommand_assertThisInitialized","deletecommand_getPrototypeOf","deletecommand_setPrototypeOf","deletecommand_DeleteCommand","DeleteCommand","deletecommand_classCallCheck","deletecommand_inherits","deletecommand_createClass","modifySelection","_shouldEntireContentBeReplacedWithParagraph","sequence","_replaceEntireContentWithParagraph","limitElementFirstChild","deleteobserver_typeof","deleteobserver_defineProperties","deleteobserver_possibleConstructorReturn","deleteobserver_assertThisInitialized","deleteobserver_getPrototypeOf","deleteobserver_setPrototypeOf","deleteobserver_DeleteObserver","DeleteObserver","deleteobserver_classCallCheck","hasWordModifier","deleteobserver_inherits","deleteobserver_createClass","injectAndroidBackspaceMutationsHandling","selectionChangeToleranceMs","previousSelection","currentSelection","latestSelectionChangeMs","childrenBefore","childrenAfter","hasOnlyContainers","hasDelete","hasInsert","containsContainersRemoval","handleContainerRemovalMutations","delete_typeof","delete_defineProperties","delete_possibleConstructorReturn","delete_assertThisInitialized","delete_getPrototypeOf","delete_setPrototypeOf","delete_Delete","Delete","delete_classCallCheck","delete_inherits","delete_createClass","typing_typeof","typing_defineProperties","typing_possibleConstructorReturn","typing_assertThisInitialized","typing_getPrototypeOf","typing_setPrototypeOf","typing_Typing","Typing","typing_classCallCheck","typing_inherits","typing_createClass","essentials_typeof","essentials_defineProperties","essentials_possibleConstructorReturn","essentials_assertThisInitialized","essentials_getPrototypeOf","essentials_setPrototypeOf","essentials_Essentials","Essentials","essentials_classCallCheck","essentials_inherits","essentials_createClass","clipboard","undo","listcommand_ListCommand","ListCommand","_getValue","_checkEnabled","checkCanBecomeListItem","turnOff","currentIndent","indent","newIndent","listIndent","lowestIndent","_item","_fixType","setAttributes","listType","listItem","firstBlock","startingItem","indentcommand_typeof","indentcommand_defineProperties","indentcommand_possibleConstructorReturn","indentcommand_assertThisInitialized","indentcommand_getPrototypeOf","indentcommand_setPrototypeOf","indentcommand_IndentCommand","IndentCommand","indentDirection","indentcommand_classCallCheck","_indentBy","indentcommand_inherits","indentcommand_createClass","itemsToChange","lastItem","getListItemFillerOffset","hasOnlyLists","modelViewInsertion","injectViewList","createViewListItemElement","viewList","generateLiInUl","modelViewRemove","breakContainer","viewListPrev","mergeViewLists","hoistNestedLists","modelViewChangeType","listName","modelViewChangeIndent","modelViewSplitOnInsert","removeStart","removeEnd","previousList","mergePos","modelViewMergeAfter","viewItemPrev","viewItemNext","viewModelConverter","conversionStore","listItemModel","lastListItem","convertedChild","viewToModelListItemChildrenConverter","cleanList","cleanListItem","foundList","firstNode","modelToViewPosition","topmostViewList","modelIndentPasteFixer","refItem","indentChange","getSiblingListItem","sameIndent","smallerIndent","itemIndent","firstList","secondList","mergeContainers","injectedItem","injectedList","prevItem","positionAfterUiElements","prevView","breakPosition","nextViewList","lastSubChild","modelChild","nextIndent","modelRemoveStartPosition","viewRemoveStartPosition","viewRemovedItem","prevModelItem","foo","prevIndent","prevViewList","listediting_typeof","listediting_defineProperties","listediting_possibleConstructorReturn","listediting_assertThisInitialized","listediting_getPrototypeOf","listediting_setPrototypeOf","listediting_ListEditing","ListEditing","listediting_classCallCheck","listediting_inherits","listediting_createClass","itemToListHead","applied","_addListToFix","listHead","_fixListIndents","_fixListTypes","maxIndent","fixBy","typesStack","modelChangePostFixer","registerViewToModelLength","getViewListItemLength","_modelNode","modelLength","modelNode","_modelNode2","_modelLength","viewToModelPosition","getCommandExecuter","listui_typeof","listui_defineProperties","listui_possibleConstructorReturn","listui_assertThisInitialized","listui_getPrototypeOf","listui_setPrototypeOf","listui_ListUI","ListUI","listui_classCallCheck","listui_inherits","listui_createClass","numberedlist_default","bulletedlist_default","list_typeof","list_defineProperties","list_possibleConstructorReturn","list_assertThisInitialized","list_getPrototypeOf","list_setPrototypeOf","list_List","List","list_classCallCheck","list_inherits","list_createClass","headingcommand_HeadingCommand","HeadingCommand","modelElements","heading","checkCanBecomeHeading","headingediting_typeof","headingediting_defineProperties","headingediting_possibleConstructorReturn","headingediting_assertThisInitialized","headingediting_getPrototypeOf","headingediting_setPrototypeOf","headingediting_HeadingEditing","HeadingEditing","headingediting_classCallCheck","title","headingediting_inherits","headingediting_createClass","option","_addDefaultH1Conversion","enterCommand","headingui_typeof","headingui_defineProperties","headingui_possibleConstructorReturn","headingui_assertThisInitialized","headingui_getPrototypeOf","headingui_setPrototypeOf","headingui_HeadingUI","HeadingUI","headingui_classCallCheck","headingui_inherits","headingui_createClass","localizedTitles","Heading 1","Heading 2","Heading 3","getLocalizedOptions","defaultTitle","dropdownTooltip","titles","itemDefinitions","headingCommand","paragraphCommand","withText","commandValue","isOn","areEnabled","para","whichModel","heading_typeof","heading_defineProperties","heading_possibleConstructorReturn","heading_assertThisInitialized","heading_getPrototypeOf","heading_setPrototypeOf","heading_Heading","Heading","heading_classCallCheck","heading_inherits","heading_createClass","blockquotecommand_BlockQuoteCommand","BlockQuoteCommand","_removeQuote","findQuote","blocksToQuote","checkCanBeQuoted","_applyQuote","getRangesOfBlockGroups","groupRange","positionBefore","positionAfter","quotesToMerge","quote","currentQuote","nextQuote","elementOrPosition","nextBlock","isBQAllowed","isBlockAllowedInBQ","blockquoteediting_typeof","blockquoteediting_defineProperties","blockquoteediting_possibleConstructorReturn","blockquoteediting_assertThisInitialized","blockquoteediting_getPrototypeOf","blockquoteediting_setPrototypeOf","blockquoteediting_BlockQuoteEditing","BlockQuoteEditing","blockquoteediting_classCallCheck","blockquoteediting_inherits","blockquoteediting_createClass","addChildCheck","blockquoteui_typeof","blockquoteui_defineProperties","blockquoteui_possibleConstructorReturn","blockquoteui_assertThisInitialized","blockquoteui_getPrototypeOf","blockquoteui_setPrototypeOf","blockquoteui_BlockQuoteUI","BlockQuoteUI","blockquoteui_classCallCheck","blockquoteui_inherits","blockquoteui_createClass","quote_default","blockquote_typeof","blockquote_defineProperties","blockquote_possibleConstructorReturn","blockquote_assertThisInitialized","blockquote_getPrototypeOf","blockquote_setPrototypeOf","blockquote_BlockQuote","BlockQuote","blockquote_classCallCheck","blockquote_inherits","blockquote_createClass","boldediting_BoldEditing","BoldEditing","attributeToElement","font-weight","attributecommand","boldui_typeof","boldui_defineProperties","boldui_possibleConstructorReturn","boldui_assertThisInitialized","boldui_getPrototypeOf","boldui_setPrototypeOf","boldui_BoldUI","BoldUI","boldui_classCallCheck","boldui_inherits","boldui_createClass","bold_default","bold_typeof","bold_defineProperties","bold_possibleConstructorReturn","bold_assertThisInitialized","bold_getPrototypeOf","bold_setPrototypeOf","bold_Bold","Bold","bold_classCallCheck","bold_inherits","bold_createClass","BlockAutoformatEditing","callbackOrCommand","InlineAutoformatEditing","testRegexpOrCallback","attributeOrCallback","regExp","testCallback","formatCallback","inlineautoformatediting_classCallCheck","format","_result","leftDel","rightDel","delStart","delEnd","validRanges","getText","testOutput","rangesToFormat","testOutputToRanges","rangesToRemove","arrays","autoformat_Autoformat","Autoformat","autoformat_classCallCheck","_addListAutoformats","_addBasicStylesAutoformats","_addHeadingAutoformats","_addBlockQuoteAutoformats","level","italicediting_ItalicEditing","ItalicEditing","font-style","italicui_typeof","italicui_defineProperties","italicui_possibleConstructorReturn","italicui_assertThisInitialized","italicui_getPrototypeOf","italicui_setPrototypeOf","italicui_ItalicUI","ItalicUI","italicui_classCallCheck","italicui_inherits","italicui_createClass","italic_default","italic_typeof","italic_defineProperties","italic_possibleConstructorReturn","italic_assertThisInitialized","italic_getPrototypeOf","italic_setPrototypeOf","italic_Italic","Italic","italic_classCallCheck","italic_inherits","italic_createClass","_isObjectLike_js__WEBPACK_IMPORTED_MODULE_0__","_isPlainObject_js__WEBPACK_IMPORTED_MODULE_1__","hadRuntime","oldRuntime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","inModule","runtime","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","GeneratorFunctionPrototype","Generator","GeneratorFunction","displayName","isGeneratorFunction","genFun","ctor","awrap","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","Context","skipTempReset","sent","_sent","tryEntries","resetTryEntry","isNaN","rootRecord","completion","rval","dispatchException","exception","loc","caught","record","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","abrupt","finallyEntry","complete","afterLoc","thrown","resultName","nextLoc","protoGenerator","generator","_invoke","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","previousPromise","callInvokeWithMethodAndArg","invoke","info","pushTryEntry","locs","iteratorMethod","deprecate","paths","_log__WEBPACK_IMPORTED_MODULE_0__","ckeditor5_package_json__WEBPACK_IMPORTED_MODULE_1__","windowOrGlobal","CKEDITOR_VERSION","collidingVersion","location","baseUrl","protocol","host","currentDir","pathname","origUrl","newUrl","unquotedOrigUrl","$1","__WEBPACK_AMD_DEFINE_RESULT__","newline","fences","noop","hr","nptable","lheading","blockquote","html","table","Lexer","tokens","links","marked","defaults","rules","gfm","tables","bullet","_tag","lex","src","token","bq","cap","bull","pedantic","depth","header","align","cells","ordered","smartLists","sanitize","pre","sanitizer","charCodeAt","inline","escape","autolink","url","reflink","nolink","strong","em","br","del","InlineLexer","breaks","Parser","encode","regex","opt","pending","highlight","out","escaped","silent","_inside","_href","mangle","inLink","outputLink","codespan","smartypants","image","ch","langPrefix","raw","headerPrefix","xhtml","listitem","tablerow","tablecell","flags","prot","decodeURIComponent","_","tok","peek","parseText","row","cell","setOptions","parser","lexer","inlineLexer","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","f","u","1","toMarkdown","converters","mdConverters","gfmConverters","HtmlParser","nodeName","voids","isVoid","getContent","_replacement","canConvert","isFlankedByWhitespace","side","sibling","isFlanked","nodeValue","flankingWhitespace","hasLeading","hasTrailing","whitespace","tree","htmlToDom","elem","inqueue","outqueue","bfsOrder","outer","cloneNode","outerHTML","./lib/gfm-converters","./lib/html-parser","./lib/md-converters","collapse-whitespace","2","highlightRegEx","checked","borderCells","alignMap","center","border","3","_window","canParse","canParseHtmlNatively","jsdom","FetchExternalResources","ProcessExternalResources","useActiveX","open","ActiveXObject","shouldUseActiveX","write","close","designMode","createHtmlParser","4","hLevel","hPrefix","hasSiblings","isCodeBlock","titlePart","strings","5","6","7","voidElements","toUpperCase","isBlockElem","prevText","prevVoid","block-elements","void-elements","8","area","col","embed","img","keygen","menuitem","meta","param","track","wbr","renderer_escape","cssClass","renderer_unescape","gfmdataprocessor_GFMDataProcessor","GFMDataProcessor","_htmlDP","marked_default","to_markdown_default","ClassicEditorBase"],"mappings":"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","file":"ckeditor.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ClassicEditor\"] = factory();\n\telse\n\t\troot[\"ClassicEditor\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 220);\n","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/ckeditorerror\n */\n\n/**\n * URL to the documentation with error codes.\n */\nexport var DOCUMENTATION_URL = 'https://ckeditor.com/docs/ckeditor5/latest/framework/guides/support/error-codes.html';\n/**\n * The CKEditor error class.\n *\n * All errors will be shortened during the minification process in order to reduce the code size.\n * Therefore, all error messages should be documented in the same way as those in {@link module:utils/log}.\n *\n * Read more in the {@link module:utils/log} module.\n *\n * @extends Error\n */\n\nvar CKEditorError =\n/*#__PURE__*/\nfunction (_Error) {\n  _inherits(CKEditorError, _Error);\n\n  /**\n   * Creates an instance of the CKEditorError class.\n   *\n   * Read more about error logging in the {@link module:utils/log} module.\n   *\n   * @param {String} message The error message in an `error-name: Error message.` format.\n   * During the minification process the \"Error message\" part will be removed to limit the code size\n   * and a link to this error documentation will be added to the `message`.\n   * @param {Object} [data] Additional data describing the error. A stringified version of this object\n   * will be appended to the error message, so the data are quickly visible in the console. The original\n   * data object will also be later available under the {@link #data} property.\n   */\n  function CKEditorError(message, data) {\n    var _this;\n\n    _classCallCheck(this, CKEditorError);\n\n    message = attachLinkToDocumentation(message);\n\n    if (data) {\n      message += ' ' + JSON.stringify(data);\n    }\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CKEditorError).call(this, message));\n    /**\n     * @member {String}\n     */\n\n    _this.name = 'CKEditorError';\n    /**\n     * The additional error data passed to the constructor. Undefined if none was passed.\n     *\n     * @member {Object|undefined}\n     */\n\n    _this.data = data;\n    return _this;\n  }\n  /**\n   * Checks if error is an instance of CKEditorError class.\n   *\n   * @param {Object} error Object to check.\n   * @returns {Boolean}\n   */\n\n\n  _createClass(CKEditorError, null, [{\n    key: \"isCKEditorError\",\n    value: function isCKEditorError(error) {\n      return error instanceof CKEditorError;\n    }\n  }]);\n\n  return CKEditorError;\n}(_wrapNativeSuper(Error));\n/**\n * Attaches link to the documentation at the end of the error message.\n *\n * @param {String} message Message to be logged.\n * @returns {String}\n */\n\n\nexport { CKEditorError as default };\nexport function attachLinkToDocumentation(message) {\n  var matchedErrorName = message.match(/^([^:]+):/);\n\n  if (!matchedErrorName) {\n    return message;\n  }\n\n  return message + \" Read more: \".concat(DOCUMENTATION_URL, \"#error-\").concat(matchedErrorName[1], \"\\n\");\n}","function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/range\n */\nimport Position from './position';\nimport TreeWalker from './treewalker';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\n/**\n * Represents a range in the model tree.\n *\n * A range is defined by its {@link module:engine/model/range~Range#start} and {@link module:engine/model/range~Range#end}\n * positions.\n *\n * You can create range instances via its constructor or the `createRange*()` factory methods of\n * {@link module:engine/model/model~Model} and {@link module:engine/model/writer~Writer}.\n */\n\nvar Range =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a range spanning from `start` position to `end` position.\n   *\n   * @param {module:engine/model/position~Position} start Start position.\n   * @param {module:engine/model/position~Position} [end] End position. If not set, range will be collapsed at `start` position.\n   */\n  function Range(start) {\n    var end = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    _classCallCheck(this, Range);\n\n    /**\n     * Start position.\n     *\n     * @readonly\n     * @member {module:engine/model/position~Position}\n     */\n    this.start = Position._createAt(start);\n    /**\n     * End position.\n     *\n     * @readonly\n     * @member {module:engine/model/position~Position}\n     */\n\n    this.end = end ? Position._createAt(end) : Position._createAt(start); // If the range is collapsed, treat in a similar way as a position and set its boundaries stickiness to 'toNone'.\n    // In other case, make the boundaries stick to the \"inside\" of the range.\n\n    this.start.stickiness = this.isCollapsed ? 'toNone' : 'toNext';\n    this.end.stickiness = this.isCollapsed ? 'toNone' : 'toPrevious';\n  }\n  /**\n   * Iterable interface.\n   *\n   * Iterates over all {@link module:engine/model/item~Item items} that are in this range and returns\n   * them together with additional information like length or {@link module:engine/model/position~Position positions},\n   * grouped as {@link module:engine/model/treewalker~TreeWalkerValue}.\n   * It iterates over all {@link module:engine/model/textproxy~TextProxy text contents} that are inside the range\n   * and all the {@link module:engine/model/element~Element}s that are entered into when iterating over this range.\n   *\n   * This iterator uses {@link module:engine/model/treewalker~TreeWalker} with `boundaries` set to this range\n   * and `ignoreElementEnd` option set to `true`.\n   *\n   * @returns {Iterable.<module:engine/model/treewalker~TreeWalkerValue>}\n   */\n\n\n  _createClass(Range, [{\n    key: Symbol.iterator,\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function value() {\n      return regeneratorRuntime.wrap(function value$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.delegateYield(new TreeWalker({\n                boundaries: this,\n                ignoreElementEnd: true\n              }), \"t0\", 1);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, value, this);\n    })\n    /**\n     * Returns whether the range is collapsed, that is if {@link #start} and\n     * {@link #end} positions are equal.\n     *\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"containsPosition\",\n\n    /**\n     * Checks whether this range contains given {@link module:engine/model/position~Position position}.\n     *\n     * @param {module:engine/model/position~Position} position Position to check.\n     * @returns {Boolean} `true` if given {@link module:engine/model/position~Position position} is contained\n     * in this range,`false` otherwise.\n     */\n    value: function containsPosition(position) {\n      return position.isAfter(this.start) && position.isBefore(this.end);\n    }\n    /**\n     * Checks whether this range contains given {@link ~Range range}.\n     *\n     * @param {module:engine/model/range~Range} otherRange Range to check.\n     * @param {Boolean} [loose=false] Whether the check is loose or strict. If the check is strict (`false`), compared range cannot\n     * start or end at the same position as this range boundaries. If the check is loose (`true`), compared range can start, end or\n     * even be equal to this range. Note that collapsed ranges are always compared in strict mode.\n     * @returns {Boolean} `true` if given {@link ~Range range} boundaries are contained by this range, `false` otherwise.\n     */\n\n  }, {\n    key: \"containsRange\",\n    value: function containsRange(otherRange) {\n      var loose = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (otherRange.isCollapsed) {\n        loose = false;\n      }\n\n      var containsStart = this.containsPosition(otherRange.start) || loose && this.start.isEqual(otherRange.start);\n      var containsEnd = this.containsPosition(otherRange.end) || loose && this.end.isEqual(otherRange.end);\n      return containsStart && containsEnd;\n    }\n    /**\n     * Checks whether given {@link module:engine/model/item~Item} is inside this range.\n     *\n     * @param {module:engine/model/item~Item} item Model item to check.\n     */\n\n  }, {\n    key: \"containsItem\",\n    value: function containsItem(item) {\n      var pos = Position._createBefore(item);\n\n      return this.containsPosition(pos) || this.start.isEqual(pos);\n    }\n    /**\n     * Two ranges are equal if their {@link #start} and {@link #end} positions are equal.\n     *\n     * @param {module:engine/model/range~Range} otherRange Range to compare with.\n     * @returns {Boolean} `true` if ranges are equal, `false` otherwise.\n     */\n\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(otherRange) {\n      return this.start.isEqual(otherRange.start) && this.end.isEqual(otherRange.end);\n    }\n    /**\n     * Checks and returns whether this range intersects with given range.\n     *\n     * @param {module:engine/model/range~Range} otherRange Range to compare with.\n     * @returns {Boolean} `true` if ranges intersect, `false` otherwise.\n     */\n\n  }, {\n    key: \"isIntersecting\",\n    value: function isIntersecting(otherRange) {\n      return this.start.isBefore(otherRange.end) && this.end.isAfter(otherRange.start);\n    }\n    /**\n     * Computes which part(s) of this {@link ~Range range} is not a part of given {@link ~Range range}.\n     * Returned array contains zero, one or two {@link ~Range ranges}.\n     *\n     * Examples:\n     *\n     *\t\tlet range = model.createRange(\n     *\t\t\tmodel.createPositionFromPath( root, [ 2, 7 ] ),\n     *\t\t\tmodel.createPositionFromPath( root, [ 4, 0, 1 ] )\n     *\t\t);\n     *\t\tlet otherRange = model.createRange( model.createPositionFromPath( root, [ 1 ] ), model.createPositionFromPath( root, [ 5 ] ) );\n     *\t\tlet transformed = range.getDifference( otherRange );\n     *\t\t// transformed array has no ranges because `otherRange` contains `range`\n     *\n     *\t\totherRange = model.createRange( model.createPositionFromPath( root, [ 1 ] ), model.createPositionFromPath( root, [ 3 ] ) );\n     *\t\ttransformed = range.getDifference( otherRange );\n     *\t\t// transformed array has one range: from [ 3 ] to [ 4, 0, 1 ]\n     *\n     *\t\totherRange = model.createRange( model.createPositionFromPath( root, [ 3 ] ), model.createPositionFromPath( root, [ 4 ] ) );\n     *\t\ttransformed = range.getDifference( otherRange );\n     *\t\t// transformed array has two ranges: from [ 2, 7 ] to [ 3 ] and from [ 4 ] to [ 4, 0, 1 ]\n     *\n     * @param {module:engine/model/range~Range} otherRange Range to differentiate against.\n     * @returns {Array.<module:engine/model/range~Range>} The difference between ranges.\n     */\n\n  }, {\n    key: \"getDifference\",\n    value: function getDifference(otherRange) {\n      var ranges = [];\n\n      if (this.isIntersecting(otherRange)) {\n        // Ranges intersect.\n        if (this.containsPosition(otherRange.start)) {\n          // Given range start is inside this range. This means that we have to\n          // add shrunken range - from the start to the middle of this range.\n          ranges.push(new Range(this.start, otherRange.start));\n        }\n\n        if (this.containsPosition(otherRange.end)) {\n          // Given range end is inside this range. This means that we have to\n          // add shrunken range - from the middle of this range to the end.\n          ranges.push(new Range(otherRange.end, this.end));\n        }\n      } else {\n        // Ranges do not intersect, return the original range.\n        ranges.push(new Range(this.start, this.end));\n      }\n\n      return ranges;\n    }\n    /**\n     * Returns an intersection of this {@link ~Range range} and given {@link ~Range range}.\n     * Intersection is a common part of both of those ranges. If ranges has no common part, returns `null`.\n     *\n     * Examples:\n     *\n     *\t\tlet range = model.createRange(\n     *\t\t\tmodel.createPositionFromPath( root, [ 2, 7 ] ),\n     *\t\t\tmodel.createPositionFromPath( root, [ 4, 0, 1 ] )\n     *\t\t);\n     *\t\tlet otherRange = model.createRange( model.createPositionFromPath( root, [ 1 ] ), model.createPositionFromPath( root, [ 2 ] ) );\n     *\t\tlet transformed = range.getIntersection( otherRange ); // null - ranges have no common part\n     *\n     *\t\totherRange = model.createRange( model.createPositionFromPath( root, [ 3 ] ), model.createPositionFromPath( root, [ 5 ] ) );\n     *\t\ttransformed = range.getIntersection( otherRange ); // range from [ 3 ] to [ 4, 0, 1 ]\n     *\n     * @param {module:engine/model/range~Range} otherRange Range to check for intersection.\n     * @returns {module:engine/model/range~Range|null} A common part of given ranges or `null` if ranges have no common part.\n     */\n\n  }, {\n    key: \"getIntersection\",\n    value: function getIntersection(otherRange) {\n      if (this.isIntersecting(otherRange)) {\n        // Ranges intersect, so a common range will be returned.\n        // At most, it will be same as this range.\n        var commonRangeStart = this.start;\n        var commonRangeEnd = this.end;\n\n        if (this.containsPosition(otherRange.start)) {\n          // Given range start is inside this range. This means thaNt we have to\n          // shrink common range to the given range start.\n          commonRangeStart = otherRange.start;\n        }\n\n        if (this.containsPosition(otherRange.end)) {\n          // Given range end is inside this range. This means that we have to\n          // shrink common range to the given range end.\n          commonRangeEnd = otherRange.end;\n        }\n\n        return new Range(commonRangeStart, commonRangeEnd);\n      } // Ranges do not intersect, so they do not have common part.\n\n\n      return null;\n    }\n    /**\n     * Computes and returns the smallest set of {@link #isFlat flat} ranges, that covers this range in whole.\n     *\n     * See an example of a model structure (`[` and `]` are range boundaries):\n     *\n     *\t\troot                                                            root\n     *\t\t |- element DIV                         DIV             P2              P3             DIV\n     *\t\t |   |- element H                   H        P1        f o o           b a r       H         P4\n     *\t\t |   |   |- \"fir[st\"             fir[st     lorem                               se]cond     ipsum\n     *\t\t |   |- element P1\n     *\t\t |   |   |- \"lorem\"                                              ||\n     *\t\t |- element P2                                                   ||\n     *\t\t |   |- \"foo\"                                                    VV\n     *\t\t |- element P3\n     *\t\t |   |- \"bar\"                                                   root\n     *\t\t |- element DIV                         DIV             [P2             P3]             DIV\n     *\t\t |   |- element H                   H       [P1]       f o o           b a r        H         P4\n     *\t\t |   |   |- \"se]cond\"            fir[st]    lorem                               [se]cond     ipsum\n     *\t\t |   |- element P4\n     *\t\t |   |   |- \"ipsum\"\n     *\n     * As it can be seen, letters contained in the range are: `stloremfoobarse`, spread across different parents.\n     * We are looking for minimal set of flat ranges that contains the same nodes.\n     *\n     * Minimal flat ranges for above range `( [ 0, 0, 3 ], [ 3, 0, 2 ] )` will be:\n     *\n     *\t\t( [ 0, 0, 3 ], [ 0, 0, 5 ] ) = \"st\"\n     *\t\t( [ 0, 1 ], [ 0, 2 ] ) = element P1 (\"lorem\")\n     *\t\t( [ 1 ], [ 3 ] ) = element P2, element P3 (\"foobar\")\n     *\t\t( [ 3, 0, 0 ], [ 3, 0, 2 ] ) = \"se\"\n     *\n     * **Note:** if an {@link module:engine/model/element~Element element} is not wholly contained in this range, it won't be returned\n     * in any of the returned flat ranges. See in the example how `H` elements at the beginning and at the end of the range\n     * were omitted. Only their parts that were wholly in the range were returned.\n     *\n     * **Note:** this method is not returning flat ranges that contain no nodes.\n     *\n     * @returns {Array.<module:engine/model/range~Range>} Array of flat ranges covering this range.\n     */\n\n  }, {\n    key: \"getMinimalFlatRanges\",\n    value: function getMinimalFlatRanges() {\n      var ranges = [];\n      var diffAt = this.start.getCommonPath(this.end).length;\n\n      var pos = Position._createAt(this.start);\n\n      var posParent = pos.parent; // Go up.\n\n      while (pos.path.length > diffAt + 1) {\n        var howMany = posParent.maxOffset - pos.offset;\n\n        if (howMany !== 0) {\n          ranges.push(new Range(pos, pos.getShiftedBy(howMany)));\n        }\n\n        pos.path = pos.path.slice(0, -1);\n        pos.offset++;\n        posParent = posParent.parent;\n      } // Go down.\n\n\n      while (pos.path.length <= this.end.path.length) {\n        var offset = this.end.path[pos.path.length - 1];\n\n        var _howMany = offset - pos.offset;\n\n        if (_howMany !== 0) {\n          ranges.push(new Range(pos, pos.getShiftedBy(_howMany)));\n        }\n\n        pos.offset = offset;\n        pos.path.push(0);\n      }\n\n      return ranges;\n    }\n    /**\n     * Creates a {@link module:engine/model/treewalker~TreeWalker TreeWalker} instance with this range as a boundary.\n     *\n     * @param {Object} options Object with configuration options. See {@link module:engine/model/treewalker~TreeWalker}.\n     * @param {module:engine/model/position~Position} [options.startPosition]\n     * @param {Boolean} [options.singleCharacters=false]\n     * @param {Boolean} [options.shallow=false]\n     * @param {Boolean} [options.ignoreElementEnd=false]\n     */\n\n  }, {\n    key: \"getWalker\",\n    value: function getWalker() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      options.boundaries = this;\n      return new TreeWalker(options);\n    }\n    /**\n     * Returns an iterator that iterates over all {@link module:engine/model/item~Item items} that are in this range and returns\n     * them.\n     *\n     * This method uses {@link module:engine/model/treewalker~TreeWalker} with `boundaries` set to this range and `ignoreElementEnd` option\n     * set to `true`. However it returns only {@link module:engine/model/item~Item model items},\n     * not {@link module:engine/model/treewalker~TreeWalkerValue}.\n     *\n     * You may specify additional options for the tree walker. See {@link module:engine/model/treewalker~TreeWalker} for\n     * a full list of available options.\n     *\n     * @method getItems\n     * @param {Object} options Object with configuration options. See {@link module:engine/model/treewalker~TreeWalker}.\n     * @returns {Iterable.<module:engine/model/item~Item>}\n     */\n\n  }, {\n    key: \"getItems\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function getItems() {\n      var options,\n          treeWalker,\n          _iteratorNormalCompletion,\n          _didIteratorError,\n          _iteratorError,\n          _iterator,\n          _step,\n          _value,\n          _args2 = arguments;\n\n      return regeneratorRuntime.wrap(function getItems$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              options = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {};\n              options.boundaries = this;\n              options.ignoreElementEnd = true;\n              treeWalker = new TreeWalker(options);\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _iteratorError = undefined;\n              _context2.prev = 7;\n              _iterator = treeWalker[Symbol.iterator]();\n\n            case 9:\n              if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                _context2.next = 16;\n                break;\n              }\n\n              _value = _step.value;\n              _context2.next = 13;\n              return _value.item;\n\n            case 13:\n              _iteratorNormalCompletion = true;\n              _context2.next = 9;\n              break;\n\n            case 16:\n              _context2.next = 22;\n              break;\n\n            case 18:\n              _context2.prev = 18;\n              _context2.t0 = _context2[\"catch\"](7);\n              _didIteratorError = true;\n              _iteratorError = _context2.t0;\n\n            case 22:\n              _context2.prev = 22;\n              _context2.prev = 23;\n\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n\n            case 25:\n              _context2.prev = 25;\n\n              if (!_didIteratorError) {\n                _context2.next = 28;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 28:\n              return _context2.finish(25);\n\n            case 29:\n              return _context2.finish(22);\n\n            case 30:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, getItems, this, [[7, 18, 22, 30], [23,, 25, 29]]);\n    })\n    /**\n     * Returns an iterator that iterates over all {@link module:engine/model/position~Position positions} that are boundaries or\n     * contained in this range.\n     *\n     * This method uses {@link module:engine/model/treewalker~TreeWalker} with `boundaries` set to this range. However it returns only\n     * {@link module:engine/model/position~Position positions}, not {@link module:engine/model/treewalker~TreeWalkerValue}.\n     *\n     * You may specify additional options for the tree walker. See {@link module:engine/model/treewalker~TreeWalker} for\n     * a full list of available options.\n     *\n     * @param {Object} options Object with configuration options. See {@link module:engine/model/treewalker~TreeWalker}.\n     * @returns {Iterable.<module:engine/model/position~Position>}\n     */\n\n  }, {\n    key: \"getPositions\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function getPositions() {\n      var options,\n          treeWalker,\n          _iteratorNormalCompletion2,\n          _didIteratorError2,\n          _iteratorError2,\n          _iterator2,\n          _step2,\n          _value2,\n          _args3 = arguments;\n\n      return regeneratorRuntime.wrap(function getPositions$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              options = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : {};\n              options.boundaries = this;\n              treeWalker = new TreeWalker(options);\n              _context3.next = 5;\n              return treeWalker.position;\n\n            case 5:\n              _iteratorNormalCompletion2 = true;\n              _didIteratorError2 = false;\n              _iteratorError2 = undefined;\n              _context3.prev = 8;\n              _iterator2 = treeWalker[Symbol.iterator]();\n\n            case 10:\n              if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {\n                _context3.next = 17;\n                break;\n              }\n\n              _value2 = _step2.value;\n              _context3.next = 14;\n              return _value2.nextPosition;\n\n            case 14:\n              _iteratorNormalCompletion2 = true;\n              _context3.next = 10;\n              break;\n\n            case 17:\n              _context3.next = 23;\n              break;\n\n            case 19:\n              _context3.prev = 19;\n              _context3.t0 = _context3[\"catch\"](8);\n              _didIteratorError2 = true;\n              _iteratorError2 = _context3.t0;\n\n            case 23:\n              _context3.prev = 23;\n              _context3.prev = 24;\n\n              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                _iterator2.return();\n              }\n\n            case 26:\n              _context3.prev = 26;\n\n              if (!_didIteratorError2) {\n                _context3.next = 29;\n                break;\n              }\n\n              throw _iteratorError2;\n\n            case 29:\n              return _context3.finish(26);\n\n            case 30:\n              return _context3.finish(23);\n\n            case 31:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, getPositions, this, [[8, 19, 23, 31], [24,, 26, 30]]);\n    })\n    /**\n     * Returns a range that is a result of transforming this range by given `operation`.\n     *\n     * **Note:** transformation may break one range into multiple ranges (for example, when a part of the range is\n     * moved to a different part of document tree). For this reason, an array is returned by this method and it\n     * may contain one or more `Range` instances.\n     *\n     * @param {module:engine/model/operation/operation~Operation} operation Operation to transform range by.\n     * @returns {Array.<module:engine/model/range~Range>} Range which is the result of transformation.\n     */\n\n  }, {\n    key: \"getTransformedByOperation\",\n    value: function getTransformedByOperation(operation) {\n      switch (operation.type) {\n        case 'insert':\n          return this._getTransformedByInsertOperation(operation);\n\n        case 'move':\n        case 'remove':\n        case 'reinsert':\n          return this._getTransformedByMoveOperation(operation);\n\n        case 'split':\n          return [this._getTransformedBySplitOperation(operation)];\n\n        case 'merge':\n          return [this._getTransformedByMergeOperation(operation)];\n      }\n\n      return [new Range(this.start, this.end)];\n    }\n    /**\n     * Returns a range that is a result of transforming this range by multiple `operations`.\n     *\n     * @see ~Range#getTransformedByOperation\n     * @param {Iterable.<module:engine/model/operation/operation~Operation>} operations Operations to transform the range by.\n     * @returns {Array.<module:engine/model/range~Range>} Range which is the result of transformation.\n     */\n\n  }, {\n    key: \"getTransformedByOperations\",\n    value: function getTransformedByOperations(operations) {\n      var ranges = [new Range(this.start, this.end)];\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = operations[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var operation = _step3.value;\n\n          for (var _i = 0; _i < ranges.length; _i++) {\n            var result = ranges[_i].getTransformedByOperation(operation);\n\n            ranges.splice.apply(ranges, [_i, 1].concat(_toConsumableArray(result)));\n            _i += result.length - 1;\n          }\n        } // It may happen that a range is split into two, and then the part of second \"piece\" is moved into first\n        // \"piece\". In this case we will have incorrect third range, which should not be included in the result --\n        // because it is already included in the first \"piece\". In this loop we are looking for all such ranges that\n        // are inside other ranges and we simply remove them.\n\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      for (var i = 0; i < ranges.length; i++) {\n        var range = ranges[i];\n\n        for (var j = i + 1; j < ranges.length; j++) {\n          var next = ranges[j];\n\n          if (range.containsRange(next) || next.containsRange(range) || range.isEqual(next)) {\n            ranges.splice(j, 1);\n          }\n        }\n      }\n\n      return ranges;\n    }\n    /**\n     * Returns an {@link module:engine/model/element~Element} or {@link module:engine/model/documentfragment~DocumentFragment}\n     * which is a common ancestor of the range's both ends (in which the entire range is contained).\n     *\n     * @returns {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment|null}\n     */\n\n  }, {\n    key: \"getCommonAncestor\",\n    value: function getCommonAncestor() {\n      return this.start.getCommonAncestor(this.end);\n    }\n    /**\n     * Converts `Range` to plain object and returns it.\n     *\n     * @returns {Object} `Node` converted to plain object.\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        start: this.start.toJSON(),\n        end: this.end.toJSON()\n      };\n    }\n    /**\n     * Returns a new range that is equal to current range.\n     *\n     * @returns {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new this.constructor(this.start, this.end);\n    }\n    /**\n     * Returns a result of transforming a copy of this range by insert operation.\n     *\n     * One or more ranges may be returned as a result of this transformation.\n     *\n     * @protected\n     * @param {module:engine/model/operation/insertoperation~InsertOperation} operation\n     * @returns {Array.<module:engine/model/range~Range>}\n     */\n\n  }, {\n    key: \"_getTransformedByInsertOperation\",\n    value: function _getTransformedByInsertOperation(operation) {\n      var spread = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return this._getTransformedByInsertion(operation.position, operation.howMany, spread);\n    }\n    /**\n     * Returns a result of transforming a copy of this range by move operation.\n     *\n     * One or more ranges may be returned as a result of this transformation.\n     *\n     * @protected\n     * @param {module:engine/model/operation/moveoperation~MoveOperation} operation\n     * @returns {Array.<module:engine/model/range~Range>}\n     */\n\n  }, {\n    key: \"_getTransformedByMoveOperation\",\n    value: function _getTransformedByMoveOperation(operation) {\n      var spread = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var sourcePosition = operation.sourcePosition;\n      var howMany = operation.howMany;\n      var targetPosition = operation.targetPosition;\n      return this._getTransformedByMove(sourcePosition, targetPosition, howMany, spread);\n    }\n    /**\n     * Returns a result of transforming a copy of this range by split operation.\n     *\n     * Always one range is returned. The transformation is done in a way to not break the range.\n     *\n     * @protected\n     * @param {module:engine/model/operation/splitoperation~SplitOperation} operation\n     * @returns {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"_getTransformedBySplitOperation\",\n    value: function _getTransformedBySplitOperation(operation) {\n      var start = this.start._getTransformedBySplitOperation(operation);\n\n      var end = this.end._getTransformedBySplitOperation(operation);\n\n      if (this.end.isEqual(operation.insertionPosition)) {\n        end = this.end.getShiftedBy(1);\n      } // Below may happen when range contains graveyard element used by split operation.\n\n\n      if (start.root != end.root) {\n        // End position was next to the moved graveyard element and was moved with it.\n        // Fix it by using old `end` which has proper `root`.\n        end = this.end.getShiftedBy(-1);\n      }\n\n      return new Range(start, end);\n    }\n    /**\n     * Returns a result of transforming a copy of this range by merge operation.\n     *\n     * Always one range is returned. The transformation is done in a way to not break the range.\n     *\n     * @protected\n     * @param {module:engine/model/operation/mergeoperation~MergeOperation} operation\n     * @returns {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"_getTransformedByMergeOperation\",\n    value: function _getTransformedByMergeOperation(operation) {\n      var start = this.start._getTransformedByMergeOperation(operation);\n\n      var end = this.end._getTransformedByMergeOperation(operation);\n\n      if (start.root != end.root) {\n        // This happens when the end position was next to the merged (deleted) element.\n        // Then, the end position was moved to the graveyard root. In this case we need to fix\n        // the range cause its boundaries would be in different roots.\n        end = this.end.getShiftedBy(-1);\n      }\n\n      if (start.isAfter(end)) {\n        // This happens in three following cases:\n        //\n        // Case 1: Merge operation source position is before the target position (due to some transformations, OT, etc.)\n        //         This means that start can be moved before the end of the range.\n        //\n        // Before: <p>a{a</p><p>b}b</p><p>cc</p>\n        // Merge:  <p>b}b</p><p>cca{a</p>\n        // Fix:    <p>{b}b</p><p>ccaa</p>\n        //\n        // Case 2: Range start is before merged node but not directly.\n        //         Result should include all nodes that were in the original range.\n        //\n        // Before: <p>aa</p>{<p>cc</p><p>b}b</p>\n        // Merge:  <p>aab}b</p>{<p>cc</p>\n        // Fix:    <p>aa{bb</p><p>cc</p>}\n        //\n        //         The range is expanded by an additional `b` letter but it is better than dropping the whole `cc` paragraph.\n        //\n        // Case 3: Range start is directly before merged node.\n        //         Resulting range should include only nodes from the merged element:\n        //\n        // Before: <p>aa</p>{<p>b}b</p><p>cc</p>\n        // Merge:  <p>aab}b</p>{<p>cc</p>\n        // Fix:    <p>aa{b}b</p><p>cc</p>\n        //\n        if (operation.sourcePosition.isBefore(operation.targetPosition)) {\n          // Case 1.\n          start = Position._createAt(end);\n          start.offset = 0;\n        } else {\n          if (!operation.deletionPosition.isEqual(start)) {\n            // Case 2.\n            end = operation.deletionPosition;\n          } // In both case 2 and 3 start is at the end of the merge-to element.\n\n\n          start = operation.targetPosition;\n        }\n\n        return new Range(start, end);\n      }\n\n      return new Range(start, end);\n    }\n    /**\n     * Returns an array containing one or two {@link ~Range ranges} that are a result of transforming this\n     * {@link ~Range range} by inserting `howMany` nodes at `insertPosition`. Two {@link ~Range ranges} are\n     * returned if the insertion was inside this {@link ~Range range} and `spread` is set to `true`.\n     *\n     * Examples:\n     *\n     *\t\tlet range = model.createRange(\n     *\t\t\tmodel.createPositionFromPath( root, [ 2, 7 ] ),\n     *\t\t\tmodel.createPositionFromPath( root, [ 4, 0, 1 ] )\n     *\t\t);\n     *\t\tlet transformed = range._getTransformedByInsertion( model.createPositionFromPath( root, [ 1 ] ), 2 );\n     *\t\t// transformed array has one range from [ 4, 7 ] to [ 6, 0, 1 ]\n     *\n     *\t\ttransformed = range._getTransformedByInsertion( model.createPositionFromPath( root, [ 4, 0, 0 ] ), 4 );\n     *\t\t// transformed array has one range from [ 2, 7 ] to [ 4, 0, 5 ]\n     *\n     *\t\ttransformed = range._getTransformedByInsertion( model.createPositionFromPath( root, [ 3, 2 ] ), 4 );\n     *\t\t// transformed array has one range, which is equal to original range\n     *\n     *\t\ttransformed = range._getTransformedByInsertion( model.createPositionFromPath( root, [ 3, 2 ] ), 4, true );\n     *\t\t// transformed array has two ranges: from [ 2, 7 ] to [ 3, 2 ] and from [ 3, 6 ] to [ 4, 0, 1 ]\n     *\n     * @protected\n     * @param {module:engine/model/position~Position} insertPosition Position where nodes are inserted.\n     * @param {Number} howMany How many nodes are inserted.\n     * @param {Boolean} [spread] Flag indicating whether this {~Range range} should be spread if insertion\n     * was inside the range. Defaults to `false`.\n     * @returns {Array.<module:engine/model/range~Range>} Result of the transformation.\n     */\n\n  }, {\n    key: \"_getTransformedByInsertion\",\n    value: function _getTransformedByInsertion(insertPosition, howMany) {\n      var spread = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      if (spread && this.containsPosition(insertPosition)) {\n        // Range has to be spread. The first part is from original start to the spread point.\n        // The other part is from spread point to the original end, but transformed by\n        // insertion to reflect insertion changes.\n        return [new Range(this.start, insertPosition), new Range(insertPosition.getShiftedBy(howMany), this.end._getTransformedByInsertion(insertPosition, howMany))];\n      } else {\n        var range = new Range(this.start, this.end);\n        range.start = range.start._getTransformedByInsertion(insertPosition, howMany);\n        range.end = range.end._getTransformedByInsertion(insertPosition, howMany);\n        return [range];\n      }\n    }\n    /**\n     * Returns an array containing {@link ~Range ranges} that are a result of transforming this\n     * {@link ~Range range} by moving `howMany` nodes from `sourcePosition` to `targetPosition`.\n     *\n     * @protected\n     * @param {module:engine/model/position~Position} sourcePosition Position from which nodes are moved.\n     * @param {module:engine/model/position~Position} targetPosition Position to where nodes are moved.\n     * @param {Number} howMany How many nodes are moved.\n     * @param {Boolean} [spread=false] Whether the range should be spread if the move points inside the range.\n     * @returns {Array.<module:engine/model/range~Range>} Result of the transformation.\n     */\n\n  }, {\n    key: \"_getTransformedByMove\",\n    value: function _getTransformedByMove(sourcePosition, targetPosition, howMany) {\n      var spread = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      // Special case for transforming a collapsed range. Just transform it like a position.\n      if (this.isCollapsed) {\n        var newPos = this.start._getTransformedByMove(sourcePosition, targetPosition, howMany);\n\n        return [new Range(newPos)];\n      } // Special case for transformation when a part of the range is moved towards the range.\n      //\n      // Examples:\n      //\n      // <div><p>ab</p><p>c[d</p></div><p>e]f</p> --> <div><p>ab</p></div><p>c[d</p><p>e]f</p>\n      // <p>e[f</p><div><p>a]b</p><p>cd</p></div> --> <p>e[f</p><p>a]b</p><div><p>cd</p></div>\n      //\n      // Without this special condition, the default algorithm leaves an \"artifact\" range from one of `differenceSet` parts:\n      //\n      // <div><p>ab</p><p>c[d</p></div><p>e]f</p> --> <div><p>ab</p>{</div>}<p>c[d</p><p>e]f</p>\n      //\n      // This special case is applied only if the range is to be kept together (not spread).\n\n\n      var moveRange = Range._createFromPositionAndShift(sourcePosition, howMany);\n\n      var insertPosition = targetPosition._getTransformedByDeletion(sourcePosition, howMany);\n\n      if (this.containsPosition(targetPosition) && !spread) {\n        if (moveRange.containsPosition(this.start) || moveRange.containsPosition(this.end)) {\n          var start = this.start._getTransformedByMove(sourcePosition, targetPosition, howMany);\n\n          var end = this.end._getTransformedByMove(sourcePosition, targetPosition, howMany);\n\n          return [new Range(start, end)];\n        }\n      } // Default algorithm.\n\n\n      var result;\n      var differenceSet = this.getDifference(moveRange);\n      var difference = null;\n      var common = this.getIntersection(moveRange);\n\n      if (differenceSet.length == 1) {\n        // `moveRange` and this range may intersect but may be separate.\n        difference = new Range(differenceSet[0].start._getTransformedByDeletion(sourcePosition, howMany), differenceSet[0].end._getTransformedByDeletion(sourcePosition, howMany));\n      } else if (differenceSet.length == 2) {\n        // `moveRange` is inside this range.\n        difference = new Range(this.start, this.end._getTransformedByDeletion(sourcePosition, howMany));\n      } // else, `moveRange` contains this range.\n\n\n      if (difference) {\n        result = difference._getTransformedByInsertion(insertPosition, howMany, common !== null || spread);\n      } else {\n        result = [];\n      }\n\n      if (common) {\n        var transformedCommon = new Range(common.start._getCombined(moveRange.start, insertPosition), common.end._getCombined(moveRange.start, insertPosition));\n\n        if (result.length == 2) {\n          result.splice(1, 0, transformedCommon);\n        } else {\n          result.push(transformedCommon);\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Returns a copy of this range that is transformed by deletion of `howMany` nodes from `deletePosition`.\n     *\n     * If the deleted range is intersecting with the transformed range, the transformed range will be shrank.\n     *\n     * If the deleted range contains transformed range, `null` will be returned.\n     *\n     * @protected\n     * @param {module:engine/model/position~Position} deletionPosition Position from which nodes are removed.\n     * @param {Number} howMany How many nodes are removed.\n     * @returns {module:engine/model/range~Range|null} Result of the transformation.\n     */\n\n  }, {\n    key: \"_getTransformedByDeletion\",\n    value: function _getTransformedByDeletion(deletePosition, howMany) {\n      var newStart = this.start._getTransformedByDeletion(deletePosition, howMany);\n\n      var newEnd = this.end._getTransformedByDeletion(deletePosition, howMany);\n\n      if (newStart == null && newEnd == null) {\n        return null;\n      }\n\n      if (newStart == null) {\n        newStart = deletePosition;\n      }\n\n      if (newEnd == null) {\n        newEnd = deletePosition;\n      }\n\n      return new Range(newStart, newEnd);\n    }\n    /**\n     * Creates a new range, spreading from specified {@link module:engine/model/position~Position position} to a position moved by\n     * given `shift`. If `shift` is a negative value, shifted position is treated as the beginning of the range.\n     *\n     * @protected\n     * @param {module:engine/model/position~Position} position Beginning of the range.\n     * @param {Number} shift How long the range should be.\n     * @returns {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"isCollapsed\",\n    get: function get() {\n      return this.start.isEqual(this.end);\n    }\n    /**\n     * Returns whether this range is flat, that is if {@link #start} position and\n     * {@link #end} position are in the same {@link module:engine/model/position~Position#parent}.\n     *\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isFlat\",\n    get: function get() {\n      var startParentPath = this.start.getParentPath();\n      var endParentPath = this.end.getParentPath();\n      return compareArrays(startParentPath, endParentPath) == 'same';\n    }\n    /**\n     * Range root element.\n     *\n     * @type {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment}\n     */\n\n  }, {\n    key: \"root\",\n    get: function get() {\n      return this.start.root;\n    }\n  }], [{\n    key: \"_createFromPositionAndShift\",\n    value: function _createFromPositionAndShift(position, shift) {\n      var start = position;\n      var end = position.getShiftedBy(shift);\n      return shift > 0 ? new this(start, end) : new this(end, start);\n    }\n    /**\n     * Creates a range inside an {@link module:engine/model/element~Element element} which starts before the first child of\n     * that element and ends after the last child of that element.\n     *\n     * @protected\n     * @param {module:engine/model/element~Element} element Element which is a parent for the range.\n     * @returns {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"_createIn\",\n    value: function _createIn(element) {\n      return new this(Position._createAt(element, 0), Position._createAt(element, element.maxOffset));\n    }\n    /**\n     * Creates a range that starts before given {@link module:engine/model/item~Item model item} and ends after it.\n     *\n     * @protected\n     * @param {module:engine/model/item~Item} item\n     * @returns {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"_createOn\",\n    value: function _createOn(item) {\n      return this._createFromPositionAndShift(Position._createBefore(item), item.offsetSize);\n    }\n    /**\n     * Combines all ranges from the passed array into a one range. At least one range has to be passed.\n     * Passed ranges must not have common parts.\n     *\n     * The first range from the array is a reference range. If other ranges start or end on the exactly same position where\n     * the reference range, they get combined into one range.\n     *\n     *\t\t[  ][]  [    ][ ][             ][ ][]  [  ]  // Passed ranges, shown sorted\n     *\t\t[    ]                                       // The result of the function if the first range was a reference range.\n     *\t            [                           ]        // The result of the function if the third-to-seventh range was a reference range.\n     *\t                                           [  ]  // The result of the function if the last range was a reference range.\n     *\n     * @param {Array.<module:engine/model/range~Range>} ranges Ranges to combine.\n     * @returns {module:engine/model/range~Range} Combined range.\n     */\n\n  }, {\n    key: \"_createFromRanges\",\n    value: function _createFromRanges(ranges) {\n      if (ranges.length === 0) {\n        /**\n         * At least one range has to be passed to\n         * {@link module:engine/model/range~Range._createFromRanges `Range._createFromRanges()`}.\n         *\n         * @error range-create-from-ranges-empty-array\n         */\n        throw new CKEditorError('range-create-from-ranges-empty-array: At least one range has to be passed.');\n      } else if (ranges.length == 1) {\n        return ranges[0].clone();\n      } // 1. Set the first range in `ranges` array as a reference range.\n      // If we are going to return just a one range, one of the ranges need to be the reference one.\n      // Other ranges will be stuck to that range, if possible.\n\n\n      var ref = ranges[0]; // 2. Sort all the ranges so it's easier to process them.\n\n      ranges.sort(function (a, b) {\n        return a.start.isAfter(b.start) ? 1 : -1;\n      }); // 3. Check at which index the reference range is now.\n\n      var refIndex = ranges.indexOf(ref); // 4. At this moment we don't need the original range.\n      // We are going to modify the result and we need to return a new instance of Range.\n      // We have to create a copy of the reference range.\n\n      var result = new this(ref.start, ref.end); // 5. Ranges should be checked and glued starting from the range that is closest to the reference range.\n      // Since ranges are sorted, start with the range with index that is closest to reference range index.\n\n      if (refIndex > 0) {\n        for (var i = refIndex - 1; true; i++) {\n          if (ranges[i].end.isEqual(result.start)) {\n            result.start = Position._createAt(ranges[i].start);\n          } else {\n            // If ranges are not starting/ending at the same position there is no point in looking further.\n            break;\n          }\n        }\n      } // 6. Ranges should be checked and glued starting from the range that is closest to the reference range.\n      // Since ranges are sorted, start with the range with index that is closest to reference range index.\n\n\n      for (var _i2 = refIndex + 1; _i2 < ranges.length; _i2++) {\n        if (ranges[_i2].start.isEqual(result.end)) {\n          result.end = Position._createAt(ranges[_i2].end);\n        } else {\n          // If ranges are not starting/ending at the same position there is no point in looking further.\n          break;\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Creates a `Range` instance from given plain object (i.e. parsed JSON string).\n     *\n     * @param {Object} json Plain object to be converted to `Range`.\n     * @param {module:engine/model/document~Document} doc Document object that will be range owner.\n     * @returns {module:engine/model/element~Element} `Range` instance created using given plain object.\n     */\n\n  }, {\n    key: \"fromJSON\",\n    value: function fromJSON(json, doc) {\n      return new this(Position.fromJSON(json.start, doc), Position.fromJSON(json.end, doc));\n    }\n  }]);\n\n  return Range;\n}();\n\nexport { Range as default };","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nexport default last;\n","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/position\n */\nimport TreeWalker from './treewalker';\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport Text from './text';\nimport { last } from 'lodash-es';\n/**\n * Represents a position in the model tree.\n *\n * A position is represented by its {@link module:engine/model/position~Position#root} and\n * a {@link module:engine/model/position~Position#path} in that root.\n *\n * You can create position instances via its constructor or the `createPosition*()` factory methods of\n * {@link module:engine/model/model~Model} and {@link module:engine/model/writer~Writer}.\n *\n * **Note:** Position is based on offsets, not indexes. This means that a position between two text nodes\n * `foo` and `bar` has offset `3`, not `1`. See {@link module:engine/model/position~Position#path} for more information.\n *\n * Since a position in the model is represented by a {@link module:engine/model/position~Position#root position root} and\n * {@link module:engine/model/position~Position#path position path} it is possible to create positions placed in non-existing places.\n * This requirement is important for operational transformation algorithms.\n *\n * Also, {@link module:engine/model/operation/operation~Operation operations}\n * kept in the {@link module:engine/model/document~Document#history document history}\n * are storing positions (and ranges) which were correct when those operations were applied, but may not be correct\n * after the document has changed.\n *\n * When changes are applied to the model, it may also happen that {@link module:engine/model/position~Position#parent position parent}\n * will change even if position path has not changed. Keep in mind, that if a position leads to non-existing element,\n * {@link module:engine/model/position~Position#parent} and some other properties and methods will throw errors.\n *\n * In most cases, position with wrong path is caused by an error in code, but it is sometimes needed, as described above.\n */\n\nvar Position =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a position.\n   *\n   * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} root Root of the position.\n   * @param {Array.<Number>} path Position path. See {@link module:engine/model/position~Position#path}.\n   * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone'] Position stickiness.\n   * See {@link module:engine/model/position~PositionStickiness}.\n   */\n  function Position(root, path) {\n    var stickiness = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'toNone';\n\n    _classCallCheck(this, Position);\n\n    if (!root.is('element') && !root.is('documentFragment')) {\n      /**\n       * Position root is invalid.\n       *\n       * Positions can only be anchored in elements or document fragments.\n       *\n       * @error model-position-root-invalid\n       */\n      throw new CKEditorError('model-position-root-invalid: Position root invalid.');\n    }\n\n    if (!(path instanceof Array) || path.length === 0) {\n      /**\n       * Position path must be an array with at least one item.\n       *\n       * @error model-position-path-incorrect\n       * @param path\n       */\n      throw new CKEditorError('model-position-path-incorrect: Position path must be an array with at least one item.', {\n        path: path\n      });\n    } // Normalize the root and path (if element was passed).\n\n\n    path = root.getPath().concat(path);\n    root = root.root;\n    /**\n     * Root of the position path.\n     *\n     * @readonly\n     * @member {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment}\n     * module:engine/model/position~Position#root\n     */\n\n    this.root = root;\n    /**\n     * Position of the node in the tree. **Path contains offsets, not indexes.**\n     *\n     * Position can be placed before, after or in a {@link module:engine/model/node~Node node} if that node has\n     * {@link module:engine/model/node~Node#offsetSize} greater than `1`. Items in position path are\n     * {@link module:engine/model/node~Node#startOffset starting offsets} of position ancestors, starting from direct root children,\n     * down to the position offset in it's parent.\n     *\n     *\t\t ROOT\n     *\t\t  |- P            before: [ 0 ]         after: [ 1 ]\n     *\t\t  |- UL           before: [ 1 ]         after: [ 2 ]\n     *\t\t     |- LI        before: [ 1, 0 ]      after: [ 1, 1 ]\n     *\t\t     |  |- foo    before: [ 1, 0, 0 ]   after: [ 1, 0, 3 ]\n     *\t\t     |- LI        before: [ 1, 1 ]      after: [ 1, 2 ]\n     *\t\t        |- bar    before: [ 1, 1, 0 ]   after: [ 1, 1, 3 ]\n     *\n     * `foo` and `bar` are representing {@link module:engine/model/text~Text text nodes}. Since text nodes has offset size\n     * greater than `1` you can place position offset between their start and end:\n     *\n     *\t\t ROOT\n     *\t\t  |- P\n     *\t\t  |- UL\n     *\t\t     |- LI\n     *\t\t     |  |- f^o|o  ^ has path: [ 1, 0, 1 ]   | has path: [ 1, 0, 2 ]\n     *\t\t     |- LI\n     *\t\t        |- b^a|r  ^ has path: [ 1, 1, 1 ]   | has path: [ 1, 1, 2 ]\n     *\n     * @readonly\n     * @member {Array.<Number>} module:engine/model/position~Position#path\n     */\n\n    this.path = path;\n    /**\n     * Position stickiness. See {@link module:engine/model/position~PositionStickiness}.\n     *\n     * @member {module:engine/model/position~PositionStickiness} module:engine/model/position~Position#stickiness\n     */\n\n    this.stickiness = stickiness;\n  }\n  /**\n   * Offset at which this position is located in its {@link module:engine/model/position~Position#parent parent}. It is equal\n   * to the last item in position {@link module:engine/model/position~Position#path path}.\n   *\n   * @type {Number}\n   */\n\n\n  _createClass(Position, [{\n    key: \"compareWith\",\n\n    /**\n     * Checks whether this position is before or after given position.\n     *\n     * This method is safe to use it on non-existing positions (for example during operational transformation).\n     *\n     * @param {module:engine/model/position~Position} otherPosition Position to compare with.\n     * @returns {module:engine/model/position~PositionRelation}\n     */\n    value: function compareWith(otherPosition) {\n      if (this.root != otherPosition.root) {\n        return 'different';\n      }\n\n      var result = compareArrays(this.path, otherPosition.path);\n\n      switch (result) {\n        case 'same':\n          return 'same';\n\n        case 'prefix':\n          return 'before';\n\n        case 'extension':\n          return 'after';\n\n        default:\n          return this.path[result] < otherPosition.path[result] ? 'before' : 'after';\n      }\n    }\n    /**\n     * Gets the farthest position which matches the callback using\n     * {@link module:engine/model/treewalker~TreeWalker TreeWalker}.\n     *\n     * For example:\n     *\n     * \t\tgetLastMatchingPosition( value => value.type == 'text' );\n     * \t\t// <paragraph>[]foo</paragraph> -> <paragraph>foo[]</paragraph>\n     *\n     * \t\tgetLastMatchingPosition( value => value.type == 'text', { direction: 'backward' } );\n     * \t\t// <paragraph>foo[]</paragraph> -> <paragraph>[]foo</paragraph>\n     *\n     * \t\tgetLastMatchingPosition( value => false );\n     * \t\t// Do not move the position.\n     *\n     * @param {Function} skip Callback function. Gets {@link module:engine/model/treewalker~TreeWalkerValue} and should\n     * return `true` if the value should be skipped or `false` if not.\n     * @param {Object} options Object with configuration options. See {@link module:engine/model/treewalker~TreeWalker}.\n     *\n     * @returns {module:engine/model/position~Position} The position after the last item which matches the `skip` callback test.\n     */\n\n  }, {\n    key: \"getLastMatchingPosition\",\n    value: function getLastMatchingPosition(skip) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      options.startPosition = this;\n      var treeWalker = new TreeWalker(options);\n      treeWalker.skip(skip);\n      return treeWalker.position;\n    }\n    /**\n     * Returns a path to this position's parent. Parent path is equal to position {@link module:engine/model/position~Position#path path}\n     * but without the last item.\n     *\n     * This method is safe to use it on non-existing positions (for example during operational transformation).\n     *\n     * @returns {Array.<Number>} Path to the parent.\n     */\n\n  }, {\n    key: \"getParentPath\",\n    value: function getParentPath() {\n      return this.path.slice(0, -1);\n    }\n    /**\n     * Returns ancestors array of this position, that is this position's parent and its ancestors.\n     *\n     * @returns {Array.<module:engine/model/item~Item>} Array with ancestors.\n     */\n\n  }, {\n    key: \"getAncestors\",\n    value: function getAncestors() {\n      if (this.parent.is('documentFragment')) {\n        return [this.parent];\n      } else {\n        return this.parent.getAncestors({\n          includeSelf: true\n        });\n      }\n    }\n    /**\n     * Returns the slice of two position {@link #path paths} which is identical. The {@link #root roots}\n     * of these two paths must be identical.\n     *\n     * This method is safe to use it on non-existing positions (for example during operational transformation).\n     *\n     * @param {module:engine/model/position~Position} position The second position.\n     * @returns {Array.<Number>} The common path.\n     */\n\n  }, {\n    key: \"getCommonPath\",\n    value: function getCommonPath(position) {\n      if (this.root != position.root) {\n        return [];\n      } // We find on which tree-level start and end have the lowest common ancestor\n\n\n      var cmp = compareArrays(this.path, position.path); // If comparison returned string it means that arrays are same.\n\n      var diffAt = typeof cmp == 'string' ? Math.min(this.path.length, position.path.length) : cmp;\n      return this.path.slice(0, diffAt);\n    }\n    /**\n     * Returns an {@link module:engine/model/element~Element} or {@link module:engine/model/documentfragment~DocumentFragment}\n     * which is a common ancestor of both positions. The {@link #root roots} of these two positions must be identical.\n     *\n     * @param {module:engine/model/position~Position} position The second position.\n     * @returns {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment|null}\n     */\n\n  }, {\n    key: \"getCommonAncestor\",\n    value: function getCommonAncestor(position) {\n      var ancestorsA = this.getAncestors();\n      var ancestorsB = position.getAncestors();\n      var i = 0;\n\n      while (ancestorsA[i] == ancestorsB[i] && ancestorsA[i]) {\n        i++;\n      }\n\n      return i === 0 ? null : ancestorsA[i - 1];\n    }\n    /**\n     * Returns a new instance of `Position`, that has same {@link #parent parent} but it's offset\n     * is shifted by `shift` value (can be a negative value).\n     *\n     * This method is safe to use it on non-existing positions (for example during operational transformation).\n     *\n     * @param {Number} shift Offset shift. Can be a negative value.\n     * @returns {module:engine/model/position~Position} Shifted position.\n     */\n\n  }, {\n    key: \"getShiftedBy\",\n    value: function getShiftedBy(shift) {\n      var shifted = this.clone();\n      var offset = shifted.offset + shift;\n      shifted.offset = offset < 0 ? 0 : offset;\n      return shifted;\n    }\n    /**\n     * Checks whether this position is after given position.\n     *\n     * This method is safe to use it on non-existing positions (for example during operational transformation).\n     *\n     * @see module:engine/model/position~Position#isBefore\n     * @param {module:engine/model/position~Position} otherPosition Position to compare with.\n     * @returns {Boolean} True if this position is after given position.\n     */\n\n  }, {\n    key: \"isAfter\",\n    value: function isAfter(otherPosition) {\n      return this.compareWith(otherPosition) == 'after';\n    }\n    /**\n     * Checks whether this position is before given position.\n     *\n     * **Note:** watch out when using negation of the value returned by this method, because the negation will also\n     * be `true` if positions are in different roots and you might not expect this. You should probably use\n     * `a.isAfter( b ) || a.isEqual( b )` or `!a.isBefore( p ) && a.root == b.root` in most scenarios. If your\n     * condition uses multiple `isAfter` and `isBefore` checks, build them so they do not use negated values, i.e.:\n     *\n     *\t\tif ( a.isBefore( b ) && c.isAfter( d ) ) {\n     *\t\t\t// do A.\n     *\t\t} else {\n     *\t\t\t// do B.\n     *\t\t}\n     *\n     * or, if you have only one if-branch:\n     *\n     *\t\tif ( !( a.isBefore( b ) && c.isAfter( d ) ) {\n     *\t\t\t// do B.\n     *\t\t}\n     *\n     * rather than:\n     *\n     *\t\tif ( !a.isBefore( b ) || && !c.isAfter( d ) ) {\n     *\t\t\t// do B.\n     *\t\t} else {\n     *\t\t\t// do A.\n     *\t\t}\n     *\n     * This method is safe to use it on non-existing positions (for example during operational transformation).\n     *\n     * @param {module:engine/model/position~Position} otherPosition Position to compare with.\n     * @returns {Boolean} True if this position is before given position.\n     */\n\n  }, {\n    key: \"isBefore\",\n    value: function isBefore(otherPosition) {\n      return this.compareWith(otherPosition) == 'before';\n    }\n    /**\n     * Checks whether this position is equal to given position.\n     *\n     * This method is safe to use it on non-existing positions (for example during operational transformation).\n     *\n     * @param {module:engine/model/position~Position} otherPosition Position to compare with.\n     * @returns {Boolean} True if positions are same.\n     */\n\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(otherPosition) {\n      return this.compareWith(otherPosition) == 'same';\n    }\n    /**\n     * Checks whether this position is touching given position. Positions touch when there are no text nodes\n     * or empty nodes in a range between them. Technically, those positions are not equal but in many cases\n     * they are very similar or even indistinguishable.\n     *\n     * @param {module:engine/model/position~Position} otherPosition Position to compare with.\n     * @returns {Boolean} True if positions touch.\n     */\n\n  }, {\n    key: \"isTouching\",\n    value: function isTouching(otherPosition) {\n      var left = null;\n      var right = null;\n      var compare = this.compareWith(otherPosition);\n\n      switch (compare) {\n        case 'same':\n          return true;\n\n        case 'before':\n          left = Position._createAt(this);\n          right = Position._createAt(otherPosition);\n          break;\n\n        case 'after':\n          left = Position._createAt(otherPosition);\n          right = Position._createAt(this);\n          break;\n\n        default:\n          return false;\n      } // Cached for optimization purposes.\n\n\n      var leftParent = left.parent;\n\n      while (left.path.length + right.path.length) {\n        if (left.isEqual(right)) {\n          return true;\n        }\n\n        if (left.path.length > right.path.length) {\n          if (left.offset !== leftParent.maxOffset) {\n            return false;\n          }\n\n          left.path = left.path.slice(0, -1);\n          leftParent = leftParent.parent;\n          left.offset++;\n        } else {\n          if (right.offset !== 0) {\n            return false;\n          }\n\n          right.path = right.path.slice(0, -1);\n        }\n      }\n    }\n    /**\n     * Checks if two positions are in the same parent.\n     *\n     * This method is safe to use it on non-existing positions (for example during operational transformation).\n     *\n     * @param {module:engine/model/position~Position} position Position to compare with.\n     * @returns {Boolean} `true` if positions have the same parent, `false` otherwise.\n     */\n\n  }, {\n    key: \"hasSameParentAs\",\n    value: function hasSameParentAs(position) {\n      if (this.root !== position.root) {\n        return false;\n      }\n\n      var thisParentPath = this.getParentPath();\n      var posParentPath = position.getParentPath();\n      return compareArrays(thisParentPath, posParentPath) == 'same';\n    }\n    /**\n     * Returns a copy of this position that is transformed by given `operation`.\n     *\n     * The new position's parameters are updated accordingly to the effect of the `operation`.\n     *\n     * For example, if `n` nodes are inserted before the position, the returned position {@link ~Position#offset} will be\n     * increased by `n`. If the position was in a merged element, it will be accordingly moved to the new element, etc.\n     *\n     * This method is safe to use it on non-existing positions (for example during operational transformation).\n     *\n     * @param {module:engine/model/operation/operation~Operation} operation Operation to transform by.\n     * @returns {module:engine/model/position~Position} Transformed position.\n     */\n\n  }, {\n    key: \"getTransformedByOperation\",\n    value: function getTransformedByOperation(operation) {\n      var result;\n\n      switch (operation.type) {\n        case 'insert':\n          result = this._getTransformedByInsertOperation(operation);\n          break;\n\n        case 'move':\n        case 'remove':\n        case 'reinsert':\n          result = this._getTransformedByMoveOperation(operation);\n          break;\n\n        case 'split':\n          result = this._getTransformedBySplitOperation(operation);\n          break;\n\n        case 'merge':\n          result = this._getTransformedByMergeOperation(operation);\n          break;\n\n        default:\n          result = Position._createAt(this);\n          break;\n      }\n\n      return result;\n    }\n    /**\n     * Returns a copy of this position transformed by an insert operation.\n     *\n     * @protected\n     * @param {module:engine/model/operation/insertoperation~InsertOperation} operation\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"_getTransformedByInsertOperation\",\n    value: function _getTransformedByInsertOperation(operation) {\n      return this._getTransformedByInsertion(operation.position, operation.howMany);\n    }\n    /**\n     * Returns a copy of this position transformed by a move operation.\n     *\n     * @protected\n     * @param {module:engine/model/operation/moveoperation~MoveOperation} operation\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"_getTransformedByMoveOperation\",\n    value: function _getTransformedByMoveOperation(operation) {\n      return this._getTransformedByMove(operation.sourcePosition, operation.targetPosition, operation.howMany);\n    }\n    /**\n     * Returns a copy of this position transformed by a split operation.\n     *\n     * @protected\n     * @param {module:engine/model/operation/splitoperation~SplitOperation} operation\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"_getTransformedBySplitOperation\",\n    value: function _getTransformedBySplitOperation(operation) {\n      var movedRange = operation.movedRange;\n      var isContained = movedRange.containsPosition(this) || movedRange.start.isEqual(this) && this.stickiness == 'toNext';\n\n      if (isContained) {\n        return this._getCombined(operation.splitPosition, operation.moveTargetPosition);\n      } else {\n        if (operation.graveyardPosition) {\n          return this._getTransformedByMove(operation.graveyardPosition, operation.insertionPosition, 1);\n        } else {\n          return this._getTransformedByInsertion(operation.insertionPosition, 1);\n        }\n      }\n    }\n    /**\n     * Returns a copy of this position transformed by merge operation.\n     *\n     * @protected\n     * @param {module:engine/model/operation/mergeoperation~MergeOperation} operation\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"_getTransformedByMergeOperation\",\n    value: function _getTransformedByMergeOperation(operation) {\n      var movedRange = operation.movedRange;\n      var isContained = movedRange.containsPosition(this) || movedRange.start.isEqual(this);\n      var pos;\n\n      if (isContained) {\n        pos = this._getCombined(operation.sourcePosition, operation.targetPosition);\n\n        if (operation.sourcePosition.isBefore(operation.targetPosition)) {\n          // Above happens during OT when the merged element is moved before the merged-to element.\n          pos = pos._getTransformedByDeletion(operation.deletionPosition, 1);\n        }\n      } else if (this.isEqual(operation.deletionPosition)) {\n        pos = Position._createAt(operation.deletionPosition);\n      } else {\n        pos = this._getTransformedByMove(operation.deletionPosition, operation.graveyardPosition, 1);\n      }\n\n      return pos;\n    }\n    /**\n     * Returns a copy of this position that is updated by removing `howMany` nodes starting from `deletePosition`.\n     * It may happen that this position is in a removed node. If that is the case, `null` is returned instead.\n     *\n     * @protected\n     * @param {module:engine/model/position~Position} deletePosition Position before the first removed node.\n     * @param {Number} howMany How many nodes are removed.\n     * @returns {module:engine/model/position~Position|null} Transformed position or `null`.\n     */\n\n  }, {\n    key: \"_getTransformedByDeletion\",\n    value: function _getTransformedByDeletion(deletePosition, howMany) {\n      var transformed = Position._createAt(this); // This position can't be affected if deletion was in a different root.\n\n\n      if (this.root != deletePosition.root) {\n        return transformed;\n      }\n\n      if (compareArrays(deletePosition.getParentPath(), this.getParentPath()) == 'same') {\n        // If nodes are removed from the node that is pointed by this position...\n        if (deletePosition.offset < this.offset) {\n          // And are removed from before an offset of that position...\n          if (deletePosition.offset + howMany > this.offset) {\n            // Position is in removed range, it's no longer in the tree.\n            return null;\n          } else {\n            // Decrement the offset accordingly.\n            transformed.offset -= howMany;\n          }\n        }\n      } else if (compareArrays(deletePosition.getParentPath(), this.getParentPath()) == 'prefix') {\n        // If nodes are removed from a node that is on a path to this position...\n        var i = deletePosition.path.length - 1;\n\n        if (deletePosition.offset <= this.path[i]) {\n          // And are removed from before next node of that path...\n          if (deletePosition.offset + howMany > this.path[i]) {\n            // If the next node of that path is removed return null\n            // because the node containing this position got removed.\n            return null;\n          } else {\n            // Otherwise, decrement index on that path.\n            transformed.path[i] -= howMany;\n          }\n        }\n      }\n\n      return transformed;\n    }\n    /**\n     * Returns a copy of this position that is updated by inserting `howMany` nodes at `insertPosition`.\n     *\n     * @protected\n     * @param {module:engine/model/position~Position} insertPosition Position where nodes are inserted.\n     * @param {Number} howMany How many nodes are inserted.\n     * @returns {module:engine/model/position~Position} Transformed position.\n     */\n\n  }, {\n    key: \"_getTransformedByInsertion\",\n    value: function _getTransformedByInsertion(insertPosition, howMany) {\n      var transformed = Position._createAt(this); // This position can't be affected if insertion was in a different root.\n\n\n      if (this.root != insertPosition.root) {\n        return transformed;\n      }\n\n      if (compareArrays(insertPosition.getParentPath(), this.getParentPath()) == 'same') {\n        // If nodes are inserted in the node that is pointed by this position...\n        if (insertPosition.offset < this.offset || insertPosition.offset == this.offset && this.stickiness != 'toPrevious') {\n          // And are inserted before an offset of that position...\n          // \"Push\" this positions offset.\n          transformed.offset += howMany;\n        }\n      } else if (compareArrays(insertPosition.getParentPath(), this.getParentPath()) == 'prefix') {\n        // If nodes are inserted in a node that is on a path to this position...\n        var i = insertPosition.path.length - 1;\n\n        if (insertPosition.offset <= this.path[i]) {\n          // And are inserted before next node of that path...\n          // \"Push\" the index on that path.\n          transformed.path[i] += howMany;\n        }\n      }\n\n      return transformed;\n    }\n    /**\n     * Returns a copy of this position that is updated by moving `howMany` nodes from `sourcePosition` to `targetPosition`.\n     *\n     * @protected\n     * @param {module:engine/model/position~Position} sourcePosition Position before the first element to move.\n     * @param {module:engine/model/position~Position} targetPosition Position where moved elements will be inserted.\n     * @param {Number} howMany How many consecutive nodes to move, starting from `sourcePosition`.\n     * @returns {module:engine/model/position~Position} Transformed position.\n     */\n\n  }, {\n    key: \"_getTransformedByMove\",\n    value: function _getTransformedByMove(sourcePosition, targetPosition, howMany) {\n      // Update target position, as it could be affected by nodes removal.\n      targetPosition = targetPosition._getTransformedByDeletion(sourcePosition, howMany);\n\n      if (sourcePosition.isEqual(targetPosition)) {\n        // If `targetPosition` is equal to `sourcePosition` this isn't really any move. Just return position as it is.\n        return Position._createAt(this);\n      } // Moving a range removes nodes from their original position. We acknowledge this by proper transformation.\n\n\n      var transformed = this._getTransformedByDeletion(sourcePosition, howMany);\n\n      var isMoved = transformed === null || sourcePosition.isEqual(this) && this.stickiness == 'toNext' || sourcePosition.getShiftedBy(howMany).isEqual(this) && this.stickiness == 'toPrevious';\n\n      if (isMoved) {\n        // This position is inside moved range (or sticks to it).\n        // In this case, we calculate a combination of this position, move source position and target position.\n        return this._getCombined(sourcePosition, targetPosition);\n      } else {\n        // This position is not inside a removed range.\n        //\n        // In next step, we simply reflect inserting `howMany` nodes, which might further affect the position.\n        return transformed._getTransformedByInsertion(targetPosition, howMany);\n      }\n    }\n    /**\n     * Returns a new position that is a combination of this position and given positions.\n     *\n     * The combined position is a copy of this position transformed by moving a range starting at `source` position\n     * to the `target` position. It is expected that this position is inside the moved range.\n     *\n     * Example:\n     *\n     *\t\tlet original = model.createPositionFromPath( root, [ 2, 3, 1 ] );\n     *\t\tlet source = model.createPositionFromPath( root, [ 2, 2 ] );\n     *\t\tlet target = model.createPositionFromPath( otherRoot, [ 1, 1, 3 ] );\n     *\t\toriginal._getCombined( source, target ); // path is [ 1, 1, 4, 1 ], root is `otherRoot`\n     *\n     * Explanation:\n     *\n     * We have a position `[ 2, 3, 1 ]` and move some nodes from `[ 2, 2 ]` to `[ 1, 1, 3 ]`. The original position\n     * was inside moved nodes and now should point to the new place. The moved nodes will be after\n     * positions `[ 1, 1, 3 ]`, `[ 1, 1, 4 ]`, `[ 1, 1, 5 ]`. Since our position was in the second moved node,\n     * the transformed position will be in a sub-tree of a node at `[ 1, 1, 4 ]`. Looking at original path, we\n     * took care of `[ 2, 3 ]` part of it. Now we have to add the rest of the original path to the transformed path.\n     * Finally, the transformed position will point to `[ 1, 1, 4, 1 ]`.\n     *\n     * @protected\n     * @param {module:engine/model/position~Position} source Beginning of the moved range.\n     * @param {module:engine/model/position~Position} target Position where the range is moved.\n     * @returns {module:engine/model/position~Position} Combined position.\n     */\n\n  }, {\n    key: \"_getCombined\",\n    value: function _getCombined(source, target) {\n      var i = source.path.length - 1; // The first part of a path to combined position is a path to the place where nodes were moved.\n\n      var combined = Position._createAt(target);\n\n      combined.stickiness = this.stickiness; // Then we have to update the rest of the path.\n      // Fix the offset because this position might be after `from` position and we have to reflect that.\n\n      combined.offset = combined.offset + this.path[i] - source.offset; // Then, add the rest of the path.\n      // If this position is at the same level as `from` position nothing will get added.\n\n      combined.path = combined.path.concat(this.path.slice(i + 1));\n      return combined;\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        root: this.root.toJSON(),\n        path: Array.from(this.path),\n        stickiness: this.stickiness\n      };\n    }\n    /**\n     * Returns a new position that is equal to current position.\n     *\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new this.constructor(this.root, this.path, this.stickiness);\n    }\n    /**\n     * Creates position at the given location. The location can be specified as:\n     *\n     * * a {@link module:engine/model/position~Position position},\n     * * parent element and offset (offset defaults to `0`),\n     * * parent element and `'end'` (sets position at the end of that element),\n     * * {@link module:engine/model/item~Item model item} and `'before'` or `'after'` (sets position before or after given model item).\n     *\n     * This method is a shortcut to other factory methods such as:\n     *\n     * * {@link module:engine/model/position~Position._createBefore},\n     * * {@link module:engine/model/position~Position._createAfter}.\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n     * first parameter is a {@link module:engine/model/item~Item model item}.\n     * @protected\n     */\n\n  }, {\n    key: \"offset\",\n    get: function get() {\n      return last(this.path);\n    }\n    /**\n     * @param {Number} newOffset\n     */\n    ,\n    set: function set(newOffset) {\n      this.path[this.path.length - 1] = newOffset;\n    }\n    /**\n     * Parent element of this position.\n     *\n     * Keep in mind that `parent` value is calculated when the property is accessed.\n     * If {@link module:engine/model/position~Position#path position path}\n     * leads to a non-existing element, `parent` property will throw error.\n     *\n     * Also it is a good idea to cache `parent` property if it is used frequently in an algorithm (i.e. in a long loop).\n     *\n     * @readonly\n     * @type {module:engine/model/element~Element}\n     */\n\n  }, {\n    key: \"parent\",\n    get: function get() {\n      var parent = this.root;\n\n      for (var i = 0; i < this.path.length - 1; i++) {\n        parent = parent.getChild(parent.offsetToIndex(this.path[i]));\n      }\n\n      return parent;\n    }\n    /**\n     * Position {@link module:engine/model/position~Position#offset offset} converted to an index in position's parent node. It is\n     * equal to the {@link module:engine/model/node~Node#index index} of a node after this position. If position is placed\n     * in text node, position index is equal to the index of that text node.\n     *\n     * @readonly\n     * @type {Number}\n     */\n\n  }, {\n    key: \"index\",\n    get: function get() {\n      return this.parent.offsetToIndex(this.offset);\n    }\n    /**\n     * Returns {@link module:engine/model/text~Text text node} instance in which this position is placed or `null` if this\n     * position is not in a text node.\n     *\n     * @readonly\n     * @type {module:engine/model/text~Text|null}\n     */\n\n  }, {\n    key: \"textNode\",\n    get: function get() {\n      var node = this.parent.getChild(this.index);\n      return node instanceof Text && node.startOffset < this.offset ? node : null;\n    }\n    /**\n     * Node directly after this position or `null` if this position is in text node.\n     *\n     * @readonly\n     * @type {module:engine/model/node~Node|null}\n     */\n\n  }, {\n    key: \"nodeAfter\",\n    get: function get() {\n      return this.textNode === null ? this.parent.getChild(this.index) : null;\n    }\n    /**\n     * Node directly before this position or `null` if this position is in text node.\n     *\n     * @readonly\n     * @type {Node}\n     */\n\n  }, {\n    key: \"nodeBefore\",\n    get: function get() {\n      return this.textNode === null ? this.parent.getChild(this.index - 1) : null;\n    }\n    /**\n     * Is `true` if position is at the beginning of its {@link module:engine/model/position~Position#parent parent}, `false` otherwise.\n     *\n     * @readonly\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isAtStart\",\n    get: function get() {\n      return this.offset === 0;\n    }\n    /**\n     * Is `true` if position is at the end of its {@link module:engine/model/position~Position#parent parent}, `false` otherwise.\n     *\n     * @readonly\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isAtEnd\",\n    get: function get() {\n      return this.offset == this.parent.maxOffset;\n    }\n  }], [{\n    key: \"_createAt\",\n    value: function _createAt(itemOrPosition, offset) {\n      if (itemOrPosition instanceof Position) {\n        return new Position(itemOrPosition.root, itemOrPosition.path, itemOrPosition.stickiness);\n      } else {\n        var node = itemOrPosition;\n\n        if (offset == 'end') {\n          offset = node.maxOffset;\n        } else if (offset == 'before') {\n          return this._createBefore(node);\n        } else if (offset == 'after') {\n          return this._createAfter(node);\n        } else if (offset !== 0 && !offset) {\n          /**\n           * {@link module:engine/model/model~Model#createPositionAt `Model#createPositionAt()`}\n           * requires the offset to be specified when the first parameter is a model item.\n           *\n           * @error model-createPositionAt-offset-required\n           */\n          throw new CKEditorError('model-createPositionAt-offset-required: ' + 'Model#createPositionAt() requires the offset when the first parameter is a model item.');\n        }\n\n        if (!node.is('element') && !node.is('documentFragment')) {\n          /**\n           * Position parent have to be a model element or model document fragment.\n           *\n           * @error model-position-parent-incorrect\n           */\n          throw new CKEditorError('model-position-parent-incorrect: Position parent have to be a element or document fragment.');\n        }\n\n        var path = node.getPath();\n        path.push(offset);\n        return new this(node.root, path);\n      }\n    }\n    /**\n     * Creates a new position, after given {@link module:engine/model/item~Item model item}.\n     *\n     * @param {module:engine/model/item~Item} item Item after which the position should be placed.\n     * @returns {module:engine/model/position~Position}\n     * @protected\n     */\n\n  }, {\n    key: \"_createAfter\",\n    value: function _createAfter(item) {\n      if (!item.parent) {\n        /**\n         * You can not make a position after a root element.\n         *\n         * @error model-position-after-root\n         * @param {module:engine/model/item~Item} root\n         */\n        throw new CKEditorError('model-position-after-root: You cannot make a position after root.', {\n          root: item\n        });\n      }\n\n      return this._createAt(item.parent, item.endOffset);\n    }\n    /**\n     * Creates a new position, before the given {@link module:engine/model/item~Item model item}.\n     *\n     * @param {module:engine/model/item~Item} item Item before which the position should be placed.\n     * @returns {module:engine/model/position~Position}\n     * @protected\n     */\n\n  }, {\n    key: \"_createBefore\",\n    value: function _createBefore(item) {\n      if (!item.parent) {\n        /**\n         * You can not make a position before a root element.\n         *\n         * @error model-position-before-root\n         * @param {module:engine/model/item~Item} root\n         */\n        throw new CKEditorError('model-position-before-root: You cannot make a position before root.', {\n          root: item\n        });\n      }\n\n      return this._createAt(item.parent, item.startOffset);\n    }\n    /**\n     * Creates a `Position` instance from given plain object (i.e. parsed JSON string).\n     *\n     * @param {Object} json Plain object to be converted to `Position`.\n     * @param {module:engine/model/document~Document} doc Document object that will be position owner.\n     * @returns {module:engine/model/position~Position} `Position` instance created using given plain object.\n     */\n\n  }, {\n    key: \"fromJSON\",\n    value: function fromJSON(json, doc) {\n      if (json.root === '$graveyard') {\n        var _pos = new Position(doc.graveyard, json.path);\n\n        _pos.stickiness = json.stickiness;\n        return _pos;\n      }\n\n      if (!doc.getRoot(json.root)) {\n        /**\n         * Cannot create position for document. Root with specified name does not exist.\n         *\n         * @error model-position-fromjson-no-root\n         * @param {String} rootName\n         */\n        throw new CKEditorError('model-position-fromjson-no-root: Cannot create position for document. Root with specified name does not exist.', {\n          rootName: json.root\n        });\n      }\n\n      var pos = new Position(doc.getRoot(json.root), json.path);\n      pos.stickiness = json.stickiness;\n      return pos;\n    }\n  }]);\n\n  return Position;\n}();\n/**\n * A flag indicating whether this position is `'before'` or `'after'` or `'same'` as given position.\n * If positions are in different roots `'different'` flag is returned.\n *\n * @typedef {String} module:engine/model/position~PositionRelation\n */\n\n/**\n * Represents how position is \"sticking\" with neighbour nodes. Used to define how position should be transformed (moved)\n * in edge cases. Possible values: `'toNone'`, `'toNext'`, `'toPrevious'`.\n *\n * Examples:\n *\n *\t\tInsert. Position is at | and nodes are inserted at the same position, marked as ^:\n *\n *\t\t- sticks to none:           <p>f^|oo</p>  ->  <p>fbar|oo</p>\n *\t\t- sticks to next node:      <p>f^|oo</p>  ->  <p>fbar|oo</p>\n *\t\t- sticks to previous node:  <p>f|^oo</p>  ->  <p>f|baroo</p>\n *\n *\n *\t\tMove. Position is at | and range [oo] is moved to position ^:\n *\n *\t\t- sticks to none:           <p>f|[oo]</p><p>b^ar</p>  ->  <p>f|</p><p>booar</p>\n *\t\t- sticks to none:           <p>f[oo]|</p><p>b^ar</p>  ->  <p>f|</p><p>booar</p>\n *\n *\t\t- sticks to next node:      <p>f|[oo]</p><p>b^ar</p>  ->  <p>f</p><p>b|ooar</p>\n *\t\t- sticks to next node:      <p>f[oo]|</p><p>b^ar</p>  ->  <p>f|</p><p>booar</p>\n *\n *\t\t- sticks to previous node:  <p>f|[oo]</p><p>b^ar</p>  ->  <p>f|</p><p>booar</p>\n *\t\t- sticks to previous node:  <p>f[oo]|</p><p>b^ar</p>  ->  <p>f</p><p>boo|ar</p>\n *\n * @typedef {String} module:engine/model/position~PositionStickiness\n */\n\n\nexport { Position as default };","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module core/plugin\n */\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n/**\n * The base class for CKEditor plugin classes.\n *\n * @implements module:core/plugin~PluginInterface\n * @mixes module:utils/observablemixin~ObservableMixin\n */\n\nvar Plugin =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @inheritDoc\n   */\n  function Plugin(editor) {\n    _classCallCheck(this, Plugin);\n\n    /**\n     * The editor instance.\n     *\n     * Note that most editors implement the {@link module:core/editor/editorwithui~EditorWithUI} interface in addition\n     * to the base {@link module:core/editor/editor~Editor} interface. However, editors with an external UI\n     * (i.e. Bootstrap-based) or a headless editor may not implement the {@link module:core/editor/editorwithui~EditorWithUI}\n     * interface.\n     *\n     * Because of above, to make plugins more universal, it is recommended to split features into:\n     *  - The \"editing\" part that only uses the {@link module:core/editor/editor~Editor} interface.\n     *  - The \"UI\" part that uses both the {@link module:core/editor/editor~Editor} interface and\n     *  the {@link module:core/editor/editorwithui~EditorWithUI} interface.\n     *\n     * @readonly\n     * @member {module:core/editor/editor~Editor} #editor\n     */\n    this.editor = editor;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(Plugin, [{\n    key: \"destroy\",\n    value: function destroy() {\n      this.stopListening();\n    }\n  }]);\n\n  return Plugin;\n}();\n\nexport { Plugin as default };\nmix(Plugin, ObservableMixin);\n/**\n * The base interface for CKEditor plugins.\n *\n * In its minimal form it can be a simple function (it will be used as a constructor) that accepts\n * {@link module:core/editor/editor~Editor the editor} as a parameter.\n * It can also implement a few methods which, when present, will be used to properly initialize and destroy the plugin.\n *\n *\t\t// A simple plugin that enables a data processor.\n *\t\tfunction MyPlugin( editor ) {\n *\t\t\teditor.data.processor = new MyDataProcessor();\n *\t\t}\n *\n * In most cases, however, you will want to inherit from the {@link module:core/plugin~Plugin} class which implements the\n * {@link module:utils/observablemixin~ObservableMixin} and is, therefore, more convenient:\n *\n *\t\tclass MyPlugin extends Plugin {\n *\t\t\tinit() {\n *\t\t\t\t// `listenTo()` and `editor` are available thanks to `Plugin`.\n *\t\t\t\t// By using `listenTo()` you will ensure that the listener is removed when\n *\t\t\t\t// the plugin is destroyed.\n *\t\t\t\tthis.listenTo( this.editor, 'dataReady', () => {\n *\t\t\t\t\t// Do something when the data is ready.\n *\t\t\t\t} );\n *\t\t\t}\n *\t\t}\n *\n * @interface PluginInterface\n */\n\n/**\n * Creates a new plugin instance. This is the first step of the plugin initialization.\n * See also {@link #init} and {@link #afterInit}.\n *\n * A plugin is always instantiated after its {@link module:core/plugin~PluginInterface.requires dependencies} and the\n * {@link #init} and {@link #afterInit} methods are called in the same order.\n *\n * Usually, you will want to put your plugin's initialization code in the {@link #init} method.\n * The constructor can be understood as \"before init\" and used in special cases, just like\n * {@link #afterInit} serves the special \"after init\" scenarios (e.g.the code which depends on other\n * plugins, but which does not {@link module:core/plugin~PluginInterface.requires explicitly require} them).\n *\n * @method #constructor\n * @param {module:core/editor/editor~Editor} editor\n */\n\n/**\n * An array of plugins required by this plugin.\n *\n * To keep the plugin class definition tight it is recommended to define this property as a static getter:\n *\n *\t\timport Image from './image.js';\n *\n *\t\texport default class ImageCaption {\n *\t\t\tstatic get requires() {\n *\t\t\t\treturn [ Image ];\n *\t\t\t}\n *\t\t}\n *\n * @static\n * @readonly\n * @member {Array.<Function>|undefined} module:core/plugin~PluginInterface.requires\n */\n\n/**\n * An optional name of the plugin. If set, the plugin will be available in\n * {@link module:core/plugincollection~PluginCollection#get} by its\n * name and its constructor. If not, then only by its constructor.\n *\n * The name should reflect the constructor name.\n *\n * To keep the plugin class definition tight it is recommended to define this property as a static getter:\n *\n *\t\texport default class ImageCaption {\n *\t\t\tstatic get pluginName() {\n *\t\t\t\treturn 'ImageCaption';\n *\t\t\t}\n *\t\t}\n *\n * Note: The native `Function.name` property could not be used to keep the plugin name because\n * it will be mangled during code minification.\n *\n * Naming a plugin is necessary to enable removing it through the\n * {@link module:core/editor/editorconfig~EditorConfig#removePlugins `config.removePlugins`} option.\n *\n * @static\n * @readonly\n * @member {String|undefined} module:core/plugin~PluginInterface.pluginName\n */\n\n/**\n * The second stage (after plugin {@link #constructor}) of plugin initialization.\n * Unlike the plugin constructor this method can be asynchronous.\n *\n * A plugin's `init()` method is called after its {@link module:core/plugin~PluginInterface.requires dependencies} are initialized,\n * so in the same order as constructors of these plugins.\n *\n * **Note:** This method is optional. A plugin instance does not need to have it defined.\n *\n * @method #init\n * @returns {null|Promise}\n */\n\n/**\n * The third (and last) stage of plugin initialization. See also {@link #constructor} and {@link #init}.\n *\n * **Note:** This method is optional. A plugin instance does not need to have it defined.\n *\n * @method #afterInit\n * @returns {null|Promise}\n */\n\n/**\n * Destroys the plugin.\n *\n * **Note:** This method is optional. A plugin instance does not need to have it defined.\n *\n * @method #destroy\n * @returns {null|Promise}\n */","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/position\n */\nimport TreeWalker from './treewalker';\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport EditableElement from './editableelement';\n/**\n * Position in the view tree. Position is represented by its parent node and an offset in this parent.\n *\n * In order to create a new position instance use the `createPosition*()` factory methods available in:\n *\n * * {@module:engine/view/view~View}\n * * {@module:engine/view/downcastwriter~DowncastWriter}\n * * {@module:engine/view/upcastwriter~UpcastWriter}\n */\n\nvar Position =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a position.\n   *\n   * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} parent Position parent.\n   * @param {Number} offset Position offset.\n   */\n  function Position(parent, offset) {\n    _classCallCheck(this, Position);\n\n    /**\n     * Position parent.\n     *\n     * @readonly\n     * @member {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment}\n     * module:engine/view/position~Position#parent\n     */\n    this.parent = parent;\n    /**\n     * Position offset.\n     *\n     * @readonly\n     * @member {Number} module:engine/view/position~Position#offset\n     */\n\n    this.offset = offset;\n  }\n  /**\n   * Node directly after the position. Equals `null` when there is no node after position or position is located\n   * inside text node.\n   *\n   * @readonly\n   * @type {module:engine/view/node~Node|null}\n   */\n\n\n  _createClass(Position, [{\n    key: \"getShiftedBy\",\n\n    /**\n     * Returns a new instance of Position with offset incremented by `shift` value.\n     *\n     * @param {Number} shift How position offset should get changed. Accepts negative values.\n     * @returns {module:engine/view/position~Position} Shifted position.\n     */\n    value: function getShiftedBy(shift) {\n      var shifted = Position._createAt(this);\n\n      var offset = shifted.offset + shift;\n      shifted.offset = offset < 0 ? 0 : offset;\n      return shifted;\n    }\n    /**\n     * Gets the farthest position which matches the callback using\n     * {@link module:engine/view/treewalker~TreeWalker TreeWalker}.\n     *\n     * For example:\n     *\n     * \t\tgetLastMatchingPosition( value => value.type == 'text' ); // <p>{}foo</p> -> <p>foo[]</p>\n     * \t\tgetLastMatchingPosition( value => value.type == 'text', { direction: 'backward' } ); // <p>foo[]</p> -> <p>{}foo</p>\n     * \t\tgetLastMatchingPosition( value => false ); // Do not move the position.\n     *\n     * @param {Function} skip Callback function. Gets {@link module:engine/view/treewalker~TreeWalkerValue} and should\n     * return `true` if the value should be skipped or `false` if not.\n     * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}.\n     *\n     * @returns {module:engine/view/position~Position} The position after the last item which matches the `skip` callback test.\n     */\n\n  }, {\n    key: \"getLastMatchingPosition\",\n    value: function getLastMatchingPosition(skip) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      options.startPosition = this;\n      var treeWalker = new TreeWalker(options);\n      treeWalker.skip(skip);\n      return treeWalker.position;\n    }\n    /**\n     * Returns ancestors array of this position, that is this position's parent and it's ancestors.\n     *\n     * @returns {Array} Array with ancestors.\n     */\n\n  }, {\n    key: \"getAncestors\",\n    value: function getAncestors() {\n      if (this.parent.is('documentFragment')) {\n        return [this.parent];\n      } else {\n        return this.parent.getAncestors({\n          includeSelf: true\n        });\n      }\n    }\n    /**\n     * Returns a {@link module:engine/view/node~Node} or {@link module:engine/view/documentfragment~DocumentFragment}\n     * which is a common ancestor of both positions.\n     *\n     * @param {module:engine/view/position~Position} position\n     * @returns {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment|null}\n     */\n\n  }, {\n    key: \"getCommonAncestor\",\n    value: function getCommonAncestor(position) {\n      var ancestorsA = this.getAncestors();\n      var ancestorsB = position.getAncestors();\n      var i = 0;\n\n      while (ancestorsA[i] == ancestorsB[i] && ancestorsA[i]) {\n        i++;\n      }\n\n      return i === 0 ? null : ancestorsA[i - 1];\n    }\n    /**\n     * Checks whether this position equals given position.\n     *\n     * @param {module:engine/view/position~Position} otherPosition Position to compare with.\n     * @returns {Boolean} True if positions are same.\n     */\n\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(otherPosition) {\n      return this.parent == otherPosition.parent && this.offset == otherPosition.offset;\n    }\n    /**\n     * Checks whether this position is located before given position. When method returns `false` it does not mean that\n     * this position is after give one. Two positions may be located inside separate roots and in that situation this\n     * method will still return `false`.\n     *\n     * @see module:engine/view/position~Position#isAfter\n     * @see module:engine/view/position~Position#compareWith\n     * @param {module:engine/view/position~Position} otherPosition Position to compare with.\n     * @returns {Boolean} Returns `true` if this position is before given position.\n     */\n\n  }, {\n    key: \"isBefore\",\n    value: function isBefore(otherPosition) {\n      return this.compareWith(otherPosition) == 'before';\n    }\n    /**\n     * Checks whether this position is located after given position. When method returns `false` it does not mean that\n     * this position is before give one. Two positions may be located inside separate roots and in that situation this\n     * method will still return `false`.\n     *\n     * @see module:engine/view/position~Position#isBefore\n     * @see module:engine/view/position~Position#compareWith\n     * @param {module:engine/view/position~Position} otherPosition Position to compare with.\n     * @returns {Boolean} Returns `true` if this position is after given position.\n     */\n\n  }, {\n    key: \"isAfter\",\n    value: function isAfter(otherPosition) {\n      return this.compareWith(otherPosition) == 'after';\n    }\n    /**\n     * Checks whether this position is before, after or in same position that other position. Two positions may be also\n     * different when they are located in separate roots.\n     *\n     * @param {module:engine/view/position~Position} otherPosition Position to compare with.\n     * @returns {module:engine/view/position~PositionRelation}\n     */\n\n  }, {\n    key: \"compareWith\",\n    value: function compareWith(otherPosition) {\n      if (this.root !== otherPosition.root) {\n        return 'different';\n      }\n\n      if (this.isEqual(otherPosition)) {\n        return 'same';\n      } // Get path from root to position's parent element.\n\n\n      var thisPath = this.parent.is('node') ? this.parent.getPath() : [];\n      var otherPath = otherPosition.parent.is('node') ? otherPosition.parent.getPath() : []; // Add the positions' offsets to the parents offsets.\n\n      thisPath.push(this.offset);\n      otherPath.push(otherPosition.offset); // Compare both path arrays to find common ancestor.\n\n      var result = compareArrays(thisPath, otherPath);\n\n      switch (result) {\n        case 'prefix':\n          return 'before';\n\n        case 'extension':\n          return 'after';\n\n        default:\n          return thisPath[result] < otherPath[result] ? 'before' : 'after';\n      }\n    }\n    /**\n     * Creates a {@link module:engine/view/treewalker~TreeWalker TreeWalker} instance with this positions as a start position.\n     *\n     * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}\n     * @param {module:engine/view/range~Range} [options.boundaries=null] Range to define boundaries of the iterator.\n     * @param {Boolean} [options.singleCharacters=false]\n     * @param {Boolean} [options.shallow=false]\n     * @param {Boolean} [options.ignoreElementEnd=false]\n     */\n\n  }, {\n    key: \"getWalker\",\n    value: function getWalker() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      options.startPosition = this;\n      return new TreeWalker(options);\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new Position(this.parent, this.offset);\n    }\n    /**\n     * Creates position at the given location. The location can be specified as:\n     *\n     * * a {@link module:engine/view/position~Position position},\n     * * parent element and offset (offset defaults to `0`),\n     * * parent element and `'end'` (sets position at the end of that element),\n     * * {@link module:engine/view/item~Item view item} and `'before'` or `'after'` (sets position before or after given view item).\n     *\n     * This method is a shortcut to other constructors such as:\n     *\n     * * {@link module:engine/view/position~Position._createBefore},\n     * * {@link module:engine/view/position~Position._createAfter}.\n     *\n     * @protected\n     * @param {module:engine/view/item~Item|module:engine/view/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n     * first parameter is a {@link module:engine/view/item~Item view item}.\n     */\n\n  }, {\n    key: \"nodeAfter\",\n    get: function get() {\n      if (this.parent.is('text')) {\n        return null;\n      }\n\n      return this.parent.getChild(this.offset) || null;\n    }\n    /**\n     * Node directly before the position. Equals `null` when there is no node before position or position is located\n     * inside text node.\n     *\n     * @readonly\n     * @type {module:engine/view/node~Node|null}\n     */\n\n  }, {\n    key: \"nodeBefore\",\n    get: function get() {\n      if (this.parent.is('text')) {\n        return null;\n      }\n\n      return this.parent.getChild(this.offset - 1) || null;\n    }\n    /**\n     * Is `true` if position is at the beginning of its {@link module:engine/view/position~Position#parent parent}, `false` otherwise.\n     *\n     * @readonly\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isAtStart\",\n    get: function get() {\n      return this.offset === 0;\n    }\n    /**\n     * Is `true` if position is at the end of its {@link module:engine/view/position~Position#parent parent}, `false` otherwise.\n     *\n     * @readonly\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isAtEnd\",\n    get: function get() {\n      var endOffset = this.parent.is('text') ? this.parent.data.length : this.parent.childCount;\n      return this.offset === endOffset;\n    }\n    /**\n     * Position's root, that is the root of the position's parent element.\n     *\n     * @readonly\n     * @type {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment}\n     */\n\n  }, {\n    key: \"root\",\n    get: function get() {\n      return this.parent.root;\n    }\n    /**\n     * {@link module:engine/view/editableelement~EditableElement EditableElement} instance that contains this position, or `null` if\n     * position is not inside an editable element.\n     *\n     * @type {module:engine/view/editableelement~EditableElement|null}\n     */\n\n  }, {\n    key: \"editableElement\",\n    get: function get() {\n      var editable = this.parent;\n\n      while (!(editable instanceof EditableElement)) {\n        if (editable.parent) {\n          editable = editable.parent;\n        } else {\n          return null;\n        }\n      }\n\n      return editable;\n    }\n  }], [{\n    key: \"_createAt\",\n    value: function _createAt(itemOrPosition, offset) {\n      if (itemOrPosition instanceof Position) {\n        return new this(itemOrPosition.parent, itemOrPosition.offset);\n      } else {\n        var node = itemOrPosition;\n\n        if (offset == 'end') {\n          offset = node.is('text') ? node.data.length : node.childCount;\n        } else if (offset == 'before') {\n          return this._createBefore(node);\n        } else if (offset == 'after') {\n          return this._createAfter(node);\n        } else if (offset !== 0 && !offset) {\n          /**\n           * {@link module:engine/view/view~View#createPositionAt `View#createPositionAt()`}\n           * requires the offset to be specified when the first parameter is a view item.\n           *\n           * @error view-createPositionAt-offset-required\n           */\n          throw new CKEditorError('view-createPositionAt-offset-required: ' + 'View#createPositionAt() requires the offset when the first parameter is a view item.');\n        }\n\n        return new Position(node, offset);\n      }\n    }\n    /**\n     * Creates a new position after given view item.\n     *\n     * @protected\n     * @param {module:engine/view/item~Item} item View item after which the position should be located.\n     * @returns {module:engine/view/position~Position}\n     */\n\n  }, {\n    key: \"_createAfter\",\n    value: function _createAfter(item) {\n      // TextProxy is not a instance of Node so we need do handle it in specific way.\n      if (item.is('textProxy')) {\n        return new Position(item.textNode, item.offsetInText + item.data.length);\n      }\n\n      if (!item.parent) {\n        /**\n         * You can not make a position after a root.\n         *\n         * @error view-position-after-root\n         * @param {module:engine/view/node~Node} root\n         */\n        throw new CKEditorError('view-position-after-root: You can not make position after root.', {\n          root: item\n        });\n      }\n\n      return new Position(item.parent, item.index + 1);\n    }\n    /**\n     * Creates a new position before given view item.\n     *\n     * @protected\n     * @param {module:engine/view/item~Item} item View item before which the position should be located.\n     * @returns {module:engine/view/position~Position}\n     */\n\n  }, {\n    key: \"_createBefore\",\n    value: function _createBefore(item) {\n      // TextProxy is not a instance of Node so we need do handle it in specific way.\n      if (item.is('textProxy')) {\n        return new Position(item.textNode, item.offsetInText);\n      }\n\n      if (!item.parent) {\n        /**\n         * You cannot make a position before a root.\n         *\n         * @error view-position-before-root\n         * @param {module:engine/view/node~Node} root\n         */\n        throw new CKEditorError('view-position-before-root: You can not make position before root.', {\n          root: item\n        });\n      }\n\n      return new Position(item.parent, item.index);\n    }\n  }]);\n\n  return Position;\n}();\n/**\n * A flag indicating whether this position is `'before'` or `'after'` or `'same'` as given position.\n * If positions are in different roots `'different'` flag is returned.\n *\n * @typedef {String} module:engine/view/position~PositionRelation\n */\n\n\nexport { Position as default };","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/mix\n */\n\n/**\n * Copies enumerable properties and symbols from the objects given as 2nd+ parameters to the\n * prototype of first object (a constructor).\n *\n *\t\tclass Editor {\n *\t\t\t...\n *\t\t}\n *\n *\t\tconst SomeMixin = {\n *\t\t\ta() {\n *\t\t\t\treturn 'a';\n *\t\t\t}\n *\t\t};\n *\n *\t\tmix( Editor, SomeMixin, ... );\n *\n *\t\tnew Editor().a(); // -> 'a'\n *\n * Note: Properties which already exist in the base class will not be overriden.\n *\n * @param {Function} [baseClass] Class which prototype will be extended.\n * @param {Object} [...mixins] Objects from which to get properties.\n */\nexport default function mix(baseClass) {\n  for (var _len = arguments.length, mixins = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    mixins[_key - 1] = arguments[_key];\n  }\n\n  mixins.forEach(function (mixin) {\n    Object.getOwnPropertyNames(mixin).concat(Object.getOwnPropertySymbols(mixin)).forEach(function (key) {\n      if (key in baseClass.prototype) {\n        return;\n      }\n\n      var sourceDescriptor = Object.getOwnPropertyDescriptor(mixin, key);\n      sourceDescriptor.enumerable = false;\n      Object.defineProperty(baseClass.prototype, key, sourceDescriptor);\n    });\n  });\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/range\n */\nimport Position from './position';\nimport TreeWalker from './treewalker';\n/**\n * Range in the view tree. A range is represented by its start and end {@link module:engine/view/position~Position positions}.\n *\n * In order to create a new position instance use the `createPosition*()` factory methods available in:\n *\n * * {@module:engine/view/view~View}\n * * {@module:engine/view/downcastwriter~DowncastWriter}\n * * {@module:engine/view/upcastwriter~UpcastWriter}\n */\n\nvar Range =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a range spanning from `start` position to `end` position.\n   *\n   * **Note:** Constructor creates it's own {@link module:engine/view/position~Position} instances basing on passed values.\n   *\n   * @param {module:engine/view/position~Position} start Start position.\n   * @param {module:engine/view/position~Position} [end] End position. If not set, range will be collapsed at the `start` position.\n   */\n  function Range(start) {\n    var end = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    _classCallCheck(this, Range);\n\n    /**\n     * Start position.\n     *\n     * @readonly\n     * @member {module:engine/view/position~Position}\n     */\n    this.start = start.clone();\n    /**\n     * End position.\n     *\n     * @readonly\n     * @member {module:engine/view/position~Position}\n     */\n\n    this.end = end ? end.clone() : start.clone();\n  }\n  /**\n   * Iterable interface.\n   *\n   * Iterates over all {@link module:engine/view/item~Item view items} that are in this range and returns\n   * them together with additional information like length or {@link module:engine/view/position~Position positions},\n   * grouped as {@link module:engine/view/treewalker~TreeWalkerValue}.\n   *\n   * This iterator uses {@link module:engine/view/treewalker~TreeWalker TreeWalker} with `boundaries` set to this range and\n   * `ignoreElementEnd` option\n   * set to `true`.\n   *\n   * @returns {Iterable.<module:engine/view/treewalker~TreeWalkerValue>}\n   */\n\n\n  _createClass(Range, [{\n    key: Symbol.iterator,\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function value() {\n      return regeneratorRuntime.wrap(function value$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.delegateYield(new TreeWalker({\n                boundaries: this,\n                ignoreElementEnd: true\n              }), \"t0\", 1);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, value, this);\n    })\n    /**\n     * Returns whether the range is collapsed, that is it start and end positions are equal.\n     *\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"getEnlarged\",\n\n    /**\n     * Creates a maximal range that has the same content as this range but is expanded in both ways (at the beginning\n     * and at the end).\n     *\n     * For example:\n     *\n     *\t\t<p>Foo</p><p><b>{Bar}</b></p> -> <p>Foo</p>[<p><b>Bar</b>]</p>\n     *\t\t<p><b>foo</b>{bar}<span></span></p> -> <p><b>foo[</b>bar<span></span>]</p>\n     *\n     * Note that in the sample above:\n     *\n     * - `<p>` have type of {@link module:engine/view/containerelement~ContainerElement},\n     * - `<b>` have type of {@link module:engine/view/attributeelement~AttributeElement},\n     * - `<span>` have type of {@link module:engine/view/uielement~UIElement}.\n     *\n     * @returns {module:engine/view/range~Range} Enlarged range.\n     */\n    value: function getEnlarged() {\n      var start = this.start.getLastMatchingPosition(enlargeTrimSkip, {\n        direction: 'backward'\n      });\n      var end = this.end.getLastMatchingPosition(enlargeTrimSkip); // Fix positions, in case if they are in Text node.\n\n      if (start.parent.is('text') && start.isAtStart) {\n        start = Position._createBefore(start.parent);\n      }\n\n      if (end.parent.is('text') && end.isAtEnd) {\n        end = Position._createAfter(end.parent);\n      }\n\n      return new Range(start, end);\n    }\n    /**\n     * Creates a minimum range that has the same content as this range but is trimmed in both ways (at the beginning\n     * and at the end).\n     *\n     * For example:\n     *\n     *\t\t<p>Foo</p>[<p><b>Bar</b>]</p> -> <p>Foo</p><p><b>{Bar}</b></p>\n     *\t\t<p><b>foo[</b>bar<span></span>]</p> -> <p><b>foo</b>{bar}<span></span></p>\n     *\n     * Note that in the sample above:\n     *\n     * - `<p>` have type of {@link module:engine/view/containerelement~ContainerElement},\n     * - `<b>` have type of {@link module:engine/view/attributeelement~AttributeElement},\n     * - `<span>` have type of {@link module:engine/view/uielement~UIElement}.\n     *\n     * @returns {module:engine/view/range~Range} Shrink range.\n     */\n\n  }, {\n    key: \"getTrimmed\",\n    value: function getTrimmed() {\n      var start = this.start.getLastMatchingPosition(enlargeTrimSkip);\n\n      if (start.isAfter(this.end) || start.isEqual(this.end)) {\n        return new Range(start, start);\n      }\n\n      var end = this.end.getLastMatchingPosition(enlargeTrimSkip, {\n        direction: 'backward'\n      });\n      var nodeAfterStart = start.nodeAfter;\n      var nodeBeforeEnd = end.nodeBefore; // Because TreeWalker prefers positions next to text node, we need to move them manually into these text nodes.\n\n      if (nodeAfterStart && nodeAfterStart.is('text')) {\n        start = new Position(nodeAfterStart, 0);\n      }\n\n      if (nodeBeforeEnd && nodeBeforeEnd.is('text')) {\n        end = new Position(nodeBeforeEnd, nodeBeforeEnd.data.length);\n      }\n\n      return new Range(start, end);\n    }\n    /**\n     * Two ranges are equal if their start and end positions are equal.\n     *\n     * @param {module:engine/view/range~Range} otherRange Range to compare with.\n     * @returns {Boolean} `true` if ranges are equal, `false` otherwise\n     */\n\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(otherRange) {\n      return this == otherRange || this.start.isEqual(otherRange.start) && this.end.isEqual(otherRange.end);\n    }\n    /**\n     * Checks whether this range contains given {@link module:engine/view/position~Position position}.\n     *\n     * @param {module:engine/view/position~Position} position Position to check.\n     * @returns {Boolean} `true` if given {@link module:engine/view/position~Position position} is contained in this range,\n     * `false` otherwise.\n     */\n\n  }, {\n    key: \"containsPosition\",\n    value: function containsPosition(position) {\n      return position.isAfter(this.start) && position.isBefore(this.end);\n    }\n    /**\n     * Checks whether this range contains given {@link module:engine/view/range~Range range}.\n     *\n     * @param {module:engine/view/range~Range} otherRange Range to check.\n     * @param {Boolean} [loose=false] Whether the check is loose or strict. If the check is strict (`false`), compared range cannot\n     * start or end at the same position as this range boundaries. If the check is loose (`true`), compared range can start, end or\n     * even be equal to this range. Note that collapsed ranges are always compared in strict mode.\n     * @returns {Boolean} `true` if given {@link module:engine/view/range~Range range} boundaries are contained by this range, `false`\n     * otherwise.\n     */\n\n  }, {\n    key: \"containsRange\",\n    value: function containsRange(otherRange) {\n      var loose = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (otherRange.isCollapsed) {\n        loose = false;\n      }\n\n      var containsStart = this.containsPosition(otherRange.start) || loose && this.start.isEqual(otherRange.start);\n      var containsEnd = this.containsPosition(otherRange.end) || loose && this.end.isEqual(otherRange.end);\n      return containsStart && containsEnd;\n    }\n    /**\n     * Computes which part(s) of this {@link module:engine/view/range~Range range} is not a part of given\n     * {@link module:engine/view/range~Range range}.\n     * Returned array contains zero, one or two {@link module:engine/view/range~Range ranges}.\n     *\n     * Examples:\n     *\n     *\t\tlet foo = downcastWriter.createText( 'foo' );\n     *\t\tlet img = downcastWriter.createContainerElement( 'img' );\n     *\t\tlet bar = downcastWriter.createText( 'bar' );\n     *\t\tlet p = downcastWriter.createContainerElement( 'p', null, [ foo, img, bar ] );\n     *\n     *\t\tlet range = view.createRange( view.createPositionAt( foo, 2 ), view.createPositionAt( bar, 1 ); // \"o\", img, \"b\" are in range.\n     *\t\tlet otherRange = view.createRange( // \"oo\", img, \"ba\" are in range.\n     *\t\t\tview.createPositionAt( foo, 1 ),\n     *\t\t\tview.createPositionAt( bar, 2 )\n     *\t\t);\n     *\t\tlet transformed = range.getDifference( otherRange );\n     *\t\t// transformed array has no ranges because `otherRange` contains `range`\n     *\n     *\t\totherRange = view.createRange( view.createPositionAt( foo, 1 ), view.createPositionAt( p, 2 ); // \"oo\", img are in range.\n     *\t\ttransformed = range.getDifference( otherRange );\n     *\t\t// transformed array has one range: from ( p, 2 ) to ( bar, 1 )\n     *\n     *\t\totherRange = view.createRange( view.createPositionAt( p, 1 ), view.createPositionAt( p, 2 ) ); // img is in range.\n     *\t\ttransformed = range.getDifference( otherRange );\n     *\t\t// transformed array has two ranges: from ( foo, 1 ) to ( p, 1 ) and from ( p, 2 ) to ( bar, 1 )\n     *\n     * @param {module:engine/view/range~Range} otherRange Range to differentiate against.\n     * @returns {Array.<module:engine/view/range~Range>} The difference between ranges.\n     */\n\n  }, {\n    key: \"getDifference\",\n    value: function getDifference(otherRange) {\n      var ranges = [];\n\n      if (this.isIntersecting(otherRange)) {\n        // Ranges intersect.\n        if (this.containsPosition(otherRange.start)) {\n          // Given range start is inside this range. This means that we have to\n          // add shrunken range - from the start to the middle of this range.\n          ranges.push(new Range(this.start, otherRange.start));\n        }\n\n        if (this.containsPosition(otherRange.end)) {\n          // Given range end is inside this range. This means that we have to\n          // add shrunken range - from the middle of this range to the end.\n          ranges.push(new Range(otherRange.end, this.end));\n        }\n      } else {\n        // Ranges do not intersect, return the original range.\n        ranges.push(this.clone());\n      }\n\n      return ranges;\n    }\n    /**\n     * Returns an intersection of this {@link module:engine/view/range~Range range} and given {@link module:engine/view/range~Range range}.\n     * Intersection is a common part of both of those ranges. If ranges has no common part, returns `null`.\n     *\n     * Examples:\n     *\n     *\t\tlet foo = downcastWriter.createText( 'foo' );\n     *\t\tlet img = downcastWriter.createContainerElement( 'img' );\n     *\t\tlet bar = downcastWriter.createText( 'bar' );\n     *\t\tlet p = downcastWriter.createContainerElement( 'p', null, [ foo, img, bar ] );\n     *\n     *\t\tlet range = view.createRange( view.createPositionAt( foo, 2 ), view.createPositionAt( bar, 1 ); // \"o\", img, \"b\" are in range.\n     *\t\tlet otherRange = view.createRange( view.createPositionAt( foo, 1 ), view.createPositionAt( p, 2 ); // \"oo\", img are in range.\n     *\t\tlet transformed = range.getIntersection( otherRange ); // range from ( foo, 1 ) to ( p, 2 ).\n     *\n     *\t\totherRange = view.createRange( view.createPositionAt( bar, 1 ), view.createPositionAt( bar, 3 ); \"ar\" is in range.\n     *\t\ttransformed = range.getIntersection( otherRange ); // null - no common part.\n     *\n     * @param {module:engine/view/range~Range} otherRange Range to check for intersection.\n     * @returns {module:engine/view/range~Range|null} A common part of given ranges or `null` if ranges have no common part.\n     */\n\n  }, {\n    key: \"getIntersection\",\n    value: function getIntersection(otherRange) {\n      if (this.isIntersecting(otherRange)) {\n        // Ranges intersect, so a common range will be returned.\n        // At most, it will be same as this range.\n        var commonRangeStart = this.start;\n        var commonRangeEnd = this.end;\n\n        if (this.containsPosition(otherRange.start)) {\n          // Given range start is inside this range. This means thaNt we have to\n          // shrink common range to the given range start.\n          commonRangeStart = otherRange.start;\n        }\n\n        if (this.containsPosition(otherRange.end)) {\n          // Given range end is inside this range. This means that we have to\n          // shrink common range to the given range end.\n          commonRangeEnd = otherRange.end;\n        }\n\n        return new Range(commonRangeStart, commonRangeEnd);\n      } // Ranges do not intersect, so they do not have common part.\n\n\n      return null;\n    }\n    /**\n     * Creates a {@link module:engine/view/treewalker~TreeWalker TreeWalker} instance with this range as a boundary.\n     *\n     * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}.\n     * @param {module:engine/view/position~Position} [options.startPosition]\n     * @param {Boolean} [options.singleCharacters=false]\n     * @param {Boolean} [options.shallow=false]\n     * @param {Boolean} [options.ignoreElementEnd=false]\n     * @returns {module:engine/view/treewalker~TreeWalker}\n     */\n\n  }, {\n    key: \"getWalker\",\n    value: function getWalker() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      options.boundaries = this;\n      return new TreeWalker(options);\n    }\n    /**\n     * Returns a {@link module:engine/view/node~Node} or {@link module:engine/view/documentfragment~DocumentFragment}\n     * which is a common ancestor of range's both ends (in which the entire range is contained).\n     *\n     * @returns {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment|null}\n     */\n\n  }, {\n    key: \"getCommonAncestor\",\n    value: function getCommonAncestor() {\n      return this.start.getCommonAncestor(this.end);\n    }\n    /**\n     * Clones this range.\n     *\n     * @returns {module:engine/view/range~Range}\n     */\n\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new Range(this.start, this.end);\n    }\n    /**\n     * Returns an iterator that iterates over all {@link module:engine/view/item~Item view items} that are in this range and returns\n     * them.\n     *\n     * This method uses {@link module:engine/view/treewalker~TreeWalker} with `boundaries` set to this range and `ignoreElementEnd` option\n     * set to `true`. However it returns only {@link module:engine/view/item~Item items},\n     * not {@link module:engine/view/treewalker~TreeWalkerValue}.\n     *\n     * You may specify additional options for the tree walker. See {@link module:engine/view/treewalker~TreeWalker} for\n     * a full list of available options.\n     *\n     * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}.\n     * @returns {Iterable.<module:engine/view/item~Item>}\n     */\n\n  }, {\n    key: \"getItems\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function getItems() {\n      var options,\n          treeWalker,\n          _iteratorNormalCompletion,\n          _didIteratorError,\n          _iteratorError,\n          _iterator,\n          _step,\n          _value,\n          _args2 = arguments;\n\n      return regeneratorRuntime.wrap(function getItems$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              options = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {};\n              options.boundaries = this;\n              options.ignoreElementEnd = true;\n              treeWalker = new TreeWalker(options);\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _iteratorError = undefined;\n              _context2.prev = 7;\n              _iterator = treeWalker[Symbol.iterator]();\n\n            case 9:\n              if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                _context2.next = 16;\n                break;\n              }\n\n              _value = _step.value;\n              _context2.next = 13;\n              return _value.item;\n\n            case 13:\n              _iteratorNormalCompletion = true;\n              _context2.next = 9;\n              break;\n\n            case 16:\n              _context2.next = 22;\n              break;\n\n            case 18:\n              _context2.prev = 18;\n              _context2.t0 = _context2[\"catch\"](7);\n              _didIteratorError = true;\n              _iteratorError = _context2.t0;\n\n            case 22:\n              _context2.prev = 22;\n              _context2.prev = 23;\n\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n\n            case 25:\n              _context2.prev = 25;\n\n              if (!_didIteratorError) {\n                _context2.next = 28;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 28:\n              return _context2.finish(25);\n\n            case 29:\n              return _context2.finish(22);\n\n            case 30:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, getItems, this, [[7, 18, 22, 30], [23,, 25, 29]]);\n    })\n    /**\n     * Returns an iterator that iterates over all {@link module:engine/view/position~Position positions} that are boundaries or\n     * contained in this range.\n     *\n     * This method uses {@link module:engine/view/treewalker~TreeWalker} with `boundaries` set to this range. However it returns only\n     * {@link module:engine/view/position~Position positions}, not {@link module:engine/view/treewalker~TreeWalkerValue}.\n     *\n     * You may specify additional options for the tree walker. See {@link module:engine/view/treewalker~TreeWalker} for\n     * a full list of available options.\n     *\n     * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}.\n     * @returns {Iterable.<module:engine/view/position~Position>}\n     */\n\n  }, {\n    key: \"getPositions\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function getPositions() {\n      var options,\n          treeWalker,\n          _iteratorNormalCompletion2,\n          _didIteratorError2,\n          _iteratorError2,\n          _iterator2,\n          _step2,\n          _value2,\n          _args3 = arguments;\n\n      return regeneratorRuntime.wrap(function getPositions$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              options = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : {};\n              options.boundaries = this;\n              treeWalker = new TreeWalker(options);\n              _context3.next = 5;\n              return treeWalker.position;\n\n            case 5:\n              _iteratorNormalCompletion2 = true;\n              _didIteratorError2 = false;\n              _iteratorError2 = undefined;\n              _context3.prev = 8;\n              _iterator2 = treeWalker[Symbol.iterator]();\n\n            case 10:\n              if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {\n                _context3.next = 17;\n                break;\n              }\n\n              _value2 = _step2.value;\n              _context3.next = 14;\n              return _value2.nextPosition;\n\n            case 14:\n              _iteratorNormalCompletion2 = true;\n              _context3.next = 10;\n              break;\n\n            case 17:\n              _context3.next = 23;\n              break;\n\n            case 19:\n              _context3.prev = 19;\n              _context3.t0 = _context3[\"catch\"](8);\n              _didIteratorError2 = true;\n              _iteratorError2 = _context3.t0;\n\n            case 23:\n              _context3.prev = 23;\n              _context3.prev = 24;\n\n              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                _iterator2.return();\n              }\n\n            case 26:\n              _context3.prev = 26;\n\n              if (!_didIteratorError2) {\n                _context3.next = 29;\n                break;\n              }\n\n              throw _iteratorError2;\n\n            case 29:\n              return _context3.finish(26);\n\n            case 30:\n              return _context3.finish(23);\n\n            case 31:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, getPositions, this, [[8, 19, 23, 31], [24,, 26, 30]]);\n    })\n    /**\n     * Checks and returns whether this range intersects with the given range.\n     *\n     * @param {module:engine/view/range~Range} otherRange Range to compare with.\n     * @returns {Boolean} True if ranges intersect.\n     */\n\n  }, {\n    key: \"isIntersecting\",\n    value: function isIntersecting(otherRange) {\n      return this.start.isBefore(otherRange.end) && this.end.isAfter(otherRange.start);\n    }\n    /**\n     * Creates a range from the given parents and offsets.\n     *\n     * @protected\n     * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} startElement Start position\n     * parent element.\n     * @param {Number} startOffset Start position offset.\n     * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} endElement End position\n     * parent element.\n     * @param {Number} endOffset End position offset.\n     * @returns {module:engine/view/range~Range} Created range.\n     */\n\n  }, {\n    key: \"isCollapsed\",\n    get: function get() {\n      return this.start.isEqual(this.end);\n    }\n    /**\n     * Returns whether this range is flat, that is if {@link module:engine/view/range~Range#start start} position and\n     * {@link module:engine/view/range~Range#end end} position are in the same {@link module:engine/view/position~Position#parent parent}.\n     *\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isFlat\",\n    get: function get() {\n      return this.start.parent === this.end.parent;\n    }\n    /**\n     * Range root element.\n     *\n     * @type {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment}\n     */\n\n  }, {\n    key: \"root\",\n    get: function get() {\n      return this.start.root;\n    }\n  }], [{\n    key: \"_createFromParentsAndOffsets\",\n    value: function _createFromParentsAndOffsets(startElement, startOffset, endElement, endOffset) {\n      return new this(new Position(startElement, startOffset), new Position(endElement, endOffset));\n    }\n    /**\n     * Creates a new range, spreading from specified {@link module:engine/view/position~Position position} to a position moved by\n     * given `shift`. If `shift` is a negative value, shifted position is treated as the beginning of the range.\n     *\n     * @protected\n     * @param {module:engine/view/position~Position} position Beginning of the range.\n     * @param {Number} shift How long the range should be.\n     * @returns {module:engine/view/range~Range}\n     */\n\n  }, {\n    key: \"_createFromPositionAndShift\",\n    value: function _createFromPositionAndShift(position, shift) {\n      var start = position;\n      var end = position.getShiftedBy(shift);\n      return shift > 0 ? new this(start, end) : new this(end, start);\n    }\n    /**\n     * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n     * that element and ends after the last child of that element.\n     *\n     * @protected\n     * @param {module:engine/view/element~Element} element Element which is a parent for the range.\n     * @returns {module:engine/view/range~Range}\n     */\n\n  }, {\n    key: \"_createIn\",\n    value: function _createIn(element) {\n      return this._createFromParentsAndOffsets(element, 0, element, element.childCount);\n    }\n    /**\n     * Creates a range that starts before given {@link module:engine/view/item~Item view item} and ends after it.\n     *\n     * @protected\n     * @param {module:engine/view/item~Item} item\n     * @returns {module:engine/view/range~Range}\n     */\n\n  }, {\n    key: \"_createOn\",\n    value: function _createOn(item) {\n      var size = item.is('textProxy') ? item.offsetSize : 1;\n      return this._createFromPositionAndShift(Position._createBefore(item), size);\n    }\n  }]);\n\n  return Range;\n}(); // Function used by getEnlarged and getTrimmed methods.\n\n\nexport { Range as default };\n\nfunction enlargeTrimSkip(value) {\n  if (value.item.is('attributeElement') || value.item.is('uiElement')) {\n    return true;\n  }\n\n  return false;\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/view\n */\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport ViewCollection from './viewcollection';\nimport Template from './template';\nimport DomEmitterMixin from '@ckeditor/ckeditor5-utils/src/dom/emittermixin';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\nimport '../theme/globals/globals.css';\n/**\n * The basic view class, which represents an HTML element created out of a\n * {@link module:ui/view~View#template}. Views are building blocks of the user interface and handle\n * interaction\n *\n * Views {@link module:ui/view~View#registerChild aggregate} children in\n * {@link module:ui/view~View#createCollection collections} and manage the life cycle of DOM\n * listeners e.g. by handling rendering and destruction.\n *\n * See the {@link module:ui/template~TemplateDefinition} syntax to learn more about shaping view\n * elements, attributes and listeners.\n *\n *\t\tclass SampleView extends View {\n *\t\t\tconstructor( locale ) {\n *\t\t\t\tsuper( locale );\n *\n *\t\t\t\tconst bind = this.bindTemplate;\n *\n *\t\t\t\t// Views define their interface (state) using observable attributes.\n *\t\t\t\tthis.set( 'elementClass', 'bar' );\n *\n *\t\t\t\tthis.setTemplate( {\n *\t\t\t\t\ttag: 'p',\n *\n *\t\t\t\t\t// The element of the view can be defined with its children.\n *\t\t\t\t\tchildren: [\n *\t\t\t\t\t\t'Hello',\n *\t\t\t\t\t\t{\n *\t\t\t\t\t\t\ttag: 'b',\n *\t\t\t\t\t\t\tchildren: [ 'world!' ]\n *\t\t\t\t\t\t}\n *\t\t\t\t\t],\n *\t\t\t\t\tattributes: {\n *\t\t\t\t\t\tclass: [\n *\t\t\t\t\t\t\t'foo',\n *\n *\t\t\t\t\t\t\t// Observable attributes control the state of the view in DOM.\n *\t\t\t\t\t\t\tbind.to( 'elementClass' )\n *\t\t\t\t\t\t]\n *\t\t\t\t\t},\n *\t\t\t\t\ton: {\n *\t\t\t\t\t\t// Views listen to DOM events and propagate them.\n *\t\t\t\t\t\tclick: bind.to( 'clicked' )\n *\t\t\t\t\t}\n *\t\t\t\t} );\n *\t\t\t}\n *\t\t}\n *\n *\t\tconst view = new SampleView( locale );\n *\n *\t\tview.render();\n *\n *\t\t// Append <p class=\"foo bar\">Hello<b>world</b></p> to the <body>\n *\t\tdocument.body.appendChild( view.element );\n *\n *\t\t// Change the class attribute to <p class=\"foo baz\">Hello<b>world</b></p>\n *\t\tview.elementClass = 'baz';\n *\n *\t\t// Respond to the \"click\" event in DOM by executing a custom action.\n *\t\tview.on( 'clicked', () => {\n *\t\t\tconsole.log( 'The view has been clicked!' );\n *\t\t} );\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\n\nvar View =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of the {@link module:ui/view~View} class.\n   *\n   * Also see {@link #render}.\n   *\n   * @param {module:utils/locale~Locale} [locale] The localization services instance.\n   */\n  function View(locale) {\n    _classCallCheck(this, View);\n\n    /**\n     * An HTML element of the view. `null` until {@link #render rendered}\n     * from the {@link #template}.\n     *\n     *\t\tclass SampleView extends View {\n     *\t\t\tconstructor() {\n     *\t\t\t\tsuper();\n     *\n     *\t\t\t\t// A template instance the #element will be created from.\n     *\t\t\t\tthis.setTemplate( {\n     *\t\t\t\t\ttag: 'p'\n     *\n     *\t\t\t\t\t// ...\n     *\t\t\t\t} );\n     *\t\t\t}\n     *\t\t}\n     *\n     *\t\tconst view = new SampleView();\n     *\n     *\t\t// Renders the #template.\n     *\t\tview.render();\n     *\n     *\t\t// Append the HTML element of the view to <body>.\n     *\t\tdocument.body.appendChild( view.element );\n     *\n     * **Note**: The element of the view can also be assigned directly:\n     *\n     *\t\tview.element = document.querySelector( '#my-container' );\n     *\n     * @member {HTMLElement}\n     */\n    this.element = null;\n    /**\n     * Set `true` when the view has already been {@link module:ui/view~View#render rendered}.\n     *\n     * @readonly\n     * @member {Boolean} #isRendered\n     */\n\n    this.isRendered = false;\n    /**\n     * A set of tools to localize the user interface.\n     *\n     * Also see {@link module:core/editor/editor~Editor#locale}.\n     *\n     * @readonly\n     * @member {module:utils/locale~Locale}\n     */\n\n    this.locale = locale;\n    /**\n     * Shorthand for {@link module:utils/locale~Locale#t}.\n     *\n     * Note: If {@link #locale} instance hasn't been passed to the view this method may not\n     * be available.\n     *\n     * @see module:utils/locale~Locale#t\n     * @method\n     */\n\n    this.t = locale && locale.t;\n    /**\n     * Collections registered with {@link #createCollection}.\n     *\n     * @protected\n     * @member {Set.<module:ui/viewcollection~ViewCollection>}\n     */\n\n    this._viewCollections = new Collection();\n    /**\n     * A collection of view instances, which have been added directly\n     * into the {@link module:ui/template~Template#children}.\n     *\n     * @protected\n     * @member {module:ui/viewcollection~ViewCollection}\n     */\n\n    this._unboundChildren = this.createCollection(); // Pass parent locale to its children.\n\n    this._viewCollections.on('add', function (evt, collection) {\n      collection.locale = locale;\n    });\n    /**\n     * Template of this view. It provides the {@link #element} representing\n     * the view in DOM, which is {@link #render rendered}.\n     *\n     * @member {module:ui/template~Template} #template\n     */\n\n    /**\n     * Cached {@link module:ui/template~BindChain bind chain} object created by the\n     * {@link #template}. See {@link #bindTemplate}.\n     *\n     * @private\n     * @member {Object} #_bindTemplate\n     */\n\n\n    this.decorate('render');\n  }\n  /**\n   * Shorthand for {@link module:ui/template~Template.bind}, a binding\n   * {@link module:ui/template~BindChain interface} pre–configured for the view instance.\n   *\n   * It provides {@link module:ui/template~BindChain#to `to()`} and\n   * {@link module:ui/template~BindChain#if `if()`} methods that initialize bindings with\n   * observable attributes and attach DOM listeners.\n   *\n   *\t\tclass SampleView extends View {\n   *\t\t\tconstructor( locale ) {\n   *\t\t\t\tsuper( locale );\n   *\n   *\t\t\t\tconst bind = this.bindTemplate;\n   *\n   *\t\t\t\t// These {@link module:utils/observablemixin~Observable observable} attributes will control\n   *\t\t\t\t// the state of the view in DOM.\n   *\t\t\t\tthis.set( {\n   *\t\t\t\t\telementClass: 'foo',\n   *\t\t\t\t \tisEnabled: true\n   *\t\t\t\t } );\n   *\n   *\t\t\t\tthis.setTemplate( {\n   *\t\t\t\t\ttag: 'p',\n   *\n   *\t\t\t\t\tattributes: {\n   *\t\t\t\t\t\t// The class HTML attribute will follow elementClass\n   *\t\t\t\t\t\t// and isEnabled view attributes.\n   *\t\t\t\t\t\tclass: [\n   *\t\t\t\t\t\t\tbind.to( 'elementClass' )\n   *\t\t\t\t\t\t\tbind.if( 'isEnabled', 'present-when-enabled' )\n   *\t\t\t\t\t\t]\n   *\t\t\t\t\t},\n   *\n   *\t\t\t\t\ton: {\n   *\t\t\t\t\t\t// The view will fire the \"clicked\" event upon clicking <p> in DOM.\n   *\t\t\t\t\t\tclick: bind.to( 'clicked' )\n   *\t\t\t\t\t}\n   *\t\t\t\t} );\n   *\t\t\t}\n   *\t\t}\n   *\n   * @method #bindTemplate\n   */\n\n\n  _createClass(View, [{\n    key: \"createCollection\",\n\n    /**\n     * Creates a new collection of views, which can be used as\n     * {@link module:ui/template~Template#children} of this view.\n     *\n     *\t\tclass SampleView extends View {\n     *\t\t\tconstructor( locale ) {\n     *\t\t\t\tsuper( locale );\n     *\n     *\t\t\t\tthis.items = this.createCollection();\n    \t *\n     *\t\t\t\tthis.setTemplate( {\n     *\t\t\t\t\ttag: 'p',\n     *\n     *\t\t\t\t\t// `items` collection will render here.\n     *\t\t\t\t\tchildren: this.items\n     *\t\t\t\t} );\n     *\t\t\t}\n     *\t\t}\n     *\n     *\t\tconst view = new SampleView( locale );\n     *\t\tconst child = new ChildView( locale );\n     *\n     *\t\tview.render();\n     *\n     *\t\t// It will append <p></p> to the <body>.\n     *\t\tdocument.body.appendChild( view.element );\n     *\n     *\t\t// From now on the child is nested under its parent, which is also reflected in DOM.\n     *\t\t// <p><child#element></p>\n     *\t\tview.items.add( child );\n     *\n     * @returns {module:ui/viewcollection~ViewCollection} A new collection of view instances.\n     */\n    value: function createCollection() {\n      var collection = new ViewCollection();\n\n      this._viewCollections.add(collection);\n\n      return collection;\n    }\n    /**\n     * Registers a new child view under the view instance. Once registered, a child\n     * view is managed by its parent, including {@link #render rendering}\n     * and {@link #destroy destruction}.\n     *\n     * To revert this, use {@link #deregisterChild}.\n     *\n     *\t\tclass SampleView extends View {\n     *\t\t\tconstructor( locale ) {\n     *\t\t\t\tsuper( locale );\n     *\n     *\t\t\t\tthis.childA = new SomeChildView( locale );\n     *\t\t\t\tthis.childB = new SomeChildView( locale );\n     *\n     *\t\t\t\tthis.setTemplate( { tag: 'p' } );\n     *\n     *\t\t\t\t// Register the children.\n     *\t\t\t\tthis.registerChild( [ this.childA, this.childB ] );\n     *\t\t\t}\n     *\n     *\t\t\trender() {\n     *\t\t\t\tsuper.render();\n     *\n     *\t\t\t\tthis.element.appendChild( this.childA.element );\n     *\t\t\t\tthis.element.appendChild( this.childB.element );\n     *\t\t\t}\n     *\t\t}\n     *\n     *\t\tconst view = new SampleView( locale );\n     *\n     *\t\tview.render();\n     *\n     *\t\t// Will append <p><childA#element><b></b><childB#element></p>.\n     *\t\tdocument.body.appendChild( view.element );\n     *\n     * **Note**: There's no need to add child views if they're already referenced in the\n     * {@link #template}:\n     *\n     *\t\tclass SampleView extends View {\n     *\t\t\tconstructor( locale ) {\n     *\t\t\t\tsuper( locale );\n     *\n     *\t\t\t\tthis.childA = new SomeChildView( locale );\n     *\t\t\t\tthis.childB = new SomeChildView( locale );\n     *\n     *\t\t\t\tthis.setTemplate( {\n     *\t\t\t\t\ttag: 'p',\n     *\n    \t *\t\t\t\t\t// These children will be added automatically. There's no\n    \t *\t\t\t\t\t// need to call {@link #registerChild} for any of them.\n     *\t\t\t\t\tchildren: [ this.childA, this.childB ]\n     *\t\t\t\t} );\n     *\t\t\t}\n     *\n     *\t\t\t// ...\n     *\t\t}\n     *\n     * @param {module:ui/view~View|Iterable.<module:ui/view~View>} children Children views to be registered.\n     */\n\n  }, {\n    key: \"registerChild\",\n    value: function registerChild(children) {\n      if (!isIterable(children)) {\n        children = [children];\n      }\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var child = _step.value;\n\n          this._unboundChildren.add(child);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n    /**\n     * The opposite of {@link #registerChild}. Removes a child view from this view instance.\n     * Once removed, the child is no longer managed by its parent, e.g. it can safely\n     * become a child of another parent view.\n     *\n     * @see #registerChild\n     * @param {module:ui/view~View|Iterable.<module:ui/view~View>} children Child views to be removed.\n     */\n\n  }, {\n    key: \"deregisterChild\",\n    value: function deregisterChild(children) {\n      if (!isIterable(children)) {\n        children = [children];\n      }\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = children[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var child = _step2.value;\n\n          this._unboundChildren.remove(child);\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n    /**\n     * Sets the {@link #template} of the view with with given definition.\n     *\n     * A shorthand for:\n     *\n     *\t\tview.setTemplate( definition );\n     *\n     * @param {module:ui/template~TemplateDefinition} definition Definition of view's template.\n     */\n\n  }, {\n    key: \"setTemplate\",\n    value: function setTemplate(definition) {\n      this.template = new Template(definition);\n    }\n    /**\n     * {@link module:ui/template~Template.extend Extends} the {@link #template} of the view with\n     * with given definition.\n     *\n     * A shorthand for:\n     *\n     *\t\tTemplate.extend( view.template, definition );\n     *\n     * **Note**: Is requires the {@link #template} to be already set. See {@link #setTemplate}.\n     *\n     * @param {module:ui/template~TemplateDefinition} definition Definition which\n     * extends the {@link #template}.\n     */\n\n  }, {\n    key: \"extendTemplate\",\n    value: function extendTemplate(definition) {\n      Template.extend(this.template, definition);\n    }\n    /**\n     * Recursively renders the view.\n     *\n     * Once the view is rendered:\n     * * the {@link #element} becomes an HTML element out of {@link #template},\n     * * the {@link #isRendered} flag is set `true`.\n     *\n     * **Note**: The children of the view:\n     * * defined directly in the {@link #template}\n     * * residing in collections created by the {@link #createCollection} method,\n     * * and added by {@link #registerChild}\n     * are also rendered in the process.\n     *\n     * In general, `render()` method is the right place to keep the code which refers to the\n     * {@link #element} and should be executed at the very beginning of the view's life cycle.\n     *\n     * It is possible to {@link module:ui/template~Template.extend} the {@link #template} before\n     * the view is rendered. To allow an early customization of the view (e.g. by its parent),\n     * such references should be done in `render()`.\n     *\n     *\t\tclass SampleView extends View {\n     *\t\t\tconstructor() {\n     *\t\t\t\tthis.setTemplate( {\n     *\t\t\t\t\t// ...\n     *\t\t\t\t} );\n     *\t\t\t},\n     *\n     *\t\t\trender() {\n     *\t\t\t\t// View#element becomes available.\n     *\t\t\t\tsuper.render();\n     *\n     *\t\t\t\t// The \"scroll\" listener depends on #element.\n     *\t\t\t\tthis.listenTo( window, 'scroll', () => {\n     *\t\t\t\t\t// A reference to #element would render the #template and make it non-extendable.\n     *\t\t\t\t\tif ( window.scrollY > 0 ) {\n     *\t\t\t\t\t\tthis.element.scrollLeft = 100;\n     *\t\t\t\t\t} else {\n     *\t\t\t\t\t\tthis.element.scrollLeft = 0;\n     *\t\t\t\t\t}\n     *\t\t\t\t} );\n     *\t\t\t}\n     *\t\t}\n     *\n     *\t\tconst view = new SampleView();\n     *\n     *\t\t// Let's customize the view before it gets rendered.\n     *\t\tview.extendTemplate( {\n     *\t\t\tattributes: {\n     *\t\t\t\tclass: [\n     *\t\t\t\t\t'additional-class'\n     *\t\t\t\t]\n     *\t\t\t}\n     *\t\t} );\n     *\n     *\t\t// Late rendering allows customization of the view.\n     *\t\tview.render();\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.isRendered) {\n        /**\n         * This View has already been rendered.\n         *\n         * @error ui-view-render-rendered\n         */\n        throw new CKEditorError('ui-view-render-already-rendered: This View has already been rendered.');\n      } // Render #element of the view.\n\n\n      if (this.template) {\n        this.element = this.template.render(); // Auto–register view children from #template.\n\n        this.registerChild(this.template.getViews());\n      }\n\n      this.isRendered = true;\n    }\n    /**\n     * Recursively destroys the view instance and child views added by {@link #registerChild} and\n     * residing in collections created by the {@link #createCollection}.\n     *\n     * Destruction disables all event listeners:\n     * * created on the view, e.g. `view.on( 'event', () => {} )`,\n     * * defined in the {@link #template} for DOM events.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.stopListening();\n\n      this._viewCollections.map(function (c) {\n        return c.destroy();\n      });\n    }\n    /**\n     * Event fired by the {@link #render} method. Actual rendering is executed as a listener to\n     * this event with the default priority.\n     *\n     * See {@link module:utils/observablemixin~ObservableMixin.decorate} for more information and samples.\n     *\n     * @event render\n     */\n\n  }, {\n    key: \"bindTemplate\",\n    get: function get() {\n      if (this._bindTemplate) {\n        return this._bindTemplate;\n      }\n\n      return this._bindTemplate = Template.bind(this, this);\n    }\n  }]);\n\n  return View;\n}();\n\nexport { View as default };\nmix(View, DomEmitterMixin);\nmix(View, ObservableMixin);","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/spy\n */\n\n/**\n * Creates a spy function (ala Sinon.js) that can be used to inspect call to it.\n *\n * The following are the present features:\n *\n * * spy.called: property set to `true` if the function has been called at least once.\n *\n * @returns {Function} The spy function.\n */\nfunction spy() {\n  return function spy() {\n    spy.called = true;\n  };\n}\n\nexport default spy;","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/eventinfo\n */\nimport spy from './spy';\n/**\n * The event object passed to event callbacks. It is used to provide information about the event as well as a tool to\n * manipulate it.\n */\n\nvar EventInfo =\n/**\n * @param {Object} source The emitter.\n * @param {String} name The event name.\n */\nfunction EventInfo(source, name) {\n  _classCallCheck(this, EventInfo);\n\n  /**\n   * The object that fired the event.\n   *\n   * @readonly\n   * @member {Object}\n   */\n  this.source = source;\n  /**\n   * The event name.\n   *\n   * @readonly\n   * @member {String}\n   */\n\n  this.name = name;\n  /**\n   * Path this event has followed. See {@link module:utils/emittermixin~EmitterMixin#delegate}.\n   *\n   * @readonly\n   * @member {Array.<Object>}\n   */\n\n  this.path = []; // The following methods are defined in the constructor because they must be re-created per instance.\n\n  /**\n   * Stops the event emitter to call further callbacks for this event interaction.\n   *\n   * @method #stop\n   */\n\n  this.stop = spy();\n  /**\n   * Removes the current callback from future interactions of this event.\n   *\n   * @method #off\n   */\n\n  this.off = spy();\n  /**\n   * The value which will be returned by {@link module:utils/emittermixin~EmitterMixin#fire}.\n   *\n   * It's `undefined` by default and can be changed by an event listener:\n   *\n   *\t\tdataController.fire( 'getSelectedContent', ( evt ) => {\n   *\t\t\t// This listener will make `dataController.fire( 'getSelectedContent' )`\n   *\t\t\t// always return an empty DocumentFragment.\n   *\t\t\tevt.return = new DocumentFragment();\n   *\n   *\t\t\t// Make sure no other listeners are executed.\n   *\t\t\tevt.stop();\n   *\t\t} );\n   *\n   * @member #return\n   */\n};\n\nexport { EventInfo as default };","function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/emittermixin\n */\nimport EventInfo from './eventinfo';\nimport uid from './uid';\nimport priorities from './priorities';\n\nvar _listeningTo = Symbol('listeningTo');\n\nvar _emitterId = Symbol('emitterId');\n/**\n * Mixin that injects the {@link ~Emitter events API} into its host.\n *\n * @mixin EmitterMixin\n * @implements module:utils/emittermixin~Emitter\n */\n\n\nvar EmitterMixin = {\n  /**\n   * @inheritDoc\n   */\n  on: function on(event, callback) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    this.listenTo(this, event, callback, options);\n  },\n\n  /**\n   * @inheritDoc\n   */\n  once: function once(event, callback, options) {\n    var onceCallback = function onceCallback(event) {\n      // Go off() at the first call.\n      event.off(); // Go with the original callback.\n\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      callback.call.apply(callback, [this, event].concat(args));\n    }; // Make a similar on() call, simply replacing the callback.\n\n\n    this.listenTo(this, event, onceCallback, options);\n  },\n\n  /**\n   * @inheritDoc\n   */\n  off: function off(event, callback) {\n    this.stopListening(this, event, callback);\n  },\n\n  /**\n   * @inheritDoc\n   */\n  listenTo: function listenTo(emitter, event, callback) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var emitterInfo, eventCallbacks; // _listeningTo contains a list of emitters that this object is listening to.\n    // This list has the following format:\n    //\n    // _listeningTo: {\n    //     emitterId: {\n    //         emitter: emitter,\n    //         callbacks: {\n    //             event1: [ callback1, callback2, ... ]\n    //             ....\n    //         }\n    //     },\n    //     ...\n    // }\n\n    if (!this[_listeningTo]) {\n      this[_listeningTo] = {};\n    }\n\n    var emitters = this[_listeningTo];\n\n    if (!_getEmitterId(emitter)) {\n      _setEmitterId(emitter);\n    }\n\n    var emitterId = _getEmitterId(emitter);\n\n    if (!(emitterInfo = emitters[emitterId])) {\n      emitterInfo = emitters[emitterId] = {\n        emitter: emitter,\n        callbacks: {}\n      };\n    }\n\n    if (!(eventCallbacks = emitterInfo.callbacks[event])) {\n      eventCallbacks = emitterInfo.callbacks[event] = [];\n    }\n\n    eventCallbacks.push(callback); // Finally register the callback to the event.\n\n    createEventNamespace(emitter, event);\n    var lists = getCallbacksListsForNamespace(emitter, event);\n    var priority = priorities.get(options.priority);\n    var callbackDefinition = {\n      callback: callback,\n      priority: priority\n    }; // Add the callback to all callbacks list.\n\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = lists[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var callbacks = _step.value;\n        // Add the callback to the list in the right priority position.\n        var added = false;\n\n        for (var i = 0; i < callbacks.length; i++) {\n          if (callbacks[i].priority < priority) {\n            callbacks.splice(i, 0, callbackDefinition);\n            added = true;\n            break;\n          }\n        } // Add at the end, if right place was not found.\n\n\n        if (!added) {\n          callbacks.push(callbackDefinition);\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  },\n\n  /**\n   * @inheritDoc\n   */\n  stopListening: function stopListening(emitter, event, callback) {\n    var emitters = this[_listeningTo];\n\n    var emitterId = emitter && _getEmitterId(emitter);\n\n    var emitterInfo = emitters && emitterId && emitters[emitterId];\n    var eventCallbacks = emitterInfo && event && emitterInfo.callbacks[event]; // Stop if nothing has been listened.\n\n    if (!emitters || emitter && !emitterInfo || event && !eventCallbacks) {\n      return;\n    } // All params provided. off() that single callback.\n\n\n    if (callback) {\n      removeCallback(emitter, event, callback);\n    } // Only `emitter` and `event` provided. off() all callbacks for that event.\n    else if (eventCallbacks) {\n        while (callback = eventCallbacks.pop()) {\n          removeCallback(emitter, event, callback);\n        }\n\n        delete emitterInfo.callbacks[event];\n      } // Only `emitter` provided. off() all events for that emitter.\n      else if (emitterInfo) {\n          for (event in emitterInfo.callbacks) {\n            this.stopListening(emitter, event);\n          }\n\n          delete emitters[emitterId];\n        } // No params provided. off() all emitters.\n        else {\n            for (emitterId in emitters) {\n              this.stopListening(emitters[emitterId].emitter);\n            }\n\n            delete this[_listeningTo];\n          }\n  },\n\n  /**\n   * @inheritDoc\n   */\n  fire: function fire(eventOrInfo) {\n    var eventInfo = eventOrInfo instanceof EventInfo ? eventOrInfo : new EventInfo(this, eventOrInfo);\n    var event = eventInfo.name;\n    var callbacks = getCallbacksForEvent(this, event); // Record that the event passed this emitter on its path.\n\n    eventInfo.path.push(this); // Handle event listener callbacks first.\n\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    if (callbacks) {\n      // Arguments passed to each callback.\n      var callbackArgs = [eventInfo].concat(args); // Copying callbacks array is the easiest and most secure way of preventing infinite loops, when event callbacks\n      // are added while processing other callbacks. Previous solution involved adding counters (unique ids) but\n      // failed if callbacks were added to the queue before currently processed callback.\n      // If this proves to be too inefficient, another method is to change `.on()` so callbacks are stored if same\n      // event is currently processed. Then, `.fire()` at the end, would have to add all stored events.\n\n      callbacks = Array.from(callbacks);\n\n      for (var i = 0; i < callbacks.length; i++) {\n        callbacks[i].callback.apply(this, callbackArgs); // Remove the callback from future requests if off() has been called.\n\n        if (eventInfo.off.called) {\n          // Remove the called mark for the next calls.\n          delete eventInfo.off.called;\n          removeCallback(this, event, callbacks[i].callback);\n        } // Do not execute next callbacks if stop() was called.\n\n\n        if (eventInfo.stop.called) {\n          break;\n        }\n      }\n    } // Delegate event to other emitters if needed.\n\n\n    if (this._delegations) {\n      var destinations = this._delegations.get(event);\n\n      var passAllDestinations = this._delegations.get('*');\n\n      if (destinations) {\n        fireDelegatedEvents(destinations, eventInfo, args);\n      }\n\n      if (passAllDestinations) {\n        fireDelegatedEvents(passAllDestinations, eventInfo, args);\n      }\n    }\n\n    return eventInfo.return;\n  },\n\n  /**\n   * @inheritDoc\n   */\n  delegate: function delegate() {\n    var _this = this;\n\n    for (var _len3 = arguments.length, events = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      events[_key3] = arguments[_key3];\n    }\n\n    return {\n      to: function to(emitter, nameOrFunction) {\n        if (!_this._delegations) {\n          _this._delegations = new Map();\n        }\n\n        for (var _i = 0; _i < events.length; _i++) {\n          var eventName = events[_i];\n\n          var destinations = _this._delegations.get(eventName);\n\n          if (!destinations) {\n            _this._delegations.set(eventName, new Map([[emitter, nameOrFunction]]));\n          } else {\n            destinations.set(emitter, nameOrFunction);\n          }\n        }\n      }\n    };\n  },\n\n  /**\n   * @inheritDoc\n   */\n  stopDelegating: function stopDelegating(event, emitter) {\n    if (!this._delegations) {\n      return;\n    }\n\n    if (!event) {\n      this._delegations.clear();\n    } else if (!emitter) {\n      this._delegations.delete(event);\n    } else {\n      var destinations = this._delegations.get(event);\n\n      if (destinations) {\n        destinations.delete(emitter);\n      }\n    }\n  }\n};\nexport default EmitterMixin;\n/**\n * Emitter/listener interface.\n *\n * Can be easily implemented by a class by mixing the {@link module:utils/emittermixin~EmitterMixin} mixin.\n *\n * @interface Emitter\n */\n\n/**\n * Registers a callback function to be executed when an event is fired.\n *\n * Shorthand for {@link #listenTo `this.listenTo( this, event, callback, options )`} (it makes the emitter\n * listen on itself).\n *\n * @method #on\n * @param {String} event The name of the event.\n * @param {Function} callback The function to be called on event.\n * @param {Object} [options={}] Additional options.\n * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of this event callback. The higher\n * the priority value the sooner the callback will be fired. Events having the same priority are called in the\n * order they were added.\n */\n\n/**\n * Registers a callback function to be executed on the next time the event is fired only. This is similar to\n * calling {@link #on} followed by {@link #off} in the callback.\n *\n * @method #once\n * @param {String} event The name of the event.\n * @param {Function} callback The function to be called on event.\n * @param {Object} [options={}] Additional options.\n * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of this event callback. The higher\n * the priority value the sooner the callback will be fired. Events having the same priority are called in the\n * order they were added.\n */\n\n/**\n * Stops executing the callback on the given event.\n * Shorthand for {@link #stopListening `this.stopListening( this, event, callback )`}.\n *\n * @method #off\n * @param {String} event The name of the event.\n * @param {Function} callback The function to stop being called.\n */\n\n/**\n * Registers a callback function to be executed when an event is fired in a specific (emitter) object.\n *\n * Events can be grouped in namespaces using `:`.\n * When namespaced event is fired, it additionally fires all callbacks for that namespace.\n *\n *\t\t// myEmitter.on( ... ) is a shorthand for myEmitter.listenTo( myEmitter, ... ).\n *\t\tmyEmitter.on( 'myGroup', genericCallback );\n *\t\tmyEmitter.on( 'myGroup:myEvent', specificCallback );\n *\n *\t\t// genericCallback is fired.\n *\t\tmyEmitter.fire( 'myGroup' );\n *\t\t// both genericCallback and specificCallback are fired.\n *\t\tmyEmitter.fire( 'myGroup:myEvent' );\n *\t\t// genericCallback is fired even though there are no callbacks for \"foo\".\n *\t\tmyEmitter.fire( 'myGroup:foo' );\n *\n * An event callback can {@link module:utils/eventinfo~EventInfo#stop stop the event} and\n * set the {@link module:utils/eventinfo~EventInfo#return return value} of the {@link #fire} method.\n *\n * @method #listenTo\n * @param {module:utils/emittermixin~Emitter} emitter The object that fires the event.\n * @param {String} event The name of the event.\n * @param {Function} callback The function to be called on event.\n * @param {Object} [options={}] Additional options.\n * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of this event callback. The higher\n * the priority value the sooner the callback will be fired. Events having the same priority are called in the\n * order they were added.\n */\n\n/**\n * Stops listening for events. It can be used at different levels:\n *\n * * To stop listening to a specific callback.\n * * To stop listening to a specific event.\n * * To stop listening to all events fired by a specific object.\n * * To stop listening to all events fired by all objects.\n *\n * @method #stopListening\n * @param {module:utils/emittermixin~Emitter} [emitter] The object to stop listening to. If omitted, stops it for all objects.\n * @param {String} [event] (Requires the `emitter`) The name of the event to stop listening to. If omitted, stops it\n * for all events from `emitter`.\n * @param {Function} [callback] (Requires the `event`) The function to be removed from the call list for the given\n * `event`.\n */\n\n/**\n * Fires an event, executing all callbacks registered for it.\n *\n * The first parameter passed to callbacks is an {@link module:utils/eventinfo~EventInfo} object,\n * followed by the optional `args` provided in the `fire()` method call.\n *\n * @method #fire\n * @param {String|module:utils/eventinfo~EventInfo} eventOrInfo The name of the event or `EventInfo` object if event is delegated.\n * @param {...*} [args] Additional arguments to be passed to the callbacks.\n * @returns {*} By default the method returns `undefined`. However, the return value can be changed by listeners\n * through modification of the {@link module:utils/eventinfo~EventInfo#return `evt.return`}'s property (the event info\n * is the first param of every callback).\n */\n\n/**\n * Delegates selected events to another {@link module:utils/emittermixin~Emitter}. For instance:\n *\n *\t\temitterA.delegate( 'eventX' ).to( emitterB );\n *\t\temitterA.delegate( 'eventX', 'eventY' ).to( emitterC );\n *\n * then `eventX` is delegated (fired by) `emitterB` and `emitterC` along with `data`:\n *\n *\t\temitterA.fire( 'eventX', data );\n *\n * and `eventY` is delegated (fired by) `emitterC` along with `data`:\n *\n *\t\temitterA.fire( 'eventY', data );\n *\n * @method #delegate\n * @param {...String} events Event names that will be delegated to another emitter.\n * @returns {module:utils/emittermixin~EmitterMixinDelegateChain}\n */\n\n/**\n * Stops delegating events. It can be used at different levels:\n *\n * * To stop delegating all events.\n * * To stop delegating a specific event to all emitters.\n * * To stop delegating a specific event to a specific emitter.\n *\n * @method #stopDelegating\n * @param {String} [event] The name of the event to stop delegating. If omitted, stops it all delegations.\n * @param {module:utils/emittermixin~Emitter} [emitter] (requires `event`) The object to stop delegating a particular event to.\n * If omitted, stops delegation of `event` to all emitters.\n */\n\n/**\n * Checks if `listeningEmitter` listens to an emitter with given `listenedToEmitterId` and if so, returns that emitter.\n * If not, returns `null`.\n *\n * @protected\n * @param {module:utils/emittermixin~EmitterMixin} listeningEmitter Emitter that listens.\n * @param {String} listenedToEmitterId Unique emitter id of emitter listened to.\n * @returns {module:utils/emittermixin~EmitterMixin|null}\n */\n\nexport function _getEmitterListenedTo(listeningEmitter, listenedToEmitterId) {\n  if (listeningEmitter[_listeningTo] && listeningEmitter[_listeningTo][listenedToEmitterId]) {\n    return listeningEmitter[_listeningTo][listenedToEmitterId].emitter;\n  }\n\n  return null;\n}\n/**\n * Sets emitter's unique id.\n *\n * **Note:** `_emitterId` can be set only once.\n *\n * @protected\n * @param {module:utils/emittermixin~EmitterMixin} emitter Emitter for which id will be set.\n * @param {String} [id] Unique id to set. If not passed, random unique id will be set.\n */\n\nexport function _setEmitterId(emitter, id) {\n  if (!emitter[_emitterId]) {\n    emitter[_emitterId] = id || uid();\n  }\n}\n/**\n * Returns emitter's unique id.\n *\n * @protected\n * @param {module:utils/emittermixin~EmitterMixin} emitter Emitter which id will be returned.\n */\n\nexport function _getEmitterId(emitter) {\n  return emitter[_emitterId];\n} // Gets the internal `_events` property of the given object.\n// `_events` property store all lists with callbacks for registered event names.\n// If there were no events registered on the object, empty `_events` object is created.\n\nfunction getEvents(source) {\n  if (!source._events) {\n    Object.defineProperty(source, '_events', {\n      value: {}\n    });\n  }\n\n  return source._events;\n} // Creates event node for generic-specific events relation architecture.\n\n\nfunction makeEventNode() {\n  return {\n    callbacks: [],\n    childEvents: []\n  };\n} // Creates an architecture for generic-specific events relation.\n// If needed, creates all events for given eventName, i.e. if the first registered event\n// is foo:bar:abc, it will create foo:bar:abc, foo:bar and foo event and tie them together.\n// It also copies callbacks from more generic events to more specific events when\n// specific events are created.\n\n\nfunction createEventNamespace(source, eventName) {\n  var events = getEvents(source); // First, check if the event we want to add to the structure already exists.\n\n  if (events[eventName]) {\n    // If it exists, we don't have to do anything.\n    return;\n  } // In other case, we have to create the structure for the event.\n  // Note, that we might need to create intermediate events too.\n  // I.e. if foo:bar:abc is being registered and we only have foo in the structure,\n  // we need to also register foo:bar.\n  // Currently processed event name.\n\n\n  var name = eventName; // Name of the event that is a child event for currently processed event.\n\n  var childEventName = null; // Array containing all newly created specific events.\n\n  var newEventNodes = []; // While loop can't check for ':' index because we have to handle generic events too.\n  // In each loop, we truncate event name, going from the most specific name to the generic one.\n  // I.e. foo:bar:abc -> foo:bar -> foo.\n\n  while (name !== '') {\n    if (events[name]) {\n      // If the currently processed event name is already registered, we can be sure\n      // that it already has all the structure created, so we can break the loop here\n      // as no more events need to be registered.\n      break;\n    } // If this event is not yet registered, create a new object for it.\n\n\n    events[name] = makeEventNode(); // Add it to the array with newly created events.\n\n    newEventNodes.push(events[name]); // Add previously processed event name as a child of this event.\n\n    if (childEventName) {\n      events[name].childEvents.push(childEventName);\n    }\n\n    childEventName = name; // If `.lastIndexOf()` returns -1, `.substr()` will return '' which will break the loop.\n\n    name = name.substr(0, name.lastIndexOf(':'));\n  }\n\n  if (name !== '') {\n    // If name is not empty, we found an already registered event that was a parent of the\n    // event we wanted to register.\n    // Copy that event's callbacks to newly registered events.\n    for (var _i2 = 0; _i2 < newEventNodes.length; _i2++) {\n      var node = newEventNodes[_i2];\n      node.callbacks = events[name].callbacks.slice();\n    } // Add last newly created event to the already registered event.\n\n\n    events[name].childEvents.push(childEventName);\n  }\n} // Gets an array containing callbacks list for a given event and it's more specific events.\n// I.e. if given event is foo:bar and there is also foo:bar:abc event registered, this will\n// return callback list of foo:bar and foo:bar:abc (but not foo).\n\n\nfunction getCallbacksListsForNamespace(source, eventName) {\n  var eventNode = getEvents(source)[eventName];\n\n  if (!eventNode) {\n    return [];\n  }\n\n  var callbacksLists = [eventNode.callbacks];\n\n  for (var i = 0; i < eventNode.childEvents.length; i++) {\n    var childCallbacksLists = getCallbacksListsForNamespace(source, eventNode.childEvents[i]);\n    callbacksLists = callbacksLists.concat(childCallbacksLists);\n  }\n\n  return callbacksLists;\n} // Get the list of callbacks for a given event, but only if there any callbacks have been registered.\n// If there are no callbacks registered for given event, it checks if this is a specific event and looks\n// for callbacks for it's more generic version.\n\n\nfunction getCallbacksForEvent(source, eventName) {\n  var event;\n\n  if (!source._events || !(event = source._events[eventName]) || !event.callbacks.length) {\n    // There are no callbacks registered for specified eventName.\n    // But this could be a specific-type event that is in a namespace.\n    if (eventName.indexOf(':') > -1) {\n      // If the eventName is specific, try to find callback lists for more generic event.\n      return getCallbacksForEvent(source, eventName.substr(0, eventName.lastIndexOf(':')));\n    } else {\n      // If this is a top-level generic event, return null;\n      return null;\n    }\n  }\n\n  return event.callbacks;\n} // Fires delegated events for given map of destinations.\n//\n// @private\n// * @param {Map.<utils.Emitter>} destinations A map containing `[ {@link utils.Emitter}, \"event name\" ]` pair destinations.\n// * @param {utils.EventInfo} eventInfo The original event info object.\n// * @param {Array.<*>} fireArgs Arguments the original event was fired with.\n\n\nfunction fireDelegatedEvents(destinations, eventInfo, fireArgs) {\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = destinations[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var _step2$value = _slicedToArray(_step2.value, 2),\n          emitter = _step2$value[0],\n          name = _step2$value[1];\n\n      if (!name) {\n        name = eventInfo.name;\n      } else if (typeof name == 'function') {\n        name = name(eventInfo.name);\n      }\n\n      var delegatedInfo = new EventInfo(eventInfo.source, name);\n      delegatedInfo.path = _toConsumableArray(eventInfo.path);\n      emitter.fire.apply(emitter, [delegatedInfo].concat(_toConsumableArray(fireArgs)));\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n} // Removes callback from emitter for given event.\n//\n// @param {module:utils/emittermixin~Emitter} emitter\n// @param {String} event\n// @param {Function} callback\n\n\nfunction removeCallback(emitter, event, callback) {\n  var lists = getCallbacksListsForNamespace(emitter, event);\n  var _iteratorNormalCompletion3 = true;\n  var _didIteratorError3 = false;\n  var _iteratorError3 = undefined;\n\n  try {\n    for (var _iterator3 = lists[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n      var callbacks = _step3.value;\n\n      for (var i = 0; i < callbacks.length; i++) {\n        if (callbacks[i].callback == callback) {\n          // Remove the callback from the list (fixing the next index).\n          callbacks.splice(i, 1);\n          i--;\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError3 = true;\n    _iteratorError3 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n        _iterator3.return();\n      }\n    } finally {\n      if (_didIteratorError3) {\n        throw _iteratorError3;\n      }\n    }\n  }\n}\n/**\n * The return value of {@link ~EmitterMixin#delegate}.\n *\n * @interface module:utils/emittermixin~EmitterMixinDelegateChain\n */\n\n/**\n * Selects destination for {@link module:utils/emittermixin~EmitterMixin#delegate} events.\n *\n * @method #to\n * @param {module:utils/emittermixin~Emitter} emitter An `EmitterMixin` instance which is the destination for delegated events.\n * @param {String|Function} [nameOrFunction] A custom event name or function which converts the original name string.\n */","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * Set of utils related to keyboard support.\n *\n * @module utils/keyboard\n */\nimport CKEditorError from './ckeditorerror';\nimport env from './env';\nvar macGlyphsToModifiers = {\n  '⌘': 'ctrl',\n  '⇧': 'shift',\n  '⌥': 'alt'\n};\nvar modifiersToMacGlyphs = {\n  'ctrl': '⌘',\n  'shift': '⇧',\n  'alt': '⌥'\n};\n/**\n * Object with `keyName => keyCode` pairs for a set of known keys.\n *\n * Contains:\n *\n * * `a-z`,\n * * `0-9`,\n * * `f1-f12`,\n * * `arrow(left|up|right|bottom)`,\n * * `backspace`, `delete`, `enter`, `esc`, `tab`,\n * * `ctrl`, `cmd`, `shift`, `alt`.\n */\n\nexport var keyCodes = generateKnownKeyCodes();\n/**\n * Converts a key name or a {@link module:utils/keyboard~KeystrokeInfo keystroke info} into a key code.\n *\n * Note: Key names are matched with {@link module:utils/keyboard~keyCodes} in a case-insensitive way.\n *\n * @param {String|module:utils/keyboard~KeystrokeInfo} Key name (see {@link module:utils/keyboard~keyCodes})\n * or a keystroke data object.\n * @returns {Number} Key or keystroke code.\n */\n\nexport function getCode(key) {\n  var keyCode;\n\n  if (typeof key == 'string') {\n    keyCode = keyCodes[key.toLowerCase()];\n\n    if (!keyCode) {\n      /**\n       * Unknown key name. Only key names contained by the {@link module:utils/keyboard~keyCodes} can be used.\n       *\n       * @errror keyboard-unknown-key\n       * @param {String} key\n       */\n      throw new CKEditorError('keyboard-unknown-key: Unknown key name.', {\n        key: key\n      });\n    }\n  } else {\n    keyCode = key.keyCode + (key.altKey ? keyCodes.alt : 0) + (key.ctrlKey ? keyCodes.ctrl : 0) + (key.shiftKey ? keyCodes.shift : 0);\n  }\n\n  return keyCode;\n}\n/**\n * Parses keystroke and returns a keystroke code that will match the code returned by\n * link {@link module:utils/keyboard.getCode} for a corresponding {@link module:utils/keyboard~KeystrokeInfo keystroke info}.\n *\n * The keystroke can be passed in two formats:\n *\n * * as a single string – e.g. `ctrl + A`,\n * * as an array of {@link module:utils/keyboard~keyCodes known key names} and key codes – e.g.:\n *   * `[ 'ctrl', 32 ]` (ctrl + space),\n *   * `[ 'ctrl', 'a' ]` (ctrl + A).\n *\n * Note: Key names are matched with {@link module:utils/keyboard~keyCodes} in a case-insensitive way.\n *\n * Note: Only keystrokes with a single non-modifier key are supported (e.g. `ctrl+A` is OK, but `ctrl+A+B` is not).\n *\n * @param {String|Array.<Number|String>} keystroke Keystroke definition.\n * @returns {Number} Keystroke code.\n */\n\nexport function parseKeystroke(keystroke) {\n  if (typeof keystroke == 'string') {\n    keystroke = splitKeystrokeText(keystroke);\n  }\n\n  return keystroke.map(function (key) {\n    return typeof key == 'string' ? getCode(key) : key;\n  }).reduce(function (key, sum) {\n    return sum + key;\n  }, 0);\n}\n/**\n * It translates any keystroke string text like `\"CTRL+A\"` to an\n * environment–specific keystroke, i.e. `\"⌘A\"` on Mac OSX.\n *\n * @param {String} keystroke Keystroke text.\n * @returns {String} Keystroke text specific for the environment.\n */\n\nexport function getEnvKeystrokeText(keystroke) {\n  if (!env.isMac) {\n    return keystroke;\n  }\n\n  return splitKeystrokeText(keystroke) // Replace modifiers (e.g. \"ctrl\") with Mac glyphs (e.g. \"⌘\") first.\n  .map(function (key) {\n    return modifiersToMacGlyphs[key.toLowerCase()] || key;\n  }) // Decide whether to put \"+\" between keys in the keystroke or not.\n  .reduce(function (value, key) {\n    if (value.slice(-1) in macGlyphsToModifiers) {\n      return value + key;\n    } else {\n      return value + '+' + key;\n    }\n  });\n}\n\nfunction generateKnownKeyCodes() {\n  var keyCodes = {\n    arrowleft: 37,\n    arrowup: 38,\n    arrowright: 39,\n    arrowdown: 40,\n    backspace: 8,\n    delete: 46,\n    enter: 13,\n    space: 32,\n    esc: 27,\n    tab: 9,\n    // The idea about these numbers is that they do not collide with any real key codes, so we can use them\n    // like bit masks.\n    ctrl: 0x110000,\n    // Has the same code as ctrl, because their behaviour should be unified across the editor.\n    // See http://ckeditor.github.io/editor-recommendations/general-policies#ctrl-vs-cmd\n    cmd: 0x110000,\n    shift: 0x220000,\n    alt: 0x440000\n  }; // a-z\n\n  for (var code = 65; code <= 90; code++) {\n    var letter = String.fromCharCode(code);\n    keyCodes[letter.toLowerCase()] = code;\n  } // 0-9\n\n\n  for (var _code = 48; _code <= 57; _code++) {\n    keyCodes[_code - 48] = _code;\n  } // F1-F12\n\n\n  for (var _code2 = 112; _code2 <= 123; _code2++) {\n    keyCodes['f' + (_code2 - 111)] = _code2;\n  }\n\n  return keyCodes;\n}\n\nfunction splitKeystrokeText(keystroke) {\n  return keystroke.split(/\\s*\\+\\s*/);\n}\n/**\n * Information about a keystroke.\n *\n * @interface module:utils/keyboard~KeystrokeInfo\n */\n\n/**\n * The [key code](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode).\n *\n * @member {Number} module:utils/keyboard~KeystrokeInfo#keyCode\n */\n\n/**\n * Whether the <kbd>Alt</kbd> modifier was pressed.\n *\n * @member {Bolean} module:utils/keyboard~KeystrokeInfo#altKey\n */\n\n/**\n * Whether the <kbd>Ctrl</kbd> or <kbd>Cmd</kbd> modifier was pressed.\n *\n * @member {Bolean} module:utils/keyboard~KeystrokeInfo#ctrlKey\n */\n\n/**\n * Whether the <kbd>Shift</kbd> modifier was pressed.\n *\n * @member {Bolean} module:utils/keyboard~KeystrokeInfo#shiftKey\n */","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module core/command\n */\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n/**\n * The base class for CKEditor commands.\n *\n * Commands are the main way to manipulate editor contents and state. They are mostly used by UI elements (or by other\n * commands) to make changes in the model. Commands are available in every part of code that has access to\n * the {@link module:core/editor/editor~Editor editor} instance.\n *\n * Instances of registered commands can be retrieved from {@link module:core/editor/editor~Editor#commands `editor.commands`}.\n * The easiest way to execute a command is through {@link module:core/editor/editor~Editor#execute `editor.execute()`}.\n *\n * By default commands are disabled when the editor is in {@link module:core/editor/editor~Editor#isReadOnly read-only} mode.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\n\nvar Command =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a new `Command` instance.\n   *\n   * @param {module:core/editor/editor~Editor} editor Editor on which this command will be used.\n   */\n  function Command(editor) {\n    var _this = this;\n\n    _classCallCheck(this, Command);\n\n    /**\n     * The editor on which this command will be used.\n     *\n     * @readonly\n     * @member {module:core/editor/editor~Editor}\n     */\n    this.editor = editor;\n    /**\n     * The value of the command. A concrete command class should define what it represents for it.\n     *\n     * For example, the `'bold'` command's value indicates whether the selection starts in a bolded text.\n     * And the value of the `'link'` command may be an object with links details.\n     *\n     * It is possible for a command to have no value (e.g. for stateless actions such as `'imageUpload'`).\n     *\n     * A concrete command class should control this value by overriding the {@link #refresh `refresh()`} method.\n     *\n     * @observable\n     * @readonly\n     * @member #value\n     */\n\n    this.set('value', undefined);\n    /**\n     * Flag indicating whether a command is enabled or disabled.\n     * A disabled command will do nothing when executed.\n     *\n     * A concrete command class should control this value by overriding the {@link #refresh `refresh()`} method.\n     *\n     * It is possible to disable a command from \"outside\". For instance, in your integration you may want to disable\n     * a certain set of commands for the time being. To do that, you can use the fact that `isEnabled` is observable\n     * and it fires the `set:isEnabled` event every time anyone tries to modify its value:\n     *\n     *\t\tfunction disableCommand( cmd ) {\n     *\t\t\tcmd.on( 'set:isEnabled', forceDisable, { priority: 'highest' } );\n     *\n     *\t\t\tcmd.isEnabled = false;\n     *\n     *\t\t\t// Make it possible to enable the command again.\n     *\t\t\treturn () => {\n     *\t\t\t\tcmd.off( 'set:isEnabled', forceDisable );\n     *\t\t\t\tcmd.refresh();\n     *\t\t\t};\n     *\n     *\t\t\tfunction forceDisable( evt ) {\n     *\t\t\t\tevt.return = false;\n     *\t\t\t\tevt.stop();\n     *\t\t\t}\n     *\t\t}\n     *\n     *\t\t// Usage:\n     *\n     *\t\t// Disabling the command.\n     *\t\tconst enableBold = disableCommand( editor.commands.get( 'bold' ) );\n     *\n     *\t\t// Enabling the command again.\n     *\t\tenableBold();\n     *\n     * @observable\n     * @readonly\n     * @member {Boolean} #isEnabled\n     */\n\n    this.set('isEnabled', false);\n    this.decorate('execute'); // By default every command is refreshed when changes are applied to the model.\n\n    this.listenTo(this.editor.model.document, 'change', function () {\n      _this.refresh();\n    });\n    this.on('execute', function (evt) {\n      if (!_this.isEnabled) {\n        evt.stop();\n      }\n    }, {\n      priority: 'high'\n    }); // By default commands are disabled when the editor is in read-only mode.\n\n    this.listenTo(editor, 'change:isReadOnly', function (evt, name, value) {\n      if (value) {\n        _this.on('set:isEnabled', forceDisable, {\n          priority: 'highest'\n        });\n\n        _this.isEnabled = false;\n      } else {\n        _this.off('set:isEnabled', forceDisable);\n\n        _this.refresh();\n      }\n    });\n  }\n  /**\n   * Refreshes the command. The command should update its {@link #isEnabled} and {@link #value} properties\n   * in this method.\n   *\n   * This method is automatically called when\n   * {@link module:engine/model/document~Document#event:change any changes are applied to the document}.\n   */\n\n\n  _createClass(Command, [{\n    key: \"refresh\",\n    value: function refresh() {\n      this.isEnabled = true;\n    }\n    /**\n     * Executes the command.\n     *\n     * A command may accept parameters. They will be passed from {@link module:core/editor/editor~Editor#execute `editor.execute()`}\n     * to the command.\n     *\n     * The `execute()` method will automatically abort when the command is disabled ({@link #isEnabled} is `false`).\n     * This behavior is implemented by a high priority listener to the {@link #event:execute} event.\n     *\n     * In order to see how to disable a command from \"outside\" see the {@link #isEnabled} documentation.\n     *\n     * @fires execute\n     */\n\n  }, {\n    key: \"execute\",\n    value: function execute() {}\n    /**\n     * Destroys the command.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.stopListening();\n    }\n    /**\n     * Event fired by the {@link #execute} method. The command action is a listener to this event so it's\n     * possible to change/cancel the behavior of the command by listening to this event.\n     *\n     * See {@link module:utils/observablemixin~ObservableMixin.decorate} for more information and samples.\n     *\n     * **Note:** This event is fired even if command is disabled. However, it is automatically blocked\n     * by a high priority listener in order to prevent command execution.\n     *\n     * @event execute\n     */\n\n  }]);\n\n  return Command;\n}();\n\nexport { Command as default };\nmix(Command, ObservableMixin); // Helper function that forces command to be disabled.\n\nfunction forceDisable(evt) {\n  evt.return = false;\n  evt.stop();\n}","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/* globals window */\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\nimport isText from '@ckeditor/ckeditor5-utils/src/dom/istext';\n/**\n * Set of utils related to block and inline fillers handling.\n *\n * Browsers do not allow to put caret in elements which does not have height. Because of it, we need to fill all\n * empty elements which should be selectable with elements or characters called \"fillers\". Unfortunately there is no one\n * universal filler, this is why two types are uses:\n *\n * * Block filler is an element which fill block elements, like `<p>`. CKEditor uses `<br>` as a block filler during the editing,\n * as browsers do natively. So instead of an empty `<p>` there will be `<p><br></p>`. The advantage of block filler is that\n * it is transparent for the selection, so when the caret is before the `<br>` and user presses right arrow he will be\n * moved to the next paragraph, not after the `<br>`. The disadvantage is that it breaks a block, so it can not be used\n * in the middle of a line of text. The {@link module:engine/view/filler~BR_FILLER `<br>` filler} can be replaced with any other\n * character in the data output, for instance {@link module:engine/view/filler~NBSP_FILLER non-breaking space}.\n *\n * * Inline filler is a filler which does not break a line of text, so it can be used inside the text, for instance in the empty\n * `<b>` surrendered by text: `foo<b></b>bar`, if we want to put the caret there. CKEditor uses a sequence of the zero-width\n * spaces as an {@link module:engine/view/filler~INLINE_FILLER inline filler} having the predetermined\n * {@link module:engine/view/filler~INLINE_FILLER_LENGTH length}. A sequence is used, instead of a single character to\n * avoid treating random zero-width spaces as the inline filler. Disadvantage of the inline filler is that it is not\n * transparent for the selection. The arrow key moves the caret between zero-width spaces characters, so the additional\n * code is needed to handle the caret.\n *\n * Both inline and block fillers are handled by the {@link module:engine/view/renderer~Renderer renderer} and are not present in the\n * view.\n *\n * @module engine/view/filler\n */\n\n/**\n * `<br>` filler creator. This is a function which creates `<br data-cke-filler=\"true\">` element.\n * It defines how the filler is created.\n *\n * @see module:engine/view/filler~NBSP_FILLER\n * @function\n */\n\nexport var BR_FILLER = function BR_FILLER(domDocument) {\n  var fillerBr = domDocument.createElement('br');\n  fillerBr.dataset.ckeFiller = true;\n  return fillerBr;\n};\n/**\n * Non-breaking space filler creator. This is a function which creates `&nbsp;` text node.\n * It defines how the filler is created.\n *\n * @see module:engine/view/filler~BR_FILLER\n * @function\n */\n\nexport var NBSP_FILLER = function NBSP_FILLER(domDocument) {\n  return domDocument.createTextNode(\"\\xA0\");\n};\n/**\n * Length of the {@link module:engine/view/filler~INLINE_FILLER INLINE_FILLER}.\n */\n\nexport var INLINE_FILLER_LENGTH = 7;\n/**\n * Inline filler which is sequence of the zero width spaces.\n */\n\nexport var INLINE_FILLER = '';\n\nfor (var i = 0; i < INLINE_FILLER_LENGTH; i++) {\n  INLINE_FILLER += \"\\u200B\";\n}\n/**\n * Checks if the node is a text node which starts with the {@link module:engine/view/filler~INLINE_FILLER inline filler}.\n *\n *\t\tstartsWithFiller( document.createTextNode( INLINE_FILLER ) ); // true\n *\t\tstartsWithFiller( document.createTextNode( INLINE_FILLER + 'foo' ) ); // true\n *\t\tstartsWithFiller( document.createTextNode( 'foo' ) ); // false\n *\t\tstartsWithFiller( document.createElement( 'p' ) ); // false\n *\n * @param {Node} domNode DOM node.\n * @returns {Boolean} True if the text node starts with the {@link module:engine/view/filler~INLINE_FILLER inline filler}.\n */\n\n\nexport function startsWithFiller(domNode) {\n  return isText(domNode) && domNode.data.substr(0, INLINE_FILLER_LENGTH) === INLINE_FILLER;\n}\n/**\n * Checks if the text node contains only the {@link module:engine/view/filler~INLINE_FILLER inline filler}.\n *\n *\t\tisInlineFiller( document.createTextNode( INLINE_FILLER ) ); // true\n *\t\tisInlineFiller( document.createTextNode( INLINE_FILLER + 'foo' ) ); // false\n *\n * @param {Text} domText DOM text node.\n * @returns {Boolean} True if the text node contains only the {@link module:engine/view/filler~INLINE_FILLER inline filler}.\n */\n\nexport function isInlineFiller(domText) {\n  return domText.data.length == INLINE_FILLER_LENGTH && startsWithFiller(domText);\n}\n/**\n * Get string data from the text node, removing an {@link module:engine/view/filler~INLINE_FILLER inline filler} from it,\n * if text node contains it.\n *\n *\t\tgetDataWithoutFiller( document.createTextNode( INLINE_FILLER + 'foo' ) ) == 'foo' // true\n *\t\tgetDataWithoutFiller( document.createTextNode( 'foo' ) ) == 'foo' // true\n *\n * @param {Text} domText DOM text node, possible with inline filler.\n * @returns {String} Data without filler.\n */\n\nexport function getDataWithoutFiller(domText) {\n  if (startsWithFiller(domText)) {\n    return domText.data.slice(INLINE_FILLER_LENGTH);\n  } else {\n    return domText.data;\n  }\n} // Cache block fillers templates to improve performance.\n\nvar templateBlockFillers = new WeakMap();\n/**\n * Checks if the node is an instance of the block filler of the given type.\n *\n *\t\tconst brFillerInstance = BR_FILLER( document );\n *\t\tisBlockFiller( brFillerInstance, BR_FILLER ); // true\n *\n * @param {Node} domNode DOM node to check.\n * @param {Function} blockFiller Block filler creator.\n * @returns {Boolean} True if text node contains only {@link module:engine/view/filler~INLINE_FILLER inline filler}.\n */\n\nexport function isBlockFiller(domNode, blockFiller) {\n  var templateBlockFiller = templateBlockFillers.get(blockFiller);\n\n  if (!templateBlockFiller) {\n    templateBlockFiller = blockFiller(window.document);\n    templateBlockFillers.set(blockFiller, templateBlockFiller);\n  }\n\n  return domNode.isEqualNode(templateBlockFiller);\n}\n/**\n * Assign key observer which move cursor from the end of the inline filler to the beginning of it when\n * the left arrow is pressed, so the filler does not break navigation.\n *\n * @param {module:engine/view/view~View} view View controller instance we should inject quirks handling on.\n */\n\nexport function injectQuirksHandling(view) {\n  view.document.on('keydown', jumpOverInlineFiller);\n} // Move cursor from the end of the inline filler to the beginning of it when, so the filler does not break navigation.\n\nfunction jumpOverInlineFiller(evt, data) {\n  if (data.keyCode == keyCodes.arrowleft) {\n    var domSelection = data.domTarget.ownerDocument.defaultView.getSelection();\n\n    if (domSelection.rangeCount == 1 && domSelection.getRangeAt(0).collapsed) {\n      var domParent = domSelection.getRangeAt(0).startContainer;\n      var domOffset = domSelection.getRangeAt(0).startOffset;\n\n      if (startsWithFiller(domParent) && domOffset <= INLINE_FILLER_LENGTH) {\n        domSelection.collapse(domParent, 0);\n      }\n    }\n  }\n}","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/* global console */\n\n/**\n * @module utils/log\n */\nimport { attachLinkToDocumentation } from './ckeditorerror';\n/**\n * The logging module.\n *\n * This object features two functions that should be used across CKEditor code base to log errors and warnings.\n * Despite being an overridable interface for native `console.*` this module serves also the goal to limit the\n * code size of a minified CKEditor package. During minification process the messages will be shortened and\n * links to their documentation will be logged to the console.\n *\n * All errors and warning should be documented in the following way:\n *\n *\t\t/**\n *\t\t * Error thrown when a plugin cannot be loaded due to JavaScript errors, lack of plugins with a given name, etc.\n *\t\t *\n *\t\t * @error plugin-load\n *\t\t * @param pluginName The name of the plugin that could not be loaded.\n *\t\t * @param moduleName The name of the module which tried to load this plugin.\n *\t\t * /\n *\t\tlog.error( 'plugin-load: It was not possible to load the \"{$pluginName}\" plugin in module \"{$moduleName}', {\n *\t\t\tpluginName: 'foo',\n *\t\t\tmoduleName: 'bar'\n *\t\t} );\n *\n * ### Warning vs Error vs Throw\n *\n * * Whenever a potentially incorrect situation occurs, which does not directly lead to an incorrect behavior,\n * log a warning.\n * * Whenever an incorrect situation occurs, but the app may continue working (although perhaps incorrectly),\n * log an error.\n * * Whenever it's really bad and it does not make sense to continue working, throw a {@link module:utils/ckeditorerror~CKEditorError}.\n *\n * @namespace\n */\n\nvar log = {\n  /**\n   * Logs an error to the console.\n   *\n   * Read more about error logging in the {@link module:utils/log} module.\n   *\n   * @param {String} message The error message in an `error-name: Error message.` format.\n   * During the minification process the \"Error message\" part will be removed to limit the code size\n   * and a link to this error documentation will be logged to the console.\n   * @param {Object} [data] Additional data describing the error.\n   */\n  error: function error(message, data) {\n    console.error(attachLinkToDocumentation(message), data);\n  },\n\n  /**\n   * Logs a warning to the console.\n   *\n   * Read more about error logging in the {@link module:utils/log} module.\n   *\n   * @param {String} message The warning message in a `warning-name: Warning message.` format.\n   * During the minification process the \"Warning message\" part will be removed to limit the code size\n   * and a link to this error documentation will be logged to the console.\n   * @param {Object} [data] Additional data describing the warning.\n   */\n  warn: function warn(message, data) {\n    console.warn(attachLinkToDocumentation(message), data);\n  }\n};\nexport default log;","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/element\n */\nimport Node from './node';\nimport NodeList from './nodelist';\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\n/**\n * Model element. Type of {@link module:engine/model/node~Node node} that has a {@link module:engine/model/element~Element#name name} and\n * {@link module:engine/model/element~Element#getChildren child nodes}.\n *\n * **Important**: see {@link module:engine/model/node~Node} to read about restrictions using `Element` and `Node` API.\n *\n * @extends {module:engine/model/node~Node}\n */\n\nvar Element =\n/*#__PURE__*/\nfunction (_Node) {\n  _inherits(Element, _Node);\n\n  /**\n   * Creates a model element.\n   *\n   * **Note:** Constructor of this class shouldn't be used directly in the code.\n   * Use the {@link module:engine/model/writer~Writer#createElement} method instead.\n   *\n   * @protected\n   * @param {String} name Element's name.\n   * @param {Object} [attrs] Element's attributes. See {@link module:utils/tomap~toMap} for a list of accepted values.\n   * @param {module:engine/model/node~Node|Iterable.<module:engine/model/node~Node>} [children]\n   * One or more nodes to be inserted as children of created element.\n   */\n  function Element(name, attrs, children) {\n    var _this;\n\n    _classCallCheck(this, Element);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Element).call(this, attrs));\n    /**\n     * Element name.\n     *\n     * @readonly\n     * @member {String} module:engine/model/element~Element#name\n     */\n\n    _this.name = name;\n    /**\n     * List of children nodes.\n     *\n     * @private\n     * @member {module:engine/model/nodelist~NodeList} module:engine/model/element~Element#_children\n     */\n\n    _this._children = new NodeList();\n\n    if (children) {\n      _this._insertChild(0, children);\n    }\n\n    return _this;\n  }\n  /**\n   * Number of this element's children.\n   *\n   * @readonly\n   * @type {Number}\n   */\n\n\n  _createClass(Element, [{\n    key: \"is\",\n\n    /**\n     * Checks whether given model tree object is of given type.\n     *\n     *\t\tobj.name; // 'listItem'\n     *\t\tobj instanceof Element; // true\n     *\n     *\t\tobj.is( 'element' ); // true\n     *\t\tobj.is( 'listItem' ); // true\n     *\t\tobj.is( 'element', 'listItem' ); // true\n     *\t\tobj.is( 'text' ); // false\n     *\t\tobj.is( 'element', 'image' ); // false\n     *\n     * Read more in {@link module:engine/model/node~Node#is}.\n     *\n     * @param {String} type Type to check when `name` parameter is present.\n     * Otherwise, it acts like the `name` parameter.\n     * @param {String} [name] Element name.\n     * @returns {Boolean}\n     */\n    value: function is(type) {\n      var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (!name) {\n        return type == 'element' || type == this.name || _get(_getPrototypeOf(Element.prototype), \"is\", this).call(this, type);\n      } else {\n        return type == 'element' && name == this.name;\n      }\n    }\n    /**\n     * Gets the child at the given index.\n     *\n     * @param {Number} index Index of child.\n     * @returns {module:engine/model/node~Node} Child node.\n     */\n\n  }, {\n    key: \"getChild\",\n    value: function getChild(index) {\n      return this._children.getNode(index);\n    }\n    /**\n     * Returns an iterator that iterates over all of this element's children.\n     *\n     * @returns {Iterable.<module:engine/model/node~Node>}\n     */\n\n  }, {\n    key: \"getChildren\",\n    value: function getChildren() {\n      return this._children[Symbol.iterator]();\n    }\n    /**\n     * Returns an index of the given child node. Returns `null` if given node is not a child of this element.\n     *\n     * @param {module:engine/model/node~Node} node Child node to look for.\n     * @returns {Number} Child node's index in this element.\n     */\n\n  }, {\n    key: \"getChildIndex\",\n    value: function getChildIndex(node) {\n      return this._children.getNodeIndex(node);\n    }\n    /**\n     * Returns the starting offset of given child. Starting offset is equal to the sum of\n     * {@link module:engine/model/node~Node#offsetSize offset sizes} of all node's siblings that are before it. Returns `null` if\n     * given node is not a child of this element.\n     *\n     * @param {module:engine/model/node~Node} node Child node to look for.\n     * @returns {Number} Child node's starting offset.\n     */\n\n  }, {\n    key: \"getChildStartOffset\",\n    value: function getChildStartOffset(node) {\n      return this._children.getNodeStartOffset(node);\n    }\n    /**\n     * Returns index of a node that occupies given offset. If given offset is too low, returns `0`. If given offset is\n     * too high, returns {@link module:engine/model/element~Element#getChildIndex index after last child}.\n     *\n     *\t\tconst textNode = new Text( 'foo' );\n     *\t\tconst pElement = new Element( 'p' );\n     *\t\tconst divElement = new Element( [ textNode, pElement ] );\n     *\t\tdivElement.offsetToIndex( -1 ); // Returns 0, because offset is too low.\n     *\t\tdivElement.offsetToIndex( 0 ); // Returns 0, because offset 0 is taken by `textNode` which is at index 0.\n     *\t\tdivElement.offsetToIndex( 1 ); // Returns 0, because `textNode` has `offsetSize` equal to 3, so it occupies offset 1 too.\n     *\t\tdivElement.offsetToIndex( 2 ); // Returns 0.\n     *\t\tdivElement.offsetToIndex( 3 ); // Returns 1.\n     *\t\tdivElement.offsetToIndex( 4 ); // Returns 2. There are no nodes at offset 4, so last available index is returned.\n     *\n     * @param {Number} offset Offset to look for.\n     * @returns {Number}\n     */\n\n  }, {\n    key: \"offsetToIndex\",\n    value: function offsetToIndex(offset) {\n      return this._children.offsetToIndex(offset);\n    }\n    /**\n     * Returns a descendant node by its path relative to this element.\n     *\n     *\t\t// <this>a<b>c</b></this>\n     *\t\tthis.getNodeByPath( [ 0 ] );     // -> \"a\"\n     *\t\tthis.getNodeByPath( [ 1 ] );     // -> <b>\n     *\t\tthis.getNodeByPath( [ 1, 0 ] );  // -> \"c\"\n     *\n     * @param {Array.<Number>} relativePath Path of the node to find, relative to this element.\n     * @returns {module:engine/model/node~Node}\n     */\n\n  }, {\n    key: \"getNodeByPath\",\n    value: function getNodeByPath(relativePath) {\n      var node = this; // eslint-disable-line consistent-this\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = relativePath[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var index = _step.value;\n          node = node.getChild(node.offsetToIndex(index));\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return node;\n    }\n    /**\n     * Converts `Element` instance to plain object and returns it. Takes care of converting all of this element's children.\n     *\n     * @returns {Object} `Element` instance converted to plain object.\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = _get(_getPrototypeOf(Element.prototype), \"toJSON\", this).call(this);\n\n      json.name = this.name;\n\n      if (this._children.length > 0) {\n        json.children = [];\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = this._children[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var node = _step2.value;\n            json.children.push(node.toJSON());\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }\n\n      return json;\n    }\n    /**\n     * Creates a copy of this element and returns it. Created element has the same name and attributes as the original element.\n     * If clone is deep, the original element's children are also cloned. If not, then empty element is removed.\n     *\n     * @protected\n     * @param {Boolean} [deep=false] If set to `true` clones element and all its children recursively. When set to `false`,\n     * element will be cloned without any child.\n     */\n\n  }, {\n    key: \"_clone\",\n    value: function _clone() {\n      var deep = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var children = deep ? Array.from(this._children).map(function (node) {\n        return node._clone(true);\n      }) : null;\n      return new Element(this.name, this.getAttributes(), children);\n    }\n    /**\n     * {@link module:engine/model/element~Element#_insertChild Inserts} one or more nodes at the end of this element.\n     *\n     * @see module:engine/model/writer~Writer#append\n     * @protected\n     * @param {module:engine/model/item~Item|Iterable.<module:engine/model/item~Item>} nodes Nodes to be inserted.\n     */\n\n  }, {\n    key: \"_appendChild\",\n    value: function _appendChild(nodes) {\n      this._insertChild(this.childCount, nodes);\n    }\n    /**\n     * Inserts one or more nodes at the given index and sets {@link module:engine/model/node~Node#parent parent} of these nodes\n     * to this element.\n     *\n     * @see module:engine/model/writer~Writer#insert\n     * @protected\n     * @param {Number} index Index at which nodes should be inserted.\n     * @param {module:engine/model/item~Item|Iterable.<module:engine/model/item~Item>} items Items to be inserted.\n     */\n\n  }, {\n    key: \"_insertChild\",\n    value: function _insertChild(index, items) {\n      var nodes = normalize(items);\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = nodes[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var node = _step3.value;\n\n          // If node that is being added to this element is already inside another element, first remove it from the old parent.\n          if (node.parent !== null) {\n            node._remove();\n          }\n\n          node.parent = this;\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      this._children._insertNodes(index, nodes);\n    }\n    /**\n     * Removes one or more nodes starting at the given index and sets\n     * {@link module:engine/model/node~Node#parent parent} of these nodes to `null`.\n     *\n     * @see module:engine/model/writer~Writer#remove\n     * @protected\n     * @param {Number} index Index of the first node to remove.\n     * @param {Number} [howMany=1] Number of nodes to remove.\n     * @returns {Array.<module:engine/model/node~Node>} Array containing removed nodes.\n     */\n\n  }, {\n    key: \"_removeChildren\",\n    value: function _removeChildren(index) {\n      var howMany = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n      var nodes = this._children._removeNodes(index, howMany);\n\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = nodes[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var node = _step4.value;\n          node.parent = null;\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      return nodes;\n    }\n    /**\n     * Creates an `Element` instance from given plain object (i.e. parsed JSON string).\n     * Converts `Element` children to proper nodes.\n     *\n     * @param {Object} json Plain object to be converted to `Element`.\n     * @returns {module:engine/model/element~Element} `Element` instance created using given plain object.\n     */\n\n  }, {\n    key: \"childCount\",\n    get: function get() {\n      return this._children.length;\n    }\n    /**\n     * Sum of {@link module:engine/model/node~Node#offsetSize offset sizes} of all of this element's children.\n     *\n     * @readonly\n     * @type {Number}\n     */\n\n  }, {\n    key: \"maxOffset\",\n    get: function get() {\n      return this._children.maxOffset;\n    }\n    /**\n     * Is `true` if there are no nodes inside this element, `false` otherwise.\n     *\n     * @readonly\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isEmpty\",\n    get: function get() {\n      return this.childCount === 0;\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      var children = null;\n\n      if (json.children) {\n        children = [];\n        var _iteratorNormalCompletion5 = true;\n        var _didIteratorError5 = false;\n        var _iteratorError5 = undefined;\n\n        try {\n          for (var _iterator5 = json.children[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n            var child = _step5.value;\n\n            if (child.name) {\n              // If child has name property, it is an Element.\n              children.push(Element.fromJSON(child));\n            } else {\n              // Otherwise, it is a Text node.\n              children.push(Text.fromJSON(child));\n            }\n          }\n        } catch (err) {\n          _didIteratorError5 = true;\n          _iteratorError5 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n              _iterator5.return();\n            }\n          } finally {\n            if (_didIteratorError5) {\n              throw _iteratorError5;\n            }\n          }\n        }\n      }\n\n      return new Element(json.name, json.attributes, children);\n    }\n  }]);\n\n  return Element;\n}(Node); // Converts strings to Text and non-iterables to arrays.\n//\n// @param {String|module:engine/model/item~Item|Iterable.<String|module:engine/model/item~Item>}\n// @returns {Iterable.<module:engine/model/node~Node>}\n\n\nexport { Element as default };\n\nfunction normalize(nodes) {\n  // Separate condition because string is iterable.\n  if (typeof nodes == 'string') {\n    return [new Text(nodes)];\n  }\n\n  if (!isIterable(nodes)) {\n    nodes = [nodes];\n  } // Array.from to enable .map() on non-arrays.\n\n\n  return Array.from(nodes).map(function (node) {\n    if (typeof node == 'string') {\n      return new Text(node);\n    }\n\n    if (node instanceof TextProxy) {\n      return new Text(node.data, node.getAttributes());\n    }\n\n    return node;\n  });\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/observablemixin\n */\nimport EmitterMixin from './emittermixin';\nimport CKEditorError from './ckeditorerror';\nimport { extend, isObject } from 'lodash-es';\nvar observablePropertiesSymbol = Symbol('observableProperties');\nvar boundObservablesSymbol = Symbol('boundObservables');\nvar boundPropertiesSymbol = Symbol('boundProperties');\n/**\n * Mixin that injects the \"observable properties\" and data binding functionality described in the\n * {@link ~Observable} interface.\n *\n * Read more about the concept of observables in the:\n * * {@glink framework/guides/architecture/core-editor-architecture#event-system-and-observables \"Event system and observables\"}\n * section of the {@glink framework/guides/architecture/core-editor-architecture \"Core editor architecture\"} guide,\n * * {@glink framework/guides/deep-dive/observables \"Observables\" deep dive} guide.\n *\n * @mixin ObservableMixin\n * @mixes module:utils/emittermixin~EmitterMixin\n * @implements module:utils/observablemixin~Observable\n */\n\nvar ObservableMixin = {\n  /**\n   * @inheritDoc\n   */\n  set: function set(name, value) {\n    var _this = this;\n\n    // If the first parameter is an Object, iterate over its properties.\n    if (isObject(name)) {\n      Object.keys(name).forEach(function (property) {\n        _this.set(property, name[property]);\n      }, this);\n      return;\n    }\n\n    initObservable(this);\n    var properties = this[observablePropertiesSymbol];\n\n    if (name in this && !properties.has(name)) {\n      /**\n       * Cannot override an existing property.\n       *\n       * This error is thrown when trying to {@link ~Observable#set set} an property with\n       * a name of an already existing property. For example:\n       *\n       *\t\tlet observable = new Model();\n       *\t\tobservable.property = 1;\n       *\t\tobservable.set( 'property', 2 );\t\t\t// throws\n       *\n       *\t\tobservable.set( 'property', 1 );\n       *\t\tobservable.set( 'property', 2 );\t\t\t// ok, because this is an existing property.\n       *\n       * @error observable-set-cannot-override\n       */\n      throw new CKEditorError('observable-set-cannot-override: Cannot override an existing property.');\n    }\n\n    Object.defineProperty(this, name, {\n      enumerable: true,\n      configurable: true,\n      get: function get() {\n        return properties.get(name);\n      },\n      set: function set(value) {\n        var oldValue = properties.get(name); // Fire `set` event before the new value will be set to make it possible\n        // to override observable property without affecting `change` event.\n        // See https://github.com/ckeditor/ckeditor5-utils/issues/171.\n\n        var newValue = this.fire('set:' + name, name, value, oldValue);\n\n        if (newValue === undefined) {\n          newValue = value;\n        } // Allow undefined as an initial value like A.define( 'x', undefined ) (#132).\n        // Note: When properties map has no such own property, then its value is undefined.\n\n\n        if (oldValue !== newValue || !properties.has(name)) {\n          properties.set(name, newValue);\n          this.fire('change:' + name, name, newValue, oldValue);\n        }\n      }\n    });\n    this[name] = value;\n  },\n\n  /**\n   * @inheritDoc\n   */\n  bind: function bind() {\n    for (var _len = arguments.length, bindProperties = new Array(_len), _key = 0; _key < _len; _key++) {\n      bindProperties[_key] = arguments[_key];\n    }\n\n    if (!bindProperties.length || !isStringArray(bindProperties)) {\n      /**\n       * All properties must be strings.\n       *\n       * @error observable-bind-wrong-properties\n       */\n      throw new CKEditorError('observable-bind-wrong-properties: All properties must be strings.');\n    }\n\n    if (new Set(bindProperties).size !== bindProperties.length) {\n      /**\n       * Properties must be unique.\n       *\n       * @error observable-bind-duplicate-properties\n       */\n      throw new CKEditorError('observable-bind-duplicate-properties: Properties must be unique.');\n    }\n\n    initObservable(this);\n    var boundProperties = this[boundPropertiesSymbol];\n    bindProperties.forEach(function (propertyName) {\n      if (boundProperties.has(propertyName)) {\n        /**\n         * Cannot bind the same property more that once.\n         *\n         * @error observable-bind-rebind\n         */\n        throw new CKEditorError('observable-bind-rebind: Cannot bind the same property more that once.');\n      }\n    });\n    var bindings = new Map(); // @typedef {Object} Binding\n    // @property {Array} property Property which is bound.\n    // @property {Array} to Array of observable–property components of the binding (`{ observable: ..., property: .. }`).\n    // @property {Array} callback A function which processes `to` components.\n\n    bindProperties.forEach(function (a) {\n      var binding = {\n        property: a,\n        to: []\n      };\n      boundProperties.set(a, binding);\n      bindings.set(a, binding);\n    }); // @typedef {Object} BindChain\n    // @property {Function} to See {@link ~ObservableMixin#_bindTo}.\n    // @property {Function} toMany See {@link ~ObservableMixin#_bindToMany}.\n    // @property {module:utils/observablemixin~Observable} _observable The observable which initializes the binding.\n    // @property {Array} _bindProperties Array of `_observable` properties to be bound.\n    // @property {Array} _to Array of `to()` observable–properties (`{ observable: toObservable, properties: ...toProperties }`).\n    // @property {Map} _bindings Stores bindings to be kept in\n    // {@link ~ObservableMixin#_boundProperties}/{@link ~ObservableMixin#_boundObservables}\n    // initiated in this binding chain.\n\n    return {\n      to: bindTo,\n      toMany: bindToMany,\n      _observable: this,\n      _bindProperties: bindProperties,\n      _to: [],\n      _bindings: bindings\n    };\n  },\n\n  /**\n   * @inheritDoc\n   */\n  unbind: function unbind() {\n    var _this2 = this;\n\n    // Nothing to do here if not inited yet.\n    if (!(observablePropertiesSymbol in this)) {\n      return;\n    }\n\n    var boundProperties = this[boundPropertiesSymbol];\n    var boundObservables = this[boundObservablesSymbol];\n\n    for (var _len2 = arguments.length, unbindProperties = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      unbindProperties[_key2] = arguments[_key2];\n    }\n\n    if (unbindProperties.length) {\n      if (!isStringArray(unbindProperties)) {\n        /**\n         * Properties must be strings.\n         *\n         * @error observable-unbind-wrong-properties\n         */\n        throw new CKEditorError('observable-unbind-wrong-properties: Properties must be strings.');\n      }\n\n      unbindProperties.forEach(function (propertyName) {\n        var binding = boundProperties.get(propertyName); // Nothing to do if the binding is not defined\n\n        if (!binding) {\n          return;\n        }\n\n        var toObservable, toProperty, toProperties, toPropertyBindings;\n        binding.to.forEach(function (to) {\n          // TODO: ES6 destructuring.\n          toObservable = to[0];\n          toProperty = to[1];\n          toProperties = boundObservables.get(toObservable);\n          toPropertyBindings = toProperties[toProperty];\n          toPropertyBindings.delete(binding);\n\n          if (!toPropertyBindings.size) {\n            delete toProperties[toProperty];\n          }\n\n          if (!Object.keys(toProperties).length) {\n            boundObservables.delete(toObservable);\n\n            _this2.stopListening(toObservable, 'change');\n          }\n        });\n        boundProperties.delete(propertyName);\n      });\n    } else {\n      boundObservables.forEach(function (bindings, boundObservable) {\n        _this2.stopListening(boundObservable, 'change');\n      });\n      boundObservables.clear();\n      boundProperties.clear();\n    }\n  },\n\n  /**\n   * @inheritDoc\n   */\n  decorate: function decorate(methodName) {\n    var _this3 = this;\n\n    var originalMethod = this[methodName];\n\n    if (!originalMethod) {\n      /**\n       * Cannot decorate an undefined method.\n       *\n       * @error observablemixin-cannot-decorate-undefined\n       * @param {Object} object The object which method should be decorated.\n       * @param {String} methodName Name of the method which does not exist.\n       */\n      throw new CKEditorError('observablemixin-cannot-decorate-undefined: Cannot decorate an undefined method.', {\n        object: this,\n        methodName: methodName\n      });\n    }\n\n    this.on(methodName, function (evt, args) {\n      evt.return = originalMethod.apply(_this3, args);\n    });\n\n    this[methodName] = function () {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      return this.fire(methodName, args);\n    };\n  }\n};\nextend(ObservableMixin, EmitterMixin);\nexport default ObservableMixin; // Init symbol properties needed to for the observable mechanism to work.\n//\n// @private\n// @param {module:utils/observablemixin~ObservableMixin} observable\n\nfunction initObservable(observable) {\n  // Do nothing if already inited.\n  if (observablePropertiesSymbol in observable) {\n    return;\n  } // The internal hash containing the observable's state.\n  //\n  // @private\n  // @type {Map}\n\n\n  Object.defineProperty(observable, observablePropertiesSymbol, {\n    value: new Map()\n  }); // Map containing bindings to external observables. It shares the binding objects\n  // (`{ observable: A, property: 'a', to: ... }`) with {@link module:utils/observablemixin~ObservableMixin#_boundProperties} and\n  // it is used to observe external observables to update own properties accordingly.\n  // See {@link module:utils/observablemixin~ObservableMixin#bind}.\n  //\n  //\t\tA.bind( 'a', 'b', 'c' ).to( B, 'x', 'y', 'x' );\n  //\t\tconsole.log( A._boundObservables );\n  //\n  //\t\t\tMap( {\n  //\t\t\t\tB: {\n  //\t\t\t\t\tx: Set( [\n  //\t\t\t\t\t\t{ observable: A, property: 'a', to: [ [ B, 'x' ] ] },\n  //\t\t\t\t\t\t{ observable: A, property: 'c', to: [ [ B, 'x' ] ] }\n  //\t\t\t\t\t] ),\n  //\t\t\t\t\ty: Set( [\n  //\t\t\t\t\t\t{ observable: A, property: 'b', to: [ [ B, 'y' ] ] },\n  //\t\t\t\t\t] )\n  //\t\t\t\t}\n  //\t\t\t} )\n  //\n  //\t\tA.bind( 'd' ).to( B, 'z' ).to( C, 'w' ).as( callback );\n  //\t\tconsole.log( A._boundObservables );\n  //\n  //\t\t\tMap( {\n  //\t\t\t\tB: {\n  //\t\t\t\t\tx: Set( [\n  //\t\t\t\t\t\t{ observable: A, property: 'a', to: [ [ B, 'x' ] ] },\n  //\t\t\t\t\t\t{ observable: A, property: 'c', to: [ [ B, 'x' ] ] }\n  //\t\t\t\t\t] ),\n  //\t\t\t\t\ty: Set( [\n  //\t\t\t\t\t\t{ observable: A, property: 'b', to: [ [ B, 'y' ] ] },\n  //\t\t\t\t\t] ),\n  //\t\t\t\t\tz: Set( [\n  //\t\t\t\t\t\t{ observable: A, property: 'd', to: [ [ B, 'z' ], [ C, 'w' ] ], callback: callback }\n  //\t\t\t\t\t] )\n  //\t\t\t\t},\n  //\t\t\t\tC: {\n  //\t\t\t\t\tw: Set( [\n  //\t\t\t\t\t\t{ observable: A, property: 'd', to: [ [ B, 'z' ], [ C, 'w' ] ], callback: callback }\n  //\t\t\t\t\t] )\n  //\t\t\t\t}\n  //\t\t\t} )\n  //\n  // @private\n  // @type {Map}\n\n  Object.defineProperty(observable, boundObservablesSymbol, {\n    value: new Map()\n  }); // Object that stores which properties of this observable are bound and how. It shares\n  // the binding objects (`{ observable: A, property: 'a', to: ... }`) with {@link utils.ObservableMixin#_boundObservables}.\n  // This data structure is a reverse of {@link utils.ObservableMixin#_boundObservables} and it is helpful for\n  // {@link utils.ObservableMixin#unbind}.\n  //\n  // See {@link utils.ObservableMixin#bind}.\n  //\n  //\t\tA.bind( 'a', 'b', 'c' ).to( B, 'x', 'y', 'x' );\n  //\t\tconsole.log( A._boundProperties );\n  //\n  //\t\t\tMap( {\n  //\t\t\t\ta: { observable: A, property: 'a', to: [ [ B, 'x' ] ] },\n  //\t\t\t\tb: { observable: A, property: 'b', to: [ [ B, 'y' ] ] },\n  //\t\t\t\tc: { observable: A, property: 'c', to: [ [ B, 'x' ] ] }\n  //\t\t\t} )\n  //\n  //\t\tA.bind( 'd' ).to( B, 'z' ).to( C, 'w' ).as( callback );\n  //\t\tconsole.log( A._boundProperties );\n  //\n  //\t\t\tMap( {\n  //\t\t\t\ta: { observable: A, property: 'a', to: [ [ B, 'x' ] ] },\n  //\t\t\t\tb: { observable: A, property: 'b', to: [ [ B, 'y' ] ] },\n  //\t\t\t\tc: { observable: A, property: 'c', to: [ [ B, 'x' ] ] },\n  //\t\t\t\td: { observable: A, property: 'd', to: [ [ B, 'z' ], [ C, 'w' ] ], callback: callback }\n  //\t\t\t} )\n  //\n  // @private\n  // @type {Map}\n\n  Object.defineProperty(observable, boundPropertiesSymbol, {\n    value: new Map()\n  });\n} // A chaining for {@link module:utils/observablemixin~ObservableMixin#bind} providing `.to()` interface.\n//\n// @private\n// @param {...[Observable|String|Function]} args Arguments of the `.to( args )` binding.\n\n\nfunction bindTo() {\n  var _this4 = this;\n\n  var parsedArgs = parseBindToArgs.apply(void 0, arguments);\n  var bindingsKeys = Array.from(this._bindings.keys());\n  var numberOfBindings = bindingsKeys.length; // Eliminate A.bind( 'x' ).to( B, C )\n\n  if (!parsedArgs.callback && parsedArgs.to.length > 1) {\n    /**\n     * Binding multiple observables only possible with callback.\n     *\n     * @error observable-bind-no-callback\n     */\n    throw new CKEditorError('observable-bind-to-no-callback: Binding multiple observables only possible with callback.');\n  } // Eliminate A.bind( 'x', 'y' ).to( B, callback )\n\n\n  if (numberOfBindings > 1 && parsedArgs.callback) {\n    /**\n     * Cannot bind multiple properties and use a callback in one binding.\n     *\n     * @error observable-bind-to-extra-callback\n     */\n    throw new CKEditorError('observable-bind-to-extra-callback: Cannot bind multiple properties and use a callback in one binding.');\n  }\n\n  parsedArgs.to.forEach(function (to) {\n    // Eliminate A.bind( 'x', 'y' ).to( B, 'a' )\n    if (to.properties.length && to.properties.length !== numberOfBindings) {\n      /**\n       * The number of properties must match.\n       *\n       * @error observable-bind-to-properties-length\n       */\n      throw new CKEditorError('observable-bind-to-properties-length: The number of properties must match.');\n    } // When no to.properties specified, observing source properties instead i.e.\n    // A.bind( 'x', 'y' ).to( B ) -> Observe B.x and B.y\n\n\n    if (!to.properties.length) {\n      to.properties = _this4._bindProperties;\n    }\n  });\n  this._to = parsedArgs.to; // Fill {@link BindChain#_bindings} with callback. When the callback is set there's only one binding.\n\n  if (parsedArgs.callback) {\n    this._bindings.get(bindingsKeys[0]).callback = parsedArgs.callback;\n  }\n\n  attachBindToListeners(this._observable, this._to); // Update observable._boundProperties and observable._boundObservables.\n\n  updateBindToBound(this); // Set initial values of bound properties.\n\n  this._bindProperties.forEach(function (propertyName) {\n    updateBoundObservableProperty(_this4._observable, propertyName);\n  });\n} // Binds to an attribute in a set of iterable observables.\n//\n// @private\n// @param {Array.<Observable>} observables\n// @param {String} attribute\n// @param {Function} callback\n\n\nfunction bindToMany(observables, attribute, callback) {\n  if (this._bindings.size > 1) {\n    /**\n     * Binding one attribute to many observables only possible with one attribute.\n     *\n     * @error observable-bind-to-many-not-one-binding\n     */\n    throw new CKEditorError('observable-bind-to-many-not-one-binding: Cannot bind multiple properties with toMany().');\n  }\n\n  this.to.apply(this, _toConsumableArray(getBindingTargets(observables, attribute)).concat([// ...using given callback to parse attribute values.\n  callback]));\n} // Returns an array of binding components for\n// {@link Observable#bind} from a set of iterable observables.\n//\n// @param {Array.<Observable>} observables\n// @param {String} attribute\n// @returns {Array.<String|Observable>}\n\n\nfunction getBindingTargets(observables, attribute) {\n  var observableAndAttributePairs = observables.map(function (observable) {\n    return [observable, attribute];\n  }); // Merge pairs to one-dimension array of observables and attributes.\n\n  return Array.prototype.concat.apply([], observableAndAttributePairs);\n} // Check if all entries of the array are of `String` type.\n//\n// @private\n// @param {Array} arr An array to be checked.\n// @returns {Boolean}\n\n\nfunction isStringArray(arr) {\n  return arr.every(function (a) {\n    return typeof a == 'string';\n  });\n} // Parses and validates {@link Observable#bind}`.to( args )` arguments and returns\n// an object with a parsed structure. For example\n//\n//\t\tA.bind( 'x' ).to( B, 'a', C, 'b', call );\n//\n// becomes\n//\n//\t\t{\n//\t\t\tto: [\n//\t\t\t\t{ observable: B, properties: [ 'a' ] },\n//\t\t\t\t{ observable: C, properties: [ 'b' ] },\n//\t\t\t],\n//\t\t\tcallback: call\n// \t\t}\n//\n// @private\n// @param {...*} args Arguments of {@link Observable#bind}`.to( args )`.\n// @returns {Object}\n\n\nfunction parseBindToArgs() {\n  for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    args[_key4] = arguments[_key4];\n  }\n\n  // Eliminate A.bind( 'x' ).to()\n  if (!args.length) {\n    /**\n     * Invalid argument syntax in `to()`.\n     *\n     * @error observable-bind-to-parse-error\n     */\n    throw new CKEditorError('observable-bind-to-parse-error: Invalid argument syntax in `to()`.');\n  }\n\n  var parsed = {\n    to: []\n  };\n  var lastObservable;\n\n  if (typeof args[args.length - 1] == 'function') {\n    parsed.callback = args.pop();\n  }\n\n  args.forEach(function (a) {\n    if (typeof a == 'string') {\n      lastObservable.properties.push(a);\n    } else if (_typeof(a) == 'object') {\n      lastObservable = {\n        observable: a,\n        properties: []\n      };\n      parsed.to.push(lastObservable);\n    } else {\n      throw new CKEditorError('observable-bind-to-parse-error: Invalid argument syntax in `to()`.');\n    }\n  });\n  return parsed;\n} // Synchronizes {@link module:utils/observablemixin#_boundObservables} with {@link Binding}.\n//\n// @private\n// @param {Binding} binding A binding to store in {@link Observable#_boundObservables}.\n// @param {Observable} toObservable A observable, which is a new component of `binding`.\n// @param {String} toPropertyName A name of `toObservable`'s property, a new component of the `binding`.\n\n\nfunction updateBoundObservables(observable, binding, toObservable, toPropertyName) {\n  var boundObservables = observable[boundObservablesSymbol];\n  var bindingsToObservable = boundObservables.get(toObservable);\n  var bindings = bindingsToObservable || {};\n\n  if (!bindings[toPropertyName]) {\n    bindings[toPropertyName] = new Set();\n  } // Pass the binding to a corresponding Set in `observable._boundObservables`.\n\n\n  bindings[toPropertyName].add(binding);\n\n  if (!bindingsToObservable) {\n    boundObservables.set(toObservable, bindings);\n  }\n} // Synchronizes {@link Observable#_boundProperties} and {@link Observable#_boundObservables}\n// with {@link BindChain}.\n//\n// Assuming the following binding being created\n//\n// \t\tA.bind( 'a', 'b' ).to( B, 'x', 'y' );\n//\n// the following bindings were initialized by {@link Observable#bind} in {@link BindChain#_bindings}:\n//\n// \t\t{\n// \t\t\ta: { observable: A, property: 'a', to: [] },\n// \t\t\tb: { observable: A, property: 'b', to: [] },\n// \t\t}\n//\n// Iterate over all bindings in this chain and fill their `to` properties with\n// corresponding to( ... ) arguments (components of the binding), so\n//\n// \t\t{\n// \t\t\ta: { observable: A, property: 'a', to: [ B, 'x' ] },\n// \t\t\tb: { observable: A, property: 'b', to: [ B, 'y' ] },\n// \t\t}\n//\n// Then update the structure of {@link Observable#_boundObservables} with updated\n// binding, so it becomes:\n//\n// \t\tMap( {\n// \t\t\tB: {\n// \t\t\t\tx: Set( [\n// \t\t\t\t\t{ observable: A, property: 'a', to: [ [ B, 'x' ] ] }\n// \t\t\t\t] ),\n// \t\t\t\ty: Set( [\n// \t\t\t\t\t{ observable: A, property: 'b', to: [ [ B, 'y' ] ] },\n// \t\t\t\t] )\n//\t\t\t}\n// \t\t} )\n//\n// @private\n// @param {BindChain} chain The binding initialized by {@link Observable#bind}.\n\n\nfunction updateBindToBound(chain) {\n  var toProperty;\n\n  chain._bindings.forEach(function (binding, propertyName) {\n    // Note: For a binding without a callback, this will run only once\n    // like in A.bind( 'x', 'y' ).to( B, 'a', 'b' )\n    // TODO: ES6 destructuring.\n    chain._to.forEach(function (to) {\n      toProperty = to.properties[binding.callback ? 0 : chain._bindProperties.indexOf(propertyName)];\n      binding.to.push([to.observable, toProperty]);\n      updateBoundObservables(chain._observable, binding, to.observable, toProperty);\n    });\n  });\n} // Updates an property of a {@link Observable} with a value\n// determined by an entry in {@link Observable#_boundProperties}.\n//\n// @private\n// @param {Observable} observable A observable which property is to be updated.\n// @param {String} propertyName An property to be updated.\n\n\nfunction updateBoundObservableProperty(observable, propertyName) {\n  var boundProperties = observable[boundPropertiesSymbol];\n  var binding = boundProperties.get(propertyName);\n  var propertyValue; // When a binding with callback is created like\n  //\n  // \t\tA.bind( 'a' ).to( B, 'b', C, 'c', callback );\n  //\n  // collect B.b and C.c, then pass them to callback to set A.a.\n\n  if (binding.callback) {\n    propertyValue = binding.callback.apply(observable, binding.to.map(function (to) {\n      return to[0][to[1]];\n    }));\n  } else {\n    propertyValue = binding.to[0];\n    propertyValue = propertyValue[0][propertyValue[1]];\n  }\n\n  if (observable.hasOwnProperty(propertyName)) {\n    observable[propertyName] = propertyValue;\n  } else {\n    observable.set(propertyName, propertyValue);\n  }\n} // Starts listening to changes in {@link BindChain._to} observables to update\n// {@link BindChain._observable} {@link BindChain._bindProperties}. Also sets the\n// initial state of {@link BindChain._observable}.\n//\n// @private\n// @param {BindChain} chain The chain initialized by {@link Observable#bind}.\n\n\nfunction attachBindToListeners(observable, toBindings) {\n  toBindings.forEach(function (to) {\n    var boundObservables = observable[boundObservablesSymbol];\n    var bindings; // If there's already a chain between the observables (`observable` listens to\n    // `to.observable`), there's no need to create another `change` event listener.\n\n    if (!boundObservables.get(to.observable)) {\n      observable.listenTo(to.observable, 'change', function (evt, propertyName) {\n        bindings = boundObservables.get(to.observable)[propertyName]; // Note: to.observable will fire for any property change, react\n        // to changes of properties which are bound only.\n\n        if (bindings) {\n          bindings.forEach(function (binding) {\n            updateBoundObservableProperty(observable, binding.property);\n          });\n        }\n      });\n    }\n  });\n}\n/**\n * Interface which adds \"observable properties\" and data binding functionality.\n *\n * Can be easily implemented by a class by mixing the {@link module:utils/observablemixin~ObservableMixin} mixin.\n *\n * Read more about the usage of this interface in the:\n * * {@glink framework/guides/architecture/core-editor-architecture#event-system-and-observables \"Event system and observables\"}\n * section of the {@glink framework/guides/architecture/core-editor-architecture \"Core editor architecture\"} guide,\n * * {@glink framework/guides/deep-dive/observables \"Observables\" deep dive} guide.\n *\n * @interface Observable\n * @extends module:utils/emittermixin~Emitter\n */\n\n/**\n * Fired when a property changed value.\n *\n *\t\tobservable.set( 'prop', 1 );\n *\n *\t\tobservable.on( 'change:prop', ( evt, propertyName, newValue, oldValue ) => {\n *\t\t\tconsole.log( `${ propertyName } has changed from ${ oldValue } to ${ newValue }` );\n *\t\t} );\n *\n *\t\tobservable.prop = 2; // -> 'prop has changed from 1 to 2'\n *\n * @event change:{property}\n * @param {String} name The property name.\n * @param {*} value The new property value.\n * @param {*} oldValue The previous property value.\n */\n\n/**\n * Fired when a property value is going to be set but is not set yet (before the `change` event is fired).\n *\n * You can control the final value of the property by using\n * the {@link module:utils/eventinfo~EventInfo#return event's `return` property}.\n *\n *\t\tobservable.set( 'prop', 1 );\n *\n *\t\tobservable.on( 'set:prop', ( evt, propertyName, newValue, oldValue ) => {\n *\t\t\tconsole.log( `Value is going to be changed from ${ oldValue } to ${ newValue }` );\n *\t\t\tconsole.log( `Current property value is ${ observable[ propertyName ] }` );\n *\n *\t\t\t// Let's override the value.\n *\t\t\tevt.return = 3;\n *\t\t} );\n *\n *\t\tobservable.on( 'change:prop', ( evt, propertyName, newValue, oldValue ) => {\n *\t\t\tconsole.log( `Value has changed from ${ oldValue } to ${ newValue }` );\n *\t\t} );\n *\n *\t\tobservable.prop = 2; // -> 'Value is going to be changed from 1 to 2'\n *\t\t                     // -> 'Current property value is 1'\n *\t\t                     // -> 'Value has changed from 1 to 3'\n *\n * **Note:** Event is fired even when the new value is the same as the old value.\n *\n * @event set:{property}\n * @param {String} name The property name.\n * @param {*} value The new property value.\n * @param {*} oldValue The previous property value.\n */\n\n/**\n * Creates and sets the value of an observable property of this object. Such an property becomes a part\n * of the state and is be observable.\n *\n * It accepts also a single object literal containing key/value pairs with properties to be set.\n *\n * This method throws the `observable-set-cannot-override` error if the observable instance already\n * have a property with the given property name. This prevents from mistakenly overriding existing\n * properties and methods, but means that `foo.set( 'bar', 1 )` may be slightly slower than `foo.bar = 1`.\n *\n * @method #set\n * @param {String|Object} name The property's name or object with `name=>value` pairs.\n * @param {*} [value] The property's value (if `name` was passed in the first parameter).\n */\n\n/**\n * Binds {@link #set obvervable properties} to other objects implementing the\n * {@link module:utils/observablemixin~Observable} interface.\n *\n * Read more in the {@glink framework/guides/deep-dive/observables#property-bindings dedicated guide}\n * covering the topic of property bindings with some additional examples.\n *\n * Let's consider two objects: a `button` and an associated `command` (both `Observable`).\n *\n * A simple property binding could be as follows:\n *\n *\t\tbutton.bind( 'isEnabled' ).to( command, 'isEnabled' );\n *\n * or even shorter:\n *\n *\t\tbutton.bind( 'isEnabled' ).to( command );\n *\n * which works in the following way:\n *\n * * `button.isEnabled` **instantly equals** `command.isEnabled`,\n * * whenever `command.isEnabled` changes, `button.isEnabled` will immediately reflect its value.\n *\n * **Note**: To release the binding use {@link module:utils/observablemixin~Observable#unbind}.\n *\n * You can also \"rename\" the property in the binding by specifying the new name in the `to()` chain:\n *\n *\t\tbutton.bind( 'isEnabled' ).to( command, 'isWorking' );\n *\n * It is possible to bind more than one property at a time to shorten the code:\n *\n *\t\tbutton.bind( 'isEnabled', 'value' ).to( command );\n *\n * which corresponds to:\n *\n *\t\tbutton.bind( 'isEnabled' ).to( command );\n *\t\tbutton.bind( 'value' ).to( command );\n *\n * The binding can include more than one observable, combining multiple data sources in a custom callback:\n *\n *\t\tbutton.bind( 'isEnabled' ).to( command, 'isEnabled', ui, 'isVisible',\n *\t\t\t( isCommandEnabled, isUIVisible ) => isCommandEnabled && isUIVisible );\n *\n * It is also possible to bind to the same property in an array of observables.\n * To bind a `button` to multiple commands (also `Observables`) so that each and every one of them\n * must be enabled for the button to become enabled, use the following code:\n *\n *\t\tbutton.bind( 'isEnabled' ).toMany( [ commandA, commandB, commandC ], 'isEnabled',\n *\t\t\t( isAEnabled, isBEnabled, isCEnabled ) => isAEnabled && isBEnabled && isCEnabled );\n *\n * @method #bind\n * @param {...String} bindProperties Observable properties that will be bound to another observable(s).\n * @returns {Object} The bind chain with the `to()` and `toMany()` methods.\n */\n\n/**\n * Removes the binding created with {@link #bind}.\n *\n *\t\t// Removes the binding for the 'a' property.\n *\t\tA.unbind( 'a' );\n *\n *\t\t// Removes bindings for all properties.\n *\t\tA.unbind();\n *\n * @method #unbind\n * @param {...String} [unbindProperties] Observable properties to be unbound. All the bindings will\n * be released if no properties provided.\n */\n\n/**\n * Turns the given methods of this object into event-based ones. This means that the new method will fire an event\n * (named after the method) and the original action will be plugged as a listener to that event.\n *\n * Read more in the {@glink framework/guides/deep-dive/observables#decorating-object-methods dedicated guide}\n * covering the topic of decorating methods with some additional examples.\n *\n * Decorating the method does not change its behavior (it only adds an event),\n * but it allows to modify it later on by listening to the method's event.\n *\n * For example, to cancel the method execution the event can be {@link module:utils/eventinfo~EventInfo#stop stopped}:\n *\n *\t\tclass Foo {\n *\t\t\tconstructor() {\n *\t\t\t\tthis.decorate( 'method' );\n *\t\t\t}\n *\n *\t\t\tmethod() {\n *\t\t\t\tconsole.log( 'called!' );\n *\t\t\t}\n *\t\t}\n *\n *\t\tconst foo = new Foo();\n *\t\tfoo.on( 'method', ( evt ) => {\n *\t\t\tevt.stop();\n *\t\t}, { priority: 'high' } );\n *\n *\t\tfoo.method(); // Nothing is logged.\n *\n *\n * **Note**: The high {@link module:utils/priorities~PriorityString priority} listener\n * has been used to execute this particular callback before the one which calls the original method\n * (which uses the \"normal\" priority).\n *\n * It is also possible to change the returned value:\n *\n *\t\tfoo.on( 'method', ( evt ) => {\n *\t\t\tevt.return = 'Foo!';\n *\t\t} );\n *\n *\t\tfoo.method(); // -> 'Foo'\n *\n * Finally, it is possible to access and modify the arguments the method is called with:\n *\n *\t\tmethod( a, b ) {\n *\t\t\tconsole.log( `${ a }, ${ b }`  );\n *\t\t}\n *\n *\t\t// ...\n *\n *\t\tfoo.on( 'method', ( evt, args ) => {\n *\t\t\targs[ 0 ] = 3;\n *\n *\t\t\tconsole.log( args[ 1 ] ); // -> 2\n *\t\t}, { priority: 'high' } );\n *\n *\t\tfoo.method( 1, 2 ); // -> '3, 2'\n *\n * @method #decorate\n * @param {String} methodName Name of the method to decorate.\n */","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/text\n */\nimport Node from './node';\n/**\n * Model text node. Type of {@link module:engine/model/node~Node node} that contains {@link module:engine/model/text~Text#data text data}.\n *\n * **Important:** see {@link module:engine/model/node~Node} to read about restrictions using `Text` and `Node` API.\n *\n * **Note:** keep in mind that `Text` instances might indirectly got removed from model tree when model is changed.\n * This happens when {@link module:engine/model/writer~Writer model writer} is used to change model and the text node is merged with\n * another text node. Then, both text nodes are removed and a new text node is inserted into the model. Because of\n * this behavior, keeping references to `Text` is not recommended. Instead, consider creating\n * {@link module:engine/model/liveposition~LivePosition live position} placed before the text node.\n *\n * @extends {module:engine/model/node~Node}\n */\n\nvar Text =\n/*#__PURE__*/\nfunction (_Node) {\n  _inherits(Text, _Node);\n\n  /**\n   * Creates a text node.\n   *\n   * **Note:** Constructor of this class shouldn't be used directly in the code.\n   * Use the {@link module:engine/model/writer~Writer#createText} method instead.\n   *\n   * @protected\n   * @param {String} data Node's text.\n   * @param {Object} [attrs] Node's attributes. See {@link module:utils/tomap~toMap} for a list of accepted values.\n   */\n  function Text(data, attrs) {\n    var _this;\n\n    _classCallCheck(this, Text);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Text).call(this, attrs));\n    /**\n     * Text data contained in this text node.\n     *\n     * @protected\n     * @type {String}\n     */\n\n    _this._data = data || '';\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(Text, [{\n    key: \"is\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function is(type) {\n      return type == 'text' || _get(_getPrototypeOf(Text.prototype), \"is\", this).call(this, type);\n    }\n    /**\n     * Converts `Text` instance to plain object and returns it.\n     *\n     * @returns {Object} `Text` instance converted to plain object.\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = _get(_getPrototypeOf(Text.prototype), \"toJSON\", this).call(this);\n\n      json.data = this.data;\n      return json;\n    }\n    /**\n     * Creates a copy of this text node and returns it. Created text node has same text data and attributes as original text node.\n     *\n     * @protected\n     * @returns {module:engine/model/text~Text} `Text` instance created using given plain object.\n     */\n\n  }, {\n    key: \"_clone\",\n    value: function _clone() {\n      return new Text(this.data, this.getAttributes());\n    }\n    /**\n     * Creates a `Text` instance from given plain object (i.e. parsed JSON string).\n     *\n     * @param {Object} json Plain object to be converted to `Text`.\n     * @returns {module:engine/model/text~Text} `Text` instance created using given plain object.\n     */\n\n  }, {\n    key: \"offsetSize\",\n    get: function get() {\n      return this.data.length;\n    }\n    /**\n     * Returns a text data contained in the node.\n     *\n     * @readonly\n     * @type {String}\n     */\n\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this._data;\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      return new Text(json.data, json.attributes);\n    }\n  }]);\n\n  return Text;\n}(Node);\n\nexport { Text as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/text\n */\nimport Node from './node';\n/**\n * Tree view text node.\n *\n * The constructor of this class shouldn't be used directly. To create new Text instances\n * use the {@link module:engine/view/downcastwriter~DowncastWriter#createText `DowncastWriter#createText()`}\n * method when working on data downcasted from the model or the\n * {@link module:engine/view/upcastwriter~UpcastWriter#createText `UpcastWriter#createText()`}\n * method when working on non-semantic views.\n *\n * @extends module:engine/view/node~Node\n */\n\nvar Text =\n/*#__PURE__*/\nfunction (_Node) {\n  _inherits(Text, _Node);\n\n  /**\n   * Creates a tree view text node.\n   *\n   * @protected\n   * @param {String} data The text's data.\n   */\n  function Text(data) {\n    var _this;\n\n    _classCallCheck(this, Text);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Text).call(this));\n    /**\n     * The text content.\n     *\n     * Setting the data fires the {@link module:engine/view/node~Node#event:change:text change event}.\n     *\n     * @protected\n     * @member {String} module:engine/view/text~Text#_textData\n     */\n\n    _this._textData = data;\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(Text, [{\n    key: \"is\",\n    value: function is(type) {\n      return type == 'text' || _get(_getPrototypeOf(Text.prototype), \"is\", this).call(this, type);\n    }\n    /**\n     * The text content.\n     *\n     * @readonly\n     * @type {String}\n     */\n\n  }, {\n    key: \"isSimilar\",\n\n    /**\n     * Checks if this text node is similar to other text node.\n     * Both nodes should have the same data to be considered as similar.\n     *\n     * @param {module:engine/view/text~Text} otherNode Node to check if it is same as this node.\n     * @returns {Boolean}\n     */\n    value: function isSimilar(otherNode) {\n      if (!(otherNode instanceof Text)) {\n        return false;\n      }\n\n      return this === otherNode || this.data === otherNode.data;\n    }\n    /**\n     * Clones this node.\n     *\n     * @protected\n     * @returns {module:engine/view/text~Text} Text node that is a clone of this node.\n     */\n\n  }, {\n    key: \"_clone\",\n    value: function _clone() {\n      return new Text(this.data);\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this._textData;\n    }\n    /**\n     * This getter is required when using the addition assignment operator on protected property:\n     *\n     *\t\tconst foo = downcastWriter.createText( 'foo' );\n     *\t\tconst bar = downcastWriter.createText( 'bar' );\n     *\n     *\t\tfoo._data += bar.data;   // executes: `foo._data = foo._data + bar.data`\n     *\t\tconsole.log( foo.data ); // prints: 'foobar'\n     *\n     * If the protected getter didn't exist, `foo._data` will return `undefined` and result of the merge will be invalid.\n     *\n     * @protected\n     * @type {String}\n     */\n\n  }, {\n    key: \"_data\",\n    get: function get() {\n      return this.data;\n    }\n    /**\n     * Sets data and fires the {@link module:engine/view/node~Node#event:change:text change event}.\n     *\n     * @protected\n     * @fires change:text\n     * @param {String} data New data for the text node.\n     */\n    ,\n    set: function set(data) {\n      this._fireChange('text', this);\n\n      this._textData = data;\n    }\n  }]);\n\n  return Text;\n}(Node);\n\nexport { Text as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/operation/moveoperation\n */\nimport Operation from './operation';\nimport Position from '../position';\nimport Range from '../range';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\nimport { _move } from './utils';\n/**\n * Operation to move a range of {@link module:engine/model/item~Item model items}\n * to given {@link module:engine/model/position~Position target position}.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\n\nvar MoveOperation =\n/*#__PURE__*/\nfunction (_Operation) {\n  _inherits(MoveOperation, _Operation);\n\n  /**\n   * Creates a move operation.\n   *\n   * @param {module:engine/model/position~Position} sourcePosition\n   * Position before the first {@link module:engine/model/item~Item model item} to move.\n   * @param {Number} howMany Offset size of moved range. Moved range will start from `sourcePosition` and end at\n   * `sourcePosition` with offset shifted by `howMany`.\n   * @param {module:engine/model/position~Position} targetPosition Position at which moved nodes will be inserted.\n   * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n   * can be applied or `null` if the operation operates on detached (non-document) tree.\n   */\n  function MoveOperation(sourcePosition, howMany, targetPosition, baseVersion) {\n    var _this;\n\n    _classCallCheck(this, MoveOperation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MoveOperation).call(this, baseVersion));\n    /**\n     * Position before the first {@link module:engine/model/item~Item model item} to move.\n     *\n     * @member {module:engine/model/position~Position} module:engine/model/operation/moveoperation~MoveOperation#sourcePosition\n     */\n\n    _this.sourcePosition = sourcePosition.clone(); // `'toNext'` because `sourcePosition` is a bit like a start of the moved range.\n\n    _this.sourcePosition.stickiness = 'toNext';\n    /**\n     * Offset size of moved range.\n     *\n     * @member {Number} module:engine/model/operation/moveoperation~MoveOperation#howMany\n     */\n\n    _this.howMany = howMany;\n    /**\n     * Position at which moved nodes will be inserted.\n     *\n     * @member {module:engine/model/position~Position} module:engine/model/operation/moveoperation~MoveOperation#targetPosition\n     */\n\n    _this.targetPosition = targetPosition.clone();\n    _this.targetPosition.stickiness = 'toNone';\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(MoveOperation, [{\n    key: \"clone\",\n\n    /**\n     * Creates and returns an operation that has the same parameters as this operation.\n     *\n     * @returns {module:engine/model/operation/moveoperation~MoveOperation} Clone of this operation.\n     */\n    value: function clone() {\n      return new this.constructor(this.sourcePosition, this.howMany, this.targetPosition, this.baseVersion);\n    }\n    /**\n     * Returns the start position of the moved range after it got moved. This may be different than\n     * {@link module:engine/model/operation/moveoperation~MoveOperation#targetPosition} in some cases, i.e. when a range is moved\n     * inside the same parent but {@link module:engine/model/operation/moveoperation~MoveOperation#targetPosition targetPosition}\n     * is after {@link module:engine/model/operation/moveoperation~MoveOperation#sourcePosition sourcePosition}.\n     *\n     *\t\t vv              vv\n     *\t\tabcdefg ===> adefbcg\n     *\t\t     ^          ^\n     *\t\t     targetPos\tmovedRangeStart\n     *\t\t     offset 6\toffset 4\n     *\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"getMovedRangeStart\",\n    value: function getMovedRangeStart() {\n      return this.targetPosition._getTransformedByDeletion(this.sourcePosition, this.howMany);\n    }\n    /**\n     * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n     *\n     * @returns {module:engine/model/operation/moveoperation~MoveOperation}\n     */\n\n  }, {\n    key: \"getReversed\",\n    value: function getReversed() {\n      var newTargetPosition = this.sourcePosition._getTransformedByInsertion(this.targetPosition, this.howMany);\n\n      return new this.constructor(this.getMovedRangeStart(), this.howMany, newTargetPosition, this.baseVersion + 1);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_validate\",\n    value: function _validate() {\n      var sourceElement = this.sourcePosition.parent;\n      var targetElement = this.targetPosition.parent;\n      var sourceOffset = this.sourcePosition.offset;\n      var targetOffset = this.targetPosition.offset; // Validate whether move operation has correct parameters.\n      // Validation is pretty complex but move operation is one of the core ways to manipulate the document state.\n      // We expect that many errors might be connected with one of scenarios described below.\n\n      if (!sourceElement || !targetElement) {\n        /**\n         * Source position or target position is invalid.\n         *\n         * @error move-operation-position-invalid\n         */\n        throw new CKEditorError('move-operation-position-invalid: Source position or target position is invalid.');\n      } else if (sourceOffset + this.howMany > sourceElement.maxOffset) {\n        /**\n         * The nodes which should be moved do not exist.\n         *\n         * @error move-operation-nodes-do-not-exist\n         */\n        throw new CKEditorError('move-operation-nodes-do-not-exist: The nodes which should be moved do not exist.');\n      } else if (sourceElement === targetElement && sourceOffset < targetOffset && targetOffset < sourceOffset + this.howMany) {\n        /**\n         * Trying to move a range of nodes into the middle of that range.\n         *\n         * @error move-operation-range-into-itself\n         */\n        throw new CKEditorError('move-operation-range-into-itself: Trying to move a range of nodes to the inside of that range.');\n      } else if (this.sourcePosition.root == this.targetPosition.root) {\n        if (compareArrays(this.sourcePosition.getParentPath(), this.targetPosition.getParentPath()) == 'prefix') {\n          var i = this.sourcePosition.path.length - 1;\n\n          if (this.targetPosition.path[i] >= sourceOffset && this.targetPosition.path[i] < sourceOffset + this.howMany) {\n            /**\n             * Trying to move a range of nodes into one of nodes from that range.\n             *\n             * @error move-operation-node-into-itself\n             */\n            throw new CKEditorError('move-operation-node-into-itself: Trying to move a range of nodes into one of nodes from that range.');\n          }\n        }\n      }\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_execute\",\n    value: function _execute() {\n      _move(Range._createFromPositionAndShift(this.sourcePosition, this.howMany), this.targetPosition);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = _get(_getPrototypeOf(MoveOperation.prototype), \"toJSON\", this).call(this);\n\n      json.sourcePosition = this.sourcePosition.toJSON();\n      json.targetPosition = this.targetPosition.toJSON();\n      return json;\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"type\",\n    get: function get() {\n      if (this.targetPosition.root.rootName == '$graveyard') {\n        return 'remove';\n      } else if (this.sourcePosition.root.rootName == '$graveyard') {\n        return 'reinsert';\n      }\n\n      return 'move';\n    }\n  }], [{\n    key: \"fromJSON\",\n\n    /**\n     * Creates `MoveOperation` object from deserilized object, i.e. from parsed JSON string.\n     *\n     * @param {Object} json Deserialized JSON object.\n     * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n     * @returns {module:engine/model/operation/moveoperation~MoveOperation}\n     */\n    value: function fromJSON(json, document) {\n      var sourcePosition = Position.fromJSON(json.sourcePosition, document);\n      var targetPosition = Position.fromJSON(json.targetPosition, document);\n      return new this(sourcePosition, json.howMany, targetPosition, json.baseVersion);\n    }\n  }, {\n    key: \"className\",\n    get: function get() {\n      return 'MoveOperation';\n    }\n  }]);\n\n  return MoveOperation;\n}(Operation);\n\nexport { MoveOperation as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/operation/splitoperation\n */\nimport Operation from './operation';\nimport MergeOperation from './mergeoperation';\nimport Position from '../position';\nimport Range from '../range';\nimport { _insert, _move } from './utils';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * Operation to split {@link module:engine/model/element~Element an element} at given\n * {@link module:engine/model/operation/splitoperation~SplitOperation#splitPosition split position} into two elements,\n * both containing a part of the element's original content.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\n\nvar SplitOperation =\n/*#__PURE__*/\nfunction (_Operation) {\n  _inherits(SplitOperation, _Operation);\n\n  /**\n   * Creates a split operation.\n   *\n   * @param {module:engine/model/position~Position} splitPosition Position at which an element should be split.\n   * @param {Number} howMany Total offset size of elements that are in the split element after `position`.\n   * @param {module:engine/model/position~Position|null} graveyardPosition Position in the graveyard root before the element which\n   * should be used as a parent of the nodes after `position`. If it is not set, a copy of the the `position` parent will be used.\n   * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n   * can be applied or `null` if the operation operates on detached (non-document) tree.\n   */\n  function SplitOperation(splitPosition, howMany, graveyardPosition, baseVersion) {\n    var _this;\n\n    _classCallCheck(this, SplitOperation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SplitOperation).call(this, baseVersion));\n    /**\n     * Position at which an element should be split.\n     *\n     * @member {module:engine/model/position~Position} module:engine/model/operation/splitoperation~SplitOperation#splitPosition\n     */\n\n    _this.splitPosition = splitPosition.clone(); // Keep position sticking to the next node. This way any new content added at the place where the element is split\n    // will be left in the original element.\n\n    _this.splitPosition.stickiness = 'toNext';\n    /**\n     * Total offset size of elements that are in the split element after `position`.\n     *\n     * @member {Number} module:engine/model/operation/splitoperation~SplitOperation#howMany\n     */\n\n    _this.howMany = howMany;\n    /**\n     * Position at which the clone of split element (or element from graveyard) will be inserted.\n     *\n     * @member {module:engine/model/position~Position} module:engine/model/operation/splitoperation~SplitOperation#insertionPosition\n     */\n\n    _this.insertionPosition = SplitOperation.getInsertionPosition(splitPosition);\n    _this.insertionPosition.stickiness = 'toNone';\n    /**\n     * Position in the graveyard root before the element which should be used as a parent of the nodes after `position`.\n     * If it is not set, a copy of the the `position` parent will be used.\n     *\n     * The default behavior is to clone the split element. Element from graveyard is used during undo.\n     *\n     * @member {module:engine/model/position~Position|null} #graveyardPosition\n     */\n\n    _this.graveyardPosition = graveyardPosition ? graveyardPosition.clone() : null;\n\n    if (_this.graveyardPosition) {\n      _this.graveyardPosition.stickiness = 'toNext';\n    }\n\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(SplitOperation, [{\n    key: \"clone\",\n\n    /**\n     * Creates and returns an operation that has the same parameters as this operation.\n     *\n     * @returns {module:engine/model/operation/splitoperation~SplitOperation} Clone of this operation.\n     */\n    value: function clone() {\n      var split = new this.constructor(this.splitPosition, this.howMany, this.graveyardPosition, this.baseVersion);\n      split.insertionPosition = this.insertionPosition;\n      return split;\n    }\n    /**\n     * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n     *\n     * @returns {module:engine/model/operation/mergeoperation~MergeOperation}\n     */\n\n  }, {\n    key: \"getReversed\",\n    value: function getReversed() {\n      var graveyard = this.splitPosition.root.document.graveyard;\n      var graveyardPosition = new Position(graveyard, [0]);\n      return new MergeOperation(this.moveTargetPosition, this.howMany, this.splitPosition, graveyardPosition, this.baseVersion + 1);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_validate\",\n    value: function _validate() {\n      var element = this.splitPosition.parent;\n      var offset = this.splitPosition.offset; // Validate whether split operation has correct parameters.\n\n      if (!element || element.maxOffset < offset) {\n        /**\n         * Split position is invalid.\n         *\n         * @error split-operation-position-invalid\n         */\n        throw new CKEditorError('split-operation-position-invalid: Split position is invalid.');\n      } else if (!element.parent) {\n        /**\n         * Cannot split root element.\n         *\n         * @error split-operation-split-in-root\n         */\n        throw new CKEditorError('split-operation-split-in-root: Cannot split root element.');\n      } else if (this.howMany != element.maxOffset - this.splitPosition.offset) {\n        /**\n         * Split operation specifies wrong number of nodes to move.\n         *\n         * @error split-operation-how-many-invalid\n         */\n        throw new CKEditorError('split-operation-how-many-invalid: Split operation specifies wrong number of nodes to move.');\n      } else if (this.graveyardPosition && !this.graveyardPosition.nodeAfter) {\n        /**\n         * Graveyard position invalid.\n         *\n         * @error split-operation-graveyard-position-invalid\n         */\n        throw new CKEditorError('split-operation-graveyard-position-invalid: Graveyard position invalid.');\n      }\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_execute\",\n    value: function _execute() {\n      var splitElement = this.splitPosition.parent;\n\n      if (this.graveyardPosition) {\n        _move(Range._createFromPositionAndShift(this.graveyardPosition, 1), this.insertionPosition);\n      } else {\n        var newElement = splitElement._clone();\n\n        _insert(this.insertionPosition, newElement);\n      }\n\n      var sourceRange = new Range(Position._createAt(splitElement, this.splitPosition.offset), Position._createAt(splitElement, splitElement.maxOffset));\n\n      _move(sourceRange, this.moveTargetPosition);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = _get(_getPrototypeOf(SplitOperation.prototype), \"toJSON\", this).call(this);\n\n      json.splitPosition = this.splitPosition.toJSON();\n      json.insertionPosition = this.insertionPosition.toJSON();\n\n      if (this.graveyardPosition) {\n        json.graveyardPosition = this.graveyardPosition.toJSON();\n      }\n\n      return json;\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"type\",\n    get: function get() {\n      return 'split';\n    }\n    /**\n     * Position inside the new clone of a split element.\n     *\n     * This is a position where nodes that are after the split position will be moved to.\n     *\n     * @readonly\n     * @type {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"moveTargetPosition\",\n    get: function get() {\n      var path = this.insertionPosition.path.slice();\n      path.push(0);\n      return new Position(this.insertionPosition.root, path);\n    }\n    /**\n     * Artificial range that contains all the nodes from the split element that will be moved to the new element.\n     * The range starts at {@link ~#splitPosition} and ends in the same parent, at `POSITIVE_INFINITY` offset.\n     *\n     * @readonly\n     * @type {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"movedRange\",\n    get: function get() {\n      var end = this.splitPosition.getShiftedBy(Number.POSITIVE_INFINITY);\n      return new Range(this.splitPosition, end);\n    }\n  }], [{\n    key: \"getInsertionPosition\",\n\n    /**\n     * Helper function that returns a default insertion position basing on given `splitPosition`. The default insertion\n     * position is after the split element.\n     *\n     * @param {module:engine/model/position~Position} splitPosition\n     * @returns {module:engine/model/position~Position}\n     */\n    value: function getInsertionPosition(splitPosition) {\n      var path = splitPosition.path.slice(0, -1);\n      path[path.length - 1]++;\n      return new Position(splitPosition.root, path);\n    }\n    /**\n     * Creates `SplitOperation` object from deserilized object, i.e. from parsed JSON string.\n     *\n     * @param {Object} json Deserialized JSON object.\n     * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n     * @returns {module:engine/model/operation/splitoperation~SplitOperation}\n     */\n\n  }, {\n    key: \"fromJSON\",\n    value: function fromJSON(json, document) {\n      var splitPosition = Position.fromJSON(json.splitPosition, document);\n      var insertionPosition = Position.fromJSON(json.insertionPosition, document);\n      var graveyardPosition = json.graveyardPosition ? Position.fromJSON(json.graveyardPosition, document) : null;\n      var split = new this(splitPosition, json.howMany, graveyardPosition, json.baseVersion);\n      split.insertionPosition = insertionPosition;\n      return split;\n    }\n  }, {\n    key: \"className\",\n    get: function get() {\n      return 'SplitOperation';\n    }\n  }]);\n\n  return SplitOperation;\n}(Operation);\n\nexport { SplitOperation as default };","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (typeof __webpack_nonce__ === 'undefined') {\n\t\treturn null;\n\t}\n\n\treturn __webpack_nonce__;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/button/buttonview\n */\nimport View from '../view';\nimport IconView from '../icon/iconview';\nimport TooltipView from '../tooltip/tooltipview';\nimport uid from '@ckeditor/ckeditor5-utils/src/uid';\nimport { getEnvKeystrokeText } from '@ckeditor/ckeditor5-utils/src/keyboard';\nimport '../../theme/components/button/button.css';\n/**\n * The button view class.\n *\n *\t\tconst view = new ButtonView();\n *\n *\t\tview.set( {\n *\t\t\tlabel: 'A button',\n *\t\t\tkeystroke: 'Ctrl+B',\n *\t\t\ttooltip: true,\n *\t\t\twithText: true\n *\t\t} );\n *\n *\t\tview.render();\n *\n *\t\tdocument.body.append( view.element );\n *\n * @extends module:ui/view~View\n * @implements module:ui/button/button~Button\n */\n\nvar ButtonView =\n/*#__PURE__*/\nfunction (_View) {\n  _inherits(ButtonView, _View);\n\n  /**\n   * @inheritDoc\n   */\n  function ButtonView(locale) {\n    var _this;\n\n    _classCallCheck(this, ButtonView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ButtonView).call(this, locale));\n    var bind = _this.bindTemplate;\n    var ariaLabelUid = uid(); // Implement the Button interface.\n\n    _this.set('class');\n\n    _this.set('labelStyle');\n\n    _this.set('icon');\n\n    _this.set('isEnabled', true);\n\n    _this.set('isOn', false);\n\n    _this.set('isVisible', true);\n\n    _this.set('keystroke');\n\n    _this.set('label');\n\n    _this.set('tabindex', -1);\n\n    _this.set('tooltip');\n\n    _this.set('tooltipPosition', 's');\n\n    _this.set('type', 'button');\n\n    _this.set('withText', false);\n    /**\n     * Collection of the child views inside of the button {@link #element}.\n     *\n     * @readonly\n     * @member {module:ui/viewcollection~ViewCollection}\n     */\n\n\n    _this.children = _this.createCollection();\n    /**\n     * Tooltip of the button view. It is configurable using the {@link #tooltip tooltip attribute}.\n     *\n     * @readonly\n     * @member {module:ui/tooltip/tooltipview~TooltipView} #tooltipView\n     */\n\n    _this.tooltipView = _this._createTooltipView();\n    /**\n     * Label of the button view. It is configurable using the {@link #label label attribute}.\n     *\n     * @readonly\n     * @member {module:ui/view~View} #labelView\n     */\n\n    _this.labelView = _this._createLabelView(ariaLabelUid);\n    /**\n     * The icon view of the button. Will be added to {@link #children} when the\n     * {@link #icon icon attribute} is defined.\n     *\n     * @readonly\n     * @member {module:ui/icon/iconview~IconView} #iconView\n     */\n\n    _this.iconView = new IconView();\n\n    _this.iconView.extendTemplate({\n      attributes: {\n        class: 'ck-button__icon'\n      }\n    });\n    /**\n     * Tooltip of the button bound to the template.\n     *\n     * @see #tooltip\n     * @see #_getTooltipString\n     * @private\n     * @observable\n     * @member {Boolean} #_tooltipString\n     */\n\n\n    _this.bind('_tooltipString').to(_assertThisInitialized(_assertThisInitialized(_this)), 'tooltip', _assertThisInitialized(_assertThisInitialized(_this)), 'label', _assertThisInitialized(_assertThisInitialized(_this)), 'keystroke', _this._getTooltipString.bind(_assertThisInitialized(_assertThisInitialized(_this))));\n\n    _this.setTemplate({\n      tag: 'button',\n      attributes: {\n        class: ['ck', 'ck-button', bind.to('class'), bind.if('isEnabled', 'ck-disabled', function (value) {\n          return !value;\n        }), bind.if('isVisible', 'ck-hidden', function (value) {\n          return !value;\n        }), bind.to('isOn', function (value) {\n          return value ? 'ck-on' : 'ck-off';\n        }), bind.if('withText', 'ck-button_with-text')],\n        type: bind.to('type', function (value) {\n          return value ? value : 'button';\n        }),\n        tabindex: bind.to('tabindex'),\n        'aria-labelledby': \"ck-editor__aria-label_\".concat(ariaLabelUid),\n        'aria-disabled': bind.if('isEnabled', true, function (value) {\n          return !value;\n        }),\n        'aria-pressed': bind.if('isOn', true)\n      },\n      children: _this.children,\n      on: {\n        mousedown: bind.to(function (evt) {\n          evt.preventDefault();\n        }),\n        click: bind.to(function (evt) {\n          // We can't make the button disabled using the disabled attribute, because it won't be focusable.\n          // Though, shouldn't this condition be moved to the button controller?\n          if (_this.isEnabled) {\n            _this.fire('execute');\n          } else {\n            // Prevent the default when button is disabled, to block e.g.\n            // automatic form submitting. See ckeditor/ckeditor5-link#74.\n            evt.preventDefault();\n          }\n        })\n      }\n    });\n\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(ButtonView, [{\n    key: \"render\",\n    value: function render() {\n      _get(_getPrototypeOf(ButtonView.prototype), \"render\", this).call(this);\n\n      if (this.icon) {\n        this.iconView.bind('content').to(this, 'icon');\n        this.children.add(this.iconView);\n      }\n\n      this.children.add(this.tooltipView);\n      this.children.add(this.labelView);\n    }\n    /**\n     * Focuses the {@link #element} of the button.\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.element.focus();\n    }\n    /**\n     * Creates a {@link module:ui/tooltip/tooltipview~TooltipView} instance and binds it with button\n     * attributes.\n     *\n     * @private\n     * @returns {module:ui/tooltip/tooltipview~TooltipView}\n     */\n\n  }, {\n    key: \"_createTooltipView\",\n    value: function _createTooltipView() {\n      var tooltipView = new TooltipView();\n      tooltipView.bind('text').to(this, '_tooltipString');\n      tooltipView.bind('position').to(this, 'tooltipPosition');\n      return tooltipView;\n    }\n    /**\n     * Creates a label view instance and binds it with button attributes.\n     *\n     * @private\n     * @param {String} ariaLabelUid The aria label UID.\n     * @returns {module:ui/view~View}\n     */\n\n  }, {\n    key: \"_createLabelView\",\n    value: function _createLabelView(ariaLabelUid) {\n      var labelView = new View();\n      var bind = this.bindTemplate;\n      labelView.setTemplate({\n        tag: 'span',\n        attributes: {\n          class: ['ck', 'ck-button__label'],\n          style: bind.to('labelStyle'),\n          id: \"ck-editor__aria-label_\".concat(ariaLabelUid)\n        },\n        children: [{\n          text: this.bindTemplate.to('label')\n        }]\n      });\n      return labelView;\n    }\n    /**\n     * Gets the text for the {@link #tooltipView} from the combination of\n     * {@link #tooltip}, {@link #label} and {@link #keystroke} attributes.\n     *\n     * @private\n     * @see #tooltip\n     * @see #_tooltipString\n     * @param {Boolean|String|Function} tooltip Button tooltip.\n     * @param {String} label Button label.\n     * @param {String} keystroke Button keystroke.\n     * @returns {String}\n     */\n\n  }, {\n    key: \"_getTooltipString\",\n    value: function _getTooltipString(tooltip, label, keystroke) {\n      if (tooltip) {\n        if (typeof tooltip == 'string') {\n          return tooltip;\n        } else {\n          if (keystroke) {\n            keystroke = getEnvKeystrokeText(keystroke);\n          }\n\n          if (tooltip instanceof Function) {\n            return tooltip(label, keystroke);\n          } else {\n            return \"\".concat(label).concat(keystroke ? \" (\".concat(keystroke, \")\") : '');\n          }\n        }\n      }\n\n      return '';\n    }\n  }]);\n\n  return ButtonView;\n}(View);\n\nexport { ButtonView as default };","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/comparearrays\n */\n\n/**\n * Compares how given arrays relate to each other. One array can be: same as another array, prefix of another array\n * or completely different. If arrays are different, first index at which they differ is returned. Otherwise,\n * a flag specifying the relation is returned. Flags are negative numbers, so whenever a number >= 0 is returned\n * it means that arrays differ.\n *\n *\t\tcompareArrays( [ 0, 2 ], [ 0, 2 ] );\t\t// 'same'\n *\t\tcompareArrays( [ 0, 2 ], [ 0, 2, 1 ] );\t\t// 'prefix'\n *\t\tcompareArrays( [ 0, 2 ], [ 0 ] );\t\t\t// 'extension'\n *\t\tcompareArrays( [ 0, 2 ], [ 1, 2 ] );\t\t// 0\n *\t\tcompareArrays( [ 0, 2 ], [ 0, 1 ] );\t\t// 1\n *\n * @param {Array} a Array that is compared.\n * @param {Array} b Array to compare with.\n * @returns {module:utils/comparearrays~ArrayRelation} How array `a` is related to `b`.\n */\nexport default function compareArrays(a, b) {\n  var minLen = Math.min(a.length, b.length);\n\n  for (var i = 0; i < minLen; i++) {\n    if (a[i] != b[i]) {\n      // The arrays are different.\n      return i;\n    }\n  } // Both arrays were same at all points.\n\n\n  if (a.length == b.length) {\n    // If their length is also same, they are the same.\n    return 'same';\n  } else if (a.length < b.length) {\n    // Compared array is shorter so it is a prefix of the other array.\n    return 'prefix';\n  } else {\n    // Compared array is longer so it is an extension of the other array.\n    return 'extension';\n  }\n}\n/**\n * @typedef {'extension'|'same'|'prefix'} module:utils/comparearrays~ArrayRelation\n */","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/istext\n */\n\n/**\n * Checks if the object is a native DOM Text node.\n *\n * @param {*} obj\n * @returns {Boolean}\n */\nexport default function isText(obj) {\n  return Object.prototype.toString.call(obj) == '[object Text]';\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/operation/operation\n */\n\n/**\n * Abstract base operation class.\n *\n * @abstract\n */\nvar Operation =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Base operation constructor.\n   *\n   * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n   * can be applied or `null` if the operation operates on detached (non-document) tree.\n   */\n  function Operation(baseVersion) {\n    _classCallCheck(this, Operation);\n\n    /**\n     * {@link module:engine/model/document~Document#version} on which operation can be applied. If you try to\n     * {@link module:engine/model/model~Model#applyOperation apply} operation with different base version than the\n     * {@link module:engine/model/document~Document#version document version} the\n     * {@link module:utils/ckeditorerror~CKEditorError model-document-applyOperation-wrong-version} error is thrown.\n     *\n     * @member {Number}\n     */\n    this.baseVersion = baseVersion;\n    /**\n     * Defines whether operation is executed on attached or detached {@link module:engine/model/item~Item items}.\n     *\n     * @readonly\n     * @member {Boolean} #isDocumentOperation\n     */\n\n    this.isDocumentOperation = this.baseVersion !== null;\n    /**\n     * {@link module:engine/model/batch~Batch Batch} to which the operation is added or `null` if the operation is not\n     * added to any batch yet.\n     *\n     * @member {module:engine/model/batch~Batch|null} #batch\n     */\n\n    this.batch = null;\n    /**\n     * Operation type.\n     *\n     * @readonly\n     * @member {String} #type\n     */\n\n    /**\n     * Creates and returns an operation that has the same parameters as this operation.\n     *\n     * @method #clone\n     * @returns {module:engine/model/operation/operation~Operation} Clone of this operation.\n     */\n\n    /**\n     * Creates and returns a reverse operation. Reverse operation when executed right after\n     * the original operation will bring back tree model state to the point before the original\n     * operation execution. In other words, it reverses changes done by the original operation.\n     *\n     * Keep in mind that tree model state may change since executing the original operation,\n     * so reverse operation will be \"outdated\". In that case you will need to transform it by\n     * all operations that were executed after the original operation.\n     *\n     * @method #getReversed\n     * @returns {module:engine/model/operation/operation~Operation} Reversed operation.\n     */\n\n    /**\n     * Executes the operation - modifications described by the operation properties will be applied to the model tree.\n     *\n     * @protected\n     * @method #_execute\n     */\n  }\n  /**\n   * Checks whether the operation's parameters are correct and the operation can be correctly executed. Throws\n   * an error if operation is not valid.\n   *\n   * @protected\n   * @method #_validate\n   */\n\n\n  _createClass(Operation, [{\n    key: \"_validate\",\n    value: function _validate() {}\n    /**\n     * Custom toJSON method to solve child-parent circular dependencies.\n     *\n     * @method #toJSON\n     * @returns {Object} Clone of this object with the operation property replaced with string.\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      // This method creates only a shallow copy, all nested objects should be defined separately.\n      // See https://github.com/ckeditor/ckeditor5-engine/issues/1477.\n      var json = Object.assign({}, this);\n      json.__className = this.constructor.className; // Remove reference to the parent `Batch` to avoid circular dependencies.\n\n      delete json.batch; // Only document operations are shared with other clients so it is not necessary to keep this information.\n\n      delete json.isDocumentOperation;\n      return json;\n    }\n    /**\n     * Name of the operation class used for serialization.\n     *\n     * @type {String}\n     */\n\n  }], [{\n    key: \"fromJSON\",\n\n    /**\n     * Creates Operation object from deserilized object, i.e. from parsed JSON string.\n     *\n     * @param {Object} json Deserialized JSON object.\n     * @param {module:engine/model/document~Document} doc Document on which this operation will be applied.\n     * @returns {module:engine/model/operation/operation~Operation}\n     */\n    value: function fromJSON(json) {\n      return new this(json.baseVersion);\n    }\n  }, {\n    key: \"className\",\n    get: function get() {\n      return 'Operation';\n    }\n  }]);\n\n  return Operation;\n}();\n\nexport { Operation as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/operation/mergeoperation\n */\nimport Operation from './operation';\nimport SplitOperation from './splitoperation';\nimport Position from '../position';\nimport Range from '../range';\nimport { _move } from './utils';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * Operation to merge two {@link module:engine/model/element~Element elements}.\n *\n * The merged element is the parent of {@link ~MergeOperation#sourcePosition} and it is merged into the parent of\n * {@link ~MergeOperation#targetPosition}. All nodes from the merged element are moved to {@link ~MergeOperation#targetPosition}.\n *\n * The merged element is moved to the graveyard at {@link ~MergeOperation#graveyardPosition}.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\n\nvar MergeOperation =\n/*#__PURE__*/\nfunction (_Operation) {\n  _inherits(MergeOperation, _Operation);\n\n  /**\n   * Creates a merge operation.\n   *\n   * @param {module:engine/model/position~Position} sourcePosition Position inside the merged element. All nodes from that\n   * element after that position will be moved to {@link ~#targetPosition}.\n   * @param {Number} howMany Summary offset size of nodes which will be moved from the merged element to the new parent.\n   * @param {module:engine/model/position~Position} targetPosition Position which the nodes from the merged elements will be moved to.\n   * @param {module:engine/model/position~Position} graveyardPosition Position in graveyard to which the merged element will be moved.\n   * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n   * can be applied or `null` if the operation operates on detached (non-document) tree.\n   */\n  function MergeOperation(sourcePosition, howMany, targetPosition, graveyardPosition, baseVersion) {\n    var _this;\n\n    _classCallCheck(this, MergeOperation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MergeOperation).call(this, baseVersion));\n    /**\n     * Position inside the merged element. All nodes from that element after that position will be moved to {@link ~#targetPosition}.\n     *\n     * @member {module:engine/model/position~Position} module:engine/model/operation/mergeoperation~MergeOperation#sourcePosition\n     */\n\n    _this.sourcePosition = sourcePosition.clone(); // This is, and should always remain, the first position in its parent.\n\n    _this.sourcePosition.stickiness = 'toPrevious';\n    /**\n     * Summary offset size of nodes which will be moved from the merged element to the new parent.\n     *\n     * @member {Number} module:engine/model/operation/mergeoperation~MergeOperation#howMany\n     */\n\n    _this.howMany = howMany;\n    /**\n     * Position which the nodes from the merged elements will be moved to.\n     *\n     * @member {module:engine/model/position~Position} module:engine/model/operation/mergeoperation~MergeOperation#targetPosition\n     */\n\n    _this.targetPosition = targetPosition.clone(); // Except of a rare scenario in `MergeOperation` x `MergeOperation` transformation,\n    // this is, and should always remain, the last position in its parent.\n\n    _this.targetPosition.stickiness = 'toNext';\n    /**\n     * Position in graveyard to which the merged element will be moved.\n     *\n     * @member {module:engine/model/position~Position} module:engine/model/operation/mergeoperation~MergeOperation#graveyardPosition\n     */\n\n    _this.graveyardPosition = graveyardPosition.clone();\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(MergeOperation, [{\n    key: \"clone\",\n\n    /**\n     * Creates and returns an operation that has the same parameters as this operation.\n     *\n     * @returns {module:engine/model/operation/mergeoperation~MergeOperation} Clone of this operation.\n     */\n    value: function clone() {\n      return new this.constructor(this.sourcePosition, this.howMany, this.targetPosition, this.graveyardPosition, this.baseVersion);\n    }\n    /**\n     * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n     *\n     * @returns {module:engine/model/operation/splitoperation~SplitOperation}\n     */\n\n  }, {\n    key: \"getReversed\",\n    value: function getReversed() {\n      // Positions in this method are transformed by this merge operation because the split operation bases on\n      // the context after this merge operation happened (because split operation reverses it).\n      // So we need to acknowledge that the merge operation happened and those positions changed a little.\n      var targetPosition = this.targetPosition._getTransformedByMergeOperation(this);\n\n      var path = this.sourcePosition.path.slice(0, -1);\n\n      var insertionPosition = new Position(this.sourcePosition.root, path)._getTransformedByMergeOperation(this);\n\n      var split = new SplitOperation(targetPosition, this.howMany, this.graveyardPosition, this.baseVersion + 1);\n      split.insertionPosition = insertionPosition;\n      return split;\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_validate\",\n    value: function _validate() {\n      var sourceElement = this.sourcePosition.parent;\n      var targetElement = this.targetPosition.parent; // Validate whether merge operation has correct parameters.\n\n      if (!sourceElement || !sourceElement.is('element') || !sourceElement.parent) {\n        /**\n         * Merge source position is invalid.\n         *\n         * @error merge-operation-source-position-invalid\n         */\n        throw new CKEditorError('merge-operation-source-position-invalid: Merge source position is invalid.');\n      } else if (!targetElement || !targetElement.is('element') || !targetElement.parent) {\n        /**\n         * Merge target position is invalid.\n         *\n         * @error merge-operation-target-position-invalid\n         */\n        throw new CKEditorError('merge-operation-target-position-invalid: Merge target position is invalid.');\n      } else if (this.howMany != sourceElement.maxOffset) {\n        /**\n         * Merge operation specifies wrong number of nodes to move.\n         *\n         * @error merge-operation-how-many-invalid\n         */\n        throw new CKEditorError('merge-operation-how-many-invalid: Merge operation specifies wrong number of nodes to move.');\n      }\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_execute\",\n    value: function _execute() {\n      var mergedElement = this.sourcePosition.parent;\n\n      var sourceRange = Range._createIn(mergedElement);\n\n      _move(sourceRange, this.targetPosition);\n\n      _move(Range._createOn(mergedElement), this.graveyardPosition);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = _get(_getPrototypeOf(MergeOperation.prototype), \"toJSON\", this).call(this);\n\n      json.sourcePosition = json.sourcePosition.toJSON();\n      json.targetPosition = json.targetPosition.toJSON();\n      json.graveyardPosition = json.graveyardPosition.toJSON();\n      return json;\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"type\",\n    get: function get() {\n      return 'merge';\n    }\n    /**\n     * Position before the merged element (which will be deleted).\n     *\n     * @readonly\n     * @type {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"deletionPosition\",\n    get: function get() {\n      return new Position(this.sourcePosition.root, this.sourcePosition.path.slice(0, -1));\n    }\n    /**\n     * Artificial range that contains all the nodes from the merged element that will be moved to {@link ~MergeOperation#sourcePosition}.\n     * The range starts at {@link ~MergeOperation#sourcePosition} and ends in the same parent, at `POSITIVE_INFINITY` offset.\n     *\n     * @readonly\n     * @type {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"movedRange\",\n    get: function get() {\n      var end = this.sourcePosition.getShiftedBy(Number.POSITIVE_INFINITY);\n      return new Range(this.sourcePosition, end);\n    }\n  }], [{\n    key: \"fromJSON\",\n\n    /**\n     * Creates `MergeOperation` object from deserilized object, i.e. from parsed JSON string.\n     *\n     * @param {Object} json Deserialized JSON object.\n     * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n     * @returns {module:engine/model/operation/mergeoperation~MergeOperation}\n     */\n    value: function fromJSON(json, document) {\n      var sourcePosition = Position.fromJSON(json.sourcePosition, document);\n      var targetPosition = Position.fromJSON(json.targetPosition, document);\n      var graveyardPosition = Position.fromJSON(json.graveyardPosition, document);\n      return new this(sourcePosition, json.howMany, targetPosition, graveyardPosition, json.baseVersion);\n    }\n  }, {\n    key: \"className\",\n    get: function get() {\n      return 'MergeOperation';\n    }\n  }]);\n\n  return MergeOperation;\n}(Operation);\n\nexport { MergeOperation as default };","function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\nimport Matcher from '../view/matcher';\nimport ModelRange from '../model/range';\nimport { cloneDeep } from 'lodash-es';\n/**\n * Contains {@link module:engine/view/view view} to {@link module:engine/model/model model} converters for\n * {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher}.\n *\n * @module engine/conversion/upcast-converters\n */\n\n/**\n * View element to model element conversion helper.\n *\n * This conversion results in creating a model element. For example, view `<p>Foo</p>` becomes `<paragraph>Foo</paragraph>` in the model.\n *\n * Keep in mind that the element will be inserted only if it is allowed by {@link module:engine/model/schema~Schema schema} configuration.\n *\n *\t\tupcastElementToElement( { view: 'p', model: 'paragraph' } );\n *\n *\t\tupcastElementToElement( { view: 'p', model: 'paragraph', converterPriority: 'high' } );\n *\n *\t\tupcastElementToElement( {\n *\t\t\tview: {\n *\t\t\t\tname: 'p',\n *\t\t\t\tclasses: 'fancy'\n *\t\t\t},\n *\t\t\tmodel: 'fancyParagraph'\n *\t\t} );\n *\n *\t\tupcastElementToElement( {\n * \t\t\tview: {\n *\t\t\t\tname: 'p',\n *\t\t\t\tclasses: 'heading'\n * \t\t\t},\n * \t\t\tmodel: ( viewElement, modelWriter ) => {\n * \t\t\t\treturn modelWriter.createElement( 'heading', { level: viewElement.getAttribute( 'data-level' ) } );\n * \t\t\t}\n * \t\t} );\n *\n * See {@link module:engine/conversion/conversion~Conversion#for} to learn how to add converter to conversion process.\n *\n * @param {Object} config Conversion configuration.\n * @param {module:engine/view/matcher~MatcherPattern} config.view Pattern matching all view elements which should be converted.\n * @param {String|module:engine/model/element~Element|Function} config.model Name of the model element, a model element\n * instance or a function that takes a view element and returns a model element. The model element will be inserted in the model.\n * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n * @returns {Function} Conversion helper.\n */\n\nexport function upcastElementToElement(config) {\n  config = cloneDeep(config);\n\n  var converter = _prepareToElementConverter(config);\n\n  var elementName = _getViewElementNameFromConfig(config);\n\n  var eventName = elementName ? 'element:' + elementName : 'element';\n  return function (dispatcher) {\n    dispatcher.on(eventName, converter, {\n      priority: config.converterPriority || 'normal'\n    });\n  };\n}\n/**\n * View element to model attribute conversion helper.\n *\n * This conversion results in setting an attribute on a model node. For example, view `<strong>Foo</strong>` becomes\n * `Foo` {@link module:engine/model/text~Text model text node} with `bold` attribute set to `true`.\n *\n * This helper is meant to set a model attribute on all the elements that are inside the converted element:\n *\n *\t\t<strong>Foo</strong>   -->   <strong><p>Foo</p></strong>   -->   <paragraph><$text bold=\"true\">Foo</$text></paragraph>\n *\n * Above is a sample of HTML code, that goes through autoparagraphing (first step) and then is converted (second step).\n * Even though `<strong>` is over `<p>` element, `bold=\"true\"` was added to the text. See\n * {@link module:engine/conversion/upcast-converters~upcastAttributeToAttribute} for comparison.\n *\n * Keep in mind that the attribute will be set only if it is allowed by {@link module:engine/model/schema~Schema schema} configuration.\n *\n *\t\tupcastElementToAttribute( { view: 'strong', model: 'bold' } );\n *\n *\t\tupcastElementToAttribute( { view: 'strong', model: 'bold', converterPriority: 'high' } );\n *\n *\t\tupcastElementToAttribute( {\n *\t\t\tview: {\n *\t\t\t\tname: 'span',\n *\t\t\t\tclasses: 'bold'\n *\t\t\t},\n *\t\t\tmodel: 'bold'\n *\t\t} );\n *\n *\t\tupcastElementToAttribute( {\n *\t\t\tview: {\n *\t\t\t\tname: 'span',\n *\t\t\t\tclasses: [ 'styled', 'styled-dark' ]\n *\t\t\t},\n *\t\t\tmodel: {\n *\t\t\t\tkey: 'styled',\n *\t\t\t\tvalue: 'dark'\n *\t\t\t}\n *\t\t} );\n *\n * \t\tupcastElementToAttribute( {\n *\t\t\tview: {\n *\t\t\t\tname: 'span',\n *\t\t\t\tstyles: {\n *\t\t\t\t\t'font-size': /[\\s\\S]+/\n *\t\t\t\t}\n *\t\t\t},\n *\t\t\tmodel: {\n *\t\t\t\tkey: 'fontSize',\n *\t\t\t\tvalue: viewElement => {\n *\t\t\t\t\tconst fontSize = viewElement.getStyle( 'font-size' );\n *\t\t\t\t\tconst value = fontSize.substr( 0, fontSize.length - 2 );\n *\n *\t\t\t\t\tif ( value <= 10 ) {\n *\t\t\t\t\t\treturn 'small';\n *\t\t\t\t\t} else if ( value > 12 ) {\n *\t\t\t\t\t\treturn 'big';\n *\t\t\t\t\t}\n *\n *\t\t\t\t\treturn null;\n *\t\t\t\t}\n *\t\t\t}\n *\t\t} );\n *\n * See {@link module:engine/conversion/conversion~Conversion#for} to learn how to add converter to conversion process.\n *\n * @param {Object} config Conversion configuration.\n * @param {module:engine/view/matcher~MatcherPattern} config.view Pattern matching all view elements which should be converted.\n * @param {String|Object} config.model Model attribute key or an object with `key` and `value` properties, describing\n * the model attribute. `value` property may be set as a function that takes a view element and returns the value.\n * If `String` is given, the model attribute value will be set to `true`.\n * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n * @returns {Function} Conversion helper.\n */\n\nexport function upcastElementToAttribute(config) {\n  config = cloneDeep(config);\n\n  _normalizeModelAttributeConfig(config);\n\n  var converter = _prepareToAttributeConverter(config, false);\n\n  var elementName = _getViewElementNameFromConfig(config);\n\n  var eventName = elementName ? 'element:' + elementName : 'element';\n  return function (dispatcher) {\n    dispatcher.on(eventName, converter, {\n      priority: config.converterPriority || 'normal'\n    });\n  };\n}\n/**\n * View attribute to model attribute conversion helper.\n *\n * This conversion results in setting an attribute on a model node. For example, view `<img src=\"foo.jpg\"></img>` becomes\n * `<image source=\"foo.jpg\"></image>` in the model.\n *\n * This helper is meant to convert view attributes from view elements which got converted to the model, so the view attribute\n * is set only on the corresponding model node:\n *\n *\t\t<div class=\"dark\"><div>foo</div></div>    -->    <div dark=\"true\"><div>foo</div></div>\n *\n * Above, `class=\"dark\"` attribute is added only to the `<div>` elements that has it. This is in contrary to\n * {@link module:engine/conversion/upcast-converters~upcastElementToAttribute} which sets attributes for all the children in the model:\n *\n *\t\t<strong>Foo</strong>   -->   <strong><p>Foo</p></strong>   -->   <paragraph><$text bold=\"true\">Foo</$text></paragraph>\n *\n * Above is a sample of HTML code, that goes through autoparagraphing (first step) and then is converted (second step).\n * Even though `<strong>` is over `<p>` element, `bold=\"true\"` was added to the text.\n *\n * Keep in mind that the attribute will be set only if it is allowed by {@link module:engine/model/schema~Schema schema} configuration.\n *\n *\t\tupcastAttributeToAttribute( { view: 'src', model: 'source' } );\n *\n *\t\tupcastAttributeToAttribute( { view: { key: 'src' }, model: 'source' } );\n *\n *\t\tupcastAttributeToAttribute( { view: { key: 'src' }, model: 'source', converterPriority: 'normal' } );\n *\n *\t\tupcastAttributeToAttribute( {\n *\t\t\tview: {\n *\t\t\t\tkey: 'data-style',\n *\t\t\t\tvalue: /[\\s\\S]+/\n *\t\t\t},\n *\t\t\tmodel: 'styled'\n *\t\t} );\n *\n *\t\tupcastAttributeToAttribute( {\n *\t\t\tview: {\n *\t\t\t\tname: 'img',\n *\t\t\t\tkey: 'class',\n *\t\t\t\tvalue: 'styled-dark'\n *\t\t\t},\n *\t\t\tmodel: {\n *\t\t\t\tkey: 'styled',\n *\t\t\t\tvalue: 'dark'\n *\t\t\t}\n *\t\t} );\n *\n *\t\tupcastAttributeToAttribute( {\n *\t\t\tview: {\n *\t\t\t\tkey: 'class',\n *\t\t\t\tvalue: /styled-[\\S]+/\n *\t\t\t},\n *\t\t\tmodel: {\n *\t\t\t\tkey: 'styled'\n *\t\t\t\tvalue: viewElement => {\n *\t\t\t\t\tconst regexp = /styled-([\\S]+)/;\n *\t\t\t\t\tconst match = viewElement.getAttribute( 'class' ).match( regexp );\n *\n *\t\t\t\t\treturn match[ 1 ];\n *\t\t\t\t}\n *\t\t\t}\n *\t\t} );\n *\n * See {@link module:engine/conversion/conversion~Conversion#for} to learn how to add converter to conversion process.\n *\n * @param {Object} config Conversion configuration.\n * @param {String|Object} config.view Specifies which view attribute will be converted. If a `String` is passed,\n * attributes with given key will be converted. If an `Object` is passed, it must have a required `key` property,\n * specifying view attribute key, and may have an optional `value` property, specifying view attribute value and optional `name`\n * property specifying a view element name from/on which the attribute should be converted. `value` can be given as a `String`,\n * a `RegExp` or a function callback, that takes view attribute value as the only parameter and returns `Boolean`.\n * @param {String|Object} config.model Model attribute key or an object with `key` and `value` properties, describing\n * the model attribute. `value` property may be set as a function that takes a view element and returns the value.\n * If `String` is given, the model attribute value will be same as view attribute value.\n * @param {module:utils/priorities~PriorityString} [config.converterPriority='low'] Converter priority.\n * @returns {Function} Conversion helper.\n */\n\nexport function upcastAttributeToAttribute(config) {\n  config = cloneDeep(config);\n  var viewKey = null;\n\n  if (typeof config.view == 'string' || config.view.key) {\n    viewKey = _normalizeViewAttributeKeyValueConfig(config);\n  }\n\n  _normalizeModelAttributeConfig(config, viewKey);\n\n  var converter = _prepareToAttributeConverter(config, true);\n\n  return function (dispatcher) {\n    dispatcher.on('element', converter, {\n      priority: config.converterPriority || 'low'\n    });\n  };\n}\n/**\n * View element to model marker conversion helper.\n *\n * This conversion results in creating a model marker. For example, if the marker was stored in a view as an element:\n * `<p>Fo<span data-marker=\"comment\" data-comment-id=\"7\"></span>o</p><p>B<span data-marker=\"comment\" data-comment-id=\"7\"></span>ar</p>`,\n * after the conversion is done, the marker will be available in\n * {@link module:engine/model/model~Model#markers model document markers}.\n *\n *\t\tupcastElementToMarker( { view: 'marker-search', model: 'search' } );\n *\n *\t\tupcastElementToMarker( { view: 'marker-search', model: 'search', converterPriority: 'high' } );\n *\n *\t\tupcastElementToMarker( {\n *\t\t\tview: 'marker-search',\n *\t\t\tmodel: viewElement => 'comment:' + viewElement.getAttribute( 'data-comment-id' )\n *\t\t} );\n *\n *\t\tupcastElementToMarker( {\n *\t\t\tview: {\n *\t\t\t\tname: 'span',\n *\t\t\t\tattributes: {\n *\t\t\t\t\t'data-marker': 'search'\n *\t\t\t\t}\n *\t\t\t},\n *\t\t\tmodel: 'search'\n *\t\t} );\n *\n * See {@link module:engine/conversion/conversion~Conversion#for} to learn how to add converter to conversion process.\n *\n * @param {Object} config Conversion configuration.\n * @param {module:engine/view/matcher~MatcherPattern} config.view Pattern matching all view elements which should be converted.\n * @param {String|Function} config.model Name of the model marker, or a function that takes a view element and returns\n * a model marker name.\n * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n * @returns {Function} Conversion helper.\n */\n\nexport function upcastElementToMarker(config) {\n  config = cloneDeep(config);\n\n  _normalizeToMarkerConfig(config);\n\n  return upcastElementToElement(config);\n} // Helper function for from-view-element conversion. Checks if `config.view` directly specifies converted view element's name\n// and if so, returns it.\n//\n// @param {Object} config Conversion config.\n// @returns {String|null} View element name or `null` if name is not directly set.\n\nfunction _getViewElementNameFromConfig(config) {\n  if (typeof config.view == 'string') {\n    return config.view;\n  }\n\n  if (_typeof(config.view) == 'object' && typeof config.view.name == 'string') {\n    return config.view.name;\n  }\n\n  return null;\n} // Helper for to-model-element conversion. Takes a config object and returns a proper converter function.\n//\n// @param {Object} config Conversion configuration.\n// @returns {Function} View to model converter.\n\n\nfunction _prepareToElementConverter(config) {\n  var matcher = new Matcher(config.view);\n  return function (evt, data, conversionApi) {\n    // This will be usually just one pattern but we support matchers with many patterns too.\n    var match = matcher.match(data.viewItem); // If there is no match, this callback should not do anything.\n\n    if (!match) {\n      return;\n    } // Force consuming element's name.\n\n\n    match.match.name = true; // Create model element basing on config.\n\n    var modelElement = _getModelElement(config.model, data.viewItem, conversionApi.writer); // Do not convert if element building function returned falsy value.\n\n\n    if (!modelElement) {\n      return;\n    } // When element was already consumed then skip it.\n\n\n    if (!conversionApi.consumable.test(data.viewItem, match.match)) {\n      return;\n    } // Find allowed parent for element that we are going to insert.\n    // If current parent does not allow to insert element but one of the ancestors does\n    // then split nodes to allowed parent.\n\n\n    var splitResult = conversionApi.splitToAllowedParent(modelElement, data.modelCursor); // When there is no split result it means that we can't insert element to model tree, so let's skip it.\n\n    if (!splitResult) {\n      return;\n    } // Insert element on allowed position.\n\n\n    conversionApi.writer.insert(modelElement, splitResult.position); // Convert children and insert to element.\n\n    var childrenResult = conversionApi.convertChildren(data.viewItem, conversionApi.writer.createPositionAt(modelElement, 0)); // Consume appropriate value from consumable values list.\n\n    conversionApi.consumable.consume(data.viewItem, match.match); // Set conversion result range.\n\n    data.modelRange = new ModelRange( // Range should start before inserted element\n    conversionApi.writer.createPositionBefore(modelElement), // Should end after but we need to take into consideration that children could split our\n    // element, so we need to move range after parent of the last converted child.\n    // before: <allowed>[]</allowed>\n    // after: <allowed>[<converted><child></child></converted><child></child><converted>]</converted></allowed>\n    conversionApi.writer.createPositionAfter(childrenResult.modelCursor.parent)); // Now we need to check where the modelCursor should be.\n    // If we had to split parent to insert our element then we want to continue conversion inside split parent.\n    //\n    // before: <allowed><notAllowed>[]</notAllowed></allowed>\n    // after:  <allowed><notAllowed></notAllowed><converted></converted><notAllowed>[]</notAllowed></allowed>\n\n    if (splitResult.cursorParent) {\n      data.modelCursor = conversionApi.writer.createPositionAt(splitResult.cursorParent, 0); // Otherwise just continue after inserted element.\n    } else {\n      data.modelCursor = data.modelRange.end;\n    }\n  };\n} // Helper function for upcasting-to-element converter. Takes the model configuration, the converted view element\n// and a writer instance and returns a model element instance to be inserted in the model.\n//\n// @param {String|Function|module:engine/model/element~Element} model Model conversion configuration.\n// @param {module:engine/view/node~Node} input The converted view node.\n// @param {module:engine/model/writer~Writer} writer A writer instance to use to create the model element.\n\n\nfunction _getModelElement(model, input, writer) {\n  if (model instanceof Function) {\n    return model(input, writer);\n  } else {\n    return writer.createElement(model);\n  }\n} // Helper function view-attribute-to-model-attribute helper. Normalizes `config.view` which was set as `String` or\n// as an `Object` with `key`, `value` and `name` properties. Normalized `config.view` has is compatible with\n// {@link module:engine/view/matcher~MatcherPattern}.\n//\n// @param {Object} config Conversion config.\n// @returns {String} Key of the converted view attribute.\n\n\nfunction _normalizeViewAttributeKeyValueConfig(config) {\n  if (typeof config.view == 'string') {\n    config.view = {\n      key: config.view\n    };\n  }\n\n  var key = config.view.key;\n  var normalized;\n\n  if (key == 'class' || key == 'style') {\n    var keyName = key == 'class' ? 'classes' : 'styles';\n    normalized = _defineProperty({}, keyName, config.view.value);\n  } else {\n    var value = typeof config.view.value == 'undefined' ? /[\\s\\S]*/ : config.view.value;\n    normalized = {\n      attributes: _defineProperty({}, key, value)\n    };\n  }\n\n  if (config.view.name) {\n    normalized.name = config.view.name;\n  }\n\n  config.view = normalized;\n  return key;\n} // Helper function that normalizes `config.model` in from-model-attribute conversion. `config.model` can be set\n// as a `String`, an `Object` with only `key` property or an `Object` with `key` and `value` properties. Normalized\n// `config.model` is an `Object` with `key` and `value` properties.\n//\n// @param {Object} config Conversion config.\n// @param {String} viewAttributeKeyToCopy Key of the converted view attribute. If it is set, model attribute value\n// will be equal to view attribute value.\n\n\nfunction _normalizeModelAttributeConfig(config) {\n  var viewAttributeKeyToCopy = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var defaultModelValue = viewAttributeKeyToCopy === null ? true : function (viewElement) {\n    return viewElement.getAttribute(viewAttributeKeyToCopy);\n  };\n  var key = _typeof(config.model) != 'object' ? config.model : config.model.key;\n  var value = _typeof(config.model) != 'object' || typeof config.model.value == 'undefined' ? defaultModelValue : config.model.value;\n  config.model = {\n    key: key,\n    value: value\n  };\n} // Helper for to-model-attribute conversion. Takes the model attribute name and conversion configuration and returns\n// a proper converter function.\n//\n// @param {String} modelAttributeKey The key of the model attribute to set on a model node.\n// @param {Object|Array.<Object>} config Conversion configuration. It is possible to provide multiple configurations in an array.\n// @param {Boolean} shallow If set to `true` the attribute will be set only on top-level nodes. Otherwise, it will be set\n// on all elements in the range.\n\n\nfunction _prepareToAttributeConverter(config, shallow) {\n  var matcher = new Matcher(config.view);\n  return function (evt, data, conversionApi) {\n    var match = matcher.match(data.viewItem); // If there is no match, this callback should not do anything.\n\n    if (!match) {\n      return;\n    }\n\n    var modelKey = config.model.key;\n    var modelValue = typeof config.model.value == 'function' ? config.model.value(data.viewItem) : config.model.value; // Do not convert if attribute building function returned falsy value.\n\n    if (modelValue === null) {\n      return;\n    }\n\n    if (_onlyViewNameIsDefined(config)) {\n      match.match.name = true;\n    } else {\n      // Do not test or consume `name` consumable.\n      delete match.match.name;\n    } // Try to consume appropriate values from consumable values list.\n\n\n    if (!conversionApi.consumable.test(data.viewItem, match.match)) {\n      return;\n    } // Since we are converting to attribute we need an range on which we will set the attribute.\n    // If the range is not created yet, we will create it.\n\n\n    if (!data.modelRange) {\n      // Convert children and set conversion result as a current data.\n      data = Object.assign(data, conversionApi.convertChildren(data.viewItem, data.modelCursor));\n    } // Set attribute on current `output`. `Schema` is checked inside this helper function.\n\n\n    var attributeWasSet = _setAttributeOn(data.modelRange, {\n      key: modelKey,\n      value: modelValue\n    }, shallow, conversionApi);\n\n    if (attributeWasSet) {\n      conversionApi.consumable.consume(data.viewItem, match.match);\n    }\n  };\n} // Helper function that checks if element name should be consumed in attribute converters.\n//\n// @param {Object} config Conversion config.\n// @returns {Boolean}\n\n\nfunction _onlyViewNameIsDefined(config) {\n  if (_typeof(config.view) == 'object' && !_getViewElementNameFromConfig(config)) {\n    return false;\n  }\n\n  return !config.view.classes && !config.view.attributes && !config.view.styles;\n} // Helper function for to-model-attribute converter. Sets model attribute on given range. Checks {@link module:engine/model/schema~Schema}\n// to ensure proper model structure.\n//\n// @param {module:engine/model/range~Range} modelRange Model range on which attribute should be set.\n// @param {Object} modelAttribute Model attribute to set.\n// @param {Object} conversionApi Conversion API.\n// @param {Boolean} shallow If set to `true` the attribute will be set only on top-level nodes. Otherwise, it will be set\n// on all elements in the range.\n// @returns {Boolean} `true` if attribute was set on at least one node from given `modelRange`.\n\n\nfunction _setAttributeOn(modelRange, modelAttribute, shallow, conversionApi) {\n  var result = false; // Set attribute on each item in range according to Schema.\n\n  var _arr = Array.from(modelRange.getItems({\n    shallow: shallow\n  }));\n\n  for (var _i = 0; _i < _arr.length; _i++) {\n    var node = _arr[_i];\n\n    if (conversionApi.schema.checkAttribute(node, modelAttribute.key)) {\n      conversionApi.writer.setAttribute(modelAttribute.key, modelAttribute.value, node);\n      result = true;\n    }\n  }\n\n  return result;\n} // Helper function for upcasting-to-marker conversion. Takes the config in a format requested by `upcastElementToMarker()`\n// function and converts it to a format that is supported by `upcastElementToElement()` function.\n//\n// @param {Object} config Conversion configuration.\n\n\nfunction _normalizeToMarkerConfig(config) {\n  var oldModel = config.model;\n\n  config.model = function (viewElement, modelWriter) {\n    var markerName = typeof oldModel == 'string' ? oldModel : oldModel(viewElement);\n    return modelWriter.createElement('$marker', {\n      'data-name': markerName\n    });\n  };\n}\n/**\n * Function factory, creates a converter that converts {@link module:engine/view/documentfragment~DocumentFragment view document fragment}\n * or all children of {@link module:engine/view/element~Element} into\n * {@link module:engine/model/documentfragment~DocumentFragment model document fragment}.\n * This is the \"entry-point\" converter for upcast (view to model conversion). This converter starts the conversion of all children\n * of passed view document fragment. Those children {@link module:engine/view/node~Node view nodes} are then handled by other converters.\n *\n * This also a \"default\", last resort converter for all view elements that has not been converted by other converters.\n * When a view element is being converted to the model but it does not have converter specified, that view element\n * will be converted to {@link module:engine/model/documentfragment~DocumentFragment model document fragment} and returned.\n *\n * @returns {Function} Universal converter for view {@link module:engine/view/documentfragment~DocumentFragment fragments} and\n * {@link module:engine/view/element~Element elements} that returns\n * {@link module:engine/model/documentfragment~DocumentFragment model fragment} with children of converted view item.\n */\n\n\nexport function convertToModelFragment() {\n  return function (evt, data, conversionApi) {\n    // Second argument in `consumable.consume` is discarded for ViewDocumentFragment but is needed for ViewElement.\n    if (!data.modelRange && conversionApi.consumable.consume(data.viewItem, {\n      name: true\n    })) {\n      var _conversionApi$conver = conversionApi.convertChildren(data.viewItem, data.modelCursor),\n          modelRange = _conversionApi$conver.modelRange,\n          modelCursor = _conversionApi$conver.modelCursor;\n\n      data.modelRange = modelRange;\n      data.modelCursor = modelCursor;\n    }\n  };\n}\n/**\n * Function factory, creates a converter that converts {@link module:engine/view/text~Text} to {@link module:engine/model/text~Text}.\n *\n * @returns {Function} {@link module:engine/view/text~Text View text} converter.\n */\n\nexport function convertText() {\n  return function (evt, data, conversionApi) {\n    if (conversionApi.schema.checkChild(data.modelCursor, '$text')) {\n      if (conversionApi.consumable.consume(data.viewItem)) {\n        var text = conversionApi.writer.createText(data.viewItem.data);\n        conversionApi.writer.insert(text, data.modelCursor);\n        data.modelRange = ModelRange._createFromPositionAndShift(data.modelCursor, text.offsetSize);\n        data.modelCursor = data.modelRange.end;\n      }\n    }\n  };\n}","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/* globals window, document */\n\n/**\n * @module utils/dom/global\n */\n\n/**\n * A helper (module) giving an access to the global DOM objects such as `window` and\n * `document`. Accessing these objects using this helper allows easy and bulletproof\n * testing, i.e. stubbing native properties:\n *\n *\t\timport global from 'ckeditor5/utils/dom/global.js';\n *\n *\t\t// This stub will work for any code using global module.\n *\t\ttestUtils.sinon.stub( global, 'window', {\n *\t\t\tinnerWidth: 10000\n *\t\t} );\n *\n *\t\tconsole.log( global.window.innerWidth );\n */\nexport default {\n  window: window,\n  document: document\n};","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/element\n */\nimport Node from './node';\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport objectToMap from '@ckeditor/ckeditor5-utils/src/objecttomap';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\nimport Matcher from './matcher';\nimport { isPlainObject } from 'lodash-es';\n/**\n * View element.\n *\n * The editing engine does not define a fixed semantics of its elements (it is \"DTD-free\").\n * This is why the type of the {@link module:engine/view/element~Element} need to\n * be defined by the feature developer. When creating an element you should use one of the following methods:\n *\n * * {@link module:engine/view/downcastwriter~DowncastWriter#createContainerElement `downcastWriter#createContainerElement()`}\n * in order to create a {@link module:engine/view/containerelement~ContainerElement},\n * * {@link module:engine/view/downcastwriter~DowncastWriter#createAttributeElement `downcastWriter#createAttributeElement()`}\n * in order to create a {@link module:engine/view/attributeelement~AttributeElement},\n * * {@link module:engine/view/downcastwriter~DowncastWriter#createEmptyElement `downcastWriter#createEmptyElement()`}\n * in order to create a {@link module:engine/view/emptyelement~EmptyElement}.\n * * {@link module:engine/view/downcastwriter~DowncastWriter#createUIElement `downcastWriter#createUIElement()`}\n * in order to create a {@link module:engine/view/uielement~UIElement}.\n * * {@link module:engine/view/downcastwriter~DowncastWriter#createEditableElement `downcastWriter#createEditableElement()`}\n * in order to create a {@link module:engine/view/editableelement~EditableElement}.\n *\n * Note that for view elements which are not created from the model, like elements from mutations, paste or\n * {@link module:engine/controller/datacontroller~DataController#set data.set} it is not possible to define the type of the element.\n * In such cases the {@link module:engine/view/upcastwriter~UpcastWriter#createElement `UpcastWriter#createElement()`} method\n * should be used to create generic view elements.\n *\n * @extends module:engine/view/node~Node\n */\n\nvar Element =\n/*#__PURE__*/\nfunction (_Node) {\n  _inherits(Element, _Node);\n\n  /**\n   * Creates a view element.\n   *\n   * Attributes can be passed in various formats:\n   *\n   *\t\tnew Element( 'div', { class: 'editor', contentEditable: 'true' } ); // object\n   *\t\tnew Element( 'div', [ [ 'class', 'editor' ], [ 'contentEditable', 'true' ] ] ); // map-like iterator\n   *\t\tnew Element( 'div', mapOfAttributes ); // map\n   *\n   * @protected\n   * @param {String} name Node name.\n   * @param {Object|Iterable} [attrs] Collection of attributes.\n   * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\n   * A list of nodes to be inserted into created element.\n   */\n  function Element(name, attrs, children) {\n    var _this;\n\n    _classCallCheck(this, Element);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Element).call(this));\n    /**\n     * Name of the element.\n     *\n     * @readonly\n     * @member {String}\n     */\n\n    _this.name = name;\n    /**\n     * Map of attributes, where attributes names are keys and attributes values are values.\n     *\n     * @protected\n     * @member {Map} #_attrs\n     */\n\n    _this._attrs = parseAttributes(attrs);\n    /**\n     * Array of child nodes.\n     *\n     * @protected\n     * @member {Array.<module:engine/view/node~Node>}\n     */\n\n    _this._children = [];\n\n    if (children) {\n      _this._insertChild(0, children);\n    }\n    /**\n     * Set of classes associated with element instance.\n     *\n     * @protected\n     * @member {Set}\n     */\n\n\n    _this._classes = new Set();\n\n    if (_this._attrs.has('class')) {\n      // Remove class attribute and handle it by class set.\n      var classString = _this._attrs.get('class');\n\n      parseClasses(_this._classes, classString);\n\n      _this._attrs.delete('class');\n    }\n    /**\n     * Map of styles.\n     *\n     * @protected\n     * @member {Map} module:engine/view/element~Element#_styles\n     */\n\n\n    _this._styles = new Map();\n\n    if (_this._attrs.has('style')) {\n      // Remove style attribute and handle it by styles map.\n      parseInlineStyles(_this._styles, _this._attrs.get('style'));\n\n      _this._attrs.delete('style');\n    }\n    /**\n     * Map of custom properties.\n     * Custom properties can be added to element instance, will be cloned but not rendered into DOM.\n     *\n     * @protected\n     * @member {Map}\n     */\n\n\n    _this._customProperties = new Map();\n    return _this;\n  }\n  /**\n   * Number of element's children.\n   *\n   * @readonly\n   * @type {Number}\n   */\n\n\n  _createClass(Element, [{\n    key: \"is\",\n\n    /**\n     * Checks whether given view tree object is of given type.\n     *\n     * Read more in {@link module:engine/view/node~Node#is}.\n     *\n     * @param {String} type\n     * @param {String} [name] Element name.\n     * @returns {Boolean}\n     */\n    value: function is(type) {\n      var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (!name) {\n        return type == 'element' || type == this.name || _get(_getPrototypeOf(Element.prototype), \"is\", this).call(this, type);\n      } else {\n        return type == 'element' && name == this.name;\n      }\n    }\n    /**\n     * Gets child at the given index.\n     *\n     * @param {Number} index Index of child.\n     * @returns {module:engine/view/node~Node} Child node.\n     */\n\n  }, {\n    key: \"getChild\",\n    value: function getChild(index) {\n      return this._children[index];\n    }\n    /**\n     * Gets index of the given child node. Returns `-1` if child node is not found.\n     *\n     * @param {module:engine/view/node~Node} node Child node.\n     * @returns {Number} Index of the child node.\n     */\n\n  }, {\n    key: \"getChildIndex\",\n    value: function getChildIndex(node) {\n      return this._children.indexOf(node);\n    }\n    /**\n     * Gets child nodes iterator.\n     *\n     * @returns {Iterable.<module:engine/view/node~Node>} Child nodes iterator.\n     */\n\n  }, {\n    key: \"getChildren\",\n    value: function getChildren() {\n      return this._children[Symbol.iterator]();\n    }\n    /**\n     * Returns an iterator that contains the keys for attributes. Order of inserting attributes is not preserved.\n     *\n     * @returns {Iterable.<String>} Keys for attributes.\n     */\n\n  }, {\n    key: \"getAttributeKeys\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function getAttributeKeys() {\n      var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, key;\n\n      return regeneratorRuntime.wrap(function getAttributeKeys$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(this._classes.size > 0)) {\n                _context.next = 3;\n                break;\n              }\n\n              _context.next = 3;\n              return 'class';\n\n            case 3:\n              if (!(this._styles.size > 0)) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 6;\n              return 'style';\n\n            case 6:\n              // This is not an optimal solution because of https://github.com/ckeditor/ckeditor5-engine/issues/454.\n              // It can be simplified to `yield* this._attrs.keys();`.\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _iteratorError = undefined;\n              _context.prev = 9;\n              _iterator = this._attrs.keys()[Symbol.iterator]();\n\n            case 11:\n              if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                _context.next = 18;\n                break;\n              }\n\n              key = _step.value;\n              _context.next = 15;\n              return key;\n\n            case 15:\n              _iteratorNormalCompletion = true;\n              _context.next = 11;\n              break;\n\n            case 18:\n              _context.next = 24;\n              break;\n\n            case 20:\n              _context.prev = 20;\n              _context.t0 = _context[\"catch\"](9);\n              _didIteratorError = true;\n              _iteratorError = _context.t0;\n\n            case 24:\n              _context.prev = 24;\n              _context.prev = 25;\n\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n\n            case 27:\n              _context.prev = 27;\n\n              if (!_didIteratorError) {\n                _context.next = 30;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 30:\n              return _context.finish(27);\n\n            case 31:\n              return _context.finish(24);\n\n            case 32:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, getAttributeKeys, this, [[9, 20, 24, 32], [25,, 27, 31]]);\n    })\n    /**\n     * Returns iterator that iterates over this element's attributes.\n     *\n     * Attributes are returned as arrays containing two items. First one is attribute key and second is attribute value.\n     * This format is accepted by native `Map` object and also can be passed in `Node` constructor.\n     *\n     * @returns {Iterable.<*>}\n     */\n\n  }, {\n    key: \"getAttributes\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function getAttributes() {\n      return regeneratorRuntime.wrap(function getAttributes$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.delegateYield(this._attrs.entries(), \"t0\", 1);\n\n            case 1:\n              if (!(this._classes.size > 0)) {\n                _context2.next = 4;\n                break;\n              }\n\n              _context2.next = 4;\n              return ['class', this.getAttribute('class')];\n\n            case 4:\n              if (!(this._styles.size > 0)) {\n                _context2.next = 7;\n                break;\n              }\n\n              _context2.next = 7;\n              return ['style', this.getAttribute('style')];\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, getAttributes, this);\n    })\n    /**\n     * Gets attribute by key. If attribute is not present - returns undefined.\n     *\n     * @param {String} key Attribute key.\n     * @returns {String|undefined} Attribute value.\n     */\n\n  }, {\n    key: \"getAttribute\",\n    value: function getAttribute(key) {\n      if (key == 'class') {\n        if (this._classes.size > 0) {\n          return _toConsumableArray(this._classes).join(' ');\n        }\n\n        return undefined;\n      }\n\n      if (key == 'style') {\n        if (this._styles.size > 0) {\n          var styleString = '';\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = this._styles[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var _step2$value = _slicedToArray(_step2.value, 2),\n                  property = _step2$value[0],\n                  value = _step2$value[1];\n\n              styleString += \"\".concat(property, \":\").concat(value, \";\");\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                _iterator2.return();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n\n          return styleString;\n        }\n\n        return undefined;\n      }\n\n      return this._attrs.get(key);\n    }\n    /**\n     * Returns a boolean indicating whether an attribute with the specified key exists in the element.\n     *\n     * @param {String} key Attribute key.\n     * @returns {Boolean} `true` if attribute with the specified key exists in the element, false otherwise.\n     */\n\n  }, {\n    key: \"hasAttribute\",\n    value: function hasAttribute(key) {\n      if (key == 'class') {\n        return this._classes.size > 0;\n      }\n\n      if (key == 'style') {\n        return this._styles.size > 0;\n      }\n\n      return this._attrs.has(key);\n    }\n    /**\n     * Checks if this element is similar to other element.\n     * Both elements should have the same name and attributes to be considered as similar. Two similar elements\n     * can contain different set of children nodes.\n     *\n     * @param {module:engine/view/element~Element} otherElement\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isSimilar\",\n    value: function isSimilar(otherElement) {\n      if (!(otherElement instanceof Element)) {\n        return false;\n      } // If exactly the same Element is provided - return true immediately.\n\n\n      if (this === otherElement) {\n        return true;\n      } // Check element name.\n\n\n      if (this.name != otherElement.name) {\n        return false;\n      } // Check number of attributes, classes and styles.\n\n\n      if (this._attrs.size !== otherElement._attrs.size || this._classes.size !== otherElement._classes.size || this._styles.size !== otherElement._styles.size) {\n        return false;\n      } // Check if attributes are the same.\n\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this._attrs[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var _step3$value = _slicedToArray(_step3.value, 2),\n              key = _step3$value[0],\n              value = _step3$value[1];\n\n          if (!otherElement._attrs.has(key) || otherElement._attrs.get(key) !== value) {\n            return false;\n          }\n        } // Check if classes are the same.\n\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = this._classes[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var className = _step4.value;\n\n          if (!otherElement._classes.has(className)) {\n            return false;\n          }\n        } // Check if styles are the same.\n\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = this._styles[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var _step5$value = _slicedToArray(_step5.value, 2),\n              property = _step5$value[0],\n              value = _step5$value[1];\n\n          if (!otherElement._styles.has(property) || otherElement._styles.get(property) !== value) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      return true;\n    }\n    /**\n     * Returns true if class is present.\n     * If more then one class is provided - returns true only when all classes are present.\n     *\n     *\t\telement.hasClass( 'foo' ); // Returns true if 'foo' class is present.\n     *\t\telement.hasClass( 'foo', 'bar' ); // Returns true if 'foo' and 'bar' classes are both present.\n     *\n     * @param {...String} className\n     */\n\n  }, {\n    key: \"hasClass\",\n    value: function hasClass() {\n      for (var _len = arguments.length, className = new Array(_len), _key = 0; _key < _len; _key++) {\n        className[_key] = arguments[_key];\n      }\n\n      for (var _i2 = 0; _i2 < className.length; _i2++) {\n        var name = className[_i2];\n\n        if (!this._classes.has(name)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n    /**\n     * Returns iterator that contains all class names.\n     *\n     * @returns {Iterable.<String>}\n     */\n\n  }, {\n    key: \"getClassNames\",\n    value: function getClassNames() {\n      return this._classes.keys();\n    }\n    /**\n     * Returns style value for given property.\n     * Undefined is returned if style does not exist.\n     *\n     * @param {String} property\n     * @returns {String|undefined}\n     */\n\n  }, {\n    key: \"getStyle\",\n    value: function getStyle(property) {\n      return this._styles.get(property);\n    }\n    /**\n     * Returns iterator that contains all style names.\n     *\n     * @returns {Iterable.<String>}\n     */\n\n  }, {\n    key: \"getStyleNames\",\n    value: function getStyleNames() {\n      return this._styles.keys();\n    }\n    /**\n     * Returns true if style keys are present.\n     * If more then one style property is provided - returns true only when all properties are present.\n     *\n     *\t\telement.hasStyle( 'color' ); // Returns true if 'border-top' style is present.\n     *\t\telement.hasStyle( 'color', 'border-top' ); // Returns true if 'color' and 'border-top' styles are both present.\n     *\n     * @param {...String} property\n     */\n\n  }, {\n    key: \"hasStyle\",\n    value: function hasStyle() {\n      for (var _len2 = arguments.length, property = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        property[_key2] = arguments[_key2];\n      }\n\n      for (var _i3 = 0; _i3 < property.length; _i3++) {\n        var name = property[_i3];\n\n        if (!this._styles.has(name)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n    /**\n     * Returns ancestor element that match specified pattern.\n     * Provided patterns should be compatible with {@link module:engine/view/matcher~Matcher Matcher} as it is used internally.\n     *\n     * @see module:engine/view/matcher~Matcher\n     * @param {Object|String|RegExp|Function} patterns Patterns used to match correct ancestor.\n     * See {@link module:engine/view/matcher~Matcher}.\n     * @returns {module:engine/view/element~Element|null} Found element or `null` if no matching ancestor was found.\n     */\n\n  }, {\n    key: \"findAncestor\",\n    value: function findAncestor() {\n      for (var _len3 = arguments.length, patterns = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        patterns[_key3] = arguments[_key3];\n      }\n\n      var matcher = _construct(Matcher, patterns);\n\n      var parent = this.parent;\n\n      while (parent) {\n        if (matcher.match(parent)) {\n          return parent;\n        }\n\n        parent = parent.parent;\n      }\n\n      return null;\n    }\n    /**\n     * Returns the custom property value for the given key.\n     *\n     * @param {String|Symbol} key\n     * @returns {*}\n     */\n\n  }, {\n    key: \"getCustomProperty\",\n    value: function getCustomProperty(key) {\n      return this._customProperties.get(key);\n    }\n    /**\n     * Returns an iterator which iterates over this element's custom properties.\n     * Iterator provides `[ key, value ]` pairs for each stored property.\n     *\n     * @returns {Iterable.<*>}\n     */\n\n  }, {\n    key: \"getCustomProperties\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function getCustomProperties() {\n      return regeneratorRuntime.wrap(function getCustomProperties$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              return _context3.delegateYield(this._customProperties.entries(), \"t0\", 1);\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, getCustomProperties, this);\n    })\n    /**\n     * Returns identity string based on element's name, styles, classes and other attributes.\n     * Two elements that {@link #isSimilar are similar} will have same identity string.\n     * It has the following format:\n     *\n     *\t\t'name class=\"class1,class2\" style=\"style1:value1;style2:value2\" attr1=\"val1\" attr2=\"val2\"'\n    \t *\n     * For example:\n     *\n     *\t\tconst element = writer.createContainerElement( 'foo', {\n     *\t\t\tbanana: '10',\n     *\t\t\tapple: '20',\n     *\t\t\tstyle: 'color: red; border-color: white;',\n     *\t\t\tclass: 'baz'\n     *\t\t} );\n     *\n     *\t\t// returns 'foo class=\"baz\" style=\"border-color:white;color:red\" apple=\"20\" banana=\"10\"'\n     *\t\telement.getIdentity();\n     *\n     * NOTE: Classes, styles and other attributes are sorted alphabetically.\n     *\n     * @returns {String}\n     */\n\n  }, {\n    key: \"getIdentity\",\n    value: function getIdentity() {\n      var classes = Array.from(this._classes).sort().join(',');\n      var styles = Array.from(this._styles).map(function (i) {\n        return \"\".concat(i[0], \":\").concat(i[1]);\n      }).sort().join(';');\n      var attributes = Array.from(this._attrs).map(function (i) {\n        return \"\".concat(i[0], \"=\\\"\").concat(i[1], \"\\\"\");\n      }).sort().join(' ');\n      return this.name + (classes == '' ? '' : \" class=\\\"\".concat(classes, \"\\\"\")) + (styles == '' ? '' : \" style=\\\"\".concat(styles, \"\\\"\")) + (attributes == '' ? '' : \" \".concat(attributes));\n    }\n    /**\n     * Clones provided element.\n     *\n     * @protected\n     * @param {Boolean} [deep=false] If set to `true` clones element and all its children recursively. When set to `false`,\n     * element will be cloned without any children.\n     * @returns {module:engine/view/element~Element} Clone of this element.\n     */\n\n  }, {\n    key: \"_clone\",\n    value: function _clone() {\n      var deep = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var childrenClone = [];\n\n      if (deep) {\n        var _iteratorNormalCompletion6 = true;\n        var _didIteratorError6 = false;\n        var _iteratorError6 = undefined;\n\n        try {\n          for (var _iterator6 = this.getChildren()[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n            var child = _step6.value;\n            childrenClone.push(child._clone(deep));\n          }\n        } catch (err) {\n          _didIteratorError6 = true;\n          _iteratorError6 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n              _iterator6.return();\n            }\n          } finally {\n            if (_didIteratorError6) {\n              throw _iteratorError6;\n            }\n          }\n        }\n      } // ContainerElement and AttributeElement should be also cloned properly.\n\n\n      var cloned = new this.constructor(this.name, this._attrs, childrenClone); // Classes and styles are cloned separately - this solution is faster than adding them back to attributes and\n      // parse once again in constructor.\n\n      cloned._classes = new Set(this._classes);\n      cloned._styles = new Map(this._styles); // Clone custom properties.\n\n      cloned._customProperties = new Map(this._customProperties); // Clone filler offset method.\n      // We can't define this method in a prototype because it's behavior which\n      // is changed by e.g. toWidget() function from ckeditor5-widget. Perhaps this should be one of custom props.\n\n      cloned.getFillerOffset = this.getFillerOffset;\n      return cloned;\n    }\n    /**\n     * {@link module:engine/view/element~Element#_insertChild Insert} a child node or a list of child nodes at the end of this node\n     * and sets the parent of these nodes to this element.\n     *\n     * @see module:engine/view/downcastwriter~DowncastWriter#insert\n     * @protected\n     * @param {module:engine/view/item~Item|Iterable.<module:engine/view/item~Item>} items Items to be inserted.\n     * @fires module:engine/view/node~Node#change\n     * @returns {Number} Number of appended nodes.\n     */\n\n  }, {\n    key: \"_appendChild\",\n    value: function _appendChild(items) {\n      return this._insertChild(this.childCount, items);\n    }\n    /**\n     * Inserts a child node or a list of child nodes on the given index and sets the parent of these nodes to\n     * this element.\n     *\n     * @see module:engine/view/downcastwriter~DowncastWriter#insert\n     * @protected\n     * @param {Number} index Position where nodes should be inserted.\n     * @param {module:engine/view/item~Item|Iterable.<module:engine/view/item~Item>} items Items to be inserted.\n     * @fires module:engine/view/node~Node#change\n     * @returns {Number} Number of inserted nodes.\n     */\n\n  }, {\n    key: \"_insertChild\",\n    value: function _insertChild(index, items) {\n      this._fireChange('children', this);\n\n      var count = 0;\n      var nodes = normalize(items);\n      var _iteratorNormalCompletion7 = true;\n      var _didIteratorError7 = false;\n      var _iteratorError7 = undefined;\n\n      try {\n        for (var _iterator7 = nodes[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n          var node = _step7.value;\n\n          // If node that is being added to this element is already inside another element, first remove it from the old parent.\n          if (node.parent !== null) {\n            node._remove();\n          }\n\n          node.parent = this;\n\n          this._children.splice(index, 0, node);\n\n          index++;\n          count++;\n        }\n      } catch (err) {\n        _didIteratorError7 = true;\n        _iteratorError7 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n            _iterator7.return();\n          }\n        } finally {\n          if (_didIteratorError7) {\n            throw _iteratorError7;\n          }\n        }\n      }\n\n      return count;\n    }\n    /**\n     * Removes number of child nodes starting at the given index and set the parent of these nodes to `null`.\n     *\n     * @see module:engine/view/downcastwriter~DowncastWriter#remove\n     * @protected\n     * @param {Number} index Number of the first node to remove.\n     * @param {Number} [howMany=1] Number of nodes to remove.\n     * @fires module:engine/view/node~Node#change\n     * @returns {Array.<module:engine/view/node~Node>} The array of removed nodes.\n     */\n\n  }, {\n    key: \"_removeChildren\",\n    value: function _removeChildren(index) {\n      var howMany = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n      this._fireChange('children', this);\n\n      for (var i = index; i < index + howMany; i++) {\n        this._children[i].parent = null;\n      }\n\n      return this._children.splice(index, howMany);\n    }\n    /**\n     * Adds or overwrite attribute with a specified key and value.\n     *\n     * @see module:engine/view/downcastwriter~DowncastWriter#setAttribute\n     * @protected\n     * @param {String} key Attribute key.\n     * @param {String} value Attribute value.\n     * @fires module:engine/view/node~Node#change\n     */\n\n  }, {\n    key: \"_setAttribute\",\n    value: function _setAttribute(key, value) {\n      value = String(value);\n\n      this._fireChange('attributes', this);\n\n      if (key == 'class') {\n        parseClasses(this._classes, value);\n      } else if (key == 'style') {\n        parseInlineStyles(this._styles, value);\n      } else {\n        this._attrs.set(key, value);\n      }\n    }\n    /**\n     * Removes attribute from the element.\n     *\n     * @see module:engine/view/downcastwriter~DowncastWriter#removeAttribute\n     * @protected\n     * @param {String} key Attribute key.\n     * @returns {Boolean} Returns true if an attribute existed and has been removed.\n     * @fires module:engine/view/node~Node#change\n     */\n\n  }, {\n    key: \"_removeAttribute\",\n    value: function _removeAttribute(key) {\n      this._fireChange('attributes', this); // Remove class attribute.\n\n\n      if (key == 'class') {\n        if (this._classes.size > 0) {\n          this._classes.clear();\n\n          return true;\n        }\n\n        return false;\n      } // Remove style attribute.\n\n\n      if (key == 'style') {\n        if (this._styles.size > 0) {\n          this._styles.clear();\n\n          return true;\n        }\n\n        return false;\n      } // Remove other attributes.\n\n\n      return this._attrs.delete(key);\n    }\n    /**\n     * Adds specified class.\n     *\n     *\t\telement._addClass( 'foo' ); // Adds 'foo' class.\n     *\t\telement._addClass( [ 'foo', 'bar' ] ); // Adds 'foo' and 'bar' classes.\n     *\n     * @see module:engine/view/downcastwriter~DowncastWriter#addClass\n     * @protected\n     * @param {Array.<String>|String} className\n     * @fires module:engine/view/node~Node#change\n     */\n\n  }, {\n    key: \"_addClass\",\n    value: function _addClass(className) {\n      var _this2 = this;\n\n      this._fireChange('attributes', this);\n\n      className = Array.isArray(className) ? className : [className];\n      className.forEach(function (name) {\n        return _this2._classes.add(name);\n      });\n    }\n    /**\n     * Removes specified class.\n     *\n     *\t\telement._removeClass( 'foo' );  // Removes 'foo' class.\n     *\t\telement._removeClass( [ 'foo', 'bar' ] ); // Removes both 'foo' and 'bar' classes.\n     *\n     * @see module:engine/view/downcastwriter~DowncastWriter#removeClass\n     * @protected\n     * @param {Array.<String>|String} className\n     * @fires module:engine/view/node~Node#change\n     */\n\n  }, {\n    key: \"_removeClass\",\n    value: function _removeClass(className) {\n      var _this3 = this;\n\n      this._fireChange('attributes', this);\n\n      className = Array.isArray(className) ? className : [className];\n      className.forEach(function (name) {\n        return _this3._classes.delete(name);\n      });\n    }\n    /**\n     * Adds style to the element.\n     *\n     *\t\telement._setStyle( 'color', 'red' );\n     *\t\telement._setStyle( {\n     *\t\t\tcolor: 'red',\n     *\t\t\tposition: 'fixed'\n     *\t\t} );\n     *\n     * @see module:engine/view/downcastwriter~DowncastWriter#setStyle\n     * @protected\n     * @param {String|Object} property Property name or object with key - value pairs.\n     * @param {String} [value] Value to set. This parameter is ignored if object is provided as the first parameter.\n     * @fires module:engine/view/node~Node#change\n     */\n\n  }, {\n    key: \"_setStyle\",\n    value: function _setStyle(property, value) {\n      this._fireChange('attributes', this);\n\n      if (isPlainObject(property)) {\n        var keys = Object.keys(property);\n\n        for (var _i4 = 0; _i4 < keys.length; _i4++) {\n          var key = keys[_i4];\n\n          this._styles.set(key, property[key]);\n        }\n      } else {\n        this._styles.set(property, value);\n      }\n    }\n    /**\n     * Removes specified style.\n     *\n     *\t\telement._removeStyle( 'color' );  // Removes 'color' style.\n     *\t\telement._removeStyle( [ 'color', 'border-top' ] ); // Removes both 'color' and 'border-top' styles.\n     *\n     * @see module:engine/view/downcastwriter~DowncastWriter#removeStyle\n     * @protected\n     * @param {Array.<String>|String} property\n     * @fires module:engine/view/node~Node#change\n     */\n\n  }, {\n    key: \"_removeStyle\",\n    value: function _removeStyle(property) {\n      var _this4 = this;\n\n      this._fireChange('attributes', this);\n\n      property = Array.isArray(property) ? property : [property];\n      property.forEach(function (name) {\n        return _this4._styles.delete(name);\n      });\n    }\n    /**\n     * Sets a custom property. Unlike attributes, custom properties are not rendered to the DOM,\n     * so they can be used to add special data to elements.\n     *\n     * @see module:engine/view/downcastwriter~DowncastWriter#setCustomProperty\n     * @protected\n     * @param {String|Symbol} key\n     * @param {*} value\n     */\n\n  }, {\n    key: \"_setCustomProperty\",\n    value: function _setCustomProperty(key, value) {\n      this._customProperties.set(key, value);\n    }\n    /**\n     * Removes the custom property stored under the given key.\n     *\n     * @see module:engine/view/downcastwriter~DowncastWriter#removeCustomProperty\n     * @protected\n     * @param {String|Symbol} key\n     * @returns {Boolean} Returns true if property was removed.\n     */\n\n  }, {\n    key: \"_removeCustomProperty\",\n    value: function _removeCustomProperty(key) {\n      return this._customProperties.delete(key);\n    }\n    /**\n     * Returns block {@link module:engine/view/filler filler} offset or `null` if block filler is not needed.\n     *\n     * @abstract\n     * @method module:engine/view/element~Element#getFillerOffset\n     */\n\n  }, {\n    key: \"childCount\",\n    get: function get() {\n      return this._children.length;\n    }\n    /**\n     * Is `true` if there are no nodes inside this element, `false` otherwise.\n     *\n     * @readonly\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isEmpty\",\n    get: function get() {\n      return this._children.length === 0;\n    }\n  }]);\n\n  return Element;\n}(Node); // Parses attributes provided to the element constructor before they are applied to an element. If attributes are passed\n// as an object (instead of `Map`), the object is transformed to the map. Attributes with `null` value are removed.\n// Attributes with non-`String` value are converted to `String`.\n//\n// @param {Object|Map} attrs Attributes to parse.\n// @returns {Map} Parsed attributes.\n\n\nexport { Element as default };\n\nfunction parseAttributes(attrs) {\n  if (isPlainObject(attrs)) {\n    attrs = objectToMap(attrs);\n  } else {\n    attrs = new Map(attrs);\n  }\n\n  var _iteratorNormalCompletion8 = true;\n  var _didIteratorError8 = false;\n  var _iteratorError8 = undefined;\n\n  try {\n    for (var _iterator8 = attrs[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n      var _step8$value = _slicedToArray(_step8.value, 2),\n          key = _step8$value[0],\n          value = _step8$value[1];\n\n      if (value === null) {\n        attrs.delete(key);\n      } else if (typeof value != 'string') {\n        attrs.set(key, String(value));\n      }\n    }\n  } catch (err) {\n    _didIteratorError8 = true;\n    _iteratorError8 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n        _iterator8.return();\n      }\n    } finally {\n      if (_didIteratorError8) {\n        throw _iteratorError8;\n      }\n    }\n  }\n\n  return attrs;\n} // Parses inline styles and puts property - value pairs into styles map.\n// Styles map is cleared before insertion.\n//\n// @param {Map.<String, String>} stylesMap Map to insert parsed properties and values.\n// @param {String} stylesString Styles to parse.\n\n\nfunction parseInlineStyles(stylesMap, stylesString) {\n  // `null` if no quote was found in input string or last found quote was a closing quote. See below.\n  var quoteType = null;\n  var propertyNameStart = 0;\n  var propertyValueStart = 0;\n  var propertyName = null;\n  stylesMap.clear(); // Do not set anything if input string is empty.\n\n  if (stylesString === '') {\n    return;\n  } // Fix inline styles that do not end with `;` so they are compatible with algorithm below.\n\n\n  if (stylesString.charAt(stylesString.length - 1) != ';') {\n    stylesString = stylesString + ';';\n  } // Seek the whole string for \"special characters\".\n\n\n  for (var i = 0; i < stylesString.length; i++) {\n    var char = stylesString.charAt(i);\n\n    if (quoteType === null) {\n      // No quote found yet or last found quote was a closing quote.\n      switch (char) {\n        case ':':\n          // Most of time colon means that property name just ended.\n          // Sometimes however `:` is found inside property value (for example in background image url).\n          if (!propertyName) {\n            // Treat this as end of property only if property name is not already saved.\n            // Save property name.\n            propertyName = stylesString.substr(propertyNameStart, i - propertyNameStart); // Save this point as the start of property value.\n\n            propertyValueStart = i + 1;\n          }\n\n          break;\n\n        case '\"':\n        case '\\'':\n          // Opening quote found (this is an opening quote, because `quoteType` is `null`).\n          quoteType = char;\n          break;\n\n        case ';':\n          {\n            // Property value just ended.\n            // Use previously stored property value start to obtain property value.\n            var propertyValue = stylesString.substr(propertyValueStart, i - propertyValueStart);\n\n            if (propertyName) {\n              // Save parsed part.\n              stylesMap.set(propertyName.trim(), propertyValue.trim());\n            }\n\n            propertyName = null; // Save this point as property name start. Property name starts immediately after previous property value ends.\n\n            propertyNameStart = i + 1;\n            break;\n          }\n      }\n    } else if (char === quoteType) {\n      // If a quote char is found and it is a closing quote, mark this fact by `null`-ing `quoteType`.\n      quoteType = null;\n    }\n  }\n} // Parses class attribute and puts all classes into classes set.\n// Classes set s cleared before insertion.\n//\n// @param {Set.<String>} classesSet Set to insert parsed classes.\n// @param {String} classesString String with classes to parse.\n\n\nfunction parseClasses(classesSet, classesString) {\n  var classArray = classesString.split(/\\s+/);\n  classesSet.clear();\n  classArray.forEach(function (name) {\n    return classesSet.add(name);\n  });\n} // Converts strings to Text and non-iterables to arrays.\n//\n// @param {String|module:engine/view/item~Item|Iterable.<String|module:engine/view/item~Item>}\n// @returns {Iterable.<module:engine/view/node~Node>}\n\n\nfunction normalize(nodes) {\n  // Separate condition because string is iterable.\n  if (typeof nodes == 'string') {\n    return [new Text(nodes)];\n  }\n\n  if (!isIterable(nodes)) {\n    nodes = [nodes];\n  } // Array.from to enable .map() on non-arrays.\n\n\n  return Array.from(nodes).map(function (node) {\n    if (typeof node == 'string') {\n      return new Text(node);\n    }\n\n    if (node instanceof TextProxy) {\n      return new Text(node.data);\n    }\n\n    return node;\n  });\n}","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/isiterable\n */\n\n/**\n * Checks if value implements iterator interface.\n *\n * @param {*} value The value to check.\n * @returns {Boolean} True if value implements iterator interface.\n */\nexport default function isIterable(value) {\n  return !!(value && value[Symbol.iterator]);\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/documentselection\n */\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport Selection from './selection';\nimport LiveRange from './liverange';\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport toMap from '@ckeditor/ckeditor5-utils/src/tomap';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport log from '@ckeditor/ckeditor5-utils/src/log';\nimport uid from '@ckeditor/ckeditor5-utils/src/uid';\nvar storePrefix = 'selection:';\n/**\n * `DocumentSelection` is a special selection which is used as the\n * {@link module:engine/model/document~Document#selection document's selection}.\n * There can be only one instance of `DocumentSelection` per document.\n *\n * Document selection can only be changed by using the {@link module:engine/model/writer~Writer} instance\n * inside the {@link module:engine/model/model~Model#change `change()`} block, as it provides a secure way to modify model.\n *\n * `DocumentSelection` is automatically updated upon changes in the {@link module:engine/model/document~Document document}\n * to always contain valid ranges. Its attributes are inherited from the text unless set explicitly.\n *\n * Differences between {@link module:engine/model/selection~Selection} and `DocumentSelection` are:\n * * there is always a range in `DocumentSelection` - even if no ranges were added there is a \"default range\"\n * present in the selection,\n * * ranges added to this selection updates automatically when the document changes,\n * * attributes of `DocumentSelection` are updated automatically according to selection ranges.\n *\n * Since `DocumentSelection` uses {@link module:engine/model/liverange~LiveRange live ranges}\n * and is updated when {@link module:engine/model/document~Document document}\n * changes, it cannot be set on {@link module:engine/model/node~Node nodes}\n * that are inside {@link module:engine/model/documentfragment~DocumentFragment document fragment}.\n * If you need to represent a selection in document fragment,\n * use {@link module:engine/model/selection~Selection Selection class} instead.\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n */\n\nvar DocumentSelection =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an empty live selection for given {@link module:engine/model/document~Document}.\n   *\n   * @param {module:engine/model/document~Document} doc Document which owns this selection.\n   */\n  function DocumentSelection(doc) {\n    _classCallCheck(this, DocumentSelection);\n\n    /**\n     * Selection used internally by that class (`DocumentSelection` is a proxy to that selection).\n     *\n     * @protected\n     */\n    this._selection = new LiveSelection(doc);\n\n    this._selection.delegate('change:range').to(this);\n\n    this._selection.delegate('change:attribute').to(this);\n  }\n  /**\n   * Returns whether the selection is collapsed. Selection is collapsed when there is exactly one range which is\n   * collapsed.\n   *\n   * @readonly\n   * @type {Boolean}\n   */\n\n\n  _createClass(DocumentSelection, [{\n    key: \"getRanges\",\n\n    /**\n     * Returns an iterable that iterates over copies of selection ranges.\n     *\n     * @returns {Iterable.<module:engine/model/range~Range>}\n     */\n    value: function getRanges() {\n      return this._selection.getRanges();\n    }\n    /**\n     * Returns the first position in the selection.\n     * First position is the position that {@link module:engine/model/position~Position#isBefore is before}\n     * any other position in the selection.\n     *\n     * Returns `null` if there are no ranges in selection.\n     *\n     * @returns {module:engine/model/position~Position|null}\n     */\n\n  }, {\n    key: \"getFirstPosition\",\n    value: function getFirstPosition() {\n      return this._selection.getFirstPosition();\n    }\n    /**\n     * Returns the last position in the selection.\n     * Last position is the position that {@link module:engine/model/position~Position#isAfter is after}\n     * any other position in the selection.\n     *\n     * Returns `null` if there are no ranges in selection.\n     *\n     * @returns {module:engine/model/position~Position|null}\n     */\n\n  }, {\n    key: \"getLastPosition\",\n    value: function getLastPosition() {\n      return this._selection.getLastPosition();\n    }\n    /**\n     * Returns a copy of the first range in the selection.\n     * First range is the one which {@link module:engine/model/range~Range#start start} position\n     * {@link module:engine/model/position~Position#isBefore is before} start position of all other ranges\n     * (not to confuse with the first range added to the selection).\n     *\n     * Returns `null` if there are no ranges in selection.\n     *\n     * @returns {module:engine/model/range~Range|null}\n     */\n\n  }, {\n    key: \"getFirstRange\",\n    value: function getFirstRange() {\n      return this._selection.getFirstRange();\n    }\n    /**\n     * Returns a copy of the last range in the selection.\n     * Last range is the one which {@link module:engine/model/range~Range#end end} position\n     * {@link module:engine/model/position~Position#isAfter is after} end position of all other ranges (not to confuse with the range most\n     * recently added to the selection).\n     *\n     * Returns `null` if there are no ranges in selection.\n     *\n     * @returns {module:engine/model/range~Range|null}\n     */\n\n  }, {\n    key: \"getLastRange\",\n    value: function getLastRange() {\n      return this._selection.getLastRange();\n    }\n    /**\n     * Gets elements of type \"block\" touched by the selection.\n     *\n     * This method's result can be used for example to apply block styling to all blocks covered by this selection.\n     *\n     * **Note:** `getSelectedBlocks()` always returns the deepest block.\n     *\n     * In this case the function will return exactly all 3 paragraphs:\n     *\n     *\t\t<paragraph>[a</paragraph>\n     *\t\t<quote>\n     *\t\t\t<paragraph>b</paragraph>\n     *\t\t</quote>\n     *\t\t<paragraph>c]d</paragraph>\n     *\n     * In this case the paragraph will also be returned, despite the collapsed selection:\n     *\n     *\t\t<paragraph>[]a</paragraph>\n     *\n     * **Special case**: If a selection ends at the beginning of a block, that block is not returned as from user perspective\n     * this block wasn't selected. See [#984](https://github.com/ckeditor/ckeditor5-engine/issues/984) for more details.\n     *\n     *\t\t<paragraph>[a</paragraph>\n     *\t\t<paragraph>b</paragraph>\n     *\t\t<paragraph>]c</paragraph> // this block will not be returned\n     *\n     * @returns {Iterator.<module:engine/model/element~Element>}\n     */\n\n  }, {\n    key: \"getSelectedBlocks\",\n    value: function getSelectedBlocks() {\n      return this._selection.getSelectedBlocks();\n    }\n    /**\n     * Returns the selected element. {@link module:engine/model/element~Element Element} is considered as selected if there is only\n     * one range in the selection, and that range contains exactly one element.\n     * Returns `null` if there is no selected element.\n     *\n     * @returns {module:engine/model/element~Element|null}\n     */\n\n  }, {\n    key: \"getSelectedElement\",\n    value: function getSelectedElement() {\n      return this._selection.getSelectedElement();\n    }\n    /**\n     * Checks whether the selection contains the entire content of the given element. This means that selection must start\n     * at a position {@link module:engine/model/position~Position#isTouching touching} the element's start and ends at position\n     * touching the element's end.\n     *\n     * By default, this method will check whether the entire content of the selection's current root is selected.\n     * Useful to check if e.g. the user has just pressed <kbd>Ctrl</kbd> + <kbd>A</kbd>.\n     *\n     * @param {module:engine/model/element~Element} [element=this.anchor.root]\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"containsEntireContent\",\n    value: function containsEntireContent(element) {\n      return this._selection.containsEntireContent(element);\n    }\n    /**\n     * Unbinds all events previously bound by document selection.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._selection.destroy();\n    }\n    /**\n     * Returns iterable that iterates over this selection's attribute keys.\n     *\n     * @returns {Iterable.<String>}\n     */\n\n  }, {\n    key: \"getAttributeKeys\",\n    value: function getAttributeKeys() {\n      return this._selection.getAttributeKeys();\n    }\n    /**\n     * Returns iterable that iterates over this selection's attributes.\n     *\n     * Attributes are returned as arrays containing two items. First one is attribute key and second is attribute value.\n     * This format is accepted by native `Map` object and also can be passed in `Node` constructor.\n     *\n     * @returns {Iterable.<*>}\n     */\n\n  }, {\n    key: \"getAttributes\",\n    value: function getAttributes() {\n      return this._selection.getAttributes();\n    }\n    /**\n     * Gets an attribute value for given key or `undefined` if that attribute is not set on the selection.\n     *\n     * @param {String} key Key of attribute to look for.\n     * @returns {*} Attribute value or `undefined`.\n     */\n\n  }, {\n    key: \"getAttribute\",\n    value: function getAttribute(key) {\n      return this._selection.getAttribute(key);\n    }\n    /**\n     * Checks if the selection has an attribute for given key.\n     *\n     * @param {String} key Key of attribute to check.\n     * @returns {Boolean} `true` if attribute with given key is set on selection, `false` otherwise.\n     */\n\n  }, {\n    key: \"hasAttribute\",\n    value: function hasAttribute(key) {\n      return this._selection.hasAttribute(key);\n    }\n    /**\n     * Moves {@link module:engine/model/documentselection~DocumentSelection#focus} to the specified location.\n     * Should be used only within the {@link module:engine/model/writer~Writer#setSelectionFocus} method.\n     *\n     * The location can be specified in the same form as\n     * {@link module:engine/model/writer~Writer#createPositionAt writer.createPositionAt()} parameters.\n     *\n     * @see module:engine/model/writer~Writer#setSelectionFocus\n     * @protected\n     * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n     * first parameter is a {@link module:engine/model/item~Item model item}.\n     */\n\n  }, {\n    key: \"_setFocus\",\n    value: function _setFocus(itemOrPosition, offset) {\n      this._selection.setFocus(itemOrPosition, offset);\n    }\n    /**\n     * Sets this selection's ranges and direction to the specified location based on the given\n     * {@link module:engine/model/selection~Selection selection}, {@link module:engine/model/position~Position position},\n     * {@link module:engine/model/node~Node node}, {@link module:engine/model/position~Position position},\n     * {@link module:engine/model/range~Range range}, an iterable of {@link module:engine/model/range~Range ranges} or null.\n     * Should be used only within the {@link module:engine/model/writer~Writer#setSelection} method.\n     *\n     * @see module:engine/model/writer~Writer#setSelection\n     * @protected\n     * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection|\n     * module:engine/model/position~Position|module:engine/model/node~Node|\n     * Iterable.<module:engine/model/range~Range>|module:engine/model/range~Range|null} selectable\n     * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n     * @param {Object} [options]\n     * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n     */\n\n  }, {\n    key: \"_setTo\",\n    value: function _setTo(selectable, placeOrOffset, options) {\n      this._selection.setTo(selectable, placeOrOffset, options);\n    }\n    /**\n     * Sets attribute on the selection. If attribute with the same key already is set, it's value is overwritten.\n     * Should be used only within the {@link module:engine/model/writer~Writer#setSelectionAttribute} method.\n     *\n     * @see module:engine/model/writer~Writer#setSelectionAttribute\n     * @protected\n     * @param {String} key Key of the attribute to set.\n     * @param {*} value Attribute value.\n     */\n\n  }, {\n    key: \"_setAttribute\",\n    value: function _setAttribute(key, value) {\n      this._selection.setAttribute(key, value);\n    }\n    /**\n     * Removes an attribute with given key from the selection.\n     * If the given attribute was set on the selection, fires the {@link module:engine/model/selection~Selection#event:change:range}\n     * event with removed attribute key.\n     * Should be used only within the {@link module:engine/model/writer~Writer#removeSelectionAttribute} method.\n     *\n     * @see module:engine/model/writer~Writer#removeSelectionAttribute\n     * @protected\n     * @param {String} key Key of the attribute to remove.\n     */\n\n  }, {\n    key: \"_removeAttribute\",\n    value: function _removeAttribute(key) {\n      this._selection.removeAttribute(key);\n    }\n    /**\n     * Returns an iterable that iterates through all selection attributes stored in current selection's parent.\n     *\n     * @protected\n     * @returns {Iterable.<*>}\n     */\n\n  }, {\n    key: \"_getStoredAttributes\",\n    value: function _getStoredAttributes() {\n      return this._selection._getStoredAttributes();\n    }\n    /**\n     * Temporarily changes the gravity of the selection from the left to the right.\n     *\n     * The gravity defines from which direction the selection inherits its attributes. If it's the default left\n     * gravity, the selection (after being moved by the the user) inherits attributes from its left hand side.\n     * This method allows to temporarily override this behavior by forcing the gravity to the right.\n     *\n     * It returns an unique identifier which is required to restore the gravity. It guarantees the symmetry\n     * of the process.\n     *\n     * @see module:engine/model/writer~Writer#overrideSelectionGravity\n     * @protected\n     * @returns {String} The unique id which allows restoring the gravity.\n     */\n\n  }, {\n    key: \"_overrideGravity\",\n    value: function _overrideGravity() {\n      return this._selection.overrideGravity();\n    }\n    /**\n     * Restores the {@link ~DocumentSelection#_overrideGravity overridden gravity}.\n     *\n     * Restoring the gravity is only possible using the unique identifier returned by\n     * {@link ~DocumentSelection#_overrideGravity}. Note that the gravity remains overridden as long as won't be restored\n     * the same number of times it was overridden.\n     *\n     * @see module:engine/model/writer~Writer#restoreSelectionGravity\n     * @protected\n     * @param {String} uid The unique id returned by {@link #_overrideGravity}.\n     */\n\n  }, {\n    key: \"_restoreGravity\",\n    value: function _restoreGravity(uid) {\n      this._selection.restoreGravity(uid);\n    }\n    /**\n     * Generates and returns an attribute key for selection attributes store, basing on original attribute key.\n     *\n     * @protected\n     * @param {String} key Attribute key to convert.\n     * @returns {String} Converted attribute key, applicable for selection store.\n     */\n\n  }, {\n    key: \"isCollapsed\",\n    get: function get() {\n      return this._selection.isCollapsed;\n    }\n    /**\n     * Selection anchor. Anchor may be described as a position where the most recent part of the selection starts.\n     * Together with {@link #focus} they define the direction of selection, which is important\n     * when expanding/shrinking selection. Anchor is always {@link module:engine/model/range~Range#start start} or\n     * {@link module:engine/model/range~Range#end end} position of the most recently added range.\n     *\n     * Is set to `null` if there are no ranges in selection.\n     *\n     * @see #focus\n     * @readonly\n     * @type {module:engine/model/position~Position|null}\n     */\n\n  }, {\n    key: \"anchor\",\n    get: function get() {\n      return this._selection.anchor;\n    }\n    /**\n     * Selection focus. Focus is a position where the selection ends.\n     *\n     * Is set to `null` if there are no ranges in selection.\n     *\n     * @see #anchor\n     * @readonly\n     * @type {module:engine/model/position~Position|null}\n     */\n\n  }, {\n    key: \"focus\",\n    get: function get() {\n      return this._selection.focus;\n    }\n    /**\n     * Returns number of ranges in selection.\n     *\n     * @readonly\n     * @type {Number}\n     */\n\n  }, {\n    key: \"rangeCount\",\n    get: function get() {\n      return this._selection.rangeCount;\n    }\n    /**\n     * Describes whether `Documentselection` has own range(s) set, or if it is defaulted to\n     * {@link module:engine/model/document~Document#_getDefaultRange document's default range}.\n     *\n     * @readonly\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"hasOwnRange\",\n    get: function get() {\n      return this._selection.hasOwnRange;\n    }\n    /**\n     * Specifies whether the {@link #focus}\n     * precedes {@link #anchor}.\n     *\n     * @readonly\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isBackward\",\n    get: function get() {\n      return this._selection.isBackward;\n    }\n    /**\n     * Describes whether the gravity is overridden (using {@link module:engine/model/writer~Writer#overrideSelectionGravity}) or not.\n     *\n     * Note that the gravity remains overridden as long as will not be restored the same number of times as it was overridden.\n     *\n     * @readonly\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isGravityOverridden\",\n    get: function get() {\n      return this._selection.isGravityOverridden;\n    }\n    /**\n     * Used for the compatibility with the {@link module:engine/model/selection~Selection#isEqual} method.\n     *\n     * @protected\n     */\n\n  }, {\n    key: \"_ranges\",\n    get: function get() {\n      return this._selection._ranges;\n    }\n  }], [{\n    key: \"_getStoreAttributeKey\",\n    value: function _getStoreAttributeKey(key) {\n      return storePrefix + key;\n    }\n    /**\n     * Checks whether the given attribute key is an attribute stored on an element.\n     *\n     * @protected\n     * @param {String} key\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"_isStoreAttributeKey\",\n    value: function _isStoreAttributeKey(key) {\n      return key.startsWith(storePrefix);\n    }\n  }]);\n\n  return DocumentSelection;\n}();\n\nexport { DocumentSelection as default };\nmix(DocumentSelection, EmitterMixin);\n/**\n * Fired when selection range(s) changed.\n *\n * @event change:range\n * @param {Boolean} directChange In case of {@link module:engine/model/selection~Selection} class it is always set\n * to `true` which indicates that the selection change was caused by a direct use of selection's API.\n * The {@link module:engine/model/documentselection~DocumentSelection}, however, may change because its position\n * was directly changed through the {@link module:engine/model/writer~Writer writer} or because its position was\n * changed because the structure of the model has been changed (which means an indirect change).\n * The indirect change does not occur in case of normal (detached) selections because they are \"static\" (as \"not live\")\n * which mean that they are not updated once the document changes.\n */\n\n/**\n * Fired when selection attribute changed.\n *\n * @event change:attribute\n * @param {Boolean} directChange In case of {@link module:engine/model/selection~Selection} class it is always set\n * to `true` which indicates that the selection change was caused by a direct use of selection's API.\n * The {@link module:engine/model/documentselection~DocumentSelection}, however, may change because its attributes\n * were directly changed through the {@link module:engine/model/writer~Writer writer} or because its position was\n * changed in the model and its attributes were refreshed (which means an indirect change).\n * The indirect change does not occur in case of normal (detached) selections because they are \"static\" (as \"not live\")\n * which mean that they are not updated once the document changes.\n * @param {Array.<String>} attributeKeys Array containing keys of attributes that changed.\n */\n// `LiveSelection` is used internally by {@link module:engine/model/documentselection~DocumentSelection} and shouldn't be used directly.\n//\n// LiveSelection` is automatically updated upon changes in the {@link module:engine/model/document~Document document}\n// to always contain valid ranges. Its attributes are inherited from the text unless set explicitly.\n//\n// Differences between {@link module:engine/model/selection~Selection} and `LiveSelection` are:\n// * there is always a range in `LiveSelection` - even if no ranges were added there is a \"default range\"\n// present in the selection,\n// * ranges added to this selection updates automatically when the document changes,\n// * attributes of `LiveSelection` are updated automatically according to selection ranges.\n//\n// @extends module:engine/model/selection~Selection\n//\n\nvar LiveSelection =\n/*#__PURE__*/\nfunction (_Selection) {\n  _inherits(LiveSelection, _Selection);\n\n  // Creates an empty live selection for given {@link module:engine/model/document~Document}.\n  // @param {module:engine/model/document~Document} doc Document which owns this selection.\n  function LiveSelection(doc) {\n    var _this;\n\n    _classCallCheck(this, LiveSelection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LiveSelection).call(this)); // Document which owns this selection.\n    //\n    // @protected\n    // @member {module:engine/model/model~Model}\n\n    _this._model = doc.model; // Document which owns this selection.\n    //\n    // @protected\n    // @member {module:engine/model/document~Document}\n\n    _this._document = doc; // Keeps mapping of attribute name to priority with which the attribute got modified (added/changed/removed)\n    // last time. Possible values of priority are: `'low'` and `'normal'`.\n    //\n    // Priorities are used by internal `LiveSelection` mechanisms. All attributes set using `LiveSelection`\n    // attributes API are set with `'normal'` priority.\n    //\n    // @private\n    // @member {Map} module:engine/model/liveselection~LiveSelection#_attributePriority\n\n    _this._attributePriority = new Map(); // Contains data required to fix ranges which have been moved to the graveyard.\n    // @private\n    // @member {Array} module:engine/model/liveselection~LiveSelection#_fixGraveyardRangesData\n\n    _this._fixGraveyardRangesData = []; // Flag that informs whether the selection ranges have changed. It is changed on true when `LiveRange#change:range` event is fired.\n    // @private\n    // @member {Array} module:engine/model/liveselection~LiveSelection#_hasChangedRange\n\n    _this._hasChangedRange = false; // Each overriding gravity adds an UID to the set and each removal removes it.\n    // Gravity is overridden when there's at least one UID in the set.\n    // Gravity is restored when the set is empty.\n    // This is to prevent conflicts when gravity is overridden by more than one feature at the same time.\n    // @private\n    // @type {Set}\n\n    _this._overriddenGravityRegister = new Set(); // Add events that will ensure selection correctness.\n\n    _this.on('change:range', function () {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _this.getRanges()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var range = _step.value;\n\n          if (!_this._document._validateSelectionRange(range)) {\n            /**\n             * Range from {@link module:engine/model/documentselection~DocumentSelection document selection}\n             * starts or ends at incorrect position.\n             *\n             * @error document-selection-wrong-position\n             * @param {module:engine/model/range~Range} range\n             */\n            throw new CKEditorError('document-selection-wrong-position: Range from document selection starts or ends at incorrect position.', {\n              range: range\n            });\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    });\n\n    _this.listenTo(_this._document, 'change', function (evt, batch) {\n      // Update selection's attributes.\n      _this._updateAttributes(false); // Clear selection attributes from element if no longer empty.\n\n\n      clearAttributesStoredInElement(_this._model, batch);\n    });\n\n    _this.listenTo(_this._model, 'applyOperation', function () {\n      while (_this._fixGraveyardRangesData.length) {\n        var _this$_fixGraveyardRa = _this._fixGraveyardRangesData.shift(),\n            liveRange = _this$_fixGraveyardRa.liveRange,\n            sourcePosition = _this$_fixGraveyardRa.sourcePosition;\n\n        _this._fixGraveyardSelection(liveRange, sourcePosition);\n      }\n\n      if (_this._hasChangedRange) {\n        _this._hasChangedRange = false;\n\n        _this.fire('change:range', {\n          directChange: false\n        });\n      }\n    }, {\n      priority: 'lowest'\n    });\n\n    return _this;\n  }\n\n  _createClass(LiveSelection, [{\n    key: \"destroy\",\n    // Unbinds all events previously bound by live selection.\n    value: function destroy() {\n      for (var i = 0; i < this._ranges.length; i++) {\n        this._ranges[i].detach();\n      }\n\n      this.stopListening();\n    }\n  }, {\n    key: \"getRanges\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function getRanges() {\n      return regeneratorRuntime.wrap(function getRanges$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!this._ranges.length) {\n                _context.next = 4;\n                break;\n              }\n\n              return _context.delegateYield(_get(_getPrototypeOf(LiveSelection.prototype), \"getRanges\", this).call(this), \"t0\", 2);\n\n            case 2:\n              _context.next = 6;\n              break;\n\n            case 4:\n              _context.next = 6;\n              return this._document._getDefaultRange();\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, getRanges, this);\n    })\n  }, {\n    key: \"getFirstRange\",\n    value: function getFirstRange() {\n      return _get(_getPrototypeOf(LiveSelection.prototype), \"getFirstRange\", this).call(this) || this._document._getDefaultRange();\n    }\n  }, {\n    key: \"getLastRange\",\n    value: function getLastRange() {\n      return _get(_getPrototypeOf(LiveSelection.prototype), \"getLastRange\", this).call(this) || this._document._getDefaultRange();\n    }\n  }, {\n    key: \"setTo\",\n    value: function setTo(selectable, optionsOrPlaceOrOffset, options) {\n      _get(_getPrototypeOf(LiveSelection.prototype), \"setTo\", this).call(this, selectable, optionsOrPlaceOrOffset, options);\n\n      this._refreshAttributes();\n    }\n  }, {\n    key: \"setFocus\",\n    value: function setFocus(itemOrPosition, offset) {\n      _get(_getPrototypeOf(LiveSelection.prototype), \"setFocus\", this).call(this, itemOrPosition, offset);\n\n      this._refreshAttributes();\n    }\n  }, {\n    key: \"setAttribute\",\n    value: function setAttribute(key, value) {\n      if (this._setAttribute(key, value)) {\n        // Fire event with exact data.\n        var attributeKeys = [key];\n        this.fire('change:attribute', {\n          attributeKeys: attributeKeys,\n          directChange: true\n        });\n      }\n    }\n  }, {\n    key: \"removeAttribute\",\n    value: function removeAttribute(key) {\n      if (this._removeAttribute(key)) {\n        // Fire event with exact data.\n        var attributeKeys = [key];\n        this.fire('change:attribute', {\n          attributeKeys: attributeKeys,\n          directChange: true\n        });\n      }\n    }\n  }, {\n    key: \"overrideGravity\",\n    value: function overrideGravity() {\n      var overrideUid = uid(); // Remember that another overriding has been requested. It will need to be removed\n      // before the gravity is to be restored.\n\n      this._overriddenGravityRegister.add(overrideUid);\n\n      if (this._overriddenGravityRegister.size === 1) {\n        this._refreshAttributes();\n      }\n\n      return overrideUid;\n    }\n  }, {\n    key: \"restoreGravity\",\n    value: function restoreGravity(uid) {\n      if (!this._overriddenGravityRegister.has(uid)) {\n        /**\n         * Restoring gravity for an unknown UID is not possible. Make sure you are using a correct\n         * UID obtained from the {@link module:engine/model/writer~Writer#overrideSelectionGravity} to restore.\n         *\n         * @error document-selection-gravity-wrong-restore\n         * @param {String} uid The unique identifier returned by {@link #overrideGravity}.\n         */\n        throw new CKEditorError('document-selection-gravity-wrong-restore: Attempting to restore the selection gravity for an unknown UID.', {\n          uid: uid\n        });\n      }\n\n      this._overriddenGravityRegister.delete(uid); // Restore gravity only when all overriding have been restored.\n\n\n      if (!this.isGravityOverridden) {\n        this._refreshAttributes();\n      }\n    } // Removes all attributes from the selection and sets attributes according to the surrounding nodes.\n\n  }, {\n    key: \"_refreshAttributes\",\n    value: function _refreshAttributes() {\n      this._updateAttributes(true);\n    }\n  }, {\n    key: \"_popRange\",\n    value: function _popRange() {\n      this._ranges.pop().detach();\n    }\n  }, {\n    key: \"_pushRange\",\n    value: function _pushRange(range) {\n      var liveRange = this._prepareRange(range); // `undefined` is returned when given `range` is in graveyard root.\n\n\n      if (liveRange) {\n        this._ranges.push(liveRange);\n      }\n    } // Prepares given range to be added to selection. Checks if it is correct,\n    // converts it to {@link module:engine/model/liverange~LiveRange LiveRange}\n    // and sets listeners listening to the range's change event.\n    //\n    // @private\n    // @param {module:engine/model/range~Range} range\n\n  }, {\n    key: \"_prepareRange\",\n    value: function _prepareRange(range) {\n      var _this2 = this;\n\n      this._checkRange(range);\n\n      if (range.root == this._document.graveyard) {\n        /**\n         * Trying to add a Range that is in the graveyard root. Range rejected.\n         *\n         * @warning model-selection-range-in-graveyard\n         */\n        log.warn('model-selection-range-in-graveyard: Trying to add a Range that is in the graveyard root. Range rejected.');\n        return;\n      }\n\n      var liveRange = LiveRange.fromRange(range);\n      liveRange.on('change:range', function (evt, oldRange, data) {\n        _this2._hasChangedRange = true; // If `LiveRange` is in whole moved to the graveyard, save necessary data. It will be fixed on `Model#applyOperation` event.\n\n        if (liveRange.root == _this2._document.graveyard) {\n          _this2._fixGraveyardRangesData.push({\n            liveRange: liveRange,\n            sourcePosition: data.deletionPosition\n          });\n        }\n      });\n      return liveRange;\n    } // Updates this selection attributes according to its ranges and the {@link module:engine/model/document~Document model document}.\n    //\n    // @protected\n    // @param {Boolean} clearAll\n    // @fires change:attribute\n\n  }, {\n    key: \"_updateAttributes\",\n    value: function _updateAttributes(clearAll) {\n      var newAttributes = toMap(this._getSurroundingAttributes());\n      var oldAttributes = toMap(this.getAttributes());\n\n      if (clearAll) {\n        // If `clearAll` remove all attributes and reset priorities.\n        this._attributePriority = new Map();\n        this._attrs = new Map();\n      } else {\n        // If not, remove only attributes added with `low` priority.\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = this._attributePriority[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var _step2$value = _slicedToArray(_step2.value, 2),\n                key = _step2$value[0],\n                priority = _step2$value[1];\n\n            if (priority == 'low') {\n              this._attrs.delete(key);\n\n              this._attributePriority.delete(key);\n            }\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }\n\n      this._setAttributesTo(newAttributes); // Let's evaluate which attributes really changed.\n\n\n      var changed = []; // First, loop through all attributes that are set on selection right now.\n      // Check which of them are different than old attributes.\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.getAttributes()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var _step3$value = _slicedToArray(_step3.value, 2),\n              newKey = _step3$value[0],\n              newValue = _step3$value[1];\n\n          if (!oldAttributes.has(newKey) || oldAttributes.get(newKey) !== newValue) {\n            changed.push(newKey);\n          }\n        } // Then, check which of old attributes got removed.\n\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = oldAttributes[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var _step4$value = _slicedToArray(_step4.value, 1),\n              oldKey = _step4$value[0];\n\n          if (!this.hasAttribute(oldKey)) {\n            changed.push(oldKey);\n          }\n        } // Fire event with exact data (fire only if anything changed).\n\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      if (changed.length > 0) {\n        this.fire('change:attribute', {\n          attributeKeys: changed,\n          directChange: false\n        });\n      }\n    } // Internal method for setting `LiveSelection` attribute. Supports attribute priorities (through `directChange`\n    // parameter).\n    //\n    // @private\n    // @param {String} key Attribute key.\n    // @param {*} value Attribute value.\n    // @param {Boolean} [directChange=true] `true` if the change is caused by `Selection` API, `false` if change\n    // is caused by `Batch` API.\n    // @returns {Boolean} Whether value has changed.\n\n  }, {\n    key: \"_setAttribute\",\n    value: function _setAttribute(key, value) {\n      var directChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var priority = directChange ? 'normal' : 'low';\n\n      if (priority == 'low' && this._attributePriority.get(key) == 'normal') {\n        // Priority too low.\n        return false;\n      }\n\n      var oldValue = _get(_getPrototypeOf(LiveSelection.prototype), \"getAttribute\", this).call(this, key); // Don't do anything if value has not changed.\n\n\n      if (oldValue === value) {\n        return false;\n      }\n\n      this._attrs.set(key, value); // Update priorities map.\n\n\n      this._attributePriority.set(key, priority);\n\n      return true;\n    } // Internal method for removing `LiveSelection` attribute. Supports attribute priorities (through `directChange`\n    // parameter).\n    //\n    // NOTE: Even if attribute is not present in the selection but is provided to this method, it's priority will\n    // be changed according to `directChange` parameter.\n    //\n    // @private\n    // @param {String} key Attribute key.\n    // @param {Boolean} [directChange=true] `true` if the change is caused by `Selection` API, `false` if change\n    // is caused by `Batch` API.\n    // @returns {Boolean} Whether attribute was removed. May not be true if such attributes didn't exist or the\n    // existing attribute had higher priority.\n\n  }, {\n    key: \"_removeAttribute\",\n    value: function _removeAttribute(key) {\n      var directChange = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var priority = directChange ? 'normal' : 'low';\n\n      if (priority == 'low' && this._attributePriority.get(key) == 'normal') {\n        // Priority too low.\n        return false;\n      } // Update priorities map.\n\n\n      this._attributePriority.set(key, priority); // Don't do anything if value has not changed.\n\n\n      if (!_get(_getPrototypeOf(LiveSelection.prototype), \"hasAttribute\", this).call(this, key)) {\n        return false;\n      }\n\n      this._attrs.delete(key);\n\n      return true;\n    } // Internal method for setting multiple `LiveSelection` attributes. Supports attribute priorities (through\n    // `directChange` parameter).\n    //\n    // @private\n    // @param {Map.<String,*>} attrs Iterable object containing attributes to be set.\n    // @returns {Set.<String>} Changed attribute keys.\n\n  }, {\n    key: \"_setAttributesTo\",\n    value: function _setAttributesTo(attrs) {\n      var changed = new Set();\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = this.getAttributes()[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var _step5$value = _slicedToArray(_step5.value, 2),\n              oldKey = _step5$value[0],\n              oldValue = _step5$value[1];\n\n          // Do not remove attribute if attribute with same key and value is about to be set.\n          if (attrs.get(oldKey) === oldValue) {\n            continue;\n          } // All rest attributes will be removed so changed attributes won't change .\n\n\n          this._removeAttribute(oldKey, false);\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = attrs[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var _step6$value = _slicedToArray(_step6.value, 2),\n              key = _step6$value[0],\n              value = _step6$value[1];\n\n          // Attribute may not be set because of attributes or because same key/value is already added.\n          var gotAdded = this._setAttribute(key, value, false);\n\n          if (gotAdded) {\n            changed.add(key);\n          }\n        }\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n            _iterator6.return();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n\n      return changed;\n    } // Returns an iterable that iterates through all selection attributes stored in current selection's parent.\n    //\n    // @protected\n    // @returns {Iterable.<*>}\n\n  }, {\n    key: \"_getStoredAttributes\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _getStoredAttributes() {\n      var selectionParent, _iteratorNormalCompletion7, _didIteratorError7, _iteratorError7, _iterator7, _step7, key, realKey;\n\n      return regeneratorRuntime.wrap(function _getStoredAttributes$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              selectionParent = this.getFirstPosition().parent;\n\n              if (!(this.isCollapsed && selectionParent.isEmpty)) {\n                _context2.next = 30;\n                break;\n              }\n\n              _iteratorNormalCompletion7 = true;\n              _didIteratorError7 = false;\n              _iteratorError7 = undefined;\n              _context2.prev = 5;\n              _iterator7 = selectionParent.getAttributeKeys()[Symbol.iterator]();\n\n            case 7:\n              if (_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done) {\n                _context2.next = 16;\n                break;\n              }\n\n              key = _step7.value;\n\n              if (!key.startsWith(storePrefix)) {\n                _context2.next = 13;\n                break;\n              }\n\n              realKey = key.substr(storePrefix.length);\n              _context2.next = 13;\n              return [realKey, selectionParent.getAttribute(key)];\n\n            case 13:\n              _iteratorNormalCompletion7 = true;\n              _context2.next = 7;\n              break;\n\n            case 16:\n              _context2.next = 22;\n              break;\n\n            case 18:\n              _context2.prev = 18;\n              _context2.t0 = _context2[\"catch\"](5);\n              _didIteratorError7 = true;\n              _iteratorError7 = _context2.t0;\n\n            case 22:\n              _context2.prev = 22;\n              _context2.prev = 23;\n\n              if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n                _iterator7.return();\n              }\n\n            case 25:\n              _context2.prev = 25;\n\n              if (!_didIteratorError7) {\n                _context2.next = 28;\n                break;\n              }\n\n              throw _iteratorError7;\n\n            case 28:\n              return _context2.finish(25);\n\n            case 29:\n              return _context2.finish(22);\n\n            case 30:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _getStoredAttributes, this, [[5, 18, 22, 30], [23,, 25, 29]]);\n    }) // Checks model text nodes that are closest to the selection's first position and returns attributes of first\n    // found element. If there are no text nodes in selection's first position parent, it returns selection\n    // attributes stored in that parent.\n    //\n    // @private\n    // @returns {Iterable.<*>} Collection of attributes.\n\n  }, {\n    key: \"_getSurroundingAttributes\",\n    value: function _getSurroundingAttributes() {\n      var position = this.getFirstPosition();\n      var schema = this._model.schema;\n      var attrs = null;\n\n      if (!this.isCollapsed) {\n        // 1. If selection is a range...\n        var range = this.getFirstRange(); // ...look for a first character node in that range and take attributes from it.\n\n        var _iteratorNormalCompletion8 = true;\n        var _didIteratorError8 = false;\n        var _iteratorError8 = undefined;\n\n        try {\n          for (var _iterator8 = range[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n            var value = _step8.value;\n\n            // If the item is an object, we don't want to get attributes from its children.\n            if (value.item.is('element') && schema.isObject(value.item)) {\n              break;\n            } // This is not an optimal solution because of https://github.com/ckeditor/ckeditor5-engine/issues/454.\n            // It can be done better by using `break;` instead of checking `attrs === null`.\n\n\n            if (value.type == 'text' && attrs === null) {\n              attrs = value.item.getAttributes();\n            }\n          }\n        } catch (err) {\n          _didIteratorError8 = true;\n          _iteratorError8 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n              _iterator8.return();\n            }\n          } finally {\n            if (_didIteratorError8) {\n              throw _iteratorError8;\n            }\n          }\n        }\n      } else {\n        // 2. If the selection is a caret or the range does not contain a character node...\n        var nodeBefore = position.textNode ? position.textNode : position.nodeBefore;\n        var nodeAfter = position.textNode ? position.textNode : position.nodeAfter; // When gravity is overridden then don't take node before into consideration.\n\n        if (!this.isGravityOverridden) {\n          // ...look at the node before caret and take attributes from it if it is a character node.\n          attrs = getAttrsIfCharacter(nodeBefore);\n        } // 3. If not, look at the node after caret...\n\n\n        if (!attrs) {\n          attrs = getAttrsIfCharacter(nodeAfter);\n        } // 4. If not, try to find the first character on the left, that is in the same node.\n        // When gravity is overridden then don't take node before into consideration.\n\n\n        if (!this.isGravityOverridden && !attrs) {\n          var node = nodeBefore;\n\n          while (node && !attrs) {\n            node = node.previousSibling;\n            attrs = getAttrsIfCharacter(node);\n          }\n        } // 5. If not found, try to find the first character on the right, that is in the same node.\n\n\n        if (!attrs) {\n          var _node = nodeAfter;\n\n          while (_node && !attrs) {\n            _node = _node.nextSibling;\n            attrs = getAttrsIfCharacter(_node);\n          }\n        } // 6. If not found, selection should retrieve attributes from parent.\n\n\n        if (!attrs) {\n          attrs = this._getStoredAttributes();\n        }\n      }\n\n      return attrs;\n    } // Fixes a selection range after it ends up in graveyard root.\n    //\n    // @private\n    // @param {module:engine/model/liverange~LiveRange} liveRange The range from selection, that ended up in the graveyard root.\n    // @param {module:engine/model/position~Position} removedRangeStart Start position of a range which was removed.\n\n  }, {\n    key: \"_fixGraveyardSelection\",\n    value: function _fixGraveyardSelection(liveRange, removedRangeStart) {\n      // The start of the removed range is the closest position to the `liveRange` - the original selection range.\n      // This is a good candidate for a fixed selection range.\n      var positionCandidate = removedRangeStart.clone(); // Find a range that is a correct selection range and is closest to the start of removed range.\n\n      var selectionRange = this._model.schema.getNearestSelectionRange(positionCandidate); // Remove the old selection range before preparing and adding new selection range. This order is important,\n      // because new range, in some cases, may intersect with old range (it depends on `getNearestSelectionRange()` result).\n\n\n      var index = this._ranges.indexOf(liveRange);\n\n      this._ranges.splice(index, 1);\n\n      liveRange.detach(); // If nearest valid selection range has been found - add it in the place of old range.\n\n      if (selectionRange) {\n        // Check the range, convert it to live range, bind events, etc.\n        var newRange = this._prepareRange(selectionRange); // Add new range in the place of old range.\n\n\n        this._ranges.splice(index, 0, newRange);\n      } // If nearest valid selection range cannot be found - just removing the old range is fine.\n\n    }\n  }, {\n    key: \"isCollapsed\",\n    get: function get() {\n      var length = this._ranges.length;\n      return length === 0 ? this._document._getDefaultRange().isCollapsed : _get(_getPrototypeOf(LiveSelection.prototype), \"isCollapsed\", this);\n    }\n  }, {\n    key: \"anchor\",\n    get: function get() {\n      return _get(_getPrototypeOf(LiveSelection.prototype), \"anchor\", this) || this._document._getDefaultRange().start;\n    }\n  }, {\n    key: \"focus\",\n    get: function get() {\n      return _get(_getPrototypeOf(LiveSelection.prototype), \"focus\", this) || this._document._getDefaultRange().end;\n    }\n  }, {\n    key: \"rangeCount\",\n    get: function get() {\n      return this._ranges.length ? this._ranges.length : 1;\n    } // Describes whether `LiveSelection` has own range(s) set, or if it is defaulted to\n    // {@link module:engine/model/document~Document#_getDefaultRange document's default range}.\n    //\n    // @readonly\n    // @type {Boolean}\n\n  }, {\n    key: \"hasOwnRange\",\n    get: function get() {\n      return this._ranges.length > 0;\n    } // When set to `true` then selection attributes on node before the caret won't be taken\n    // into consideration while updating selection attributes.\n    //\n    // @protected\n    // @type {Boolean}\n\n  }, {\n    key: \"isGravityOverridden\",\n    get: function get() {\n      return !!this._overriddenGravityRegister.size;\n    }\n  }]);\n\n  return LiveSelection;\n}(Selection); // Helper function for {@link module:engine/model/liveselection~LiveSelection#_updateAttributes}.\n//\n// It takes model item, checks whether it is a text node (or text proxy) and, if so, returns it's attributes. If not, returns `null`.\n//\n// @param {module:engine/model/item~Item|null}  node\n// @returns {Boolean}\n\n\nfunction getAttrsIfCharacter(node) {\n  if (node instanceof TextProxy || node instanceof Text) {\n    return node.getAttributes();\n  }\n\n  return null;\n} // Removes selection attributes from element which is not empty anymore.\n//\n// @private\n// @param {module:engine/model/model~Model} model\n// @param {module:engine/model/batch~Batch} batch\n\n\nfunction clearAttributesStoredInElement(model, batch) {\n  var differ = model.document.differ;\n  var _iteratorNormalCompletion9 = true;\n  var _didIteratorError9 = false;\n  var _iteratorError9 = undefined;\n\n  try {\n    var _loop = function _loop() {\n      var entry = _step9.value;\n\n      if (entry.type != 'insert') {\n        return \"continue\";\n      }\n\n      var changeParent = entry.position.parent;\n      var isNoLongerEmpty = entry.length === changeParent.maxOffset;\n\n      if (isNoLongerEmpty) {\n        model.enqueueChange(batch, function (writer) {\n          var storedAttributes = Array.from(changeParent.getAttributeKeys()).filter(function (key) {\n            return key.startsWith(storePrefix);\n          });\n          var _iteratorNormalCompletion10 = true;\n          var _didIteratorError10 = false;\n          var _iteratorError10 = undefined;\n\n          try {\n            for (var _iterator10 = storedAttributes[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n              var key = _step10.value;\n              writer.removeAttribute(key, changeParent);\n            }\n          } catch (err) {\n            _didIteratorError10 = true;\n            _iteratorError10 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion10 && _iterator10.return != null) {\n                _iterator10.return();\n              }\n            } finally {\n              if (_didIteratorError10) {\n                throw _iteratorError10;\n              }\n            }\n          }\n        });\n      }\n    };\n\n    for (var _iterator9 = differ.getChanges()[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n      var _ret = _loop();\n\n      if (_ret === \"continue\") continue;\n    }\n  } catch (err) {\n    _didIteratorError9 = true;\n    _iteratorError9 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion9 && _iterator9.return != null) {\n        _iterator9.return();\n      }\n    } finally {\n      if (_didIteratorError9) {\n        throw _iteratorError9;\n      }\n    }\n  }\n}","import baseIsEqual from './_baseIsEqual.js';\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nexport default isEqual;\n","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/operation/attributeoperation\n */\nimport Operation from './operation';\nimport Range from '../range';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport { _setAttribute } from './utils';\nimport { isEqual } from 'lodash-es';\n/**\n * Operation to change nodes' attribute.\n *\n * Using this class you can add, remove or change value of the attribute.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\n\nvar AttributeOperation =\n/*#__PURE__*/\nfunction (_Operation) {\n  _inherits(AttributeOperation, _Operation);\n\n  /**\n   * Creates an operation that changes, removes or adds attributes.\n   *\n   * If only `newValue` is set, attribute will be added on a node. Note that all nodes in operation's range must not\n   * have an attribute with the same key as the added attribute.\n   *\n   * If only `oldValue` is set, then attribute with given key will be removed. Note that all nodes in operation's range\n   * must have an attribute with that key added.\n   *\n   * If both `newValue` and `oldValue` are set, then the operation will change the attribute value. Note that all nodes in\n   * operation's ranges must already have an attribute with given key and `oldValue` as value\n   *\n   * @param {module:engine/model/range~Range} range Range on which the operation should be applied. Must be a flat range.\n   * @param {String} key Key of an attribute to change or remove.\n   * @param {*} oldValue Old value of the attribute with given key or `null`, if attribute was not set before.\n   * @param {*} newValue New value of the attribute with given key or `null`, if operation should remove attribute.\n   * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n   * can be applied or `null` if the operation operates on detached (non-document) tree.\n   */\n  function AttributeOperation(range, key, oldValue, newValue, baseVersion) {\n    var _this;\n\n    _classCallCheck(this, AttributeOperation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AttributeOperation).call(this, baseVersion));\n    /**\n     * Range on which operation should be applied.\n     *\n     * @readonly\n     * @member {module:engine/model/range~Range}\n     */\n\n    _this.range = range.clone();\n    /**\n     * Key of an attribute to change or remove.\n     *\n     * @readonly\n     * @member {String}\n     */\n\n    _this.key = key;\n    /**\n     * Old value of the attribute with given key or `null`, if attribute was not set before.\n     *\n     * @readonly\n     * @member {*}\n     */\n\n    _this.oldValue = oldValue === undefined ? null : oldValue;\n    /**\n     * New value of the attribute with given key or `null`, if operation should remove attribute.\n     *\n     * @readonly\n     * @member {*}\n     */\n\n    _this.newValue = newValue === undefined ? null : newValue;\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(AttributeOperation, [{\n    key: \"clone\",\n\n    /**\n     * Creates and returns an operation that has the same parameters as this operation.\n     *\n     * @returns {module:engine/model/operation/attributeoperation~AttributeOperation} Clone of this operation.\n     */\n    value: function clone() {\n      return new AttributeOperation(this.range, this.key, this.oldValue, this.newValue, this.baseVersion);\n    }\n    /**\n     * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n     *\n     * @returns {module:engine/model/operation/attributeoperation~AttributeOperation}\n     */\n\n  }, {\n    key: \"getReversed\",\n    value: function getReversed() {\n      return new AttributeOperation(this.range, this.key, this.newValue, this.oldValue, this.baseVersion + 1);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = _get(_getPrototypeOf(AttributeOperation.prototype), \"toJSON\", this).call(this);\n\n      json.range = this.range.toJSON();\n      return json;\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_validate\",\n    value: function _validate() {\n      if (!this.range.isFlat) {\n        /**\n         * The range to change is not flat.\n         *\n         * @error attribute-operation-range-not-flat\n         */\n        throw new CKEditorError('attribute-operation-range-not-flat: The range to change is not flat.');\n      }\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.range.getItems({\n          shallow: true\n        })[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n\n          if (this.oldValue !== null && !isEqual(item.getAttribute(this.key), this.oldValue)) {\n            /**\n             * Changed node has different attribute value than operation's old attribute value.\n             *\n             * @error attribute-operation-wrong-old-value\n             * @param {module:engine/model/item~Item} item\n             * @param {String} key\n             * @param {*} value\n             */\n            throw new CKEditorError('attribute-operation-wrong-old-value: Changed node has different attribute value than operation\\'s ' + 'old attribute value.', {\n              item: item,\n              key: this.key,\n              value: this.oldValue\n            });\n          }\n\n          if (this.oldValue === null && this.newValue !== null && item.hasAttribute(this.key)) {\n            /**\n             * The attribute with given key already exists for the given node.\n             *\n             * @error attribute-operation-attribute-exists\n             * @param {module:engine/model/node~Node} node\n             * @param {String} key\n             */\n            throw new CKEditorError('attribute-operation-attribute-exists: The attribute with given key already exists.', {\n              node: item,\n              key: this.key\n            });\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_execute\",\n    value: function _execute() {\n      // If value to set is same as old value, don't do anything.\n      if (!isEqual(this.oldValue, this.newValue)) {\n        // Execution.\n        _setAttribute(this.range, this.key, this.newValue);\n      }\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"type\",\n    get: function get() {\n      if (this.oldValue === null) {\n        return 'addAttribute';\n      } else if (this.newValue === null) {\n        return 'removeAttribute';\n      } else {\n        return 'changeAttribute';\n      }\n    }\n  }], [{\n    key: \"fromJSON\",\n\n    /**\n     * Creates `AttributeOperation` object from deserilized object, i.e. from parsed JSON string.\n     *\n     * @param {Object} json Deserialized JSON object.\n     * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n     * @returns {module:engine/model/operation/attributeoperation~AttributeOperation}\n     */\n    value: function fromJSON(json, document) {\n      return new AttributeOperation(Range.fromJSON(json.range, document), json.key, json.oldValue, json.newValue, json.baseVersion);\n    }\n  }, {\n    key: \"className\",\n    get: function get() {\n      return 'AttributeOperation';\n    }\n  }]);\n\n  return AttributeOperation;\n}(Operation);\n\nexport { AttributeOperation as default };","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/textproxy\n */\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * `TextProxy` represents a part of {@link module:engine/model/text~Text text node}.\n *\n * Since {@link module:engine/model/position~Position positions} can be placed between characters of a text node,\n * {@link module:engine/model/range~Range ranges} may contain only parts of text nodes. When {@link module:engine/model/range~Range#getItems\n * getting items}\n * contained in such range, we need to represent a part of that text node, since returning the whole text node would be incorrect.\n * `TextProxy` solves this issue.\n *\n * `TextProxy` has an API similar to {@link module:engine/model/text~Text Text} and allows to do most of the common tasks performed\n * on model nodes.\n *\n * **Note:** Some `TextProxy` instances may represent whole text node, not just a part of it.\n * See {@link module:engine/model/textproxy~TextProxy#isPartial}.\n *\n * **Note:** `TextProxy` is not an instance of {@link module:engine/model/node~Node node}. Keep this in mind when using it as a\n * parameter of methods.\n *\n * **Note:** `TextProxy` is a readonly interface. If you want to perform changes on model data represented by a `TextProxy`\n * use {@link module:engine/model/writer~Writer model writer API}.\n *\n * **Note:** `TextProxy` instances are created on the fly, basing on the current state of model. Because of this, it is\n * highly unrecommended to store references to `TextProxy` instances. `TextProxy` instances are not refreshed when\n * model changes, so they might get invalidated. Instead, consider creating {@link module:engine/model/liveposition~LivePosition live\n * position}.\n *\n * `TextProxy` instances are created by {@link module:engine/model/treewalker~TreeWalker model tree walker}. You should not need to create\n * an instance of this class by your own.\n */\n\nvar TextProxy =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a text proxy.\n   *\n   * @protected\n   * @param {module:engine/model/text~Text} textNode Text node which part is represented by this text proxy.\n   * @param {Number} offsetInText Offset in {@link module:engine/model/textproxy~TextProxy#textNode text node} from which the text proxy\n   * starts.\n   * @param {Number} length Text proxy length, that is how many text node's characters, starting from `offsetInText` it represents.\n   * @constructor\n   */\n  function TextProxy(textNode, offsetInText, length) {\n    _classCallCheck(this, TextProxy);\n\n    /**\n     * Text node which part is represented by this text proxy.\n     *\n     * @readonly\n     * @member {module:engine/model/text~Text}\n     */\n    this.textNode = textNode;\n\n    if (offsetInText < 0 || offsetInText > textNode.offsetSize) {\n      /**\n       * Given `offsetInText` value is incorrect.\n       *\n       * @error model-textproxy-wrong-offsetintext\n       */\n      throw new CKEditorError('model-textproxy-wrong-offsetintext: Given offsetInText value is incorrect.');\n    }\n\n    if (length < 0 || offsetInText + length > textNode.offsetSize) {\n      /**\n       * Given `length` value is incorrect.\n       *\n       * @error model-textproxy-wrong-length\n       */\n      throw new CKEditorError('model-textproxy-wrong-length: Given length value is incorrect.');\n    }\n    /**\n     * Text data represented by this text proxy.\n     *\n     * @readonly\n     * @member {String}\n     */\n\n\n    this.data = textNode.data.substring(offsetInText, offsetInText + length);\n    /**\n     * Offset in {@link module:engine/model/textproxy~TextProxy#textNode text node} from which the text proxy starts.\n     *\n     * @readonly\n     * @member {Number}\n     */\n\n    this.offsetInText = offsetInText;\n  }\n  /**\n   * Offset at which this text proxy starts in it's parent.\n   *\n   * @see module:engine/model/node~Node#startOffset\n   * @readonly\n   * @type {Number}\n   */\n\n\n  _createClass(TextProxy, [{\n    key: \"is\",\n\n    /**\n     * Checks whether given model tree object is of given type.\n     *\n     * Read more in {@link module:engine/model/node~Node#is}.\n     *\n     * @param {String} type\n     * @returns {Boolean}\n     */\n    value: function is(type) {\n      return type == 'textProxy';\n    }\n    /**\n     * Gets path to this text proxy.\n     *\n     * @see module:engine/model/node~Node#getPath\n     * @returns {Array.<Number>}\n     */\n\n  }, {\n    key: \"getPath\",\n    value: function getPath() {\n      var path = this.textNode.getPath();\n\n      if (path.length > 0) {\n        path[path.length - 1] += this.offsetInText;\n      }\n\n      return path;\n    }\n    /**\n     * Returns ancestors array of this text proxy.\n     *\n     * @param {Object} options Options object.\n     * @param {Boolean} [options.includeSelf=false] When set to `true` this text proxy will be also included in parent's array.\n     * @param {Boolean} [options.parentFirst=false] When set to `true`, array will be sorted from text proxy parent to root element,\n     * otherwise root element will be the first item in the array.\n     * @returns {Array} Array with ancestors.\n     */\n\n  }, {\n    key: \"getAncestors\",\n    value: function getAncestors() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        includeSelf: false,\n        parentFirst: false\n      };\n      var ancestors = [];\n      var parent = options.includeSelf ? this : this.parent;\n\n      while (parent) {\n        ancestors[options.parentFirst ? 'push' : 'unshift'](parent);\n        parent = parent.parent;\n      }\n\n      return ancestors;\n    }\n    /**\n     * Checks if this text proxy has an attribute for given key.\n     *\n     * @param {String} key Key of attribute to check.\n     * @returns {Boolean} `true` if attribute with given key is set on text proxy, `false` otherwise.\n     */\n\n  }, {\n    key: \"hasAttribute\",\n    value: function hasAttribute(key) {\n      return this.textNode.hasAttribute(key);\n    }\n    /**\n     * Gets an attribute value for given key or `undefined` if that attribute is not set on text proxy.\n     *\n     * @param {String} key Key of attribute to look for.\n     * @returns {*} Attribute value or `undefined`.\n     */\n\n  }, {\n    key: \"getAttribute\",\n    value: function getAttribute(key) {\n      return this.textNode.getAttribute(key);\n    }\n    /**\n     * Returns iterator that iterates over this node's attributes. Attributes are returned as arrays containing two\n     * items. First one is attribute key and second is attribute value.\n     *\n     * This format is accepted by native `Map` object and also can be passed in `Node` constructor.\n     *\n     * @returns {Iterable.<*>}\n     */\n\n  }, {\n    key: \"getAttributes\",\n    value: function getAttributes() {\n      return this.textNode.getAttributes();\n    }\n    /**\n     * Returns iterator that iterates over this node's attribute keys.\n     *\n     * @returns {Iterable.<String>}\n     */\n\n  }, {\n    key: \"getAttributeKeys\",\n    value: function getAttributeKeys() {\n      return this.textNode.getAttributeKeys();\n    }\n  }, {\n    key: \"startOffset\",\n    get: function get() {\n      return this.textNode.startOffset !== null ? this.textNode.startOffset + this.offsetInText : null;\n    }\n    /**\n     * Offset size of this text proxy. Equal to the number of characters represented by the text proxy.\n     *\n     * @see module:engine/model/node~Node#offsetSize\n     * @readonly\n     * @type {Number}\n     */\n\n  }, {\n    key: \"offsetSize\",\n    get: function get() {\n      return this.data.length;\n    }\n    /**\n     * Offset at which this text proxy ends in it's parent.\n     *\n     * @see module:engine/model/node~Node#endOffset\n     * @readonly\n     * @type {Number}\n     */\n\n  }, {\n    key: \"endOffset\",\n    get: function get() {\n      return this.startOffset !== null ? this.startOffset + this.offsetSize : null;\n    }\n    /**\n     * Flag indicating whether `TextProxy` instance covers only part of the original {@link module:engine/model/text~Text text node}\n     * (`true`) or the whole text node (`false`).\n     *\n     * This is `false` when text proxy starts at the very beginning of {@link module:engine/model/textproxy~TextProxy#textNode textNode}\n     * ({@link module:engine/model/textproxy~TextProxy#offsetInText offsetInText} equals `0`) and text proxy sizes is equal to\n     * text node size.\n     *\n     * @readonly\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isPartial\",\n    get: function get() {\n      return this.offsetSize !== this.textNode.offsetSize;\n    }\n    /**\n     * Parent of this text proxy, which is same as parent of text node represented by this text proxy.\n     *\n     * @readonly\n     * @type {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment|null}\n     */\n\n  }, {\n    key: \"parent\",\n    get: function get() {\n      return this.textNode.parent;\n    }\n    /**\n     * Root of this text proxy, which is same as root of text node represented by this text proxy.\n     *\n     * @readonly\n     * @type {module:engine/model/node~Node|module:engine/model/documentfragment~DocumentFragment}\n     */\n\n  }, {\n    key: \"root\",\n    get: function get() {\n      return this.textNode.root;\n    }\n    /**\n     * {@link module:engine/model/document~Document Document} that owns text node represented by this text proxy or `null` if the text node\n     * has no parent or is inside a {@link module:engine/model/documentfragment~DocumentFragment DocumentFragment}.\n     *\n     * @readonly\n     * @type {module:engine/model/document~Document|null}\n     */\n\n  }, {\n    key: \"document\",\n    get: function get() {\n      return this.textNode.document;\n    }\n  }]);\n\n  return TextProxy;\n}();\n\nexport { TextProxy as default };","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/operation/utils\n */\nimport Node from '../node';\nimport Text from '../text';\nimport TextProxy from '../textproxy';\nimport Range from '../range';\nimport DocumentFragment from '../documentfragment';\nimport NodeList from '../nodelist';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * Contains functions used for composing model tree by {@link module:engine/model/operation/operation~Operation operations}.\n * Those functions are built on top of {@link module:engine/model/node~Node node}, and it's child classes', APIs.\n *\n * @protected\n * @namespace utils\n */\n\n/**\n * Inserts given nodes at given position.\n *\n * @protected\n * @function module:engine/model/operation/utils~utils.insert\n * @param {module:engine/model/position~Position} position Position at which nodes should be inserted.\n * @param {module:engine/model/node~NodeSet} nodes Nodes to insert.\n * @returns {module:engine/model/range~Range} Range spanning over inserted elements.\n */\n\nexport function _insert(position, nodes) {\n  nodes = _normalizeNodes(nodes); // We have to count offset before inserting nodes because they can get merged and we would get wrong offsets.\n\n  var offset = nodes.reduce(function (sum, node) {\n    return sum + node.offsetSize;\n  }, 0);\n  var parent = position.parent; // Insertion might be in a text node, we should split it if that's the case.\n\n  _splitNodeAtPosition(position);\n\n  var index = position.index; // Insert nodes at given index. After splitting we have a proper index and insertion is between nodes,\n  // using basic `Element` API.\n\n  parent._insertChild(index, nodes); // Merge text nodes, if possible. Merging is needed only at points where inserted nodes \"touch\" \"old\" nodes.\n\n\n  _mergeNodesAtIndex(parent, index + nodes.length);\n\n  _mergeNodesAtIndex(parent, index);\n\n  return new Range(position, position.getShiftedBy(offset));\n}\n/**\n * Removed nodes in given range. Only {@link module:engine/model/range~Range#isFlat flat} ranges are accepted.\n *\n * @protected\n * @function module:engine/model/operation/utils~utils._remove\n * @param {module:engine/model/range~Range} range Range containing nodes to remove.\n * @returns {Array.<module:engine/model/node~Node>}\n */\n\nexport function _remove(range) {\n  if (!range.isFlat) {\n    /**\n     * Trying to remove a range which starts and ends in different element.\n     *\n     * @error operation-utils-remove-range-not-flat\n     */\n    throw new CKEditorError('operation-utils-remove-range-not-flat: ' + 'Trying to remove a range which starts and ends in different element.');\n  }\n\n  var parent = range.start.parent; // Range may be inside text nodes, we have to split them if that's the case.\n\n  _splitNodeAtPosition(range.start);\n\n  _splitNodeAtPosition(range.end); // Remove the text nodes using basic `Element` API.\n\n\n  var removed = parent._removeChildren(range.start.index, range.end.index - range.start.index); // Merge text nodes, if possible. After some nodes were removed, node before and after removed range will be\n  // touching at the position equal to the removed range beginning. We check merging possibility there.\n\n\n  _mergeNodesAtIndex(parent, range.start.index);\n\n  return removed;\n}\n/**\n * Moves nodes in given range to given target position. Only {@link module:engine/model/range~Range#isFlat flat} ranges are accepted.\n *\n * @protected\n * @function module:engine/model/operation/utils~utils.move\n * @param {module:engine/model/range~Range} sourceRange Range containing nodes to move.\n * @param {module:engine/model/position~Position} targetPosition Position to which nodes should be moved.\n * @returns {module:engine/model/range~Range} Range containing moved nodes.\n */\n\nexport function _move(sourceRange, targetPosition) {\n  if (!sourceRange.isFlat) {\n    /**\n     * Trying to move a range which starts and ends in different element.\n     *\n     * @error operation-utils-move-range-not-flat\n     */\n    throw new CKEditorError('operation-utils-move-range-not-flat: ' + 'Trying to move a range which starts and ends in different element.');\n  }\n\n  var nodes = _remove(sourceRange); // We have to fix `targetPosition` because model changed after nodes from `sourceRange` got removed and\n  // that change might have an impact on `targetPosition`.\n\n\n  targetPosition = targetPosition._getTransformedByDeletion(sourceRange.start, sourceRange.end.offset - sourceRange.start.offset);\n  return _insert(targetPosition, nodes);\n}\n/**\n * Sets given attribute on nodes in given range. The attributes are only set on top-level nodes of the range, not on its children.\n *\n * @protected\n * @function module:engine/model/operation/utils~utils._setAttribute\n * @param {module:engine/model/range~Range} range Range containing nodes that should have the attribute set. Must be a flat range.\n * @param {String} key Key of attribute to set.\n * @param {*} value Attribute value.\n */\n\nexport function _setAttribute(range, key, value) {\n  // Range might start or end in text nodes, so we have to split them.\n  _splitNodeAtPosition(range.start);\n\n  _splitNodeAtPosition(range.end); // Iterate over all items in the range.\n\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = range.getItems({\n      shallow: true\n    })[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var item = _step.value;\n      // Iterator will return `TextProxy` instances but we know that those text proxies will\n      // always represent full text nodes (this is guaranteed thanks to splitting we did before).\n      // So, we can operate on those text proxies' text nodes.\n      var node = item.is('textProxy') ? item.textNode : item;\n\n      if (value !== null) {\n        node._setAttribute(key, value);\n      } else {\n        node._removeAttribute(key);\n      } // After attributes changing it may happen that some text nodes can be merged. Try to merge with previous node.\n\n\n      _mergeNodesAtIndex(node.parent, node.index);\n    } // Try to merge last changed node with it's previous sibling (not covered by the loop above).\n\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  _mergeNodesAtIndex(range.end.parent, range.end.index);\n}\n/**\n * Normalizes given object or an array of objects to an array of {@link module:engine/model/node~Node nodes}. See\n * {@link module:engine/model/node~NodeSet NodeSet} for details on how normalization is performed.\n *\n * @protected\n * @function module:engine/model/operation/utils~utils.normalizeNodes\n * @param {module:engine/model/node~NodeSet} nodes Objects to normalize.\n * @returns {Array.<module:engine/model/node~Node>} Normalized nodes.\n */\n\nexport function _normalizeNodes(nodes) {\n  var normalized = [];\n\n  if (!(nodes instanceof Array)) {\n    nodes = [nodes];\n  } // Convert instances of classes other than Node.\n\n\n  for (var i = 0; i < nodes.length; i++) {\n    if (typeof nodes[i] == 'string') {\n      normalized.push(new Text(nodes[i]));\n    } else if (nodes[i] instanceof TextProxy) {\n      normalized.push(new Text(nodes[i].data, nodes[i].getAttributes()));\n    } else if (nodes[i] instanceof DocumentFragment || nodes[i] instanceof NodeList) {\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = nodes[i][Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var child = _step2.value;\n          normalized.push(child);\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    } else if (nodes[i] instanceof Node) {\n      normalized.push(nodes[i]);\n    } // Skip unrecognized type.\n\n  } // Merge text nodes.\n\n\n  for (var _i = 1; _i < normalized.length; _i++) {\n    var node = normalized[_i];\n    var prev = normalized[_i - 1];\n\n    if (node instanceof Text && prev instanceof Text && _haveSameAttributes(node, prev)) {\n      // Doing this instead changing `prev.data` because `data` is readonly.\n      normalized.splice(_i - 1, 2, new Text(prev.data + node.data, prev.getAttributes()));\n      _i--;\n    }\n  }\n\n  return normalized;\n} // Checks if nodes before and after given index in given element are {@link module:engine/model/text~Text text nodes} and\n// merges them into one node if they have same attributes.\n//\n// Merging is done by removing two text nodes and inserting a new text node containing data from both merged text nodes.\n//\n// @private\n// @param {module:engine/model/element~Element} element Parent element of nodes to merge.\n// @param {Number} index Index between nodes to merge.\n\nfunction _mergeNodesAtIndex(element, index) {\n  var nodeBefore = element.getChild(index - 1);\n  var nodeAfter = element.getChild(index); // Check if both of those nodes are text objects with same attributes.\n\n  if (nodeBefore && nodeAfter && nodeBefore.is('text') && nodeAfter.is('text') && _haveSameAttributes(nodeBefore, nodeAfter)) {\n    // Append text of text node after index to the before one.\n    var mergedNode = new Text(nodeBefore.data + nodeAfter.data, nodeBefore.getAttributes()); // Remove separate text nodes.\n\n    element._removeChildren(index - 1, 2); // Insert merged text node.\n\n\n    element._insertChild(index - 1, mergedNode);\n  }\n} // Checks if given position is in a text node, and if so, splits the text node in two text nodes, each of them\n// containing a part of original text node.\n//\n// @private\n// @param {module:engine/model/position~Position} position Position at which node should be split.\n\n\nfunction _splitNodeAtPosition(position) {\n  var textNode = position.textNode;\n  var element = position.parent;\n\n  if (textNode) {\n    var offsetDiff = position.offset - textNode.startOffset;\n    var index = textNode.index;\n\n    element._removeChildren(index, 1);\n\n    var firstPart = new Text(textNode.data.substr(0, offsetDiff), textNode.getAttributes());\n    var secondPart = new Text(textNode.data.substr(offsetDiff), textNode.getAttributes());\n\n    element._insertChild(index, [firstPart, secondPart]);\n  }\n} // Checks whether two given nodes have same attributes.\n//\n// @private\n// @param {module:engine/model/node~Node} nodeA Node to check.\n// @param {module:engine/model/node~Node} nodeB Node to check.\n// @returns {Boolean} `true` if nodes have same attributes, `false` otherwise.\n\n\nfunction _haveSameAttributes(nodeA, nodeB) {\n  var iteratorA = nodeA.getAttributes();\n  var iteratorB = nodeB.getAttributes();\n  var _iteratorNormalCompletion3 = true;\n  var _didIteratorError3 = false;\n  var _iteratorError3 = undefined;\n\n  try {\n    for (var _iterator3 = iteratorA[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n      var attr = _step3.value;\n\n      if (attr[1] !== nodeB.getAttribute(attr[0])) {\n        return false;\n      }\n\n      iteratorB.next();\n    }\n  } catch (err) {\n    _didIteratorError3 = true;\n    _iteratorError3 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n        _iterator3.return();\n      }\n    } finally {\n      if (_didIteratorError3) {\n        throw _iteratorError3;\n      }\n    }\n  }\n\n  return iteratorB.next().done;\n}\n/**\n * Value that can be normalized to an array of {@link module:engine/model/node~Node nodes}.\n *\n * Non-arrays are normalized as follows:\n * * {@link module:engine/model/node~Node Node} is left as is,\n * * {@link module:engine/model/textproxy~TextProxy TextProxy} and `String` are normalized to {@link module:engine/model/text~Text Text},\n * * {@link module:engine/model/nodelist~NodeList NodeList} is normalized to an array containing all nodes that are in that node list,\n * * {@link module:engine/model/documentfragment~DocumentFragment DocumentFragment} is normalized to an array containing all of it's\n * * children.\n *\n * Arrays are processed item by item like non-array values and flattened to one array. Normalization always results in\n * a flat array of {@link module:engine/model/node~Node nodes}. Consecutive text nodes (or items normalized to text nodes) will be\n * merged if they have same attributes.\n *\n * @typedef {module:engine/model/node~Node|module:engine/model/textproxy~TextProxy|String|\n * module:engine/model/nodelist~NodeList|module:engine/model/documentfragment~DocumentFragment|Iterable}\n * module:engine/model/node~NodeSet\n */","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/operation/insertoperation\n */\nimport Operation from './operation';\nimport Position from '../position';\nimport NodeList from '../nodelist';\nimport MoveOperation from './moveoperation';\nimport { _insert, _normalizeNodes } from './utils';\nimport Text from '../text';\nimport Element from '../element';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * Operation to insert one or more nodes at given position in the model.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\n\nvar InsertOperation =\n/*#__PURE__*/\nfunction (_Operation) {\n  _inherits(InsertOperation, _Operation);\n\n  /**\n   * Creates an insert operation.\n   *\n   * @param {module:engine/model/position~Position} position Position of insertion.\n   * @param {module:engine/model/node~NodeSet} nodes The list of nodes to be inserted.\n   * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n   * can be applied or `null` if the operation operates on detached (non-document) tree.\n   */\n  function InsertOperation(position, nodes, baseVersion) {\n    var _this;\n\n    _classCallCheck(this, InsertOperation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InsertOperation).call(this, baseVersion));\n    /**\n     * Position of insertion.\n     *\n     * @readonly\n     * @member {module:engine/model/position~Position} module:engine/model/operation/insertoperation~InsertOperation#position\n     */\n\n    _this.position = position.clone();\n    _this.position.stickiness = 'toNone';\n    /**\n     * List of nodes to insert.\n     *\n     * @readonly\n     * @member {module:engine/model/nodelist~NodeList} module:engine/model/operation/insertoperation~InsertOperation#nodeList\n     */\n\n    _this.nodes = new NodeList(_normalizeNodes(nodes));\n    /**\n     * Flag deciding how the operation should be transformed. If set to `true`, nodes might get additional attributes\n     * during operational transformation. This happens when the operation insertion position is inside of a range\n     * where attributes have changed.\n     *\n     * @member {Boolean} module:engine/model/operation/insertoperation~InsertOperation#shouldReceiveAttributes\n     */\n\n    _this.shouldReceiveAttributes = false;\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(InsertOperation, [{\n    key: \"clone\",\n\n    /**\n     * Creates and returns an operation that has the same parameters as this operation.\n     *\n     * @returns {module:engine/model/operation/insertoperation~InsertOperation} Clone of this operation.\n     */\n    value: function clone() {\n      var nodes = new NodeList(_toConsumableArray(this.nodes).map(function (node) {\n        return node._clone(true);\n      }));\n      var insert = new InsertOperation(this.position, nodes, this.baseVersion);\n      insert.shouldReceiveAttributes = this.shouldReceiveAttributes;\n      return insert;\n    }\n    /**\n     * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n     *\n     * @returns {module:engine/model/operation/moveoperation~MoveOperation}\n     */\n\n  }, {\n    key: \"getReversed\",\n    value: function getReversed() {\n      var graveyard = this.position.root.document.graveyard;\n      var gyPosition = new Position(graveyard, [0]);\n      return new MoveOperation(this.position, this.nodes.maxOffset, gyPosition, this.baseVersion + 1);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_validate\",\n    value: function _validate() {\n      var targetElement = this.position.parent;\n\n      if (!targetElement || targetElement.maxOffset < this.position.offset) {\n        /**\n         * Insertion position is invalid.\n         *\n         * @error insert-operation-position-invalid\n         */\n        throw new CKEditorError('insert-operation-position-invalid: Insertion position is invalid.');\n      }\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_execute\",\n    value: function _execute() {\n      // What happens here is that we want original nodes be passed to writer because we want original nodes\n      // to be inserted to the model. But in InsertOperation, we want to keep those nodes as they were added\n      // to the operation, not modified. For example, text nodes can get merged or cropped while Elements can\n      // get children. It is important that InsertOperation has the copy of original nodes in intact state.\n      var originalNodes = this.nodes;\n      this.nodes = new NodeList(_toConsumableArray(originalNodes).map(function (node) {\n        return node._clone(true);\n      }));\n\n      _insert(this.position, originalNodes);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = _get(_getPrototypeOf(InsertOperation.prototype), \"toJSON\", this).call(this);\n\n      json.position = this.position.toJSON();\n      json.nodes = this.nodes.toJSON();\n      return json;\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"type\",\n    get: function get() {\n      return 'insert';\n    }\n    /**\n     * Total offset size of inserted nodes.\n     *\n     * @returns {Number}\n     */\n\n  }, {\n    key: \"howMany\",\n    get: function get() {\n      return this.nodes.maxOffset;\n    }\n  }], [{\n    key: \"fromJSON\",\n\n    /**\n     * Creates `InsertOperation` object from deserilized object, i.e. from parsed JSON string.\n     *\n     * @param {Object} json Deserialized JSON object.\n     * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n     * @returns {module:engine/model/operation/insertoperation~InsertOperation}\n     */\n    value: function fromJSON(json, document) {\n      var children = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = json.nodes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var child = _step.value;\n\n          if (child.name) {\n            // If child has name property, it is an Element.\n            children.push(Element.fromJSON(child));\n          } else {\n            // Otherwise, it is a Text node.\n            children.push(Text.fromJSON(child));\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      var insert = new InsertOperation(Position.fromJSON(json.position, document), children, json.baseVersion);\n      insert.shouldReceiveAttributes = json.shouldReceiveAttributes;\n      return insert;\n    }\n  }, {\n    key: \"className\",\n    get: function get() {\n      return 'InsertOperation';\n    }\n  }]);\n\n  return InsertOperation;\n}(Operation);\n\nexport { InsertOperation as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\nimport ModelRange from '../model/range';\nimport ModelSelection from '../model/selection';\nimport ModelElement from '../model/element';\nimport ViewAttributeElement from '../view/attributeelement';\nimport DocumentSelection from '../model/documentselection';\nimport log from '@ckeditor/ckeditor5-utils/src/log';\nimport { cloneDeep } from 'lodash-es';\n/**\n * Contains downcast (model-to-view) converters for {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}.\n *\n * @module engine/conversion/downcast-converters\n */\n\n/**\n * Model element to view element conversion helper.\n *\n * This conversion results in creating a view element. For example, model `<paragraph>Foo</paragraph>` becomes `<p>Foo</p>` in the view.\n *\n *\t\tdowncastElementToElement( { model: 'paragraph', view: 'p' } );\n *\n *\t\tdowncastElementToElement( { model: 'paragraph', view: 'div', converterPriority: 'high' } );\n *\n *\t\tdowncastElementToElement( {\n *\t\t\tmodel: 'fancyParagraph',\n *\t\t\tview: {\n *\t\t\t\tname: 'p',\n *\t\t\t\tclasses: 'fancy'\n *\t\t\t}\n *\t\t} );\n *\n * \t\tdowncastElementToElement( {\n * \t\t\tmodel: 'heading',\n * \t\t\tview: ( modelElement, viewWriter ) => viewWriter.createContainerElement( 'h' + modelElement.getAttribute( 'level' ) )\n * \t\t} );\n *\n * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n * to the conversion process.\n *\n * @param {Object} config Conversion configuration.\n * @param {String} config.model The name of the model element to convert.\n * @param {module:engine/view/elementdefinition~ElementDefinition|Function} config.view A view element definition or a function\n * that takes the model element and {@link module:engine/view/downcastwriter~DowncastWriter view downcast writer}\n * as parameters and returns a view container element.\n * @returns {Function} Conversion helper.\n */\n\nexport function downcastElementToElement(config) {\n  config = cloneDeep(config);\n  config.view = _normalizeToElementConfig(config.view, 'container');\n  return function (dispatcher) {\n    dispatcher.on('insert:' + config.model, insertElement(config.view), {\n      priority: config.converterPriority || 'normal'\n    });\n  };\n}\n/**\n * Model attribute to view element conversion helper.\n *\n * This conversion results in wrapping view nodes with a view attribute element. For example, a model text node with\n * `\"Foo\"` as data and the `bold` attribute becomes `<strong>Foo</strong>` in the view.\n *\n *\t\tdowncastAttributeToElement( { model: 'bold', view: 'strong' } );\n *\n *\t\tdowncastAttributeToElement( { model: 'bold', view: 'b', converterPriority: 'high' } );\n *\n *\t\tdowncastAttributeToElement( {\n *\t\t\tmodel: 'invert',\n *\t\t\tview: {\n *\t\t\t\tname: 'span',\n *\t\t\t\tclasses: [ 'font-light', 'bg-dark' ]\n *\t\t\t}\n *\t\t} );\n *\n *\t\tdowncastAttributeToElement( {\n *\t\t\tmodel: {\n *\t\t\t\tkey: 'fontSize',\n *\t\t\t\tvalues: [ 'big', 'small' ]\n *\t\t\t},\n *\t\t\tview: {\n *\t\t\t\tbig: {\n *\t\t\t\t\tname: 'span',\n *\t\t\t\t\tstyles: {\n *\t\t\t\t\t\t'font-size': '1.2em'\n *\t\t\t\t\t}\n *\t\t\t\t},\n *\t\t\t\tsmall: {\n *\t\t\t\t\tname: 'span',\n *\t\t\t\t\tstyles: {\n *\t\t\t\t\t\t'font-size': '0.8em'\n *\t\t\t\t\t}\n *\t\t\t\t}\n *\t\t\t}\n *\t\t} );\n *\n * \t\tdowncastAttributeToElement( {\n * \t\t\tmodel: 'bold',\n * \t\t\tview: ( modelAttributeValue, viewWriter ) => {\n * \t\t\t\treturn viewWriter.createAttributeElement( 'span', { style: 'font-weight:' + modelAttributeValue } );\n * \t\t\t}\n * \t\t} );\n *\n *\t\tdowncastAttributeToElement( {\n *\t\t\tmodel: {\n *\t\t\t\tkey: 'color',\n *\t\t\t\tname: '$text'\n *\t\t\t},\n *\t\t\tview: ( modelAttributeValue, viewWriter ) => {\n *\t\t\t\treturn viewWriter.createAttributeElement( 'span', { style: 'color:' + modelAttributeValue } );\n *\t\t\t}\n *\t\t} );\n *\n * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n * to the conversion process.\n *\n * @param {Object} config Conversion configuration.\n * @param {String|Object} config.model The key of the attribute to convert from or a `{ key, values }` object. `values` is an array\n * of `String`s with possible values if the model attribute is an enumerable.\n * @param {module:engine/view/elementdefinition~ElementDefinition|Function|Object} config.view A view element definition or a function\n * that takes the model attribute value and {@link module:engine/view/downcastwriter~DowncastWriter view downcast writer}\n * as parameters and returns a view attribute element. If `config.model.values` is\n * given, `config.view` should be an object assigning values from `config.model.values` to view element definitions or functions.\n * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n * @returns {Function} Conversion helper.\n */\n\nexport function downcastAttributeToElement(config) {\n  config = cloneDeep(config);\n  var modelKey = config.model.key ? config.model.key : config.model;\n  var eventName = 'attribute:' + modelKey;\n\n  if (config.model.name) {\n    eventName += ':' + config.model.name;\n  }\n\n  if (config.model.values) {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = config.model.values[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var modelValue = _step.value;\n        config.view[modelValue] = _normalizeToElementConfig(config.view[modelValue], 'attribute');\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  } else {\n    config.view = _normalizeToElementConfig(config.view, 'attribute');\n  }\n\n  var elementCreator = _getFromAttributeCreator(config);\n\n  return function (dispatcher) {\n    dispatcher.on(eventName, wrap(elementCreator), {\n      priority: config.converterPriority || 'normal'\n    });\n  };\n}\n/**\n * Model attribute to view attribute conversion helper.\n *\n * This conversion results in adding an attribute to a view node, basing on an attribute from a model node. For example,\n * `<image src='foo.jpg'></image>` is converted to `<img src='foo.jpg'></img>`.\n *\n *\t\tdowncastAttributeToAttribute( { model: 'source', view: 'src' } );\n *\n *\t\tdowncastAttributeToAttribute( { model: 'source', view: 'href', converterPriority: 'high' } );\n *\n *\t\tdowncastAttributeToAttribute( {\n *\t\t\tmodel: {\n *\t\t\t\tname: 'image',\n *\t\t\t\tkey: 'source'\n *\t\t\t},\n *\t\t\tview: 'src'\n *\t\t} );\n *\n *\t\tdowncastAttributeToAttribute( {\n *\t\t\tmodel: {\n *\t\t\t\tname: 'styled',\n *\t\t\t\tvalues: [ 'dark', 'light' ]\n *\t\t\t},\n *\t\t\tview: {\n *\t\t\t\tdark: {\n *\t\t\t\t\tkey: 'class',\n *\t\t\t\t\tvalue: [ 'styled', 'styled-dark' ]\n *\t\t\t\t},\n *\t\t\t\tlight: {\n *\t\t\t\t\tkey: 'class',\n *\t\t\t\t\tvalue: [ 'styled', 'styled-light' ]\n *\t\t\t\t}\n *\t\t\t}\n *\t\t} );\n *\n *\t\tdowncastAttributeToAttribute( {\n *\t\t\tmodel: 'styled',\n *\t\t\tview: modelAttributeValue => ( { key: 'class', value: 'styled-' + modelAttributeValue } )\n *\t\t} );\n *\n * See {@link module:engine/conversion/conversion~Conversion#for `conversion.for()`} to learn how to add a converter\n * to the conversion process.\n *\n * @param {Object} config Conversion configuration.\n * @param {String|Object} config.model The key of the attribute to convert from or a `{ key, values, [ name ] }` object describing\n * the attribute key, possible values and, optionally, an element name to convert from.\n * @param {String|Object|Function} config.view A view attribute key, or a `{ key, value }` object or a function that takes\n * the model attribute value and returns a `{ key, value }` object. If `key` is `'class'`, `value` can be a `String` or an\n * array of `String`s. If `key` is `'style'`, `value` is an object with key-value pairs. In other cases, `value` is a `String`.\n * If `config.model.values` is set, `config.view` should be an object assigning values from `config.model.values` to\n * `{ key, value }` objects or a functions.\n * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n * @returns {Function} Conversion helper.\n */\n\nexport function downcastAttributeToAttribute(config) {\n  config = cloneDeep(config);\n  var modelKey = config.model.key ? config.model.key : config.model;\n  var eventName = 'attribute:' + modelKey;\n\n  if (config.model.name) {\n    eventName += ':' + config.model.name;\n  }\n\n  if (config.model.values) {\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n      for (var _iterator2 = config.model.values[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        var modelValue = _step2.value;\n        config.view[modelValue] = _normalizeToAttributeConfig(config.view[modelValue]);\n      }\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n          _iterator2.return();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n  } else {\n    config.view = _normalizeToAttributeConfig(config.view);\n  }\n\n  var elementCreator = _getFromAttributeCreator(config);\n\n  return function (dispatcher) {\n    dispatcher.on(eventName, changeAttribute(elementCreator), {\n      priority: config.converterPriority || 'normal'\n    });\n  };\n}\n/**\n * Model marker to view element conversion helper.\n *\n * This conversion results in creating a view element on the boundaries of the converted marker. If the converted marker\n * is collapsed, only one element is created. For example, model marker set like this: `<paragraph>F[oo b]ar</paragraph>`\n * becomes `<p>F<span data-marker=\"search\"></span>oo b<span data-marker=\"search\"></span>ar</p>` in the view.\n *\n *\t\tdowncastMarkerToElement( { model: 'search', view: 'marker-search' } );\n *\n *\t\tdowncastMarkerToElement( { model: 'search', view: 'search-result', converterPriority: 'high' } );\n *\n *\t\tdowncastMarkerToElement( {\n *\t\t\tmodel: 'search',\n *\t\t\tview: {\n *\t\t\t\tname: 'span',\n *\t\t\t\tattributes: {\n *\t\t\t\t\t'data-marker': 'search'\n *\t\t\t\t}\n *\t\t\t}\n *\t\t} );\n *\n * \t\tdowncastMarkerToElement( {\n * \t\t\tmodel: 'search',\n * \t\t\tview: ( markerData, viewWriter ) => {\n *\t \t\t\treturn viewWriter.createUIElement( 'span', { 'data-marker': 'search', 'data-start': markerData.isOpening } );\n * \t\t\t}\n * \t\t} );\n *\n * If a function is passed as the `config.view` parameter, it will be used to generate both boundary elements. The function\n * receives the `data` object as a parameter and should return an instance of the\n * {@link module:engine/view/uielement~UIElement view UI element}. The `data` and `conversionApi` objects are passed from\n * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:addMarker}. Additionally,\n * the `data.isOpening` parameter is passed, which is set to `true` for the marker start boundary element, and `false` to\n * the marker end boundary element.\n *\n * This kind of conversion is useful for saving data into the database, so it should be used in the data conversion pipeline.\n *\n * See {@link module:engine/conversion/conversion~Conversion#for} to learn how to add a converter to the conversion process.\n *\n * @param {Object} config Conversion configuration.\n * @param {String} config.model The name of the model marker (or model marker group) to convert.\n * @param {module:engine/view/elementdefinition~ElementDefinition|Function} config.view A view element definition or a function\n * that takes the model marker data as a parameter and returns a view UI element.\n * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n * @returns {Function} Conversion helper.\n */\n\nexport function downcastMarkerToElement(config) {\n  config = cloneDeep(config);\n  config.view = _normalizeToElementConfig(config.view, 'ui');\n  return function (dispatcher) {\n    dispatcher.on('addMarker:' + config.model, insertUIElement(config.view), {\n      priority: config.converterPriority || 'normal'\n    });\n    dispatcher.on('removeMarker:' + config.model, removeUIElement(config.view), {\n      priority: config.converterPriority || 'normal'\n    });\n  };\n}\n/**\n * Model marker to highlight conversion helper.\n *\n * This conversion results in creating a highlight on view nodes. For this kind of conversion,\n * {@link module:engine/conversion/downcast-converters~HighlightDescriptor} should be provided.\n *\n * For text nodes, a `<span>` {@link module:engine/view/attributeelement~AttributeElement} is created and it wraps all text nodes\n * in the converted marker range. For example, a model marker set like this: `<paragraph>F[oo b]ar</paragraph>` becomes\n * `<p>F<span class=\"comment\">oo b</span>ar</p>` in the view.\n *\n * {@link module:engine/view/containerelement~ContainerElement} may provide a custom way of handling highlight. Most often,\n * the element itself is given classes and attributes described in the highlight descriptor (instead of being wrapped in `<span>`).\n * For example, a model marker set like this: `[<image src=\"foo.jpg\"></image>]` becomes `<img src=\"foo.jpg\" class=\"comment\"></img>`\n * in the view.\n *\n * For container elements, the conversion is two-step. While the converter processes the highlight descriptor and passes it\n * to a container element, it is the container element instance itself that applies values from the highlight descriptor.\n * So, in a sense, the converter takes care of stating what should be applied on what, while the element decides how to apply that.\n *\n *\t\tdowncastMarkerToHighlight( { model: 'comment', view: { classes: 'comment' } } );\n *\n *\t\tdowncastMarkerToHighlight( { model: 'comment', view: { classes: 'new-comment' }, converterPriority: 'high' } );\n *\n * \t\tdowncastMarkerToHighlight( {\n * \t\t\tmodel: 'comment',\n * \t\t\tview: data => {\n * \t\t\t\t// Assuming that the marker name is in a form of comment:commentType.\n *\t \t\t\tconst commentType = data.markerName.split( ':' )[ 1 ];\n *\n *\t \t\t\treturn {\n *\t \t\t\t\tclasses: [ 'comment', 'comment-' + commentType ]\n *\t \t\t\t};\n * \t\t\t}\n * \t\t} );\n *\n * If a function is passed as the `config.view` parameter, it will be used to generate the highlight descriptor. The function\n * receives the `data` object as a parameter and should return a\n * {@link module:engine/conversion/downcast-converters~HighlightDescriptor highlight descriptor}.\n * The `data` object properties are passed from {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:addMarker}.\n *\n * See {@link module:engine/conversion/conversion~Conversion#for} to learn how to add a converter to the conversion process.\n *\n * @param {Object} config Conversion configuration.\n * @param {String} config.model The name of the model marker (or model marker group) to convert.\n * @param {module:engine/conversion/downcast-converters~HighlightDescriptor|Function} config.view A highlight descriptor\n * that will be used for highlighting or a function that takes the model marker data as a parameter and returns a highlight descriptor.\n * @param {module:utils/priorities~PriorityString} [config.converterPriority='normal'] Converter priority.\n * @returns {Function} Conversion helper.\n */\n\nexport function downcastMarkerToHighlight(config) {\n  return function (dispatcher) {\n    dispatcher.on('addMarker:' + config.model, highlightText(config.view), {\n      priority: config.converterPriority || 'normal'\n    });\n    dispatcher.on('addMarker:' + config.model, highlightElement(config.view), {\n      priority: config.converterPriority || 'normal'\n    });\n    dispatcher.on('removeMarker:' + config.model, removeHighlight(config.view), {\n      priority: config.converterPriority || 'normal'\n    });\n  };\n} // Takes `config.view`, and if it is an {@link module:engine/view/elementdefinition~ElementDefinition}, converts it\n// to a function (because lower level converters accept only element creator functions).\n//\n// @param {module:engine/view/elementdefinition~ElementDefinition|Function} view View configuration.\n// @param {'container'|'attribute'|'ui'} viewElementType View element type to create.\n// @returns {Function} Element creator function to use in lower level converters.\n\nfunction _normalizeToElementConfig(view, viewElementType) {\n  if (typeof view == 'function') {\n    // If `view` is already a function, don't do anything.\n    return view;\n  }\n\n  return function (modelData, viewWriter) {\n    return _createViewElementFromDefinition(view, viewWriter, viewElementType);\n  };\n} // Creates a view element instance from the provided {@link module:engine/view/elementdefinition~ElementDefinition} and class.\n//\n// @param {module:engine/view/elementdefinition~ElementDefinition} viewElementDefinition\n// @param {module:engine/view/downcastwriter~DowncastWriter} viewWriter\n// @param {'container'|'attribute'|'ui'} viewElementType\n// @returns {module:engine/view/element~Element}\n\n\nfunction _createViewElementFromDefinition(viewElementDefinition, viewWriter, viewElementType) {\n  if (typeof viewElementDefinition == 'string') {\n    // If `viewElementDefinition` is given as a `String`, normalize it to an object with `name` property.\n    viewElementDefinition = {\n      name: viewElementDefinition\n    };\n  }\n\n  var element;\n  var attributes = Object.assign({}, viewElementDefinition.attributes);\n\n  if (viewElementType == 'container') {\n    element = viewWriter.createContainerElement(viewElementDefinition.name, attributes);\n  } else if (viewElementType == 'attribute') {\n    var options = {\n      priority: viewElementDefinition.priority || ViewAttributeElement.DEFAULT_PRIORITY\n    };\n    element = viewWriter.createAttributeElement(viewElementDefinition.name, attributes, options);\n  } else {\n    // 'ui'.\n    element = viewWriter.createUIElement(viewElementDefinition.name, attributes);\n  }\n\n  if (viewElementDefinition.styles) {\n    var keys = Object.keys(viewElementDefinition.styles);\n\n    for (var _i = 0; _i < keys.length; _i++) {\n      var key = keys[_i];\n      viewWriter.setStyle(key, viewElementDefinition.styles[key], element);\n    }\n  }\n\n  if (viewElementDefinition.classes) {\n    var classes = viewElementDefinition.classes;\n\n    if (typeof classes == 'string') {\n      viewWriter.addClass(classes, element);\n    } else {\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = classes[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var className = _step3.value;\n          viewWriter.addClass(className, element);\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n  }\n\n  return element;\n}\n\nfunction _getFromAttributeCreator(config) {\n  if (config.model.values) {\n    return function (modelAttributeValue, viewWriter) {\n      var view = config.view[modelAttributeValue];\n\n      if (view) {\n        return view(modelAttributeValue, viewWriter);\n      }\n\n      return null;\n    };\n  } else {\n    return config.view;\n  }\n} // Takes the configuration, adds default parameters if they do not exist and normalizes other parameters to be used in downcast converters\n// for generating a view attribute.\n//\n// @param {Object} view View configuration.\n\n\nfunction _normalizeToAttributeConfig(view) {\n  if (typeof view == 'string') {\n    return function (modelAttributeValue) {\n      return {\n        key: view,\n        value: modelAttributeValue\n      };\n    };\n  } else if (_typeof(view) == 'object') {\n    // { key, value, ... }\n    if (view.value) {\n      return function () {\n        return view;\n      };\n    } // { key, ... }\n    else {\n        return function (modelAttributeValue) {\n          return {\n            key: view.key,\n            value: modelAttributeValue\n          };\n        };\n      }\n  } else {\n    // function.\n    return view;\n  }\n}\n/**\n * Function factory that creates a converter which converts node insertion changes from the model to the view.\n * The function passed will be provided with all the parameters of the dispatcher's\n * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:insert `insert` event}.\n * It is expected that the function returns an {@link module:engine/view/element~Element}.\n * The result of the function will be inserted into the view.\n *\n * The converter automatically consumes the corresponding value from the consumables list, stops the event (see\n * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}) and binds the model and view elements.\n *\n *\t\tdowncastDispatcher.on(\n *\t\t\t'insert:myElem',\n *\t\t\tinsertElement( ( modelItem, viewWriter ) => {\n *\t\t\t\tconst text = viewWriter.createText( 'myText' );\n *\t\t\t\tconst myElem = viewWriter.createElement( 'myElem', { myAttr: 'my-' + modelItem.getAttribute( 'myAttr' ) }, text );\n *\n *\t\t\t\t// Do something fancy with `myElem` using `modelItem` or other parameters.\n *\n *\t\t\t\treturn myElem;\n *\t\t\t}\n *\t\t) );\n *\n * @param {Function} elementCreator Function returning a view element, which will be inserted.\n * @returns {Function} Insert element event converter.\n */\n\n\nexport function insertElement(elementCreator) {\n  return function (evt, data, conversionApi) {\n    var viewElement = elementCreator(data.item, conversionApi.writer);\n\n    if (!viewElement) {\n      return;\n    }\n\n    if (!conversionApi.consumable.consume(data.item, 'insert')) {\n      return;\n    }\n\n    var viewPosition = conversionApi.mapper.toViewPosition(data.range.start);\n    conversionApi.mapper.bindElements(data.item, viewElement);\n    conversionApi.writer.insert(viewPosition, viewElement);\n  };\n}\n/**\n * Function factory that creates a default downcast converter for text insertion changes.\n *\n * The converter automatically consumes the corresponding value from the consumables list and stops the event (see\n * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}).\n *\n *\t\tmodelDispatcher.on( 'insert:$text', insertText() );\n *\n * @returns {Function} Insert text event converter.\n */\n\nexport function insertText() {\n  return function (evt, data, conversionApi) {\n    if (!conversionApi.consumable.consume(data.item, 'insert')) {\n      return;\n    }\n\n    var viewWriter = conversionApi.writer;\n    var viewPosition = conversionApi.mapper.toViewPosition(data.range.start);\n    var viewText = viewWriter.createText(data.item.data);\n    viewWriter.insert(viewPosition, viewText);\n  };\n}\n/**\n * Function factory that creates a default downcast converter for node remove changes.\n *\n *\t\tmodelDispatcher.on( 'remove', remove() );\n *\n * @returns {Function} Remove event converter.\n */\n\nexport function remove() {\n  return function (evt, data, conversionApi) {\n    // Find view range start position by mapping model position at which the remove happened.\n    var viewStart = conversionApi.mapper.toViewPosition(data.position);\n    var modelEnd = data.position.getShiftedBy(data.length);\n    var viewEnd = conversionApi.mapper.toViewPosition(modelEnd, {\n      isPhantom: true\n    });\n    var viewRange = conversionApi.writer.createRange(viewStart, viewEnd); // Trim the range to remove in case some UI elements are on the view range boundaries.\n\n    var removed = conversionApi.writer.remove(viewRange.getTrimmed()); // After the range is removed, unbind all view elements from the model.\n    // Range inside view document fragment is used to unbind deeply.\n\n    var _iteratorNormalCompletion4 = true;\n    var _didIteratorError4 = false;\n    var _iteratorError4 = undefined;\n\n    try {\n      for (var _iterator4 = conversionApi.writer.createRangeIn(removed).getItems()[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n        var child = _step4.value;\n        conversionApi.mapper.unbindViewElement(child);\n      }\n    } catch (err) {\n      _didIteratorError4 = true;\n      _iteratorError4 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n          _iterator4.return();\n        }\n      } finally {\n        if (_didIteratorError4) {\n          throw _iteratorError4;\n        }\n      }\n    }\n  };\n}\n/**\n * Function factory that creates a converter which converts marker adding change to the\n * {@link module:engine/view/uielement~UIElement view UI element}.\n *\n * The view UI element that will be added to the view depends on the passed parameter. See {@link ~insertElement}.\n * In case of a non-collapsed range, the UI element will not wrap nodes but separate elements will be placed at the beginning\n * and at the end of the range.\n *\n * This converter binds created UI elements with the marker name using {@link module:engine/conversion/mapper~Mapper#bindElementToMarker}.\n *\n * @param {module:engine/view/uielement~UIElement|Function} elementCreator A view UI element or a function returning the view element\n * that will be inserted.\n * @returns {Function} Insert element event converter.\n */\n\nexport function insertUIElement(elementCreator) {\n  return function (evt, data, conversionApi) {\n    // Create two view elements. One will be inserted at the beginning of marker, one at the end.\n    // If marker is collapsed, only \"opening\" element will be inserted.\n    data.isOpening = true;\n    var viewStartElement = elementCreator(data, conversionApi.writer);\n    data.isOpening = false;\n    var viewEndElement = elementCreator(data, conversionApi.writer);\n\n    if (!viewStartElement || !viewEndElement) {\n      return;\n    }\n\n    var markerRange = data.markerRange; // Marker that is collapsed has consumable build differently that non-collapsed one.\n    // For more information see `addMarker` event description.\n    // If marker's range is collapsed - check if it can be consumed.\n\n    if (markerRange.isCollapsed && !conversionApi.consumable.consume(markerRange, evt.name)) {\n      return;\n    } // If marker's range is not collapsed - consume all items inside.\n\n\n    var _iteratorNormalCompletion5 = true;\n    var _didIteratorError5 = false;\n    var _iteratorError5 = undefined;\n\n    try {\n      for (var _iterator5 = markerRange[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n        var value = _step5.value;\n\n        if (!conversionApi.consumable.consume(value.item, evt.name)) {\n          return;\n        }\n      }\n    } catch (err) {\n      _didIteratorError5 = true;\n      _iteratorError5 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n          _iterator5.return();\n        }\n      } finally {\n        if (_didIteratorError5) {\n          throw _iteratorError5;\n        }\n      }\n    }\n\n    var mapper = conversionApi.mapper;\n    var viewWriter = conversionApi.writer; // Add \"opening\" element.\n\n    viewWriter.insert(mapper.toViewPosition(markerRange.start), viewStartElement);\n    conversionApi.mapper.bindElementToMarker(viewStartElement, data.markerName); // Add \"closing\" element only if range is not collapsed.\n\n    if (!markerRange.isCollapsed) {\n      viewWriter.insert(mapper.toViewPosition(markerRange.end), viewEndElement);\n      conversionApi.mapper.bindElementToMarker(viewEndElement, data.markerName);\n    }\n\n    evt.stop();\n  };\n}\n/**\n * Function factory that returns a default downcast converter for removing a {@link module:engine/view/uielement~UIElement UI element}\n * basing on marker remove change.\n *\n * This converter unbinds elements from the marker name.\n *\n * @returns {Function} Removed UI element converter.\n */\n\nexport function removeUIElement() {\n  return function (evt, data, conversionApi) {\n    var elements = conversionApi.mapper.markerNameToElements(data.markerName);\n\n    if (!elements) {\n      return;\n    }\n\n    conversionApi.mapper.unbindElementsFromMarkerName(data.markerName);\n    var _iteratorNormalCompletion6 = true;\n    var _didIteratorError6 = false;\n    var _iteratorError6 = undefined;\n\n    try {\n      for (var _iterator6 = elements[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n        var element = _step6.value;\n        conversionApi.writer.clear(conversionApi.writer.createRangeOn(element), element);\n      }\n    } catch (err) {\n      _didIteratorError6 = true;\n      _iteratorError6 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n          _iterator6.return();\n        }\n      } finally {\n        if (_didIteratorError6) {\n          throw _iteratorError6;\n        }\n      }\n    }\n\n    conversionApi.writer.clearClonedElementsGroup(data.markerName);\n    evt.stop();\n  };\n}\n/**\n * Function factory that creates a converter which converts set/change/remove attribute changes from the model to the view.\n *\n * Attributes from the model are converted to the view element attributes in the view. You may provide a custom function to generate\n * a key-value attribute pair to add/change/remove. If not provided, model attributes will be converted to view element\n * attributes on a one-to-one basis.\n *\n * **Note:** The provided attribute creator should always return the same `key` for a given attribute from the model.\n *\n * The converter automatically consumes the corresponding value from the consumables list and stops the event (see\n * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}).\n *\n *\t\tmodelDispatcher.on( 'attribute:customAttr:myElem', changeAttribute( ( value, data ) => {\n *\t\t\t// Change attribute key from `customAttr` to `class` in the view.\n *\t\t\tconst key = 'class';\n *\t\t\tlet value = data.attributeNewValue;\n *\n *\t\t\t// Force attribute value to 'empty' if the model element is empty.\n *\t\t\tif ( data.item.childCount === 0 ) {\n *\t\t\t\tvalue = 'empty';\n *\t\t\t}\n *\n *\t\t\t// Return the key-value pair.\n *\t\t\treturn { key, value };\n *\t\t} ) );\n *\n * @param {Function} [attributeCreator] Function returning an object with two properties: `key` and `value`, which\n * represent the attribute key and attribute value to be set on a {@link module:engine/view/element~Element view element}.\n * The function is passed the model attribute value as the first parameter and additional data about the change as the second parameter.\n * @returns {Function} Set/change attribute converter.\n */\n\nexport function changeAttribute(attributeCreator) {\n  attributeCreator = attributeCreator || function (value, data) {\n    return {\n      value: value,\n      key: data.attributeKey\n    };\n  };\n\n  return function (evt, data, conversionApi) {\n    var oldAttribute = attributeCreator(data.attributeOldValue, data);\n    var newAttribute = attributeCreator(data.attributeNewValue, data);\n\n    if (!oldAttribute && !newAttribute) {\n      return;\n    }\n\n    if (!conversionApi.consumable.consume(data.item, evt.name)) {\n      return;\n    }\n\n    var viewElement = conversionApi.mapper.toViewElement(data.item);\n    var viewWriter = conversionApi.writer; // If model item cannot be mapped to a view element, it means item is not an `Element` instance but a `TextProxy` node.\n    // Only elements can have attributes in a view so do not proceed for anything else (#1587).\n\n    if (!viewElement) {\n      /**\n       * This error occurs when a {@link module:engine/model/textproxy~TextProxy text node's} attribute is to be downcasted\n       * by {@link module:engine/conversion/conversion~Conversion#attributeToAttribute `Attribute to Attribute converter`}.\n       * In most cases it is caused by converters misconfiguration when only \"generic\" converter is defined:\n       *\n       *\t\teditor.conversion.for( 'downcast' ).add( downcastAttributeToAttribute( {\n       *\t\t\tmodel: 'attribute-name',\n       *\t\t\tview: 'attribute-name'\n       *\t\t} ) );\n       *\n       * and given attribute is used on text node, for example:\n       *\n       *\t\tmodel.change( writer => {\n       *\t\t\twriter.insertText( 'Foo', { 'attribute-name': 'bar' }, parent, 0 );\n       *\t\t} );\n       *\n       * In such cases, to convert the same attribute for both {@link module:engine/model/element~Element}\n       * and {@link module:engine/model/textproxy~TextProxy `Text`} nodes, text specific\n       * {@link module:engine/conversion/conversion~Conversion#attributeToElement `Attribute to Element converter`}\n       * with higher {@link module:utils/priorities~PriorityString priority} must also be defined:\n       *\n       *\t\tconversion.for( 'downcast' ).add( downcastAttributeToElement( {\n       *\t\t\tmodel: {\n       *\t\t\t\tkey: 'attribute-name',\n       *\t\t\t\tname: '$text'\n       *\t\t\t},\n       *\t\t\tview: ( value, writer ) => {\n       *\t\t\t\treturn writer.createAttributeElement( 'span', { 'attribute-name': value } );\n       *\t\t\t},\n       *\t\t\tconverterPriority: 'high'\n       *\t\t} ) );\n       *\n       * @error conversion-attribute-to-attribute-on-text\n       */\n      log.warn('conversion-attribute-to-attribute-on-text: ' + 'Trying to convert text node\\'s attribute with attribute-to-attribute converter.');\n      return;\n    } // First remove the old attribute if there was one.\n\n\n    if (data.attributeOldValue !== null && oldAttribute) {\n      if (oldAttribute.key == 'class') {\n        var classes = Array.isArray(oldAttribute.value) ? oldAttribute.value : [oldAttribute.value];\n        var _iteratorNormalCompletion7 = true;\n        var _didIteratorError7 = false;\n        var _iteratorError7 = undefined;\n\n        try {\n          for (var _iterator7 = classes[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n            var className = _step7.value;\n            viewWriter.removeClass(className, viewElement);\n          }\n        } catch (err) {\n          _didIteratorError7 = true;\n          _iteratorError7 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n              _iterator7.return();\n            }\n          } finally {\n            if (_didIteratorError7) {\n              throw _iteratorError7;\n            }\n          }\n        }\n      } else if (oldAttribute.key == 'style') {\n        var keys = Object.keys(oldAttribute.value);\n\n        for (var _i2 = 0; _i2 < keys.length; _i2++) {\n          var key = keys[_i2];\n          viewWriter.removeStyle(key, viewElement);\n        }\n      } else {\n        viewWriter.removeAttribute(oldAttribute.key, viewElement);\n      }\n    } // Then set the new attribute.\n\n\n    if (data.attributeNewValue !== null && newAttribute) {\n      if (newAttribute.key == 'class') {\n        var _classes = Array.isArray(newAttribute.value) ? newAttribute.value : [newAttribute.value];\n\n        var _iteratorNormalCompletion8 = true;\n        var _didIteratorError8 = false;\n        var _iteratorError8 = undefined;\n\n        try {\n          for (var _iterator8 = _classes[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n            var _className = _step8.value;\n            viewWriter.addClass(_className, viewElement);\n          }\n        } catch (err) {\n          _didIteratorError8 = true;\n          _iteratorError8 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n              _iterator8.return();\n            }\n          } finally {\n            if (_didIteratorError8) {\n              throw _iteratorError8;\n            }\n          }\n        }\n      } else if (newAttribute.key == 'style') {\n        var _keys = Object.keys(newAttribute.value);\n\n        for (var _i3 = 0; _i3 < _keys.length; _i3++) {\n          var _key = _keys[_i3];\n          viewWriter.setStyle(_key, newAttribute.value[_key], viewElement);\n        }\n      } else {\n        viewWriter.setAttribute(newAttribute.key, newAttribute.value, viewElement);\n      }\n    }\n  };\n}\n/**\n * Function factory that creates a converter which converts set/change/remove attribute changes from the model to the view.\n * It can also be used to convert selection attributes. In that case, an empty attribute element will be created and the\n * selection will be put inside it.\n *\n * Attributes from the model are converted to a view element that will be wrapping these view nodes that are bound to\n * model elements having the given attribute. This is useful for attributes like `bold` that may be set on text nodes in the model\n * but are represented as an element in the view:\n *\n *\t\t[paragraph]              MODEL ====> VIEW        <p>\n *\t\t\t|- a {bold: true}                             |- <b>\n *\t\t\t|- b {bold: true}                             |   |- ab\n *\t\t\t|- c                                          |- c\n *\n * Passed `Function` will be provided with the attribute value and then all the parameters of the\n * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:attribute `attribute` event}.\n * It is expected that the function returns an {@link module:engine/view/element~Element}.\n * The result of the function will be the wrapping element.\n * When the provided `Function` does not return any element, no conversion will take place.\n *\n * The converter automatically consumes the corresponding value from the consumables list and stops the event (see\n * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}).\n *\n *\t\tmodelDispatcher.on( 'attribute:bold', wrapItem( ( modelAttributeValue, viewWriter ) => {\n *\t\t\treturn viewWriter.createAttributeElement( 'strong' );\n *\t\t} );\n *\n * @param {Function} elementCreator Function returning a view element that will be used for wrapping.\n * @returns {Function} Set/change attribute converter.\n */\n\nexport function wrap(elementCreator) {\n  return function (evt, data, conversionApi) {\n    // Recreate current wrapping node. It will be used to unwrap view range if the attribute value has changed\n    // or the attribute was removed.\n    var oldViewElement = elementCreator(data.attributeOldValue, conversionApi.writer); // Create node to wrap with.\n\n    var newViewElement = elementCreator(data.attributeNewValue, conversionApi.writer);\n\n    if (!oldViewElement && !newViewElement) {\n      return;\n    }\n\n    if (!conversionApi.consumable.consume(data.item, evt.name)) {\n      return;\n    }\n\n    var viewWriter = conversionApi.writer;\n    var viewSelection = viewWriter.document.selection;\n\n    if (data.item instanceof ModelSelection || data.item instanceof DocumentSelection) {\n      // Selection attribute conversion.\n      viewWriter.wrap(viewSelection.getFirstRange(), newViewElement);\n    } else {\n      // Node attribute conversion.\n      var viewRange = conversionApi.mapper.toViewRange(data.range); // First, unwrap the range from current wrapper.\n\n      if (data.attributeOldValue !== null && oldViewElement) {\n        viewRange = viewWriter.unwrap(viewRange, oldViewElement);\n      }\n\n      if (data.attributeNewValue !== null && newViewElement) {\n        viewWriter.wrap(viewRange, newViewElement);\n      }\n    }\n  };\n}\n/**\n * Function factory that creates a converter which converts the text inside marker's range. The converter wraps the text with\n * {@link module:engine/view/attributeelement~AttributeElement} created from the provided descriptor.\n * See {link module:engine/conversion/downcast-converters~createViewElementFromHighlightDescriptor}.\n *\n * It can also be used to convert the selection that is inside a marker. In that case, an empty attribute element will be\n * created and the selection will be put inside it.\n *\n * If the highlight descriptor does not provide the `priority` property, `10` will be used.\n *\n * If the highlight descriptor does not provide the `id` property, the name of the marker will be used.\n *\n * This converter binds the created {@link module:engine/view/attributeelement~AttributeElement attribute elemens} with the marker name\n * using the {@link module:engine/conversion/mapper~Mapper#bindElementToMarker} method.\n *\n * @param {module:engine/conversion/downcast-converters~HighlightDescriptor|Function} highlightDescriptor\n * @returns {Function}\n */\n\nexport function highlightText(highlightDescriptor) {\n  return function (evt, data, conversionApi) {\n    if (data.markerRange.isCollapsed) {\n      return;\n    }\n\n    if (!(data.item instanceof ModelSelection || data.item instanceof DocumentSelection) && !data.item.is('textProxy')) {\n      return;\n    }\n\n    var descriptor = _prepareDescriptor(highlightDescriptor, data, conversionApi);\n\n    if (!descriptor) {\n      return;\n    }\n\n    if (!conversionApi.consumable.consume(data.item, evt.name)) {\n      return;\n    }\n\n    var viewElement = createViewElementFromHighlightDescriptor(descriptor);\n    var viewWriter = conversionApi.writer;\n    var viewSelection = viewWriter.document.selection;\n\n    if (data.item instanceof ModelSelection || data.item instanceof DocumentSelection) {\n      viewWriter.wrap(viewSelection.getFirstRange(), viewElement, viewSelection);\n    } else {\n      var viewRange = conversionApi.mapper.toViewRange(data.range);\n      var rangeAfterWrap = viewWriter.wrap(viewRange, viewElement);\n      var _iteratorNormalCompletion9 = true;\n      var _didIteratorError9 = false;\n      var _iteratorError9 = undefined;\n\n      try {\n        for (var _iterator9 = rangeAfterWrap.getItems()[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n          var element = _step9.value;\n\n          if (element.is('attributeElement') && element.isSimilar(viewElement)) {\n            conversionApi.mapper.bindElementToMarker(element, data.markerName); // One attribute element is enough, because all of them are bound together by the view writer.\n            // Mapper uses this binding to get all the elements no matter how many of them are registered in the mapper.\n\n            break;\n          }\n        }\n      } catch (err) {\n        _didIteratorError9 = true;\n        _iteratorError9 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion9 && _iterator9.return != null) {\n            _iterator9.return();\n          }\n        } finally {\n          if (_didIteratorError9) {\n            throw _iteratorError9;\n          }\n        }\n      }\n    }\n  };\n}\n/**\n * Converter function factory. It creates a function which applies the marker's highlight to an element inside the marker's range.\n *\n * The converter checks if an element has the `addHighlight` function stored as a\n * {@link module:engine/view/element~Element#_setCustomProperty custom property} and, if so, uses it to apply the highlight.\n * In such case the converter will consume all element's children, assuming that they were handled by the element itself.\n *\n * When the `addHighlight` custom property is not present, the element is not converted in any special way.\n * This means that converters will proceed to convert the element's child nodes.\n *\n * If the highlight descriptor does not provide the `priority` property, `10` will be used.\n *\n * If the highlight descriptor does not provide the `id` property, the name of the marker will be used.\n *\n * This converter binds altered {@link module:engine/view/containerelement~ContainerElement container elements} with the marker name using\n * the {@link module:engine/conversion/mapper~Mapper#bindElementToMarker} method.\n *\n * @param {module:engine/conversion/downcast-converters~HighlightDescriptor|Function} highlightDescriptor\n * @returns {Function}\n */\n\nexport function highlightElement(highlightDescriptor) {\n  return function (evt, data, conversionApi) {\n    if (data.markerRange.isCollapsed) {\n      return;\n    }\n\n    if (!(data.item instanceof ModelElement)) {\n      return;\n    }\n\n    var descriptor = _prepareDescriptor(highlightDescriptor, data, conversionApi);\n\n    if (!descriptor) {\n      return;\n    }\n\n    if (!conversionApi.consumable.test(data.item, evt.name)) {\n      return;\n    }\n\n    var viewElement = conversionApi.mapper.toViewElement(data.item);\n\n    if (viewElement && viewElement.getCustomProperty('addHighlight')) {\n      // Consume element itself.\n      conversionApi.consumable.consume(data.item, evt.name); // Consume all children nodes.\n\n      var _iteratorNormalCompletion10 = true;\n      var _didIteratorError10 = false;\n      var _iteratorError10 = undefined;\n\n      try {\n        for (var _iterator10 = ModelRange._createIn(data.item)[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n          var value = _step10.value;\n          conversionApi.consumable.consume(value.item, evt.name);\n        }\n      } catch (err) {\n        _didIteratorError10 = true;\n        _iteratorError10 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion10 && _iterator10.return != null) {\n            _iterator10.return();\n          }\n        } finally {\n          if (_didIteratorError10) {\n            throw _iteratorError10;\n          }\n        }\n      }\n\n      viewElement.getCustomProperty('addHighlight')(viewElement, descriptor, conversionApi.writer);\n      conversionApi.mapper.bindElementToMarker(viewElement, data.markerName);\n    }\n  };\n}\n/**\n * Function factory that creates a converter which converts the removing model marker to the view.\n *\n * Both text nodes and elements are handled by this converter but they are handled a bit differently.\n *\n * Text nodes are unwrapped using the {@link module:engine/view/attributeelement~AttributeElement attribute element} created from the\n * provided highlight descriptor. See {link module:engine/conversion/downcast-converters~HighlightDescriptor}.\n *\n * For elements, the converter checks if an element has the `removeHighlight` function stored as a\n * {@link module:engine/view/element~Element#_setCustomProperty custom property}. If so, it uses it to remove the highlight.\n * In such case, the children of that element will not be converted.\n *\n * When `removeHighlight` is not present, the element is not converted in any special way.\n * The converter will proceed to convert the element's child nodes instead.\n *\n * If the highlight descriptor does not provide the `priority` property, `10` will be used.\n *\n * If the highlight descriptor does not provide the `id` property, the name of the marker will be used.\n *\n * This converter unbinds elements from the marker name.\n *\n * @param {module:engine/conversion/downcast-converters~HighlightDescriptor|Function} highlightDescriptor\n * @returns {Function}\n */\n\nexport function removeHighlight(highlightDescriptor) {\n  return function (evt, data, conversionApi) {\n    // This conversion makes sense only for non-collapsed range.\n    if (data.markerRange.isCollapsed) {\n      return;\n    }\n\n    var descriptor = _prepareDescriptor(highlightDescriptor, data, conversionApi);\n\n    if (!descriptor) {\n      return;\n    } // View element that will be used to unwrap `AttributeElement`s.\n\n\n    var viewHighlightElement = createViewElementFromHighlightDescriptor(descriptor); // Get all elements bound with given marker name.\n\n    var elements = conversionApi.mapper.markerNameToElements(data.markerName);\n\n    if (!elements) {\n      return;\n    }\n\n    conversionApi.mapper.unbindElementsFromMarkerName(data.markerName);\n    var _iteratorNormalCompletion11 = true;\n    var _didIteratorError11 = false;\n    var _iteratorError11 = undefined;\n\n    try {\n      for (var _iterator11 = elements[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n        var element = _step11.value;\n\n        if (element.is('attributeElement')) {\n          conversionApi.writer.unwrap(conversionApi.writer.createRangeOn(element), viewHighlightElement);\n        } else {\n          // if element.is( 'containerElement' ).\n          element.getCustomProperty('removeHighlight')(element, descriptor.id, conversionApi.writer);\n        }\n      }\n    } catch (err) {\n      _didIteratorError11 = true;\n      _iteratorError11 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion11 && _iterator11.return != null) {\n          _iterator11.return();\n        }\n      } finally {\n        if (_didIteratorError11) {\n          throw _iteratorError11;\n        }\n      }\n    }\n\n    conversionApi.writer.clearClonedElementsGroup(data.markerName);\n    evt.stop();\n  };\n} // Helper function for `highlight`. Prepares the actual descriptor object using value passed to the converter.\n\nfunction _prepareDescriptor(highlightDescriptor, data, conversionApi) {\n  // If passed descriptor is a creator function, call it. If not, just use passed value.\n  var descriptor = typeof highlightDescriptor == 'function' ? highlightDescriptor(data, conversionApi) : highlightDescriptor;\n\n  if (!descriptor) {\n    return null;\n  } // Apply default descriptor priority.\n\n\n  if (!descriptor.priority) {\n    descriptor.priority = 10;\n  } // Default descriptor id is marker name.\n\n\n  if (!descriptor.id) {\n    descriptor.id = data.markerName;\n  }\n\n  return descriptor;\n}\n/**\n * Creates a `<span>` {@link module:engine/view/attributeelement~AttributeElement view attribute element} from the information\n * provided by the {@link module:engine/conversion/downcast-converters~HighlightDescriptor highlight descriptor} object. If a priority\n * is not provided in the descriptor, the default priority will be used.\n *\n * @param {module:engine/conversion/downcast-converters~HighlightDescriptor} descriptor\n * @returns {module:engine/view/attributeelement~AttributeElement}\n */\n\n\nexport function createViewElementFromHighlightDescriptor(descriptor) {\n  var viewElement = new ViewAttributeElement('span', descriptor.attributes);\n\n  if (descriptor.classes) {\n    viewElement._addClass(descriptor.classes);\n  }\n\n  if (descriptor.priority) {\n    viewElement._priority = descriptor.priority;\n  }\n\n  viewElement._id = descriptor.id;\n  return viewElement;\n}\n/**\n * An object describing how the marker highlight should be represented in the view.\n *\n * Each text node contained in a highlighted range will be wrapped in a `<span>`\n * {@link module:engine/view/attributeelement~AttributeElement view attribute element} with CSS class(es), attributes and a priority\n * described by this object.\n *\n * Additionally, each {@link module:engine/view/containerelement~ContainerElement container element} can handle displaying the highlight\n * separately by providing the `addHighlight` and `removeHighlight` custom properties. In this case:\n *\n *  * The `HighlightDescriptor` object is passed to the `addHighlight` function upon conversion and should be used to apply the highlight to\n *  the element.\n *  * The descriptor `id` is passed to the `removeHighlight` function upon conversion and should be used to remove the highlight with the\n *  given ID from the element.\n *\n * @typedef {Object} module:engine/conversion/downcast-converters~HighlightDescriptor\n *\n * @property {String|Array.<String>} classes A CSS class or an array of classes to set. If the descriptor is used to\n * create an {@link module:engine/view/attributeelement~AttributeElement attribute element} over text nodes, these classes will be set\n * on that attribute element. If the descriptor is applied to an element, usually these classes will be set on that element, however,\n * this depends on how the element converts the descriptor.\n *\n * @property {String} [id] Descriptor identifier. If not provided, it defaults to the converted marker's name.\n *\n * @property {Number} [priority] Descriptor priority. If not provided, it defaults to `10`. If the descriptor is used to create\n * an {@link module:engine/view/attributeelement~AttributeElement attribute element}, it will be that element's\n * {@link module:engine/view/attributeelement~AttributeElement#priority priority}. If the descriptor is applied to an element,\n * the priority will be used to determine which descriptor is more important.\n *\n * @property {Object} [attributes] Attributes to set. If the descriptor is used to create\n * an {@link module:engine/view/attributeelement~AttributeElement attribute element} over text nodes, these attributes will be set on that\n * attribute element. If the descriptor is applied to an element, usually these attributes will be set on that element, however,\n * this depends on how the element converts the descriptor.\n */","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/uid\n */\n\n/**\n * Returns a unique id. This id consist of an 'e' character and a randomly generated string of 32 aphanumeric characters.\n * Each character in uid string represents a hexadecimal digit (base 16).\n *\n * @returns {String} A hexadecimal number representing the id.\n */\nexport default function uid() {\n  var uuid = 'e'; // Make sure that id does not start with number.\n\n  for (var i = 0; i < 8; i++) {\n    uuid += Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  }\n\n  return uuid;\n}","import root from './_root.js';\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nexport default coreJsData;\n","import coreJsData from './_coreJsData.js';\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nexport default isMasked;\n","import isFunction from './isFunction.js';\nimport isMasked from './_isMasked.js';\nimport isObject from './isObject.js';\nimport toSource from './_toSource.js';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nexport default baseIsNative;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nexport default getValue;\n","import baseIsNative from './_baseIsNative.js';\nimport getValue from './_getValue.js';\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nexport default getNative;\n","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/selection\n */\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport Range from './range';\nimport Position from './position';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport Node from './node';\nimport Element from './element';\nimport count from '@ckeditor/ckeditor5-utils/src/count';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\nimport DocumentSelection from './documentselection';\n/**\n * Class representing an arbirtary selection in the view.\n * See also {@link module:engine/view/documentselection~DocumentSelection}.\n *\n * New selection instances can be created via the constructor or one these methods:\n *\n * * {@link module:engine/view/view~View#createSelection `View#createSelection()`},\n * * {@link module:engine/view/upcastwriter~UpcastWriter#createSelection `UpcastWriter#createSelection()`}.\n *\n * A selection can consist of {@link module:engine/view/range~Range ranges} that can be set by using\n * the {@link module:engine/view/selection~Selection#setTo `Selection#setTo()`} method.\n */\n\nvar Selection =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates new selection instance.\n   *\n   * **Note**: The selection constructor is available as a factory method:\n   *\n   * * {@link module:engine/view/view~View#createSelection `View#createSelection()`},\n   * * {@link module:engine/view/upcastwriter~UpcastWriter#createSelection `UpcastWriter#createSelection()`}.\n   *\n   * \t\t// Creates empty selection without ranges.\n   *\t\tconst selection = writer.createSelection();\n   *\n   *\t\t// Creates selection at the given range.\n   *\t\tconst range = writer.createRange( start, end );\n   *\t\tconst selection = writer.createSelection( range );\n   *\n   *\t\t// Creates selection at the given ranges\n   * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n   *\t\tconst selection = writer.createSelection( ranges );\n   *\n   *\t\t// Creates selection from the other selection.\n   *\t\tconst otherSelection = writer.createSelection();\n   *\t\tconst selection = writer.createSelection( otherSelection );\n   *\n   *\t\t// Creates selection from the document selection.\n   *\t\tconst selection = writer.createSelection( editor.editing.view.document.selection );\n   *\n   * \t\t// Creates selection at the given position.\n   *\t\tconst position = writer.createPositionFromPath( root, path );\n   *\t\tconst selection = writer.createSelection( position );\n   *\n   *\t\t// Creates collapsed selection at the position of given item and offset.\n   *\t\tconst paragraph = writer.createContainerElement( 'paragraph' );\n   *\t\tconst selection = writer.createSelection( paragraph, offset );\n   *\n   *\t\t// Creates a range inside an {@link module:engine/view/element~Element element} which starts before the\n   *\t\t// first child of that element and ends after the last child of that element.\n   *\t\tconst selection = writer.createSelection( paragraph, 'in' );\n   *\n   *\t\t// Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends\n   *\t\t// just after the item.\n   *\t\tconst selection = writer.createSelection( paragraph, 'on' );\n   *\n   * `Selection`'s constructor allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n   *\n   *\t\t// Creates backward selection.\n   *\t\tconst selection = writer.createSelection( range, { backward: true } );\n   *\n   * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n   * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n   * represented in other way, for example by applying proper CSS class.\n   *\n   * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\n   * (and be  properly handled by screen readers).\n   *\n   *\t\t// Creates fake selection with label.\n   *\t\tconst selection = writer.createSelection( range, { fake: true, label: 'foo' } );\n   *\n   * @param {module:engine/view/selection~Selection|module:engine/view/documentselection~DocumentSelection|\n   * module:engine/view/position~Position|Iterable.<module:engine/view/range~Range>|module:engine/view/range~Range|\n   * module:engine/view/item~Item|null} [selectable=null]\n   * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Offset or place when selectable is an `Item`.\n   * @param {Object} [options]\n   * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n   * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n   * @param {String} [options.label] Label for the fake selection.\n   */\n  function Selection() {\n    var selectable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var placeOrOffset = arguments.length > 1 ? arguments[1] : undefined;\n    var options = arguments.length > 2 ? arguments[2] : undefined;\n\n    _classCallCheck(this, Selection);\n\n    /**\n     * Stores all ranges that are selected.\n     *\n     * @protected\n     * @member {Array.<module:engine/view/range~Range>}\n     */\n    this._ranges = [];\n    /**\n     * Specifies whether the last added range was added as a backward or forward range.\n     *\n     * @protected\n     * @member {Boolean}\n     */\n\n    this._lastRangeBackward = false;\n    /**\n     * Specifies whether selection instance is fake.\n     *\n     * @private\n     * @member {Boolean}\n     */\n\n    this._isFake = false;\n    /**\n     * Fake selection's label.\n     *\n     * @private\n     * @member {String}\n     */\n\n    this._fakeSelectionLabel = '';\n    this.setTo(selectable, placeOrOffset, options);\n  }\n  /**\n   * Returns true if selection instance is marked as `fake`.\n   *\n   * @see #setTo\n   * @returns {Boolean}\n   */\n\n\n  _createClass(Selection, [{\n    key: \"getRanges\",\n\n    /**\n     * Returns an iterable that contains copies of all ranges added to the selection.\n     *\n     * @returns {Iterable.<module:engine/view/range~Range>}\n     */\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function getRanges() {\n      var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, range;\n\n      return regeneratorRuntime.wrap(function getRanges$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _iteratorError = undefined;\n              _context.prev = 3;\n              _iterator = this._ranges[Symbol.iterator]();\n\n            case 5:\n              if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                _context.next = 12;\n                break;\n              }\n\n              range = _step.value;\n              _context.next = 9;\n              return range.clone();\n\n            case 9:\n              _iteratorNormalCompletion = true;\n              _context.next = 5;\n              break;\n\n            case 12:\n              _context.next = 18;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](3);\n              _didIteratorError = true;\n              _iteratorError = _context.t0;\n\n            case 18:\n              _context.prev = 18;\n              _context.prev = 19;\n\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n\n            case 21:\n              _context.prev = 21;\n\n              if (!_didIteratorError) {\n                _context.next = 24;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 24:\n              return _context.finish(21);\n\n            case 25:\n              return _context.finish(18);\n\n            case 26:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, getRanges, this, [[3, 14, 18, 26], [19,, 21, 25]]);\n    })\n    /**\n     * Returns copy of the first range in the selection. First range is the one which\n     * {@link module:engine/view/range~Range#start start} position {@link module:engine/view/position~Position#isBefore is before} start\n     * position of all other ranges (not to confuse with the first range added to the selection).\n     * Returns `null` if no ranges are added to selection.\n     *\n     * @returns {module:engine/view/range~Range|null}\n     */\n\n  }, {\n    key: \"getFirstRange\",\n    value: function getFirstRange() {\n      var first = null;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this._ranges[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var range = _step2.value;\n\n          if (!first || range.start.isBefore(first.start)) {\n            first = range;\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return first ? first.clone() : null;\n    }\n    /**\n     * Returns copy of the last range in the selection. Last range is the one which {@link module:engine/view/range~Range#end end}\n     * position {@link module:engine/view/position~Position#isAfter is after} end position of all other ranges (not to confuse\n     * with the last range added to the selection). Returns `null` if no ranges are added to selection.\n     *\n     * @returns {module:engine/view/range~Range|null}\n     */\n\n  }, {\n    key: \"getLastRange\",\n    value: function getLastRange() {\n      var last = null;\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this._ranges[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var range = _step3.value;\n\n          if (!last || range.end.isAfter(last.end)) {\n            last = range;\n          }\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      return last ? last.clone() : null;\n    }\n    /**\n     * Returns copy of the first position in the selection. First position is the position that\n     * {@link module:engine/view/position~Position#isBefore is before} any other position in the selection ranges.\n     * Returns `null` if no ranges are added to selection.\n     *\n     * @returns {module:engine/view/position~Position|null}\n     */\n\n  }, {\n    key: \"getFirstPosition\",\n    value: function getFirstPosition() {\n      var firstRange = this.getFirstRange();\n      return firstRange ? firstRange.start.clone() : null;\n    }\n    /**\n     * Returns copy of the last position in the selection. Last position is the position that\n     * {@link module:engine/view/position~Position#isAfter is after} any other position in the selection ranges.\n     * Returns `null` if no ranges are added to selection.\n     *\n     * @returns {module:engine/view/position~Position|null}\n     */\n\n  }, {\n    key: \"getLastPosition\",\n    value: function getLastPosition() {\n      var lastRange = this.getLastRange();\n      return lastRange ? lastRange.end.clone() : null;\n    }\n    /**\n     * Checks whether, this selection is equal to given selection. Selections are equal if they have same directions,\n     * same number of ranges and all ranges from one selection equal to a range from other selection.\n     *\n     * @param {module:engine/view/selection~Selection|module:engine/view/documentselection~DocumentSelection} otherSelection\n     * Selection to compare with.\n     * @returns {Boolean} `true` if selections are equal, `false` otherwise.\n     */\n\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(otherSelection) {\n      if (this.isFake != otherSelection.isFake) {\n        return false;\n      }\n\n      if (this.isFake && this.fakeSelectionLabel != otherSelection.fakeSelectionLabel) {\n        return false;\n      }\n\n      if (this.rangeCount != otherSelection.rangeCount) {\n        return false;\n      } else if (this.rangeCount === 0) {\n        return true;\n      }\n\n      if (!this.anchor.isEqual(otherSelection.anchor) || !this.focus.isEqual(otherSelection.focus)) {\n        return false;\n      }\n\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = this._ranges[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var thisRange = _step4.value;\n          var found = false;\n          var _iteratorNormalCompletion5 = true;\n          var _didIteratorError5 = false;\n          var _iteratorError5 = undefined;\n\n          try {\n            for (var _iterator5 = otherSelection._ranges[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n              var otherRange = _step5.value;\n\n              if (thisRange.isEqual(otherRange)) {\n                found = true;\n                break;\n              }\n            }\n          } catch (err) {\n            _didIteratorError5 = true;\n            _iteratorError5 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n                _iterator5.return();\n              }\n            } finally {\n              if (_didIteratorError5) {\n                throw _iteratorError5;\n              }\n            }\n          }\n\n          if (!found) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      return true;\n    }\n    /**\n     * Checks whether this selection is similar to given selection. Selections are similar if they have same directions, same\n     * number of ranges, and all {@link module:engine/view/range~Range#getTrimmed trimmed} ranges from one selection are\n     * equal to any trimmed range from other selection.\n     *\n     * @param {module:engine/view/selection~Selection|module:engine/view/documentselection~DocumentSelection} otherSelection\n     * Selection to compare with.\n     * @returns {Boolean} `true` if selections are similar, `false` otherwise.\n     */\n\n  }, {\n    key: \"isSimilar\",\n    value: function isSimilar(otherSelection) {\n      if (this.isBackward != otherSelection.isBackward) {\n        return false;\n      }\n\n      var numOfRangesA = count(this.getRanges());\n      var numOfRangesB = count(otherSelection.getRanges()); // If selections have different number of ranges, they cannot be similar.\n\n      if (numOfRangesA != numOfRangesB) {\n        return false;\n      } // If both selections have no ranges, they are similar.\n\n\n      if (numOfRangesA == 0) {\n        return true;\n      } // Check if each range in one selection has a similar range in other selection.\n\n\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = this.getRanges()[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var rangeA = _step6.value;\n          rangeA = rangeA.getTrimmed();\n          var found = false;\n          var _iteratorNormalCompletion7 = true;\n          var _didIteratorError7 = false;\n          var _iteratorError7 = undefined;\n\n          try {\n            for (var _iterator7 = otherSelection.getRanges()[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n              var rangeB = _step7.value;\n              rangeB = rangeB.getTrimmed();\n\n              if (rangeA.start.isEqual(rangeB.start) && rangeA.end.isEqual(rangeB.end)) {\n                found = true;\n                break;\n              }\n            } // For `rangeA`, neither range in `otherSelection` was similar. So selections are not similar.\n\n          } catch (err) {\n            _didIteratorError7 = true;\n            _iteratorError7 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n                _iterator7.return();\n              }\n            } finally {\n              if (_didIteratorError7) {\n                throw _iteratorError7;\n              }\n            }\n          }\n\n          if (!found) {\n            return false;\n          }\n        } // There were no ranges that weren't matched. Selections are similar.\n\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n            _iterator6.return();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n\n      return true;\n    }\n    /**\n     * Returns the selected element. {@link module:engine/view/element~Element Element} is considered as selected if there is only\n     * one range in the selection, and that range contains exactly one element.\n     * Returns `null` if there is no selected element.\n     *\n     * @returns {module:engine/view/element~Element|null}\n     */\n\n  }, {\n    key: \"getSelectedElement\",\n    value: function getSelectedElement() {\n      if (this.rangeCount !== 1) {\n        return null;\n      }\n\n      var range = this.getFirstRange();\n      var nodeAfterStart = range.start.nodeAfter;\n      var nodeBeforeEnd = range.end.nodeBefore;\n      return nodeAfterStart instanceof Element && nodeAfterStart == nodeBeforeEnd ? nodeAfterStart : null;\n    }\n    /**\n     * Sets this selection's ranges and direction to the specified location based on the given\n     * {@link module:engine/view/documentselection~DocumentSelection document selection},\n     * {@link module:engine/view/selection~Selection selection}, {@link module:engine/view/position~Position position},\n     * {@link module:engine/view/item~Item item}, {@link module:engine/view/range~Range range},\n     * an iterable of {@link module:engine/view/range~Range ranges} or null.\n     *\n     *\t\t// Sets selection to the given range.\n     *\t\tconst range = writer.createRange( start, end );\n     *\t\tselection.setTo( range );\n     *\n     *\t\t// Sets selection to given ranges.\n     * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n     *\t\tselection.setTo( range );\n     *\n     *\t\t// Sets selection to the other selection.\n     *\t\tconst otherSelection = writer.createSelection();\n     *\t\tselection.setTo( otherSelection );\n     *\n     *\t \t// Sets selection to contents of DocumentSelection.\n     *\t\tselection.setTo( editor.editing.view.document.selection );\n     *\n     * \t\t// Sets collapsed selection at the given position.\n     *\t\tconst position = writer.createPositionAt( root, path );\n     *\t\tselection.setTo( position );\n     *\n     * \t\t// Sets collapsed selection at the position of given item and offset.\n     *\t\tselection.setTo( paragraph, offset );\n     *\n     * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n     * that element and ends after the last child of that element.\n     *\n     *\t\tselection.setTo( paragraph, 'in' );\n     *\n     * Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends just after the item.\n     *\n     *\t\tselection.setTo( paragraph, 'on' );\n     *\n     * \t\t// Clears selection. Removes all ranges.\n     *\t\tselection.setTo( null );\n     *\n     * `Selection#setTo()` method allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n     *\n     *\t\t// Sets selection as backward.\n     *\t\tselection.setTo( range, { backward: true } );\n     *\n     * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n     * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n     * represented in other way, for example by applying proper CSS class.\n     *\n     * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\n     * (and be  properly handled by screen readers).\n     *\n     *\t\t// Creates fake selection with label.\n     *\t\tselection.setTo( range, { fake: true, label: 'foo' } );\n     *\n     * @fires change\n     * @param {module:engine/view/selection~Selection|module:engine/view/documentselection~DocumentSelection|\n     * module:engine/view/position~Position|Iterable.<module:engine/view/range~Range>|module:engine/view/range~Range|\n     * module:engine/view/item~Item|null} selectable\n     * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n     * @param {Object} [options]\n     * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n     * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n     * @param {String} [options.label] Label for the fake selection.\n     */\n\n  }, {\n    key: \"setTo\",\n    value: function setTo(selectable, placeOrOffset, options) {\n      if (selectable === null) {\n        this._setRanges([]);\n\n        this._setFakeOptions(placeOrOffset);\n      } else if (selectable instanceof Selection || selectable instanceof DocumentSelection) {\n        this._setRanges(selectable.getRanges(), selectable.isBackward);\n\n        this._setFakeOptions({\n          fake: selectable.isFake,\n          label: selectable.fakeSelectionLabel\n        });\n      } else if (selectable instanceof Range) {\n        this._setRanges([selectable], placeOrOffset && placeOrOffset.backward);\n\n        this._setFakeOptions(placeOrOffset);\n      } else if (selectable instanceof Position) {\n        this._setRanges([new Range(selectable)]);\n\n        this._setFakeOptions(placeOrOffset);\n      } else if (selectable instanceof Node) {\n        var backward = !!options && !!options.backward;\n        var range;\n\n        if (placeOrOffset === undefined) {\n          /**\n           * selection.setTo requires the second parameter when the first parameter is a node.\n           *\n           * @error view-selection-setTo-required-second-parameter\n           */\n          throw new CKEditorError('view-selection-setTo-required-second-parameter: ' + 'selection.setTo requires the second parameter when the first parameter is a node.');\n        } else if (placeOrOffset == 'in') {\n          range = Range._createIn(selectable);\n        } else if (placeOrOffset == 'on') {\n          range = Range._createOn(selectable);\n        } else {\n          range = new Range(Position._createAt(selectable, placeOrOffset));\n        }\n\n        this._setRanges([range], backward);\n\n        this._setFakeOptions(options);\n      } else if (isIterable(selectable)) {\n        // We assume that the selectable is an iterable of ranges.\n        // Array.from() is used to prevent setting ranges to the old iterable\n        this._setRanges(selectable, placeOrOffset && placeOrOffset.backward);\n\n        this._setFakeOptions(placeOrOffset);\n      } else {\n        /**\n         * Cannot set selection to given place.\n         *\n         * @error view-selection-setTo-not-selectable\n         */\n        throw new CKEditorError('view-selection-setTo-not-selectable: Cannot set selection to given place.');\n      }\n\n      this.fire('change');\n    }\n    /**\n     * Moves {@link #focus} to the specified location.\n     *\n     * The location can be specified in the same form as {@link module:engine/view/view~View#createPositionAt view.createPositionAt()}\n     * parameters.\n     *\n     * @fires change\n     * @param {module:engine/view/item~Item|module:engine/view/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n     * first parameter is a {@link module:engine/view/item~Item view item}.\n     */\n\n  }, {\n    key: \"setFocus\",\n    value: function setFocus(itemOrPosition, offset) {\n      if (this.anchor === null) {\n        /**\n         * Cannot set selection focus if there are no ranges in selection.\n         *\n         * @error view-selection-setFocus-no-ranges\n         */\n        throw new CKEditorError('view-selection-setFocus-no-ranges: Cannot set selection focus if there are no ranges in selection.');\n      }\n\n      var newFocus = Position._createAt(itemOrPosition, offset);\n\n      if (newFocus.compareWith(this.focus) == 'same') {\n        return;\n      }\n\n      var anchor = this.anchor;\n\n      this._ranges.pop();\n\n      if (newFocus.compareWith(anchor) == 'before') {\n        this._addRange(new Range(newFocus, anchor), true);\n      } else {\n        this._addRange(new Range(anchor, newFocus));\n      }\n\n      this.fire('change');\n    }\n    /**\n     * Replaces all ranges that were added to the selection with given array of ranges. Last range of the array\n     * is treated like the last added range and is used to set {@link #anchor anchor} and {@link #focus focus}.\n     * Accepts a flag describing in which way the selection is made.\n     *\n     * @private\n     * @param {Iterable.<module:engine/view/range~Range>} newRanges Iterable object of ranges to set.\n     * @param {Boolean} [isLastBackward=false] Flag describing if last added range was selected forward - from start to end\n     * (`false`) or backward - from end to start (`true`). Defaults to `false`.\n     */\n\n  }, {\n    key: \"_setRanges\",\n    value: function _setRanges(newRanges) {\n      var isLastBackward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      // New ranges should be copied to prevent removing them by setting them to `[]` first.\n      // Only applies to situations when selection is set to the same selection or same selection's ranges.\n      newRanges = Array.from(newRanges);\n      this._ranges = [];\n      var _iteratorNormalCompletion8 = true;\n      var _didIteratorError8 = false;\n      var _iteratorError8 = undefined;\n\n      try {\n        for (var _iterator8 = newRanges[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n          var range = _step8.value;\n\n          this._addRange(range);\n        }\n      } catch (err) {\n        _didIteratorError8 = true;\n        _iteratorError8 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n            _iterator8.return();\n          }\n        } finally {\n          if (_didIteratorError8) {\n            throw _iteratorError8;\n          }\n        }\n      }\n\n      this._lastRangeBackward = !!isLastBackward;\n    }\n    /**\n     * Sets this selection instance to be marked as `fake`. A fake selection does not render as browser native selection\n     * over selected elements and is hidden to the user. This way, no native selection UI artifacts are displayed to\n     * the user and selection over elements can be represented in other way, for example by applying proper CSS class.\n     *\n     * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM (and be\n     * properly handled by screen readers).\n     *\n     * @private\n     * @param {Object} [options] Options.\n     * @param {Boolean} [options.fake] If set to true selection will be marked as `fake`.\n     * @param {String} [options.label=''] Fake selection label.\n     */\n\n  }, {\n    key: \"_setFakeOptions\",\n    value: function _setFakeOptions() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this._isFake = !!options.fake;\n      this._fakeSelectionLabel = options.fake ? options.label || '' : '';\n    }\n    /**\n     * Adds a range to the selection. Added range is copied. This means that passed range is not saved in the\n     * selection instance and you can safely operate on it.\n     *\n     * Accepts a flag describing in which way the selection is made - passed range might be selected from\n     * {@link module:engine/view/range~Range#start start} to {@link module:engine/view/range~Range#end end}\n     * or from {@link module:engine/view/range~Range#end end} to {@link module:engine/view/range~Range#start start}.\n     * The flag is used to set {@link #anchor anchor} and {@link #focus focus} properties.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-selection-range-intersects` if added range intersects\n     * with ranges already stored in Selection instance.\n     *\n     * @private\n     * @fires change\n     * @param {module:engine/view/range~Range} range\n     * @param {Boolean} [isBackward]\n     */\n\n  }, {\n    key: \"_addRange\",\n    value: function _addRange(range) {\n      var isBackward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!(range instanceof Range)) {\n        /**\n         * Selection range set to an object that is not an instance of {@link module:engine/view/range~Range}.\n         *\n         * @error view-selection-add-range-not-range\n         */\n        throw new CKEditorError('view-selection-add-range-not-range: ' + 'Selection range set to an object that is not an instance of view.Range');\n      }\n\n      this._pushRange(range);\n\n      this._lastRangeBackward = !!isBackward;\n    }\n    /**\n     * Adds range to selection - creates copy of given range so it can be safely used and modified.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-selection-range-intersects` if added range intersects\n     * with ranges already stored in selection instance.\n     *\n     * @private\n     * @param {module:engine/view/range~Range} range\n     */\n\n  }, {\n    key: \"_pushRange\",\n    value: function _pushRange(range) {\n      var _iteratorNormalCompletion9 = true;\n      var _didIteratorError9 = false;\n      var _iteratorError9 = undefined;\n\n      try {\n        for (var _iterator9 = this._ranges[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n          var storedRange = _step9.value;\n\n          if (range.isIntersecting(storedRange)) {\n            /**\n             * Trying to add a range that intersects with another range from selection.\n             *\n             * @error view-selection-range-intersects\n             * @param {module:engine/view/range~Range} addedRange Range that was added to the selection.\n             * @param {module:engine/view/range~Range} intersectingRange Range from selection that intersects with `addedRange`.\n             */\n            throw new CKEditorError('view-selection-range-intersects: Trying to add a range that intersects with another range from selection.', {\n              addedRange: range,\n              intersectingRange: storedRange\n            });\n          }\n        }\n      } catch (err) {\n        _didIteratorError9 = true;\n        _iteratorError9 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion9 && _iterator9.return != null) {\n            _iterator9.return();\n          }\n        } finally {\n          if (_didIteratorError9) {\n            throw _iteratorError9;\n          }\n        }\n      }\n\n      this._ranges.push(new Range(range.start, range.end));\n    }\n    /**\n     * Fired whenever selection ranges are changed through {@link ~Selection Selection API}.\n     *\n     * @event change\n     */\n\n  }, {\n    key: \"isFake\",\n    get: function get() {\n      return this._isFake;\n    }\n    /**\n     * Returns fake selection label.\n     *\n     * @see #setTo\n     * @returns {String}\n     */\n\n  }, {\n    key: \"fakeSelectionLabel\",\n    get: function get() {\n      return this._fakeSelectionLabel;\n    }\n    /**\n     * Selection anchor. Anchor may be described as a position where the selection starts. Together with\n     * {@link #focus focus} they define the direction of selection, which is important\n     * when expanding/shrinking selection. Anchor is always the start or end of the most recent added range.\n     * It may be a bit unintuitive when there are multiple ranges in selection.\n     *\n     * @see #focus\n     * @type {module:engine/view/position~Position}\n     */\n\n  }, {\n    key: \"anchor\",\n    get: function get() {\n      if (!this._ranges.length) {\n        return null;\n      }\n\n      var range = this._ranges[this._ranges.length - 1];\n      var anchor = this._lastRangeBackward ? range.end : range.start;\n      return anchor.clone();\n    }\n    /**\n     * Selection focus. Focus is a position where the selection ends.\n     *\n     * @see #anchor\n     * @type {module:engine/view/position~Position}\n     */\n\n  }, {\n    key: \"focus\",\n    get: function get() {\n      if (!this._ranges.length) {\n        return null;\n      }\n\n      var range = this._ranges[this._ranges.length - 1];\n      var focus = this._lastRangeBackward ? range.start : range.end;\n      return focus.clone();\n    }\n    /**\n     * Returns whether the selection is collapsed. Selection is collapsed when there is exactly one range which is\n     * collapsed.\n     *\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isCollapsed\",\n    get: function get() {\n      return this.rangeCount === 1 && this._ranges[0].isCollapsed;\n    }\n    /**\n     * Returns number of ranges in selection.\n     *\n     * @type {Number}\n     */\n\n  }, {\n    key: \"rangeCount\",\n    get: function get() {\n      return this._ranges.length;\n    }\n    /**\n     * Specifies whether the {@link #focus} precedes {@link #anchor}.\n     *\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isBackward\",\n    get: function get() {\n      return !this.isCollapsed && this._lastRangeBackward;\n    }\n    /**\n     * {@link module:engine/view/editableelement~EditableElement EditableElement} instance that contains this selection, or `null`\n     * if the selection is not inside an editable element.\n     *\n     * @type {module:engine/view/editableelement~EditableElement|null}\n     */\n\n  }, {\n    key: \"editableElement\",\n    get: function get() {\n      if (this.anchor) {\n        return this.anchor.editableElement;\n      }\n\n      return null;\n    }\n  }]);\n\n  return Selection;\n}();\n\nexport { Selection as default };\nmix(Selection, EmitterMixin);","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/collection\n */\nimport EmitterMixin from './emittermixin';\nimport CKEditorError from './ckeditorerror';\nimport uid from './uid';\nimport mix from './mix';\n/**\n * Collections are ordered sets of objects. Items in the collection can be retrieved by their indexes\n * in the collection (like in an array) or by their ids.\n *\n * If an object without an `id` property is being added to the collection, the `id` property will be generated\n * automatically. Note that the automatically generated id is unique only within this single collection instance.\n *\n * By default an item in the collection is identified by its `id` property. The name of the identifier can be\n * configured through the constructor of the collection.\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n */\n\nvar Collection =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a new Collection instance.\n   *\n   * @param {Object} [options={}] The options object.\n   * @param {String} [options.idProperty='id'] The name of the property which is considered to identify an item.\n   */\n  function Collection() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Collection);\n\n    /**\n     * The internal list of items in the collection.\n     *\n     * @private\n     * @member {Object[]}\n     */\n    this._items = [];\n    /**\n     * The internal map of items in the collection.\n     *\n     * @private\n     * @member {Map}\n     */\n\n    this._itemMap = new Map();\n    /**\n     * The name of the property which is considered to identify an item.\n     *\n     * @private\n     * @member {String}\n     */\n\n    this._idProperty = options.idProperty || 'id';\n    /**\n     * A helper mapping external items of a bound collection ({@link #bindTo})\n     * and actual items of this collection. It provides information\n     * necessary to properly remove items bound to another collection.\n     *\n     * See {@link #_bindToInternalToExternalMap}.\n     *\n     * @protected\n     * @member {WeakMap}\n     */\n\n    this._bindToExternalToInternalMap = new WeakMap();\n    /**\n     * A helper mapping items of this collection to external items of a bound collection\n     * ({@link #bindTo}). It provides information necessary to manage the bindings, e.g.\n     * to avoid loops in two–way bindings.\n     *\n     * See {@link #_bindToExternalToInternalMap}.\n     *\n     * @protected\n     * @member {WeakMap}\n     */\n\n    this._bindToInternalToExternalMap = new WeakMap();\n    /**\n     * Stores indexes of skipped items from bound external collection.\n     *\n     * @private\n     * @member {Array}\n     */\n\n    this._skippedIndexesFromExternal = [];\n    /**\n     * A collection instance this collection is bound to as a result\n     * of calling {@link #bindTo} method.\n     *\n     * @protected\n     * @member {module:utils/collection~Collection} #_bindToCollection\n     */\n  }\n  /**\n   * The number of items available in the collection.\n   *\n   * @member {Number} #length\n   */\n\n\n  _createClass(Collection, [{\n    key: \"add\",\n\n    /**\n     * Adds an item into the collection.\n     *\n     * If the item does not have an id, then it will be automatically generated and set on the item.\n     *\n     * @chainable\n     * @param {Object} item\n     * @param {Number} [index] The position of the item in the collection. The item\n     * is pushed to the collection when `index` not specified.\n     * @fires add\n     */\n    value: function add(item, index) {\n      var itemId;\n      var idProperty = this._idProperty;\n\n      if (idProperty in item) {\n        itemId = item[idProperty];\n\n        if (typeof itemId != 'string') {\n          /**\n           * This item's id should be a string.\n           *\n           * @error collection-add-invalid-id\n           */\n          throw new CKEditorError('collection-add-invalid-id');\n        }\n\n        if (this.get(itemId)) {\n          /**\n           * This item already exists in the collection.\n           *\n           * @error collection-add-item-already-exists\n           */\n          throw new CKEditorError('collection-add-item-already-exists');\n        }\n      } else {\n        item[idProperty] = itemId = uid();\n      } // TODO: Use ES6 default function argument.\n\n\n      if (index === undefined) {\n        index = this._items.length;\n      } else if (index > this._items.length || index < 0) {\n        /**\n         * The index number has invalid value.\n         *\n         * @error collection-add-item-bad-index\n         */\n        throw new CKEditorError('collection-add-item-invalid-index');\n      }\n\n      this._items.splice(index, 0, item);\n\n      this._itemMap.set(itemId, item);\n\n      this.fire('add', item, index);\n      return this;\n    }\n    /**\n     * Gets item by its id or index.\n     *\n     * @param {String|Number} idOrIndex The item id or index in the collection.\n     * @returns {Object|null} The requested item or `null` if such item does not exist.\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(idOrIndex) {\n      var item;\n\n      if (typeof idOrIndex == 'string') {\n        item = this._itemMap.get(idOrIndex);\n      } else if (typeof idOrIndex == 'number') {\n        item = this._items[idOrIndex];\n      } else {\n        /**\n         * Index or id must be given.\n         *\n         * @error collection-get-invalid-arg\n         */\n        throw new CKEditorError('collection-get-invalid-arg: Index or id must be given.');\n      }\n\n      return item || null;\n    }\n    /**\n     * Gets index of item in the collection.\n     * When item is not defined in the collection then index will be equal -1.\n     *\n     * @param {String|Object} idOrItem The item or its id in the collection.\n     * @returns {Number} Index of given item.\n     */\n\n  }, {\n    key: \"getIndex\",\n    value: function getIndex(idOrItem) {\n      var item;\n\n      if (typeof idOrItem == 'string') {\n        item = this._itemMap.get(idOrItem);\n      } else {\n        item = idOrItem;\n      }\n\n      return this._items.indexOf(item);\n    }\n    /**\n     * Removes an item from the collection.\n     *\n     * @param {Object|Number|String} subject The item to remove, its id or index in the collection.\n     * @returns {Object} The removed item.\n     * @fires remove\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(subject) {\n      var index, id, item;\n      var itemDoesNotExist = false;\n      var idProperty = this._idProperty;\n\n      if (typeof subject == 'string') {\n        id = subject;\n        item = this._itemMap.get(id);\n        itemDoesNotExist = !item;\n\n        if (item) {\n          index = this._items.indexOf(item);\n        }\n      } else if (typeof subject == 'number') {\n        index = subject;\n        item = this._items[index];\n        itemDoesNotExist = !item;\n\n        if (item) {\n          id = item[idProperty];\n        }\n      } else {\n        item = subject;\n        id = item[idProperty];\n        index = this._items.indexOf(item);\n        itemDoesNotExist = index == -1 || !this._itemMap.get(id);\n      }\n\n      if (itemDoesNotExist) {\n        /**\n         * Item not found.\n         *\n         * @error collection-remove-404\n         */\n        throw new CKEditorError('collection-remove-404: Item not found.');\n      }\n\n      this._items.splice(index, 1);\n\n      this._itemMap.delete(id);\n\n      var externalItem = this._bindToInternalToExternalMap.get(item);\n\n      this._bindToInternalToExternalMap.delete(item);\n\n      this._bindToExternalToInternalMap.delete(externalItem);\n\n      this.fire('remove', item, index);\n      return item;\n    }\n    /**\n     * Executes the callback for each item in the collection and composes an array or values returned by this callback.\n     *\n     * @param {Function} callback\n     * @param {Object} callback.item\n     * @param {Number} callback.index\n     * @param {Object} ctx Context in which the `callback` will be called.\n     * @returns {Array} The result of mapping.\n     */\n\n  }, {\n    key: \"map\",\n    value: function map(callback, ctx) {\n      return this._items.map(callback, ctx);\n    }\n    /**\n     * Finds the first item in the collection for which the `callback` returns a true value.\n     *\n     * @param {Function} callback\n     * @param {Object} callback.item\n     * @param {Number} callback.index\n     * @param {Object} ctx Context in which the `callback` will be called.\n     * @returns {Object} The item for which `callback` returned a true value.\n     */\n\n  }, {\n    key: \"find\",\n    value: function find(callback, ctx) {\n      return this._items.find(callback, ctx);\n    }\n    /**\n     * Returns an array with items for which the `callback` returned a true value.\n     *\n     * @param {Function} callback\n     * @param {Object} callback.item\n     * @param {Number} callback.index\n     * @param {Object} ctx Context in which the `callback` will be called.\n     * @returns {Object[]} The array with matching items.\n     */\n\n  }, {\n    key: \"filter\",\n    value: function filter(callback, ctx) {\n      return this._items.filter(callback, ctx);\n    }\n    /**\n     * Removes all items from the collection and destroys the binding created using\n     * {@link #bindTo}.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      if (this._bindToCollection) {\n        this.stopListening(this._bindToCollection);\n        this._bindToCollection = null;\n      }\n\n      while (this.length) {\n        this.remove(0);\n      }\n    }\n    /**\n     * Binds and synchronizes the collection with another one.\n     *\n     * The binding can be a simple factory:\n     *\n     *\t\tclass FactoryClass {\n     *\t\t\tconstructor( data ) {\n     *\t\t\t\tthis.label = data.label;\n     *\t\t\t}\n     *\t\t}\n     *\n     *\t\tconst source = new Collection( { idProperty: 'label' } );\n     *\t\tconst target = new Collection();\n     *\n     *\t\ttarget.bindTo( source ).as( FactoryClass );\n     *\n     *\t\tsource.add( { label: 'foo' } );\n     *\t\tsource.add( { label: 'bar' } );\n     *\n     *\t\tconsole.log( target.length ); // 2\n     *\t\tconsole.log( target.get( 1 ).label ); // 'bar'\n     *\n     *\t\tsource.remove( 0 );\n     *\t\tconsole.log( target.length ); // 1\n     *\t\tconsole.log( target.get( 0 ).label ); // 'bar'\n     *\n     * or the factory driven by a custom callback:\n     *\n     *\t\tclass FooClass {\n     *\t\t\tconstructor( data ) {\n     *\t\t\t\tthis.label = data.label;\n     *\t\t\t}\n     *\t\t}\n     *\n     *\t\tclass BarClass {\n     *\t\t\tconstructor( data ) {\n     *\t\t\t\tthis.label = data.label;\n     *\t\t\t}\n     *\t\t}\n     *\n     *\t\tconst source = new Collection( { idProperty: 'label' } );\n     *\t\tconst target = new Collection();\n     *\n     *\t\ttarget.bindTo( source ).using( ( item ) => {\n     *\t\t\tif ( item.label == 'foo' ) {\n     *\t\t\t\treturn new FooClass( item );\n     *\t\t\t} else {\n     *\t\t\t\treturn new BarClass( item );\n     *\t\t\t}\n     *\t\t} );\n     *\n     *\t\tsource.add( { label: 'foo' } );\n     *\t\tsource.add( { label: 'bar' } );\n     *\n     *\t\tconsole.log( target.length ); // 2\n     *\t\tconsole.log( target.get( 0 ) instanceof FooClass ); // true\n     *\t\tconsole.log( target.get( 1 ) instanceof BarClass ); // true\n     *\n     * or the factory out of property name:\n     *\n     *\t\tconst source = new Collection( { idProperty: 'label' } );\n     *\t\tconst target = new Collection();\n     *\n     *\t\ttarget.bindTo( source ).using( 'label' );\n     *\n     *\t\tsource.add( { label: { value: 'foo' } } );\n     *\t\tsource.add( { label: { value: 'bar' } } );\n     *\n     *\t\tconsole.log( target.length ); // 2\n     *\t\tconsole.log( target.get( 0 ).value ); // 'foo'\n     *\t\tconsole.log( target.get( 1 ).value ); // 'bar'\n     *\n     * It's possible to skip specified items by returning falsy value:\n     *\n     *\t\tconst source = new Collection();\n     *\t\tconst target = new Collection();\n     *\n     *\t\ttarget.bindTo( source ).using( item => {\n     *\t\t\tif ( item.hidden ) {\n     *\t\t\t\treturn null;\n     *\t\t\t}\n     *\n     *\t\t\treturn item;\n     *\t\t} );\n     *\n     *\t\tsource.add( { hidden: true } );\n     *\t\tsource.add( { hidden: false } );\n     *\n     *\t\tconsole.log( source.length ); // 2\n     *\t\tconsole.log( target.length ); // 1\n     *\n     * **Note**: {@link #clear} can be used to break the binding.\n     *\n     * @param {module:utils/collection~Collection} externalCollection A collection to be bound.\n     * @returns {Object}\n     * @returns {module:utils/collection~Collection#bindTo#as} return.as\n     * @returns {module:utils/collection~Collection#bindTo#using} return.using\n     */\n\n  }, {\n    key: \"bindTo\",\n    value: function bindTo(externalCollection) {\n      var _this = this;\n\n      if (this._bindToCollection) {\n        /**\n         * The collection cannot be bound more than once.\n         *\n         * @error collection-bind-to-rebind\n         */\n        throw new CKEditorError('collection-bind-to-rebind: The collection cannot be bound more than once.');\n      }\n\n      this._bindToCollection = externalCollection;\n      return {\n        /**\n         * Creates the class factory binding.\n         *\n         * @static\n         * @param {Function} Class Specifies which class factory is to be initialized.\n         */\n        as: function as(Class) {\n          _this._setUpBindToBinding(function (item) {\n            return new Class(item);\n          });\n        },\n\n        /**\n         * Creates callback or property binding.\n         *\n         * @static\n         * @param {Function|String} callbackOrProperty When the function is passed, it is used to\n         * produce the items. When the string is provided, the property value is used to create\n         * the bound collection items.\n         */\n        using: function using(callbackOrProperty) {\n          if (typeof callbackOrProperty == 'function') {\n            _this._setUpBindToBinding(function (item) {\n              return callbackOrProperty(item);\n            });\n          } else {\n            _this._setUpBindToBinding(function (item) {\n              return item[callbackOrProperty];\n            });\n          }\n        }\n      };\n    }\n    /**\n     * Finalizes and activates a binding initiated by {#bindTo}.\n     *\n     * @protected\n     * @param {Function} factory A function which produces collection items.\n     */\n\n  }, {\n    key: \"_setUpBindToBinding\",\n    value: function _setUpBindToBinding(factory) {\n      var _this2 = this;\n\n      var externalCollection = this._bindToCollection; // Adds the item to the collection once a change has been done to the external collection.\n      //\n      // @private\n\n      var addItem = function addItem(evt, externalItem, index) {\n        var isExternalBoundToThis = externalCollection._bindToCollection == _this2;\n\n        var externalItemBound = externalCollection._bindToInternalToExternalMap.get(externalItem); // If an external collection is bound to this collection, which makes it a 2–way binding,\n        // and the particular external collection item is already bound, don't add it here.\n        // The external item has been created **out of this collection's item** and (re)adding it will\n        // cause a loop.\n\n\n        if (isExternalBoundToThis && externalItemBound) {\n          _this2._bindToExternalToInternalMap.set(externalItem, externalItemBound);\n\n          _this2._bindToInternalToExternalMap.set(externalItemBound, externalItem);\n        } else {\n          var item = factory(externalItem); // When there is no item we need to remember skipped index first and then we can skip this item.\n\n          if (!item) {\n            _this2._skippedIndexesFromExternal.push(index);\n\n            return;\n          } // Lets try to put item at the same index as index in external collection\n          // but when there are a skipped items in one or both collections we need to recalculate this index.\n\n\n          var finalIndex = index; // When we try to insert item after some skipped items from external collection we need\n          // to include this skipped items and decrease index.\n          //\n          // For the following example:\n          // external -> [ 'A', 'B - skipped for internal', 'C - skipped for internal' ]\n          // internal -> [ A ]\n          //\n          // Another item is been added at the end of external collection:\n          // external.add( 'D' )\n          // external -> [ 'A', 'B - skipped for internal', 'C - skipped for internal', 'D' ]\n          //\n          // We can't just add 'D' to internal at the same index as index in external because\n          // this will produce empty indexes what is invalid:\n          // internal -> [ 'A', empty, empty, 'D' ]\n          //\n          // So we need to include skipped items and decrease index\n          // internal -> [ 'A', 'D' ]\n\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = _this2._skippedIndexesFromExternal[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var skipped = _step.value;\n\n              if (index > skipped) {\n                finalIndex--;\n              }\n            } // We need to take into consideration that external collection could skip some items from\n            // internal collection.\n            //\n            // For the following example:\n            // internal -> [ 'A', 'B - skipped for external', 'C - skipped for external' ]\n            // external -> [ A ]\n            //\n            // Another item is been added at the end of external collection:\n            // external.add( 'D' )\n            // external -> [ 'A', 'D' ]\n            //\n            // We need to include skipped items and place new item after them:\n            // internal -> [ 'A', 'B - skipped for external', 'C - skipped for external', 'D' ]\n\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = externalCollection._skippedIndexesFromExternal[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var _skipped = _step2.value;\n\n              if (finalIndex >= _skipped) {\n                finalIndex++;\n              }\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                _iterator2.return();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n\n          _this2._bindToExternalToInternalMap.set(externalItem, item);\n\n          _this2._bindToInternalToExternalMap.set(item, externalItem);\n\n          _this2.add(item, finalIndex); // After adding new element to internal collection we need update indexes\n          // of skipped items in external collection.\n\n\n          for (var i = 0; i < externalCollection._skippedIndexesFromExternal.length; i++) {\n            if (finalIndex <= externalCollection._skippedIndexesFromExternal[i]) {\n              externalCollection._skippedIndexesFromExternal[i]++;\n            }\n          }\n        }\n      }; // Load the initial content of the collection.\n\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = externalCollection[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var externalItem = _step3.value;\n          addItem(null, externalItem, externalCollection.getIndex(externalItem));\n        } // Synchronize the with collection as new items are added.\n\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      this.listenTo(externalCollection, 'add', addItem); // Synchronize the with collection as new items are removed.\n\n      this.listenTo(externalCollection, 'remove', function (evt, externalItem, index) {\n        var item = _this2._bindToExternalToInternalMap.get(externalItem);\n\n        if (item) {\n          _this2.remove(item);\n        } // After removing element from external collection we need update/remove indexes\n        // of skipped items in internal collection.\n\n\n        _this2._skippedIndexesFromExternal = _this2._skippedIndexesFromExternal.reduce(function (result, skipped) {\n          if (index < skipped) {\n            result.push(skipped - 1);\n          }\n\n          if (index > skipped) {\n            result.push(skipped);\n          }\n\n          return result;\n        }, []);\n      });\n    }\n    /**\n     * Iterable interface.\n     *\n     * @returns {Iterable.<*>}\n     */\n\n  }, {\n    key: Symbol.iterator,\n    value: function value() {\n      return this._items[Symbol.iterator]();\n    }\n    /**\n     * Fired when an item is added to the collection.\n     *\n     * @event add\n     * @param {Object} item The added item.\n     */\n\n    /**\n     * Fired when an item is removed from the collection.\n     *\n     * @event remove\n     * @param {Object} item The removed item.\n     * @param {Number} index Index from which item was removed.\n     */\n\n  }, {\n    key: \"length\",\n    get: function get() {\n      return this._items.length;\n    }\n    /**\n     * Returns the first item from the collection or null when collection is empty.\n     *\n     * @returns {Object|null} The first item or `null` if collection is empty.\n     */\n\n  }, {\n    key: \"first\",\n    get: function get() {\n      return this._items[0] || null;\n    }\n    /**\n     * Returns the last item from the collection or null when collection is empty.\n     *\n     * @returns {Object|null} The last item or `null` if collection is empty.\n     */\n\n  }, {\n    key: \"last\",\n    get: function get() {\n      return this._items[this.length - 1] || null;\n    }\n  }]);\n\n  return Collection;\n}();\n\nexport { Collection as default };\nmix(Collection, EmitterMixin);","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/first\n */\n\n/**\n * Returns first item of the given `iterable`.\n *\n * @param {Iterable.<*>} iterable\n * @returns {*}\n */\nexport default function first(iterable) {\n  var iteratorItem = iterable.next();\n\n  if (iteratorItem.done) {\n    return null;\n  }\n\n  return iteratorItem.value;\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/observer/observer\n */\nimport DomEmitterMixin from '@ckeditor/ckeditor5-utils/src/dom/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n/**\n * Abstract base observer class. Observers are classes which listen to DOM events, do the preliminary\n * processing and fire events on the {@link module:engine/view/document~Document} objects.\n * Observers can also add features to the view, for instance by updating its status or marking elements\n * which need refresh on DOM events.\n *\n * @abstract\n */\n\nvar Observer =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of the observer.\n   *\n   * @param {module:engine/view/view~View} view\n   */\n  function Observer(view) {\n    _classCallCheck(this, Observer);\n\n    /**\n     * Instance of the view controller.\n     *\n     * @readonly\n     * @member {module:engine/view/view~View}\n     */\n    this.view = view;\n    /**\n     * Reference to the {@link module:engine/view/document~Document} object.\n     *\n     * @readonly\n     * @member {module:engine/view/document~Document}\n     */\n\n    this.document = view.document;\n    /**\n     * State of the observer. If it is disabled events will not be fired.\n     *\n     * @readonly\n     * @member {Boolean}\n     */\n\n    this.isEnabled = false;\n  }\n  /**\n   * Enables the observer. This method is called when the observer is registered to the\n   * {@link module:engine/view/view~View} and after {@link module:engine/view/view~View#render rendering}\n   * (all observers are {@link #disable disabled} before rendering).\n   *\n   * A typical use case for disabling observers is that mutation observers need to be disabled for the rendering.\n   * However, a child class may not need to be disabled, so it can implement an empty method.\n   *\n   * @see module:engine/view/observer/observer~Observer#disable\n   */\n\n\n  _createClass(Observer, [{\n    key: \"enable\",\n    value: function enable() {\n      this.isEnabled = true;\n    }\n    /**\n     * Disables the observer. This method is called before\n     * {@link module:engine/view/view~View#render rendering} to prevent firing events during rendering.\n     *\n     * @see module:engine/view/observer/observer~Observer#enable\n     */\n\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      this.isEnabled = false;\n    }\n    /**\n     * Disables and destroys the observer, among others removes event listeners created by the observer.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.disable();\n      this.stopListening();\n    }\n    /**\n     * Starts observing the given root element.\n     *\n     * @method #observe\n     * @param {HTMLElement} domElement\n     * @param {String} name The name of the root element.\n     */\n\n  }]);\n\n  return Observer;\n}();\n\nexport { Observer as default };\nmix(Observer, DomEmitterMixin);","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/keystrokehandler\n */\nimport DomEmitterMixin from './dom/emittermixin';\nimport { getCode, parseKeystroke } from './keyboard';\n/**\n * Keystroke handler allows registering callbacks for given keystrokes.\n *\n * The most frequent use of this class is through the {@link module:core/editor/editor~Editor#keystrokes `editor.keystrokes`}\n * property. It allows listening to keystrokes executed in the editing view:\n *\n *\t\teditor.keystrokes.set( 'Ctrl+A', ( keyEvtData, cancel ) => {\n *\t\t\tconsole.log( 'Ctrl+A has been pressed' );\n *\t\t\tcancel();\n *\t\t} );\n *\n * However, this utility class can be used in various part of the UI. For instance, a certain {@link module:ui/view~View}\n * can use it like this:\n *\n *\t\tclass MyView extends View {\n *\t\t\tconstructor() {\n *\t\t\t\tthis.keystrokes = new KeystrokeHandler();\n *\n * \t\t\t\tthis.keystrokes.set( 'tab', handleTabKey );\n *\t\t\t}\n *\n *\t\t\trender() {\n *\t\t\t\tsuper.render();\n *\n *\t\t\t\tthis.keystrokes.listenTo( this.element );\n *\t\t\t}\n *\t\t}\n *\n * That keystroke handler will listen to `keydown` events fired in this view's main element.\n *\n */\n\nvar KeystrokeHandler =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of the keystroke handler.\n   */\n  function KeystrokeHandler() {\n    _classCallCheck(this, KeystrokeHandler);\n\n    /**\n     * Listener used to listen to events for easier keystroke handler destruction.\n     *\n     * @protected\n     * @member {module:utils/dom/emittermixin~Emitter}\n     */\n    this._listener = Object.create(DomEmitterMixin);\n  }\n  /**\n   * Starts listening for `keydown` events from a given emitter.\n   *\n   * @param {module:utils/emittermixin~Emitter} emitter\n   */\n\n\n  _createClass(KeystrokeHandler, [{\n    key: \"listenTo\",\n    value: function listenTo(emitter) {\n      var _this = this;\n\n      // The #_listener works here as a kind of dispatcher. It groups the events coming from the same\n      // keystroke so the listeners can be attached to them with different priorities.\n      //\n      // E.g. all the keystrokes with the `keyCode` of 42 coming from the `emitter` are propagated\n      // as a `_keydown:42` event by the `_listener`. If there's a callback created by the `set`\n      // method for this 42 keystroke, it listens to the `_listener#_keydown:42` event only and interacts\n      // only with other listeners of this particular event, thus making it possible to prioritize\n      // the listeners and safely cancel execution, when needed. Instead of duplicating the Emitter logic,\n      // the KeystrokeHandler re–uses it to do its job.\n      this._listener.listenTo(emitter, 'keydown', function (evt, keyEvtData) {\n        _this._listener.fire('_keydown:' + getCode(keyEvtData), keyEvtData);\n      });\n    }\n    /**\n     * Registers a handler for the specified keystroke.\n     *\n     * @param {String|Array.<String|Number>} keystroke Keystroke defined in a format accepted by\n     * the {@link module:utils/keyboard~parseKeystroke} function.\n     * @param {Function} callback A function called with the\n     * {@link module:engine/view/observer/keyobserver~KeyEventData key event data} object and\n     * a helper funcion to call both `preventDefault()` and `stopPropagation()` on the underlying event.\n     * @param {Object} [options={}] Additional options.\n     * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of the keystroke\n     * callback. The higher the priority value the sooner the callback will be executed. Keystrokes having the same priority\n     * are called in the order they were added.\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(keystroke, callback) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var keyCode = parseKeystroke(keystroke);\n      var priority = options.priority; // Execute the passed callback on KeystrokeHandler#_keydown.\n      // TODO: https://github.com/ckeditor/ckeditor5-utils/issues/144\n\n      this._listener.listenTo(this._listener, '_keydown:' + keyCode, function (evt, keyEvtData) {\n        callback(keyEvtData, function () {\n          // Stop the event in the DOM: no listener in the web page\n          // will be triggered by this event.\n          keyEvtData.preventDefault();\n          keyEvtData.stopPropagation(); // Stop the event in the KeystrokeHandler: no more callbacks\n          // will be executed for this keystroke.\n\n          evt.stop();\n        }); // Mark this keystroke as handled by the callback. See: #press.\n\n        evt.return = true;\n      }, {\n        priority: priority\n      });\n    }\n    /**\n     * Triggers a keystroke handler for a specified key combination, if such a keystroke was {@link #set defined}.\n     *\n     * @param {module:engine/view/observer/keyobserver~KeyEventData} keyEvtData Key event data.\n     * @returns {Boolean} Whether the keystroke was handled.\n     */\n\n  }, {\n    key: \"press\",\n    value: function press(keyEvtData) {\n      return !!this._listener.fire('_keydown:' + getCode(keyEvtData), keyEvtData);\n    }\n    /**\n     * Destroys the keystroke handler.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._listener.stopListening();\n    }\n  }]);\n\n  return KeystrokeHandler;\n}();\n\nexport { KeystrokeHandler as default };","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/* global setTimeout, clearTimeout */\n\n/**\n * @module utils/focustracker\n */\nimport DomEmitterMixin from './dom/emittermixin';\nimport ObservableMixin from './observablemixin';\nimport CKEditorError from './ckeditorerror';\nimport mix from './mix';\n/**\n * Allows observing a group of `HTMLElement`s whether at least one of them is focused.\n *\n * Used by the {@link module:core/editor/editor~Editor} in order to track whether the focus is still within the application,\n * or were used outside of its UI.\n *\n * **Note** `focus` and `blur` listeners use event capturing, so it is only needed to register wrapper `HTMLElement`\n * which contain other `focusable` elements. But note that this wrapper element has to be focusable too\n * (have e.g. `tabindex=\"-1\"`).\n *\n * @mixes module:utils/dom/emittermixin~EmitterMixin\n * @mixes module:utils/observablemixin~ObservableMixin\n */\n\nvar FocusTracker =\n/*#__PURE__*/\nfunction () {\n  function FocusTracker() {\n    _classCallCheck(this, FocusTracker);\n\n    /**\n     * True when one of the registered elements is focused.\n     *\n     * @readonly\n     * @observable\n     * @member {Boolean} #isFocused\n     */\n    this.set('isFocused', false);\n    /**\n     * Currently focused element.\n     *\n     * @readonly\n     * @member {HTMLElement}\n     */\n\n    this.focusedElement = null;\n    /**\n     * List of registered elements.\n     *\n     * @private\n     * @member {Set.<HTMLElement>}\n     */\n\n    this._elements = new Set();\n    /**\n     * Event loop timeout.\n     *\n     * @private\n     * @member {Number}\n     */\n\n    this._nextEventLoopTimeout = null;\n  }\n  /**\n   * Starts tracking the specified element.\n   *\n   * @param {HTMLElement} element\n   */\n\n\n  _createClass(FocusTracker, [{\n    key: \"add\",\n    value: function add(element) {\n      var _this = this;\n\n      if (this._elements.has(element)) {\n        throw new CKEditorError('focusTracker-add-element-already-exist');\n      }\n\n      this.listenTo(element, 'focus', function () {\n        return _this._focus(element);\n      }, {\n        useCapture: true\n      });\n      this.listenTo(element, 'blur', function () {\n        return _this._blur();\n      }, {\n        useCapture: true\n      });\n\n      this._elements.add(element);\n    }\n    /**\n     * Stops tracking the specified element and stops listening on this element.\n     *\n     * @param {HTMLElement} element\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(element) {\n      if (element === this.focusedElement) {\n        this._blur(element);\n      }\n\n      if (this._elements.has(element)) {\n        this.stopListening(element);\n\n        this._elements.delete(element);\n      }\n    }\n    /**\n     * Stores currently focused element and set {#isFocused} as `true`.\n     *\n     * @private\n     * @param {HTMLElement} element Element which has been focused.\n     */\n\n  }, {\n    key: \"_focus\",\n    value: function _focus(element) {\n      clearTimeout(this._nextEventLoopTimeout);\n      this.focusedElement = element;\n      this.isFocused = true;\n    }\n    /**\n     * Clears currently focused element and set {@link #isFocused} as `false`.\n     * This method uses `setTimeout` to change order of fires `blur` and `focus` events.\n     *\n     * @private\n     * @fires blur\n     */\n\n  }, {\n    key: \"_blur\",\n    value: function _blur() {\n      var _this2 = this;\n\n      clearTimeout(this._nextEventLoopTimeout);\n      this._nextEventLoopTimeout = setTimeout(function () {\n        _this2.focusedElement = null;\n        _this2.isFocused = false;\n      }, 0);\n    }\n    /**\n     * @event focus\n     */\n\n    /**\n     * @event blur\n     */\n\n  }]);\n\n  return FocusTracker;\n}();\n\nexport { FocusTracker as default };\nmix(FocusTracker, DomEmitterMixin);\nmix(FocusTracker, ObservableMixin);","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/selection\n */\nimport Position from './position';\nimport Element from './element';\nimport Node from './node';\nimport Range from './range';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\n/**\n * Selection is a set of {@link module:engine/model/range~Range ranges}. It has a direction specified by its\n * {@link module:engine/model/selection~Selection#anchor anchor} and {@link module:engine/model/selection~Selection#focus focus}\n * (it can be {@link module:engine/model/selection~Selection#isBackward forward or backward}).\n * Additionally, selection may have its own attributes (think – whether text typed in in this selection\n * should have those attributes – e.g. whether you type a bolded text).\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n */\n\nvar Selection =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a new selection instance\n   * based on the given {@link module:engine/model/selection~Selection selection},\n   * or based on the given {@link module:engine/model/range~Range range},\n   * or based on an iterable collection of {@link module:engine/model/range~Range ranges}\n   * or at the given {@link module:engine/model/position~Position position},\n   * or on the given {@link module:engine/model/element~Element element},\n   * or creates an empty selection if no arguments were passed.\n   *\n   *\t\t// Creates empty selection without ranges.\n   *\t\tconst selection = writer.createSelection();\n   *\n   *\t\t// Creates selection at the given range.\n   *\t\tconst range = writer.createRange( start, end );\n   *\t\tconst selection = writer.createSelection( range );\n   *\n   *\t\t// Creates selection at the given ranges\n   *\t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n   *\t\tconst selection = writer.createSelection( ranges );\n   *\n   *\t\t// Creates selection from the other selection.\n   *\t\t// Note: It doesn't copies selection attributes.\n   *\t\tconst otherSelection = writer.createSelection();\n   *\t\tconst selection = writer.createSelection( otherSelection );\n   *\n   *\t\t// Creates selection from the given document selection.\n   *\t\t// Note: It doesn't copies selection attributes.\n   *\t\tconst documentSelection = model.document.selection;\n   *\t\tconst selection = writer.createSelection( documentSelection );\n   *\n   *\t\t// Creates selection at the given position.\n   *\t\tconst position = writer.createPositionFromPath( root, path );\n   *\t\tconst selection = writer.createSelection( position );\n   *\n   *\t\t// Creates selection at the given offset in the given element.\n   *\t\tconst paragraph = writer.createElement( 'paragraph' );\n   *\t\tconst selection = writer.createSelection( paragraph, offset );\n   *\n   *\t\t// Creates a range inside an {@link module:engine/model/element~Element element} which starts before the\n   *\t\t// first child of that element and ends after the last child of that element.\n   *\t\tconst selection = writer.createSelection( paragraph, 'in' );\n   *\n   *\t\t// Creates a range on an {@link module:engine/model/item~Item item} which starts before the item and ends\n   *\t\t// just after the item.\n   *\t\tconst selection = writer.createSelection( paragraph, 'on' );\n   *\n   * Selection's constructor allow passing additional options (`'backward'`) as the last argument.\n   *\n   *\t\t// Creates backward selection.\n   *\t\tconst selection = writer.createSelection( range, { backward: true } );\n   *\n   * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection|\n   * module:engine/model/position~Position|module:engine/model/element~Element|\n   * Iterable.<module:engine/model/range~Range>|module:engine/model/range~Range|null} selectable\n   * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n   * @param {Object} [options]\n   * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n   */\n  function Selection(selectable, placeOrOffset, options) {\n    _classCallCheck(this, Selection);\n\n    /**\n     * Specifies whether the last added range was added as a backward or forward range.\n     *\n     * @private\n     * @type {Boolean}\n     */\n    this._lastRangeBackward = false;\n    /**\n     * Stores selection ranges.\n     *\n     * @protected\n     * @type {Array.<module:engine/model/range~Range>}\n     */\n\n    this._ranges = [];\n    /**\n     * List of attributes set on current selection.\n     *\n     * @protected\n     * @type {Map.<String,*>}\n     */\n\n    this._attrs = new Map();\n\n    if (selectable) {\n      this.setTo(selectable, placeOrOffset, options);\n    }\n  }\n  /**\n   * Selection anchor. Anchor is the position from which the selection was started. If a user is making a selection\n   * by dragging the mouse, the anchor is where the user pressed the mouse button (the beggining of the selection).\n   *\n   * Anchor and {@link #focus} define the direction of the selection, which is important\n   * when expanding/shrinking selection. The focus moves, while the anchor should remain in the same place.\n   *\n   * Anchor is always set to the {@link module:engine/model/range~Range#start start} or\n   * {@link module:engine/model/range~Range#end end} position of the last of selection's ranges. Whether it is\n   * the `start` or `end` depends on the specified `options.backward`. See the {@link #setTo `setTo()`} method.\n   *\n   * May be set to `null` if there are no ranges in the selection.\n   *\n   * @see #focus\n   * @readonly\n   * @type {module:engine/model/position~Position|null}\n   */\n\n\n  _createClass(Selection, [{\n    key: \"isEqual\",\n\n    /**\n     * Checks whether this selection is equal to the given selection. Selections are equal if they have the same directions,\n     * the same number of ranges and all ranges from one selection equal to ranges from the another selection.\n     *\n     * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} otherSelection\n     * Selection to compare with.\n     * @returns {Boolean} `true` if selections are equal, `false` otherwise.\n     */\n    value: function isEqual(otherSelection) {\n      if (this.rangeCount != otherSelection.rangeCount) {\n        return false;\n      } else if (this.rangeCount === 0) {\n        return true;\n      }\n\n      if (!this.anchor.isEqual(otherSelection.anchor) || !this.focus.isEqual(otherSelection.focus)) {\n        return false;\n      }\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this._ranges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var thisRange = _step.value;\n          var found = false;\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = otherSelection._ranges[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var otherRange = _step2.value;\n\n              if (thisRange.isEqual(otherRange)) {\n                found = true;\n                break;\n              }\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                _iterator2.return();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n\n          if (!found) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return true;\n    }\n    /**\n     * Returns an iterable object that iterates over copies of selection ranges.\n     *\n     * @returns {Iterable.<module:engine/model/range~Range>}\n     */\n\n  }, {\n    key: \"getRanges\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function getRanges() {\n      var _iteratorNormalCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, range;\n\n      return regeneratorRuntime.wrap(function getRanges$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _iteratorNormalCompletion3 = true;\n              _didIteratorError3 = false;\n              _iteratorError3 = undefined;\n              _context.prev = 3;\n              _iterator3 = this._ranges[Symbol.iterator]();\n\n            case 5:\n              if (_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done) {\n                _context.next = 12;\n                break;\n              }\n\n              range = _step3.value;\n              _context.next = 9;\n              return new Range(range.start, range.end);\n\n            case 9:\n              _iteratorNormalCompletion3 = true;\n              _context.next = 5;\n              break;\n\n            case 12:\n              _context.next = 18;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](3);\n              _didIteratorError3 = true;\n              _iteratorError3 = _context.t0;\n\n            case 18:\n              _context.prev = 18;\n              _context.prev = 19;\n\n              if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n                _iterator3.return();\n              }\n\n            case 21:\n              _context.prev = 21;\n\n              if (!_didIteratorError3) {\n                _context.next = 24;\n                break;\n              }\n\n              throw _iteratorError3;\n\n            case 24:\n              return _context.finish(21);\n\n            case 25:\n              return _context.finish(18);\n\n            case 26:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, getRanges, this, [[3, 14, 18, 26], [19,, 21, 25]]);\n    })\n    /**\n     * Returns a copy of the first range in the selection.\n     * First range is the one which {@link module:engine/model/range~Range#start start} position\n     * {@link module:engine/model/position~Position#isBefore is before} start position of all other ranges\n     * (not to confuse with the first range added to the selection).\n     *\n     * Returns `null` if there are no ranges in selection.\n     *\n     * @returns {module:engine/model/range~Range|null}\n     */\n\n  }, {\n    key: \"getFirstRange\",\n    value: function getFirstRange() {\n      var first = null;\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = this._ranges[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var range = _step4.value;\n\n          if (!first || range.start.isBefore(first.start)) {\n            first = range;\n          }\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      return first ? new Range(first.start, first.end) : null;\n    }\n    /**\n     * Returns a copy of the last range in the selection.\n     * Last range is the one which {@link module:engine/model/range~Range#end end} position\n     * {@link module:engine/model/position~Position#isAfter is after} end position of all other ranges (not to confuse with the range most\n     * recently added to the selection).\n     *\n     * Returns `null` if there are no ranges in selection.\n     *\n     * @returns {module:engine/model/range~Range|null}\n     */\n\n  }, {\n    key: \"getLastRange\",\n    value: function getLastRange() {\n      var last = null;\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = this._ranges[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var range = _step5.value;\n\n          if (!last || range.end.isAfter(last.end)) {\n            last = range;\n          }\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      return last ? new Range(last.start, last.end) : null;\n    }\n    /**\n     * Returns the first position in the selection.\n     * First position is the position that {@link module:engine/model/position~Position#isBefore is before}\n     * any other position in the selection.\n     *\n     * Returns `null` if there are no ranges in selection.\n     *\n     * @returns {module:engine/model/position~Position|null}\n     */\n\n  }, {\n    key: \"getFirstPosition\",\n    value: function getFirstPosition() {\n      var first = this.getFirstRange();\n      return first ? first.start.clone() : null;\n    }\n    /**\n     * Returns the last position in the selection.\n     * Last position is the position that {@link module:engine/model/position~Position#isAfter is after}\n     * any other position in the selection.\n     *\n     * Returns `null` if there are no ranges in selection.\n     *\n     * @returns {module:engine/model/position~Position|null}\n     */\n\n  }, {\n    key: \"getLastPosition\",\n    value: function getLastPosition() {\n      var lastRange = this.getLastRange();\n      return lastRange ? lastRange.end.clone() : null;\n    }\n    /**\n     * Sets this selection's ranges and direction to the specified location based on the given\n     * {@link module:engine/model/selection~Selection selection}, {@link module:engine/model/position~Position position},\n     * {@link module:engine/model/element~Element element}, {@link module:engine/model/position~Position position},\n     * {@link module:engine/model/range~Range range}, an iterable of {@link module:engine/model/range~Range ranges} or null.\n     *\n     *\t\t// Removes all selection's ranges.\n     *\t\tselection.setTo( null );\n     *\n     *\t\t// Sets selection to the given range.\n     *\t\tconst range = writer.createRange( start, end );\n     *\t\tselection.setTo( range );\n     *\n     *\t\t// Sets selection to given ranges.\n     *\t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n     *\t\tselection.setTo( ranges );\n     *\n     *\t\t// Sets selection to other selection.\n     *\t\t// Note: It doesn't copies selection attributes.\n     *\t\tconst otherSelection = writer.createSelection();\n     *\t\tselection.setTo( otherSelection );\n     *\n     *\t\t// Sets selection to the given document selection.\n     *\t\t// Note: It doesn't copies selection attributes.\n     *\t\tconst documentSelection = new DocumentSelection( doc );\n     *\t\tselection.setTo( documentSelection );\n     *\n     *\t\t// Sets collapsed selection at the given position.\n     *\t\tconst position = writer.createPositionFromPath( root, path );\n     *\t\tselection.setTo( position );\n     *\n     *\t\t// Sets collapsed selection at the position of the given node and an offset.\n     *\t\tselection.setTo( paragraph, offset );\n     *\n     * Creates a range inside an {@link module:engine/model/element~Element element} which starts before the first child of\n    \t * that element and ends after the last child of that element.\n     *\n     *\t\tselection.setTo( paragraph, 'in' );\n     *\n     * Creates a range on an {@link module:engine/model/item~Item item} which starts before the item and ends just after the item.\n     *\n     *\t\tselection.setTo( paragraph, 'on' );\n     *\n     * `Selection#setTo()`' method allow passing additional options (`backward`) as the last argument.\n     *\n     *\t\t// Sets backward selection.\n     *\t\tconst selection = writer.createSelection( range, { backward: true } );\n     *\n     * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection|\n     * module:engine/model/position~Position|module:engine/model/node~Node|\n     * Iterable.<module:engine/model/range~Range>|module:engine/model/range~Range|null} selectable\n     * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n     * @param {Object} [options]\n     * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n     */\n\n  }, {\n    key: \"setTo\",\n    value: function setTo(selectable, placeOrOffset, options) {\n      if (selectable === null) {\n        this._setRanges([]);\n      } else if (selectable instanceof Selection) {\n        this._setRanges(selectable.getRanges(), selectable.isBackward);\n      } else if (selectable && typeof selectable.getRanges == 'function') {\n        // We assume that the selectable is a DocumentSelection.\n        // It can't be imported here, because it would lead to circular imports.\n        this._setRanges(selectable.getRanges(), selectable.isBackward);\n      } else if (selectable instanceof Range) {\n        this._setRanges([selectable], !!placeOrOffset && !!placeOrOffset.backward);\n      } else if (selectable instanceof Position) {\n        this._setRanges([new Range(selectable)]);\n      } else if (selectable instanceof Node) {\n        var backward = !!options && !!options.backward;\n        var range;\n\n        if (placeOrOffset == 'in') {\n          range = Range._createIn(selectable);\n        } else if (placeOrOffset == 'on') {\n          range = Range._createOn(selectable);\n        } else if (placeOrOffset !== undefined) {\n          range = new Range(Position._createAt(selectable, placeOrOffset));\n        } else {\n          /**\n           * selection.setTo requires the second parameter when the first parameter is a node.\n           *\n           * @error model-selection-setTo-required-second-parameter\n           */\n          throw new CKEditorError('model-selection-setTo-required-second-parameter: ' + 'selection.setTo requires the second parameter when the first parameter is a node.');\n        }\n\n        this._setRanges([range], backward);\n      } else if (isIterable(selectable)) {\n        // We assume that the selectable is an iterable of ranges.\n        this._setRanges(selectable, placeOrOffset && !!placeOrOffset.backward);\n      } else {\n        /**\n         * Cannot set selection to given place.\n         *\n         * @error model-selection-setTo-not-selectable\n         */\n        throw new CKEditorError('model-selection-setTo-not-selectable: Cannot set selection to given place.');\n      }\n    }\n    /**\n     * Replaces all ranges that were added to the selection with given array of ranges. Last range of the array\n     * is treated like the last added range and is used to set {@link module:engine/model/selection~Selection#anchor} and\n     * {@link module:engine/model/selection~Selection#focus}. Accepts a flag describing in which direction the selection is made.\n     *\n     * @protected\n     * @fires change:range\n     * @param {Iterable.<module:engine/model/range~Range>} newRanges Ranges to set.\n     * @param {Boolean} [isLastBackward=false] Flag describing if last added range was selected forward - from start to end (`false`)\n     * or backward - from end to start (`true`).\n     */\n\n  }, {\n    key: \"_setRanges\",\n    value: function _setRanges(newRanges) {\n      var _this = this;\n\n      var isLastBackward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      newRanges = Array.from(newRanges); // Check whether there is any range in new ranges set that is different than all already added ranges.\n\n      var anyNewRange = newRanges.some(function (newRange) {\n        if (!(newRange instanceof Range)) {\n          /**\n           * Selection range set to an object that is not an instance of {@link module:engine/model/range~Range}.\n           *\n           * Only {@link module:engine/model/range~Range} instances can be used to set a selection.\n           * Common mistakes leading to this error are:\n           *\n           * * using DOM `Range` object,\n           * * incorrect CKEditor 5 installation with multiple `ckeditor5-engine` packages having different versions.\n           *\n           * @error model-selection-set-ranges-not-range\n           */\n          throw new CKEditorError('model-selection-set-ranges-not-range: ' + 'Selection range set to an object that is not an instance of model.Range.');\n        }\n\n        return _this._ranges.every(function (oldRange) {\n          return !oldRange.isEqual(newRange);\n        });\n      }); // Don't do anything if nothing changed.\n\n      if (newRanges.length === this._ranges.length && !anyNewRange) {\n        return;\n      }\n\n      this._removeAllRanges();\n\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = newRanges[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var range = _step6.value;\n\n          this._pushRange(range);\n        }\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n            _iterator6.return();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n\n      this._lastRangeBackward = !!isLastBackward;\n      this.fire('change:range', {\n        directChange: true\n      });\n    }\n    /**\n     * Moves {@link module:engine/model/selection~Selection#focus} to the specified location.\n     *\n     * The location can be specified in the same form as\n     * {@link module:engine/model/writer~Writer#createPositionAt writer.createPositionAt()} parameters.\n     *\n     * @fires change:range\n     * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n     * first parameter is a {@link module:engine/model/item~Item model item}.\n     */\n\n  }, {\n    key: \"setFocus\",\n    value: function setFocus(itemOrPosition, offset) {\n      if (this.anchor === null) {\n        /**\n         * Cannot set selection focus if there are no ranges in selection.\n         *\n         * @error model-selection-setFocus-no-ranges\n         */\n        throw new CKEditorError('model-selection-setFocus-no-ranges: Cannot set selection focus if there are no ranges in selection.');\n      }\n\n      var newFocus = Position._createAt(itemOrPosition, offset);\n\n      if (newFocus.compareWith(this.focus) == 'same') {\n        return;\n      }\n\n      var anchor = this.anchor;\n\n      if (this._ranges.length) {\n        this._popRange();\n      }\n\n      if (newFocus.compareWith(anchor) == 'before') {\n        this._pushRange(new Range(newFocus, anchor));\n\n        this._lastRangeBackward = true;\n      } else {\n        this._pushRange(new Range(anchor, newFocus));\n\n        this._lastRangeBackward = false;\n      }\n\n      this.fire('change:range', {\n        directChange: true\n      });\n    }\n    /**\n     * Gets an attribute value for given key or `undefined` if that attribute is not set on the selection.\n     *\n     * @param {String} key Key of attribute to look for.\n     * @returns {*} Attribute value or `undefined`.\n     */\n\n  }, {\n    key: \"getAttribute\",\n    value: function getAttribute(key) {\n      return this._attrs.get(key);\n    }\n    /**\n     * Returns iterable that iterates over this selection's attributes.\n     *\n     * Attributes are returned as arrays containing two items. First one is attribute key and second is attribute value.\n     * This format is accepted by native `Map` object and also can be passed in `Node` constructor.\n     *\n     * @returns {Iterable.<*>}\n     */\n\n  }, {\n    key: \"getAttributes\",\n    value: function getAttributes() {\n      return this._attrs.entries();\n    }\n    /**\n     * Returns iterable that iterates over this selection's attribute keys.\n     *\n     * @returns {Iterable.<String>}\n     */\n\n  }, {\n    key: \"getAttributeKeys\",\n    value: function getAttributeKeys() {\n      return this._attrs.keys();\n    }\n    /**\n     * Checks if the selection has an attribute for given key.\n     *\n     * @param {String} key Key of attribute to check.\n     * @returns {Boolean} `true` if attribute with given key is set on selection, `false` otherwise.\n     */\n\n  }, {\n    key: \"hasAttribute\",\n    value: function hasAttribute(key) {\n      return this._attrs.has(key);\n    }\n    /**\n     * Removes an attribute with given key from the selection.\n     *\n     * If given attribute was set on the selection, fires the {@link #event:change:range} event with\n     * removed attribute key.\n     *\n     * @fires change:attribute\n     * @param {String} key Key of attribute to remove.\n     */\n\n  }, {\n    key: \"removeAttribute\",\n    value: function removeAttribute(key) {\n      if (this.hasAttribute(key)) {\n        this._attrs.delete(key);\n\n        this.fire('change:attribute', {\n          attributeKeys: [key],\n          directChange: true\n        });\n      }\n    }\n    /**\n     * Sets attribute on the selection. If attribute with the same key already is set, it's value is overwritten.\n     *\n     * If the attribute value has changed, fires the {@link #event:change:range} event with\n     * the attribute key.\n     *\n     * @fires change:attribute\n     * @param {String} key Key of attribute to set.\n     * @param {*} value Attribute value.\n     */\n\n  }, {\n    key: \"setAttribute\",\n    value: function setAttribute(key, value) {\n      if (this.getAttribute(key) !== value) {\n        this._attrs.set(key, value);\n\n        this.fire('change:attribute', {\n          attributeKeys: [key],\n          directChange: true\n        });\n      }\n    }\n    /**\n     * Returns the selected element. {@link module:engine/model/element~Element Element} is considered as selected if there is only\n     * one range in the selection, and that range contains exactly one element.\n     * Returns `null` if there is no selected element.\n     *\n     * @returns {module:engine/model/element~Element|null}\n     */\n\n  }, {\n    key: \"getSelectedElement\",\n    value: function getSelectedElement() {\n      if (this.rangeCount !== 1) {\n        return null;\n      }\n\n      var range = this.getFirstRange();\n      var nodeAfterStart = range.start.nodeAfter;\n      var nodeBeforeEnd = range.end.nodeBefore;\n      return nodeAfterStart instanceof Element && nodeAfterStart == nodeBeforeEnd ? nodeAfterStart : null;\n    }\n    /**\n     * Gets elements of type \"block\" touched by the selection.\n     *\n     * This method's result can be used for example to apply block styling to all blocks covered by this selection.\n     *\n     * **Note:** `getSelectedBlocks()` always returns the deepest block.\n     *\n     * In this case the function will return exactly all 3 paragraphs:\n     *\n     *\t\t<paragraph>[a</paragraph>\n     *\t\t<quote>\n     *\t\t\t<paragraph>b</paragraph>\n     *\t\t</quote>\n     *\t\t<paragraph>c]d</paragraph>\n     *\n     * In this case the paragraph will also be returned, despite the collapsed selection:\n     *\n     *\t\t<paragraph>[]a</paragraph>\n     *\n     * **Special case**: If a selection ends at the beginning of a block, that block is not returned as from user perspective\n     * this block wasn't selected. See [#984](https://github.com/ckeditor/ckeditor5-engine/issues/984) for more details.\n     *\n     *\t\t<paragraph>[a</paragraph>\n     *\t\t<paragraph>b</paragraph>\n     *\t\t<paragraph>]c</paragraph> // this block will not be returned\n     *\n     * @returns {Iterable.<module:engine/model/element~Element>}\n     */\n\n  }, {\n    key: \"getSelectedBlocks\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function getSelectedBlocks() {\n      var visited, _iteratorNormalCompletion7, _didIteratorError7, _iteratorError7, _iterator7, _step7, range, startBlock, _iteratorNormalCompletion8, _didIteratorError8, _iteratorError8, _iterator8, _step8, value, endBlock;\n\n      return regeneratorRuntime.wrap(function getSelectedBlocks$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              visited = new WeakSet();\n              _iteratorNormalCompletion7 = true;\n              _didIteratorError7 = false;\n              _iteratorError7 = undefined;\n              _context2.prev = 4;\n              _iterator7 = this.getRanges()[Symbol.iterator]();\n\n            case 6:\n              if (_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done) {\n                _context2.next = 46;\n                break;\n              }\n\n              range = _step7.value;\n              startBlock = getParentBlock(range.start, visited);\n\n              if (!startBlock) {\n                _context2.next = 12;\n                break;\n              }\n\n              _context2.next = 12;\n              return startBlock;\n\n            case 12:\n              _iteratorNormalCompletion8 = true;\n              _didIteratorError8 = false;\n              _iteratorError8 = undefined;\n              _context2.prev = 15;\n              _iterator8 = range.getWalker()[Symbol.iterator]();\n\n            case 17:\n              if (_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done) {\n                _context2.next = 25;\n                break;\n              }\n\n              value = _step8.value;\n\n              if (!(value.type == 'elementEnd' && isUnvisitedBlockContainer(value.item, visited))) {\n                _context2.next = 22;\n                break;\n              }\n\n              _context2.next = 22;\n              return value.item;\n\n            case 22:\n              _iteratorNormalCompletion8 = true;\n              _context2.next = 17;\n              break;\n\n            case 25:\n              _context2.next = 31;\n              break;\n\n            case 27:\n              _context2.prev = 27;\n              _context2.t0 = _context2[\"catch\"](15);\n              _didIteratorError8 = true;\n              _iteratorError8 = _context2.t0;\n\n            case 31:\n              _context2.prev = 31;\n              _context2.prev = 32;\n\n              if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n                _iterator8.return();\n              }\n\n            case 34:\n              _context2.prev = 34;\n\n              if (!_didIteratorError8) {\n                _context2.next = 37;\n                break;\n              }\n\n              throw _iteratorError8;\n\n            case 37:\n              return _context2.finish(34);\n\n            case 38:\n              return _context2.finish(31);\n\n            case 39:\n              endBlock = getParentBlock(range.end, visited); // #984. Don't return the end block if the range ends right at its beginning.\n\n              if (!(endBlock && !range.end.isTouching(Position._createAt(endBlock, 0)))) {\n                _context2.next = 43;\n                break;\n              }\n\n              _context2.next = 43;\n              return endBlock;\n\n            case 43:\n              _iteratorNormalCompletion7 = true;\n              _context2.next = 6;\n              break;\n\n            case 46:\n              _context2.next = 52;\n              break;\n\n            case 48:\n              _context2.prev = 48;\n              _context2.t1 = _context2[\"catch\"](4);\n              _didIteratorError7 = true;\n              _iteratorError7 = _context2.t1;\n\n            case 52:\n              _context2.prev = 52;\n              _context2.prev = 53;\n\n              if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n                _iterator7.return();\n              }\n\n            case 55:\n              _context2.prev = 55;\n\n              if (!_didIteratorError7) {\n                _context2.next = 58;\n                break;\n              }\n\n              throw _iteratorError7;\n\n            case 58:\n              return _context2.finish(55);\n\n            case 59:\n              return _context2.finish(52);\n\n            case 60:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, getSelectedBlocks, this, [[4, 48, 52, 60], [15, 27, 31, 39], [32,, 34, 38], [53,, 55, 59]]);\n    })\n    /**\n     * Checks whether the selection contains the entire content of the given element. This means that selection must start\n     * at a position {@link module:engine/model/position~Position#isTouching touching} the element's start and ends at position\n     * touching the element's end.\n     *\n     * By default, this method will check whether the entire content of the selection's current root is selected.\n     * Useful to check if e.g. the user has just pressed <kbd>Ctrl</kbd> + <kbd>A</kbd>.\n     *\n     * @param {module:engine/model/element~Element} [element=this.anchor.root]\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"containsEntireContent\",\n    value: function containsEntireContent() {\n      var element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.anchor.root;\n\n      var limitStartPosition = Position._createAt(element, 0);\n\n      var limitEndPosition = Position._createAt(element, 'end');\n\n      return limitStartPosition.isTouching(this.getFirstPosition()) && limitEndPosition.isTouching(this.getLastPosition());\n    }\n    /**\n     * Adds given range to internal {@link #_ranges ranges array}. Throws an error\n     * if given range is intersecting with any range that is already stored in this selection.\n     *\n     * @protected\n     * @param {module:engine/model/range~Range} range Range to add.\n     */\n\n  }, {\n    key: \"_pushRange\",\n    value: function _pushRange(range) {\n      this._checkRange(range);\n\n      this._ranges.push(new Range(range.start, range.end));\n    }\n    /**\n     * Checks if given range intersects with ranges that are already in the selection. Throws an error if it does.\n     *\n     * @protected\n     * @param {module:engine/model/range~Range} range Range to check.\n     */\n\n  }, {\n    key: \"_checkRange\",\n    value: function _checkRange(range) {\n      for (var i = 0; i < this._ranges.length; i++) {\n        if (range.isIntersecting(this._ranges[i])) {\n          /**\n           * Trying to add a range that intersects with another range in the selection.\n           *\n           * @error model-selection-range-intersects\n           * @param {module:engine/model/range~Range} addedRange Range that was added to the selection.\n           * @param {module:engine/model/range~Range} intersectingRange Range in the selection that intersects with `addedRange`.\n           */\n          throw new CKEditorError('model-selection-range-intersects: Trying to add a range that intersects with another range in the selection.', {\n            addedRange: range,\n            intersectingRange: this._ranges[i]\n          });\n        }\n      }\n    }\n    /**\n     * Deletes ranges from internal range array. Uses {@link #_popRange _popRange} to\n     * ensure proper ranges removal.\n     *\n     * @protected\n     */\n\n  }, {\n    key: \"_removeAllRanges\",\n    value: function _removeAllRanges() {\n      while (this._ranges.length > 0) {\n        this._popRange();\n      }\n    }\n    /**\n     * Removes most recently added range from the selection.\n     *\n     * @protected\n     */\n\n  }, {\n    key: \"_popRange\",\n    value: function _popRange() {\n      this._ranges.pop();\n    }\n    /**\n     * Fired when selection range(s) changed.\n     *\n     * @event change:range\n     * @param {Boolean} directChange In case of {@link module:engine/model/selection~Selection} class it is always set\n     * to `true` which indicates that the selection change was caused by a direct use of selection's API.\n     * The {@link module:engine/model/documentselection~DocumentSelection}, however, may change because its position\n     * was directly changed through the {@link module:engine/model/writer~Writer writer} or because its position was\n     * changed because the structure of the model has been changed (which means an indirect change).\n     * The indirect change does not occur in case of normal (detached) selections because they are \"static\" (as \"not live\")\n     * which mean that they are not updated once the document changes.\n     */\n\n    /**\n     * Fired when selection attribute changed.\n     *\n     * @event change:attribute\n     * @param {Boolean} directChange In case of {@link module:engine/model/selection~Selection} class it is always set\n     * to `true` which indicates that the selection change was caused by a direct use of selection's API.\n     * The {@link module:engine/model/documentselection~DocumentSelection}, however, may change because its attributes\n     * were directly changed through the {@link module:engine/model/writer~Writer writer} or because its position was\n     * changed in the model and its attributes were refreshed (which means an indirect change).\n     * The indirect change does not occur in case of normal (detached) selections because they are \"static\" (as \"not live\")\n     * which mean that they are not updated once the document changes.\n     * @param {Array.<String>} attributeKeys Array containing keys of attributes that changed.\n     */\n\n  }, {\n    key: \"anchor\",\n    get: function get() {\n      if (this._ranges.length > 0) {\n        var range = this._ranges[this._ranges.length - 1];\n        return this._lastRangeBackward ? range.end : range.start;\n      }\n\n      return null;\n    }\n    /**\n     * Selection focus. Focus is the position where the selection ends. If a user is making a selection\n     * by dragging the mouse, the focus is where the mouse cursor is.\n     *\n     * May be set to `null` if there are no ranges in the selection.\n     *\n     * @see #anchor\n     * @readonly\n     * @type {module:engine/model/position~Position|null}\n     */\n\n  }, {\n    key: \"focus\",\n    get: function get() {\n      if (this._ranges.length > 0) {\n        var range = this._ranges[this._ranges.length - 1];\n        return this._lastRangeBackward ? range.start : range.end;\n      }\n\n      return null;\n    }\n    /**\n     * Whether the selection is collapsed. Selection is collapsed when there is exactly one range in it\n     * and it is collapsed.\n     *\n     * @readonly\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isCollapsed\",\n    get: function get() {\n      var length = this._ranges.length;\n\n      if (length === 1) {\n        return this._ranges[0].isCollapsed;\n      } else {\n        return false;\n      }\n    }\n    /**\n     * Returns the number of ranges in the selection.\n     *\n     * @readonly\n     * @type {Number}\n     */\n\n  }, {\n    key: \"rangeCount\",\n    get: function get() {\n      return this._ranges.length;\n    }\n    /**\n     * Specifies whether the selection's {@link #focus} precedes the selection's {@link #anchor}.\n     *\n     * @readonly\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isBackward\",\n    get: function get() {\n      return !this.isCollapsed && this._lastRangeBackward;\n    }\n  }]);\n\n  return Selection;\n}();\n\nexport { Selection as default };\nmix(Selection, EmitterMixin); // Checks whether the given element extends $block in the schema and has a parent (is not a root).\n// Marks it as already visited.\n\nfunction isUnvisitedBlockContainer(element, visited) {\n  if (visited.has(element)) {\n    return false;\n  }\n\n  visited.add(element);\n  return element.document.model.schema.isBlock(element) && element.parent;\n} // Finds the lowest element in position's ancestors which is a block.\n// Marks all ancestors as already visited to not include any of them later on.\n\n\nfunction getParentBlock(position, visited) {\n  var ancestors = position.parent.getAncestors({\n    parentFirst: true,\n    includeSelf: true\n  });\n  var block = ancestors.find(function (element) {\n    return isUnvisitedBlockContainer(element, visited);\n  }); // Mark all ancestors of this position's parent, because find() might've stopped early and\n  // the found block may be a child of another block.\n\n  ancestors.forEach(function (element) {\n    return visited.add(element);\n  });\n  return block;\n}","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/treewalker\n */\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport Element from './element';\nimport Position from './position';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * Position iterator class. It allows to iterate forward and backward over the document.\n */\n\nvar TreeWalker =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a range iterator. All parameters are optional, but you have to specify either `boundaries` or `startPosition`.\n   *\n   * @constructor\n   * @param {Object} [options={}] Object with configuration.\n   * @param {'forward'|'backward'} [options.direction='forward'] Walking direction.\n   * @param {module:engine/model/range~Range} [options.boundaries=null] Range to define boundaries of the iterator.\n   * @param {module:engine/model/position~Position} [options.startPosition] Starting position.\n   * @param {Boolean} [options.singleCharacters=false] Flag indicating whether all consecutive characters with the same attributes\n   * should be returned one by one as multiple {@link module:engine/model/textproxy~TextProxy} (`true`) objects or as one\n   * {@link module:engine/model/textproxy~TextProxy} (`false`).\n   * @param {Boolean} [options.shallow=false] Flag indicating whether iterator should enter elements or not. If the\n   * iterator is shallow child nodes of any iterated node will not be returned along with `elementEnd` tag.\n   * @param {Boolean} [options.ignoreElementEnd=false] Flag indicating whether iterator should ignore `elementEnd`\n   * tags. If the option is true walker will not return a parent node of start position. If this option is `true`\n   * each {@link module:engine/model/element~Element} will be returned once, while if the option is `false` they might be returned\n   * twice: for `'elementStart'` and `'elementEnd'`.\n   */\n  function TreeWalker() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, TreeWalker);\n\n    if (!options.boundaries && !options.startPosition) {\n      /**\n       * Neither boundaries nor starting position of a `TreeWalker` have been defined.\n       *\n       * @error model-tree-walker-no-start-position\n       */\n      throw new CKEditorError('model-tree-walker-no-start-position: Neither boundaries nor starting position have been defined.');\n    }\n\n    var direction = options.direction || 'forward';\n\n    if (direction != 'forward' && direction != 'backward') {\n      throw new CKEditorError('model-tree-walker-unknown-direction: Only `backward` and `forward` direction allowed.', {\n        direction: direction\n      });\n    }\n    /**\n     * Walking direction. Defaults `'forward'`.\n     *\n     * @readonly\n     * @member {'backward'|'forward'} module:engine/model/treewalker~TreeWalker#direction\n     */\n\n\n    this.direction = direction;\n    /**\n     * Iterator boundaries.\n     *\n     * When the iterator is walking `'forward'` on the end of boundary or is walking `'backward'`\n     * on the start of boundary, then `{ done: true }` is returned.\n     *\n     * If boundaries are not defined they are set before first and after last child of the root node.\n     *\n     * @readonly\n     * @member {module:engine/model/range~Range} module:engine/model/treewalker~TreeWalker#boundaries\n     */\n\n    this.boundaries = options.boundaries || null;\n    /**\n     * Iterator position. This is always static position, even if the initial position was a\n     * {@link module:engine/model/liveposition~LivePosition live position}. If start position is not defined then position depends\n     * on {@link #direction}. If direction is `'forward'` position starts form the beginning, when direction\n     * is `'backward'` position starts from the end.\n     *\n     * @readonly\n     * @member {module:engine/model/position~Position} module:engine/model/treewalker~TreeWalker#position\n     */\n\n    if (options.startPosition) {\n      this.position = options.startPosition.clone();\n    } else {\n      this.position = Position._createAt(this.boundaries[this.direction == 'backward' ? 'end' : 'start']);\n    } // Reset position stickiness in case it was set to other value, as the stickiness is kept after cloning.\n\n\n    this.position.stickiness = 'toNone';\n    /**\n     * Flag indicating whether all consecutive characters with the same attributes should be\n     * returned as one {@link module:engine/model/textproxy~TextProxy} (`true`) or one by one (`false`).\n     *\n     * @readonly\n     * @member {Boolean} module:engine/model/treewalker~TreeWalker#singleCharacters\n     */\n\n    this.singleCharacters = !!options.singleCharacters;\n    /**\n     * Flag indicating whether iterator should enter elements or not. If the iterator is shallow child nodes of any\n     * iterated node will not be returned along with `elementEnd` tag.\n     *\n     * @readonly\n     * @member {Boolean} module:engine/model/treewalker~TreeWalker#shallow\n     */\n\n    this.shallow = !!options.shallow;\n    /**\n     * Flag indicating whether iterator should ignore `elementEnd` tags. If the option is true walker will not\n     * return a parent node of the start position. If this option is `true` each {@link module:engine/model/element~Element} will\n     * be returned once, while if the option is `false` they might be returned twice:\n     * for `'elementStart'` and `'elementEnd'`.\n     *\n     * @readonly\n     * @member {Boolean} module:engine/model/treewalker~TreeWalker#ignoreElementEnd\n     */\n\n    this.ignoreElementEnd = !!options.ignoreElementEnd;\n    /**\n     * Start boundary cached for optimization purposes.\n     *\n     * @private\n     * @member {module:engine/model/element~Element} module:engine/model/treewalker~TreeWalker#_boundaryStartParent\n     */\n\n    this._boundaryStartParent = this.boundaries ? this.boundaries.start.parent : null;\n    /**\n     * End boundary cached for optimization purposes.\n     *\n     * @private\n     * @member {module:engine/model/element~Element} module:engine/model/treewalker~TreeWalker#_boundaryEndParent\n     */\n\n    this._boundaryEndParent = this.boundaries ? this.boundaries.end.parent : null;\n    /**\n     * Parent of the most recently visited node. Cached for optimization purposes.\n     *\n     * @private\n     * @member {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment}\n     * module:engine/model/treewalker~TreeWalker#_visitedParent\n     */\n\n    this._visitedParent = this.position.parent;\n  }\n  /**\n   * Iterable interface.\n   *\n   * @returns {Iterable.<module:engine/model/treewalker~TreeWalkerValue>}\n   */\n\n\n  _createClass(TreeWalker, [{\n    key: Symbol.iterator,\n    value: function value() {\n      return this;\n    }\n    /**\n     * Moves {@link #position} in the {@link #direction} skipping values as long as the callback function returns `true`.\n     *\n     * For example:\n     *\n     * \t\twalker.skip( value => value.type == 'text' ); // <paragraph>[]foo</paragraph> -> <paragraph>foo[]</paragraph>\n     * \t\twalker.skip( () => true ); // Move the position to the end: <paragraph>[]foo</paragraph> -> <paragraph>foo</paragraph>[]\n     * \t\twalker.skip( () => false ); // Do not move the position.\n     *\n     * @param {Function} skip Callback function. Gets {@link module:engine/model/treewalker~TreeWalkerValue} and should\n     * return `true` if the value should be skipped or `false` if not.\n     */\n\n  }, {\n    key: \"skip\",\n    value: function skip(_skip) {\n      var done, value, prevPosition, prevVisitedParent;\n\n      do {\n        prevPosition = this.position;\n        prevVisitedParent = this._visitedParent;\n\n        var _this$next = this.next();\n\n        done = _this$next.done;\n        value = _this$next.value;\n      } while (!done && _skip(value));\n\n      if (!done) {\n        this.position = prevPosition;\n        this._visitedParent = prevVisitedParent;\n      }\n    }\n    /**\n     * Gets the next tree walker's value.\n     *\n     * @returns {module:engine/model/treewalker~TreeWalkerValue} Next tree walker's value.\n     */\n\n  }, {\n    key: \"next\",\n    value: function next() {\n      if (this.direction == 'forward') {\n        return this._next();\n      } else {\n        return this._previous();\n      }\n    }\n    /**\n     * Makes a step forward in model. Moves the {@link #position} to the next position and returns the encountered value.\n     *\n     * @private\n     * @returns {Object}\n     * @returns {Boolean} return.done True if iterator is done.\n     * @returns {module:engine/model/treewalker~TreeWalkerValue} return.value Information about taken step.\n     */\n\n  }, {\n    key: \"_next\",\n    value: function _next() {\n      var previousPosition = this.position;\n      var position = this.position.clone();\n      var parent = this._visitedParent; // We are at the end of the root.\n\n      if (parent.parent === null && position.offset === parent.maxOffset) {\n        return {\n          done: true\n        };\n      } // We reached the walker boundary.\n\n\n      if (parent === this._boundaryEndParent && position.offset == this.boundaries.end.offset) {\n        return {\n          done: true\n        };\n      }\n\n      var node = position.textNode ? position.textNode : position.nodeAfter;\n\n      if (node instanceof Element) {\n        if (!this.shallow) {\n          // Manual operations on path internals for optimization purposes. Here and in the rest of the method.\n          position.path.push(0);\n          this._visitedParent = node;\n        } else {\n          position.offset++;\n        }\n\n        this.position = position;\n        return formatReturnValue('elementStart', node, previousPosition, position, 1);\n      } else if (node instanceof Text) {\n        var charactersCount;\n\n        if (this.singleCharacters) {\n          charactersCount = 1;\n        } else {\n          var offset = node.endOffset;\n\n          if (this._boundaryEndParent == parent && this.boundaries.end.offset < offset) {\n            offset = this.boundaries.end.offset;\n          }\n\n          charactersCount = offset - position.offset;\n        }\n\n        var offsetInTextNode = position.offset - node.startOffset;\n        var item = new TextProxy(node, offsetInTextNode, charactersCount);\n        position.offset += charactersCount;\n        this.position = position;\n        return formatReturnValue('text', item, previousPosition, position, charactersCount);\n      } else {\n        // `node` is not set, we reached the end of current `parent`.\n        position.path.pop();\n        position.offset++;\n        this.position = position;\n        this._visitedParent = parent.parent;\n\n        if (this.ignoreElementEnd) {\n          return this._next();\n        } else {\n          return formatReturnValue('elementEnd', parent, previousPosition, position);\n        }\n      }\n    }\n    /**\n     * Makes a step backward in model. Moves the {@link #position} to the previous position and returns the encountered value.\n     *\n     * @private\n     * @returns {Object}\n     * @returns {Boolean} return.done True if iterator is done.\n     * @returns {module:engine/model/treewalker~TreeWalkerValue} return.value Information about taken step.\n     */\n\n  }, {\n    key: \"_previous\",\n    value: function _previous() {\n      var previousPosition = this.position;\n      var position = this.position.clone();\n      var parent = this._visitedParent; // We are at the beginning of the root.\n\n      if (parent.parent === null && position.offset === 0) {\n        return {\n          done: true\n        };\n      } // We reached the walker boundary.\n\n\n      if (parent == this._boundaryStartParent && position.offset == this.boundaries.start.offset) {\n        return {\n          done: true\n        };\n      } // Get node just before current position\n\n\n      var node = position.textNode ? position.textNode : position.nodeBefore;\n\n      if (node instanceof Element) {\n        position.offset--;\n\n        if (!this.shallow) {\n          position.path.push(node.maxOffset);\n          this.position = position;\n          this._visitedParent = node;\n\n          if (this.ignoreElementEnd) {\n            return this._previous();\n          } else {\n            return formatReturnValue('elementEnd', node, previousPosition, position);\n          }\n        } else {\n          this.position = position;\n          return formatReturnValue('elementStart', node, previousPosition, position, 1);\n        }\n      } else if (node instanceof Text) {\n        var charactersCount;\n\n        if (this.singleCharacters) {\n          charactersCount = 1;\n        } else {\n          var offset = node.startOffset;\n\n          if (this._boundaryStartParent == parent && this.boundaries.start.offset > offset) {\n            offset = this.boundaries.start.offset;\n          }\n\n          charactersCount = position.offset - offset;\n        }\n\n        var offsetInTextNode = position.offset - node.startOffset;\n        var item = new TextProxy(node, offsetInTextNode - charactersCount, charactersCount);\n        position.offset -= charactersCount;\n        this.position = position;\n        return formatReturnValue('text', item, previousPosition, position, charactersCount);\n      } else {\n        // `node` is not set, we reached the beginning of current `parent`.\n        position.path.pop();\n        this.position = position;\n        this._visitedParent = parent.parent;\n        return formatReturnValue('elementStart', parent, previousPosition, position, 1);\n      }\n    }\n  }]);\n\n  return TreeWalker;\n}();\n\nexport { TreeWalker as default };\n\nfunction formatReturnValue(type, item, previousPosition, nextPosition, length) {\n  return {\n    done: false,\n    value: {\n      type: type,\n      item: item,\n      previousPosition: previousPosition,\n      nextPosition: nextPosition,\n      length: length\n    }\n  };\n}\n/**\n * Type of the step made by {@link module:engine/model/treewalker~TreeWalker}.\n * Possible values: `'elementStart'` if walker is at the beginning of a node, `'elementEnd'` if walker is at the end of node,\n * `'character'` if walker traversed over a character, or `'text'` if walker traversed over multiple characters (available in\n * character merging mode, see {@link module:engine/model/treewalker~TreeWalker#constructor}).\n *\n * @typedef {'elementStart'|'elementEnd'|'character'|'text'} module:engine/model/treewalker~TreeWalkerValueType\n */\n\n/**\n * Object returned by {@link module:engine/model/treewalker~TreeWalker} when traversing tree model.\n *\n * @typedef {Object} module:engine/model/treewalker~TreeWalkerValue\n * @property {module:engine/model/treewalker~TreeWalkerValueType} type\n * @property {module:engine/model/item~Item} item Item between old and new positions of {@link module:engine/model/treewalker~TreeWalker}.\n * @property {module:engine/model/position~Position} previousPosition Previous position of the iterator.\n * * Forward iteration: For `'elementEnd'` it is the last position inside the element. For all other types it is the\n * position before the item.\n * * Backward iteration: For `'elementStart'` it is the first position inside the element. For all other types it is\n * the position after item.\n * @property {module:engine/model/position~Position} nextPosition Next position of the iterator.\n * * Forward iteration: For `'elementStart'` it is the first position inside the element. For all other types it is\n * the position after the item.\n * * Backward iteration: For `'elementEnd'` it is last position inside element. For all other types it is the position\n * before the item.\n * @property {Number} [length] Length of the item. For `'elementStart'` and `'character'` it is 1. For `'text'` it is\n * the length of the text. For `'elementEnd'` it is `undefined`.\n */\n\n/**\n * Tree walking directions.\n *\n * @typedef {'forward'|'backward'} module:engine/view/treewalker~TreeWalkerDirection\n */","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/textproxy\n */\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * TextProxy is a wrapper for substring of {@link module:engine/view/text~Text}. Instance of this class is created by\n * {@link module:engine/view/treewalker~TreeWalker} when only a part of {@link module:engine/view/text~Text} needs to be returned.\n *\n * `TextProxy` has an API similar to {@link module:engine/view/text~Text Text} and allows to do most of the common tasks performed\n * on view nodes.\n *\n * **Note:** Some `TextProxy` instances may represent whole text node, not just a part of it.\n * See {@link module:engine/view/textproxy~TextProxy#isPartial}.\n *\n * **Note:** `TextProxy` is a readonly interface.\n *\n * **Note:** `TextProxy` instances are created on the fly basing on the current state of parent {@link module:engine/view/text~Text}.\n * Because of this it is highly unrecommended to store references to `TextProxy instances because they might get\n * invalidated due to operations on Document. Also TextProxy is not a {@link module:engine/view/node~Node} so it can not be\n * inserted as a child of {@link module:engine/view/element~Element}.\n *\n * `TextProxy` instances are created by {@link module:engine/view/treewalker~TreeWalker view tree walker}. You should not need to create\n * an instance of this class by your own.\n */\n\nvar TextProxy =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a text proxy.\n   *\n   * @protected\n   * @param {module:engine/view/text~Text} textNode Text node which part is represented by this text proxy.\n   * @param {Number} offsetInText Offset in {@link module:engine/view/textproxy~TextProxy#textNode text node}\n   * from which the text proxy starts.\n   * @param {Number} length Text proxy length, that is how many text node's characters, starting from `offsetInText` it represents.\n   * @constructor\n   */\n  function TextProxy(textNode, offsetInText, length) {\n    _classCallCheck(this, TextProxy);\n\n    /**\n     * Reference to the {@link module:engine/view/text~Text} element which TextProxy is a substring.\n     *\n     * @readonly\n     * @member {module:engine/view/text~Text} module:engine/view/textproxy~TextProxy#textNode\n     */\n    this.textNode = textNode;\n\n    if (offsetInText < 0 || offsetInText > textNode.data.length) {\n      /**\n       * Given offsetInText value is incorrect.\n       *\n       * @error view-textproxy-wrong-offsetintext\n       */\n      throw new CKEditorError('view-textproxy-wrong-offsetintext: Given offsetInText value is incorrect.');\n    }\n\n    if (length < 0 || offsetInText + length > textNode.data.length) {\n      /**\n       * Given length value is incorrect.\n       *\n       * @error view-textproxy-wrong-length\n       */\n      throw new CKEditorError('view-textproxy-wrong-length: Given length value is incorrect.');\n    }\n    /**\n     * Text data represented by this text proxy.\n     *\n     * @readonly\n     * @member {String} module:engine/view/textproxy~TextProxy#data\n     */\n\n\n    this.data = textNode.data.substring(offsetInText, offsetInText + length);\n    /**\n     * Offset in the `textNode` where this `TextProxy` instance starts.\n     *\n     * @readonly\n     * @member {Number} module:engine/view/textproxy~TextProxy#offsetInText\n     */\n\n    this.offsetInText = offsetInText;\n  }\n  /**\n   * Offset size of this node.\n   *\n   * @readonly\n   * @type {Number}\n   */\n\n\n  _createClass(TextProxy, [{\n    key: \"is\",\n\n    /**\n     * Checks whether given view tree object is of given type.\n     *\n     * Read more in {@link module:engine/view/node~Node#is}.\n     *\n     * @param {String} type\n     * @returns {Boolean}\n     */\n    value: function is(type) {\n      return type == 'textProxy';\n    }\n    /**\n     * Returns ancestors array of this text proxy.\n     *\n     * @param {Object} options Options object.\n     * @param {Boolean} [options.includeSelf=false] When set to `true` {#textNode} will be also included in parent's array.\n     * @param {Boolean} [options.parentFirst=false] When set to `true`, array will be sorted from text proxy parent to\n     * root element, otherwise root element will be the first item in the array.\n     * @returns {Array} Array with ancestors.\n     */\n\n  }, {\n    key: \"getAncestors\",\n    value: function getAncestors() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        includeSelf: false,\n        parentFirst: false\n      };\n      var ancestors = [];\n      var parent = options.includeSelf ? this.textNode : this.parent;\n\n      while (parent !== null) {\n        ancestors[options.parentFirst ? 'push' : 'unshift'](parent);\n        parent = parent.parent;\n      }\n\n      return ancestors;\n    }\n  }, {\n    key: \"offsetSize\",\n    get: function get() {\n      return this.data.length;\n    }\n    /**\n     * Flag indicating whether `TextProxy` instance covers only part of the original {@link module:engine/view/text~Text text node}\n     * (`true`) or the whole text node (`false`).\n     *\n     * This is `false` when text proxy starts at the very beginning of {@link module:engine/view/textproxy~TextProxy#textNode textNode}\n     * ({@link module:engine/view/textproxy~TextProxy#offsetInText offsetInText} equals `0`) and text proxy sizes is equal to\n     * text node size.\n     *\n     * @readonly\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isPartial\",\n    get: function get() {\n      return this.data.length !== this.textNode.data.length;\n    }\n    /**\n     * Parent of this text proxy, which is same as parent of text node represented by this text proxy.\n     *\n     * @readonly\n     * @type {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment|null}\n     */\n\n  }, {\n    key: \"parent\",\n    get: function get() {\n      return this.textNode.parent;\n    }\n    /**\n     * Root of this text proxy, which is same as root of text node represented by this text proxy.\n     *\n     * @readonly\n     * @type {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment}\n     */\n\n  }, {\n    key: \"root\",\n    get: function get() {\n      return this.textNode.root;\n    }\n    /**\n     * {@link module:engine/view/document~Document View document} that owns this text proxy, or `null` if the text proxy is inside\n     * {@link module:engine/view/documentfragment~DocumentFragment document fragment}.\n     *\n     * @readonly\n     * @type {module:engine/view/document~Document|null}\n     */\n\n  }, {\n    key: \"document\",\n    get: function get() {\n      return this.textNode.document;\n    }\n  }]);\n\n  return TextProxy;\n}();\n\nexport { TextProxy as default };","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/rect\n */\nimport isRange from './isrange';\nimport isWindow from './iswindow';\nimport getBorderWidths from './getborderwidths';\nimport log from '../log';\nimport isText from './istext';\nimport { isElement } from 'lodash-es';\nvar rectProperties = ['top', 'right', 'bottom', 'left', 'width', 'height'];\n/**\n * A helper class representing a `ClientRect` object, e.g. value returned by\n * the native `object.getBoundingClientRect()` method. Provides a set of methods\n * to manipulate the rect and compare it against other rect instances.\n */\n\nvar Rect =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of rect.\n   *\n   *\t\t// Rect of an HTMLElement.\n   *\t\tconst rectA = new Rect( document.body );\n   *\n   *\t\t// Rect of a DOM Range.\n   *\t\tconst rectB = new Rect( document.getSelection().getRangeAt( 0 ) );\n   *\n   *\t\t// Rect of a window (web browser viewport).\n   *\t\tconst rectC = new Rect( window );\n   *\n   *\t\t// Rect out of an object.\n   *\t\tconst rectD = new Rect( { top: 0, right: 10, bottom: 10, left: 0, width: 10, height: 10 } );\n   *\n   *\t\t// Rect out of another Rect instance.\n   *\t\tconst rectE = new Rect( rectD );\n   *\n   *\t\t// Rect out of a ClientRect.\n   *\t\tconst rectF = new Rect( document.body.getClientRects().item( 0 ) );\n   *\n   * **Note**: By default a rect of an HTML element includes its CSS borders and scrollbars (if any)\n   * ant the rect of a `window` includes scrollbars too. Use {@link #excludeScrollbarsAndBorders}\n   * to get the inner part of the rect.\n   *\n   * @param {HTMLElement|Range|Window|ClientRect|module:utils/dom/rect~Rect|Object} source A source object to create the rect.\n   */\n  function Rect(source) {\n    _classCallCheck(this, Rect);\n\n    var isSourceRange = isRange(source);\n    /**\n     * The object this rect is for.\n     *\n     * @protected\n     * @readonly\n     * @member {HTMLElement|Range|ClientRect|module:utils/dom/rect~Rect|Object} #_source\n     */\n\n    Object.defineProperty(this, '_source', {\n      // If the source is a Rect instance, copy it's #_source.\n      value: source._source || source,\n      writable: true,\n      enumerable: false\n    });\n\n    if (isElement(source) || isSourceRange) {\n      var sourceNode = isSourceRange ? source.startContainer : source;\n\n      if (!sourceNode.ownerDocument || !sourceNode.ownerDocument.body.contains(sourceNode)) {\n        /**\n         * The `Rect` class depends on `getBoundingClientRect` and `getClientRects` DOM methods.\n         * If the {@link #constructor source} of a rect in an HTML element or a DOM range but it does\n         * not belong to any rendered DOM tree, these methods will fail to obtain the geometry and\n         * the rect instance makes little sense to the features using it.\n         *\n         * To get rid of this warning make sure the source passed to the constructor\n         * is a descendant of `window.document.body`.\n         *\n         * @error rect-source-not-in-dom\n         * @param {String} source The source of the Rect instance.\n         */\n        log.warn('rect-source-not-in-dom: The source of this rect does not belong to any rendered DOM tree.', {\n          source: source\n        });\n      }\n\n      if (isSourceRange) {\n        copyRectProperties(this, Rect.getDomRangeRects(source)[0]);\n      } else {\n        copyRectProperties(this, source.getBoundingClientRect());\n      }\n    } else if (isWindow(source)) {\n      var innerWidth = source.innerWidth,\n          innerHeight = source.innerHeight;\n      copyRectProperties(this, {\n        top: 0,\n        right: innerWidth,\n        bottom: innerHeight,\n        left: 0,\n        width: innerWidth,\n        height: innerHeight\n      });\n    } else {\n      copyRectProperties(this, source);\n    }\n    /**\n     * The \"top\" value of the rect.\n     *\n     * @readonly\n     * @member {Number} #top\n     */\n\n    /**\n     * The \"right\" value of the rect.\n     *\n     * @readonly\n     * @member {Number} #right\n     */\n\n    /**\n     * The \"bottom\" value of the rect.\n     *\n     * @readonly\n     * @member {Number} #bottom\n     */\n\n    /**\n     * The \"left\" value of the rect.\n     *\n     * @readonly\n     * @member {Number} #left\n     */\n\n    /**\n     * The \"width\" value of the rect.\n     *\n     * @readonly\n     * @member {Number} #width\n     */\n\n    /**\n     * The \"height\" value of the rect.\n     *\n     * @readonly\n     * @member {Number} #height\n     */\n\n  }\n  /**\n   * Returns a clone of the rect.\n   *\n   * @returns {module:utils/dom/rect~Rect} A cloned rect.\n   */\n\n\n  _createClass(Rect, [{\n    key: \"clone\",\n    value: function clone() {\n      return new Rect(this);\n    }\n    /**\n     * Moves the rect so that its upper–left corner lands in desired `[ x, y ]` location.\n     *\n     * @param {Number} x Desired horizontal location.\n     * @param {Number} y Desired vertical location.\n     * @returns {module:utils/dom/rect~Rect} A rect which has been moved.\n     */\n\n  }, {\n    key: \"moveTo\",\n    value: function moveTo(x, y) {\n      this.top = y;\n      this.right = x + this.width;\n      this.bottom = y + this.height;\n      this.left = x;\n      return this;\n    }\n    /**\n     * Moves the rect in–place by a dedicated offset.\n     *\n     * @param {Number} x A horizontal offset.\n     * @param {Number} y A vertical offset\n     * @returns {module:utils/dom/rect~Rect} A rect which has been moved.\n     */\n\n  }, {\n    key: \"moveBy\",\n    value: function moveBy(x, y) {\n      this.top += y;\n      this.right += x;\n      this.left += x;\n      this.bottom += y;\n      return this;\n    }\n    /**\n     * Returns a new rect a a result of intersection with another rect.\n     *\n     * @param {module:utils/dom/rect~Rect} anotherRect\n     * @returns {module:utils/dom/rect~Rect}\n     */\n\n  }, {\n    key: \"getIntersection\",\n    value: function getIntersection(anotherRect) {\n      var rect = {\n        top: Math.max(this.top, anotherRect.top),\n        right: Math.min(this.right, anotherRect.right),\n        bottom: Math.min(this.bottom, anotherRect.bottom),\n        left: Math.max(this.left, anotherRect.left)\n      };\n      rect.width = rect.right - rect.left;\n      rect.height = rect.bottom - rect.top;\n\n      if (rect.width < 0 || rect.height < 0) {\n        return null;\n      } else {\n        return new Rect(rect);\n      }\n    }\n    /**\n     * Returns the area of intersection with another rect.\n     *\n     * @param {module:utils/dom/rect~Rect} anotherRect [description]\n     * @returns {Number} Area of intersection.\n     */\n\n  }, {\n    key: \"getIntersectionArea\",\n    value: function getIntersectionArea(anotherRect) {\n      var rect = this.getIntersection(anotherRect);\n\n      if (rect) {\n        return rect.getArea();\n      } else {\n        return 0;\n      }\n    }\n    /**\n     * Returns the area of the rect.\n     *\n     * @returns {Number}\n     */\n\n  }, {\n    key: \"getArea\",\n    value: function getArea() {\n      return this.width * this.height;\n    }\n    /**\n     * Returns a new rect, a part of the original rect, which is actually visible to the user,\n     * e.g. an original rect cropped by parent element rects which have `overflow` set in CSS\n     * other than `\"visible\"`.\n     *\n     * If there's no such visible rect, which is when the rect is limited by one or many of\n     * the ancestors, `null` is returned.\n     *\n     * @returns {module:utils/dom/rect~Rect|null} A visible rect instance or `null`, if there's none.\n     */\n\n  }, {\n    key: \"getVisible\",\n    value: function getVisible() {\n      var source = this._source;\n      var visibleRect = this.clone(); // There's no ancestor to crop <body> with the overflow.\n\n      if (!isBody(source)) {\n        var parent = source.parentNode || source.commonAncestorContainer; // Check the ancestors all the way up to the <body>.\n\n        while (parent && !isBody(parent)) {\n          var parentRect = new Rect(parent);\n          var intersectionRect = visibleRect.getIntersection(parentRect);\n\n          if (intersectionRect) {\n            if (intersectionRect.getArea() < visibleRect.getArea()) {\n              // Reduce the visible rect to the intersection.\n              visibleRect = intersectionRect;\n            }\n          } else {\n            // There's no intersection, the rect is completely invisible.\n            return null;\n          }\n\n          parent = parent.parentNode;\n        }\n      }\n\n      return visibleRect;\n    }\n    /**\n     * Checks if all property values ({@link #top}, {@link #left}, {@link #right},\n     * {@link #bottom}, {@link #width} and {@link #height}) are the equal in both rect\n     * instances.\n     *\n     * @param {module:utils/dom/rect~Rect} rect A rect instance to compare with.\n     * @returns {Boolean} `true` when Rects are equal. `false` otherwise.\n     */\n\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(anotherRect) {\n      for (var _i = 0; _i < rectProperties.length; _i++) {\n        var prop = rectProperties[_i];\n\n        if (this[prop] !== anotherRect[prop]) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n    /**\n     * Checks whether a rect fully contains another rect instance.\n     *\n     * @param {module:utils/dom/rect~Rect} anotherRect\n     * @returns {Boolean} `true` if contains, `false` otherwise.\n     */\n\n  }, {\n    key: \"contains\",\n    value: function contains(anotherRect) {\n      var intersectRect = this.getIntersection(anotherRect);\n      return !!(intersectRect && intersectRect.isEqual(anotherRect));\n    }\n    /**\n     * Excludes scrollbars and CSS borders from the rect.\n     *\n     * * Borders are removed when {@link #_source} is an HTML element.\n     * * Scrollbars are excluded from HTML elements and the `window`.\n     *\n     * @returns {module:utils/dom/rect~Rect} A rect which has been updated.\n     */\n\n  }, {\n    key: \"excludeScrollbarsAndBorders\",\n    value: function excludeScrollbarsAndBorders() {\n      var source = this._source;\n      var scrollBarWidth, scrollBarHeight;\n\n      if (isWindow(source)) {\n        scrollBarWidth = source.innerWidth - source.document.documentElement.clientWidth;\n        scrollBarHeight = source.innerHeight - source.document.documentElement.clientHeight;\n      } else {\n        var borderWidths = getBorderWidths(this._source);\n        scrollBarWidth = source.offsetWidth - source.clientWidth;\n        scrollBarHeight = source.offsetHeight - source.clientHeight;\n        this.moveBy(borderWidths.left, borderWidths.top);\n      } // Assuming LTR scrollbars. TODO: RTL.\n\n\n      this.width -= scrollBarWidth;\n      this.right -= scrollBarWidth;\n      this.height -= scrollBarHeight;\n      this.bottom -= scrollBarHeight;\n      return this;\n    }\n    /**\n     * Returns an array of rects of the given native DOM Range.\n     *\n     * @param {Range} range A native DOM range.\n     * @returns {Array.<module:utils/dom/rect~Rect>} DOM Range rects.\n     */\n\n  }], [{\n    key: \"getDomRangeRects\",\n    value: function getDomRangeRects(range) {\n      var rects = []; // Safari does not iterate over ClientRectList using for...of loop.\n\n      var clientRects = Array.from(range.getClientRects());\n\n      if (clientRects.length) {\n        for (var _i2 = 0; _i2 < clientRects.length; _i2++) {\n          var rect = clientRects[_i2];\n          rects.push(new Rect(rect));\n        }\n      } // If there's no client rects for the Range, use parent container's bounding rect\n      // instead and adjust rect's width to simulate the actual geometry of such range.\n      // https://github.com/ckeditor/ckeditor5-utils/issues/153\n      // https://github.com/ckeditor/ckeditor5-ui/issues/317\n      else {\n          var startContainer = range.startContainer;\n\n          if (isText(startContainer)) {\n            startContainer = startContainer.parentNode;\n          }\n\n          var _rect = new Rect(startContainer.getBoundingClientRect());\n\n          _rect.right = _rect.left;\n          _rect.width = 0;\n          rects.push(_rect);\n        }\n\n      return rects;\n    }\n  }]);\n\n  return Rect;\n}(); // Acquires all the rect properties from the passed source.\n//\n// @private\n// @param {module:utils/dom/rect~Rect} rect\n// @param {ClientRect|module:utils/dom/rect~Rect|Object} source\n\n\nexport { Rect as default };\n\nfunction copyRectProperties(rect, source) {\n  for (var _i3 = 0; _i3 < rectProperties.length; _i3++) {\n    var p = rectProperties[_i3];\n    rect[p] = source[p];\n  }\n} // Checks if provided object is a <body> HTML element.\n//\n// @private\n// @param {HTMLElement|Range} elementOrRange\n// @returns {Boolean}\n\n\nfunction isBody(elementOrRange) {\n  if (!isElement(elementOrRange)) {\n    return false;\n  }\n\n  return elementOrRange === elementOrRange.ownerDocument.body;\n}","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/diff\n */\n// The following code is based on the \"O(NP) Sequence Comparison Algorithm\"\n// by Sun Wu, Udi Manber, Gene Myers, Webb Miller.\n\n/**\n * Calculates the difference between two arrays or strings producing an array containing a list of changes\n * necessary to transform input into output.\n *\n *\t\tdiff( 'aba', 'acca' ); // [ 'equal', 'insert', 'insert', 'delete', 'equal' ]\n *\n * @param {Array|String} a Input array or string.\n * @param {Array|String} b Output array or string.\n * @param {Function} [cmp] Optional function used to compare array values, by default === is used.\n * @returns {Array} Array of changes.\n */\nexport default function diff(a, b, cmp) {\n  // Set the comparator function.\n  cmp = cmp || function (a, b) {\n    return a === b;\n  }; // Temporary action type statics.\n\n\n  var _insert, _delete; // Swapped the arrays to use the shorter one as the first one.\n\n\n  if (b.length < a.length) {\n    var tmp = a;\n    a = b;\n    b = tmp; // We swap the action types as well.\n\n    _insert = 'delete';\n    _delete = 'insert';\n  } else {\n    _insert = 'insert';\n    _delete = 'delete';\n  }\n\n  var m = a.length;\n  var n = b.length;\n  var delta = n - m; // Edit scripts, for each diagonal.\n\n  var es = {}; // Furthest points, the furthest y we can get on each diagonal.\n\n  var fp = {};\n\n  function snake(k) {\n    // We use -1 as an alternative below to handle initial values ( instead of filling the fp with -1 first ).\n    // Furthest points (y) on the diagonal below k.\n    var y1 = (fp[k - 1] !== undefined ? fp[k - 1] : -1) + 1; // Furthest points (y) on the diagonal above k.\n\n    var y2 = fp[k + 1] !== undefined ? fp[k + 1] : -1; // The way we should go to get further.\n\n    var dir = y1 > y2 ? -1 : 1; // Clone previous changes array (if any).\n\n    if (es[k + dir]) {\n      es[k] = es[k + dir].slice(0);\n    } // Create changes array.\n\n\n    if (!es[k]) {\n      es[k] = [];\n    } // Push the action.\n\n\n    es[k].push(y1 > y2 ? _insert : _delete); // Set the beginning coordinates.\n\n    var y = Math.max(y1, y2);\n    var x = y - k; // Traverse the diagonal as long as the values match.\n\n    while (x < m && y < n && cmp(a[x], b[y])) {\n      x++;\n      y++; // Push no change action.\n\n      es[k].push('equal');\n    }\n\n    return y;\n  }\n\n  var p = 0;\n  var k; // Traverse the graph until we reach the end of the longer string.\n\n  do {\n    // Updates furthest points and edit scripts for diagonals below delta.\n    for (k = -p; k < delta; k++) {\n      fp[k] = snake(k);\n    } // Updates furthest points and edit scripts for diagonals above delta.\n\n\n    for (k = delta + p; k > delta; k--) {\n      fp[k] = snake(k);\n    } // Updates furthest point and edit script for the delta diagonal.\n    // note that the delta diagonal is the one which goes through the sink (m, n).\n\n\n    fp[delta] = snake(delta);\n    p++;\n  } while (fp[delta] !== n); // Return the final list of edit changes.\n  // We remove the first item that represents the action for the injected nulls.\n\n\n  return es[delta].slice(1);\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/node\n */\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\nimport { clone } from 'lodash-es';\n/**\n * Abstract tree view node class.\n *\n * This is an abstract class. Its constructor should not be used directly.\n * Use the {@link module:engine/view/element~Element} class to create view elements\n * or {@link module:engine/view/text~Text} class to create view text nodes.\n *\n * @abstract\n */\n\nvar Node =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a tree view node.\n   */\n  function Node() {\n    _classCallCheck(this, Node);\n\n    /**\n     * Parent element. Null by default. Set by {@link module:engine/view/element~Element#_insertChild}.\n     *\n     * @readonly\n     * @member {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment|null}\n     */\n    this.parent = null;\n  }\n  /**\n   * Index of the node in the parent element or null if the node has no parent.\n   *\n   * Accessing this property throws an error if this node's parent element does not contain it.\n   * This means that view tree got broken.\n   *\n   * @readonly\n   * @type {Number|null}\n   */\n\n\n  _createClass(Node, [{\n    key: \"getPath\",\n\n    /**\n     * Gets a path to the node. The path is an array containing indices of consecutive ancestors of this node,\n     * beginning from {@link module:engine/view/node~Node#root root}, down to this node's index.\n     *\n     *\t\tconst abc = downcastWriter.createText( 'abc' );\n     *\t\tconst foo = downcastWriter.createText( 'foo' );\n     *\t\tconst h1 = downcastWriter.createElement( 'h1', null, downcastWriter.createText( 'header' ) );\n     *\t\tconst p = downcastWriter.createElement( 'p', null, [ abc, foo ] );\n     *\t\tconst div = downcastWriter.createElement( 'div', null, [ h1, p ] );\n     *\t\tfoo.getPath(); // Returns [ 1, 3 ]. `foo` is in `p` which is in `div`. `p` starts at offset 1, while `foo` at 3.\n     *\t\th1.getPath(); // Returns [ 0 ].\n     *\t\tdiv.getPath(); // Returns [].\n     *\n     * @returns {Array.<Number>} The path.\n     */\n    value: function getPath() {\n      var path = [];\n      var node = this; // eslint-disable-line consistent-this\n\n      while (node.parent) {\n        path.unshift(node.index);\n        node = node.parent;\n      }\n\n      return path;\n    }\n    /**\n     * Returns ancestors array of this node.\n     *\n     * @param {Object} options Options object.\n     * @param {Boolean} [options.includeSelf=false] When set to `true` this node will be also included in parent's array.\n     * @param {Boolean} [options.parentFirst=false] When set to `true`, array will be sorted from node's parent to root element,\n     * otherwise root element will be the first item in the array.\n     * @returns {Array} Array with ancestors.\n     */\n\n  }, {\n    key: \"getAncestors\",\n    value: function getAncestors() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        includeSelf: false,\n        parentFirst: false\n      };\n      var ancestors = [];\n      var parent = options.includeSelf ? this : this.parent;\n\n      while (parent) {\n        ancestors[options.parentFirst ? 'push' : 'unshift'](parent);\n        parent = parent.parent;\n      }\n\n      return ancestors;\n    }\n    /**\n     * Returns a {@link module:engine/view/element~Element} or {@link module:engine/view/documentfragment~DocumentFragment}\n     * which is a common ancestor of both nodes.\n     *\n     * @param {module:engine/view/node~Node} node The second node.\n     * @param {Object} options Options object.\n     * @param {Boolean} [options.includeSelf=false] When set to `true` both nodes will be considered \"ancestors\" too.\n     * Which means that if e.g. node A is inside B, then their common ancestor will be B.\n     * @returns {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment|null}\n     */\n\n  }, {\n    key: \"getCommonAncestor\",\n    value: function getCommonAncestor(node) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var ancestorsA = this.getAncestors(options);\n      var ancestorsB = node.getAncestors(options);\n      var i = 0;\n\n      while (ancestorsA[i] == ancestorsB[i] && ancestorsA[i]) {\n        i++;\n      }\n\n      return i === 0 ? null : ancestorsA[i - 1];\n    }\n    /**\n     * Returns whether this node is before given node. `false` is returned if nodes are in different trees (for example,\n     * in different {@link module:engine/view/documentfragment~DocumentFragment}s).\n     *\n     * @param {module:engine/view/node~Node} node Node to compare with.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isBefore\",\n    value: function isBefore(node) {\n      // Given node is not before this node if they are same.\n      if (this == node) {\n        return false;\n      } // Return `false` if it is impossible to compare nodes.\n\n\n      if (this.root !== node.root) {\n        return false;\n      }\n\n      var thisPath = this.getPath();\n      var nodePath = node.getPath();\n      var result = compareArrays(thisPath, nodePath);\n\n      switch (result) {\n        case 'prefix':\n          return true;\n\n        case 'extension':\n          return false;\n\n        default:\n          return thisPath[result] < nodePath[result];\n      }\n    }\n    /**\n     * Returns whether this node is after given node. `false` is returned if nodes are in different trees (for example,\n     * in different {@link module:engine/view/documentfragment~DocumentFragment}s).\n     *\n     * @param {module:engine/view/node~Node} node Node to compare with.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isAfter\",\n    value: function isAfter(node) {\n      // Given node is not before this node if they are same.\n      if (this == node) {\n        return false;\n      } // Return `false` if it is impossible to compare nodes.\n\n\n      if (this.root !== node.root) {\n        return false;\n      } // In other cases, just check if the `node` is before, and return the opposite.\n\n\n      return !this.isBefore(node);\n    }\n    /**\n     * Removes node from parent.\n     *\n     * @protected\n     */\n\n  }, {\n    key: \"_remove\",\n    value: function _remove() {\n      this.parent._removeChildren(this.index);\n    }\n    /**\n     * @protected\n     * @param {module:engine/view/document~ChangeType} type Type of the change.\n     * @param {module:engine/view/node~Node} node Changed node.\n     * @fires change\n     */\n\n  }, {\n    key: \"_fireChange\",\n    value: function _fireChange(type, node) {\n      this.fire('change:' + type, node);\n\n      if (this.parent) {\n        this.parent._fireChange(type, node);\n      }\n    }\n    /**\n     * Custom toJSON method to solve child-parent circular dependencies.\n     *\n     * @returns {Object} Clone of this object with the parent property removed.\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = clone(this); // Due to circular references we need to remove parent reference.\n\n      delete json.parent;\n      return json;\n    }\n    /**\n     * Checks whether given view tree object is of given type.\n     *\n     * This method is useful when processing view tree objects that are of unknown type. For example, a function\n     * may return {@link module:engine/view/documentfragment~DocumentFragment} or {@link module:engine/view/node~Node}\n     * that can be either text node or element. This method can be used to check what kind of object is returned.\n     *\n     *\t\tobj.is( 'node' ); // true for any node, false for document fragment and text fragment\n     *\t\tobj.is( 'documentFragment' ); // true for document fragment, false for any node\n     *\t\tobj.is( 'element' ); // true for any element, false for text node or document fragment\n     *\t\tobj.is( 'element', 'p' ); // true only for element which name is 'p'\n     *\t\tobj.is( 'p' ); // shortcut for obj.is( 'element', 'p' )\n     *\t\tobj.is( 'text' ); // true for text node, false for element and document fragment\n     *\n     * @method #is\n     * @param {'element'|'containerElement'|'attributeElement'|'emptyElement'|'uiElement'|\n     * 'rootElement'|'documentFragment'|'text'|'textProxy'} type\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"is\",\n    value: function is(type) {\n      return type == 'node';\n    }\n    /**\n     * Clones this node.\n     *\n     * @protected\n     * @method #_clone\n     * @returns {module:engine/view/node~Node} Clone of this node.\n     */\n\n    /**\n     * Checks if provided node is similar to this node.\n     *\n     * @method #isSimilar\n     * @returns {Boolean} True if nodes are similar.\n     */\n\n  }, {\n    key: \"index\",\n    get: function get() {\n      var pos;\n\n      if (!this.parent) {\n        return null;\n      } // No parent or child doesn't exist in parent's children.\n\n\n      if ((pos = this.parent.getChildIndex(this)) == -1) {\n        /**\n         * The node's parent does not contain this node. It means that the document tree is corrupted.\n         *\n         * @error view-node-not-found-in-parent\n         */\n        throw new CKEditorError('view-node-not-found-in-parent: The node\\'s parent does not contain this node.');\n      }\n\n      return pos;\n    }\n    /**\n     * Node's next sibling, or `null` if it is the last child.\n     *\n     * @readonly\n     * @type {module:engine/view/node~Node|null}\n     */\n\n  }, {\n    key: \"nextSibling\",\n    get: function get() {\n      var index = this.index;\n      return index !== null && this.parent.getChild(index + 1) || null;\n    }\n    /**\n     * Node's previous sibling, or `null` if it is the first child.\n     *\n     * @readonly\n     * @type {module:engine/view/node~Node|null}\n     */\n\n  }, {\n    key: \"previousSibling\",\n    get: function get() {\n      var index = this.index;\n      return index !== null && this.parent.getChild(index - 1) || null;\n    }\n    /**\n     * Top-most ancestor of the node. If the node has no parent it is the root itself.\n     *\n     * @readonly\n     * @type {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment}\n     */\n\n  }, {\n    key: \"root\",\n    get: function get() {\n      var root = this; // eslint-disable-line consistent-this\n\n      while (root.parent) {\n        root = root.parent;\n      }\n\n      return root;\n    }\n    /**\n     * {@link module:engine/view/document~Document View document} that owns this node, or `null` if the node is inside\n     * {@link module:engine/view/documentfragment~DocumentFragment document fragment}.\n     *\n     * @readonly\n     * @type {module:engine/view/document~Document|null}\n     */\n\n  }, {\n    key: \"document\",\n    get: function get() {\n      // Parent might be Node, null or DocumentFragment.\n      if (this.parent instanceof Node) {\n        return this.parent.document;\n      } else {\n        return null;\n      }\n    }\n  }]);\n\n  return Node;\n}();\n/**\n * Fired when list of {@link module:engine/view/element~Element elements} children changes.\n *\n * Change event is bubbled – it is fired on all ancestors.\n *\n * @event change:children\n * @param {module:engine/view/node~Node} changedNode\n */\n\n/**\n * Fired when list of {@link module:engine/view/element~Element elements} attributes changes.\n *\n * Change event is bubbled – it is fired on all ancestors.\n *\n * @event change:attributes\n * @param {module:engine/view/node~Node} changedNode\n */\n\n/**\n * Fired when {@link module:engine/view/text~Text text nodes} data changes.\n *\n * Change event is bubbled – it is fired on all ancestors.\n *\n * @event change:text\n * @param {module:engine/view/node~Node} changedNode\n */\n\n/**\n * @event change\n */\n\n\nexport { Node as default };\nmix(Node, EmitterMixin);","import assignValue from './_assignValue.js';\nimport baseAssignValue from './_baseAssignValue.js';\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nexport default copyObject;\n","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/observer/domeventobserver\n */\nimport Observer from './observer';\nimport DomEventData from './domeventdata';\n/**\n * Base class for DOM event observers. This class handles\n * {@link module:engine/view/observer/observer~Observer#observe adding} listeners to DOM elements,\n * {@link module:engine/view/observer/observer~Observer#disable disabling} and\n * {@link module:engine/view/observer/observer~Observer#enable re-enabling} events.\n * Child class needs to define\n * {@link module:engine/view/observer/domeventobserver~DomEventObserver#domEventType DOM event type} and\n * {@link module:engine/view/observer/domeventobserver~DomEventObserver#onDomEvent callback}.\n *\n * For instance:\n *\n *\t\tclass ClickObserver extends DomEventObserver {\n *\t\t\t// It can also be defined as a normal property in the constructor.\n *\t\t\tget domEventType() {\n *\t\t\t\treturn 'click';\n *\t\t\t}\n *\n *\t\t\tonDomEvent( domEvent ) {\n *\t\t\t\tthis.fire( 'click', domEvent );\n *\t\t\t}\n *\t\t}\n *\n * @extends module:engine/view/observer/observer~Observer\n */\n\nvar DomEventObserver =\n/*#__PURE__*/\nfunction (_Observer) {\n  _inherits(DomEventObserver, _Observer);\n\n  /**\n   * Type of the DOM event the observer should listen on. Array of types can be defined\n   * if the obsever should listen to multiple DOM events.\n   *\n   * @readonly\n   * @member {String|Array.<String>} #domEventType\n   */\n\n  /**\n   * Callback which should be called when the DOM event occurred. Note that the callback will not be called if\n   * observer {@link #isEnabled is not enabled}.\n   *\n   * @see #domEventType\n   * @abstract\n   * @method #onDomEvent\n   */\n\n  /**\n   * @inheritDoc\n   */\n  function DomEventObserver(view) {\n    var _this;\n\n    _classCallCheck(this, DomEventObserver);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DomEventObserver).call(this, view));\n    /**\n     * If set to `true` DOM events will be listened on the capturing phase.\n     * Default value is `false`.\n     *\n     * @member {Boolean}\n     */\n\n    _this.useCapture = false;\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(DomEventObserver, [{\n    key: \"observe\",\n    value: function observe(domElement) {\n      var _this2 = this;\n\n      var types = typeof this.domEventType == 'string' ? [this.domEventType] : this.domEventType;\n      types.forEach(function (type) {\n        _this2.listenTo(domElement, type, function (eventInfo, domEvent) {\n          if (_this2.isEnabled) {\n            _this2.onDomEvent(domEvent);\n          }\n        }, {\n          useCapture: _this2.useCapture\n        });\n      });\n    }\n    /**\n     * Calls `Document#fire()` if observer {@link #isEnabled is enabled}.\n     *\n     * @see module:utils/emittermixin~EmitterMixin#fire\n     * @param {String} eventType The event type (name).\n     * @param {Event} domEvent The DOM event.\n     * @param {Object} [additionalData] The additional data which should extend the\n     * {@link module:engine/view/observer/domeventdata~DomEventData event data} object.\n     */\n\n  }, {\n    key: \"fire\",\n    value: function fire(eventType, domEvent, additionalData) {\n      if (this.isEnabled) {\n        this.document.fire(eventType, new DomEventData(this.view, domEvent, additionalData));\n      }\n    }\n  }]);\n\n  return DomEventObserver;\n}(Observer);\n\nexport { DomEventObserver as default };","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/node\n */\nimport toMap from '@ckeditor/ckeditor5-utils/src/tomap';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\n/**\n * Model node. Most basic structure of model tree.\n *\n * This is an abstract class that is a base for other classes representing different nodes in model.\n *\n * **Note:** If a node is detached from the model tree, you can manipulate it using it's API.\n * However, it is **very important** that nodes already attached to model tree should be only changed through\n * {@link module:engine/model/writer~Writer Writer API}.\n *\n * Changes done by `Node` methods, like {@link module:engine/model/element~Element#_insertChild _insertChild} or\n * {@link module:engine/model/node~Node#_setAttribute _setAttribute}\n * do not generate {@link module:engine/model/operation/operation~Operation operations}\n * which are essential for correct editor work if you modify nodes in {@link module:engine/model/document~Document document} root.\n *\n * The flow of working on `Node` (and classes that inherits from it) is as such:\n * 1. You can create a `Node` instance, modify it using it's API.\n * 2. Add `Node` to the model using `Batch` API.\n * 3. Change `Node` that was already added to the model using `Batch` API.\n *\n * Similarly, you cannot use `Batch` API on a node that has not been added to the model tree, with the exception\n * of {@link module:engine/model/writer~Writer#insert inserting} that node to the model tree.\n *\n * Be aware that using {@link module:engine/model/writer~Writer#remove remove from Batch API} does not allow to use `Node` API because\n * the information about `Node` is still kept in model document.\n *\n * In case of {@link module:engine/model/element~Element element node}, adding and removing children also counts as changing a node and\n * follows same rules.\n */\n\nvar Node =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a model node.\n   *\n   * This is an abstract class, so this constructor should not be used directly.\n   *\n   * @abstract\n   * @param {Object} [attrs] Node's attributes. See {@link module:utils/tomap~toMap} for a list of accepted values.\n   */\n  function Node(attrs) {\n    _classCallCheck(this, Node);\n\n    /**\n     * Parent of this node. It could be {@link module:engine/model/element~Element}\n     * or {@link module:engine/model/documentfragment~DocumentFragment}.\n     * Equals to `null` if the node has no parent.\n     *\n     * @readonly\n     * @member {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment|null}\n     */\n    this.parent = null;\n    /**\n     * Attributes set on this node.\n     *\n     * @private\n     * @member {Map} module:engine/model/node~Node#_attrs\n     */\n\n    this._attrs = toMap(attrs);\n  }\n  /**\n   * Index of this node in it's parent or `null` if the node has no parent.\n   *\n   * Accessing this property throws an error if this node's parent element does not contain it.\n   * This means that model tree got broken.\n   *\n   * @readonly\n   * @type {Number|null}\n   */\n\n\n  _createClass(Node, [{\n    key: \"getPath\",\n\n    /**\n     * Gets path to the node. The path is an array containing starting offsets of consecutive ancestors of this node,\n     * beginning from {@link module:engine/model/node~Node#root root}, down to this node's starting offset. The path can be used to\n     * create {@link module:engine/model/position~Position Position} instance.\n     *\n     *\t\tconst abc = new Text( 'abc' );\n     *\t\tconst foo = new Text( 'foo' );\n     *\t\tconst h1 = new Element( 'h1', null, new Text( 'header' ) );\n     *\t\tconst p = new Element( 'p', null, [ abc, foo ] );\n     *\t\tconst div = new Element( 'div', null, [ h1, p ] );\n     *\t\tfoo.getPath(); // Returns [ 1, 3 ]. `foo` is in `p` which is in `div`. `p` starts at offset 1, while `foo` at 3.\n     *\t\th1.getPath(); // Returns [ 0 ].\n     *\t\tdiv.getPath(); // Returns [].\n     *\n     * @returns {Array.<Number>} The path.\n     */\n    value: function getPath() {\n      var path = [];\n      var node = this; // eslint-disable-line consistent-this\n\n      while (node.parent) {\n        path.unshift(node.startOffset);\n        node = node.parent;\n      }\n\n      return path;\n    }\n    /**\n     * Returns ancestors array of this node.\n     *\n     * @param {Object} options Options object.\n     * @param {Boolean} [options.includeSelf=false] When set to `true` this node will be also included in parent's array.\n     * @param {Boolean} [options.parentFirst=false] When set to `true`, array will be sorted from node's parent to root element,\n     * otherwise root element will be the first item in the array.\n     * @returns {Array} Array with ancestors.\n     */\n\n  }, {\n    key: \"getAncestors\",\n    value: function getAncestors() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        includeSelf: false,\n        parentFirst: false\n      };\n      var ancestors = [];\n      var parent = options.includeSelf ? this : this.parent;\n\n      while (parent) {\n        ancestors[options.parentFirst ? 'push' : 'unshift'](parent);\n        parent = parent.parent;\n      }\n\n      return ancestors;\n    }\n    /**\n     * Returns a {@link module:engine/model/element~Element} or {@link module:engine/model/documentfragment~DocumentFragment}\n     * which is a common ancestor of both nodes.\n     *\n     * @param {module:engine/model/node~Node} node The second node.\n     * @param {Object} options Options object.\n     * @param {Boolean} [options.includeSelf=false] When set to `true` both nodes will be considered \"ancestors\" too.\n     * Which means that if e.g. node A is inside B, then their common ancestor will be B.\n     * @returns {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment|null}\n     */\n\n  }, {\n    key: \"getCommonAncestor\",\n    value: function getCommonAncestor(node) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var ancestorsA = this.getAncestors(options);\n      var ancestorsB = node.getAncestors(options);\n      var i = 0;\n\n      while (ancestorsA[i] == ancestorsB[i] && ancestorsA[i]) {\n        i++;\n      }\n\n      return i === 0 ? null : ancestorsA[i - 1];\n    }\n    /**\n     * Returns whether this node is before given node. `false` is returned if nodes are in different trees (for example,\n     * in different {@link module:engine/model/documentfragment~DocumentFragment}s).\n     *\n     * @param {module:engine/model/node~Node} node Node to compare with.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isBefore\",\n    value: function isBefore(node) {\n      // Given node is not before this node if they are same.\n      if (this == node) {\n        return false;\n      } // Return `false` if it is impossible to compare nodes.\n\n\n      if (this.root !== node.root) {\n        return false;\n      }\n\n      var thisPath = this.getPath();\n      var nodePath = node.getPath();\n      var result = compareArrays(thisPath, nodePath);\n\n      switch (result) {\n        case 'prefix':\n          return true;\n\n        case 'extension':\n          return false;\n\n        default:\n          return thisPath[result] < nodePath[result];\n      }\n    }\n    /**\n     * Returns whether this node is after given node. `false` is returned if nodes are in different trees (for example,\n     * in different {@link module:engine/model/documentfragment~DocumentFragment}s).\n     *\n     * @param {module:engine/model/node~Node} node Node to compare with.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isAfter\",\n    value: function isAfter(node) {\n      // Given node is not before this node if they are same.\n      if (this == node) {\n        return false;\n      } // Return `false` if it is impossible to compare nodes.\n\n\n      if (this.root !== node.root) {\n        return false;\n      } // In other cases, just check if the `node` is before, and return the opposite.\n\n\n      return !this.isBefore(node);\n    }\n    /**\n     * Checks if the node has an attribute with given key.\n     *\n     * @param {String} key Key of attribute to check.\n     * @returns {Boolean} `true` if attribute with given key is set on node, `false` otherwise.\n     */\n\n  }, {\n    key: \"hasAttribute\",\n    value: function hasAttribute(key) {\n      return this._attrs.has(key);\n    }\n    /**\n     * Gets an attribute value for given key or `undefined` if that attribute is not set on node.\n     *\n     * @param {String} key Key of attribute to look for.\n     * @returns {*} Attribute value or `undefined`.\n     */\n\n  }, {\n    key: \"getAttribute\",\n    value: function getAttribute(key) {\n      return this._attrs.get(key);\n    }\n    /**\n     * Returns iterator that iterates over this node's attributes.\n     *\n     * Attributes are returned as arrays containing two items. First one is attribute key and second is attribute value.\n     * This format is accepted by native `Map` object and also can be passed in `Node` constructor.\n     *\n     * @returns {Iterable.<*>}\n     */\n\n  }, {\n    key: \"getAttributes\",\n    value: function getAttributes() {\n      return this._attrs.entries();\n    }\n    /**\n     * Returns iterator that iterates over this node's attribute keys.\n     *\n     * @returns {Iterable.<String>}\n     */\n\n  }, {\n    key: \"getAttributeKeys\",\n    value: function getAttributeKeys() {\n      return this._attrs.keys();\n    }\n    /**\n     * Converts `Node` to plain object and returns it.\n     *\n     * @returns {Object} `Node` converted to plain object.\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = {}; // Serializes attributes to the object.\n      // attributes = { a: 'foo', b: 1, c: true }.\n\n      if (this._attrs.size) {\n        json.attributes = Array.from(this._attrs).reduce(function (result, attr) {\n          result[attr[0]] = attr[1];\n          return result;\n        }, {});\n      }\n\n      return json;\n    }\n    /**\n     * Creates a copy of this node, that is a node with exactly same attributes, and returns it.\n     *\n     * @protected\n     * @returns {module:engine/model/node~Node} Node with same attributes as this node.\n     */\n\n  }, {\n    key: \"_clone\",\n    value: function _clone() {\n      return new Node(this._attrs);\n    }\n    /**\n     * Removes this node from it's parent.\n     *\n     * @see module:engine/model/writer~Writer#remove\n     * @protected\n     */\n\n  }, {\n    key: \"_remove\",\n    value: function _remove() {\n      this.parent._removeChildren(this.index);\n    }\n    /**\n     * Sets attribute on the node. If attribute with the same key already is set, it's value is overwritten.\n     *\n     * @see module:engine/model/writer~Writer#setAttribute\n     * @protected\n     * @param {String} key Key of attribute to set.\n     * @param {*} value Attribute value.\n     */\n\n  }, {\n    key: \"_setAttribute\",\n    value: function _setAttribute(key, value) {\n      this._attrs.set(key, value);\n    }\n    /**\n     * Removes all attributes from the node and sets given attributes.\n     *\n     * @see module:engine/model/writer~Writer#setAttributes\n     * @protected\n     * @param {Object} [attrs] Attributes to set. See {@link module:utils/tomap~toMap} for a list of accepted values.\n     */\n\n  }, {\n    key: \"_setAttributesTo\",\n    value: function _setAttributesTo(attrs) {\n      this._attrs = toMap(attrs);\n    }\n    /**\n     * Removes an attribute with given key from the node.\n     *\n     * @see module:engine/model/writer~Writer#removeAttribute\n     * @protected\n     * @param {String} key Key of attribute to remove.\n     * @returns {Boolean} `true` if the attribute was set on the element, `false` otherwise.\n     */\n\n  }, {\n    key: \"_removeAttribute\",\n    value: function _removeAttribute(key) {\n      return this._attrs.delete(key);\n    }\n    /**\n     * Removes all attributes from the node.\n     *\n     * @see module:engine/model/writer~Writer#clearAttributes\n     * @protected\n     */\n\n  }, {\n    key: \"_clearAttributes\",\n    value: function _clearAttributes() {\n      this._attrs.clear();\n    }\n    /**\n     * Checks whether given model tree object is of given type.\n     *\n     * This method is useful when processing model tree objects that are of unknown type. For example, a function\n     * may return {@link module:engine/model/documentfragment~DocumentFragment} or {@link module:engine/model/node~Node}\n     * that can be either text node or element. This method can be used to check what kind of object is returned.\n     *\n     *\t\tobj.is( 'node' ); // true for any node, false for document fragment and text fragment\n     *\t\tobj.is( 'documentFragment' ); // true for document fragment, false for any node\n     *\t\tobj.is( 'element' ); // true for any element, false for text node or document fragment\n     *\t\tobj.is( 'element', 'paragraph' ); // true only for element which name is 'paragraph'\n     *\t\tobj.is( 'paragraph' ); // shortcut for obj.is( 'element', 'paragraph' )\n     *\t\tobj.is( 'text' ); // true for text node, false for element and document fragment\n     *\t\tobj.is( 'textProxy' ); // true for text proxy object\n     *\n     * @method #is\n     * @param {'element'|'rootElement'|'text'|'textProxy'|'documentFragment'} type\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"is\",\n    value: function is(type) {\n      return type == 'node';\n    }\n  }, {\n    key: \"index\",\n    get: function get() {\n      var pos;\n\n      if (!this.parent) {\n        return null;\n      }\n\n      if ((pos = this.parent.getChildIndex(this)) === null) {\n        throw new CKEditorError('model-node-not-found-in-parent: The node\\'s parent does not contain this node.');\n      }\n\n      return pos;\n    }\n    /**\n     * Offset at which this node starts in it's parent. It is equal to the sum of {@link #offsetSize offsetSize}\n     * of all it's previous siblings. Equals to `null` if node has no parent.\n     *\n     * Accessing this property throws an error if this node's parent element does not contain it.\n     * This means that model tree got broken.\n     *\n     * @readonly\n     * @type {Number|null}\n     */\n\n  }, {\n    key: \"startOffset\",\n    get: function get() {\n      var pos;\n\n      if (!this.parent) {\n        return null;\n      }\n\n      if ((pos = this.parent.getChildStartOffset(this)) === null) {\n        throw new CKEditorError('model-node-not-found-in-parent: The node\\'s parent does not contain this node.');\n      }\n\n      return pos;\n    }\n    /**\n     * Offset size of this node. Represents how much \"offset space\" is occupied by the node in it's parent.\n     * It is important for {@link module:engine/model/position~Position position}. When node has `offsetSize` greater than `1`, position\n     * can be placed between that node start and end. `offsetSize` greater than `1` is for nodes that represents more\n     * than one entity, i.e. {@link module:engine/model/text~Text text node}.\n     *\n     * @readonly\n     * @type {Number}\n     */\n\n  }, {\n    key: \"offsetSize\",\n    get: function get() {\n      return 1;\n    }\n    /**\n     * Offset at which this node ends in it's parent. It is equal to the sum of this node's\n     * {@link module:engine/model/node~Node#startOffset start offset} and {@link #offsetSize offset size}.\n     * Equals to `null` if the node has no parent.\n     *\n     * @readonly\n     * @type {Number|null}\n     */\n\n  }, {\n    key: \"endOffset\",\n    get: function get() {\n      if (!this.parent) {\n        return null;\n      }\n\n      return this.startOffset + this.offsetSize;\n    }\n    /**\n     * Node's next sibling or `null` if the node is a last child of it's parent or if the node has no parent.\n     *\n     * @readonly\n     * @type {module:engine/model/node~Node|null}\n     */\n\n  }, {\n    key: \"nextSibling\",\n    get: function get() {\n      var index = this.index;\n      return index !== null && this.parent.getChild(index + 1) || null;\n    }\n    /**\n     * Node's previous sibling or `null` if the node is a first child of it's parent or if the node has no parent.\n     *\n     * @readonly\n     * @type {module:engine/model/node~Node|null}\n     */\n\n  }, {\n    key: \"previousSibling\",\n    get: function get() {\n      var index = this.index;\n      return index !== null && this.parent.getChild(index - 1) || null;\n    }\n    /**\n     * The top-most ancestor of the node. If node has no parent it is the root itself. If the node is a part\n     * of {@link module:engine/model/documentfragment~DocumentFragment}, it's `root` is equal to that `DocumentFragment`.\n     *\n     * @readonly\n     * @type {module:engine/model/node~Node|module:engine/model/documentfragment~DocumentFragment}\n     */\n\n  }, {\n    key: \"root\",\n    get: function get() {\n      var root = this; // eslint-disable-line consistent-this\n\n      while (root.parent) {\n        root = root.parent;\n      }\n\n      return root;\n    }\n    /**\n     * {@link module:engine/model/document~Document Document} that owns this node or `null` if the node has no parent or is inside\n     * a {@link module:engine/model/documentfragment~DocumentFragment DocumentFragment}.\n     *\n     * @readonly\n     * @type {module:engine/model/document~Document|null}\n     */\n\n  }, {\n    key: \"document\",\n    get: function get() {\n      // This is a top element of a sub-tree.\n      if (this.root == this) {\n        return null;\n      } // Root may be `DocumentFragment` which does not have document property.\n\n\n      return this.root.document || null;\n    }\n  }]);\n\n  return Node;\n}();\n/**\n * The node's parent does not contain this node.\n *\n * This error may be thrown from corrupted trees.\n *\n * @error model-node-not-found-in-parent\n */\n\n\nexport { Node as default };","function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/nodelist\n */\nimport Node from './node';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * Provides an interface to operate on a list of {@link module:engine/model/node~Node nodes}. `NodeList` is used internally\n * in classes like {@link module:engine/model/element~Element Element}\n * or {@link module:engine/model/documentfragment~DocumentFragment DocumentFragment}.\n */\n\nvar NodeList =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an empty node list.\n   *\n   * @protected\n   * @param {Iterable.<module:engine/model/node~Node>} nodes Nodes contained in this node list.\n   */\n  function NodeList(nodes) {\n    _classCallCheck(this, NodeList);\n\n    /**\n     * Nodes contained in this node list.\n     *\n     * @private\n     * @member {Array.<module:engine/model/node~Node>}\n     */\n    this._nodes = [];\n\n    if (nodes) {\n      this._insertNodes(0, nodes);\n    }\n  }\n  /**\n   * Iterable interface.\n   *\n   * Iterates over all nodes contained inside this node list.\n   *\n   * @returns {Iterable.<module:engine/model/node~Node>}\n   */\n\n\n  _createClass(NodeList, [{\n    key: Symbol.iterator,\n    value: function value() {\n      return this._nodes[Symbol.iterator]();\n    }\n    /**\n     * Number of nodes contained inside this node list.\n     *\n     * @readonly\n     * @type {Number}\n     */\n\n  }, {\n    key: \"getNode\",\n\n    /**\n     * Gets the node at the given index. Returns `null` if incorrect index was passed.\n     *\n     * @param {Number} index Index of node.\n     * @returns {module:engine/model/node~Node|null} Node at given index.\n     */\n    value: function getNode(index) {\n      return this._nodes[index] || null;\n    }\n    /**\n     * Returns an index of the given node. Returns `null` if given node is not inside this node list.\n     *\n     * @param {module:engine/model/node~Node} node Child node to look for.\n     * @returns {Number|null} Child node's index.\n     */\n\n  }, {\n    key: \"getNodeIndex\",\n    value: function getNodeIndex(node) {\n      var index = this._nodes.indexOf(node);\n\n      return index == -1 ? null : index;\n    }\n    /**\n     * Returns the starting offset of given node. Starting offset is equal to the sum of\n     * {@link module:engine/model/node~Node#offsetSize offset sizes} of all nodes that are before this node in this node list.\n     *\n     * @param {module:engine/model/node~Node} node Node to look for.\n     * @returns {Number|null} Node's starting offset.\n     */\n\n  }, {\n    key: \"getNodeStartOffset\",\n    value: function getNodeStartOffset(node) {\n      var index = this.getNodeIndex(node);\n      return index === null ? null : this._nodes.slice(0, index).reduce(function (sum, node) {\n        return sum + node.offsetSize;\n      }, 0);\n    }\n    /**\n     * Converts index to offset in node list.\n     *\n     * Returns starting offset of a node that is at given index. Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError}\n     * `model-nodelist-index-out-of-bounds` if given index is less than `0` or more than {@link #length}.\n     *\n     * @param {Number} index Node's index.\n     * @returns {Number} Node's starting offset.\n     */\n\n  }, {\n    key: \"indexToOffset\",\n    value: function indexToOffset(index) {\n      if (index == this._nodes.length) {\n        return this.maxOffset;\n      }\n\n      var node = this._nodes[index];\n\n      if (!node) {\n        /**\n         * Given index cannot be found in the node list.\n         *\n         * @error nodelist-index-out-of-bounds\n         */\n        throw new CKEditorError('model-nodelist-index-out-of-bounds: Given index cannot be found in the node list.');\n      }\n\n      return this.getNodeStartOffset(node);\n    }\n    /**\n     * Converts offset in node list to index.\n     *\n     * Returns index of a node that occupies given offset. Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError}\n     * `model-nodelist-offset-out-of-bounds` if given offset is less than `0` or more than {@link #maxOffset}.\n     *\n     * @param {Number} offset Offset to look for.\n     * @returns {Number} Index of a node that occupies given offset.\n     */\n\n  }, {\n    key: \"offsetToIndex\",\n    value: function offsetToIndex(offset) {\n      var totalOffset = 0;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this._nodes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var node = _step.value;\n\n          if (offset >= totalOffset && offset < totalOffset + node.offsetSize) {\n            return this.getNodeIndex(node);\n          }\n\n          totalOffset += node.offsetSize;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      if (totalOffset != offset) {\n        /**\n         * Given offset cannot be found in the node list.\n         *\n         * @error model-nodelist-offset-out-of-bounds\n         * @param {Number} offset\n         * @param {module:engine/model/nodelist~NodeList} nodeList Stringified node list.\n         */\n        throw new CKEditorError('model-nodelist-offset-out-of-bounds: Given offset cannot be found in the node list.', {\n          offset: offset,\n          nodeList: this\n        });\n      }\n\n      return this.length;\n    }\n    /**\n     * Inserts given nodes at given index.\n     *\n     * @protected\n     * @param {Number} index Index at which nodes should be inserted.\n     * @param {Iterable.<module:engine/model/node~Node>} nodes Nodes to be inserted.\n     */\n\n  }, {\n    key: \"_insertNodes\",\n    value: function _insertNodes(index, nodes) {\n      var _this$_nodes;\n\n      // Validation.\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = nodes[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var node = _step2.value;\n\n          if (!(node instanceof Node)) {\n            /**\n             * Trying to insert an object which is not a Node instance.\n             *\n             * @error nodelist-insertNodes-not-node\n             */\n            throw new CKEditorError('model-nodelist-insertNodes-not-node: Trying to insert an object which is not a Node instance.');\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      (_this$_nodes = this._nodes).splice.apply(_this$_nodes, [index, 0].concat(_toConsumableArray(nodes)));\n    }\n    /**\n     * Removes one or more nodes starting at the given index.\n     *\n     * @protected\n     * @param {Number} indexStart Index of the first node to remove.\n     * @param {Number} [howMany=1] Number of nodes to remove.\n     * @returns {Array.<module:engine/model/node~Node>} Array containing removed nodes.\n     */\n\n  }, {\n    key: \"_removeNodes\",\n    value: function _removeNodes(indexStart) {\n      var howMany = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      return this._nodes.splice(indexStart, howMany);\n    }\n    /**\n     * Converts `NodeList` instance to an array containing nodes that were inserted in the node list. Nodes\n     * are also converted to their plain object representation.\n     *\n     * @returns {Array.<module:engine/model/node~Node>} `NodeList` instance converted to `Array`.\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this._nodes.map(function (node) {\n        return node.toJSON();\n      });\n    }\n  }, {\n    key: \"length\",\n    get: function get() {\n      return this._nodes.length;\n    }\n    /**\n     * Sum of {@link module:engine/model/node~Node#offsetSize offset sizes} of all nodes contained inside this node list.\n     *\n     * @readonly\n     * @type {Number}\n     */\n\n  }, {\n    key: \"maxOffset\",\n    get: function get() {\n      return this._nodes.reduce(function (sum, node) {\n        return sum + node.offsetSize;\n      }, 0);\n    }\n  }]);\n\n  return NodeList;\n}();\n\nexport { NodeList as default };","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/tomap\n */\nimport objectToMap from './objecttomap';\nimport { isPlainObject } from 'lodash-es';\n/**\n * Transforms object or iterable to map. Iterable needs to be in the format acceptable by the `Map` constructor.\n *\n *\t\tmap = toMap( { 'foo': 1, 'bar': 2 } );\n *\t\tmap = toMap( [ [ 'foo', 1 ], [ 'bar', 2 ] ] );\n *\t\tmap = toMap( anotherMap );\n *\n * @param {Object|Iterable} data Object or iterable to transform.\n * @returns {Map} Map created from data.\n */\n\nexport default function toMap(data) {\n  if (isPlainObject(data)) {\n    return objectToMap(data);\n  } else {\n    return new Map(data);\n  }\n}","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.cloneWith` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @param {Function} [customizer] The function to customize cloning.\n * @returns {*} Returns the deep cloned value.\n * @see _.cloneWith\n * @example\n *\n * function customizer(value) {\n *   if (_.isElement(value)) {\n *     return value.cloneNode(true);\n *   }\n * }\n *\n * var el = _.cloneDeepWith(document.body, customizer);\n *\n * console.log(el === document.body);\n * // => false\n * console.log(el.nodeName);\n * // => 'BODY'\n * console.log(el.childNodes.length);\n * // => 20\n */\nfunction cloneDeepWith(value, customizer) {\n  customizer = typeof customizer == 'function' ? customizer : undefined;\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n}\n\nexport default cloneDeepWith;\n","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/template\n */\n\n/* global document */\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport View from './view';\nimport ViewCollection from './viewcollection';\nimport isNode from '@ckeditor/ckeditor5-utils/src/dom/isnode';\nimport log from '@ckeditor/ckeditor5-utils/src/log';\nimport { isObject, cloneDeepWith } from 'lodash-es';\nvar xhtmlNs = 'http://www.w3.org/1999/xhtml';\n/**\n * A basic Template class. It renders a DOM HTML element or text from a\n * {@link module:ui/template~TemplateDefinition definition} and supports element attributes, children,\n * bindings to {@link module:utils/observablemixin~Observable observables} and DOM event propagation.\n *\n * A simple template can look like this:\n *\n *\t\tconst bind = Template.bind( observable, emitter );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\t\t\tattributes: {\n *\t\t\t\tclass: 'foo',\n *\t\t\t\tstyle: {\n *\t\t\t\t\tbackgroundColor: 'yellow'\n *\t\t\t\t}\n *\t\t\t},\n *\t\t\ton: {\n *\t\t\t\tclick: bind.to( 'clicked' )\n *\t\t\t}\n *\t\t\tchildren: [\n *\t\t\t\t'A paragraph.'\n *\t\t\t]\n *\t\t} ).render();\n *\n * and it will render the following HTML element:\n *\n *\t\t<p class=\"foo\" style=\"background-color: yellow;\">A paragraph.</p>\n *\n * Additionally, the `observable` will always fire `clicked` upon clicking `<p>` in the DOM.\n *\n * See {@link module:ui/template~TemplateDefinition} to know more about templates and complex\n * template definitions.\n *\n* @mixes module:utils/emittermixin~EmitterMixin\n */\n\nvar Template =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of the {@link ~Template} class.\n   *\n   * @param {module:ui/template~TemplateDefinition} def The definition of the template.\n   */\n  function Template(def) {\n    _classCallCheck(this, Template);\n\n    Object.assign(this, normalize(clone(def)));\n    /**\n     * Indicates whether this particular Template instance has been\n     * {@link #render rendered}.\n     *\n     * @readonly\n     * @protected\n     * @member {Boolean}\n     */\n\n    this._isRendered = false;\n    /**\n     * The tag (`tagName`) of this template, e.g. `div`. It also indicates that the template\n     * renders to an HTML element.\n     *\n     * @member {String} #tag\n     */\n\n    /**\n     * The text of the template. It also indicates that the template renders to a DOM text node.\n     *\n     * @member {Array.<String|module:ui/template~TemplateValueSchema>} #text\n     */\n\n    /**\n     * The attributes of the template, e.g. `{ id: [ 'ck-id' ] }`, corresponding with\n     * the attributes of an HTML element.\n     *\n     * **Note**: This property only makes sense when {@link #tag} is defined.\n     *\n     * @member {Object} #attributes\n     */\n\n    /**\n     * The children of the template. They can be either:\n     * * independent instances of {@link ~Template} (sub–templates),\n     * * native DOM Nodes.\n     *\n     * **Note**: This property only makes sense when {@link #tag} is defined.\n     *\n     * @member {Array.<module:ui/template~Template|Node>} #children\n     */\n\n    /**\n     * The DOM event listeners of the template.\n     *\n     * @member {Object} #eventListeners\n     */\n\n    /**\n     * The data used by the {@link #revert} method to restore a node to its original state.\n     *\n     * See: {@link #apply}.\n     *\n     * @readonly\n     * @protected\n     * @member {module:ui/template~RenderData}\n     */\n\n    this._revertData = null;\n  }\n  /**\n   * Renders a DOM Node (an HTML element or text) out of the template.\n   *\n   *\t\tconst domNode = new Template( { ... } ).render();\n   *\n   * See: {@link #apply}.\n   *\n   * @returns {HTMLElement|Text}\n   */\n\n\n  _createClass(Template, [{\n    key: \"render\",\n    value: function render() {\n      var node = this._renderNode({\n        intoFragment: true\n      });\n\n      this._isRendered = true;\n      return node;\n    }\n    /**\n     * Applies the template to an existing DOM Node, either HTML element or text.\n     *\n     * **Note:** No new DOM nodes will be created. Applying extends\n     * {@link module:ui/template~TemplateDefinition attributes} and\n     * {@link module:ui/template~TemplateDefinition event listeners} only.\n     *\n     * **Note:** Existing `class` and `style` attributes are extended when a template\n     * is applied to an HTML element, while other attributes and `textContent` are overridden.\n     *\n     * **Note:** The process of applying a template can be easily reverted using the\n     * {@link module:ui/template~Template#revert} method.\n     *\n     *\t\tconst element = document.createElement( 'div' );\n     *\t\tconst bind = Template.bind( observable, emitter );\n     *\n     *\t\tnew Template( {\n     *\t\t\tattrs: {\n     *\t\t\t\tid: 'first-div',\n     *\t\t\t\tclass: bind.to( 'divClass' )\n     *\t\t\t},\n     *\t\t\ton: {\n     *\t\t\t\tclick: bind( 'elementClicked' ) // Will be fired by the observable.\n     *\t\t\t}\n     *\t\t\tchildren: [\n     *\t\t\t\t'Div text.'\n     *\t\t\t]\n     *\t\t} ).apply( element );\n     *\n     *\t\telement.outerHTML == \"<div id=\"first-div\" class=\"my-div\">Div text.</div>\"\n     *\n     * @see module:ui/template~Template#render\n     * @see module:ui/template~Template#revert\n     * @param {Node} node Root node for the template to apply.\n     */\n\n  }, {\n    key: \"apply\",\n    value: function apply(node) {\n      this._revertData = getEmptyRevertData();\n\n      this._renderNode({\n        node: node,\n        isApplying: true,\n        revertData: this._revertData\n      });\n\n      return node;\n    }\n    /**\n     * Reverts a template {@link module:ui/template~Template#apply applied} to a DOM node.\n     *\n     * @param {Node} node The root node for the template to revert. In most of the cases, it is the\n     * same node used by {@link module:ui/template~Template#apply}.\n     */\n\n  }, {\n    key: \"revert\",\n    value: function revert(node) {\n      if (!this._revertData) {\n        /**\n         * Attempting to revert a template which has not been applied yet.\n         *\n         * @error ui-template-revert-not-applied\n         */\n        throw new CKEditorError('ui-template-revert-not-applied: Attempting to revert a template which has not been applied yet.');\n      }\n\n      this._revertTemplateFromNode(node, this._revertData);\n    }\n    /**\n     * Returns an iterator which traverses the template in search of {@link module:ui/view~View}\n     * instances and returns them one by one.\n     *\n     *\t\tconst viewFoo = new View();\n     *\t\tconst viewBar = new View();\n     *\t\tconst viewBaz = new View();\n     *\t\tconst template = new Template( {\n     *\t\t\ttag: 'div',\n     *\t\t\tchildren: [\n     *\t\t\t\tviewFoo,\n     *\t\t\t\t{\n     *\t\t\t\t\ttag: 'div',\n     *\t\t\t\t\tchildren: [\n     *\t\t\t\t\t\tviewBar\n     *\t\t\t\t\t]\n     *\t\t\t\t},\n     *\t\t\t\tviewBaz\n     *\t\t\t]\n     *\t\t} );\n     *\n     *\t\t// Logs: viewFoo, viewBar, viewBaz\n     *\t\tfor ( const view of template.getViews() ) {\n     *\t\t\tconsole.log( view );\n     *\t\t}\n     *\n     * @returns {Iterable.<module:ui/view~View>}\n     */\n\n  }, {\n    key: \"getViews\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function getViews() {\n      var _marked, search;\n\n      return regeneratorRuntime.wrap(function getViews$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              search = function _ref(def) {\n                var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, child;\n\n                return regeneratorRuntime.wrap(function search$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        if (!def.children) {\n                          _context.next = 32;\n                          break;\n                        }\n\n                        _iteratorNormalCompletion = true;\n                        _didIteratorError = false;\n                        _iteratorError = undefined;\n                        _context.prev = 4;\n                        _iterator = def.children[Symbol.iterator]();\n\n                      case 6:\n                        if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                          _context.next = 18;\n                          break;\n                        }\n\n                        child = _step.value;\n\n                        if (!isView(child)) {\n                          _context.next = 13;\n                          break;\n                        }\n\n                        _context.next = 11;\n                        return child;\n\n                      case 11:\n                        _context.next = 15;\n                        break;\n\n                      case 13:\n                        if (!isTemplate(child)) {\n                          _context.next = 15;\n                          break;\n                        }\n\n                        return _context.delegateYield(search(child), \"t0\", 15);\n\n                      case 15:\n                        _iteratorNormalCompletion = true;\n                        _context.next = 6;\n                        break;\n\n                      case 18:\n                        _context.next = 24;\n                        break;\n\n                      case 20:\n                        _context.prev = 20;\n                        _context.t1 = _context[\"catch\"](4);\n                        _didIteratorError = true;\n                        _iteratorError = _context.t1;\n\n                      case 24:\n                        _context.prev = 24;\n                        _context.prev = 25;\n\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                          _iterator.return();\n                        }\n\n                      case 27:\n                        _context.prev = 27;\n\n                        if (!_didIteratorError) {\n                          _context.next = 30;\n                          break;\n                        }\n\n                        throw _iteratorError;\n\n                      case 30:\n                        return _context.finish(27);\n\n                      case 31:\n                        return _context.finish(24);\n\n                      case 32:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _marked, this, [[4, 20, 24, 32], [25,, 27, 31]]);\n              };\n\n              _marked =\n              /*#__PURE__*/\n              regeneratorRuntime.mark(search);\n              return _context2.delegateYield(search(this), \"t0\", 3);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, getViews, this);\n    })\n    /**\n     * An entry point to the interface which binds DOM nodes to\n     * {@link module:utils/observablemixin~Observable observables}.\n     * There are two types of bindings:\n     *\n     * * HTML element attributes or text `textContent` synchronized with attributes of an\n     * {@link module:utils/observablemixin~Observable}. Learn more about {@link module:ui/template~BindChain#to}\n     * and {@link module:ui/template~BindChain#if}.\n     *\n     *\t\tconst bind = Template.bind( observable, emitter );\n     *\n     *\t\tnew Template( {\n     *\t\t\tattrs: {\n     *\t\t\t\t// Binds the element \"class\" attribute to observable#classAttribute.\n     *\t\t\t\tclass: bind.to( 'classAttribute' )\n     *\t\t\t}\n     *\t\t} ).render();\n     *\n     * * DOM events fired on HTML element propagated through\n     * {@link module:utils/observablemixin~Observable}. Learn more about {@link module:ui/template~BindChain#to}.\n     *\n     *\t\tconst bind = Template.bind( observable, emitter );\n     *\n     *\t\tnew Template( {\n     *\t\t\ton: {\n     *\t\t\t\t// Will be fired by the observable.\n     *\t\t\t\tclick: bind( 'elementClicked' )\n     *\t\t\t}\n     *\t\t} ).render();\n     *\n     * Also see {@link module:ui/view~View#bindTemplate}.\n     *\n     * @param {module:utils/observablemixin~Observable} observable An observable which provides boundable attributes.\n     * @param {module:utils/emittermixin~Emitter} emitter An emitter that listens to observable attribute\n     * changes or DOM Events (depending on the kind of the binding). Usually, a {@link module:ui/view~View} instance.\n     * @returns {module:ui/template~BindChain}\n     */\n\n  }, {\n    key: \"_renderNode\",\n\n    /**\n     * Renders a DOM Node (either an HTML element or text) out of the template.\n     *\n     * @protected\n     * @param {module:ui/template~RenderData} data Rendering data.\n     */\n    value: function _renderNode(data) {\n      var isInvalid;\n\n      if (data.node) {\n        // When applying, a definition cannot have \"tag\" and \"text\" at the same time.\n        isInvalid = this.tag && this.text;\n      } else {\n        // When rendering, a definition must have either \"tag\" or \"text\": XOR( this.tag, this.text ).\n        isInvalid = this.tag ? this.text : !this.text;\n      }\n\n      if (isInvalid) {\n        /**\n         * Node definition cannot have the \"tag\" and \"text\" properties at the same time.\n         * Node definition must have either \"tag\" or \"text\" when rendering a new Node.\n         *\n         * @error ui-template-wrong-syntax\n         */\n        throw new CKEditorError('ui-template-wrong-syntax: Node definition must have either \"tag\" or \"text\" when rendering a new Node.');\n      }\n\n      if (this.text) {\n        return this._renderText(data);\n      } else {\n        return this._renderElement(data);\n      }\n    }\n    /**\n     * Renders an HTML element out of the template.\n     *\n     * @protected\n     * @param {module:ui/template~RenderData} data Rendering data.\n     */\n\n  }, {\n    key: \"_renderElement\",\n    value: function _renderElement(data) {\n      var node = data.node;\n\n      if (!node) {\n        node = data.node = document.createElementNS(this.ns || xhtmlNs, this.tag);\n      }\n\n      this._renderAttributes(data);\n\n      this._renderElementChildren(data);\n\n      this._setUpListeners(data);\n\n      return node;\n    }\n    /**\n     * Renders a text node out of {@link module:ui/template~Template#text}.\n     *\n     * @protected\n     * @param {module:ui/template~RenderData} data Rendering data.\n     */\n\n  }, {\n    key: \"_renderText\",\n    value: function _renderText(data) {\n      var node = data.node; // Save the original textContent to revert it in #revert().\n\n      if (node) {\n        data.revertData.text = node.textContent;\n      } else {\n        node = data.node = document.createTextNode('');\n      } // Check if this Text Node is bound to Observable. Cases:\n      //\n      //\t\ttext: [ Template.bind( ... ).to( ... ) ]\n      //\n      //\t\ttext: [\n      //\t\t\t'foo',\n      //\t\t\tTemplate.bind( ... ).to( ... ),\n      //\t\t\t...\n      //\t\t]\n      //\n\n\n      if (hasTemplateBinding(this.text)) {\n        this._bindToObservable({\n          schema: this.text,\n          updater: getTextUpdater(node),\n          data: data\n        });\n      } // Simply set text. Cases:\n      //\n      //\t\ttext: [ 'all', 'are', 'static' ]\n      //\n      //\t\ttext: [ 'foo' ]\n      //\n      else {\n          node.textContent = this.text.join('');\n        }\n\n      return node;\n    }\n    /**\n     * Renders HTML element attributes out of {@link module:ui/template~Template#attributes}.\n     *\n     * @protected\n     * @param {module:ui/template~RenderData} data Rendering data.\n     */\n\n  }, {\n    key: \"_renderAttributes\",\n    value: function _renderAttributes(data) {\n      var attrName, attrValue, domAttrValue, attrNs;\n\n      if (!this.attributes) {\n        return;\n      }\n\n      var node = data.node;\n      var revertData = data.revertData;\n\n      for (attrName in this.attributes) {\n        // Current attribute value in DOM.\n        domAttrValue = node.getAttribute(attrName); // The value to be set.\n\n        attrValue = this.attributes[attrName]; // Save revert data.\n\n        if (revertData) {\n          revertData.attributes[attrName] = domAttrValue;\n        } // Detect custom namespace:\n        //\n        //\t\tclass: {\n        //\t\t\tns: 'abc',\n        //\t\t\tvalue: Template.bind( ... ).to( ... )\n        //\t\t}\n        //\n\n\n        attrNs = isObject(attrValue[0]) && attrValue[0].ns ? attrValue[0].ns : null; // Activate binding if one is found. Cases:\n        //\n        //\t\tclass: [\n        //\t\t\tTemplate.bind( ... ).to( ... )\n        //\t\t]\n        //\n        //\t\tclass: [\n        //\t\t\t'bar',\n        //\t\t\tTemplate.bind( ... ).to( ... ),\n        //\t\t\t'baz'\n        //\t\t]\n        //\n        //\t\tclass: {\n        //\t\t\tns: 'abc',\n        //\t\t\tvalue: Template.bind( ... ).to( ... )\n        //\t\t}\n        //\n\n        if (hasTemplateBinding(attrValue)) {\n          // Normalize attributes with additional data like namespace:\n          //\n          //\t\tclass: {\n          //\t\t\tns: 'abc',\n          //\t\t\tvalue: [ ... ]\n          //\t\t}\n          //\n          var valueToBind = attrNs ? attrValue[0].value : attrValue; // Extend the original value of attributes like \"style\" and \"class\",\n          // don't override them.\n\n          if (revertData && shouldExtend(attrName)) {\n            valueToBind.unshift(domAttrValue);\n          }\n\n          this._bindToObservable({\n            schema: valueToBind,\n            updater: getAttributeUpdater(node, attrName, attrNs),\n            data: data\n          });\n        } // Style attribute could be an Object so it needs to be parsed in a specific way.\n        //\n        //\t\tstyle: {\n        //\t\t\twidth: '100px',\n        //\t\t\theight: Template.bind( ... ).to( ... )\n        //\t\t}\n        //\n        else if (attrName == 'style' && typeof attrValue[0] !== 'string') {\n            this._renderStyleAttribute(attrValue[0], data);\n          } // Otherwise simply set the static attribute:\n          //\n          //\t\tclass: [ 'foo' ]\n          //\n          //\t\tclass: [ 'all', 'are', 'static' ]\n          //\n          //\t\tclass: [\n          //\t\t\t{\n          //\t\t\t\tns: 'abc',\n          //\t\t\t\tvalue: [ 'foo' ]\n          //\t\t\t}\n          //\t\t]\n          //\n          else {\n              // Extend the original value of attributes like \"style\" and \"class\",\n              // don't override them.\n              if (revertData && domAttrValue && shouldExtend(attrName)) {\n                attrValue.unshift(domAttrValue);\n              }\n\n              attrValue = attrValue // Retrieve \"values\" from:\n              //\n              //\t\tclass: [\n              //\t\t\t{\n              //\t\t\t\tns: 'abc',\n              //\t\t\t\tvalue: [ ... ]\n              //\t\t\t}\n              //\t\t]\n              //\n              .map(function (val) {\n                return val ? val.value || val : val;\n              }) // Flatten the array.\n              .reduce(function (prev, next) {\n                return prev.concat(next);\n              }, []) // Convert into string.\n              .reduce(arrayValueReducer, '');\n\n              if (!isFalsy(attrValue)) {\n                node.setAttributeNS(attrNs, attrName, attrValue);\n              }\n            }\n      }\n    }\n    /**\n     * Renders the `style` attribute of an HTML element based on\n     * {@link module:ui/template~Template#attributes}.\n     *\n     * A style attribute is an {Object} with static values:\n     *\n     *\t\tattributes: {\n     *\t\t\tstyle: {\n     *\t\t\t\tcolor: 'red'\n     *\t\t\t}\n     *\t\t}\n     *\n     * or values bound to {@link module:ui/model~Model} properties:\n     *\n     *\t\tattributes: {\n     *\t\t\tstyle: {\n     *\t\t\t\tcolor: bind.to( ... )\n     *\t\t\t}\n     *\t\t}\n     *\n     * Note: The `style` attribute is rendered without setting the namespace. It does not seem to be\n     * needed.\n     *\n     * @private\n     * @param {Object} styles Styles located in `attributes.style` of {@link module:ui/template~TemplateDefinition}.\n     * @param {module:ui/template~RenderData} data Rendering data.\n     */\n\n  }, {\n    key: \"_renderStyleAttribute\",\n    value: function _renderStyleAttribute(styles, data) {\n      var node = data.node;\n\n      for (var styleName in styles) {\n        var styleValue = styles[styleName]; // Cases:\n        //\n        //\t\tstyle: {\n        //\t\t\tcolor: bind.to( 'attribute' )\n        //\t\t}\n        //\n\n        if (hasTemplateBinding(styleValue)) {\n          this._bindToObservable({\n            schema: [styleValue],\n            updater: getStyleUpdater(node, styleName),\n            data: data\n          });\n        } // Cases:\n        //\n        //\t\tstyle: {\n        //\t\t\tcolor: 'red'\n        //\t\t}\n        //\n        else {\n            node.style[styleName] = styleValue;\n          }\n      }\n    }\n    /**\n     * Recursively renders HTML element's children from {@link module:ui/template~Template#children}.\n     *\n     * @protected\n     * @param {module:ui/template~RenderData} data Rendering data.\n     */\n\n  }, {\n    key: \"_renderElementChildren\",\n    value: function _renderElementChildren(data) {\n      var node = data.node;\n      var container = data.intoFragment ? document.createDocumentFragment() : node;\n      var isApplying = data.isApplying;\n      var childIndex = 0;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.children[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var child = _step2.value;\n\n          if (isViewCollection(child)) {\n            if (!isApplying) {\n              child.setParent(node); // Note: ViewCollection renders its children.\n\n              var _iteratorNormalCompletion3 = true;\n              var _didIteratorError3 = false;\n              var _iteratorError3 = undefined;\n\n              try {\n                for (var _iterator3 = child[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                  var view = _step3.value;\n                  container.appendChild(view.element);\n                }\n              } catch (err) {\n                _didIteratorError3 = true;\n                _iteratorError3 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n                    _iterator3.return();\n                  }\n                } finally {\n                  if (_didIteratorError3) {\n                    throw _iteratorError3;\n                  }\n                }\n              }\n            }\n          } else if (isView(child)) {\n            if (!isApplying) {\n              if (!child.isRendered) {\n                child.render();\n              }\n\n              container.appendChild(child.element);\n            }\n          } else if (isNode(child)) {\n            container.appendChild(child);\n          } else {\n            if (isApplying) {\n              var revertData = data.revertData;\n              var childRevertData = getEmptyRevertData();\n              revertData.children.push(childRevertData);\n\n              child._renderNode({\n                node: container.childNodes[childIndex++],\n                isApplying: true,\n                revertData: childRevertData\n              });\n            } else {\n              container.appendChild(child.render());\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      if (data.intoFragment) {\n        node.appendChild(container);\n      }\n    }\n    /**\n     * Activates `on` event listeners from the {@link module:ui/template~TemplateDefinition}\n     * on an HTML element.\n     *\n     * @protected\n     * @param {module:ui/template~RenderData} data Rendering data.\n     */\n\n  }, {\n    key: \"_setUpListeners\",\n    value: function _setUpListeners(data) {\n      var _this = this;\n\n      if (!this.eventListeners) {\n        return;\n      }\n\n      var _loop = function _loop(key) {\n        var revertBindings = _this.eventListeners[key].map(function (schemaItem) {\n          var _key$split = key.split('@'),\n              _key$split2 = _slicedToArray(_key$split, 2),\n              domEvtName = _key$split2[0],\n              domSelector = _key$split2[1];\n\n          return schemaItem.activateDomEventListener(domEvtName, domSelector, data);\n        });\n\n        if (data.revertData) {\n          data.revertData.bindings.push(revertBindings);\n        }\n      };\n\n      for (var key in this.eventListeners) {\n        _loop(key);\n      }\n    }\n    /**\n     * For a given {@link module:ui/template~TemplateValueSchema} containing {@link module:ui/template~TemplateBinding}\n     * activates the binding and sets its initial value.\n     *\n     * Note: {@link module:ui/template~TemplateValueSchema} can be for HTML element attributes or\n     * text node `textContent`.\n     *\n     * @protected\n     * @param {Object} options Binding options.\n     * @param {module:ui/template~TemplateValueSchema} options.schema\n     * @param {Function} options.updater A function which updates the DOM (like attribute or text).\n     * @param {module:ui/template~RenderData} options.data Rendering data.\n     */\n\n  }, {\n    key: \"_bindToObservable\",\n    value: function _bindToObservable(_ref2) {\n      var schema = _ref2.schema,\n          updater = _ref2.updater,\n          data = _ref2.data;\n      var revertData = data.revertData; // Set initial values.\n\n      syncValueSchemaValue(schema, updater, data);\n      var revertBindings = schema // Filter \"falsy\" (false, undefined, null, '') value schema components out.\n      .filter(function (item) {\n        return !isFalsy(item);\n      }) // Filter inactive bindings from schema, like static strings ('foo'), numbers (42), etc.\n      .filter(function (item) {\n        return item.observable;\n      }) // Once only the actual binding are left, let the emitter listen to observable change:attribute event.\n      // TODO: Reduce the number of listeners attached as many bindings may listen\n      // to the same observable attribute.\n      .map(function (templateBinding) {\n        return templateBinding.activateAttributeListener(schema, updater, data);\n      });\n\n      if (revertData) {\n        revertData.bindings.push(revertBindings);\n      }\n    }\n    /**\n     * Reverts {@link module:ui/template~RenderData#revertData template data} from a node to\n     * return it to the original state.\n     *\n     * @protected\n     * @param {HTMLElement|Text} node A node to be reverted.\n     * @param {module:ui/template~RenderData#revertData} revertData Stores information about\n     * what changes have been made by {@link #apply} to the node.\n     */\n\n  }, {\n    key: \"_revertTemplateFromNode\",\n    value: function _revertTemplateFromNode(node, revertData) {\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = revertData.bindings[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var binding = _step4.value;\n          // Each binding may consist of several observable+observable#attribute.\n          // like the following has 2:\n          //\n          //\t\tclass: [\n          //\t\t\t'x',\n          //\t\t\tbind.to( 'foo' ),\n          //\t\t\t'y',\n          //\t\t\tbind.to( 'bar' )\n          //\t\t]\n          //\n          var _iteratorNormalCompletion5 = true;\n          var _didIteratorError5 = false;\n          var _iteratorError5 = undefined;\n\n          try {\n            for (var _iterator5 = binding[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n              var revertBinding = _step5.value;\n              revertBinding();\n            }\n          } catch (err) {\n            _didIteratorError5 = true;\n            _iteratorError5 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n                _iterator5.return();\n              }\n            } finally {\n              if (_didIteratorError5) {\n                throw _iteratorError5;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      if (revertData.text) {\n        node.textContent = revertData.text;\n        return;\n      }\n\n      for (var attrName in revertData.attributes) {\n        var attrValue = revertData.attributes[attrName]; // When the attribute has **not** been set before #apply().\n\n        if (attrValue === null) {\n          node.removeAttribute(attrName);\n        } else {\n          node.setAttribute(attrName, attrValue);\n        }\n      }\n\n      for (var i = 0; i < revertData.children.length; ++i) {\n        this._revertTemplateFromNode(node.childNodes[i], revertData.children[i]);\n      }\n    }\n  }], [{\n    key: \"bind\",\n    value: function bind(observable, emitter) {\n      return {\n        to: function to(eventNameOrFunctionOrAttribute, callback) {\n          return new TemplateToBinding({\n            eventNameOrFunction: eventNameOrFunctionOrAttribute,\n            attribute: eventNameOrFunctionOrAttribute,\n            observable: observable,\n            emitter: emitter,\n            callback: callback\n          });\n        },\n        if: function _if(attribute, valueIfTrue, callback) {\n          return new TemplateIfBinding({\n            observable: observable,\n            emitter: emitter,\n            attribute: attribute,\n            valueIfTrue: valueIfTrue,\n            callback: callback\n          });\n        }\n      };\n    }\n    /**\n     * Extends an existing {@link module:ui/template~Template} instance with some additional content\n     * from another {@link module:ui/template~TemplateDefinition}.\n     *\n     *\t\tconst bind = Template.bind( observable, emitter );\n     *\n     *\t\tconst template = new Template( {\n     *\t\t\ttag: 'p',\n     *\t\t\tattributes: {\n     *\t\t\t\tclass: 'a',\n     *\t\t\t\tdata-x: bind.to( 'foo' )\n     *\t\t\t},\n     *\t\t\tchildren: [\n     *\t\t\t\t{\n     *\t\t\t\t\ttag: 'span',\n     *\t\t\t\t\tattributes: {\n     *\t\t\t\t\t\tclass: 'b'\n     *\t\t\t\t\t},\n     *\t\t\t\t\tchildren: [\n     *\t\t\t\t\t\t'Span'\n     *\t\t\t\t\t]\n     *\t\t\t\t}\n     *\t\t\t]\n     *\t\t } );\n     *\n     *\t\t// Instance-level extension.\n     *\t\tTemplate.extend( template, {\n     *\t\t\tattributes: {\n     *\t\t\t\tclass: 'b',\n     *\t\t\t\tdata-x: bind.to( 'bar' )\n     *\t\t\t},\n     *\t\t\tchildren: [\n     *\t\t\t\t{\n     *\t\t\t\t\tattributes: {\n     *\t\t\t\t\t\tclass: 'c'\n     *\t\t\t\t\t}\n     *\t\t\t\t}\n     *\t\t\t]\n     *\t\t} );\n     *\n     *\t\t// Child extension.\n     *\t\tTemplate.extend( template.children[ 0 ], {\n     *\t\t\tattributes: {\n     *\t\t\t\tclass: 'd'\n     *\t\t\t}\n     *\t\t} );\n     *\n     * the `outerHTML` of `template.render()` is:\n     *\n     *\t\t<p class=\"a b\" data-x=\"{ observable.foo } { observable.bar }\">\n     *\t\t\t<span class=\"b c d\">Span</span>\n     *\t\t</p>\n     *\n     * @param {module:ui/template~Template} template An existing template instance to be extended.\n     * @param {module:ui/template~TemplateDefinition} def Additional definition to be applied to a template.\n     */\n\n  }, {\n    key: \"extend\",\n    value: function extend(template, def) {\n      if (template._isRendered) {\n        /**\n         * Extending a template after rendering may not work as expected. To make sure\n         * the {@link module:ui/template~Template.extend extending} works for an element,\n         * make sure it happens before {@link #render} is called.\n         *\n         * @error template-extend-render\n         */\n        log.warn('template-extend-render: Attempting to extend a template which has already been rendered.');\n      }\n\n      extendTemplate(template, normalize(clone(def)));\n    }\n  }]);\n\n  return Template;\n}();\n\nexport { Template as default };\nmix(Template, EmitterMixin);\n/**\n * Describes a binding created by the {@link module:ui/template~Template.bind} interface.\n *\n * @protected\n */\n\nexport var TemplateBinding =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of the {@link module:ui/template~TemplateBinding} class.\n   *\n   * @param {module:ui/template~TemplateDefinition} def The definition of the binding.\n   */\n  function TemplateBinding(def) {\n    _classCallCheck(this, TemplateBinding);\n\n    Object.assign(this, def);\n    /**\n     * An observable instance of the binding. It either:\n     *\n     * * provides the attribute with the value,\n     * * or passes the event when a corresponding DOM event is fired.\n     *\n     * @member {module:utils/observablemixin~ObservableMixin} module:ui/template~TemplateBinding#observable\n     */\n\n    /**\n     * An {@link module:utils/emittermixin~Emitter} used by the binding to:\n     *\n     * * listen to the attribute change in the {@link module:ui/template~TemplateBinding#observable},\n     * * or listen to the event in the DOM.\n     *\n     * @member {module:utils/emittermixin~EmitterMixin} module:ui/template~TemplateBinding#emitter\n     */\n\n    /**\n     * The name of the {@link module:ui/template~TemplateBinding#observable observed attribute}.\n     *\n     * @member {String} module:ui/template~TemplateBinding#attribute\n     */\n\n    /**\n     * A custom function to process the value of the {@link module:ui/template~TemplateBinding#attribute}.\n     *\n     * @member {Function} [module:ui/template~TemplateBinding#callback]\n     */\n  }\n  /**\n   * Returns the value of the binding. It is the value of the {@link module:ui/template~TemplateBinding#attribute} in\n   * {@link module:ui/template~TemplateBinding#observable}. The value may be processed by the\n   * {@link module:ui/template~TemplateBinding#callback}, if such has been passed to the binding.\n   *\n   * @param {Node} [node] A native DOM node, passed to the custom {@link module:ui/template~TemplateBinding#callback}.\n   * @returns {*} The value of {@link module:ui/template~TemplateBinding#attribute} in\n   * {@link module:ui/template~TemplateBinding#observable}.\n   */\n\n\n  _createClass(TemplateBinding, [{\n    key: \"getValue\",\n    value: function getValue(node) {\n      var value = this.observable[this.attribute];\n      return this.callback ? this.callback(value, node) : value;\n    }\n    /**\n     * Activates the listener which waits for changes of the {@link module:ui/template~TemplateBinding#attribute} in\n     * {@link module:ui/template~TemplateBinding#observable}, then updates the DOM with the aggregated\n     * value of {@link module:ui/template~TemplateValueSchema}.\n     *\n     * @param {module:ui/template~TemplateValueSchema} schema A full schema to generate an attribute or text in the DOM.\n     * @param {Function} updater A DOM updater function used to update the native DOM attribute or text.\n     * @param {module:ui/template~RenderData} data Rendering data.\n     * @returns {Function} A function to sever the listener binding.\n     */\n\n  }, {\n    key: \"activateAttributeListener\",\n    value: function activateAttributeListener(schema, updater, data) {\n      var _this2 = this;\n\n      var callback = function callback() {\n        return syncValueSchemaValue(schema, updater, data);\n      };\n\n      this.emitter.listenTo(this.observable, 'change:' + this.attribute, callback); // Allows revert of the listener.\n\n      return function () {\n        _this2.emitter.stopListening(_this2.observable, 'change:' + _this2.attribute, callback);\n      };\n    }\n  }]);\n\n  return TemplateBinding;\n}();\n/**\n * Describes either:\n *\n * * a binding to an {@link module:utils/observablemixin~Observable},\n * * or a native DOM event binding.\n *\n * It is created by the {@link module:ui/template~BindChain#to} method.\n *\n * @protected\n */\n\nexport var TemplateToBinding =\n/*#__PURE__*/\nfunction (_TemplateBinding) {\n  _inherits(TemplateToBinding, _TemplateBinding);\n\n  function TemplateToBinding() {\n    _classCallCheck(this, TemplateToBinding);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TemplateToBinding).apply(this, arguments));\n  }\n\n  _createClass(TemplateToBinding, [{\n    key: \"activateDomEventListener\",\n\n    /**\n     * Activates the listener for the native DOM event, which when fired, is propagated by\n     * the {@link module:ui/template~TemplateBinding#emitter}.\n     *\n     * @param {String} domEvtName The name of the native DOM event.\n     * @param {String} domSelector The selector in the DOM to filter delegated events.\n     * @param {module:ui/template~RenderData} data Rendering data.\n     * @returns {Function} A function to sever the listener binding.\n     */\n    value: function activateDomEventListener(domEvtName, domSelector, data) {\n      var _this3 = this;\n\n      var callback = function callback(evt, domEvt) {\n        if (!domSelector || domEvt.target.matches(domSelector)) {\n          if (typeof _this3.eventNameOrFunction == 'function') {\n            _this3.eventNameOrFunction(domEvt);\n          } else {\n            _this3.observable.fire(_this3.eventNameOrFunction, domEvt);\n          }\n        }\n      };\n\n      this.emitter.listenTo(data.node, domEvtName, callback); // Allows revert of the listener.\n\n      return function () {\n        _this3.emitter.stopListening(data.node, domEvtName, callback);\n      };\n    }\n  }]);\n\n  return TemplateToBinding;\n}(TemplateBinding);\n/**\n * Describes a binding to {@link module:utils/observablemixin~ObservableMixin} created by the {@link module:ui/template~BindChain#if}\n * method.\n *\n * @protected\n */\n\nexport var TemplateIfBinding =\n/*#__PURE__*/\nfunction (_TemplateBinding2) {\n  _inherits(TemplateIfBinding, _TemplateBinding2);\n\n  function TemplateIfBinding() {\n    _classCallCheck(this, TemplateIfBinding);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TemplateIfBinding).apply(this, arguments));\n  }\n\n  _createClass(TemplateIfBinding, [{\n    key: \"getValue\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function getValue(node) {\n      var value = _get(_getPrototypeOf(TemplateIfBinding.prototype), \"getValue\", this).call(this, node);\n\n      return isFalsy(value) ? false : this.valueIfTrue || true;\n    }\n    /**\n     * The value of the DOM attribute or text to be set if the {@link module:ui/template~TemplateBinding#attribute} in\n     * {@link module:ui/template~TemplateBinding#observable} is `true`.\n     *\n     * @member {String} [module:ui/template~TemplateIfBinding#valueIfTrue]\n     */\n\n  }]);\n\n  return TemplateIfBinding;\n}(TemplateBinding); // Checks whether given {@link module:ui/template~TemplateValueSchema} contains a\n// {@link module:ui/template~TemplateBinding}.\n//\n// @param {module:ui/template~TemplateValueSchema} schema\n// @returns {Boolean}\n\nfunction hasTemplateBinding(schema) {\n  if (!schema) {\n    return false;\n  } // Normalize attributes with additional data like namespace:\n  //\n  //\t\tclass: {\n  //\t\t\tns: 'abc',\n  //\t\t\tvalue: [ ... ]\n  //\t\t}\n  //\n\n\n  if (schema.value) {\n    schema = schema.value;\n  }\n\n  if (Array.isArray(schema)) {\n    return schema.some(hasTemplateBinding);\n  } else if (schema instanceof TemplateBinding) {\n    return true;\n  }\n\n  return false;\n} // Assembles the value using {@link module:ui/template~TemplateValueSchema} and stores it in a form of\n// an Array. Each entry of the Array corresponds to one of {@link module:ui/template~TemplateValueSchema}\n// items.\n//\n// @param {module:ui/template~TemplateValueSchema} schema\n// @param {Node} node DOM Node updated when {@link module:utils/observablemixin~ObservableMixin} changes.\n// @returns {Array}\n\n\nfunction getValueSchemaValue(schema, node) {\n  return schema.map(function (schemaItem) {\n    // Process {@link module:ui/template~TemplateBinding} bindings.\n    if (schemaItem instanceof TemplateBinding) {\n      return schemaItem.getValue(node);\n    } // All static values like strings, numbers, and \"falsy\" values (false, null, undefined, '', etc.) just pass.\n\n\n    return schemaItem;\n  });\n} // A function executed each time the bound Observable attribute changes, which updates the DOM with a value\n// constructed from {@link module:ui/template~TemplateValueSchema}.\n//\n// @param {module:ui/template~TemplateValueSchema} schema\n// @param {Function} updater A function which updates the DOM (like attribute or text).\n// @param {Node} node DOM Node updated when {@link module:utils/observablemixin~ObservableMixin} changes.\n\n\nfunction syncValueSchemaValue(schema, updater, _ref3) {\n  var node = _ref3.node;\n  var value = getValueSchemaValue(schema, node); // Check if schema is a single Template.bind.if, like:\n  //\n  //\t\tclass: Template.bind.if( 'foo' )\n  //\n\n  if (schema.length == 1 && schema[0] instanceof TemplateIfBinding) {\n    value = value[0];\n  } else {\n    value = value.reduce(arrayValueReducer, '');\n  }\n\n  if (isFalsy(value)) {\n    updater.remove();\n  } else {\n    updater.set(value);\n  }\n} // Returns an object consisting of `set` and `remove` functions, which\n// can be used in the context of DOM Node to set or reset `textContent`.\n// @see module:ui/view~View#_bindToObservable\n//\n// @param {Node} node DOM Node to be modified.\n// @returns {Object}\n\n\nfunction getTextUpdater(node) {\n  return {\n    set: function set(value) {\n      node.textContent = value;\n    },\n    remove: function remove() {\n      node.textContent = '';\n    }\n  };\n} // Returns an object consisting of `set` and `remove` functions, which\n// can be used in the context of DOM Node to set or reset an attribute.\n// @see module:ui/view~View#_bindToObservable\n//\n// @param {Node} node DOM Node to be modified.\n// @param {String} attrName Name of the attribute to be modified.\n// @param {String} [ns=null] Namespace to use.\n// @returns {Object}\n\n\nfunction getAttributeUpdater(el, attrName, ns) {\n  return {\n    set: function set(value) {\n      el.setAttributeNS(ns, attrName, value);\n    },\n    remove: function remove() {\n      el.removeAttributeNS(ns, attrName);\n    }\n  };\n} // Returns an object consisting of `set` and `remove` functions, which\n// can be used in the context of CSSStyleDeclaration to set or remove a style.\n// @see module:ui/view~View#_bindToObservable\n//\n// @param {Node} node DOM Node to be modified.\n// @param {String} styleName Name of the style to be modified.\n// @returns {Object}\n\n\nfunction getStyleUpdater(el, styleName) {\n  return {\n    set: function set(value) {\n      el.style[styleName] = value;\n    },\n    remove: function remove() {\n      el.style[styleName] = null;\n    }\n  };\n} // Clones definition of the template.\n//\n// @param {module:ui/template~TemplateDefinition} def\n// @returns {module:ui/template~TemplateDefinition}\n\n\nfunction clone(def) {\n  var clone = cloneDeepWith(def, function (value) {\n    // Don't clone the `Template.bind`* bindings because of the references to Observable\n    // and DomEmitterMixin instances inside, which would also be traversed and cloned by greedy\n    // cloneDeepWith algorithm. There's no point in cloning Observable/DomEmitterMixins\n    // along with the definition.\n    //\n    // Don't clone Template instances if provided as a child. They're simply #render()ed\n    // and nothing should interfere.\n    //\n    // Also don't clone View instances if provided as a child of the Template. The template\n    // instance will be extracted from the View during the normalization and there's no need\n    // to clone it.\n    if (value && (value instanceof TemplateBinding || isTemplate(value) || isView(value) || isViewCollection(value))) {\n      return value;\n    }\n  });\n  return clone;\n} // Normalizes given {@link module:ui/template~TemplateDefinition}.\n//\n// See:\n//  * {@link normalizeAttributes}\n//  * {@link normalizeListeners}\n//  * {@link normalizePlainTextDefinition}\n//  * {@link normalizeTextDefinition}\n//\n// @param {module:ui/template~TemplateDefinition} def\n// @returns {module:ui/template~TemplateDefinition} Normalized definition.\n\n\nfunction normalize(def) {\n  if (typeof def == 'string') {\n    def = normalizePlainTextDefinition(def);\n  } else if (def.text) {\n    normalizeTextDefinition(def);\n  }\n\n  if (def.on) {\n    def.eventListeners = normalizeListeners(def.on); // Template mixes EmitterMixin, so delete #on to avoid collision.\n\n    delete def.on;\n  }\n\n  if (!def.text) {\n    if (def.attributes) {\n      normalizeAttributes(def.attributes);\n    }\n\n    var children = [];\n\n    if (def.children) {\n      if (isViewCollection(def.children)) {\n        children.push(def.children);\n      } else {\n        var _iteratorNormalCompletion6 = true;\n        var _didIteratorError6 = false;\n        var _iteratorError6 = undefined;\n\n        try {\n          for (var _iterator6 = def.children[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n            var child = _step6.value;\n\n            if (isTemplate(child) || isView(child) || isNode(child)) {\n              children.push(child);\n            } else {\n              children.push(new Template(child));\n            }\n          }\n        } catch (err) {\n          _didIteratorError6 = true;\n          _iteratorError6 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n              _iterator6.return();\n            }\n          } finally {\n            if (_didIteratorError6) {\n              throw _iteratorError6;\n            }\n          }\n        }\n      }\n    }\n\n    def.children = children;\n  }\n\n  return def;\n} // Normalizes \"attributes\" section of {@link module:ui/template~TemplateDefinition}.\n//\n//\t\tattributes: {\n//\t\t\ta: 'bar',\n//\t\t\tb: {@link module:ui/template~TemplateBinding},\n//\t\t\tc: {\n//\t\t\t\tvalue: 'bar'\n//\t\t\t}\n//\t\t}\n//\n// becomes\n//\n//\t\tattributes: {\n//\t\t\ta: [ 'bar' ],\n//\t\t\tb: [ {@link module:ui/template~TemplateBinding} ],\n//\t\t\tc: {\n//\t\t\t\tvalue: [ 'bar' ]\n//\t\t\t}\n//\t\t}\n//\n// @param {Object} attrs\n\n\nfunction normalizeAttributes(attrs) {\n  for (var a in attrs) {\n    if (attrs[a].value) {\n      attrs[a].value = [].concat(attrs[a].value);\n    }\n\n    arrayify(attrs, a);\n  }\n} // Normalizes \"on\" section of {@link module:ui/template~TemplateDefinition}.\n//\n//\t\ton: {\n//\t\t\ta: 'bar',\n//\t\t\tb: {@link module:ui/template~TemplateBinding},\n//\t\t\tc: [ {@link module:ui/template~TemplateBinding}, () => { ... } ]\n//\t\t}\n//\n// becomes\n//\n//\t\ton: {\n//\t\t\ta: [ 'bar' ],\n//\t\t\tb: [ {@link module:ui/template~TemplateBinding} ],\n//\t\t\tc: [ {@link module:ui/template~TemplateBinding}, () => { ... } ]\n//\t\t}\n//\n// @param {Object} listeners\n// @returns {Object} Object containing normalized listeners.\n\n\nfunction normalizeListeners(listeners) {\n  for (var l in listeners) {\n    arrayify(listeners, l);\n  }\n\n  return listeners;\n} // Normalizes \"string\" {@link module:ui/template~TemplateDefinition}.\n//\n//\t\t\"foo\"\n//\n// becomes\n//\n//\t\t{ text: [ 'foo' ] },\n//\n// @param {String} def\n// @returns {module:ui/template~TemplateDefinition} Normalized template definition.\n\n\nfunction normalizePlainTextDefinition(def) {\n  return {\n    text: [def]\n  };\n} // Normalizes text {@link module:ui/template~TemplateDefinition}.\n//\n//\t\tchildren: [\n//\t\t\t{ text: 'def' },\n//\t\t\t{ text: {@link module:ui/template~TemplateBinding} }\n//\t\t]\n//\n// becomes\n//\n//\t\tchildren: [\n//\t\t\t{ text: [ 'def' ] },\n//\t\t\t{ text: [ {@link module:ui/template~TemplateBinding} ] }\n//\t\t]\n//\n// @param {module:ui/template~TemplateDefinition} def\n\n\nfunction normalizeTextDefinition(def) {\n  if (!Array.isArray(def.text)) {\n    def.text = [def.text];\n  }\n} // Wraps an entry in Object in an Array, if not already one.\n//\n//\t\t{\n//\t\t\tx: 'y',\n//\t\t\ta: [ 'b' ]\n//\t\t}\n//\n// becomes\n//\n//\t\t{\n//\t\t\tx: [ 'y' ],\n//\t\t\ta: [ 'b' ]\n//\t\t}\n//\n// @param {Object} obj\n// @param {String} key\n\n\nfunction arrayify(obj, key) {\n  if (!Array.isArray(obj[key])) {\n    obj[key] = [obj[key]];\n  }\n} // A helper which concatenates the value avoiding unwanted\n// leading white spaces.\n//\n// @param {String} prev\n// @param {String} cur\n// @returns {String}\n\n\nfunction arrayValueReducer(prev, cur) {\n  if (isFalsy(cur)) {\n    return prev;\n  } else if (isFalsy(prev)) {\n    return cur;\n  } else {\n    return \"\".concat(prev, \" \").concat(cur);\n  }\n} // Extends one object defined in the following format:\n//\n//\t\t{\n//\t\t\tkey1: [Array1],\n//\t\t\tkey2: [Array2],\n//\t\t\t...\n//\t\t\tkeyN: [ArrayN]\n//\t\t}\n//\n// with another object of the same data format.\n//\n// @param {Object} obj Base object.\n// @param {Object} ext Object extending base.\n// @returns {String}\n\n\nfunction extendObjectValueArray(obj, ext) {\n  for (var a in ext) {\n    if (obj[a]) {\n      var _obj$a;\n\n      (_obj$a = obj[a]).push.apply(_obj$a, _toConsumableArray(ext[a]));\n    } else {\n      obj[a] = ext[a];\n    }\n  }\n} // A helper for {@link module:ui/template~Template#extend}. Recursively extends {@link module:ui/template~Template} instance\n// with content from {@link module:ui/template~TemplateDefinition}. See {@link module:ui/template~Template#extend} to learn more.\n//\n// @param {module:ui/template~Template} def A template instance to be extended.\n// @param {module:ui/template~TemplateDefinition} def A definition which is to extend the template instance.\n\n\nfunction extendTemplate(template, def) {\n  if (def.attributes) {\n    if (!template.attributes) {\n      template.attributes = {};\n    }\n\n    extendObjectValueArray(template.attributes, def.attributes);\n  }\n\n  if (def.eventListeners) {\n    if (!template.eventListeners) {\n      template.eventListeners = {};\n    }\n\n    extendObjectValueArray(template.eventListeners, def.eventListeners);\n  }\n\n  if (def.text) {\n    var _template$text;\n\n    (_template$text = template.text).push.apply(_template$text, _toConsumableArray(def.text));\n  }\n\n  if (def.children && def.children.length) {\n    if (template.children.length != def.children.length) {\n      /**\n       * The number of children in extended definition does not match.\n       *\n       * @error ui-template-extend-children-mismatch\n       */\n      throw new CKEditorError('ui-template-extend-children-mismatch: The number of children in extended definition does not match.');\n    }\n\n    var childIndex = 0;\n    var _iteratorNormalCompletion7 = true;\n    var _didIteratorError7 = false;\n    var _iteratorError7 = undefined;\n\n    try {\n      for (var _iterator7 = def.children[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n        var childDef = _step7.value;\n        extendTemplate(template.children[childIndex++], childDef);\n      }\n    } catch (err) {\n      _didIteratorError7 = true;\n      _iteratorError7 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n          _iterator7.return();\n        }\n      } finally {\n        if (_didIteratorError7) {\n          throw _iteratorError7;\n        }\n      }\n    }\n  }\n} // Checks if value is \"falsy\".\n// Note: 0 (Number) is not \"falsy\" in this context.\n//\n// @private\n// @param {*} value Value to be checked.\n\n\nfunction isFalsy(value) {\n  return !value && value !== 0;\n} // Checks if the item is an instance of {@link module:ui/view~View}\n//\n// @private\n// @param {*} value Value to be checked.\n\n\nfunction isView(item) {\n  return item instanceof View;\n} // Checks if the item is an instance of {@link module:ui/template~Template}\n//\n// @private\n// @param {*} value Value to be checked.\n\n\nfunction isTemplate(item) {\n  return item instanceof Template;\n} // Checks if the item is an instance of {@link module:ui/viewcollection~ViewCollection}\n//\n// @private\n// @param {*} value Value to be checked.\n\n\nfunction isViewCollection(item) {\n  return item instanceof ViewCollection;\n} // Creates an empty skeleton for {@link module:ui/template~Template#revert}\n// data.\n//\n// @private\n\n\nfunction getEmptyRevertData() {\n  return {\n    children: [],\n    bindings: [],\n    attributes: {}\n  };\n} // Checks whether an attribute should be extended when\n// {@link module:ui/template~Template#apply} is called.\n//\n// @private\n// @param {String} attrName Attribute name to check.\n\n\nfunction shouldExtend(attrName) {\n  return attrName == 'class' || attrName == 'style';\n}\n/**\n * A definition of the {@link module:ui/template~Template}. It describes what kind of\n * node a template will render (HTML element or text), attributes of an element, DOM event\n * listeners and children.\n *\n * Also see:\n * * {@link module:ui/template~TemplateValueSchema} to learn about HTML element attributes,\n * * {@link module:ui/template~TemplateListenerSchema} to learn about DOM event listeners.\n *\n * A sample definition on an HTML element can look like this:\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\t\t\tchildren: [\n *\t\t\t\t{\n *\t\t\t\t\ttag: 'span',\n *\t\t\t\t\tattributes: { ... },\n *\t\t\t\t\tchildren: [ ... ],\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\ttext: 'static–text'\n *\t\t\t\t},\n *\t\t\t\t'also-static–text',\n *\t\t\t],\n *\t\t\tattributes: {\n *\t\t\t\tclass: {@link module:ui/template~TemplateValueSchema},\n *\t\t\t\tid: {@link module:ui/template~TemplateValueSchema},\n *\t\t\t\tstyle: {@link module:ui/template~TemplateValueSchema}\n *\n *\t\t\t\t// ...\n *\t\t\t},\n *\t\t\ton: {\n *\t\t\t\t'click': {@link module:ui/template~TemplateListenerSchema}\n *\n *\t\t\t\t// Document.querySelector format is also accepted.\n *\t\t\t\t'keyup@a.some-class': {@link module:ui/template~TemplateListenerSchema}\n *\n *\t\t\t\t// ...\n *\t\t\t}\n *\t\t} );\n *\n * A {@link module:ui/view~View}, another {@link module:ui/template~Template} or a native DOM node\n * can also become a child of a template. When a view is passed, its {@link module:ui/view~View#element} is used:\n *\n *\t\tconst view = new SomeView();\n *\t\tconst childTemplate = new Template( { ... } );\n *\t\tconst childNode = document.createElement( 'b' );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\n *\t\t\tchildren: [\n *\t\t\t\t// view#element will be added as a child of this <p>.\n *\t\t\t\tview,\n *\n * \t\t\t\t// The output of childTemplate.render() will be added here.\n *\t\t\t\tchildTemplate,\n *\n *\t\t\t\t// Native DOM nodes are included directly in the rendered output.\n *\t\t\t\tchildNode\n *\t\t\t]\n *\t\t} );\n *\n * An entire {@link module:ui/viewcollection~ViewCollection} can be used as a child in the definition:\n *\n *\t\tconst collection = new ViewCollection();\n *\t\tcollection.add( someView );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\n *\t\t\tchildren: collection\n *\t\t} );\n *\n * @typedef module:ui/template~TemplateDefinition\n * @type Object\n *\n * @property {String} tag See the template {@link module:ui/template~Template#tag} property.\n *\n * @property {Array.<module:ui/template~TemplateDefinition>} [children]\n * See the template {@link module:ui/template~Template#children} property.\n *\n * @property {Object.<String, module:ui/template~TemplateValueSchema>} [attributes]\n * See the template {@link module:ui/template~Template#attributes} property.\n *\n * @property {String|module:ui/template~TemplateValueSchema|Array.<String|module:ui/template~TemplateValueSchema>} [text]\n * See the template {@link module:ui/template~Template#text} property.\n *\n * @property {Object.<String, module:ui/template~TemplateListenerSchema>} [on]\n * See the template {@link module:ui/template~Template#eventListeners} property.\n */\n\n/**\n * Describes a value of an HTML element attribute or `textContent`. It allows combining multiple\n * data sources like static values and {@link module:utils/observablemixin~Observable} attributes.\n *\n * Also see:\n * * {@link module:ui/template~TemplateDefinition} to learn where to use it,\n * * {@link module:ui/template~Template.bind} to learn how to configure\n * {@link module:utils/observablemixin~Observable} attribute bindings,\n * * {@link module:ui/template~Template#render} to learn how to render a template,\n * * {@link module:ui/template~BindChain#to `to()`} and {@link module:ui/template~BindChain#if `if()`}\n * methods to learn more about bindings.\n *\n * Attribute values can be described in many different ways:\n *\n *\t\t// Bind helper will create bindings to attributes of the observable.\n *\t\tconst bind = Template.bind( observable, emitter );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\t\t\tattributes: {\n *\t\t\t\t// A plain string schema.\n *\t\t\t\t'class': 'static-text',\n *\n *\t\t\t\t// An object schema, binds to the \"foo\" attribute of the\n *\t\t\t\t// observable and follows its value.\n *\t\t\t\t'class': bind.to( 'foo' ),\n *\n *\t\t\t\t// An array schema, combines the above.\n *\t\t\t\t'class': [\n *\t\t\t\t\t'static-text',\n *\t\t\t\t\tbind.to( 'bar', () => { ... } ),\n *\n * \t\t\t\t\t// Bindings can also be conditional.\n *\t\t\t\t\tbind.if( 'baz', 'class-when-baz-is-true' )\n *\t\t\t\t],\n *\n *\t\t\t\t// An array schema, with a custom namespace, e.g. useful for creating SVGs.\n *\t\t\t\t'class': {\n *\t\t\t\t\tns: 'http://ns.url',\n *\t\t\t\t\tvalue: [\n *\t\t\t\t\t\tbind.if( 'baz', 'value-when-true' ),\n *\t\t\t\t\t\t'static-text'\n *\t\t\t\t\t]\n *\t\t\t\t},\n *\n *\t\t\t\t// An object schema, specific for styles.\n *\t\t\t\tstyle: {\n *\t\t\t\t\tcolor: 'red',\n *\t\t\t\t\tbackgroundColor: bind.to( 'qux', () => { ... } )\n *\t\t\t\t}\n *\t\t\t}\n *\t\t} );\n *\n * Text nodes can also have complex values:\n *\n *\t\tconst bind = Template.bind( observable, emitter );\n *\n *\t\t// Will render a \"foo\" text node.\n *\t\tnew Template( {\n *\t\t\ttext: 'foo'\n *\t\t} );\n *\n *\t\t// Will render a \"static text: {observable.foo}\" text node.\n *\t\t// The text of the node will be updated as the \"foo\" attribute changes.\n *\t\tnew Template( {\n *\t\t\ttext: [\n *\t\t\t\t'static text: ',\n *\t\t\t\tbind.to( 'foo', () => { ... } )\n *\t\t\t]\n *\t\t} );\n *\n * @typedef module:ui/template~TemplateValueSchema\n * @type {Object|String|Array}\n */\n\n/**\n * Describes an event listener attached to an HTML element. Such listener can propagate DOM events\n * through an {@link module:utils/observablemixin~Observable} instance, execute custom callbacks\n * or both, if necessary.\n *\n * Also see:\n * * {@link module:ui/template~TemplateDefinition} to learn more about template definitions,\n * * {@link module:ui/template~BindChain#to `to()`} method to learn more about bindings.\n *\n * Check out different ways of attaching event listeners below:\n *\n *\t\t// Bind helper will propagate events through the observable.\n *\t\tconst bind = Template.bind( observable, emitter );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\t\t\ton: {\n *\t\t\t\t// An object schema. The observable will fire the \"clicked\" event upon DOM \"click\".\n *\t\t\t\tclick: bind.to( 'clicked' )\n *\n *\t\t\t\t// An object schema. It will work for \"click\" event on \"a.foo\" children only.\n *\t\t\t\t'click@a.foo': bind.to( 'clicked' )\n *\n *\t\t\t\t// An array schema, makes the observable propagate multiple events.\n *\t\t\t\tclick: [\n *\t\t\t\t\tbind.to( 'clicked' ),\n *\t\t\t\t\tbind.to( 'executed' )\n *\t\t\t\t],\n *\n *\t\t\t\t// An array schema with a custom callback.\n *\t\t\t\t'click@a.foo': {\n *\t\t\t\t\tbind.to( 'clicked' ),\n *\t\t\t\t\tbind.to( evt => {\n *\t\t\t\t\t\tconsole.log( `${ evt.target } has been clicked!` );\n *\t\t\t\t\t} }\n *\t\t\t\t}\n *\t\t\t}\n *\t\t} );\n *\n * @typedef module:ui/template~TemplateListenerSchema\n * @type {Object|String|Array}\n */\n\n/**\n * The return value of {@link ~Template.bind `Template.bind()`}. It provides `to()` and `if()`\n * methods to create the {@link module:utils/observablemixin~Observable observable} attribute and event bindings.\n *\n * @interface module:ui/template~BindChain\n */\n\n/**\n * Binds an {@link module:utils/observablemixin~Observable observable} to either:\n *\n * * an HTML element attribute or a text node `textContent`, so it remains in sync with the observable\n * attribute as it changes,\n * * or an HTML element DOM event, so the DOM events are propagated through an observable.\n *\n * Some common use cases of `to()` bindings are presented below:\n *\n *\t\tconst bind = Template.bind( observable, emitter );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'p',\n *\t\t\tattributes: {\n *\t\t\t\t// class=\"...\" attribute gets bound to `observable#a`\n *\t\t\t\tclass: bind.to( 'a' )\n *\t\t\t},\n *\t\t\tchildren: [\n *\t\t\t\t// <p>...</p> gets bound to observable#b; always `toUpperCase()`.\n *\t\t\t\t{\n *\t\t\t\t\ttext: bind.to( 'b', ( value, node ) => value.toUpperCase() )\n *\t\t\t\t}\n *\t\t\t],\n *\t\t\ton: {\n *\t\t\t\tclick: [\n *\t\t\t\t\t// An observable will fire \"clicked\" upon \"click\" in the DOM.\n *\t\t\t\t\tbind.to( 'clicked' ),\n *\n *\t\t\t\t\t// A custom callback will be executed upon \"click\" in the DOM.\n *\t\t\t\t\tbind.to( () => {\n *\t\t\t\t\t\t...\n *\t\t\t\t\t} )\n *\t\t\t\t]\n *\t\t\t}\n *\t\t} ).render();\n *\n * Learn more about using `to()` in the {@link module:ui/template~TemplateValueSchema} and\n * {@link module:ui/template~TemplateListenerSchema}.\n *\n * @method #to\n * @param {String|Function} eventNameOrFunctionOrAttribute An attribute name of\n * {@link module:utils/observablemixin~Observable} or a DOM event name or an event callback.\n * @param {Function} [callback] Allows for processing of the value. Accepts `Node` and `value` as arguments.\n * @returns {module:ui/template~TemplateBinding}\n */\n\n/**\n * Binds an {@link module:utils/observablemixin~Observable observable} to an HTML element attribute or a text\n * node `textContent` so it remains in sync with the observable attribute as it changes.\n *\n * Unlike {@link module:ui/template~BindChain#to}, it controls the presence of the attribute or `textContent`\n * depending on the \"falseness\" of an {@link module:utils/observablemixin~Observable} attribute.\n *\n *\t\tconst bind = Template.bind( observable, emitter );\n *\n *\t\tnew Template( {\n *\t\t\ttag: 'input',\n *\t\t\tattributes: {\n *\t\t\t\t// <input checked> when `observable#a` is not undefined/null/false/''\n *\t\t\t\t// <input> when `observable#a` is undefined/null/false\n *\t\t\t\tchecked: bind.if( 'a' )\n *\t\t\t},\n *\t\t\tchildren: [\n *\t\t\t\t{\n *\t\t\t\t\t// <input>\"b-is-not-set\"</input> when `observable#b` is undefined/null/false/''\n *\t\t\t\t\t// <input></input> when `observable#b` is not \"falsy\"\n *\t\t\t\t\ttext: bind.if( 'b', 'b-is-not-set', ( value, node ) => !value )\n *\t\t\t\t}\n *\t\t\t]\n *\t\t} ).render();\n *\n * Learn more about using `if()` in the {@link module:ui/template~TemplateValueSchema}.\n *\n * @method #if\n * @param {String} attribute An attribute name of {@link module:utils/observablemixin~Observable} used in the binding.\n * @param {String} [valueIfTrue] Value set when the {@link module:utils/observablemixin~Observable} attribute is not\n * undefined/null/false/'' (empty string).\n * @param {Function} [callback] Allows for processing of the value. Accepts `Node` and `value` as arguments.\n * @returns {module:ui/template~TemplateBinding}\n */\n\n/**\n * The {@link module:ui/template~Template#_renderNode} configuration.\n *\n * @private\n * @interface module:ui/template~RenderData\n */\n\n/**\n * Tells {@link module:ui/template~Template#_renderNode} to render\n * children into `DocumentFragment` first and then append the fragment\n * to the parent element. It is a speed optimization.\n *\n * @member {Boolean} #intoFragment\n */\n\n/**\n * A node which is being rendered.\n *\n * @member {HTMLElement|Text} #node\n */\n\n/**\n * Indicates whether the {@module:ui/template~RenderNodeOptions#node} has\n * been provided by {@module:ui/template~Template#apply}.\n *\n * @member {Boolean} #isApplying\n */\n\n/**\n * An object storing the data that helps {@module:ui/template~Template#revert}\n * bringing back an element to its initial state, i.e. before\n * {@module:ui/template~Template#apply} was called.\n *\n * @member {Object} #revertData\n */","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/treewalker\n */\nimport Element from './element';\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport Position from './position';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * Position iterator class. It allows to iterate forward and backward over the document.\n */\n\nvar TreeWalker =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a range iterator. All parameters are optional, but you have to specify either `boundaries` or `startPosition`.\n   *\n   * @constructor\n   * @param {Object} options Object with configuration.\n   * @param {module:engine/view/range~Range} [options.boundaries=null] Range to define boundaries of the iterator.\n   * @param {module:engine/view/position~Position} [options.startPosition] Starting position.\n   * @param {'forward'|'backward'} [options.direction='forward'] Walking direction.\n   * @param {Boolean} [options.singleCharacters=false] Flag indicating whether all characters from\n   * {@link module:engine/view/text~Text} should be returned as one {@link module:engine/view/text~Text} (`false`) ore one by one as\n   * {@link module:engine/view/textproxy~TextProxy} (`true`).\n   * @param {Boolean} [options.shallow=false] Flag indicating whether iterator should enter elements or not. If the\n   * iterator is shallow child nodes of any iterated node will not be returned along with `elementEnd` tag.\n   * @param {Boolean} [options.ignoreElementEnd=false] Flag indicating whether iterator should ignore `elementEnd`\n   * tags. If the option is true walker will not return a parent node of start position. If this option is `true`\n   * each {@link module:engine/view/element~Element} will be returned once, while if the option is `false` they might be returned\n   * twice: for `'elementStart'` and `'elementEnd'`.\n   */\n  function TreeWalker() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, TreeWalker);\n\n    if (!options.boundaries && !options.startPosition) {\n      /**\n       * Neither boundaries nor starting position have been defined.\n       *\n       * @error view-tree-walker-no-start-position\n       */\n      throw new CKEditorError('view-tree-walker-no-start-position: Neither boundaries nor starting position have been defined.');\n    }\n\n    if (options.direction && options.direction != 'forward' && options.direction != 'backward') {\n      throw new CKEditorError('view-tree-walker-unknown-direction: Only `backward` and `forward` direction allowed.', {\n        direction: options.direction\n      });\n    }\n    /**\n     * Iterator boundaries.\n     *\n     * When the iterator is walking `'forward'` on the end of boundary or is walking `'backward'`\n     * on the start of boundary, then `{ done: true }` is returned.\n     *\n     * If boundaries are not defined they are set before first and after last child of the root node.\n     *\n     * @readonly\n     * @member {module:engine/view/range~Range} module:engine/view/treewalker~TreeWalker#boundaries\n     */\n\n\n    this.boundaries = options.boundaries || null;\n    /**\n     * Iterator position. If start position is not defined then position depends on {@link #direction}. If direction is\n     * `'forward'` position starts form the beginning, when direction is `'backward'` position starts from the end.\n     *\n     * @readonly\n     * @member {module:engine/view/position~Position} module:engine/view/treewalker~TreeWalker#position\n     */\n\n    if (options.startPosition) {\n      this.position = Position._createAt(options.startPosition);\n    } else {\n      this.position = Position._createAt(options.boundaries[options.direction == 'backward' ? 'end' : 'start']);\n    }\n    /**\n     * Walking direction. Defaults `'forward'`.\n     *\n     * @readonly\n     * @member {'backward'|'forward'} module:engine/view/treewalker~TreeWalker#direction\n     */\n\n\n    this.direction = options.direction || 'forward';\n    /**\n     * Flag indicating whether all characters from {@link module:engine/view/text~Text} should be returned as one\n     * {@link module:engine/view/text~Text} or one by one as {@link module:engine/view/textproxy~TextProxy}.\n     *\n     * @readonly\n     * @member {Boolean} module:engine/view/treewalker~TreeWalker#singleCharacters\n     */\n\n    this.singleCharacters = !!options.singleCharacters;\n    /**\n     * Flag indicating whether iterator should enter elements or not. If the iterator is shallow child nodes of any\n     * iterated node will not be returned along with `elementEnd` tag.\n     *\n     * @readonly\n     * @member {Boolean} module:engine/view/treewalker~TreeWalker#shallow\n     */\n\n    this.shallow = !!options.shallow;\n    /**\n     * Flag indicating whether iterator should ignore `elementEnd` tags. If set to `true`, walker will not\n     * return a parent node of the start position. Each {@link module:engine/view/element~Element} will be returned once.\n     * When set to `false` each element might be returned twice: for `'elementStart'` and `'elementEnd'`.\n     *\n     * @readonly\n     * @member {Boolean} module:engine/view/treewalker~TreeWalker#ignoreElementEnd\n     */\n\n    this.ignoreElementEnd = !!options.ignoreElementEnd;\n    /**\n     * Start boundary parent.\n     *\n     * @private\n     * @member {module:engine/view/node~Node} module:engine/view/treewalker~TreeWalker#_boundaryStartParent\n     */\n\n    this._boundaryStartParent = this.boundaries ? this.boundaries.start.parent : null;\n    /**\n     * End boundary parent.\n     *\n     * @private\n     * @member {module:engine/view/node~Node} module:engine/view/treewalker~TreeWalker#_boundaryEndParent\n     */\n\n    this._boundaryEndParent = this.boundaries ? this.boundaries.end.parent : null;\n  }\n  /**\n   * Iterable interface.\n   *\n   * @returns {Iterable.<module:engine/view/treewalker~TreeWalkerValue>}\n   */\n\n\n  _createClass(TreeWalker, [{\n    key: Symbol.iterator,\n    value: function value() {\n      return this;\n    }\n    /**\n     * Moves {@link #position} in the {@link #direction} skipping values as long as the callback function returns `true`.\n     *\n     * For example:\n     *\n     * \t\twalker.skip( value => value.type == 'text' ); // <p>{}foo</p> -> <p>foo[]</p>\n     * \t\twalker.skip( value => true ); // Move the position to the end: <p>{}foo</p> -> <p>foo</p>[]\n     * \t\twalker.skip( value => false ); // Do not move the position.\n     *\n     * @param {Function} skip Callback function. Gets {@link module:engine/view/treewalker~TreeWalkerValue} and should\n     * return `true` if the value should be skipped or `false` if not.\n     */\n\n  }, {\n    key: \"skip\",\n    value: function skip(_skip) {\n      var done, value, prevPosition;\n\n      do {\n        prevPosition = this.position;\n\n        var _this$next = this.next();\n\n        done = _this$next.done;\n        value = _this$next.value;\n      } while (!done && _skip(value));\n\n      if (!done) {\n        this.position = prevPosition;\n      }\n    }\n    /**\n     * Gets the next tree walker's value.\n     *\n     * @returns {module:engine/view/treewalker~TreeWalkerValue} Object implementing iterator interface, returning\n     * information about taken step.\n     */\n\n  }, {\n    key: \"next\",\n    value: function next() {\n      if (this.direction == 'forward') {\n        return this._next();\n      } else {\n        return this._previous();\n      }\n    }\n    /**\n     * Makes a step forward in view. Moves the {@link #position} to the next position and returns the encountered value.\n     *\n     * @private\n     * @returns {Object}\n     * @returns {Boolean} return.done `true` if iterator is done, `false` otherwise.\n     * @returns {module:engine/view/treewalker~TreeWalkerValue} return.value Information about taken step.\n     */\n\n  }, {\n    key: \"_next\",\n    value: function _next() {\n      var position = this.position.clone();\n      var previousPosition = this.position;\n      var parent = position.parent; // We are at the end of the root.\n\n      if (parent.parent === null && position.offset === parent.childCount) {\n        return {\n          done: true\n        };\n      } // We reached the walker boundary.\n\n\n      if (parent === this._boundaryEndParent && position.offset == this.boundaries.end.offset) {\n        return {\n          done: true\n        };\n      } // Get node just after current position.\n\n\n      var node; // Text is a specific parent because it contains string instead of child nodes.\n\n      if (parent instanceof Text) {\n        if (position.isAtEnd) {\n          // Prevent returning \"elementEnd\" for Text node. Skip that value and return the next walker step.\n          this.position = Position._createAfter(parent);\n          return this._next();\n        }\n\n        node = parent.data[position.offset];\n      } else {\n        node = parent.getChild(position.offset);\n      }\n\n      if (node instanceof Element) {\n        if (!this.shallow) {\n          position = new Position(node, 0);\n        } else {\n          position.offset++;\n        }\n\n        this.position = position;\n        return this._formatReturnValue('elementStart', node, previousPosition, position, 1);\n      } else if (node instanceof Text) {\n        if (this.singleCharacters) {\n          position = new Position(node, 0);\n          this.position = position;\n          return this._next();\n        } else {\n          var charactersCount = node.data.length;\n          var item; // If text stick out of walker range, we need to cut it and wrap by TextProxy.\n\n          if (node == this._boundaryEndParent) {\n            charactersCount = this.boundaries.end.offset;\n            item = new TextProxy(node, 0, charactersCount);\n            position = Position._createAfter(item);\n          } else {\n            item = new TextProxy(node, 0, node.data.length); // If not just keep moving forward.\n\n            position.offset++;\n          }\n\n          this.position = position;\n          return this._formatReturnValue('text', item, previousPosition, position, charactersCount);\n        }\n      } else if (typeof node == 'string') {\n        var textLength;\n\n        if (this.singleCharacters) {\n          textLength = 1;\n        } else {\n          // Check if text stick out of walker range.\n          var endOffset = parent === this._boundaryEndParent ? this.boundaries.end.offset : parent.data.length;\n          textLength = endOffset - position.offset;\n        }\n\n        var textProxy = new TextProxy(parent, position.offset, textLength);\n        position.offset += textLength;\n        this.position = position;\n        return this._formatReturnValue('text', textProxy, previousPosition, position, textLength);\n      } else {\n        // `node` is not set, we reached the end of current `parent`.\n        position = Position._createAfter(parent);\n        this.position = position;\n\n        if (this.ignoreElementEnd) {\n          return this._next();\n        } else {\n          return this._formatReturnValue('elementEnd', parent, previousPosition, position);\n        }\n      }\n    }\n    /**\n     * Makes a step backward in view. Moves the {@link #position} to the previous position and returns the encountered value.\n     *\n     * @private\n     * @returns {Object}\n     * @returns {Boolean} return.done True if iterator is done.\n     * @returns {module:engine/view/treewalker~TreeWalkerValue} return.value Information about taken step.\n     */\n\n  }, {\n    key: \"_previous\",\n    value: function _previous() {\n      var position = this.position.clone();\n      var previousPosition = this.position;\n      var parent = position.parent; // We are at the beginning of the root.\n\n      if (parent.parent === null && position.offset === 0) {\n        return {\n          done: true\n        };\n      } // We reached the walker boundary.\n\n\n      if (parent == this._boundaryStartParent && position.offset == this.boundaries.start.offset) {\n        return {\n          done: true\n        };\n      } // Get node just before current position.\n\n\n      var node; // Text {@link module:engine/view/text~Text} element is a specific parent because contains string instead of child nodes.\n\n      if (parent instanceof Text) {\n        if (position.isAtStart) {\n          // Prevent returning \"elementStart\" for Text node. Skip that value and return the next walker step.\n          this.position = Position._createBefore(parent);\n          return this._previous();\n        }\n\n        node = parent.data[position.offset - 1];\n      } else {\n        node = parent.getChild(position.offset - 1);\n      }\n\n      if (node instanceof Element) {\n        if (!this.shallow) {\n          position = new Position(node, node.childCount);\n          this.position = position;\n\n          if (this.ignoreElementEnd) {\n            return this._previous();\n          } else {\n            return this._formatReturnValue('elementEnd', node, previousPosition, position);\n          }\n        } else {\n          position.offset--;\n          this.position = position;\n          return this._formatReturnValue('elementStart', node, previousPosition, position, 1);\n        }\n      } else if (node instanceof Text) {\n        if (this.singleCharacters) {\n          position = new Position(node, node.data.length);\n          this.position = position;\n          return this._previous();\n        } else {\n          var charactersCount = node.data.length;\n          var item; // If text stick out of walker range, we need to cut it and wrap by TextProxy.\n\n          if (node == this._boundaryStartParent) {\n            var offset = this.boundaries.start.offset;\n            item = new TextProxy(node, offset, node.data.length - offset);\n            charactersCount = item.data.length;\n            position = Position._createBefore(item);\n          } else {\n            item = new TextProxy(node, 0, node.data.length); // If not just keep moving backward.\n\n            position.offset--;\n          }\n\n          this.position = position;\n          return this._formatReturnValue('text', item, previousPosition, position, charactersCount);\n        }\n      } else if (typeof node == 'string') {\n        var textLength;\n\n        if (!this.singleCharacters) {\n          // Check if text stick out of walker range.\n          var startOffset = parent === this._boundaryStartParent ? this.boundaries.start.offset : 0;\n          textLength = position.offset - startOffset;\n        } else {\n          textLength = 1;\n        }\n\n        position.offset -= textLength;\n        var textProxy = new TextProxy(parent, position.offset, textLength);\n        this.position = position;\n        return this._formatReturnValue('text', textProxy, previousPosition, position, textLength);\n      } else {\n        // `node` is not set, we reached the beginning of current `parent`.\n        position = Position._createBefore(parent);\n        this.position = position;\n        return this._formatReturnValue('elementStart', parent, previousPosition, position, 1);\n      }\n    }\n    /**\n     * Format returned data and adjust `previousPosition` and `nextPosition` if reach the bound of the {@link module:engine/view/text~Text}.\n     *\n     * @private\n     * @param {module:engine/view/treewalker~TreeWalkerValueType} type Type of step.\n     * @param {module:engine/view/item~Item} item Item between old and new position.\n     * @param {module:engine/view/position~Position} previousPosition Previous position of iterator.\n     * @param {module:engine/view/position~Position} nextPosition Next position of iterator.\n     * @param {Number} [length] Length of the item.\n     * @returns {module:engine/view/treewalker~TreeWalkerValue}\n     */\n\n  }, {\n    key: \"_formatReturnValue\",\n    value: function _formatReturnValue(type, item, previousPosition, nextPosition, length) {\n      // Text is a specific parent, because contains string instead of children.\n      // Walker doesn't enter to the Text except situations when walker is iterating over every single character,\n      // or the bound starts/ends inside the Text. So when the position is at the beginning or at the end of the Text\n      // we move it just before or just after Text.\n      if (item instanceof TextProxy) {\n        // Position is at the end of Text.\n        if (item.offsetInText + item.data.length == item.textNode.data.length) {\n          if (this.direction == 'forward' && !(this.boundaries && this.boundaries.end.isEqual(this.position))) {\n            nextPosition = Position._createAfter(item.textNode); // When we change nextPosition of returned value we need also update walker current position.\n\n            this.position = nextPosition;\n          } else {\n            previousPosition = Position._createAfter(item.textNode);\n          }\n        } // Position is at the begining ot the text.\n\n\n        if (item.offsetInText === 0) {\n          if (this.direction == 'backward' && !(this.boundaries && this.boundaries.start.isEqual(this.position))) {\n            nextPosition = Position._createBefore(item.textNode); // When we change nextPosition of returned value we need also update walker current position.\n\n            this.position = nextPosition;\n          } else {\n            previousPosition = Position._createBefore(item.textNode);\n          }\n        }\n      }\n\n      return {\n        done: false,\n        value: {\n          type: type,\n          item: item,\n          previousPosition: previousPosition,\n          nextPosition: nextPosition,\n          length: length\n        }\n      };\n    }\n  }]);\n\n  return TreeWalker;\n}();\n/**\n * Type of the step made by {@link module:engine/view/treewalker~TreeWalker}.\n * Possible values: `'elementStart'` if walker is at the beginning of a node, `'elementEnd'` if walker is at the end\n * of node, or `'text'` if walker traversed over single and multiple characters.\n * For {@link module:engine/view/text~Text} `elementStart` and `elementEnd` is not returned.\n *\n * @typedef {String} module:engine/view/treewalker~TreeWalkerValueType\n */\n\n/**\n * Object returned by {@link module:engine/view/treewalker~TreeWalker} when traversing tree view.\n *\n * @typedef {Object} module:engine/view/treewalker~TreeWalkerValue\n * @property {module:engine/view/treewalker~TreeWalkerValueType} type\n * @property {module:engine/view/item~Item} item Item between the old and the new positions\n * of the tree walker.\n * @property {module:engine/view/position~Position} previousPosition Previous position of the iterator.\n * * Forward iteration: For `'elementEnd'` it is the last position inside the element. For all other types it is the\n * position before the item.\n * * Backward iteration: For `'elementStart'` it is the first position inside the element. For all other types it is\n * the position after item.\n * * If the position is at the beginning or at the end of the {@link module:engine/view/text~Text} it is always moved from the\n * inside of the text to its parent just before or just after that text.\n * @property {module:engine/view/position~Position} nextPosition Next position of the iterator.\n * * Forward iteration: For `'elementStart'` it is the first position inside the element. For all other types it is\n * the position after the item.\n * * Backward iteration: For `'elementEnd'` it is last position inside element. For all other types it is the position\n * before the item.\n * * If the position is at the beginning or at the end of the {@link module:engine/view/text~Text} it is always moved from the\n * inside of the text to its parent just before or just after that text.\n * @property {Number} [length] Length of the item. For `'elementStart'` it is `1`. For `'text'` it is\n * the length of that text. For `'elementEnd'` it is `undefined`.\n */\n\n/**\n * Tree walking directions.\n *\n * @typedef {'forward'|'backward'} module:engine/view/treewalker~TreeWalkerDirection\n */\n\n\nexport { TreeWalker as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/liveposition\n */\nimport Position from './position';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * `LivePosition` is a type of {@link module:engine/model/position~Position Position}\n * that updates itself as {@link module:engine/model/document~Document document}\n * is changed through operations. It may be used as a bookmark.\n *\n * **Note:** Contrary to {@link module:engine/model/position~Position}, `LivePosition` works only in roots that are\n * {@link module:engine/model/rootelement~RootElement}.\n * If {@link module:engine/model/documentfragment~DocumentFragment} is passed, error will be thrown.\n *\n * **Note:** Be very careful when dealing with `LivePosition`. Each `LivePosition` instance bind events that might\n * have to be unbound.\n * Use {@link module:engine/model/liveposition~LivePosition#detach} whenever you don't need `LivePosition` anymore.\n *\n * @extends module:engine/model/position~Position\n */\n\nvar LivePosition =\n/*#__PURE__*/\nfunction (_Position) {\n  _inherits(LivePosition, _Position);\n\n  /**\n   * Creates a live position.\n   *\n   * @see module:engine/model/position~Position\n   * @param {module:engine/model/rootelement~RootElement} root\n   * @param {Array.<Number>} path\n   * @param {module:engine/model/position~PositionStickiness} [stickiness]\n   */\n  function LivePosition(root, path) {\n    var _this;\n\n    var stickiness = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'toNone';\n\n    _classCallCheck(this, LivePosition);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LivePosition).call(this, root, path, stickiness));\n\n    if (!_this.root.is('rootElement')) {\n      /**\n       * LivePosition's root has to be an instance of RootElement.\n       *\n       * @error liveposition-root-not-rootelement\n       */\n      throw new CKEditorError('model-liveposition-root-not-rootelement: LivePosition\\'s root has to be an instance of RootElement.');\n    }\n\n    bindWithDocument.call(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  /**\n   * Unbinds all events previously bound by `LivePosition`. Use it whenever you don't need `LivePosition` instance\n   * anymore (i.e. when leaving scope in which it was declared or before re-assigning variable that was\n   * referring to it).\n   */\n\n\n  _createClass(LivePosition, [{\n    key: \"detach\",\n    value: function detach() {\n      this.stopListening();\n    }\n    /**\n     * Creates a {@link module:engine/model/position~Position position instance}, which is equal to this live position.\n     *\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"toPosition\",\n    value: function toPosition() {\n      return new Position(this.root, this.path.slice(), this.stickiness);\n    }\n    /**\n     * Creates a `LivePosition` instance that is equal to position.\n     *\n     * @param {module:engine/model/position~Position} position\n     * @param {module:engine/model/position~PositionStickiness} [stickiness]\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }], [{\n    key: \"fromPosition\",\n    value: function fromPosition(position, stickiness) {\n      return new this(position.root, position.path.slice(), stickiness ? stickiness : position.stickiness);\n    }\n    /**\n     * @static\n     * @protected\n     * @method module:engine/model/liveposition~LivePosition._createAfter\n     * @see module:engine/model/position~Position._createAfter\n     * @param {module:engine/model/node~Node} node\n     * @returns {module:engine/model/liveposition~LivePosition}\n     */\n\n    /**\n     * @static\n     * @protected\n     * @method module:engine/model/liveposition~LivePosition._createBefore\n     * @see module:engine/model/position~Position._createBefore\n     * @param {module:engine/model/node~Node} node\n     * @returns {module:engine/model/liveposition~LivePosition}\n     */\n\n    /**\n     * Fired when `LivePosition` instance is changed due to changes on {@link module:engine/model/document~Document}.\n     *\n     * @event module:engine/model/liveposition~LivePosition#change\n     * @param {module:engine/model/position~Position} oldPosition Position equal to this live position before it got changed.\n     */\n\n  }]);\n\n  return LivePosition;\n}(Position); // Binds this `LivePosition` to the {@link module:engine/model/document~Document document} that owns\n// this position's {@link module:engine/model/position~Position#root root}.\n//\n// @private\n\n\nexport { LivePosition as default };\n\nfunction bindWithDocument() {\n  var _this2 = this;\n\n  this.listenTo(this.root.document.model, 'applyOperation', function (event, args) {\n    var operation = args[0];\n\n    if (!operation.isDocumentOperation) {\n      return;\n    }\n\n    transform.call(_this2, operation);\n  }, {\n    priority: 'low'\n  });\n} // Updates this position accordingly to the updates applied to the model. Bases on change events.\n//\n// @private\n// @param {module:engine/model/operation/operation~Operation} operation Executed operation.\n\n\nfunction transform(operation) {\n  var result = this.getTransformedByOperation(operation);\n\n  if (!this.isEqual(result)) {\n    var oldPosition = this.toPosition();\n    this.path = result.path;\n    this.root = result.root;\n    this.fire('change', oldPosition);\n  }\n}\n\nmix(LivePosition, EmitterMixin);","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/attributeelement\n */\nimport Element from './element';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror'; // Default attribute priority.\n\nvar DEFAULT_PRIORITY = 10;\n/**\n * Attribute elements are used to represent formatting elements in the view (think – `<b>`, `<span style=\"font-size: 2em\">`, etc.).\n * Most often they are created when downcasting model text attributes.\n *\n * Editing engine does not define a fixed HTML DTD. This is why a feature developer needs to choose between various\n * types (container element, {@link module:engine/view/attributeelement~AttributeElement attribute element},\n * {@link module:engine/view/emptyelement~EmptyElement empty element}, etc) when developing a feature.\n *\n * To create a new attribute element instance use the\n * {@link module:engine/view/downcastwriter~DowncastWriter#createAttributeElement `DowncastWriter#createAttributeElement()`} method.\n *\n * @extends module:engine/view/element~Element\n */\n\nvar AttributeElement =\n/*#__PURE__*/\nfunction (_Element) {\n  _inherits(AttributeElement, _Element);\n\n  /**\n   * Creates an attribute element.\n   *\n   * @see module:engine/view/downcastwriter~DowncastWriter#createAttributeElement\n   * @see module:engine/view/element~Element\n   * @protected\n   */\n  function AttributeElement(name, attrs, children) {\n    var _this;\n\n    _classCallCheck(this, AttributeElement);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AttributeElement).call(this, name, attrs, children));\n    /**\n     * Returns block {@link module:engine/view/filler filler} offset or `null` if block filler is not needed.\n     *\n     * @method #getFillerOffset\n     * @returns {Number|null} Block filler offset or `null` if block filler is not needed.\n     */\n\n    _this.getFillerOffset = getFillerOffset;\n    /**\n     * Element priority. Decides in what order elements are wrapped by {@link module:engine/view/downcastwriter~DowncastWriter}.\n     *\n     * @protected\n     * @member {Number}\n     */\n\n    _this._priority = DEFAULT_PRIORITY;\n    /**\n     * Element identifier. If set, it is used by {@link module:engine/view/element~Element#isSimilar},\n     * and then two elements are considered similar if, and only if they have the same `_id`.\n     *\n     * @protected\n     * @member {String|Number}\n     */\n\n    _this._id = null;\n    /**\n     * Keeps all the attribute elements that have the same {@link module:engine/view/attributeelement~AttributeElement#id ids}\n     * and still exist in the view tree.\n     *\n     * This property is managed by {@link module:engine/view/downcastwriter~DowncastWriter}.\n     *\n     * @protected\n     * @member {Set.<module:engine/view/attributeelement~AttributeElement>|null}\n     */\n\n    _this._clonesGroup = null;\n    return _this;\n  }\n  /**\n   * Element priority. Decides in what order elements are wrapped by {@link module:engine/view/downcastwriter~DowncastWriter}.\n   *\n   * @readonly\n   * @type {Number}\n   */\n\n\n  _createClass(AttributeElement, [{\n    key: \"getElementsWithSameId\",\n\n    /**\n     * Returns all {@link module:engine/view/attributeelement~AttributeElement attribute elements} that has the\n     * same {@link module:engine/view/attributeelement~AttributeElement#id id} and are in the view tree (were not removed).\n     *\n     * Note: If this element has been removed from the tree, returned set will not include it.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError attribute-element-get-elements-with-same-id-no-id}\n     * if this element has no `id`.\n     *\n     * @returns {Set.<module:engine/view/attributeelement~AttributeElement>} Set containing all the attribute elements\n     * with the same `id` that were added and not removed from the view tree.\n     */\n    value: function getElementsWithSameId() {\n      if (this.id === null) {\n        /**\n         * Cannot get elements with the same id for an attribute element without id.\n         *\n         * @error attribute-element-get-elements-with-same-id-no-id\n         */\n        throw new CKEditorError('attribute-element-get-elements-with-same-id-no-id: ' + 'Cannot get elements with the same id for an attribute element without id.');\n      }\n\n      return new Set(this._clonesGroup);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"is\",\n    value: function is(type) {\n      var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (!name) {\n        return type == 'attributeElement' || _get(_getPrototypeOf(AttributeElement.prototype), \"is\", this).call(this, type);\n      } else {\n        return type == 'attributeElement' && name == this.name || _get(_getPrototypeOf(AttributeElement.prototype), \"is\", this).call(this, type, name);\n      }\n    }\n    /**\n     * Checks if this element is similar to other element.\n     *\n     * If none of elements has set {@link module:engine/view/attributeelement~AttributeElement#id}, then both elements\n     * should have the same name, attributes and priority to be considered as similar. Two similar elements can contain\n     * different set of children nodes.\n     *\n     * If at least one element has {@link module:engine/view/attributeelement~AttributeElement#id} set, then both\n     * elements have to have the same {@link module:engine/view/attributeelement~AttributeElement#id} value to be\n     * considered similar.\n     *\n     * Similarity is important for {@link module:engine/view/downcastwriter~DowncastWriter}. For example:\n     *\n     * * two following similar elements can be merged together into one, longer element,\n     * * {@link module:engine/view/downcastwriter~DowncastWriter#unwrap} checks similarity of passed element and processed element to\n     * decide whether processed element should be unwrapped,\n     * * etc.\n     *\n     * @param {module:engine/view/element~Element} otherElement\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isSimilar\",\n    value: function isSimilar(otherElement) {\n      // If any element has an `id` set, just compare the ids.\n      if (this.id !== null || otherElement.id !== null) {\n        return this.id === otherElement.id;\n      }\n\n      return _get(_getPrototypeOf(AttributeElement.prototype), \"isSimilar\", this).call(this, otherElement) && this.priority == otherElement.priority;\n    }\n    /**\n     * Clones provided element with priority.\n     *\n     * @protected\n     * @param {Boolean} deep If set to `true` clones element and all its children recursively. When set to `false`,\n     * element will be cloned without any children.\n     * @returns {module:engine/view/attributeelement~AttributeElement} Clone of this element.\n     */\n\n  }, {\n    key: \"_clone\",\n    value: function _clone(deep) {\n      var cloned = _get(_getPrototypeOf(AttributeElement.prototype), \"_clone\", this).call(this, deep); // Clone priority too.\n\n\n      cloned._priority = this._priority; // And id too.\n\n      cloned._id = this._id;\n      return cloned;\n    }\n  }, {\n    key: \"priority\",\n    get: function get() {\n      return this._priority;\n    }\n    /**\n     * Element identifier. If set, it is used by {@link module:engine/view/element~Element#isSimilar},\n     * and then two elements are considered similar if, and only if they have the same `id`.\n     *\n     * @readonly\n     * @type {String|Number}\n     */\n\n  }, {\n    key: \"id\",\n    get: function get() {\n      return this._id;\n    }\n  }]);\n\n  return AttributeElement;\n}(Element);\n/**\n * Default attribute priority.\n *\n * @member {Number} module:engine/view/attributeelement~AttributeElement.DEFAULT_PRIORITY\n */\n\n\nexport { AttributeElement as default };\nAttributeElement.DEFAULT_PRIORITY = DEFAULT_PRIORITY; // Returns block {@link module:engine/view/filler~Filler filler} offset or `null` if block filler is not needed.\n//\n// @returns {Number|null} Block filler offset or `null` if block filler is not needed.\n\nfunction getFillerOffset() {\n  // <b>foo</b> does not need filler.\n  if (nonUiChildrenCount(this)) {\n    return null;\n  }\n\n  var element = this.parent; // <p><b></b></p> needs filler -> <p><b><br></b></p>\n\n  while (element && element.is('attributeElement')) {\n    if (nonUiChildrenCount(element) > 1) {\n      return null;\n    }\n\n    element = element.parent;\n  }\n\n  if (!element || nonUiChildrenCount(element) > 1) {\n    return null;\n  } // Render block filler at the end of element (after all ui elements).\n\n\n  return this.childCount;\n} // Returns total count of children that are not {@link module:engine/view/uielement~UIElement UIElements}.\n//\n// @param {module:engine/view/element~Element} element\n// @returns {Number}\n\n\nfunction nonUiChildrenCount(element) {\n  return Array.from(element.getChildren()).filter(function (element) {\n    return !element.is('uiElement');\n  }).length;\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/operation/renameoperation\n */\nimport Operation from './operation';\nimport Element from '../element';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport Position from '../position';\n/**\n * Operation to change element's name.\n *\n * Using this class you can change element's name.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\n\nvar RenameOperation =\n/*#__PURE__*/\nfunction (_Operation) {\n  _inherits(RenameOperation, _Operation);\n\n  /**\n   * Creates an operation that changes element's name.\n   *\n   * @param {module:engine/model/position~Position} position Position before an element to change.\n   * @param {String} oldName Current name of the element.\n   * @param {String} newName New name for the element.\n   * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n   * can be applied or `null` if the operation operates on detached (non-document) tree.\n   */\n  function RenameOperation(position, oldName, newName, baseVersion) {\n    var _this;\n\n    _classCallCheck(this, RenameOperation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RenameOperation).call(this, baseVersion));\n    /**\n     * Position before an element to change.\n     *\n     * @member {module:engine/model/position~Position} module:engine/model/operation/renameoperation~RenameOperation#position\n     */\n\n    _this.position = position; // This position sticks to the next node because it is a position before the node that we want to change.\n\n    _this.position.stickiness = 'toNext';\n    /**\n     * Current name of the element.\n     *\n     * @member {String} module:engine/model/operation/renameoperation~RenameOperation#oldName\n     */\n\n    _this.oldName = oldName;\n    /**\n     * New name for the element.\n     *\n     * @member {String} module:engine/model/operation/renameoperation~RenameOperation#newName\n     */\n\n    _this.newName = newName;\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(RenameOperation, [{\n    key: \"clone\",\n\n    /**\n     * Creates and returns an operation that has the same parameters as this operation.\n     *\n     * @returns {module:engine/model/operation/renameoperation~RenameOperation} Clone of this operation.\n     */\n    value: function clone() {\n      return new RenameOperation(this.position.clone(), this.oldName, this.newName, this.baseVersion);\n    }\n    /**\n     * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n     *\n     * @returns {module:engine/model/operation/renameoperation~RenameOperation}\n     */\n\n  }, {\n    key: \"getReversed\",\n    value: function getReversed() {\n      return new RenameOperation(this.position.clone(), this.newName, this.oldName, this.baseVersion + 1);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_validate\",\n    value: function _validate() {\n      var element = this.position.nodeAfter;\n\n      if (!(element instanceof Element)) {\n        /**\n         * Given position is invalid or node after it is not instance of Element.\n         *\n         * @error rename-operation-wrong-position\n         */\n        throw new CKEditorError('rename-operation-wrong-position: Given position is invalid or node after it is not an instance of Element.');\n      } else if (element.name !== this.oldName) {\n        /**\n         * Element to change has different name than operation's old name.\n         *\n         * @error rename-operation-wrong-name\n         */\n        throw new CKEditorError('rename-operation-wrong-name: Element to change has different name than operation\\'s old name.');\n      }\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_execute\",\n    value: function _execute() {\n      var element = this.position.nodeAfter;\n      element.name = this.newName;\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = _get(_getPrototypeOf(RenameOperation.prototype), \"toJSON\", this).call(this);\n\n      json.position = this.position.toJSON();\n      return json;\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"type\",\n    get: function get() {\n      return 'rename';\n    }\n  }], [{\n    key: \"fromJSON\",\n\n    /**\n     * Creates `RenameOperation` object from deserialized object, i.e. from parsed JSON string.\n     *\n     * @param {Object} json Deserialized JSON object.\n     * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n     * @returns {module:engine/model/operation/attributeoperation~AttributeOperation}\n     */\n    value: function fromJSON(json, document) {\n      return new RenameOperation(Position.fromJSON(json.position, document), json.oldName, json.newName, json.baseVersion);\n    }\n  }, {\n    key: \"className\",\n    get: function get() {\n      return 'RenameOperation';\n    }\n  }]);\n\n  return RenameOperation;\n}(Operation);\n\nexport { RenameOperation as default };","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nexport default isArray;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nexport default DataView;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nexport default Promise;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nexport default Set;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nexport default WeakMap;\n","import DataView from './_DataView.js';\nimport Map from './_Map.js';\nimport Promise from './_Promise.js';\nimport Set from './_Set.js';\nimport WeakMap from './_WeakMap.js';\nimport baseGetTag from './_baseGetTag.js';\nimport toSource from './_toSource.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nexport default getTag;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nexport default nodeUtil;\n","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/matcher\n */\n\n/**\n * View matcher class.\n * Instance of this class can be used to find {@link module:engine/view/element~Element elements} that match given pattern.\n */\nvar Matcher =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates new instance of Matcher.\n   *\n   * @param {String|RegExp|Object} [pattern] Match patterns. See {@link module:engine/view/matcher~Matcher#add add method} for\n   * more information.\n   */\n  function Matcher() {\n    _classCallCheck(this, Matcher);\n\n    /**\n     * @private\n     * @type {Array<String|RegExp|Object>}\n     */\n    this._patterns = [];\n    this.add.apply(this, arguments);\n  }\n  /**\n   * Adds pattern or patterns to matcher instance.\n   *\n   *\t\t// String.\n   *\t\tmatcher.add( 'div' );\n   *\n   *\t\t// Regular expression.\n   *\t\tmatcher.add( /^\\w/ );\n   *\n   *\t\t// Single class.\n   *\t\tmatcher.add( {\n   *\t\t\tclasses: 'foobar'\n   *\t\t} );\n   *\n   * See {@link module:engine/view/matcher~MatcherPattern} for more examples.\n   *\n   * Multiple patterns can be added in one call:\n   *\n   * \t\tmatcher.add( 'div', { classes: 'foobar' } );\n   *\n   * @param {Object|String|RegExp|Function} pattern Object describing pattern details. If string or regular expression\n   * is provided it will be used to match element's name. Pattern can be also provided in a form\n   * of a function - then this function will be called with each {@link module:engine/view/element~Element element} as a parameter.\n   * Function's return value will be stored under `match` key of the object returned from\n   * {@link module:engine/view/matcher~Matcher#match match} or {@link module:engine/view/matcher~Matcher#matchAll matchAll} methods.\n   * @param {String|RegExp} [pattern.name] Name or regular expression to match element's name.\n   * @param {Object} [pattern.attributes] Object with key-value pairs representing attributes to match. Each object key\n   * represents attribute name. Value under that key can be either:\n   * * `true` - then attribute is just required (can be empty),\n   * * a string - then attribute has to be equal, or\n   * * a regular expression - then attribute has to match the expression.\n   * @param {String|RegExp|Array} [pattern.classes] Class name or array of class names to match. Each name can be\n   * provided in a form of string or regular expression.\n   * @param {Object} [pattern.styles] Object with key-value pairs representing styles to match. Each object key\n   * represents style name. Value under that key can be either a string or a regular expression and it will be used\n   * to match style value.\n   */\n\n\n  _createClass(Matcher, [{\n    key: \"add\",\n    value: function add() {\n      for (var _len = arguments.length, pattern = new Array(_len), _key = 0; _key < _len; _key++) {\n        pattern[_key] = arguments[_key];\n      }\n\n      for (var _i = 0; _i < pattern.length; _i++) {\n        var item = pattern[_i];\n\n        // String or RegExp pattern is used as element's name.\n        if (typeof item == 'string' || item instanceof RegExp) {\n          item = {\n            name: item\n          };\n        } // Single class name/RegExp can be provided.\n\n\n        if (item.classes && (typeof item.classes == 'string' || item.classes instanceof RegExp)) {\n          item.classes = [item.classes];\n        }\n\n        this._patterns.push(item);\n      }\n    }\n    /**\n     * Matches elements for currently stored patterns. Returns match information about first found\n     * {@link module:engine/view/element~Element element}, otherwise returns `null`.\n     *\n     * Example of returned object:\n     *\n     *\t\t{\n     *\t\t\telement: <instance of found element>,\n     *\t\t\tpattern: <pattern used to match found element>,\n     *\t\t\tmatch: {\n     *\t\t\t\tname: true,\n     *\t\t\t\tattributes: [ 'title', 'href' ],\n     *\t\t\t\tclasses: [ 'foo' ],\n     *\t\t\t\tstyles: [ 'color', 'position' ]\n     *\t\t\t}\n     *\t\t}\n     *\n     * @see module:engine/view/matcher~Matcher#add\n     * @see module:engine/view/matcher~Matcher#matchAll\n     * @param {...module:engine/view/element~Element} element View element to match against stored patterns.\n     * @returns {Object|null} result\n     * @returns {module:engine/view/element~Element} result.element Matched view element.\n     * @returns {Object|String|RegExp|Function} result.pattern Pattern that was used to find matched element.\n     * @returns {Object} result.match Object representing matched element parts.\n     * @returns {Boolean} [result.match.name] True if name of the element was matched.\n     * @returns {Array} [result.match.attributes] Array with matched attribute names.\n     * @returns {Array} [result.match.classes] Array with matched class names.\n     * @returns {Array} [result.match.styles] Array with matched style names.\n     */\n\n  }, {\n    key: \"match\",\n    value: function match() {\n      for (var _len2 = arguments.length, element = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        element[_key2] = arguments[_key2];\n      }\n\n      for (var _i2 = 0; _i2 < element.length; _i2++) {\n        var singleElement = element[_i2];\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = this._patterns[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var pattern = _step.value;\n            var match = isElementMatching(singleElement, pattern);\n\n            if (match) {\n              return {\n                element: singleElement,\n                pattern: pattern,\n                match: match\n              };\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n\n      return null;\n    }\n    /**\n     * Matches elements for currently stored patterns. Returns array of match information with all found\n     * {@link module:engine/view/element~Element elements}. If no element is found - returns `null`.\n     *\n     * @see module:engine/view/matcher~Matcher#add\n     * @see module:engine/view/matcher~Matcher#match\n     * @param {...module:engine/view/element~Element} element View element to match against stored patterns.\n     * @returns {Array.<Object>|null} Array with match information about found elements or `null`. For more information\n     * see {@link module:engine/view/matcher~Matcher#match match method} description.\n     */\n\n  }, {\n    key: \"matchAll\",\n    value: function matchAll() {\n      var results = [];\n\n      for (var _len3 = arguments.length, element = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        element[_key3] = arguments[_key3];\n      }\n\n      for (var _i3 = 0; _i3 < element.length; _i3++) {\n        var singleElement = element[_i3];\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = this._patterns[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var pattern = _step2.value;\n            var match = isElementMatching(singleElement, pattern);\n\n            if (match) {\n              results.push({\n                element: singleElement,\n                pattern: pattern,\n                match: match\n              });\n            }\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }\n\n      return results.length > 0 ? results : null;\n    }\n    /**\n     * Returns the name of the element to match if there is exactly one pattern added to the matcher instance\n     * and it matches element name defined by `string` (not `RegExp`). Otherwise, returns `null`.\n     *\n     * @returns {String|null} Element name trying to match.\n     */\n\n  }, {\n    key: \"getElementName\",\n    value: function getElementName() {\n      if (this._patterns.length !== 1) {\n        return null;\n      }\n\n      var pattern = this._patterns[0];\n      var name = pattern.name;\n      return typeof pattern != 'function' && name && !(name instanceof RegExp) ? name : null;\n    }\n  }]);\n\n  return Matcher;\n}(); // Returns match information if {@link module:engine/view/element~Element element} is matching provided pattern.\n// If element cannot be matched to provided pattern - returns `null`.\n//\n// @param {module:engine/view/element~Element} element\n// @param {Object|String|RegExp|Function} pattern\n// @returns {Object|null} Returns object with match information or null if element is not matching.\n\n\nexport { Matcher as default };\n\nfunction isElementMatching(element, pattern) {\n  // If pattern is provided as function - return result of that function;\n  if (typeof pattern == 'function') {\n    return pattern(element);\n  }\n\n  var match = {}; // Check element's name.\n\n  if (pattern.name) {\n    match.name = matchName(pattern.name, element.name);\n\n    if (!match.name) {\n      return null;\n    }\n  } // Check element's attributes.\n\n\n  if (pattern.attributes) {\n    match.attributes = matchAttributes(pattern.attributes, element);\n\n    if (!match.attributes) {\n      return null;\n    }\n  } // Check element's classes.\n\n\n  if (pattern.classes) {\n    match.classes = matchClasses(pattern.classes, element);\n\n    if (!match.classes) {\n      return false;\n    }\n  } // Check element's styles.\n\n\n  if (pattern.styles) {\n    match.styles = matchStyles(pattern.styles, element);\n\n    if (!match.styles) {\n      return false;\n    }\n  }\n\n  return match;\n} // Checks if name can be matched by provided pattern.\n//\n// @param {String|RegExp} pattern\n// @param {String} name\n// @returns {Boolean} Returns `true` if name can be matched, `false` otherwise.\n\n\nfunction matchName(pattern, name) {\n  // If pattern is provided as RegExp - test against this regexp.\n  if (pattern instanceof RegExp) {\n    return pattern.test(name);\n  }\n\n  return pattern === name;\n} // Checks if attributes of provided element can be matched against provided patterns.\n//\n// @param {Object} patterns Object with information about attributes to match. Each key of the object will be\n// used as attribute name. Value of each key can be a string or regular expression to match against attribute value.\n// @param {module:engine/view/element~Element} element Element which attributes will be tested.\n// @returns {Array|null} Returns array with matched attribute names or `null` if no attributes were matched.\n\n\nfunction matchAttributes(patterns, element) {\n  var match = [];\n\n  for (var name in patterns) {\n    var pattern = patterns[name];\n\n    if (element.hasAttribute(name)) {\n      var attribute = element.getAttribute(name);\n\n      if (pattern === true) {\n        match.push(name);\n      } else if (pattern instanceof RegExp) {\n        if (pattern.test(attribute)) {\n          match.push(name);\n        } else {\n          return null;\n        }\n      } else if (attribute === pattern) {\n        match.push(name);\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  return match;\n} // Checks if classes of provided element can be matched against provided patterns.\n//\n// @param {Array.<String|RegExp>} patterns Array of strings or regular expressions to match against element's classes.\n// @param {module:engine/view/element~Element} element Element which classes will be tested.\n// @returns {Array|null} Returns array with matched class names or `null` if no classes were matched.\n\n\nfunction matchClasses(patterns, element) {\n  var match = [];\n  var _iteratorNormalCompletion3 = true;\n  var _didIteratorError3 = false;\n  var _iteratorError3 = undefined;\n\n  try {\n    for (var _iterator3 = patterns[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n      var pattern = _step3.value;\n\n      if (pattern instanceof RegExp) {\n        var classes = element.getClassNames();\n        var _iteratorNormalCompletion4 = true;\n        var _didIteratorError4 = false;\n        var _iteratorError4 = undefined;\n\n        try {\n          for (var _iterator4 = classes[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n            var name = _step4.value;\n\n            if (pattern.test(name)) {\n              match.push(name);\n            }\n          }\n        } catch (err) {\n          _didIteratorError4 = true;\n          _iteratorError4 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n              _iterator4.return();\n            }\n          } finally {\n            if (_didIteratorError4) {\n              throw _iteratorError4;\n            }\n          }\n        }\n\n        if (match.length === 0) {\n          return null;\n        }\n      } else if (element.hasClass(pattern)) {\n        match.push(pattern);\n      } else {\n        return null;\n      }\n    }\n  } catch (err) {\n    _didIteratorError3 = true;\n    _iteratorError3 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n        _iterator3.return();\n      }\n    } finally {\n      if (_didIteratorError3) {\n        throw _iteratorError3;\n      }\n    }\n  }\n\n  return match;\n} // Checks if styles of provided element can be matched against provided patterns.\n//\n// @param {Object} patterns Object with information about styles to match. Each key of the object will be\n// used as style name. Value of each key can be a string or regular expression to match against style value.\n// @param {module:engine/view/element~Element} element Element which styles will be tested.\n// @returns {Array|null} Returns array with matched style names or `null` if no styles were matched.\n\n\nfunction matchStyles(patterns, element) {\n  var match = [];\n\n  for (var name in patterns) {\n    var pattern = patterns[name];\n\n    if (element.hasStyle(name)) {\n      var style = element.getStyle(name);\n\n      if (pattern instanceof RegExp) {\n        if (pattern.test(style)) {\n          match.push(name);\n        } else {\n          return null;\n        }\n      } else if (style === pattern) {\n        match.push(name);\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  return match;\n}\n/**\n * An entity that is a valid pattern recognized by a matcher. `MatcherPattern` is used by {@link ~Matcher} to recognize\n * if a view element fits in a group of view elements described by the pattern.\n *\n * `MatcherPattern` can be given as a `String`, a `RegExp`, an `Object` or a `Function`.\n *\n * If `MatcherPattern` is given as a `String` or `RegExp`, it will match any view element that has a matching name:\n *\n *\t\t// Match any element with name equal to 'div'.\n *\t\tconst pattern = 'div';\n *\n *\t\t// Match any element which name starts on 'p'.\n *\t\tconst pattern = /^p/;\n *\n * If `MatcherPattern` is given as an `Object`, all the object's properties will be matched with view element properties.\n *\n *\t\t// Match view element's name.\n *\t\tconst pattern = { name: /^p/ };\n *\n *\t\t// Match view element which has matching attributes.\n *\t\tconst pattern = {\n *\t\t\tattributes: {\n *\t\t\t\ttitle: 'foobar',\t// Attribute title should equal 'foobar'.\n *\t\t\t\tfoo: /^\\w+/,\t\t// Attribute foo should match /^\\w+/ regexp.\n *\t\t\t\tbar: true\t\t\t// Attribute bar should be set (can be empty).\n *\t\t\t}\n *\t\t};\n *\n *\t\t// Match view element which has given class.\n *\t\tconst pattern = {\n *\t\t\tclasses: 'foobar'\n *\t\t};\n *\n *\t\t// Match view element class using regular expression.\n *\t\tconst pattern = {\n *\t\t\tclasses: /foo.../\n *\t\t};\n *\n *\t\t// Multiple classes to match.\n *\t\tconst pattern = {\n *\t\t\tclasses: [ 'baz', 'bar', /foo.../ ]\n *\t\t};\n *\n *\t\t// Match view element which has given styles.\n *\t\tconst pattern = {\n *\t\t\tstyles: {\n *\t\t\t\tposition: 'absolute',\n *\t\t\t\tcolor: /^\\w*blue$/\n *\t\t\t}\n *\t\t};\n *\n *\t\t// Pattern with multiple properties.\n *\t\tconst pattern = {\n *\t\t\tname: 'span',\n *\t\t\tstyles: {\n *\t\t\t\t'font-weight': 'bold'\n *\t\t\t},\n *\t\t\tclasses: 'highlighted'\n *\t\t};\n *\n * If `MatcherPattern` is given as a `Function`, the function takes a view element as a first and only parameter and\n * the function should decide whether that element matches. If so, it should return what part of the view element has been matched.\n * Otherwise, the function should return `null`. The returned result will be included in `match` property of the object\n * returned by {@link ~Matcher#match} call.\n *\n *\t\t// Match an empty <div> element.\n *\t\tconst pattern = element => {\n *\t\t\tif ( element.name == 'div' && element.childCount > 0 ) {\n *\t\t\t\t// Return which part of the element was matched.\n *\t\t\t\treturn { name: true };\n *\t\t\t}\n *\n *\t\t\treturn null;\n *\t\t};\n *\n *\t\t// Match a <p> element with big font (\"heading-like\" element).\n *\t\tconst pattern = element => {\n *\t\t\tif ( element.name == 'p' ) {\n *\t\t\t\tconst fontSize = element.getStyle( 'font-size' );\n *\t\t\t\tconst size = fontSize.match( /(\\d+)/px );\n *\n *\t\t\t\tif ( size && Number( size[ 1 ] ) > 26 ) {\n *\t\t\t\t\treturn { name: true, attribute: [ 'font-size' ] };\n *\t\t\t\t}\n *\t\t\t}\n *\n *\t\t\treturn null;\n *\t\t};\n *\n * `MatcherPattern` is defined in a way that it is a superset of {@link module:engine/view/elementdefinition~ElementDefinition},\n * that is, every `ElementDefinition` also can be used as a `MatcherPattern`.\n *\n * @typedef {String|RegExp|Object|Function} module:engine/view/matcher~MatcherPattern\n *\n * @property {String|RegExp} [name] View element name to match.\n * @property {String|RegExp|Array.<String|RegExp>} [classes] View element's class name(s) to match.\n * @property {Object} [styles] Object with key-value pairs representing styles to match.\n * Each object key represents style name. Value can be given as `String` or `RegExp`.\n * @property {Object} [attributes] Object with key-value pairs representing attributes to match.\n * Each object key represents attribute name. Value can be given as `String` or `RegExp`.\n */","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/isnode\n */\n\n/**\n * Checks if the object is a native DOM Node.\n *\n * @param {*} obj\n * @returns {Boolean}\n */\nexport default function isNode(obj) {\n  if (obj) {\n    if (obj.defaultView) {\n      return obj instanceof obj.defaultView.Document;\n    } else if (obj.ownerDocument && obj.ownerDocument.defaultView) {\n      return obj instanceof obj.ownerDocument.defaultView.Node;\n    }\n  }\n\n  return false;\n}","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nexport default toSource;\n","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module module:engine/model/documentfragment\n */\nimport NodeList from './nodelist';\nimport Element from './element';\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\n/**\n * DocumentFragment represents a part of model which does not have a common root but it's top-level nodes\n * can be seen as siblings. In other words, it is a detached part of model tree, without a root.\n *\n * DocumentFragment has own {@link module:engine/model/markercollection~MarkerCollection}. Markers from this collection\n * will be set to the {@link module:engine/model/model~Model#markers model markers} by a\n * {@link module:engine/model/writer~Writer#insert} function.\n */\n\nvar DocumentFragment =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an empty `DocumentFragment`.\n   *\n   * **Note:** Constructor of this class shouldn't be used directly in the code.\n   * Use the {@link module:engine/model/writer~Writer#createDocumentFragment} method instead.\n   *\n   * @protected\n   * @param {module:engine/model/node~Node|Iterable.<module:engine/model/node~Node>} [children]\n   * Nodes to be contained inside the `DocumentFragment`.\n   */\n  function DocumentFragment(children) {\n    _classCallCheck(this, DocumentFragment);\n\n    /**\n     * DocumentFragment static markers map. This is a list of names and {@link module:engine/model/range~Range ranges}\n     * which will be set as Markers to {@link module:engine/model/model~Model#markers model markers collection}\n     * when DocumentFragment will be inserted to the document.\n     *\n     * @readonly\n     * @member {Map<String,module:engine/model/range~Range>} module:engine/model/documentfragment~DocumentFragment#markers\n     */\n    this.markers = new Map();\n    /**\n     * List of nodes contained inside the document fragment.\n     *\n     * @private\n     * @member {module:engine/model/nodelist~NodeList} module:engine/model/documentfragment~DocumentFragment#_children\n     */\n\n    this._children = new NodeList();\n\n    if (children) {\n      this._insertChild(0, children);\n    }\n  }\n  /**\n   * Returns an iterator that iterates over all nodes contained inside this document fragment.\n   *\n   * @returns {Iterable.<module:engine/model/node~Node>}\n   */\n\n\n  _createClass(DocumentFragment, [{\n    key: Symbol.iterator,\n    value: function value() {\n      return this.getChildren();\n    }\n    /**\n     * Number of this document fragment's children.\n     *\n     * @readonly\n     * @type {Number}\n     */\n\n  }, {\n    key: \"is\",\n\n    /**\n     * Checks whether given model tree object is of given type.\n     *\n     * Read more in {@link module:engine/model/node~Node#is}.\n     *\n     * @param {String} type\n     * @returns {Boolean}\n     */\n    value: function is(type) {\n      return type == 'documentFragment';\n    }\n    /**\n     * Gets the child at the given index. Returns `null` if incorrect index was passed.\n     *\n     * @param {Number} index Index of child.\n     * @returns {module:engine/model/node~Node|null} Child node.\n     */\n\n  }, {\n    key: \"getChild\",\n    value: function getChild(index) {\n      return this._children.getNode(index);\n    }\n    /**\n     * Returns an iterator that iterates over all of this document fragment's children.\n     *\n     * @returns {Iterable.<module:engine/model/node~Node>}\n     */\n\n  }, {\n    key: \"getChildren\",\n    value: function getChildren() {\n      return this._children[Symbol.iterator]();\n    }\n    /**\n     * Returns an index of the given child node. Returns `null` if given node is not a child of this document fragment.\n     *\n     * @param {module:engine/model/node~Node} node Child node to look for.\n     * @returns {Number|null} Child node's index.\n     */\n\n  }, {\n    key: \"getChildIndex\",\n    value: function getChildIndex(node) {\n      return this._children.getNodeIndex(node);\n    }\n    /**\n     * Returns the starting offset of given child. Starting offset is equal to the sum of\n     * {@link module:engine/model/node~Node#offsetSize offset sizes} of all node's siblings that are before it. Returns `null` if\n     * given node is not a child of this document fragment.\n     *\n     * @param {module:engine/model/node~Node} node Child node to look for.\n     * @returns {Number|null} Child node's starting offset.\n     */\n\n  }, {\n    key: \"getChildStartOffset\",\n    value: function getChildStartOffset(node) {\n      return this._children.getNodeStartOffset(node);\n    }\n    /**\n     * Returns path to a `DocumentFragment`, which is an empty array. Added for compatibility reasons.\n     *\n     * @returns {Array}\n     */\n\n  }, {\n    key: \"getPath\",\n    value: function getPath() {\n      return [];\n    }\n    /**\n     * Returns a descendant node by its path relative to this element.\n     *\n     *\t\t// <this>a<b>c</b></this>\n     *\t\tthis.getNodeByPath( [ 0 ] );     // -> \"a\"\n     *\t\tthis.getNodeByPath( [ 1 ] );     // -> <b>\n     *\t\tthis.getNodeByPath( [ 1, 0 ] );  // -> \"c\"\n     *\n     * @param {Array.<Number>} relativePath Path of the node to find, relative to this element.\n     * @returns {module:engine/model/node~Node|module:engine/model/documentfragment~DocumentFragment}\n     */\n\n  }, {\n    key: \"getNodeByPath\",\n    value: function getNodeByPath(relativePath) {\n      var node = this; // eslint-disable-line consistent-this\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = relativePath[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var index = _step.value;\n          node = node.getChild(node.offsetToIndex(index));\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return node;\n    }\n    /**\n     * Converts offset \"position\" to index \"position\".\n     *\n     * Returns index of a node that occupies given offset. If given offset is too low, returns `0`. If given offset is\n     * too high, returns index after last child}.\n     *\n     *\t\tconst textNode = new Text( 'foo' );\n     *\t\tconst pElement = new Element( 'p' );\n     *\t\tconst docFrag = new DocumentFragment( [ textNode, pElement ] );\n     *\t\tdocFrag.offsetToIndex( -1 ); // Returns 0, because offset is too low.\n     *\t\tdocFrag.offsetToIndex( 0 ); // Returns 0, because offset 0 is taken by `textNode` which is at index 0.\n     *\t\tdocFrag.offsetToIndex( 1 ); // Returns 0, because `textNode` has `offsetSize` equal to 3, so it occupies offset 1 too.\n     *\t\tdocFrag.offsetToIndex( 2 ); // Returns 0.\n     *\t\tdocFrag.offsetToIndex( 3 ); // Returns 1.\n     *\t\tdocFrag.offsetToIndex( 4 ); // Returns 2. There are no nodes at offset 4, so last available index is returned.\n     *\n     * @param {Number} offset Offset to look for.\n     * @returns {Number} Index of a node that occupies given offset.\n     */\n\n  }, {\n    key: \"offsetToIndex\",\n    value: function offsetToIndex(offset) {\n      return this._children.offsetToIndex(offset);\n    }\n    /**\n     * Converts `DocumentFragment` instance to plain object and returns it.\n     * Takes care of converting all of this document fragment's children.\n     *\n     * @returns {Object} `DocumentFragment` instance converted to plain object.\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = [];\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this._children[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var node = _step2.value;\n          json.push(node.toJSON());\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return json;\n    }\n    /**\n     * Creates a `DocumentFragment` instance from given plain object (i.e. parsed JSON string).\n     * Converts `DocumentFragment` children to proper nodes.\n     *\n     * @param {Object} json Plain object to be converted to `DocumentFragment`.\n     * @returns {module:engine/model/documentfragment~DocumentFragment} `DocumentFragment` instance created using given plain object.\n     */\n\n  }, {\n    key: \"_appendChild\",\n\n    /**\n     * {@link #_insertChild Inserts} one or more nodes at the end of this document fragment.\n     *\n     * @protected\n     * @param {module:engine/model/item~Item|Iterable.<module:engine/model/item~Item>} items Items to be inserted.\n     */\n    value: function _appendChild(items) {\n      this._insertChild(this.childCount, items);\n    }\n    /**\n     * Inserts one or more nodes at the given index and sets {@link module:engine/model/node~Node#parent parent} of these nodes\n     * to this document fragment.\n     *\n     * @protected\n     * @param {Number} index Index at which nodes should be inserted.\n     * @param {module:engine/model/item~Item|Iterable.<module:engine/model/item~Item>} items Items to be inserted.\n     */\n\n  }, {\n    key: \"_insertChild\",\n    value: function _insertChild(index, items) {\n      var nodes = normalize(items);\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = nodes[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var node = _step3.value;\n\n          // If node that is being added to this element is already inside another element, first remove it from the old parent.\n          if (node.parent !== null) {\n            node._remove();\n          }\n\n          node.parent = this;\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      this._children._insertNodes(index, nodes);\n    }\n    /**\n     * Removes one or more nodes starting at the given index\n     * and sets {@link module:engine/model/node~Node#parent parent} of these nodes to `null`.\n     *\n     * @protected\n     * @param {Number} index Index of the first node to remove.\n     * @param {Number} [howMany=1] Number of nodes to remove.\n     * @returns {Array.<module:engine/model/node~Node>} Array containing removed nodes.\n     */\n\n  }, {\n    key: \"_removeChildren\",\n    value: function _removeChildren(index) {\n      var howMany = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n      var nodes = this._children._removeNodes(index, howMany);\n\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = nodes[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var node = _step4.value;\n          node.parent = null;\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      return nodes;\n    }\n  }, {\n    key: \"childCount\",\n    get: function get() {\n      return this._children.length;\n    }\n    /**\n     * Sum of {@link module:engine/model/node~Node#offsetSize offset sizes} of all of this document fragment's children.\n     *\n     * @readonly\n     * @type {Number}\n     */\n\n  }, {\n    key: \"maxOffset\",\n    get: function get() {\n      return this._children.maxOffset;\n    }\n    /**\n     * Is `true` if there are no nodes inside this document fragment, `false` otherwise.\n     *\n     * @readonly\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isEmpty\",\n    get: function get() {\n      return this.childCount === 0;\n    }\n    /**\n     * Artificial root of `DocumentFragment`. Returns itself. Added for compatibility reasons.\n     *\n     * @readonly\n     * @type {module:engine/model/documentfragment~DocumentFragment}\n     */\n\n  }, {\n    key: \"root\",\n    get: function get() {\n      return this;\n    }\n    /**\n     * Artificial parent of `DocumentFragment`. Returns `null`. Added for compatibility reasons.\n     *\n     * @readonly\n     * @type {null}\n     */\n\n  }, {\n    key: \"parent\",\n    get: function get() {\n      return null;\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      var children = [];\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = json[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var child = _step5.value;\n\n          if (child.name) {\n            // If child has name property, it is an Element.\n            children.push(Element.fromJSON(child));\n          } else {\n            // Otherwise, it is a Text node.\n            children.push(Text.fromJSON(child));\n          }\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      return new DocumentFragment(children);\n    }\n  }]);\n\n  return DocumentFragment;\n}(); // Converts strings to Text and non-iterables to arrays.\n//\n// @param {String|module:engine/model/item~Item|Iterable.<module:engine/model/item~Item>}\n// @returns {Iterable.<module:engine/model/node~Node>}\n\n\nexport { DocumentFragment as default };\n\nfunction normalize(nodes) {\n  // Separate condition because string is iterable.\n  if (typeof nodes == 'string') {\n    return [new Text(nodes)];\n  }\n\n  if (!isIterable(nodes)) {\n    nodes = [nodes];\n  } // Array.from to enable .map() on non-arrays.\n\n\n  return Array.from(nodes).map(function (node) {\n    if (typeof node == 'string') {\n      return new Text(node);\n    }\n\n    if (node instanceof TextProxy) {\n      return new Text(node.data, node.getAttributes());\n    }\n\n    return node;\n  });\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/operation/markeroperation\n */\nimport Operation from './operation';\nimport Range from '../range';\n/**\n * @extends module:engine/model/operation/operation~Operation\n */\n\nvar MarkerOperation =\n/*#__PURE__*/\nfunction (_Operation) {\n  _inherits(MarkerOperation, _Operation);\n\n  /**\n   * @param {String} name Marker name.\n   * @param {module:engine/model/range~Range} oldRange Marker range before the change.\n   * @param {module:engine/model/range~Range} newRange Marker range after the change.\n   * @param {module:engine/model/markercollection~MarkerCollection} markers Marker collection on which change should be executed.\n   * @param {Boolean} affectsData Specifies whether the marker operation affects the data produced by the data pipeline\n   * (is persisted in the editor's data).\n   * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n   * can be applied or `null` if the operation operates on detached (non-document) tree.\n   */\n  function MarkerOperation(name, oldRange, newRange, markers, affectsData, baseVersion) {\n    var _this;\n\n    _classCallCheck(this, MarkerOperation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MarkerOperation).call(this, baseVersion));\n    /**\n     * Marker name.\n     *\n     * @readonly\n     * @member {String}\n     */\n\n    _this.name = name;\n    /**\n     * Marker range before the change.\n     *\n     * @readonly\n     * @member {module:engine/model/range~Range}\n     */\n\n    _this.oldRange = oldRange ? oldRange.clone() : null;\n    /**\n     * Marker range after the change.\n     *\n     * @readonly\n     * @member {module:engine/model/range~Range}\n     */\n\n    _this.newRange = newRange ? newRange.clone() : null;\n    /**\n     * Specifies whether the marker operation affects the data produced by the data pipeline\n     * (is persisted in the editor's data).\n     *\n     * @readonly\n     * @member {Boolean}\n     */\n\n    _this.affectsData = affectsData;\n    /**\n     * Marker collection on which change should be executed.\n     *\n     * @private\n     * @member {module:engine/model/markercollection~MarkerCollection}\n     */\n\n    _this._markers = markers;\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(MarkerOperation, [{\n    key: \"clone\",\n\n    /**\n     * Creates and returns an operation that has the same parameters as this operation.\n     *\n     * @returns {module:engine/model/operation/markeroperation~MarkerOperation} Clone of this operation.\n     */\n    value: function clone() {\n      return new MarkerOperation(this.name, this.oldRange, this.newRange, this._markers, this.affectsData, this.baseVersion);\n    }\n    /**\n     * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n     *\n     * @returns {module:engine/model/operation/markeroperation~MarkerOperation}\n     */\n\n  }, {\n    key: \"getReversed\",\n    value: function getReversed() {\n      return new MarkerOperation(this.name, this.newRange, this.oldRange, this._markers, this.affectsData, this.baseVersion + 1);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_execute\",\n    value: function _execute() {\n      var type = this.newRange ? '_set' : '_remove';\n\n      this._markers[type](this.name, this.newRange, true, this.affectsData);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = _get(_getPrototypeOf(MarkerOperation.prototype), \"toJSON\", this).call(this);\n\n      if (this.oldRange) {\n        json.oldRange = this.oldRange.toJSON();\n      }\n\n      if (this.newRange) {\n        json.newRange = this.newRange.toJSON();\n      }\n\n      delete json._markers;\n      return json;\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"type\",\n    get: function get() {\n      return 'marker';\n    }\n  }], [{\n    key: \"fromJSON\",\n\n    /**\n     * Creates `MarkerOperation` object from deserialized object, i.e. from parsed JSON string.\n     *\n     * @param {Object} json Deserialized JSON object.\n     * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n     * @returns {module:engine/model/operation/markeroperation~MarkerOperation}\n     */\n    value: function fromJSON(json, document) {\n      return new MarkerOperation(json.name, json.oldRange ? Range.fromJSON(json.oldRange, document) : null, json.newRange ? Range.fromJSON(json.newRange, document) : null, document.model.markers, json.affectsData, json.baseVersion);\n    }\n  }, {\n    key: \"className\",\n    get: function get() {\n      return 'MarkerOperation';\n    }\n  }]);\n\n  return MarkerOperation;\n}(Operation);\n\nexport { MarkerOperation as default };","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/* globals navigator:false */\n\n/**\n * @module utils/env\n */\nvar userAgent = navigator.userAgent.toLowerCase();\n/**\n * A namespace containing environment and browser information.\n *\n * @namespace\n */\n\nvar env = {\n  /**\n   * Indicates that the application is running on Macintosh.\n   *\n   * @static\n   * @member {Boolean} module:utils/env~env#isMac\n   */\n  isMac: isMac(userAgent),\n\n  /**\n   * Indicates that the application is running in Microsoft Edge.\n   *\n   * @static\n   * @member {Boolean} module:utils/env~env#isEdge\n   */\n  isEdge: isEdge(userAgent),\n\n  /**\n   * Indicates that the application is running in Firefox (Gecko).\n   *\n   * @static\n   * @member {Boolean} module:utils/env~env#isEdge\n   */\n  isGecko: isGecko(userAgent)\n};\nexport default env;\n/**\n * Checks if User Agent represented by the string is running on Macintosh.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is running on Macintosh or not.\n */\n\nexport function isMac(userAgent) {\n  return userAgent.indexOf('macintosh') > -1;\n}\n/**\n * Checks if User Agent represented by the string is Microsoft Edge.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is Edge or not.\n */\n\nexport function isEdge(userAgent) {\n  return !!userAgent.match(/edge\\/(\\d+.?\\d*)/);\n}\n/**\n * Checks if User Agent represented by the string is Firefox (Gecko).\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is Firefox or not.\n */\n\nexport function isGecko(userAgent) {\n  return !!userAgent.match(/gecko\\/\\d+/);\n}","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nexport default eq;\n","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/emittermixin\n */\nimport { default as EmitterMixin, _getEmitterListenedTo, _setEmitterId } from '../emittermixin';\nimport uid from '../uid';\nimport isNode from './isnode';\nimport isWindow from './iswindow';\nimport { extend } from 'lodash-es';\n/**\n * Mixin that injects the DOM events API into its host. It provides the API\n * compatible with {@link module:utils/emittermixin~EmitterMixin}.\n *\n * DOM emitter mixin is by default available in the {@link module:ui/view~View} class,\n * but it can also be mixed into any other class:\n *\n *\t\timport mix from '../utils/mix.js';\n *\t\timport DomEmitterMixin from '../utils/dom/emittermixin.js';\n *\n *\t\tclass SomeView {}\n *\t\tmix( SomeView, DomEmitterMixin );\n *\n *\t\tconst view = new SomeView();\n *\t\tview.listenTo( domElement, ( evt, domEvt ) => {\n *\t\t\tconsole.log( evt, domEvt );\n *\t\t} );\n *\n * @mixin EmitterMixin\n * @mixes module:utils/emittermixin~EmitterMixin\n * @implements module:utils/dom/emittermixin~Emitter\n */\n\nvar DomEmitterMixin = extend({}, EmitterMixin, {\n  /**\n   * Registers a callback function to be executed when an event is fired in a specific Emitter or DOM Node.\n   * It is backwards compatible with {@link module:utils/emittermixin~EmitterMixin#listenTo}.\n   *\n   * @param {module:utils/emittermixin~Emitter|Node} emitter The object that fires the event.\n   * @param {String} event The name of the event.\n   * @param {Function} callback The function to be called on event.\n   * @param {Object} [options={}] Additional options.\n   * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of this event callback. The higher\n   * the priority value the sooner the callback will be fired. Events having the same priority are called in the\n   * order they were added.\n   * @param {Boolean} [options.useCapture=false] Indicates that events of this type will be dispatched to the registered\n   * listener before being dispatched to any EventTarget beneath it in the DOM tree.\n   */\n  listenTo: function listenTo(emitter) {\n    var _EmitterMixin$listenT;\n\n    for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      rest[_key - 1] = arguments[_key];\n    }\n\n    // Check if emitter is an instance of DOM Node. If so, replace the argument with\n    // corresponding ProxyEmitter (or create one if not existing).\n    if (isNode(emitter) || isWindow(emitter)) {\n      var proxy = this._getProxyEmitter(emitter) || new ProxyEmitter(emitter);\n      proxy.attach.apply(proxy, rest);\n      emitter = proxy;\n    } // Execute parent class method with Emitter (or ProxyEmitter) instance.\n\n\n    (_EmitterMixin$listenT = EmitterMixin.listenTo).call.apply(_EmitterMixin$listenT, [this, emitter].concat(rest));\n  },\n\n  /**\n   * Stops listening for events. It can be used at different levels:\n   * It is backwards compatible with {@link module:utils/emittermixin~EmitterMixin#listenTo}.\n   *\n   * * To stop listening to a specific callback.\n   * * To stop listening to a specific event.\n   * * To stop listening to all events fired by a specific object.\n   * * To stop listening to all events fired by all object.\n   *\n   * @param {module:utils/emittermixin~Emitter|Node} [emitter] The object to stop listening to. If omitted, stops it for all objects.\n   * @param {String} [event] (Requires the `emitter`) The name of the event to stop listening to. If omitted, stops it\n   * for all events from `emitter`.\n   * @param {Function} [callback] (Requires the `event`) The function to be removed from the call list for the given\n   * `event`.\n   */\n  stopListening: function stopListening(emitter, event, callback) {\n    // Check if emitter is an instance of DOM Node. If so, replace the argument with corresponding ProxyEmitter.\n    if (isNode(emitter) || isWindow(emitter)) {\n      var proxy = this._getProxyEmitter(emitter); // Element has no listeners.\n\n\n      if (!proxy) {\n        return;\n      }\n\n      emitter = proxy;\n    } // Execute parent class method with Emitter (or ProxyEmitter) instance.\n\n\n    EmitterMixin.stopListening.call(this, emitter, event, callback);\n\n    if (emitter instanceof ProxyEmitter) {\n      emitter.detach(event);\n    }\n  },\n\n  /**\n   * Retrieves ProxyEmitter instance for given DOM Node residing in this Host.\n   *\n   * @pivate\n   * @param {Node} node DOM Node of the ProxyEmitter.\n   * @returns {module:utils/dom/emittermixin~ProxyEmitter} ProxyEmitter instance or null.\n   */\n  _getProxyEmitter: function _getProxyEmitter(node) {\n    return _getEmitterListenedTo(this, getNodeUID(node));\n  }\n});\nexport default DomEmitterMixin;\n/**\n * Creates a ProxyEmitter instance. Such an instance is a bridge between a DOM Node firing events\n * and any Host listening to them. It is backwards compatible with {@link module:utils/emittermixin~EmitterMixin#on}.\n *\n *                                  listenTo( click, ... )\n *                    +-----------------------------------------+\n *                    |              stopListening( ... )       |\n *     +----------------------------+                           |             addEventListener( click, ... )\n *     | Host                       |                           |   +---------------------------------------------+\n *     +----------------------------+                           |   |       removeEventListener( click, ... )     |\n *     | _listeningTo: {            |                +----------v-------------+                                   |\n *     |   UID: {                   |                | ProxyEmitter           |                                   |\n *     |     emitter: ProxyEmitter, |                +------------------------+                      +------------v----------+\n *     |     callbacks: {           |                | events: {              |                      | Node (HTMLElement)    |\n *     |       click: [ callbacks ] |                |   click: [ callbacks ] |                      +-----------------------+\n *     |     }                      |                | },                     |                      | data-ck-expando: UID  |\n *     |   }                        |                | _domNode: Node,        |                      +-----------------------+\n *     | }                          |                | _domListeners: {},     |                                   |\n *     | +------------------------+ |                | _emitterId: UID        |                                   |\n *     | | DomEmitterMixin        | |                +--------------^---------+                                   |\n *     | +------------------------+ |                           |   |                                             |\n *     +--------------^-------------+                           |   +---------------------------------------------+\n *                    |                                         |                  click (DOM Event)\n *                    +-----------------------------------------+\n *                                fire( click, DOM Event )\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n * @implements module:utils/dom/emittermixin~Emitter\n * @private\n */\n\nvar ProxyEmitter =\n/**\n * @param {Node} node DOM Node that fires events.\n * @returns {Object} ProxyEmitter instance bound to the DOM Node.\n */\nfunction ProxyEmitter(node) {\n  _classCallCheck(this, ProxyEmitter);\n\n  // Set emitter ID to match DOM Node \"expando\" property.\n  _setEmitterId(this, getNodeUID(node)); // Remember the DOM Node this ProxyEmitter is bound to.\n\n\n  this._domNode = node;\n};\n\nextend(ProxyEmitter.prototype, EmitterMixin, {\n  /**\n   * Collection of native DOM listeners.\n   *\n   * @private\n   * @member {Object} module:utils/dom/emittermixin~ProxyEmitter#_domListeners\n   */\n\n  /**\n   * Registers a callback function to be executed when an event is fired.\n   *\n   * It attaches a native DOM listener to the DOM Node. When fired,\n   * a corresponding Emitter event will also fire with DOM Event object as an argument.\n   *\n   * @method module:utils/dom/emittermixin~ProxyEmitter#attach\n   * @param {String} event The name of the event.\n   * @param {Function} callback The function to be called on event.\n   * @param {Object} [options={}] Additional options.\n   * @param {Boolean} [options.useCapture=false] Indicates that events of this type will be dispatched to the registered\n   * listener before being dispatched to any EventTarget beneath it in the DOM tree.\n   */\n  attach: function attach(event, callback) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    // If the DOM Listener for given event already exist it is pointless\n    // to attach another one.\n    if (this._domListeners && this._domListeners[event]) {\n      return;\n    }\n\n    var domListener = this._createDomListener(event, !!options.useCapture); // Attach the native DOM listener to DOM Node.\n\n\n    this._domNode.addEventListener(event, domListener, !!options.useCapture);\n\n    if (!this._domListeners) {\n      this._domListeners = {};\n    } // Store the native DOM listener in this ProxyEmitter. It will be helpful\n    // when stopping listening to the event.\n\n\n    this._domListeners[event] = domListener;\n  },\n\n  /**\n   * Stops executing the callback on the given event.\n   *\n   * @method module:utils/dom/emittermixin~ProxyEmitter#detach\n   * @param {String} event The name of the event.\n   */\n  detach: function detach(event) {\n    var events; // Remove native DOM listeners which are orphans. If no callbacks\n    // are awaiting given event, detach native DOM listener from DOM Node.\n    // See: {@link attach}.\n\n    if (this._domListeners[event] && (!(events = this._events[event]) || !events.callbacks.length)) {\n      this._domListeners[event].removeListener();\n    }\n  },\n\n  /**\n   * Creates a native DOM listener callback. When the native DOM event\n   * is fired it will fire corresponding event on this ProxyEmitter.\n   * Note: A native DOM Event is passed as an argument.\n   *\n   * @private\n   * @method module:utils/dom/emittermixin~ProxyEmitter#_createDomListener\n   * @param {String} event The name of the event.\n   * @param {Boolean} useCapture Indicates whether the listener was created for capturing event.\n   * @returns {Function} The DOM listener callback.\n   */\n  _createDomListener: function _createDomListener(event, useCapture) {\n    var _this = this;\n\n    var domListener = function domListener(domEvt) {\n      _this.fire(event, domEvt);\n    }; // Supply the DOM listener callback with a function that will help\n    // detach it from the DOM Node, when it is no longer necessary.\n    // See: {@link detach}.\n\n\n    domListener.removeListener = function () {\n      _this._domNode.removeEventListener(event, domListener, useCapture);\n\n      delete _this._domListeners[event];\n    };\n\n    return domListener;\n  }\n}); // Gets an unique DOM Node identifier. The identifier will be set if not defined.\n//\n// @private\n// @param {Node} node\n// @returns {String} UID for given DOM Node.\n\nfunction getNodeUID(node) {\n  return node['data-ck-expando'] || (node['data-ck-expando'] = uid());\n}\n/**\n * Interface representing classes which mix in {@link module:utils/dom/emittermixin~EmitterMixin}.\n *\n * @interface Emitter\n */","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/viewcollection\n */\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n/**\n * Collects {@link module:ui/view~View} instances.\n *\n *\t\tconst parentView = new ParentView( locale );\n *\t\tconst collection = new ViewCollection( locale );\n *\n *\t\tcollection.setParent( parentView.element );\n *\n *\t\tconst viewA = new ChildView( locale );\n *\t\tconst viewB = new ChildView( locale );\n *\n * View collection renders and manages view {@link module:ui/view~View#element elements}:\n *\n *\t\tcollection.add( viewA );\n *\t\tcollection.add( viewB );\n *\n *\t\tconsole.log( parentView.element.firsChild ); // -> viewA.element\n *\t\tconsole.log( parentView.element.lastChild ); // -> viewB.element\n *\n * It {@link module:ui/viewcollection~ViewCollection#delegate propagates} DOM events too:\n *\n *\t\t// Delegate #click and #keydown events from viewA and viewB to the parentView.\n *\t\tcollection.delegate( 'click' ).to( parentView );\n *\n *\t\tparentView.on( 'click', ( evt ) => {\n *\t\t\tconsole.log( `${ evt.source } has been clicked.` );\n *\t\t} );\n *\n *\t\t// This event will be delegated to the parentView.\n *\t\tviewB.fire( 'click' );\n *\n * **Note**: A view collection can be used directly in the {@link module:ui/template~TemplateDefinition definition}\n * of a {@link module:ui/template~Template template}.\n *\n * @extends module:utils/collection~Collection\n * @mixes module:utils/observablemixin~ObservableMixin\n */\n\nvar ViewCollection =\n/*#__PURE__*/\nfunction (_Collection) {\n  _inherits(ViewCollection, _Collection);\n\n  /**\n   * Creates a new instance of the {@link module:ui/viewcollection~ViewCollection}.\n   *\n   * @param {module:utils/locale~Locale} [locale] The {@link module:core/editor/editor~Editor editor's locale} instance.\n   */\n  function ViewCollection(locale) {\n    var _this;\n\n    _classCallCheck(this, ViewCollection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ViewCollection).call(this, {\n      // An #id Number attribute should be legal and not break the `ViewCollection` instance.\n      // https://github.com/ckeditor/ckeditor5-ui/issues/93\n      idProperty: 'viewUid'\n    })); // Handle {@link module:ui/view~View#element} in DOM when a new view is added to the collection.\n\n    _this.on('add', function (evt, view, index) {\n      if (!view.isRendered) {\n        view.render();\n      }\n\n      if (view.element && _this._parentElement) {\n        _this._parentElement.insertBefore(view.element, _this._parentElement.children[index]);\n      }\n    }); // Handle {@link module:ui/view~View#element} in DOM when a view is removed from the collection.\n\n\n    _this.on('remove', function (evt, view) {\n      if (view.element && _this._parentElement) {\n        view.element.remove();\n      }\n    });\n    /**\n     * The {@link module:core/editor/editor~Editor#locale editor's locale} instance.\n     * See the view {@link module:ui/view~View#locale locale} property.\n     *\n     * @member {module:utils/locale~Locale}\n     */\n\n\n    _this.locale = locale;\n    /**\n     * A parent element within which child views are rendered and managed in DOM.\n     *\n     * @protected\n     * @member {HTMLElement}\n     */\n\n    _this._parentElement = null;\n    return _this;\n  }\n  /**\n   * Destroys the view collection along with child views.\n   * See the view {@link module:ui/view~View#destroy} method.\n   */\n\n\n  _createClass(ViewCollection, [{\n    key: \"destroy\",\n    value: function destroy() {\n      this.map(function (view) {\n        return view.destroy();\n      });\n    }\n    /**\n     * Sets the parent HTML element of this collection. When parent is set, {@link #add adding} and\n     * {@link #remove removing} views in the collection synchronizes their\n     * {@link module:ui/view~View#element elements} in the parent element.\n     *\n     * @param {HTMLElement} element A new parent element.\n     */\n\n  }, {\n    key: \"setParent\",\n    value: function setParent(elementOrDocFragment) {\n      this._parentElement = elementOrDocFragment;\n    }\n    /**\n     * Delegates selected events coming from within views in the collection to any\n     * {@link module:utils/emittermixin~Emitter}.\n     *\n     * For the following views and collection:\n     *\n     *\t\tconst viewA = new View();\n     *\t\tconst viewB = new View();\n     *\t\tconst viewC = new View();\n     *\n     *\t\tconst views = parentView.createCollection();\n     *\n     *\t\tviews.delegate( 'eventX' ).to( viewB );\n     *\t\tviews.delegate( 'eventX', 'eventY' ).to( viewC );\n     *\n     *\t\tviews.add( viewA );\n     *\n     * the `eventX` is delegated (fired by) `viewB` and `viewC` along with `customData`:\n     *\n     *\t\tviewA.fire( 'eventX', customData );\n     *\n     * and `eventY` is delegated (fired by) `viewC` along with `customData`:\n     *\n     *\t\tviewA.fire( 'eventY', customData );\n     *\n     * See {@link module:utils/emittermixin~EmitterMixin#delegate}.\n     *\n     * @param {...String} events {@link module:ui/view~View} event names to be delegated to another\n     * {@link module:utils/emittermixin~Emitter}.\n     * @returns {Object}\n     * @returns {Function} return.to A function which accepts the destination of\n     * {@link module:utils/emittermixin~EmitterMixin#delegate delegated} events.\n     */\n\n  }, {\n    key: \"delegate\",\n    value: function delegate() {\n      var _this2 = this;\n\n      for (var _len = arguments.length, events = new Array(_len), _key = 0; _key < _len; _key++) {\n        events[_key] = arguments[_key];\n      }\n\n      if (!events.length || !isStringArray(events)) {\n        /**\n         * All event names must be strings.\n         *\n         * @error ui-viewcollection-delegate-wrong-events\n         */\n        throw new CKEditorError('ui-viewcollection-delegate-wrong-events: All event names must be strings.');\n      }\n\n      return {\n        /**\n         * Selects destination for {@link module:utils/emittermixin~EmitterMixin#delegate} events.\n         *\n         * @memberOf module:ui/viewcollection~ViewCollection#delegate\n         * @function module:ui/viewcollection~ViewCollection#delegate.to\n         * @param {module:utils/emittermixin~EmitterMixin} dest An `EmitterMixin` instance which is\n         * the destination for delegated events.\n         */\n        to: function to(dest) {\n          // Activate delegating on existing views in this collection.\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = _this2[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var view = _step.value;\n\n              for (var _i3 = 0; _i3 < events.length; _i3++) {\n                var evtName = events[_i3];\n                view.delegate(evtName).to(dest);\n              }\n            } // Activate delegating on future views in this collection.\n\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          _this2.on('add', function (evt, view) {\n            for (var _i = 0; _i < events.length; _i++) {\n              var evtName = events[_i];\n              view.delegate(evtName).to(dest);\n            }\n          }); // Deactivate delegating when view is removed from this collection.\n\n\n          _this2.on('remove', function (evt, view) {\n            for (var _i2 = 0; _i2 < events.length; _i2++) {\n              var evtName = events[_i2];\n              view.stopDelegating(evtName, dest);\n            }\n          });\n        }\n      };\n    }\n    /**\n     * Removes a child view from the collection. If the {@link #setParent parent element} of the\n     * collection has been set, the {@link module:ui/view~View#element element} of the view is also removed\n     * in DOM, reflecting the order of the collection.\n     *\n     * See the {@link #add} method.\n     *\n     * @method #remove\n     * @param {module:ui/view~View|Number|String} subject The view to remove, its id or index in the collection.\n     * @returns {Object} The removed view.\n     */\n\n  }]);\n\n  return ViewCollection;\n}(Collection);\n\nexport { ViewCollection as default };\nmix(Collection, ObservableMixin); // Check if all entries of the array are of `String` type.\n//\n// @private\n// @param {Array} arr An array to be checked.\n// @returns {Boolean}\n\nfunction isStringArray(arr) {\n  return arr.every(function (a) {\n    return typeof a == 'string';\n  });\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/focuscycler\n */\nimport global from '@ckeditor/ckeditor5-utils/src/dom/global';\n/**\n * A utility class that helps cycling over focusable {@link module:ui/view~View views} in a\n * {@link module:ui/viewcollection~ViewCollection} when the focus is tracked by the\n * {@link module:utils/focustracker~FocusTracker} instance. It helps implementing keyboard\n * navigation in HTML forms, toolbars, lists and the like.\n *\n * To work properly it requires:\n * * a collection of focusable (HTML `tabindex` attribute) views that implement the `focus()` method,\n * * an associated focus tracker to determine which view is focused.\n *\n * A simple cycler setup can look like this:\n *\n *\t\tconst focusables = new ViewCollection();\n *\t\tconst focusTracker = new FocusTracker();\n *\n *\t\t// Add focusable views to the focus tracker.\n *\t\tfocusTracker.add( ... );\n *\n * Then, the cycler can be used manually:\n *\n *\t\tconst cycler = new FocusCycler( { focusables, focusTracker } );\n *\n *\t\t// Will focus the first focusable view in #focusables.\n *\t\tcycler.focusFirst();\n *\n *\t\t// Will log the next focusable item in #focusables.\n *\t\tconsole.log( cycler.next );\n *\n * Alternatively, it can work side by side with the {@link module:utils/keystrokehandler~KeystrokeHandler}:\n *\n *\t\tconst keystrokeHandler = new KeystrokeHandler();\n *\n *\t\t// Activate the keystroke handler.\n *\t\tkeystrokeHandler.listenTo( sourceOfEvents );\n *\n *\t\tconst cycler = new FocusCycler( {\n *\t\t\tfocusables, focusTracker, keystrokeHandler,\n *\t\t\tactions: {\n *\t\t\t\t// When arrowup of arrowleft is detected by the #keystrokeHandler,\n *\t\t\t\t// focusPrevious() will be called on the cycler.\n *\t\t\t\tfocusPrevious: [ 'arrowup', 'arrowleft' ],\n *\t\t\t}\n *\t\t} );\n */\n\nvar FocusCycler =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of the focus cycler utility.\n   *\n   * @param {Object} options Configuration options.\n   * @param {module:utils/collection~Collection|Object} options.focusables\n   * @param {module:utils/focustracker~FocusTracker} options.focusTracker\n   * @param {module:utils/keystrokehandler~KeystrokeHandler} [options.keystrokeHandler]\n   * @param {Object} [options.actions]\n   */\n  function FocusCycler(options) {\n    var _this = this;\n\n    _classCallCheck(this, FocusCycler);\n\n    Object.assign(this, options);\n    /**\n     * A {@link module:ui/view~View view} collection that the cycler operates on.\n     *\n     * @readonly\n     * @member {module:utils/collection~Collection} #focusables\n     */\n\n    /**\n     * A focus tracker instance that the cycler uses to determine the current focus\n     * state in {@link #focusables}.\n     *\n     * @readonly\n     * @member {module:utils/focustracker~FocusTracker} #focusTracker\n     */\n\n    /**\n     * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}\n     * which can respond to certain keystrokes and cycle the focus.\n     *\n     * @readonly\n     * @member {module:utils/keystrokehandler~KeystrokeHandler} #keystrokeHandler\n     */\n\n    /**\n     * Actions that the cycler can take when a keystroke is pressed. Requires\n     * `options.keystrokeHandler` to be passed and working. When an action is\n     * performed, `preventDefault` and `stopPropagation` will be called on the event\n     * the keystroke fired in the DOM.\n     *\n     *\t\tactions: {\n     *\t\t\t// Will call #focusPrevious() when arrowleft or arrowup is pressed.\n     *\t\t\tfocusPrevious: [ 'arrowleft', 'arrowup' ],\n     *\n     *\t\t\t// Will call #focusNext() when arrowdown is pressed.\n     *\t\t\tfocusNext: 'arrowdown'\n     *\t\t}\n     *\n     * @readonly\n     * @member {Object} #actions\n     */\n\n    if (options.actions && options.keystrokeHandler) {\n      var _loop = function _loop(methodName) {\n        var actions = options.actions[methodName];\n\n        if (typeof actions == 'string') {\n          actions = [actions];\n        }\n\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = actions[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var keystroke = _step.value;\n            options.keystrokeHandler.set(keystroke, function (data, cancel) {\n              _this[methodName]();\n\n              cancel();\n            });\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      };\n\n      for (var methodName in options.actions) {\n        _loop(methodName);\n      }\n    }\n  }\n  /**\n   * Returns the first focusable view in {@link #focusables}.\n   * Returns `null` if there is none.\n   *\n   * @readonly\n   * @member {module:ui/view~View|null} #first\n   */\n\n\n  _createClass(FocusCycler, [{\n    key: \"focusFirst\",\n\n    /**\n     * Focuses the {@link #first} item in {@link #focusables}.\n     */\n    value: function focusFirst() {\n      this._focus(this.first);\n    }\n    /**\n     * Focuses the {@link #last} item in {@link #focusables}.\n     */\n\n  }, {\n    key: \"focusLast\",\n    value: function focusLast() {\n      this._focus(this.last);\n    }\n    /**\n     * Focuses the {@link #next} item in {@link #focusables}.\n     */\n\n  }, {\n    key: \"focusNext\",\n    value: function focusNext() {\n      this._focus(this.next);\n    }\n    /**\n     * Focuses the {@link #previous} item in {@link #focusables}.\n     */\n\n  }, {\n    key: \"focusPrevious\",\n    value: function focusPrevious() {\n      this._focus(this.previous);\n    }\n    /**\n     * Focuses the given view if it exists.\n     *\n     * @protected\n     * @param {module:ui/view~View} view\n     */\n\n  }, {\n    key: \"_focus\",\n    value: function _focus(view) {\n      if (view) {\n        view.focus();\n      }\n    }\n    /**\n     * Returns the next or previous focusable view in {@link #focusables} with respect\n     * to {@link #current}.\n     *\n     * @protected\n     * @param {Number} step Either `1` for checking forward from {@link #current} or\n     * `-1` for checking backwards.\n     * @returns {module:ui/view~View|null}\n     */\n\n  }, {\n    key: \"_getFocusableItem\",\n    value: function _getFocusableItem(step) {\n      // Cache for speed.\n      var current = this.current;\n      var collectionLength = this.focusables.length;\n\n      if (!collectionLength) {\n        return null;\n      } // Start from the beginning if no view is focused.\n      // https://github.com/ckeditor/ckeditor5-ui/issues/206\n\n\n      if (current === null) {\n        return this[step === 1 ? 'first' : 'last'];\n      } // Cycle in both directions.\n\n\n      var index = (current + collectionLength + step) % collectionLength;\n\n      do {\n        var view = this.focusables.get(index); // TODO: Check if view is visible.\n\n        if (isFocusable(view)) {\n          return view;\n        } // Cycle in both directions.\n\n\n        index = (index + collectionLength + step) % collectionLength;\n      } while (index !== current);\n\n      return null;\n    }\n  }, {\n    key: \"first\",\n    get: function get() {\n      return this.focusables.find(isFocusable) || null;\n    }\n    /**\n     * Returns the last focusable view in {@link #focusables}.\n     * Returns `null` if there is none.\n     *\n     * @readonly\n     * @member {module:ui/view~View|null} #last\n     */\n\n  }, {\n    key: \"last\",\n    get: function get() {\n      return this.focusables.filter(isFocusable).slice(-1)[0] || null;\n    }\n    /**\n     * Returns the next focusable view in {@link #focusables} based on {@link #current}.\n     * Returns `null` if there is none.\n     *\n     * @readonly\n     * @member {module:ui/view~View|null} #next\n     */\n\n  }, {\n    key: \"next\",\n    get: function get() {\n      return this._getFocusableItem(1);\n    }\n    /**\n     * Returns the previous focusable view in {@link #focusables} based on {@link #current}.\n     * Returns `null` if there is none.\n     *\n     * @readonly\n     * @member {module:ui/view~View|null} #previous\n     */\n\n  }, {\n    key: \"previous\",\n    get: function get() {\n      return this._getFocusableItem(-1);\n    }\n    /**\n     * An index of the view in the {@link #focusables} which is focused according\n     * to {@link #focusTracker}. Returns `null` when there is no such view.\n     *\n     * @readonly\n     * @member {Number|null} #current\n     */\n\n  }, {\n    key: \"current\",\n    get: function get() {\n      var _this2 = this;\n\n      var index = null; // There's no focused view in the focusables.\n\n      if (this.focusTracker.focusedElement === null) {\n        return null;\n      }\n\n      this.focusables.find(function (view, viewIndex) {\n        var focused = view.element === _this2.focusTracker.focusedElement;\n\n        if (focused) {\n          index = viewIndex;\n        }\n\n        return focused;\n      });\n      return index;\n    }\n  }]);\n\n  return FocusCycler;\n}(); // Checks whether a view is focusable.\n//\n// @private\n// @param {module:ui/view~View} view A view to be checked.\n// @returns {Boolean}\n\n\nexport { FocusCycler as default };\n\nfunction isFocusable(view) {\n  return !!(view.focus && global.window.getComputedStyle(view.element).display != 'none');\n}","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nexport default listCacheClear;\n","import eq from './eq.js';\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nexport default assocIndexOf;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nexport default listCacheDelete;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nexport default listCacheGet;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nexport default listCacheHas;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nexport default listCacheSet;\n","import listCacheClear from './_listCacheClear.js';\nimport listCacheDelete from './_listCacheDelete.js';\nimport listCacheGet from './_listCacheGet.js';\nimport listCacheHas from './_listCacheHas.js';\nimport listCacheSet from './_listCacheSet.js';\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nexport default ListCache;\n","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/documentfragment\n */\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\n/**\n * Document fragment.\n *\n * To create a new document fragment instance use the\n * {@link module:engine/view/upcastwriter~UpcastWriter#createDocumentFragment `UpcastWriter#createDocumentFragment()`}\n * method.\n */\n\nvar DocumentFragment =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates new DocumentFragment instance.\n   *\n   * @protected\n   * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\n   * A list of nodes to be inserted into the created document fragment.\n   */\n  function DocumentFragment(children) {\n    _classCallCheck(this, DocumentFragment);\n\n    /**\n     * Array of child nodes.\n     *\n     * @protected\n     * @member {Array.<module:engine/view/element~Element>} module:engine/view/documentfragment~DocumentFragment#_children\n     */\n    this._children = [];\n\n    if (children) {\n      this._insertChild(0, children);\n    }\n  }\n  /**\n   * Iterable interface.\n   *\n   * Iterates over nodes added to this document fragment.\n   *\n   * @returns {Iterable.<module:engine/view/node~Node>}\n   */\n\n\n  _createClass(DocumentFragment, [{\n    key: Symbol.iterator,\n    value: function value() {\n      return this._children[Symbol.iterator]();\n    }\n    /**\n     * Number of child nodes in this document fragment.\n     *\n     * @readonly\n     * @type {Number}\n     */\n\n  }, {\n    key: \"is\",\n\n    /**\n     * Checks whether given view tree object is of given type.\n     *\n     * Read more in {@link module:engine/view/node~Node#is}.\n     *\n     * @param {String} type\n     * @returns {Boolean}\n     */\n    value: function is(type) {\n      return type == 'documentFragment';\n    }\n    /**\n     * {@link module:engine/view/documentfragment~DocumentFragment#_insertChild Insert} a child node or a list of child nodes at the end\n     * and sets the parent of these nodes to this fragment.\n     *\n     * @param {module:engine/view/item~Item|Iterable.<module:engine/view/item~Item>} items Items to be inserted.\n     * @returns {Number} Number of appended nodes.\n     */\n\n  }, {\n    key: \"_appendChild\",\n    value: function _appendChild(items) {\n      return this._insertChild(this.childCount, items);\n    }\n    /**\n     * Gets child at the given index.\n     *\n     * @param {Number} index Index of child.\n     * @returns {module:engine/view/node~Node} Child node.\n     */\n\n  }, {\n    key: \"getChild\",\n    value: function getChild(index) {\n      return this._children[index];\n    }\n    /**\n     * Gets index of the given child node. Returns `-1` if child node is not found.\n     *\n     * @param {module:engine/view/node~Node} node Child node.\n     * @returns {Number} Index of the child node.\n     */\n\n  }, {\n    key: \"getChildIndex\",\n    value: function getChildIndex(node) {\n      return this._children.indexOf(node);\n    }\n    /**\n     * Gets child nodes iterator.\n     *\n     * @returns {Iterable.<module:engine/view/node~Node>} Child nodes iterator.\n     */\n\n  }, {\n    key: \"getChildren\",\n    value: function getChildren() {\n      return this._children[Symbol.iterator]();\n    }\n    /**\n     * Inserts a child node or a list of child nodes on the given index and sets the parent of these nodes to\n     * this fragment.\n     *\n     * @param {Number} index Position where nodes should be inserted.\n     * @param {module:engine/view/item~Item|Iterable.<module:engine/view/item~Item>} items Items to be inserted.\n     * @returns {Number} Number of inserted nodes.\n     */\n\n  }, {\n    key: \"_insertChild\",\n    value: function _insertChild(index, items) {\n      this._fireChange('children', this);\n\n      var count = 0;\n      var nodes = normalize(items);\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = nodes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var node = _step.value;\n\n          // If node that is being added to this element is already inside another element, first remove it from the old parent.\n          if (node.parent !== null) {\n            node._remove();\n          }\n\n          node.parent = this;\n\n          this._children.splice(index, 0, node);\n\n          index++;\n          count++;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return count;\n    }\n    /**\n     * Removes number of child nodes starting at the given index and set the parent of these nodes to `null`.\n     *\n     * @param {Number} index Number of the first node to remove.\n     * @param {Number} [howMany=1] Number of nodes to remove.\n     * @returns {Array.<module:engine/view/node~Node>} The array of removed nodes.\n     */\n\n  }, {\n    key: \"_removeChildren\",\n    value: function _removeChildren(index) {\n      var howMany = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n      this._fireChange('children', this);\n\n      for (var i = index; i < index + howMany; i++) {\n        this._children[i].parent = null;\n      }\n\n      return this._children.splice(index, howMany);\n    }\n    /**\n     * Fires `change` event with given type of the change.\n     *\n     * @private\n     * @param {module:engine/view/document~ChangeType} type Type of the change.\n     * @param {module:engine/view/node~Node} node Changed node.\n     * @fires module:engine/view/node~Node#change\n     */\n\n  }, {\n    key: \"_fireChange\",\n    value: function _fireChange(type, node) {\n      this.fire('change:' + type, node);\n    }\n  }, {\n    key: \"childCount\",\n    get: function get() {\n      return this._children.length;\n    }\n    /**\n     * Is `true` if there are no nodes inside this document fragment, `false` otherwise.\n     *\n     * @readonly\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isEmpty\",\n    get: function get() {\n      return this.childCount === 0;\n    }\n    /**\n     * Artificial root of `DocumentFragment`. Returns itself. Added for compatibility reasons.\n     *\n     * @readonly\n     * @type {module:engine/model/documentfragment~DocumentFragment}\n     */\n\n  }, {\n    key: \"root\",\n    get: function get() {\n      return this;\n    }\n    /**\n     * Artificial parent of `DocumentFragment`. Returns `null`. Added for compatibility reasons.\n     *\n     * @readonly\n     * @type {null}\n     */\n\n  }, {\n    key: \"parent\",\n    get: function get() {\n      return null;\n    }\n  }]);\n\n  return DocumentFragment;\n}();\n\nexport { DocumentFragment as default };\nmix(DocumentFragment, EmitterMixin); // Converts strings to Text and non-iterables to arrays.\n//\n// @param {String|module:engine/view/item~Item|Iterable.<String|module:engine/view/item~Item>}\n// @returns {Iterable.<module:engine/view/node~Node>}\n\nfunction normalize(nodes) {\n  // Separate condition because string is iterable.\n  if (typeof nodes == 'string') {\n    return [new Text(nodes)];\n  }\n\n  if (!isIterable(nodes)) {\n    nodes = [nodes];\n  } // Array.from to enable .map() on non-arrays.\n\n\n  return Array.from(nodes).map(function (node) {\n    if (typeof node == 'string') {\n      return new Text(node);\n    }\n\n    if (node instanceof TextProxy) {\n      return new Text(node.data);\n    }\n\n    return node;\n  });\n}","function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/containerelement\n */\nimport Element from './element';\n/**\n * Containers are elements which define document structure. They define boundaries for\n * {@link module:engine/view/attributeelement~AttributeElement attributes}. They are mostly used for block elements like `<p>` or `<div>`.\n *\n * Editing engine does not define a fixed HTML DTD. This is why a feature developer needs to choose between various\n * types (container element, {@link module:engine/view/attributeelement~AttributeElement attribute element},\n * {@link module:engine/view/emptyelement~EmptyElement empty element}, etc) when developing a feature.\n *\n * The container element should be your default choice when writing a converter, unless:\n *\n * * this element represents a model text attribute (then use {@link module:engine/view/attributeelement~AttributeElement}),\n * * this is an empty element like `<img>` (then use {@link module:engine/view/emptyelement~EmptyElement}),\n * * this is a root element,\n * * this is a nested editable element (then use  {@link module:engine/view/editableelement~EditableElement}).\n *\n * To create a new container element instance use the\n * {@link module:engine/view/downcastwriter~DowncastWriter#createContainerElement `DowncastWriter#createContainerElement()`}\n * method.\n *\n * @extends module:engine/view/element~Element\n */\n\nvar ContainerElement =\n/*#__PURE__*/\nfunction (_Element) {\n  _inherits(ContainerElement, _Element);\n\n  /**\n   * Creates a container element.\n   *\n   * @see module:engine/view/downcastwriter~DowncastWriter#createContainerElement\n   * @see module:engine/view/element~Element\n   * @protected\n   */\n  function ContainerElement(name, attrs, children) {\n    var _this;\n\n    _classCallCheck(this, ContainerElement);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ContainerElement).call(this, name, attrs, children));\n    /**\n     * Returns block {@link module:engine/view/filler filler} offset or `null` if block filler is not needed.\n     *\n     * @method #getFillerOffset\n     * @returns {Number|null} Block filler offset or `null` if block filler is not needed.\n     */\n\n    _this.getFillerOffset = getFillerOffset;\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(ContainerElement, [{\n    key: \"is\",\n    value: function is(type) {\n      var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (!name) {\n        return type == 'containerElement' || _get(_getPrototypeOf(ContainerElement.prototype), \"is\", this).call(this, type);\n      } else {\n        return type == 'containerElement' && name == this.name || _get(_getPrototypeOf(ContainerElement.prototype), \"is\", this).call(this, type, name);\n      }\n    }\n  }]);\n\n  return ContainerElement;\n}(Element);\n/**\n * Returns block {@link module:engine/view/filler filler} offset or `null` if block filler is not needed.\n *\n * @returns {Number|null} Block filler offset or `null` if block filler is not needed.\n */\n\n\nexport { ContainerElement as default };\nexport function getFillerOffset() {\n  var children = _toConsumableArray(this.getChildren());\n\n  var lastChild = children[this.childCount - 1]; // Block filler is required after a `<br>` if it's the last element in its container. See #1422.\n\n  if (lastChild && lastChild.is('element', 'br')) {\n    return this.childCount;\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var child = _step.value;\n\n      // If there's any non-UI element – don't render the bogus.\n      if (!child.is('uiElement')) {\n        return null;\n      }\n    } // If there are only UI elements – render the bogus at the end of the element.\n\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return this.childCount;\n}","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nexport default Map;\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nexport default cloneDeep;\n","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/indexof\n */\n\n/**\n * Returns index of the node in the parent element.\n *\n * @param {Node} node Node which index is tested.\n * @returns {Number} Index of the node in the parent element. Returns 0 if node has no parent.\n */\nexport default function indexOf(node) {\n  var index = 0;\n\n  while (node.previousSibling) {\n    node = node.previousSibling;\n    index++;\n  }\n\n  return index;\n}","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/* globals Node */\n\n/**\n * @module utils/dom/getancestors\n */\n\n/**\n * Returns all ancestors of given DOM node, starting from the top-most (root). Includes the given node itself. If the\n * node is a part of `DocumentFragment` that `DocumentFragment` will be returned. In contrary, if the node is\n * appended to a `Document`, that `Document` will not be returned (algorithms operating on DOM tree care for `Document#documentElement`\n * at most, which will be returned).\n *\n * @param {Node} node DOM node.\n * @returns {Array.<Node|DocumentFragment>} Array of given `node` parents.\n */\nexport default function getAncestors(node) {\n  var nodes = []; // We are interested in `Node`s `DocumentFragment`s only.\n\n  while (node && node.nodeType != Node.DOCUMENT_NODE) {\n    nodes.unshift(node);\n    node = node.parentNode;\n  }\n\n  return nodes;\n}","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/domconverter\n */\n\n/* globals document, Node, NodeFilter, Text */\nimport ViewText from './text';\nimport ViewElement from './element';\nimport ViewPosition from './position';\nimport ViewRange from './range';\nimport ViewSelection from './selection';\nimport ViewDocumentFragment from './documentfragment';\nimport ViewTreeWalker from './treewalker';\nimport { BR_FILLER, INLINE_FILLER_LENGTH, isBlockFiller, isInlineFiller, startsWithFiller, getDataWithoutFiller } from './filler';\nimport global from '@ckeditor/ckeditor5-utils/src/dom/global';\nimport indexOf from '@ckeditor/ckeditor5-utils/src/dom/indexof';\nimport getAncestors from '@ckeditor/ckeditor5-utils/src/dom/getancestors';\nimport getCommonAncestor from '@ckeditor/ckeditor5-utils/src/dom/getcommonancestor';\nimport isText from '@ckeditor/ckeditor5-utils/src/dom/istext';\nimport { isElement } from 'lodash-es';\n/**\n * DomConverter is a set of tools to do transformations between DOM nodes and view nodes. It also handles\n * {@link module:engine/view/domconverter~DomConverter#bindElements binding} these nodes.\n *\n * DomConverter does not check which nodes should be rendered (use {@link module:engine/view/renderer~Renderer}), does not keep a\n * state of a tree nor keeps synchronization between tree view and DOM tree (use {@link module:engine/view/document~Document}).\n *\n * DomConverter keeps DOM elements to View element bindings, so when the converter will be destroyed, the binding will\n * be lost. Two converters will keep separate binding maps, so one tree view can be bound with two DOM trees.\n */\n\nvar DomConverter =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates DOM converter.\n   *\n   * @param {Object} options Object with configuration options.\n   * @param {Function} [options.blockFiller=module:engine/view/filler~BR_FILLER] Block filler creator.\n   */\n  function DomConverter() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, DomConverter);\n\n    // Using WeakMap prevent memory leaks: when the converter will be destroyed all referenced between View and DOM\n    // will be removed. Also because it is a *Weak*Map when both view and DOM elements will be removed referenced\n    // will be also removed, isn't it brilliant?\n    //\n    // Yes, PJ. It is.\n    //\n    // You guys so smart.\n    //\n    // I've been here. Seen stuff. Afraid of code now.\n\n    /**\n     * Block {@link module:engine/view/filler filler} creator, which is used to create all block fillers during the\n     * view to DOM conversion and to recognize block fillers during the DOM to view conversion.\n     *\n     * @readonly\n     * @member {Function} module:engine/view/domconverter~DomConverter#blockFiller\n     */\n    this.blockFiller = options.blockFiller || BR_FILLER;\n    /**\n     * Tag names of DOM `Element`s which are considered pre-formatted elements.\n     *\n     * @readonly\n     * @member {Array.<String>} module:engine/view/domconverter~DomConverter#preElements\n     */\n\n    this.preElements = ['pre'];\n    /**\n     * Tag names of DOM `Element`s which are considered block elements.\n     *\n     * @readonly\n     * @member {Array.<String>} module:engine/view/domconverter~DomConverter#blockElements\n     */\n\n    this.blockElements = ['p', 'div', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'];\n    /**\n     * DOM to View mapping.\n     *\n     * @private\n     * @member {WeakMap} module:engine/view/domconverter~DomConverter#_domToViewMapping\n     */\n\n    this._domToViewMapping = new WeakMap();\n    /**\n     * View to DOM mapping.\n     *\n     * @private\n     * @member {WeakMap} module:engine/view/domconverter~DomConverter#_viewToDomMapping\n     */\n\n    this._viewToDomMapping = new WeakMap();\n    /**\n     * Holds mapping between fake selection containers and corresponding view selections.\n     *\n     * @private\n     * @member {WeakMap} module:engine/view/domconverter~DomConverter#_fakeSelectionMapping\n     */\n\n    this._fakeSelectionMapping = new WeakMap();\n  }\n  /**\n   * Binds given DOM element that represents fake selection to {@link module:engine/view/documentselection~DocumentSelection\n   * document selection}. Document selection copy is stored and can be retrieved by\n   * {@link module:engine/view/domconverter~DomConverter#fakeSelectionToView} method.\n   *\n   * @param {HTMLElement} domElement\n   * @param {module:engine/view/documentselection~DocumentSelection} viewDocumentSelection\n   */\n\n\n  _createClass(DomConverter, [{\n    key: \"bindFakeSelection\",\n    value: function bindFakeSelection(domElement, viewDocumentSelection) {\n      this._fakeSelectionMapping.set(domElement, new ViewSelection(viewDocumentSelection));\n    }\n    /**\n     * Returns {@link module:engine/view/selection~Selection view selection} instance corresponding to\n     * given DOM element that represents fake selection. Returns `undefined` if binding to given DOM element does not exists.\n     *\n     * @param {HTMLElement} domElement\n     * @returns {module:engine/view/selection~Selection|undefined}\n     */\n\n  }, {\n    key: \"fakeSelectionToView\",\n    value: function fakeSelectionToView(domElement) {\n      return this._fakeSelectionMapping.get(domElement);\n    }\n    /**\n     * Binds DOM and View elements, so it will be possible to get corresponding elements using\n     * {@link module:engine/view/domconverter~DomConverter#mapDomToView} and\n     * {@link module:engine/view/domconverter~DomConverter#mapViewToDom}.\n     *\n     * @param {HTMLElement} domElement DOM element to bind.\n     * @param {module:engine/view/element~Element} viewElement View element to bind.\n     */\n\n  }, {\n    key: \"bindElements\",\n    value: function bindElements(domElement, viewElement) {\n      this._domToViewMapping.set(domElement, viewElement);\n\n      this._viewToDomMapping.set(viewElement, domElement);\n    }\n    /**\n     * Unbinds given `domElement` from the view element it was bound to. Unbinding is deep, meaning that all children of\n     * `domElement` will be unbound too.\n     *\n     * @param {HTMLElement} domElement DOM element to unbind.\n     */\n\n  }, {\n    key: \"unbindDomElement\",\n    value: function unbindDomElement(domElement) {\n      var viewElement = this._domToViewMapping.get(domElement);\n\n      if (viewElement) {\n        this._domToViewMapping.delete(domElement);\n\n        this._viewToDomMapping.delete(viewElement); // Use Array.from because of MS Edge (#923).\n\n\n        var _arr = Array.from(domElement.childNodes);\n\n        for (var _i = 0; _i < _arr.length; _i++) {\n          var child = _arr[_i];\n          this.unbindDomElement(child);\n        }\n      }\n    }\n    /**\n     * Binds DOM and View document fragments, so it will be possible to get corresponding document fragments using\n     * {@link module:engine/view/domconverter~DomConverter#mapDomToView} and\n     * {@link module:engine/view/domconverter~DomConverter#mapViewToDom}.\n     *\n     * @param {DocumentFragment} domFragment DOM document fragment to bind.\n     * @param {module:engine/view/documentfragment~DocumentFragment} viewFragment View document fragment to bind.\n     */\n\n  }, {\n    key: \"bindDocumentFragments\",\n    value: function bindDocumentFragments(domFragment, viewFragment) {\n      this._domToViewMapping.set(domFragment, viewFragment);\n\n      this._viewToDomMapping.set(viewFragment, domFragment);\n    }\n    /**\n     * Converts view to DOM. For all text nodes, not bound elements and document fragments new items will\n     * be created. For bound elements and document fragments function will return corresponding items.\n     *\n     * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} viewNode\n     * View node or document fragment to transform.\n     * @param {Document} domDocument Document which will be used to create DOM nodes.\n     * @param {Object} [options] Conversion options.\n     * @param {Boolean} [options.bind=false] Determines whether new elements will be bound.\n     * @param {Boolean} [options.withChildren=true] If `true`, node's and document fragment's children will be converted too.\n     * @returns {Node|DocumentFragment} Converted node or DocumentFragment.\n     */\n\n  }, {\n    key: \"viewToDom\",\n    value: function viewToDom(viewNode, domDocument) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      if (viewNode.is('text')) {\n        var textData = this._processDataFromViewText(viewNode);\n\n        return domDocument.createTextNode(textData);\n      } else {\n        if (this.mapViewToDom(viewNode)) {\n          return this.mapViewToDom(viewNode);\n        }\n\n        var domElement;\n\n        if (viewNode.is('documentFragment')) {\n          // Create DOM document fragment.\n          domElement = domDocument.createDocumentFragment();\n\n          if (options.bind) {\n            this.bindDocumentFragments(domElement, viewNode);\n          }\n        } else if (viewNode.is('uiElement')) {\n          // UIElement has its own render() method (see #799).\n          domElement = viewNode.render(domDocument);\n\n          if (options.bind) {\n            this.bindElements(domElement, viewNode);\n          }\n\n          return domElement;\n        } else {\n          // Create DOM element.\n          domElement = domDocument.createElement(viewNode.name);\n\n          if (options.bind) {\n            this.bindElements(domElement, viewNode);\n          } // Copy element's attributes.\n\n\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = viewNode.getAttributeKeys()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var key = _step.value;\n              domElement.setAttribute(key, viewNode.getAttribute(key));\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n        }\n\n        if (options.withChildren || options.withChildren === undefined) {\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = this.viewChildrenToDom(viewNode, domDocument, options)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var child = _step2.value;\n              domElement.appendChild(child);\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                _iterator2.return();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n        }\n\n        return domElement;\n      }\n    }\n    /**\n     * Converts children of the view element to DOM using the\n     * {@link module:engine/view/domconverter~DomConverter#viewToDom} method.\n     * Additionally, this method adds block {@link module:engine/view/filler filler} to the list of children, if needed.\n     *\n     * @param {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment} viewElement Parent view element.\n     * @param {Document} domDocument Document which will be used to create DOM nodes.\n     * @param {Object} options See {@link module:engine/view/domconverter~DomConverter#viewToDom} options parameter.\n     * @returns {Iterable.<Node>} DOM nodes.\n     */\n\n  }, {\n    key: \"viewChildrenToDom\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function viewChildrenToDom(viewElement, domDocument) {\n      var options,\n          fillerPositionOffset,\n          offset,\n          _iteratorNormalCompletion3,\n          _didIteratorError3,\n          _iteratorError3,\n          _iterator3,\n          _step3,\n          childView,\n          _args = arguments;\n\n      return regeneratorRuntime.wrap(function viewChildrenToDom$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n              fillerPositionOffset = viewElement.getFillerOffset && viewElement.getFillerOffset();\n              offset = 0;\n              _iteratorNormalCompletion3 = true;\n              _didIteratorError3 = false;\n              _iteratorError3 = undefined;\n              _context.prev = 6;\n              _iterator3 = viewElement.getChildren()[Symbol.iterator]();\n\n            case 8:\n              if (_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done) {\n                _context.next = 19;\n                break;\n              }\n\n              childView = _step3.value;\n\n              if (!(fillerPositionOffset === offset)) {\n                _context.next = 13;\n                break;\n              }\n\n              _context.next = 13;\n              return this.blockFiller(domDocument);\n\n            case 13:\n              _context.next = 15;\n              return this.viewToDom(childView, domDocument, options);\n\n            case 15:\n              offset++;\n\n            case 16:\n              _iteratorNormalCompletion3 = true;\n              _context.next = 8;\n              break;\n\n            case 19:\n              _context.next = 25;\n              break;\n\n            case 21:\n              _context.prev = 21;\n              _context.t0 = _context[\"catch\"](6);\n              _didIteratorError3 = true;\n              _iteratorError3 = _context.t0;\n\n            case 25:\n              _context.prev = 25;\n              _context.prev = 26;\n\n              if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n                _iterator3.return();\n              }\n\n            case 28:\n              _context.prev = 28;\n\n              if (!_didIteratorError3) {\n                _context.next = 31;\n                break;\n              }\n\n              throw _iteratorError3;\n\n            case 31:\n              return _context.finish(28);\n\n            case 32:\n              return _context.finish(25);\n\n            case 33:\n              if (!(fillerPositionOffset === offset)) {\n                _context.next = 36;\n                break;\n              }\n\n              _context.next = 36;\n              return this.blockFiller(domDocument);\n\n            case 36:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, viewChildrenToDom, this, [[6, 21, 25, 33], [26,, 28, 32]]);\n    })\n    /**\n     * Converts view {@link module:engine/view/range~Range} to DOM range.\n     * Inline and block {@link module:engine/view/filler fillers} are handled during the conversion.\n     *\n     * @param {module:engine/view/range~Range} viewRange View range.\n     * @returns {Range} DOM range.\n     */\n\n  }, {\n    key: \"viewRangeToDom\",\n    value: function viewRangeToDom(viewRange) {\n      var domStart = this.viewPositionToDom(viewRange.start);\n      var domEnd = this.viewPositionToDom(viewRange.end);\n      var domRange = document.createRange();\n      domRange.setStart(domStart.parent, domStart.offset);\n      domRange.setEnd(domEnd.parent, domEnd.offset);\n      return domRange;\n    }\n    /**\n     * Converts view {@link module:engine/view/position~Position} to DOM parent and offset.\n     *\n     * Inline and block {@link module:engine/view/filler fillers} are handled during the conversion.\n     * If the converted position is directly before inline filler it is moved inside the filler.\n     *\n     * @param {module:engine/view/position~Position} viewPosition View position.\n     * @returns {Object|null} position DOM position or `null` if view position could not be converted to DOM.\n     * @returns {Node} position.parent DOM position parent.\n     * @returns {Number} position.offset DOM position offset.\n     */\n\n  }, {\n    key: \"viewPositionToDom\",\n    value: function viewPositionToDom(viewPosition) {\n      var viewParent = viewPosition.parent;\n\n      if (viewParent.is('text')) {\n        var domParent = this.findCorrespondingDomText(viewParent);\n\n        if (!domParent) {\n          // Position is in a view text node that has not been rendered to DOM yet.\n          return null;\n        }\n\n        var offset = viewPosition.offset;\n\n        if (startsWithFiller(domParent)) {\n          offset += INLINE_FILLER_LENGTH;\n        }\n\n        return {\n          parent: domParent,\n          offset: offset\n        };\n      } else {\n        // viewParent is instance of ViewElement.\n        var _domParent, domBefore, domAfter;\n\n        if (viewPosition.offset === 0) {\n          _domParent = this.mapViewToDom(viewParent);\n\n          if (!_domParent) {\n            // Position is in a view element that has not been rendered to DOM yet.\n            return null;\n          }\n\n          domAfter = _domParent.childNodes[0];\n        } else {\n          var nodeBefore = viewPosition.nodeBefore;\n          domBefore = nodeBefore.is('text') ? this.findCorrespondingDomText(nodeBefore) : this.mapViewToDom(viewPosition.nodeBefore);\n\n          if (!domBefore) {\n            // Position is after a view element that has not been rendered to DOM yet.\n            return null;\n          }\n\n          _domParent = domBefore.parentNode;\n          domAfter = domBefore.nextSibling;\n        } // If there is an inline filler at position return position inside the filler. We should never return\n        // the position before the inline filler.\n\n\n        if (isText(domAfter) && startsWithFiller(domAfter)) {\n          return {\n            parent: domAfter,\n            offset: INLINE_FILLER_LENGTH\n          };\n        }\n\n        var _offset = domBefore ? indexOf(domBefore) + 1 : 0;\n\n        return {\n          parent: _domParent,\n          offset: _offset\n        };\n      }\n    }\n    /**\n     * Converts DOM to view. For all text nodes, not bound elements and document fragments new items will\n     * be created. For bound elements and document fragments function will return corresponding items. For\n     * {@link module:engine/view/filler fillers} `null` will be returned.\n     * For all DOM elements rendered by {@link module:engine/view/uielement~UIElement} that UIElement will be returned.\n     *\n     * @param {Node|DocumentFragment} domNode DOM node or document fragment to transform.\n     * @param {Object} [options] Conversion options.\n     * @param {Boolean} [options.bind=false] Determines whether new elements will be bound.\n     * @param {Boolean} [options.withChildren=true] If `true`, node's and document fragment's children will be converted too.\n     * @param {Boolean} [options.keepOriginalCase=false] If `false`, node's tag name will be converter to lower case.\n     * @returns {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment|null} Converted node or document fragment\n     * or `null` if DOM node is a {@link module:engine/view/filler filler} or the given node is an empty text node.\n     */\n\n  }, {\n    key: \"domToView\",\n    value: function domToView(domNode) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (isBlockFiller(domNode, this.blockFiller)) {\n        return null;\n      } // When node is inside UIElement return that UIElement as it's view representation.\n\n\n      var uiElement = this.getParentUIElement(domNode, this._domToViewMapping);\n\n      if (uiElement) {\n        return uiElement;\n      }\n\n      if (isText(domNode)) {\n        if (isInlineFiller(domNode)) {\n          return null;\n        } else {\n          var textData = this._processDataFromDomText(domNode);\n\n          return textData === '' ? null : new ViewText(textData);\n        }\n      } else if (this.isComment(domNode)) {\n        return null;\n      } else {\n        if (this.mapDomToView(domNode)) {\n          return this.mapDomToView(domNode);\n        }\n\n        var viewElement;\n\n        if (this.isDocumentFragment(domNode)) {\n          // Create view document fragment.\n          viewElement = new ViewDocumentFragment();\n\n          if (options.bind) {\n            this.bindDocumentFragments(domNode, viewElement);\n          }\n        } else {\n          // Create view element.\n          var viewName = options.keepOriginalCase ? domNode.tagName : domNode.tagName.toLowerCase();\n          viewElement = new ViewElement(viewName);\n\n          if (options.bind) {\n            this.bindElements(domNode, viewElement);\n          } // Copy element's attributes.\n\n\n          var attrs = domNode.attributes;\n\n          for (var i = attrs.length - 1; i >= 0; i--) {\n            viewElement._setAttribute(attrs[i].name, attrs[i].value);\n          }\n        }\n\n        if (options.withChildren || options.withChildren === undefined) {\n          var _iteratorNormalCompletion4 = true;\n          var _didIteratorError4 = false;\n          var _iteratorError4 = undefined;\n\n          try {\n            for (var _iterator4 = this.domChildrenToView(domNode, options)[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n              var child = _step4.value;\n\n              viewElement._appendChild(child);\n            }\n          } catch (err) {\n            _didIteratorError4 = true;\n            _iteratorError4 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n                _iterator4.return();\n              }\n            } finally {\n              if (_didIteratorError4) {\n                throw _iteratorError4;\n              }\n            }\n          }\n        }\n\n        return viewElement;\n      }\n    }\n    /**\n     * Converts children of the DOM element to view nodes using\n     * the {@link module:engine/view/domconverter~DomConverter#domToView} method.\n     * Additionally this method omits block {@link module:engine/view/filler filler}, if it exists in the DOM parent.\n     *\n     * @param {HTMLElement} domElement Parent DOM element.\n     * @param {Object} options See {@link module:engine/view/domconverter~DomConverter#domToView} options parameter.\n     * @returns {Iterable.<module:engine/view/node~Node>} View nodes.\n     */\n\n  }, {\n    key: \"domChildrenToView\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function domChildrenToView(domElement) {\n      var options,\n          i,\n          domChild,\n          viewChild,\n          _args2 = arguments;\n      return regeneratorRuntime.wrap(function domChildrenToView$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              options = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {};\n              i = 0;\n\n            case 2:\n              if (!(i < domElement.childNodes.length)) {\n                _context2.next = 11;\n                break;\n              }\n\n              domChild = domElement.childNodes[i];\n              viewChild = this.domToView(domChild, options);\n\n              if (!(viewChild !== null)) {\n                _context2.next = 8;\n                break;\n              }\n\n              _context2.next = 8;\n              return viewChild;\n\n            case 8:\n              i++;\n              _context2.next = 2;\n              break;\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, domChildrenToView, this);\n    })\n    /**\n     * Converts DOM selection to view {@link module:engine/view/selection~Selection}.\n     * Ranges which cannot be converted will be omitted.\n     *\n     * @param {Selection} domSelection DOM selection.\n     * @returns {module:engine/view/selection~Selection} View selection.\n     */\n\n  }, {\n    key: \"domSelectionToView\",\n    value: function domSelectionToView(domSelection) {\n      // DOM selection might be placed in fake selection container.\n      // If container contains fake selection - return corresponding view selection.\n      if (domSelection.rangeCount === 1) {\n        var container = domSelection.getRangeAt(0).startContainer; // The DOM selection might be moved to the text node inside the fake selection container.\n\n        if (isText(container)) {\n          container = container.parentNode;\n        }\n\n        var viewSelection = this.fakeSelectionToView(container);\n\n        if (viewSelection) {\n          return viewSelection;\n        }\n      }\n\n      var isBackward = this.isDomSelectionBackward(domSelection);\n      var viewRanges = [];\n\n      for (var i = 0; i < domSelection.rangeCount; i++) {\n        // DOM Range have correct start and end, no matter what is the DOM Selection direction. So we don't have to fix anything.\n        var domRange = domSelection.getRangeAt(i);\n        var viewRange = this.domRangeToView(domRange);\n\n        if (viewRange) {\n          viewRanges.push(viewRange);\n        }\n      }\n\n      return new ViewSelection(viewRanges, {\n        backward: isBackward\n      });\n    }\n    /**\n     * Converts DOM Range to view {@link module:engine/view/range~Range}.\n     * If the start or end position can not be converted `null` is returned.\n     *\n     * @param {Range} domRange DOM range.\n     * @returns {module:engine/view/range~Range|null} View range.\n     */\n\n  }, {\n    key: \"domRangeToView\",\n    value: function domRangeToView(domRange) {\n      var viewStart = this.domPositionToView(domRange.startContainer, domRange.startOffset);\n      var viewEnd = this.domPositionToView(domRange.endContainer, domRange.endOffset);\n\n      if (viewStart && viewEnd) {\n        return new ViewRange(viewStart, viewEnd);\n      }\n\n      return null;\n    }\n    /**\n     * Converts DOM parent and offset to view {@link module:engine/view/position~Position}.\n     *\n     * If the position is inside a {@link module:engine/view/filler filler} which has no corresponding view node,\n     * position of the filler will be converted and returned.\n     *\n     * If the position is inside DOM element rendered by {@link module:engine/view/uielement~UIElement}\n     * that position will be converted to view position before that UIElement.\n     *\n     * If structures are too different and it is not possible to find corresponding position then `null` will be returned.\n     *\n     * @param {Node} domParent DOM position parent.\n     * @param {Number} domOffset DOM position offset.\n     * @returns {module:engine/view/position~Position} viewPosition View position.\n     */\n\n  }, {\n    key: \"domPositionToView\",\n    value: function domPositionToView(domParent, domOffset) {\n      if (isBlockFiller(domParent, this.blockFiller)) {\n        return this.domPositionToView(domParent.parentNode, indexOf(domParent));\n      } // If position is somewhere inside UIElement - return position before that element.\n\n\n      var viewElement = this.mapDomToView(domParent);\n\n      if (viewElement && viewElement.is('uiElement')) {\n        return ViewPosition._createBefore(viewElement);\n      }\n\n      if (isText(domParent)) {\n        if (isInlineFiller(domParent)) {\n          return this.domPositionToView(domParent.parentNode, indexOf(domParent));\n        }\n\n        var viewParent = this.findCorrespondingViewText(domParent);\n        var offset = domOffset;\n\n        if (!viewParent) {\n          return null;\n        }\n\n        if (startsWithFiller(domParent)) {\n          offset -= INLINE_FILLER_LENGTH;\n          offset = offset < 0 ? 0 : offset;\n        }\n\n        return new ViewPosition(viewParent, offset);\n      } // domParent instanceof HTMLElement.\n      else {\n          if (domOffset === 0) {\n            var _viewParent = this.mapDomToView(domParent);\n\n            if (_viewParent) {\n              return new ViewPosition(_viewParent, 0);\n            }\n          } else {\n            var domBefore = domParent.childNodes[domOffset - 1];\n            var viewBefore = isText(domBefore) ? this.findCorrespondingViewText(domBefore) : this.mapDomToView(domBefore); // TODO #663\n\n            if (viewBefore && viewBefore.parent) {\n              return new ViewPosition(viewBefore.parent, viewBefore.index + 1);\n            }\n          }\n\n          return null;\n        }\n    }\n    /**\n     * Returns corresponding view {@link module:engine/view/element~Element Element} or\n     * {@link module:engine/view/documentfragment~DocumentFragment} for provided DOM element or\n     * document fragment. If there is no view item {@link module:engine/view/domconverter~DomConverter#bindElements bound}\n     * to the given DOM - `undefined` is returned.\n     * For all DOM elements rendered by {@link module:engine/view/uielement~UIElement} that UIElement will be returned.\n     *\n     * @param {DocumentFragment|Element} domElementOrDocumentFragment DOM element or document fragment.\n     * @returns {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment|undefined}\n     * Corresponding view element, document fragment or `undefined` if no element was bound.\n     */\n\n  }, {\n    key: \"mapDomToView\",\n    value: function mapDomToView(domElementOrDocumentFragment) {\n      return this.getParentUIElement(domElementOrDocumentFragment) || this._domToViewMapping.get(domElementOrDocumentFragment);\n    }\n    /**\n     * Finds corresponding text node. Text nodes are not {@link module:engine/view/domconverter~DomConverter#bindElements bound},\n     * corresponding text node is returned based on the sibling or parent.\n     *\n     * If the directly previous sibling is a {@link module:engine/view/domconverter~DomConverter#bindElements bound} element, it is used\n     * to find the corresponding text node.\n     *\n     * If this is a first child in the parent and the parent is a {@link module:engine/view/domconverter~DomConverter#bindElements bound}\n     * element, it is used to find the corresponding text node.\n     *\n     * For all text nodes rendered by {@link module:engine/view/uielement~UIElement} that UIElement will be returned.\n     *\n     * Otherwise `null` is returned.\n     *\n     * Note that for the block or inline {@link module:engine/view/filler filler} this method returns `null`.\n     *\n     * @param {Text} domText DOM text node.\n     * @returns {module:engine/view/text~Text|null} Corresponding view text node or `null`, if it was not possible to find a\n     * corresponding node.\n     */\n\n  }, {\n    key: \"findCorrespondingViewText\",\n    value: function findCorrespondingViewText(domText) {\n      if (isInlineFiller(domText)) {\n        return null;\n      } // If DOM text was rendered by UIElement - return that element.\n\n\n      var uiElement = this.getParentUIElement(domText);\n\n      if (uiElement) {\n        return uiElement;\n      }\n\n      var previousSibling = domText.previousSibling; // Try to use previous sibling to find the corresponding text node.\n\n      if (previousSibling) {\n        if (!this.isElement(previousSibling)) {\n          // The previous is text or comment.\n          return null;\n        }\n\n        var viewElement = this.mapDomToView(previousSibling);\n\n        if (viewElement) {\n          var nextSibling = viewElement.nextSibling; // It might be filler which has no corresponding view node.\n\n          if (nextSibling instanceof ViewText) {\n            return viewElement.nextSibling;\n          } else {\n            return null;\n          }\n        }\n      } // Try to use parent to find the corresponding text node.\n      else {\n          var _viewElement = this.mapDomToView(domText.parentNode);\n\n          if (_viewElement) {\n            var firstChild = _viewElement.getChild(0); // It might be filler which has no corresponding view node.\n\n\n            if (firstChild instanceof ViewText) {\n              return firstChild;\n            } else {\n              return null;\n            }\n          }\n        }\n\n      return null;\n    }\n    /**\n     * Returns corresponding DOM item for provided {@link module:engine/view/element~Element Element} or\n     * {@link module:engine/view/documentfragment~DocumentFragment DocumentFragment}.\n     * To find a corresponding text for {@link module:engine/view/text~Text view Text instance}\n     * use {@link #findCorrespondingDomText}.\n     *\n     * @param {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment} viewNode\n     * View element or document fragment.\n     * @returns {Node|DocumentFragment|undefined} Corresponding DOM node or document fragment.\n     */\n\n  }, {\n    key: \"mapViewToDom\",\n    value: function mapViewToDom(documentFragmentOrElement) {\n      return this._viewToDomMapping.get(documentFragmentOrElement);\n    }\n    /**\n     * Finds corresponding text node. Text nodes are not {@link module:engine/view/domconverter~DomConverter#bindElements bound},\n     * corresponding text node is returned based on the sibling or parent.\n     *\n     * If the directly previous sibling is a {@link module:engine/view/domconverter~DomConverter#bindElements bound} element, it is used\n     * to find the corresponding text node.\n     *\n     * If this is a first child in the parent and the parent is a {@link module:engine/view/domconverter~DomConverter#bindElements bound}\n     * element, it is used to find the corresponding text node.\n     *\n     * Otherwise `null` is returned.\n     *\n     * @param {module:engine/view/text~Text} viewText View text node.\n     * @returns {Text|null} Corresponding DOM text node or `null`, if it was not possible to find a corresponding node.\n     */\n\n  }, {\n    key: \"findCorrespondingDomText\",\n    value: function findCorrespondingDomText(viewText) {\n      var previousSibling = viewText.previousSibling; // Try to use previous sibling to find the corresponding text node.\n\n      if (previousSibling && this.mapViewToDom(previousSibling)) {\n        return this.mapViewToDom(previousSibling).nextSibling;\n      } // If this is a first node, try to use parent to find the corresponding text node.\n\n\n      if (!previousSibling && viewText.parent && this.mapViewToDom(viewText.parent)) {\n        return this.mapViewToDom(viewText.parent).childNodes[0];\n      }\n\n      return null;\n    }\n    /**\n     * Focuses DOM editable that is corresponding to provided {@link module:engine/view/editableelement~EditableElement}.\n     *\n     * @param {module:engine/view/editableelement~EditableElement} viewEditable\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus(viewEditable) {\n      var domEditable = this.mapViewToDom(viewEditable);\n\n      if (domEditable && domEditable.ownerDocument.activeElement !== domEditable) {\n        // Save the scrollX and scrollY positions before the focus.\n        var _global$window = global.window,\n            scrollX = _global$window.scrollX,\n            scrollY = _global$window.scrollY;\n        var scrollPositions = []; // Save all scrollLeft and scrollTop values starting from domEditable up to\n        // document#documentElement.\n\n        forEachDomNodeAncestor(domEditable, function (node) {\n          var scrollLeft = node.scrollLeft,\n              scrollTop = node.scrollTop;\n          scrollPositions.push([scrollLeft, scrollTop]);\n        });\n        domEditable.focus(); // Restore scrollLeft and scrollTop values starting from domEditable up to\n        // document#documentElement.\n        // https://github.com/ckeditor/ckeditor5-engine/issues/951\n        // https://github.com/ckeditor/ckeditor5-engine/issues/957\n\n        forEachDomNodeAncestor(domEditable, function (node) {\n          var _scrollPositions$shif = scrollPositions.shift(),\n              _scrollPositions$shif2 = _slicedToArray(_scrollPositions$shif, 2),\n              scrollLeft = _scrollPositions$shif2[0],\n              scrollTop = _scrollPositions$shif2[1];\n\n          node.scrollLeft = scrollLeft;\n          node.scrollTop = scrollTop;\n        }); // Restore the scrollX and scrollY positions after the focus.\n        // https://github.com/ckeditor/ckeditor5-engine/issues/951\n\n        global.window.scrollTo(scrollX, scrollY);\n      }\n    }\n    /**\n     * Returns `true` when `node.nodeType` equals `Node.ELEMENT_NODE`.\n     *\n     * @param {Node} node Node to check.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isElement\",\n    value: function isElement(node) {\n      return node && node.nodeType == Node.ELEMENT_NODE;\n    }\n    /**\n     * Returns `true` when `node.nodeType` equals `Node.DOCUMENT_FRAGMENT_NODE`.\n     *\n     * @param {Node} node Node to check.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isDocumentFragment\",\n    value: function isDocumentFragment(node) {\n      return node && node.nodeType == Node.DOCUMENT_FRAGMENT_NODE;\n    }\n    /**\n     * Returns `true` when `node.nodeType` equals `Node.COMMENT_NODE`.\n     *\n     * @param {Node} node Node to check.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isComment\",\n    value: function isComment(node) {\n      return node && node.nodeType == Node.COMMENT_NODE;\n    }\n    /**\n     * Returns `true` if given selection is a backward selection, that is, if it's `focus` is before `anchor`.\n     *\n     * @param {Selection} DOM Selection instance to check.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"isDomSelectionBackward\",\n    value: function isDomSelectionBackward(selection) {\n      if (selection.isCollapsed) {\n        return false;\n      } // Since it takes multiple lines of code to check whether a \"DOM Position\" is before/after another \"DOM Position\",\n      // we will use the fact that range will collapse if it's end is before it's start.\n\n\n      var range = document.createRange();\n      range.setStart(selection.anchorNode, selection.anchorOffset);\n      range.setEnd(selection.focusNode, selection.focusOffset);\n      var backward = range.collapsed;\n      range.detach();\n      return backward;\n    }\n    /**\n     * Returns parent {@link module:engine/view/uielement~UIElement} for provided DOM node. Returns `null` if there is no\n     * parent UIElement.\n     *\n     * @param {Node} domNode\n     * @returns {module:engine/view/uielement~UIElement|null}\n     */\n\n  }, {\n    key: \"getParentUIElement\",\n    value: function getParentUIElement(domNode) {\n      var ancestors = getAncestors(domNode); // Remove domNode from the list.\n\n      ancestors.pop();\n\n      while (ancestors.length) {\n        var _domNode = ancestors.pop();\n\n        var viewNode = this._domToViewMapping.get(_domNode);\n\n        if (viewNode && viewNode.is('uiElement')) {\n          return viewNode;\n        }\n      }\n\n      return null;\n    }\n    /**\n     * Checks if given selection's boundaries are at correct places.\n     *\n     * The following places are considered as incorrect for selection boundaries:\n     * * before or in the middle of the inline filler sequence,\n     * * inside the DOM element which represents {@link module:engine/view/uielement~UIElement a view ui element}.\n     *\n     * @param {Selection} domSelection DOM Selection object to be checked.\n     * @returns {Boolean} `true` if the given selection is at a correct place, `false` otherwise.\n     */\n\n  }, {\n    key: \"isDomSelectionCorrect\",\n    value: function isDomSelectionCorrect(domSelection) {\n      return this._isDomSelectionPositionCorrect(domSelection.anchorNode, domSelection.anchorOffset) && this._isDomSelectionPositionCorrect(domSelection.focusNode, domSelection.focusOffset);\n    }\n    /**\n     * Checks if the given DOM position is a correct place for selection boundary. See {@link #isDomSelectionCorrect}.\n     *\n     * @private\n     * @param {Element} domParent Position parent.\n     * @param {Number} offset Position offset.\n     * @returns {Boolean} `true` if given position is at a correct place for selection boundary, `false` otherwise.\n     */\n\n  }, {\n    key: \"_isDomSelectionPositionCorrect\",\n    value: function _isDomSelectionPositionCorrect(domParent, offset) {\n      // If selection is before or in the middle of inline filler string, it is incorrect.\n      if (isText(domParent) && startsWithFiller(domParent) && offset < INLINE_FILLER_LENGTH) {\n        // Selection in a text node, at wrong position (before or in the middle of filler).\n        return false;\n      }\n\n      if (this.isElement(domParent) && startsWithFiller(domParent.childNodes[offset])) {\n        // Selection in an element node, before filler text node.\n        return false;\n      }\n\n      var viewParent = this.mapDomToView(domParent); // If selection is in `view.UIElement`, it is incorrect. Note that `mapDomToView()` returns `view.UIElement`\n      // also for any dom element that is inside the view ui element (so we don't need to perform any additional checks).\n\n      if (viewParent && viewParent.is('uiElement')) {\n        return false;\n      }\n\n      return true;\n    }\n    /**\n     * Takes text data from a given {@link module:engine/view/text~Text#data} and processes it so\n     * it is correctly displayed in the DOM.\n     *\n     * Following changes are done:\n     *\n     * * a space at the beginning is changed to `&nbsp;` if this is the first text node in its container\n     * element or if a previous text node ends with a space character,\n     * * space at the end of the text node is changed to `&nbsp;` if this is the last text node in its container,\n     * * remaining spaces are replaced to a chain of spaces and `&nbsp;` (e.g. `'x   x'` becomes `'x &nbsp; x'`).\n     *\n     * Content of {@link #preElements} is not processed.\n     *\n     * @private\n     * @param {module:engine/view/text~Text} node View text node to process.\n     * @returns {String} Processed text data.\n     */\n\n  }, {\n    key: \"_processDataFromViewText\",\n    value: function _processDataFromViewText(node) {\n      var _this = this;\n\n      var data = node.data; // If any of node ancestors has a name which is in `preElements` array, then currently processed\n      // view text node is (will be) in preformatted element. We should not change whitespaces then.\n\n      if (node.getAncestors().some(function (parent) {\n        return _this.preElements.includes(parent.name);\n      })) {\n        return data;\n      } // 1. Replace the first space with a nbsp if the previous node ends with a space or there is no previous node\n      // (container element boundary).\n\n\n      if (data.charAt(0) == ' ') {\n        var prevNode = this._getTouchingViewTextNode(node, false);\n\n        var prevEndsWithSpace = prevNode && this._nodeEndsWithSpace(prevNode);\n\n        if (prevEndsWithSpace || !prevNode) {\n          data = \"\\xA0\" + data.substr(1);\n        }\n      } // 2. Replace the last space with a nbsp if this is the last text node (container element boundary).\n\n\n      if (data.charAt(data.length - 1) == ' ') {\n        var nextNode = this._getTouchingViewTextNode(node, true);\n\n        if (!nextNode) {\n          data = data.substr(0, data.length - 1) + \"\\xA0\";\n        }\n      }\n\n      return data.replace(/ {2}/g, \" \\xA0\");\n    }\n    /**\n     * Checks whether given node ends with a space character after changing appropriate space characters to `&nbsp;`s.\n     *\n     * @private\n     * @param {module:engine/view/text~Text} node Node to check.\n     * @returns {Boolean} `true` if given `node` ends with space, `false` otherwise.\n     */\n\n  }, {\n    key: \"_nodeEndsWithSpace\",\n    value: function _nodeEndsWithSpace(node) {\n      var _this2 = this;\n\n      if (node.getAncestors().some(function (parent) {\n        return _this2.preElements.includes(parent.name);\n      })) {\n        return false;\n      }\n\n      var data = this._processDataFromViewText(node);\n\n      return data.charAt(data.length - 1) == ' ';\n    }\n    /**\n     * Takes text data from native `Text` node and processes it to a correct {@link module:engine/view/text~Text view text node} data.\n     *\n     * Following changes are done:\n     *\n     * * multiple whitespaces are replaced to a single space,\n     * * space at the beginning of a text node is removed if it is the first text node in its container\n     * element or if the previous text node ends with a space character,\n     * * space at the end of the text node is removed, if it is the last text node in its container.\n     *\n     * @param {Node} node DOM text node to process.\n     * @returns {String} Processed data.\n     * @private\n     */\n\n  }, {\n    key: \"_processDataFromDomText\",\n    value: function _processDataFromDomText(node) {\n      var data = node.data;\n\n      if (_hasDomParentOfType(node, this.preElements)) {\n        return getDataWithoutFiller(node);\n      } // Change all consecutive whitespace characters (from the [ \\n\\t\\r] set –\n      // see https://github.com/ckeditor/ckeditor5-engine/issues/822#issuecomment-311670249) to a single space character.\n      // That's how multiple whitespaces are treated when rendered, so we normalize those whitespaces.\n      // We're replacing 1+ (and not 2+) to also normalize singular \\n\\t\\r characters (#822).\n\n\n      data = data.replace(/[ \\n\\t\\r]{1,}/g, ' ');\n\n      var prevNode = this._getTouchingInlineDomNode(node, false);\n\n      var nextNode = this._getTouchingInlineDomNode(node, true);\n\n      var shouldLeftTrim = this._checkShouldLeftTrimDomText(prevNode);\n\n      var shouldRightTrim = this._checkShouldRightTrimDomText(node, nextNode); // If the previous dom text node does not exist or it ends by whitespace character, remove space character from the beginning\n      // of this text node. Such space character is treated as a whitespace.\n\n\n      if (shouldLeftTrim) {\n        data = data.replace(/^ /, '');\n      } // If the next text node does not exist remove space character from the end of this text node.\n\n\n      if (shouldRightTrim) {\n        data = data.replace(/ $/, '');\n      } // At the beginning and end of a block element, Firefox inserts normal space + <br> instead of non-breaking space.\n      // This means that the text node starts/end with normal space instead of non-breaking space.\n      // This causes a problem because the normal space would be removed in `.replace` calls above. To prevent that,\n      // the inline filler is removed only after the data is initially processed (by the `.replace` above). See ckeditor5#692.\n\n\n      data = getDataWithoutFiller(new Text(data)); // At this point we should have removed all whitespaces from DOM text data.\n      // Now we have to change &nbsp; chars, that were in DOM text data because of rendering reasons, to spaces.\n      // First, change all ` \\u00A0` pairs (space + &nbsp;) to two spaces. DOM converter changes two spaces from model/view as\n      // ` \\u00A0` to ensure proper rendering. Since here we convert back, we recognize those pairs and change them\n      // to `  ` which is what we expect to have in model/view.\n\n      data = data.replace(/ \\u00A0/g, '  '); // Then, change &nbsp; character that is at the beginning of the text node to space character.\n      // As above, that &nbsp; was created for rendering reasons but it's real meaning is just a space character.\n      // We do that replacement only if this is the first node or the previous node ends on whitespace character.\n\n      if (shouldLeftTrim) {\n        data = data.replace(/^\\u00A0/, ' ');\n      } // Since input text data could be: `x_ _`, we would not replace the first &nbsp; after `x` character.\n      // We have to fix it. Since we already change all ` &nbsp;`, we will have something like this at the end of text data:\n      // `x_ _ _` -> `x_    `. Find &nbsp; at the end of string (can be followed only by spaces).\n      // We do that replacement only if this is the last node or the next node starts with &nbsp; or is a <br>.\n\n\n      if (isText(nextNode) ? nextNode.data.charAt(0) == \"\\xA0\" : true) {\n        data = data.replace(/\\u00A0( *)$/, ' $1');\n      } // At this point, all whitespaces should be removed and all &nbsp; created for rendering reasons should be\n      // changed to normal space. All left &nbsp; are &nbsp; inserted intentionally.\n\n\n      return data;\n    }\n    /**\n     * Helper function which checks if a DOM text node, preceded by the given `prevNode` should\n     * be trimmed from the left side.\n     *\n     * @param {Node} prevNode\n     */\n\n  }, {\n    key: \"_checkShouldLeftTrimDomText\",\n    value: function _checkShouldLeftTrimDomText(prevNode) {\n      if (!prevNode) {\n        return true;\n      }\n\n      if (isElement(prevNode)) {\n        return true;\n      }\n\n      return /[^\\S\\u00A0]/.test(prevNode.data.charAt(prevNode.data.length - 1));\n    }\n    /**\n     * Helper function which checks if a DOM text node, succeeded by the given `nextNode` should\n     * be trimmed from the right side.\n     *\n     * @param {Node} node\n     * @param {Node} prevNode\n     */\n\n  }, {\n    key: \"_checkShouldRightTrimDomText\",\n    value: function _checkShouldRightTrimDomText(node, nextNode) {\n      if (nextNode) {\n        return false;\n      }\n\n      return !startsWithFiller(node);\n    }\n    /**\n     * Helper function. For given {@link module:engine/view/text~Text view text node}, it finds previous or next sibling\n     * that is contained in the same container element. If there is no such sibling, `null` is returned.\n     *\n     * @param {module:engine/view/text~Text} node Reference node.\n     * @param {Boolean} getNext\n     * @returns {module:engine/view/text~Text|null} Touching text node or `null` if there is no next or previous touching text node.\n     */\n\n  }, {\n    key: \"_getTouchingViewTextNode\",\n    value: function _getTouchingViewTextNode(node, getNext) {\n      var treeWalker = new ViewTreeWalker({\n        startPosition: getNext ? ViewPosition._createAfter(node) : ViewPosition._createBefore(node),\n        direction: getNext ? 'forward' : 'backward'\n      });\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = treeWalker[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var value = _step5.value;\n\n          // ViewContainerElement is found on a way to next ViewText node, so given `node` was first/last\n          // text node in its container element.\n          if (value.item.is('containerElement')) {\n            return null;\n          } // <br> found – it works like a block boundary, so do not scan further.\n          else if (value.item.is('br')) {\n              return null;\n            } // Found a text node in the same container element.\n            else if (value.item.is('textProxy')) {\n                return value.item;\n              }\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      return null;\n    }\n    /**\n     * Helper function. For the given text node, it finds the closest touching node which is either\n     * a text node or a `<br>`. The search is terminated at block element boundaries and if a matching node\n     * wasn't found so far, `null` is returned.\n     *\n     * In the following DOM structure:\n     *\n     *\t\t<p>foo<b>bar</b><br>bom</p>\n     *\n     * * `foo` doesn't have its previous touching inline node (`null` is returned),\n     * * `foo`'s next touching inline node is `bar`\n     * * `bar`'s next touching inline node is `<br>`\n     *\n     * This method returns text nodes and `<br>` elements because these types of nodes affect how\n     * spaces in the given text node need to be converted.\n     *\n     * @private\n     * @param {Text} node\n     * @param {Boolean} getNext\n     * @returns {Text|Element|null}\n     */\n\n  }, {\n    key: \"_getTouchingInlineDomNode\",\n    value: function _getTouchingInlineDomNode(node, getNext) {\n      if (!node.parentNode) {\n        return null;\n      }\n\n      var direction = getNext ? 'nextNode' : 'previousNode';\n      var document = node.ownerDocument;\n      var topmostParent = getAncestors(node)[0];\n      var treeWalker = document.createTreeWalker(topmostParent, NodeFilter.SHOW_TEXT | NodeFilter.SHOW_ELEMENT, {\n        acceptNode: function acceptNode(node) {\n          if (isText(node)) {\n            return NodeFilter.FILTER_ACCEPT;\n          }\n\n          if (node.tagName == 'BR') {\n            return NodeFilter.FILTER_ACCEPT;\n          }\n\n          return NodeFilter.FILTER_SKIP;\n        }\n      });\n      treeWalker.currentNode = node;\n      var touchingNode = treeWalker[direction]();\n\n      if (touchingNode !== null) {\n        var lca = getCommonAncestor(node, touchingNode); // If there is common ancestor between the text node and next/prev text node,\n        // and there are no block elements on a way from the text node to that ancestor,\n        // and there are no block elements on a way from next/prev text node to that ancestor...\n\n        if (lca && !_hasDomParentOfType(node, this.blockElements, lca) && !_hasDomParentOfType(touchingNode, this.blockElements, lca)) {\n          // Then they are in the same container element.\n          return touchingNode;\n        }\n      }\n\n      return null;\n    }\n  }]);\n\n  return DomConverter;\n}(); // Helper function.\n// Used to check if given native `Element` or `Text` node has parent with tag name from `types` array.\n//\n// @param {Node} node\n// @param {Array.<String>} types\n// @param {Boolean} [boundaryParent] Can be given if parents should be checked up to a given element (excluding that element).\n// @returns {Boolean} `true` if such parent exists or `false` if it does not.\n\n\nexport { DomConverter as default };\n\nfunction _hasDomParentOfType(node, types, boundaryParent) {\n  var parents = getAncestors(node);\n\n  if (boundaryParent) {\n    parents = parents.slice(parents.indexOf(boundaryParent) + 1);\n  }\n\n  return parents.some(function (parent) {\n    return parent.tagName && types.includes(parent.tagName.toLowerCase());\n  });\n} // A helper that executes given callback for each DOM node's ancestor, starting from the given node\n// and ending in document#documentElement.\n//\n// @param {Node} node\n// @param {Function} callback A callback to be executed for each ancestor.\n\n\nfunction forEachDomNodeAncestor(node, callback) {\n  while (node && node != global.document) {\n    callback(node);\n    node = node.parentNode;\n  }\n}","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/getcommonancestor\n */\nimport getAncestors from './getancestors';\n/**\n * Searches and returns the lowest common ancestor of two given nodes.\n *\n * @param {Node} nodeA First node.\n * @param {Node} nodeB Second node.\n * @returns {Node|DocumentFragment|Document|null} Lowest common ancestor of both nodes or `null` if nodes do not have a common ancestor.\n */\n\nexport default function getCommonAncestor(nodeA, nodeB) {\n  var ancestorsA = getAncestors(nodeA);\n  var ancestorsB = getAncestors(nodeB);\n  var i = 0; // It does not matter which array is shorter.\n\n  while (ancestorsA[i] == ancestorsB[i] && ancestorsA[i]) {\n    i++;\n  }\n\n  return i === 0 ? null : ancestorsA[i - 1];\n}","import root from './_root.js';\nimport stubFalse from './stubFalse.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nexport default isBuffer;\n","import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/editableelement\n */\nimport ContainerElement from './containerelement';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nvar documentSymbol = Symbol('document');\n/**\n * Editable element which can be a {@link module:engine/view/rooteditableelement~RootEditableElement root}\n * or nested editable area in the editor.\n *\n * Editable is automatically read-only when its {@link module:engine/view/document~Document Document} is read-only.\n *\n * The constructor of this class shouldn't be used directly. To create new `EditableElement` use the\n * {@link module:engine/view/downcastwriter~DowncastWriter#createEditableElement `downcastWriter#createEditableElement()`} method.\n *\n * @extends module:engine/view/containerelement~ContainerElement\n * @mixes module:utils/observablemixin~ObservableMixin\n */\n\nvar EditableElement =\n/*#__PURE__*/\nfunction (_ContainerElement) {\n  _inherits(EditableElement, _ContainerElement);\n\n  /**\n   * Creates an editable element.\n   *\n   * @see module:engine/view/downcastwriter~DowncastWriter#createEditableElement\n   * @protected\n   */\n  function EditableElement(name, attrs, children) {\n    var _this;\n\n    _classCallCheck(this, EditableElement);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditableElement).call(this, name, attrs, children));\n    /**\n     * Whether the editable is in read-write or read-only mode.\n     *\n     * @observable\n     * @member {Boolean} module:engine/view/editableelement~EditableElement#isReadOnly\n     */\n\n    _this.set('isReadOnly', false);\n    /**\n     * Whether the editable is focused.\n     *\n     * This property updates when {@link module:engine/view/document~Document#isFocused document.isFocused} or view\n     * selection is changed.\n     *\n     * @readonly\n     * @observable\n     * @member {Boolean} module:engine/view/editableelement~EditableElement#isFocused\n     */\n\n\n    _this.set('isFocused', false);\n    /**\n     * The {@link module:engine/view/document~Document} which is an owner of this root.\n     * Can only by set once.\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-editableelement-document-already-set`\n     * when document is already set.\n     *\n     * @member {module:engine/view/document~Document} #document\n     */\n\n\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(EditableElement, [{\n    key: \"is\",\n    value: function is(type) {\n      var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (!name) {\n        return type == 'editableElement' || _get(_getPrototypeOf(EditableElement.prototype), \"is\", this).call(this, type);\n      } else {\n        return type == 'editableElement' && name == this.name || _get(_getPrototypeOf(EditableElement.prototype), \"is\", this).call(this, type, name);\n      }\n    }\n    /**\n     * Returns document associated with the editable.\n     *\n     * @readonly\n     * @returns {module:engine/view/document~Document}\n     */\n\n  }, {\n    key: \"document\",\n    get: function get() {\n      return this.getCustomProperty(documentSymbol);\n    }\n    /**\n     * Sets document of this editable element.\n     *\n     * @protected\n     * @param {module:engine/view/document~Document} document\n     */\n\n  }, {\n    key: \"_document\",\n    set: function set(document) {\n      var _this2 = this;\n\n      if (this.getCustomProperty(documentSymbol)) {\n        /**\n         * View document is already set. It can only be set once.\n         *\n         * @error view-editableelement-document-already-set\n         */\n        throw new CKEditorError('view-editableelement-document-already-set: View document is already set.');\n      }\n\n      this._setCustomProperty(documentSymbol, document);\n\n      this.bind('isReadOnly').to(document);\n      this.bind('isFocused').to(document, 'isFocused', function (isFocused) {\n        return isFocused && document.selection.editableElement == _this2;\n      }); // Update focus state based on selection changes.\n\n      this.listenTo(document.selection, 'change', function () {\n        _this2.isFocused = document.isFocused && document.selection.editableElement == _this2;\n      });\n    }\n  }]);\n\n  return EditableElement;\n}(ContainerElement);\n\nexport { EditableElement as default };\nmix(EditableElement, ObservableMixin);","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nexport default isPrototype;\n","import isFunction from './isFunction.js';\nimport isLength from './isLength.js';\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nexport default isArrayLike;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nexport default baseUnary;\n","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/observer/domeventdata\n */\nimport { extend } from 'lodash-es';\n/**\n * Information about a DOM event in context of the {@link module:engine/view/document~Document}.\n * It wraps the native event, which usually should not be used as the wrapper contains\n * additional data (like key code for keyboard events).\n */\n\nvar DomEventData =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {module:engine/view/view~View} view The instance of the view controller.\n   * @param {Event} domEvent The DOM event.\n   * @param {Object} [additionalData] Additional properties that the instance should contain.\n   */\n  function DomEventData(view, domEvent, additionalData) {\n    _classCallCheck(this, DomEventData);\n\n    /**\n     * Instance of the view controller.\n     *\n     * @readonly\n     * @member {module:engine/view/view~View} module:engine/view/observer/observer~Observer.DomEvent#view\n     */\n    this.view = view;\n    /**\n     * The instance of the document.\n     *\n     * @readonly\n     * @member {module:engine/view/document~Document} module:engine/view/observer/observer~Observer.DomEvent#document\n     */\n\n    this.document = view.document;\n    /**\n     * The DOM event.\n     *\n     * @readonly\n     * @member {Event} module:engine/view/observer/observer~Observer.DomEvent#domEvent\n     */\n\n    this.domEvent = domEvent;\n    /**\n     * The DOM target.\n     *\n     * @readonly\n     * @member {HTMLElement} module:engine/view/observer/observer~Observer.DomEvent#target\n     */\n\n    this.domTarget = domEvent.target;\n    extend(this, additionalData);\n  }\n  /**\n   * The tree view element representing the target.\n   *\n   * @readonly\n   * @type module:engine/view/element~Element\n   */\n\n\n  _createClass(DomEventData, [{\n    key: \"preventDefault\",\n\n    /**\n     * Prevents the native's event default action.\n     */\n    value: function preventDefault() {\n      this.domEvent.preventDefault();\n    }\n    /**\n     * Stops native event propagation.\n     */\n\n  }, {\n    key: \"stopPropagation\",\n    value: function stopPropagation() {\n      this.domEvent.stopPropagation();\n    }\n  }, {\n    key: \"target\",\n    get: function get() {\n      return this.view.domConverter.mapDomToView(this.domTarget);\n    }\n  }]);\n\n  return DomEventData;\n}();\n\nexport { DomEventData as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/* global DOMParser */\n\n/**\n * @module ui/icon/iconview\n */\nimport View from '../view';\nimport '../../theme/components/icon/icon.css';\n/**\n * The icon view class.\n *\n * @extends module:ui/view~View\n */\n\nvar IconView =\n/*#__PURE__*/\nfunction (_View) {\n  _inherits(IconView, _View);\n\n  /**\n   * @inheritDoc\n   */\n  function IconView() {\n    var _this;\n\n    _classCallCheck(this, IconView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(IconView).call(this));\n    var bind = _this.bindTemplate;\n    /**\n     * The SVG source of the icon.\n     *\n     * @observable\n     * @member {String} #content\n     */\n\n    _this.set('content', '');\n    /**\n     * This attribute specifies the boundaries to which the\n     * icon content should stretch.\n     *\n     * @observable\n     * @default '0 0 20 20'\n     * @member {String} #viewBox\n     */\n\n\n    _this.set('viewBox', '0 0 20 20');\n    /**\n     * The fill color of the child `path.ck-icon__fill`.\n     *\n     * @observable\n     * @default ''\n     * @member {String} #fillColor\n     */\n\n\n    _this.set('fillColor', '');\n\n    _this.setTemplate({\n      tag: 'svg',\n      ns: 'http://www.w3.org/2000/svg',\n      attributes: {\n        class: ['ck', 'ck-icon'],\n        viewBox: bind.to('viewBox')\n      }\n    });\n\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(IconView, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      _get(_getPrototypeOf(IconView.prototype), \"render\", this).call(this);\n\n      this._updateXMLContent();\n\n      this._colorFillPaths(); // This is a hack for lack of innerHTML binding.\n      // See: https://github.com/ckeditor/ckeditor5-ui/issues/99.\n\n\n      this.on('change:content', function () {\n        _this2._updateXMLContent();\n\n        _this2._colorFillPaths();\n      });\n      this.on('change:fillColor', function () {\n        _this2._colorFillPaths();\n      });\n    }\n    /**\n     * Updates the {@link #element} with the value of {@link #content}.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_updateXMLContent\",\n    value: function _updateXMLContent() {\n      if (this.content) {\n        var parsed = new DOMParser().parseFromString(this.content.trim(), 'image/svg+xml');\n        var svg = parsed.querySelector('svg');\n        var viewBox = svg.getAttribute('viewBox');\n\n        if (viewBox) {\n          this.viewBox = viewBox;\n        }\n\n        this.element.innerHTML = '';\n\n        while (svg.childNodes.length > 0) {\n          this.element.appendChild(svg.childNodes[0]);\n        }\n      }\n    }\n    /**\n     * Fills all child `path.ck-icon__fill` with the `#fillColor`.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_colorFillPaths\",\n    value: function _colorFillPaths() {\n      var _this3 = this;\n\n      if (this.fillColor) {\n        this.element.querySelectorAll('.ck-icon__fill').forEach(function (path) {\n          path.style.fill = _this3.fillColor;\n        });\n      }\n    }\n  }]);\n\n  return IconView;\n}(View);\n\nexport { IconView as default };","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nexport default arrayEach;\n","import copyObject from './_copyObject.js';\nimport keys from './keys.js';\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nexport default baseAssign;\n","import copyObject from './_copyObject.js';\nimport keysIn from './keysIn.js';\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nexport default baseAssignIn;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nexport default copyArray;\n","import copyObject from './_copyObject.js';\nimport getSymbols from './_getSymbols.js';\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nexport default copySymbols;\n","import arrayPush from './_arrayPush.js';\nimport getPrototype from './_getPrototype.js';\nimport getSymbols from './_getSymbols.js';\nimport stubArray from './stubArray.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nexport default getSymbolsIn;\n","import copyObject from './_copyObject.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nexport default copySymbolsIn;\n","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nexport default getAllKeysIn;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nexport default initCloneArray;\n","import Uint8Array from './_Uint8Array.js';\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nexport default cloneArrayBuffer;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nexport default cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nexport default cloneRegExp;\n","import Symbol from './_Symbol.js';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nexport default cloneSymbol;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nexport default cloneTypedArray;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\nimport cloneDataView from './_cloneDataView.js';\nimport cloneRegExp from './_cloneRegExp.js';\nimport cloneSymbol from './_cloneSymbol.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nexport default initCloneByTag;\n","import isObject from './isObject.js';\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nexport default baseCreate;\n","import baseCreate from './_baseCreate.js';\nimport getPrototype from './_getPrototype.js';\nimport isPrototype from './_isPrototype.js';\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nexport default initCloneObject;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nexport default baseIsMap;\n","import baseIsMap from './_baseIsMap.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nexport default isMap;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nexport default baseIsSet;\n","import baseIsSet from './_baseIsSet.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nexport default isSet;\n","import Stack from './_Stack.js';\nimport arrayEach from './_arrayEach.js';\nimport assignValue from './_assignValue.js';\nimport baseAssign from './_baseAssign.js';\nimport baseAssignIn from './_baseAssignIn.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport copyArray from './_copyArray.js';\nimport copySymbols from './_copySymbols.js';\nimport copySymbolsIn from './_copySymbolsIn.js';\nimport getAllKeys from './_getAllKeys.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\nimport getTag from './_getTag.js';\nimport initCloneArray from './_initCloneArray.js';\nimport initCloneByTag from './_initCloneByTag.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isMap from './isMap.js';\nimport isObject from './isObject.js';\nimport isSet from './isSet.js';\nimport keys from './keys.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n\n    return result;\n  }\n\n  if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n\n    return result;\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nexport default baseClone;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default nativeKeysIn;\n","import isObject from './isObject.js';\nimport isPrototype from './_isPrototype.js';\nimport nativeKeysIn from './_nativeKeysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeysIn;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeysIn from './_baseKeysIn.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nexport default keysIn;\n","import overArg from './_overArg.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nexport default nativeKeys;\n","import isPrototype from './_isPrototype.js';\nimport nativeKeys from './_nativeKeys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeys;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeys from './_baseKeys.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nexport default keys;\n","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module paragraph/paragraphcommand\n */\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport first from '@ckeditor/ckeditor5-utils/src/first';\n/**\n * The paragraph command.\n *\n * @extends module:core/command~Command\n */\n\nvar ParagraphCommand =\n/*#__PURE__*/\nfunction (_Command) {\n  _inherits(ParagraphCommand, _Command);\n\n  function ParagraphCommand() {\n    _classCallCheck(this, ParagraphCommand);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ParagraphCommand).apply(this, arguments));\n  }\n\n  _createClass(ParagraphCommand, [{\n    key: \"refresh\",\n\n    /**\n     * The value of the command. Indicates whether the selection start is placed in a paragraph.\n     *\n     * @readonly\n     * @observable\n     * @member {Boolean} #value\n     */\n\n    /**\n     * @inheritDoc\n     */\n    value: function refresh() {\n      var model = this.editor.model;\n      var document = model.document;\n      var block = first(document.selection.getSelectedBlocks());\n      this.value = !!block && block.is('paragraph');\n      this.isEnabled = !!block && checkCanBecomeParagraph(block, model.schema);\n    }\n    /**\n     * Executes the command. All the blocks (see {@link module:engine/model/schema~Schema}) in the selection\n     * will be turned to paragraphs.\n     *\n     * @fires execute\n     * @param {Object} [options] Options for the executed command.\n     * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} [options.selection]\n     * The selection that the command should be applied to.\n     * By default, if not provided, the command is applied to the {@link module:engine/model/document~Document#selection}.\n     */\n\n  }, {\n    key: \"execute\",\n    value: function execute() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var model = this.editor.model;\n      var document = model.document;\n      model.change(function (writer) {\n        var blocks = (options.selection || document.selection).getSelectedBlocks();\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = blocks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var block = _step.value;\n\n            if (!block.is('paragraph') && checkCanBecomeParagraph(block, model.schema)) {\n              writer.rename(block, 'paragraph');\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      });\n    }\n  }]);\n\n  return ParagraphCommand;\n}(Command); // Checks whether the given block can be replaced by a paragraph.\n//\n// @private\n// @param {module:engine/model/element~Element} block A block to be tested.\n// @param {module:engine/model/schema~Schema} schema The schema of the document.\n// @returns {Boolean}\n\n\nexport { ParagraphCommand as default };\n\nfunction checkCanBecomeParagraph(block, schema) {\n  return schema.checkChild(block.parent, 'paragraph') && !schema.isObject(block);\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module paragraph/paragraph\n */\nimport ParagraphCommand from './paragraphcommand';\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n/**\n * The paragraph feature for the editor.\n *\n * It introduces the `<paragraph>` element in the model which renders as a `<p>` element in the DOM and data.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar Paragraph =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(Paragraph, _Plugin);\n\n  function Paragraph() {\n    _classCallCheck(this, Paragraph);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Paragraph).apply(this, arguments));\n  }\n\n  _createClass(Paragraph, [{\n    key: \"init\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function init() {\n      var _this = this;\n\n      var editor = this.editor;\n      var model = editor.model;\n      var data = editor.data;\n      editor.commands.add('paragraph', new ParagraphCommand(editor)); // Schema.\n\n      model.schema.register('paragraph', {\n        inheritAllFrom: '$block'\n      });\n      editor.conversion.elementToElement({\n        model: 'paragraph',\n        view: 'p'\n      }); // Content autoparagraphing. --------------------------------------------------\n      // Handles elements not converted by plugins and checks if would be converted if\n      // we wraps them by a paragraph or changes them to a paragraph.\n\n      data.upcastDispatcher.on('element', function (evt, data, conversionApi) {\n        var writer = conversionApi.writer; // When element is already consumed by higher priority converters then do nothing.\n\n        if (!conversionApi.consumable.test(data.viewItem, {\n          name: data.viewItem.name\n        })) {\n          return;\n        } // When element is paragraph-like lets try to change it into a paragraph.\n\n\n        if (Paragraph.paragraphLikeElements.has(data.viewItem.name)) {\n          if (data.viewItem.isEmpty) {\n            return;\n          }\n\n          var paragraph = writer.createElement('paragraph'); // Find allowed parent for paragraph that we are going to insert.\n          // If current parent does not allow to insert paragraph but one of the ancestors does\n          // then split nodes to allowed parent.\n\n          var splitResult = conversionApi.splitToAllowedParent(paragraph, data.modelCursor); // When there is no split result it means that we can't insert paragraph in this position.\n\n          if (!splitResult) {\n            return;\n          } // Insert paragraph in allowed position.\n\n\n          writer.insert(paragraph, splitResult.position); // Convert children to paragraph.\n\n          var _conversionApi$conver = conversionApi.convertChildren(data.viewItem, writer.createPositionAt(paragraph, 0)),\n              modelRange = _conversionApi$conver.modelRange; // Output range starts before paragraph but ends inside it after last child.\n          // This is because we want to keep siblings inside the same paragraph as long as it is possible.\n          // When next node won't be allowed in a paragraph it will split this paragraph anyway.\n\n\n          data.modelRange = writer.createRange(writer.createPositionBefore(paragraph), modelRange.end);\n          data.modelCursor = data.modelRange.end; // When element is not paragraph-like lets try to wrap it by a paragraph.\n        } else if (isParagraphable(data.viewItem, data.modelCursor, conversionApi.schema)) {\n          data = Object.assign(data, wrapInParagraph(data.viewItem, data.modelCursor, conversionApi));\n        }\n      }, {\n        priority: 'low'\n      }); // Handles not converted text nodes and checks if would be converted if we wraps then by a paragraph.\n\n      data.upcastDispatcher.on('text', function (evt, data, conversionApi) {\n        // When node is already converted then do nothing.\n        if (data.modelRange) {\n          return;\n        }\n\n        if (isParagraphable(data.viewItem, data.modelCursor, conversionApi.schema)) {\n          data = Object.assign(data, wrapInParagraph(data.viewItem, data.modelCursor, conversionApi));\n        }\n      }, {\n        priority: 'lowest'\n      }); // Empty roots autoparagraphing. -----------------------------------------------\n      // Post-fixer which takes care of adding empty paragraph elements to empty roots.\n      // Besides fixing content on #changesDone we also need to handle #dataReady because\n      // if initial data is empty or setData() wasn't even called there will be no #change fired.\n\n      model.document.registerPostFixer(function (writer) {\n        return _this._autoparagraphEmptyRoots(writer);\n      });\n      editor.on('dataReady', function () {\n        model.enqueueChange('transparent', function (writer) {\n          return _this._autoparagraphEmptyRoots(writer);\n        });\n      }, {\n        priority: 'lowest'\n      });\n    }\n    /**\n     * Fixes all empty roots.\n     *\n     * @private\n     * @returns {Boolean} `true` if any change has been applied, `false` otherwise.\n     */\n\n  }, {\n    key: \"_autoparagraphEmptyRoots\",\n    value: function _autoparagraphEmptyRoots(writer) {\n      var model = this.editor.model;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = model.document.getRootNames()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var rootName = _step.value;\n          var root = model.document.getRoot(rootName);\n\n          if (root.isEmpty && root.rootName != '$graveyard') {\n            // If paragraph element is allowed in the root, create paragraph element.\n            if (model.schema.checkChild(root, 'paragraph')) {\n              writer.insertElement('paragraph', root);\n              return true;\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }], [{\n    key: \"pluginName\",\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return 'Paragraph';\n    }\n  }]);\n\n  return Paragraph;\n}(Plugin);\n/**\n * A list of element names which should be treated by the autoparagraphing algorithms as\n * paragraph-like. This means that e.g. the following content:\n *\n *\t\t<h1>Foo</h1>\n *\t\t<table>\n *\t\t\t<tr>\n *\t\t\t\t<td>X</td>\n *\t\t\t\t<td>\n *\t\t\t\t\t<ul>\n *\t\t\t\t\t\t<li>Y</li>\n *\t\t\t\t\t\t<li>Z</li>\n *\t\t\t\t\t</ul>\n *\t\t\t\t</td>\n *\t\t\t</tr>\n *\t\t</table>\n *\n * contains five paragraph-like elements: `<h1>`, two `<td>`s and two `<li>`s.\n * Hence, if none of the features is going to convert those elements the above content will be automatically handled\n * by the paragraph feature and converted to:\n *\n *\t\t<p>Foo</p>\n *\t\t<p>X</p>\n *\t\t<p>Y</p>\n *\t\t<p>Z</p>\n *\n * Note: The `<td>` containing two `<li>` elements was ignored as the innermost paragraph-like elements\n * have a priority upon conversion.\n *\n * @member {Set.<String>} module:paragraph/paragraph~Paragraph.paragraphLikeElements\n */\n\n\nexport { Paragraph as default };\nParagraph.paragraphLikeElements = new Set(['blockquote', 'dd', 'div', 'dt', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'li', 'p', 'td']);\n\nfunction wrapInParagraph(input, position, conversionApi) {\n  var paragraph = conversionApi.writer.createElement('paragraph');\n  conversionApi.writer.insert(paragraph, position);\n  return conversionApi.convertItem(input, conversionApi.writer.createPositionAt(paragraph, 0));\n}\n\nfunction isParagraphable(node, position, schema) {\n  var context = schema.createContext(position); // When paragraph is allowed in this context...\n\n  if (!schema.checkChild(context, 'paragraph')) {\n    return false;\n  } // And a node would be allowed in this paragraph...\n\n\n  if (!schema.checkChild(context.push('paragraph'), node)) {\n    return false;\n  }\n\n  return true;\n}","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nexport default arrayFilter;\n","import arrayFilter from './_arrayFilter.js';\nimport stubArray from './stubArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nexport default getSymbols;\n","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/isrange\n */\n\n/**\n * Checks if the object is a native DOM Range.\n *\n * @param {*} obj\n * @returns {Boolean}\n */\nexport default function isRange(obj) {\n  return Object.prototype.toString.apply(obj) == '[object Range]';\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/liverange\n */\nimport Range from './range';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n/**\n * `LiveRange` is a type of {@link module:engine/model/range~Range Range}\n * that updates itself as {@link module:engine/model/document~Document document}\n * is changed through operations. It may be used as a bookmark.\n *\n * **Note:** Be very careful when dealing with `LiveRange`. Each `LiveRange` instance bind events that might\n * have to be unbound. Use {@link module:engine/model/liverange~LiveRange#detach detach} whenever you don't need `LiveRange` anymore.\n */\n\nvar LiveRange =\n/*#__PURE__*/\nfunction (_Range) {\n  _inherits(LiveRange, _Range);\n\n  /**\n   * Creates a live range.\n   *\n   * @see module:engine/model/range~Range\n   */\n  function LiveRange(start, end) {\n    var _this;\n\n    _classCallCheck(this, LiveRange);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LiveRange).call(this, start, end));\n    bindWithDocument.call(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  /**\n   * Unbinds all events previously bound by `LiveRange`. Use it whenever you don't need `LiveRange` instance\n   * anymore (i.e. when leaving scope in which it was declared or before re-assigning variable that was\n   * referring to it).\n   */\n\n\n  _createClass(LiveRange, [{\n    key: \"detach\",\n    value: function detach() {\n      this.stopListening();\n    }\n    /**\n     * Creates a {@link module:engine/model/range~Range range instance} that is equal to this live range.\n     *\n     * @returns {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"toRange\",\n    value: function toRange() {\n      return new Range(this.start, this.end);\n    }\n    /**\n     * Creates a `LiveRange` instance that is equal to the given range.\n     *\n     * @param {module:engine/model/range~Range} range\n     * @returns {module:engine/model/liverange~LiveRange}\n     */\n\n  }], [{\n    key: \"fromRange\",\n    value: function fromRange(range) {\n      return new LiveRange(range.start, range.end);\n    }\n    /**\n     * @see module:engine/model/range~Range._createIn\n     * @static\n     * @protected\n     * @method module:engine/model/liverange~LiveRange._createIn\n     * @param {module:engine/model/element~Element} element\n     * @returns {module:engine/model/liverange~LiveRange}\n     */\n\n    /**\n     * @see module:engine/model/range~Range._createOn\n     * @static\n     * @protected\n     * @method module:engine/model/liverange~LiveRange._createOn\n     * @param {module:engine/model/element~Element} element\n     * @returns {module:engine/model/liverange~LiveRange}\n     */\n\n    /**\n     * @see module:engine/model/range~Range._createFromPositionAndShift\n     * @static\n     * @protected\n     * @method module:engine/model/liverange~LiveRange._createFromPositionAndShift\n     * @param {module:engine/model/position~Position} position\n     * @param {Number} shift\n     * @returns {module:engine/model/liverange~LiveRange}\n     */\n\n    /**\n     * Fired when `LiveRange` instance boundaries have changed due to changes in the\n     * {@link module:engine/model/document~Document document}.\n     *\n     * @event change:range\n     * @param {module:engine/model/range~Range} oldRange Range with start and end position equal to start and end position of this live\n     * range before it got changed.\n     * @param {Object} data Object with additional information about the change.\n     * @param {module:engine/model/position~Position|null} data.deletionPosition Source position for remove and merge changes.\n     * Available if the range was moved to the graveyard root, `null` otherwise.\n     */\n\n    /**\n     * Fired when `LiveRange` instance boundaries have not changed after a change in {@link module:engine/model/document~Document document}\n     * but the change took place inside the range, effectively changing its content.\n     *\n     * @event change:content\n     * @param {module:engine/model/range~Range} range Range with start and end position equal to start and end position of\n     * change range.\n     * @param {Object} data Object with additional information about the change.\n     * @param {null} data.deletionPosition Due to the nature of this event, this property is always set to `null`. It is passed\n     * for compatibility with the {@link module:engine/model/liverange~LiveRange#event:change:range} event.\n     */\n\n  }]);\n\n  return LiveRange;\n}(Range); // Binds this `LiveRange` to the {@link module:engine/model/document~Document document}\n// that owns this range's {@link module:engine/model/range~Range#root root}.\n//\n// @private\n\n\nexport { LiveRange as default };\n\nfunction bindWithDocument() {\n  var _this2 = this;\n\n  this.listenTo(this.root.document.model, 'applyOperation', function (event, args) {\n    var operation = args[0];\n\n    if (!operation.isDocumentOperation) {\n      return;\n    }\n\n    transform.call(_this2, operation);\n  }, {\n    priority: 'low'\n  });\n} // Updates this range accordingly to the updates applied to the model. Bases on change events.\n//\n// @private\n// @param {module:engine/model/operation/operation~Operation} operation Executed operation.\n\n\nfunction transform(operation) {\n  // Transform the range by the operation. Join the result ranges if needed.\n  var ranges = this.getTransformedByOperation(operation);\n\n  var result = Range._createFromRanges(ranges);\n\n  var boundariesChanged = !result.isEqual(this);\n  var contentChanged = doesOperationChangeRangeContent(this, operation);\n  var deletionPosition = null;\n\n  if (boundariesChanged) {\n    // If range boundaries have changed, fire `change:range` event.\n    //\n    if (result.root.rootName == '$graveyard') {\n      // If the range was moved to the graveyard root, set `deletionPosition`.\n      if (operation.type == 'remove') {\n        deletionPosition = operation.sourcePosition;\n      } else {\n        // Merge operation.\n        deletionPosition = operation.deletionPosition;\n      }\n    }\n\n    var oldRange = this.toRange();\n    this.start = result.start;\n    this.end = result.end;\n    this.fire('change:range', oldRange, {\n      deletionPosition: deletionPosition\n    });\n  } else if (contentChanged) {\n    // If range boundaries have not changed, but there was change inside the range, fire `change:content` event.\n    this.fire('change:content', this.toRange(), {\n      deletionPosition: deletionPosition\n    });\n  }\n} // Checks whether given operation changes something inside the range (even if it does not change boundaries).\n//\n// @private\n// @param {module:engine/model/range~Range} range Range to check.\n// @param {module:engine/model/operation/operation~Operation} operation Executed operation.\n// @returns {Boolean}\n\n\nfunction doesOperationChangeRangeContent(range, operation) {\n  switch (operation.type) {\n    case 'insert':\n      return range.containsPosition(operation.position);\n\n    case 'move':\n    case 'remove':\n    case 'reinsert':\n    case 'merge':\n      return range.containsPosition(operation.sourcePosition) || range.start.isEqual(operation.sourcePosition) || range.containsPosition(operation.targetPosition);\n\n    case 'split':\n      return range.containsPosition(operation.splitPosition) || range.containsPosition(operation.insertionPosition);\n  }\n\n  return false;\n}\n\nmix(LiveRange, EmitterMixin);","import getNative from './_getNative.js';\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nexport default defineProperty;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nexport default Uint8Array;\n","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/iswindow\n */\n\n/**\n * Checks if the object is a native DOM Window.\n *\n * @param {*} obj\n * @returns {Boolean}\n */\nexport default function isWindow(obj) {\n  var stringifiedObject = Object.prototype.toString.apply(obj); // Returns `true` for the `window` object in browser environments.\n\n  if (stringifiedObject == '[object Window]') {\n    return true;\n  } // Returns `true` for the `window` object in the Electron environment.\n\n\n  if (stringifiedObject == '[object global]') {\n    return true;\n  }\n\n  return false;\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/dropdown/dropdownpanelview\n */\nimport View from '../view';\n/**\n * The dropdown panel view class.\n *\n * See {@link module:ui/dropdown/dropdownview~DropdownView} to learn about the common usage.\n *\n * @extends module:ui/view~View\n */\n\nvar DropdownPanelView =\n/*#__PURE__*/\nfunction (_View) {\n  _inherits(DropdownPanelView, _View);\n\n  /**\n   * @inheritDoc\n   */\n  function DropdownPanelView(locale) {\n    var _this;\n\n    _classCallCheck(this, DropdownPanelView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DropdownPanelView).call(this, locale));\n    var bind = _this.bindTemplate;\n    /**\n     * Controls whether the panel is visible.\n     *\n     * @observable\n     * @member {Boolean} #isVisible\n     */\n\n    _this.set('isVisible', false);\n    /**\n     * The position of the panel, relative to the parent.\n     *\n     * This property is reflected in the CSS class set to {@link #element} that controls\n     * the position of the panel.\n     *\n     * @observable\n     * @default 'se'\n     * @member {'se'|'sw'|'ne'|'nw'} #position\n     */\n\n\n    _this.set('position', 'se');\n    /**\n     * Collection of the child views in this panel.\n     *\n     * A common child type is the {@link module:ui/list/listview~ListView} and {@link module:ui/toolbar/toolbarview~ToolbarView}.\n     * See {@link module:ui/dropdown/utils~addListToDropdown} and\n     * {@link module:ui/dropdown/utils~addToolbarToDropdown} to learn more about child views of dropdowns.\n     *\n     * @readonly\n     * @member {module:ui/viewcollection~ViewCollection}\n     */\n\n\n    _this.children = _this.createCollection();\n\n    _this.setTemplate({\n      tag: 'div',\n      attributes: {\n        class: ['ck', 'ck-reset', 'ck-dropdown__panel', bind.to('position', function (value) {\n          return \"ck-dropdown__panel_\".concat(value);\n        }), bind.if('isVisible', 'ck-dropdown__panel-visible')]\n      },\n      children: _this.children,\n      on: {\n        // Drag and drop in the panel should not break the selection in the editor.\n        // https://github.com/ckeditor/ckeditor5-ui/issues/228\n        selectstart: bind.to(function (evt) {\n          return evt.preventDefault();\n        })\n      }\n    });\n\n    return _this;\n  }\n  /**\n   * Focuses the view element or first item in view collection on opening dropdown's panel.\n   *\n   * See also {@link module:ui/dropdown/dropdownpanelfocusable~DropdownPanelFocusable}.\n   */\n\n\n  _createClass(DropdownPanelView, [{\n    key: \"focus\",\n    value: function focus() {\n      if (this.children.length) {\n        this.children.first.focus();\n      }\n    }\n    /**\n     * Focuses the view element or last item in view collection on opening dropdown's panel.\n     *\n     * See also {@link module:ui/dropdown/dropdownpanelfocusable~DropdownPanelFocusable}.\n     */\n\n  }, {\n    key: \"focusLast\",\n    value: function focusLast() {\n      if (this.children.length) {\n        var lastChild = this.children.last;\n\n        if (typeof lastChild.focusLast === 'function') {\n          lastChild.focusLast();\n        } else {\n          lastChild.focus();\n        }\n      }\n    }\n  }]);\n\n  return DropdownPanelView;\n}(View);\n\nexport { DropdownPanelView as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/dropdown/dropdownview\n */\nimport View from '../view';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\nimport '../../theme/components/dropdown/dropdown.css';\nimport { getOptimalPosition } from '@ckeditor/ckeditor5-utils/src/dom/position';\n/**\n * The dropdown view class. It manages the dropdown button and dropdown panel.\n *\n * In most cases, the easiest way to create a dropdown is by using the {@link module:ui/dropdown/utils~createDropdown}\n * util:\n *\n *\t\tconst dropdown = createDropdown( locale );\n *\n *\t\t// Configure dropdown's button properties:\n *\t\tdropdown.buttonView.set( {\n *\t\t\tlabel: 'A dropdown',\n *\t\t\twithText: true\n *\t\t} );\n *\n *\t\tdropdown.render();\n *\n *\t\tdropdown.panelView.element.textContent = 'Content of the panel';\n *\n *\t\t// Will render a dropdown with a panel containing a \"Content of the panel\" text.\n *\t\tdocument.body.appendChild( dropdown.element );\n *\n * If you want to add a richer content to the dropdown panel, you can use the {@link module:ui/dropdown/utils~addListToDropdown}\n * and {@link module:ui/dropdown/utils~addToolbarToDropdown} helpers. See more examples in\n * {@link module:ui/dropdown/utils~createDropdown} documentation.\n *\n * If you want to create a completely custom dropdown, then you can compose it manually:\n *\n *\t\tconst button = new DropdownButtonView( locale );\n *\t\tconst panel = new DropdownPanelView( locale );\n *\t\tconst dropdown = new DropdownView( locale, button, panel );\n *\n *\t\tbutton.set( {\n *\t\t\tlabel: 'A dropdown',\n *\t\t\twithText: true\n *\t\t} );\n *\n *\t\tdropdown.render();\n *\n *\t\tpanel.element.textContent = 'Content of the panel';\n *\n *\t\t// Will render a dropdown with a panel containing a \"Content of the panel\" text.\n *\t\tdocument.body.appendChild( dropdown.element );\n *\n * However, dropdown created this way will contain little behavior. You will need to implement handlers for actions\n * such as {@link module:ui/bindings/clickoutsidehandler~clickOutsideHandler clicking outside an open dropdown}\n * (which should close it) and support for arrow keys inside the panel. Therefore, unless you really know what\n * you do and you really need to do it, it is recommended to use the {@link module:ui/dropdown/utils~createDropdown} helper.\n *\n * @extends module:ui/view~View\n */\n\nvar DropdownView =\n/*#__PURE__*/\nfunction (_View) {\n  _inherits(DropdownView, _View);\n\n  /**\n   * Creates an instance of the dropdown.\n   *\n   * Also see {@link #render}.\n   *\n   * @param {module:utils/locale~Locale} [locale] The localization services instance.\n   * @param {module:ui/dropdown/button/dropdownbutton~DropdownButton} buttonView\n   * @param {module:ui/dropdown/dropdownpanelview~DropdownPanelView} panelView\n   */\n  function DropdownView(locale, buttonView, panelView) {\n    var _this;\n\n    _classCallCheck(this, DropdownView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DropdownView).call(this, locale));\n    var bind = _this.bindTemplate;\n    /**\n     * Button of the dropdown view. Clicking the button opens the {@link #panelView}.\n     *\n     * @readonly\n     * @member {module:ui/button/buttonview~ButtonView} #buttonView\n     */\n\n    _this.buttonView = buttonView;\n    /**\n     * Panel of the dropdown. It opens when the {@link #buttonView} is\n     * {@link module:ui/button/buttonview~ButtonView#event:execute executed} (i.e. clicked).\n     *\n     * Child views can be added to the panel's `children` collection:\n     *\n     *\t\tdropdown.panelView.children.add( childView );\n     *\n     * See {@link module:ui/dropdown/dropdownpanelview~DropdownPanelView#children} and\n     * {@link module:ui/viewcollection~ViewCollection#add}.\n     *\n     * @readonly\n     * @member {module:ui/dropdown/dropdownpanelview~DropdownPanelView} #panelView\n     */\n\n    _this.panelView = panelView;\n    /**\n     * Controls whether the dropdown view is open, i.e. shows or hides the {@link #panelView panel}.\n     *\n     * @observable\n     * @member {Boolean} #isOpen\n     */\n\n    _this.set('isOpen', false);\n    /**\n     * Controls whether the dropdown is enabled, i.e. it can be clicked and execute an action.\n     *\n     * See {@link module:ui/button/buttonview~ButtonView#isEnabled}.\n     *\n     * @observable\n     * @member {Boolean} #isEnabled\n     */\n\n\n    _this.set('isEnabled', true);\n    /**\n     * (Optional) The additional CSS class set on the dropdown {@link #element}.\n     *\n     * @observable\n     * @member {String} #class\n     */\n\n\n    _this.set('class');\n    /**\n     * The position of the panel, relative to the dropdown.\n     *\n     * **Note**: When `'auto'`, the panel will use one of the remaining positions to stay\n     * in the viewport, visible to the user. The positions correspond directly to\n     * {@link module:ui/dropdown/dropdownview~DropdownView.defaultPanelPositions default panel positions}.\n     *\n     * **Note**: This value has an impact on the\n     * {@link module:ui/dropdown/dropdownpanelview~DropdownPanelView#position} property\n     * each time the panel becomes {@link #isOpen open}.\n     *\n     * @observable\n     * @default 'auto'\n     * @member {'auto'|'se'|'sw'|'ne'|'nw'} #panelPosition\n     */\n\n\n    _this.set('panelPosition', 'auto');\n    /**\n     * Tracks information about DOM focus in the dropdown.\n     *\n     * @readonly\n     * @member {module:utils/focustracker~FocusTracker}\n     */\n\n\n    _this.focusTracker = new FocusTracker();\n    /**\n     * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}. It manages\n     * keystrokes of the dropdown:\n     *\n     * * <kbd>▼</kbd> opens the dropdown,\n     * * <kbd>◀</kbd> and <kbd>Esc</kbd> closes the dropdown.\n     *\n     * @readonly\n     * @member {module:utils/keystrokehandler~KeystrokeHandler}\n     */\n\n    _this.keystrokes = new KeystrokeHandler();\n\n    _this.setTemplate({\n      tag: 'div',\n      attributes: {\n        class: ['ck', 'ck-dropdown', bind.to('class'), bind.if('isEnabled', 'ck-disabled', function (value) {\n          return !value;\n        })]\n      },\n      children: [buttonView, panelView]\n    });\n\n    buttonView.extendTemplate({\n      attributes: {\n        class: ['ck-dropdown__button']\n      }\n    });\n    /**\n     * A child {@link module:ui/list/listview~ListView list view} of the dropdown located\n     * in its {@link module:ui/dropdown/dropdownview~DropdownView#panelView panel}.\n     *\n     * **Note**: Only supported when dropdown has list view added using {@link module:ui/dropdown/utils~addListToDropdown}.\n     *\n     * @readonly\n     * @member {module:ui/list/listview~ListView} #listView\n     */\n\n    /**\n     * A child toolbar of the dropdown located in the\n     * {@link module:ui/dropdown/dropdownview~DropdownView#panelView panel}.\n     *\n     * **Note**: Only supported when dropdown has list view added using {@link module:ui/dropdown/utils~addToolbarToDropdown}.\n     *\n     * @readonly\n     * @member {module:ui/toolbar/toolbarview~ToolbarView} #toolbarView\n     */\n\n    /**\n     * Fired when the toolbar button or list item is executed.\n     *\n     * For {@link #listView} It fires when a child of some {@link module:ui/list/listitemview~ListItemView}\n     * fired `execute`.\n     *\n     * For {@link #toolbarView} It fires when one of the buttons has been\n     * {@link module:ui/button/buttonview~ButtonView#event:execute executed}.\n     *\n     * **Note**: Only supported when dropdown has list view added using {@link module:ui/dropdown/utils~addListToDropdown}\n     * or {@link module:ui/dropdown/utils~addToolbarToDropdown}.\n     *\n     * @event execute\n     */\n\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(DropdownView, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      _get(_getPrototypeOf(DropdownView.prototype), \"render\", this).call(this); // Toggle the dropdown when its button has been clicked.\n\n\n      this.listenTo(this.buttonView, 'open', function () {\n        _this2.isOpen = !_this2.isOpen;\n      }); // Toggle the visibility of the panel when the dropdown becomes open.\n\n      this.panelView.bind('isVisible').to(this, 'isOpen'); // Let the dropdown control the position of the panel. The position must\n      // be updated every time the dropdown is open.\n\n      this.on('change:isOpen', function () {\n        if (!_this2.isOpen) {\n          return;\n        } // If \"auto\", find the best position of the panel to fit into the viewport.\n        // Otherwise, simply assign the static position.\n\n\n        if (_this2.panelPosition === 'auto') {\n          var defaultPanelPositions = DropdownView.defaultPanelPositions;\n          _this2.panelView.position = getOptimalPosition({\n            element: _this2.panelView.element,\n            target: _this2.buttonView.element,\n            fitInViewport: true,\n            positions: [defaultPanelPositions.southEast, defaultPanelPositions.southWest, defaultPanelPositions.northEast, defaultPanelPositions.northWest]\n          }).name;\n        } else {\n          _this2.panelView.position = _this2.panelPosition;\n        }\n      }); // Listen for keystrokes coming from within #element.\n\n      this.keystrokes.listenTo(this.element); // Register #element in the focus tracker.\n\n      this.focusTracker.add(this.element);\n\n      var closeDropdown = function closeDropdown(data, cancel) {\n        if (_this2.isOpen) {\n          _this2.buttonView.focus();\n\n          _this2.isOpen = false;\n          cancel();\n        }\n      }; // Open the dropdown panel using the arrow down key, just like with return or space.\n\n\n      this.keystrokes.set('arrowdown', function (data, cancel) {\n        // Don't open if the dropdown is disabled or already open.\n        if (_this2.buttonView.isEnabled && !_this2.isOpen) {\n          _this2.isOpen = true;\n          cancel();\n        }\n      }); // Block the right arrow key (until nested dropdowns are implemented).\n\n      this.keystrokes.set('arrowright', function (data, cancel) {\n        if (_this2.isOpen) {\n          cancel();\n        }\n      }); // Close the dropdown using the arrow left/escape key.\n\n      this.keystrokes.set('arrowleft', closeDropdown);\n      this.keystrokes.set('esc', closeDropdown);\n    }\n    /**\n     * Focuses the {@link #buttonView}.\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.buttonView.focus();\n    }\n  }]);\n\n  return DropdownView;\n}(View);\n/**\n * A set of positioning functions used by the dropdown view to determine\n * the optimal position (i.e. fitting into the browser viewport) of its\n * {@link module:ui/dropdown/dropdownview~DropdownView#panelView panel} when\n * {@link module:ui/dropdown/dropdownview~DropdownView#panelPosition} is set to 'auto'`.\n *\n * The available positioning functions are as follow:\n *\n * **South**\n *\n * * `southEast`\n *\n *\t\t[ Button ]\n *\t\t+-----------------+\n *\t\t|      Panel      |\n *\t\t+-----------------+\n *\n * * `southWest`\n *\n *\t\t         [ Button ]\n *\t\t+-----------------+\n *\t\t|      Panel      |\n *\t\t+-----------------+\n *\n * **North**\n *\n * * `northEast`\n *\n *\t\t+-----------------+\n *\t\t|      Panel      |\n *\t\t+-----------------+\n *\t\t[ Button ]\n *\n * * `northWest`\n *\n *\t\t+-----------------+\n *\t\t|      Panel      |\n *\t\t+-----------------+\n *\t\t         [ Button ]\n *\n * Positioning functions are compatible with {@link module:utils/dom/position~Position}.\n *\n * The name that position function returns will be reflected in dropdown panel's class that\n * controls its placement. See {@link module:ui/dropdown/dropdownview~DropdownView#panelPosition}\n * to learn more.\n *\n * @member {Object} module:ui/dropdown/dropdownview~DropdownView.defaultPanelPositions\n */\n\n\nexport { DropdownView as default };\nDropdownView.defaultPanelPositions = {\n  southEast: function southEast(buttonRect) {\n    return {\n      top: buttonRect.bottom,\n      left: buttonRect.left,\n      name: 'se'\n    };\n  },\n  southWest: function southWest(buttonRect, panelRect) {\n    return {\n      top: buttonRect.bottom,\n      left: buttonRect.left - panelRect.width + buttonRect.width,\n      name: 'sw'\n    };\n  },\n  northEast: function northEast(buttonRect, panelRect) {\n    return {\n      top: buttonRect.top - panelRect.height,\n      left: buttonRect.left,\n      name: 'ne'\n    };\n  },\n  northWest: function northWest(buttonRect, panelRect) {\n    return {\n      top: buttonRect.bottom - panelRect.height,\n      left: buttonRect.left - panelRect.width + buttonRect.width,\n      name: 'nw'\n    };\n  }\n};","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/dropdown/button/dropdownbuttonview\n */\nimport ButtonView from '../../button/buttonview';\nimport dropdownArrowIcon from '../../../theme/icons/dropdown-arrow.svg';\nimport IconView from '../../icon/iconview';\n/**\n * The default dropdown button view class.\n *\n *\t\tconst view = new DropdownButtonView();\n *\n *\t\tview.set( {\n *\t\t\tlabel: 'A button',\n *\t\t\tkeystroke: 'Ctrl+B',\n *\t\t\ttooltip: true\n *\t\t} );\n *\n *\t\tview.render();\n *\n *\t\tdocument.body.append( view.element );\n *\n * Also see the {@link module:ui/dropdown/utils~createDropdown `createDropdown()` util}.\n *\n * @implements module:ui/dropdown/button/dropdownbutton~DropdownButton\n * @extends module:ui/button/buttonview~ButtonView\n */\n\nvar DropdownButtonView =\n/*#__PURE__*/\nfunction (_ButtonView) {\n  _inherits(DropdownButtonView, _ButtonView);\n\n  /**\n   * @inheritDoc\n   */\n  function DropdownButtonView(locale) {\n    var _this;\n\n    _classCallCheck(this, DropdownButtonView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DropdownButtonView).call(this, locale));\n    /**\n     * An icon that displays arrow to indicate a dropdown button.\n     *\n     * @readonly\n     * @member {module:ui/icon/iconview~IconView}\n     */\n\n    _this.arrowView = _this._createArrowView();\n\n    _this.extendTemplate({\n      attributes: {\n        'aria-haspopup': true\n      }\n    }); // The DropdownButton interface expects the open event upon which will open the dropdown.\n\n\n    _this.delegate('execute').to(_assertThisInitialized(_assertThisInitialized(_this)), 'open');\n\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(DropdownButtonView, [{\n    key: \"render\",\n    value: function render() {\n      _get(_getPrototypeOf(DropdownButtonView.prototype), \"render\", this).call(this);\n\n      this.children.add(this.arrowView);\n    }\n    /**\n     * Creates a {@link module:ui/icon/iconview~IconView} instance as {@link #arrowView}.\n     *\n     * @private\n     * @returns {module:ui/icon/iconview~IconView}\n     */\n\n  }, {\n    key: \"_createArrowView\",\n    value: function _createArrowView() {\n      var arrowView = new IconView();\n      arrowView.content = dropdownArrowIcon;\n      arrowView.extendTemplate({\n        attributes: {\n          class: 'ck-dropdown__arrow'\n        }\n      });\n      return arrowView;\n    }\n  }]);\n\n  return DropdownButtonView;\n}(ButtonView);\n\nexport { DropdownButtonView as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/list/listview\n */\nimport View from '../view';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport FocusCycler from '../focuscycler';\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\nimport '../../theme/components/list/list.css';\n/**\n * The list view class.\n *\n * @extends module:ui/view~View\n * @implements module:ui/dropdown/dropdownpanelfocusable~DropdownPanelFocusable\n */\n\nvar ListView =\n/*#__PURE__*/\nfunction (_View) {\n  _inherits(ListView, _View);\n\n  /**\n   * @inheritDoc\n   */\n  function ListView() {\n    var _this;\n\n    _classCallCheck(this, ListView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ListView).call(this));\n    /**\n     * Collection of the child list views.\n     *\n     * @readonly\n     * @member {module:ui/viewcollection~ViewCollection}\n     */\n\n    _this.items = _this.createCollection();\n    /**\n     * Tracks information about DOM focus in the list.\n     *\n     * @readonly\n     * @member {module:utils/focustracker~FocusTracker}\n     */\n\n    _this.focusTracker = new FocusTracker();\n    /**\n     * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n     *\n     * @readonly\n     * @member {module:utils/keystrokehandler~KeystrokeHandler}\n     */\n\n    _this.keystrokes = new KeystrokeHandler();\n    /**\n     * Helps cycling over focusable {@link #items} in the list.\n     *\n     * @readonly\n     * @protected\n     * @member {module:ui/focuscycler~FocusCycler}\n     */\n\n    _this._focusCycler = new FocusCycler({\n      focusables: _this.items,\n      focusTracker: _this.focusTracker,\n      keystrokeHandler: _this.keystrokes,\n      actions: {\n        // Navigate list items backwards using the arrowup key.\n        focusPrevious: 'arrowup',\n        // Navigate toolbar items forwards using the arrowdown key.\n        focusNext: 'arrowdown'\n      }\n    });\n\n    _this.setTemplate({\n      tag: 'ul',\n      attributes: {\n        class: ['ck', 'ck-reset', 'ck-list']\n      },\n      children: _this.items\n    });\n\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(ListView, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      _get(_getPrototypeOf(ListView.prototype), \"render\", this).call(this); // Items added before rendering should be known to the #focusTracker.\n\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.items[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n          this.focusTracker.add(item.element);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      this.items.on('add', function (evt, item) {\n        _this2.focusTracker.add(item.element);\n      });\n      this.items.on('remove', function (evt, item) {\n        _this2.focusTracker.remove(item.element);\n      }); // Start listening for the keystrokes coming from #element.\n\n      this.keystrokes.listenTo(this.element);\n    }\n    /**\n     * Focuses the first focusable in {@link #items}.\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this._focusCycler.focusFirst();\n    }\n    /**\n     * Focuses the last focusable in {@link #items}.\n     */\n\n  }, {\n    key: \"focusLast\",\n    value: function focusLast() {\n      this._focusCycler.focusLast();\n    }\n  }]);\n\n  return ListView;\n}(View);\n\nexport { ListView as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/list/listitemview\n */\nimport View from '../view';\n/**\n * The list item view class.\n *\n * @extends module:ui/view~View\n */\n\nvar ListItemView =\n/*#__PURE__*/\nfunction (_View) {\n  _inherits(ListItemView, _View);\n\n  /**\n   * @inheritDoc\n   */\n  function ListItemView(locale) {\n    var _this;\n\n    _classCallCheck(this, ListItemView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ListItemView).call(this, locale));\n    /**\n     * Collection of the child views inside of the list item {@link #element}.\n     *\n     * @readonly\n     * @member {module:ui/viewcollection~ViewCollection}\n     */\n\n    _this.children = _this.createCollection();\n\n    _this.setTemplate({\n      tag: 'li',\n      attributes: {\n        class: ['ck', 'ck-list__item']\n      },\n      children: _this.children\n    });\n\n    return _this;\n  }\n  /**\n   * Focuses the list item.\n   */\n\n\n  _createClass(ListItemView, [{\n    key: \"focus\",\n    value: function focus() {\n      this.children.first.focus();\n    }\n  }]);\n\n  return ListItemView;\n}(View);\n\nexport { ListItemView as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/list/listseparatorview\n */\nimport View from '../view';\n/**\n * The list separator view class.\n *\n * @extends module:ui/view~View\n */\n\nvar ListSeparatorView =\n/*#__PURE__*/\nfunction (_View) {\n  _inherits(ListSeparatorView, _View);\n\n  /**\n   * @inheritDoc\n   */\n  function ListSeparatorView(locale) {\n    var _this;\n\n    _classCallCheck(this, ListSeparatorView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ListSeparatorView).call(this, locale));\n\n    _this.setTemplate({\n      tag: 'li',\n      attributes: {\n        class: ['ck', 'ck-list__separator']\n      }\n    });\n\n    return _this;\n  }\n\n  return ListSeparatorView;\n}(View);\n\nexport { ListSeparatorView as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/button/switchbuttonview\n */\nimport View from '../view';\nimport ButtonView from './buttonview';\nimport '../../theme/components/button/switchbutton.css';\n/**\n * The switch button view class.\n *\n *\t\tconst view = new SwitchButtonView();\n *\n *\t\tview.set( {\n *\t\t\twithText: true,\n *\t\t\tlabel: 'Switch me!'\n *\t\t} );\n *\n *\t\tview.render();\n *\n *\t\tdocument.body.append( view.element );\n *\n * @extends module:ui/buttonview~ButtonView\n */\n\nvar SwitchButtonView =\n/*#__PURE__*/\nfunction (_ButtonView) {\n  _inherits(SwitchButtonView, _ButtonView);\n\n  /**\n   * @inheritDoc\n   */\n  function SwitchButtonView(locale) {\n    var _this;\n\n    _classCallCheck(this, SwitchButtonView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SwitchButtonView).call(this, locale));\n    /**\n     * The toggle switch of the button.\n     *\n     * @readonly\n     * @member {module:ui/view~View} #toggleSwitchView\n     */\n\n    _this.toggleSwitchView = _this._createToggleView();\n\n    _this.extendTemplate({\n      attributes: {\n        class: 'ck-switchbutton'\n      }\n    });\n\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(SwitchButtonView, [{\n    key: \"render\",\n    value: function render() {\n      _get(_getPrototypeOf(SwitchButtonView.prototype), \"render\", this).call(this);\n\n      this.children.add(this.toggleSwitchView);\n    }\n    /**\n     * Creates a toggle child view.\n     *\n     * @private\n     * @returns {module:ui/view~View}\n     */\n\n  }, {\n    key: \"_createToggleView\",\n    value: function _createToggleView() {\n      var toggleSwitchView = new View();\n      toggleSwitchView.setTemplate({\n        tag: 'span',\n        attributes: {\n          class: ['ck', 'ck-button__toggle']\n        },\n        children: [{\n          tag: 'span',\n          attributes: {\n            class: ['ck', 'ck-button__toggle__inner']\n          }\n        }]\n      });\n      return toggleSwitchView;\n    }\n  }]);\n\n  return SwitchButtonView;\n}(ButtonView);\n\nexport { SwitchButtonView as default };","function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/dropdown/utils\n */\nimport DropdownPanelView from './dropdownpanelview';\nimport DropdownView from './dropdownview';\nimport DropdownButtonView from './button/dropdownbuttonview';\nimport ToolbarView from '../toolbar/toolbarview';\nimport ListView from '../list/listview';\nimport ListItemView from '../list/listitemview';\nimport ListSeparatorView from '../list/listseparatorview';\nimport ButtonView from '../button/buttonview';\nimport SwitchButtonView from '../button/switchbuttonview';\nimport clickOutsideHandler from '../bindings/clickoutsidehandler';\nimport '../../theme/components/dropdown/toolbardropdown.css';\nimport '../../theme/components/dropdown/listdropdown.css';\n/**\n * A helper for creating dropdowns. It creates an instance of a {@link module:ui/dropdown/dropdownview~DropdownView dropdown},\n * with a {@link module:ui/dropdown/button/dropdownbutton~DropdownButton button},\n * {@link module:ui/dropdown/dropdownpanelview~DropdownPanelView panel} and all standard dropdown's behaviors.\n *\n * # Creating dropdowns\n *\n * By default, the default {@link module:ui/dropdown/button/dropdownbuttonview~DropdownButtonView} class is used as\n * definition of the button:\n *\n *\t\tconst dropdown = createDropdown( model );\n *\n *\t\t// Configure dropdown's button properties:\n *\t\tdropdown.buttonView.set( {\n *\t\t\tlabel: 'A dropdown',\n *\t\t\twithText: true\n *\t\t} );\n *\n *\t\tdropdown.render();\n *\n *\t\t// Will render a dropdown labeled \"A dropdown\" with an empty panel.\n *\t\tdocument.body.appendChild( dropdown.element );\n *\n * You can also provide other button views (they need to implement the\n * {@link module:ui/dropdown/button/dropdownbutton~DropdownButton} interface). For instance, you can use\n * {@link module:ui/dropdown/button/splitbuttonview~SplitButtonView} to create a dropdown with a split button.\n *\n *\t\tconst dropdown = createDropdown( model, SplitButtonView );\n *\n *\t\t// Configure dropdown's button properties:\n *\t\tdropdown.buttonView.set( {\n *\t\t\tlabel: 'A dropdown',\n *\t\t\twithText: true\n *\t\t} );\n *\n *\t\tdropdown.buttonView.on( 'execute', () => {\n *\t\t\t// Add the behavior of the \"action part\" of the split button.\n *\t\t\t// Split button consists of the \"action part\" and \"arrow part\".\n *\t\t\t// The arrow opens the dropdown while the action part can have some other behavior.\n * \t\t} );\n *\n *\t\tdropdown.render();\n *\n *\t\t// Will render a dropdown labeled \"A dropdown\" with an empty panel.\n *\t\tdocument.body.appendChild( dropdown.element );\n *\n * # Adding content to the dropdown's panel\n *\n * The content of the panel can be inserted directly into the `dropdown.panelView.element`:\n *\n *\t\tdropdown.panelView.element.textContent = 'Content of the panel';\n *\n * However, most of the time you will want to add there either a {@link module:ui/list/listview~ListView list of options}\n * or a list of buttons (i.e. a {@link module:ui/toolbar/toolbarview~ToolbarView toolbar}).\n * To simplify the task, you can use, respectively, {@link module:ui/dropdown/utils~addListToDropdown} or\n * {@link module:ui/dropdown/utils~addToolbarToDropdown} utils.\n *\n * @param {module:utils/locale~Locale} locale The locale instance.\n * @param {Function} ButtonClass The dropdown button view class. Needs to implement the\n * {@link module:ui/dropdown/button/dropdownbutton~DropdownButton} interface.\n * @returns {module:ui/dropdown/dropdownview~DropdownView} The dropdown view instance.\n */\n\nexport function createDropdown(locale) {\n  var ButtonClass = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DropdownButtonView;\n  var buttonView = new ButtonClass(locale);\n  var panelView = new DropdownPanelView(locale);\n  var dropdownView = new DropdownView(locale, buttonView, panelView);\n  buttonView.bind('isEnabled').to(dropdownView);\n\n  if (buttonView instanceof DropdownButtonView) {\n    buttonView.bind('isOn').to(dropdownView, 'isOpen');\n  } else {\n    buttonView.arrowView.bind('isOn').to(dropdownView, 'isOpen');\n  }\n\n  addDefaultBehavior(dropdownView);\n  return dropdownView;\n}\n/**\n * Adds an instance of {@link module:ui/toolbar/toolbarview~ToolbarView} to a dropdown.\n *\n *\t\tconst buttons = [];\n *\n *\t\t// Either create a new ButtonView instance or create existing.\n *\t\tbuttons.push( new ButtonView() );\n *\t\tbuttons.push( editor.ui.componentFactory.get( 'someButton' ) );\n *\n *\t\tconst dropdown = createDropdown( locale );\n *\n *\t\taddToolbarToDropdown( dropdown, buttons );\n *\n *\t\tdropdown.toolbarView.isVertical = true;\n *\n *\t\t// Will render a vertical button dropdown labeled \"A button dropdown\"\n *\t\t// with a button group in the panel containing two buttons.\n *\t\tdropdown.render()\n *\t\tdocument.body.appendChild( dropdown.element );\n *\n * See {@link module:ui/dropdown/utils~createDropdown} and {@link module:ui/toolbar/toolbarview~ToolbarView}.\n *\n * @param {module:ui/dropdown/dropdownview~DropdownView} dropdownView A dropdown instance to which `ToolbarView` will be added.\n * @param {Iterable.<module:ui/button/buttonview~ButtonView>} buttons\n */\n\nexport function addToolbarToDropdown(dropdownView, buttons) {\n  var toolbarView = dropdownView.toolbarView = new ToolbarView();\n  dropdownView.extendTemplate({\n    attributes: {\n      class: ['ck-toolbar-dropdown']\n    }\n  });\n  buttons.map(function (view) {\n    return toolbarView.items.add(view);\n  });\n  dropdownView.panelView.children.add(toolbarView);\n  toolbarView.items.delegate('execute').to(dropdownView);\n}\n/**\n * Adds an instance of {@link module:ui/list/listview~ListView} to a dropdown.\n *\n *\t\tconst items = new Collection();\n *\n *\t\titems.add( {\n *\t\t\ttype: 'button',\n *\t\t\tmodel: new Model( {\n *\t\t\t\twithText: true,\n *\t\t\t\tlabel: 'First item',\n *\t\t\t\tlabelStyle: 'color: red'\n *\t\t\t} )\n *\t\t} );\n *\n *\t\titems.add( {\n *\t\t\t type: 'button',\n *\t\t\t model: new Model( {\n *\t\t\t\twithText: true,\n *\t\t\t\tlabel: 'Second item',\n *\t\t\t\tlabelStyle: 'color: green',\n *\t\t\t\tclass: 'foo'\n *\t\t\t} )\n *\t\t} );\n *\n *\t\tconst dropdown = createDropdown( locale );\n *\n *\t\taddListToDropdown( dropdown, items );\n *\n *\t\t// Will render a dropdown with a list in the panel containing two items.\n *\t\tdropdown.render()\n *\t\tdocument.body.appendChild( dropdown.element );\n *\n * The `items` collection passed to this methods controls the presence and attributes of respective\n * {@link module:ui/list/listitemview~ListItemView list items}.\n *\n *\n * See {@link module:ui/dropdown/utils~createDropdown} and {@link module:list/list~List}.\n *\n * @param {module:ui/dropdown/dropdownview~DropdownView} dropdownView A dropdown instance to which `ListVIew` will be added.\n * @param {Iterable.<module:ui/dropdown/utils~ListDropdownItemDefinition>} items\n * A collection of the list item definitions to populate the list.\n */\n\nexport function addListToDropdown(dropdownView, items) {\n  var locale = dropdownView.locale;\n  var listView = dropdownView.listView = new ListView(locale);\n  listView.items.bindTo(items).using(function (_ref) {\n    var type = _ref.type,\n        model = _ref.model;\n\n    if (type === 'separator') {\n      return new ListSeparatorView(locale);\n    } else if (type === 'button' || type === 'switchbutton') {\n      var _buttonView;\n\n      var listItemView = new ListItemView(locale);\n      var buttonView;\n\n      if (type === 'button') {\n        buttonView = new ButtonView(locale);\n      } else {\n        buttonView = new SwitchButtonView(locale);\n      } // Bind all model properties to the button view.\n\n\n      (_buttonView = buttonView).bind.apply(_buttonView, _toConsumableArray(Object.keys(model))).to(model);\n\n      buttonView.delegate('execute').to(listItemView);\n      listItemView.children.add(buttonView);\n      return listItemView;\n    }\n  });\n  dropdownView.panelView.children.add(listView);\n  listView.items.delegate('execute').to(dropdownView);\n} // Add a set of default behaviors to dropdown view.\n//\n// @param {module:ui/dropdown/dropdownview~DropdownView} dropdownView\n\nfunction addDefaultBehavior(dropdownView) {\n  closeDropdownOnBlur(dropdownView);\n  closeDropdownOnExecute(dropdownView);\n  focusDropdownContentsOnArrows(dropdownView);\n} // Adds a behavior to a dropdownView that closes opened dropdown when user clicks outside the dropdown.\n//\n// @param {module:ui/dropdown/dropdownview~DropdownView} dropdownView\n\n\nfunction closeDropdownOnBlur(dropdownView) {\n  dropdownView.on('render', function () {\n    clickOutsideHandler({\n      emitter: dropdownView,\n      activator: function activator() {\n        return dropdownView.isOpen;\n      },\n      callback: function callback() {\n        dropdownView.isOpen = false;\n      },\n      contextElements: [dropdownView.element]\n    });\n  });\n} // Adds a behavior to a dropdownView that closes the dropdown view on \"execute\" event.\n//\n// @param {module:ui/dropdown/dropdownview~DropdownView} dropdownView\n\n\nfunction closeDropdownOnExecute(dropdownView) {\n  // Close the dropdown when one of the list items has been executed.\n  dropdownView.on('execute', function (evt) {\n    // Toggling a switch button view should not close the dropdown.\n    if (evt.source instanceof SwitchButtonView) {\n      return;\n    }\n\n    dropdownView.isOpen = false;\n  });\n} // Adds a behavior to a dropdownView that focuses the dropdown's panel view contents on keystrokes.\n//\n// @param {module:ui/dropdown/dropdownview~DropdownView} dropdownView\n\n\nfunction focusDropdownContentsOnArrows(dropdownView) {\n  // If the dropdown panel is already open, the arrow down key should focus the first child of the #panelView.\n  dropdownView.keystrokes.set('arrowdown', function (data, cancel) {\n    if (dropdownView.isOpen) {\n      dropdownView.panelView.focus();\n      cancel();\n    }\n  }); // If the dropdown panel is already open, the arrow up key should focus the last child of the #panelView.\n\n  dropdownView.keystrokes.set('arrowup', function (data, cancel) {\n    if (dropdownView.isOpen) {\n      dropdownView.panelView.focusLast();\n      cancel();\n    }\n  });\n}\n/**\n * A definition of the list item used by the {@link module:ui/dropdown/utils~addListToDropdown}\n * utility.\n *\n * @typedef {Object} module:ui/dropdown/utils~ListDropdownItemDefinition\n *\n * @property {String} type Either `'separator'`, `'button'` or `'switchbutton'`.\n * @property {module:ui/model~Model} [model] Model of the item (when **not** `'separator'`).\n * Its properties fuel the newly created list item (or its children, depending on the `type`).\n */","import ListCache from './_ListCache.js';\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nexport default stackClear;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nexport default stackDelete;\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nexport default stackGet;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nexport default stackHas;\n","import ListCache from './_ListCache.js';\nimport Map from './_Map.js';\nimport MapCache from './_MapCache.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nexport default stackSet;\n","import ListCache from './_ListCache.js';\nimport stackClear from './_stackClear.js';\nimport stackDelete from './_stackDelete.js';\nimport stackGet from './_stackGet.js';\nimport stackHas from './_stackHas.js';\nimport stackSet from './_stackSet.js';\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nexport default Stack;\n","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/priorities\n */\n\n/**\n * String representing a priority value.\n *\n * @typedef {'highest'|'high'|'normal'|'low'|'lowest'} module:utils/priorities~PriorityString\n */\n\n/**\n * Provides group of constants to use instead of hardcoding numeric priority values.\n *\n * @namespace\n */\nvar priorities = {\n  /**\n   * Converts a string with priority name to it's numeric value. If `Number` is given, it just returns it.\n   *\n   * @static\n   * @param {module:utils/priorities~PriorityString|Number} priority Priority to convert.\n   * @returns {Number} Converted priority.\n   */\n  get: function get(priority) {\n    if (typeof priority != 'number') {\n      return this[priority] || this.normal;\n    } else {\n      return priority;\n    }\n  },\n  highest: 100000,\n  high: 1000,\n  normal: 0,\n  low: -1000,\n  lowest: -100000\n};\nexport default priorities;","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/toolbar/toolbarseparatorview\n */\nimport View from '../view';\n/**\n * The toolbar separator view class.\n *\n * @extends module:ui/view~View\n */\n\nvar ToolbarSeparatorView =\n/*#__PURE__*/\nfunction (_View) {\n  _inherits(ToolbarSeparatorView, _View);\n\n  /**\n   * @inheritDoc\n   */\n  function ToolbarSeparatorView(locale) {\n    var _this;\n\n    _classCallCheck(this, ToolbarSeparatorView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ToolbarSeparatorView).call(this, locale));\n\n    _this.setTemplate({\n      tag: 'span',\n      attributes: {\n        class: ['ck', 'ck-toolbar__separator']\n      }\n    });\n\n    return _this;\n  }\n\n  return ToolbarSeparatorView;\n}(View);\n\nexport { ToolbarSeparatorView as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/toolbar/toolbarview\n */\nimport View from '../view';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport FocusCycler from '../focuscycler';\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\nimport ToolbarSeparatorView from './toolbarseparatorview';\nimport preventDefault from '../bindings/preventdefault.js';\nimport log from '@ckeditor/ckeditor5-utils/src/log';\nimport '../../theme/components/toolbar/toolbar.css';\n/**\n * The toolbar view class.\n *\n * @extends module:ui/view~View\n * @implements module:ui/dropdown/dropdownpanelfocusable~DropdownPanelFocusable\n */\n\nvar ToolbarView =\n/*#__PURE__*/\nfunction (_View) {\n  _inherits(ToolbarView, _View);\n\n  /**\n   * @inheritDoc\n   */\n  function ToolbarView(locale) {\n    var _this;\n\n    _classCallCheck(this, ToolbarView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ToolbarView).call(this, locale));\n    var bind = _this.bindTemplate;\n    /**\n     * Collection of the toolbar items (like buttons).\n     *\n     * @readonly\n     * @member {module:ui/viewcollection~ViewCollection}\n     */\n\n    _this.items = _this.createCollection();\n    /**\n     * Tracks information about DOM focus in the list.\n     *\n     * @readonly\n     * @member {module:utils/focustracker~FocusTracker}\n     */\n\n    _this.focusTracker = new FocusTracker();\n    /**\n     * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n     *\n     * @readonly\n     * @member {module:utils/keystrokehandler~KeystrokeHandler}\n     */\n\n    _this.keystrokes = new KeystrokeHandler();\n    /**\n     * Controls the orientation of toolbar items.\n     *\n     * @observable\n     * @member {Boolean} #isVertical\n     */\n\n    _this.set('isVertical', false);\n    /**\n     * An additional CSS class added to the {@link #element}.\n     *\n     * @observable\n     * @member {String} #className\n     */\n\n\n    _this.set('className');\n    /**\n     * Helps cycling over focusable {@link #items} in the toolbar.\n     *\n     * @readonly\n     * @protected\n     * @member {module:ui/focuscycler~FocusCycler}\n     */\n\n\n    _this._focusCycler = new FocusCycler({\n      focusables: _this.items,\n      focusTracker: _this.focusTracker,\n      keystrokeHandler: _this.keystrokes,\n      actions: {\n        // Navigate toolbar items backwards using the arrow[left,up] keys.\n        focusPrevious: ['arrowleft', 'arrowup'],\n        // Navigate toolbar items forwards using the arrow[right,down] keys.\n        focusNext: ['arrowright', 'arrowdown']\n      }\n    });\n\n    _this.setTemplate({\n      tag: 'div',\n      attributes: {\n        class: ['ck', 'ck-toolbar', bind.if('isVertical', 'ck-toolbar_vertical'), bind.to('className')]\n      },\n      children: _this.items,\n      on: {\n        // https://github.com/ckeditor/ckeditor5-ui/issues/206\n        mousedown: preventDefault(_assertThisInitialized(_assertThisInitialized(_this)))\n      }\n    });\n\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(ToolbarView, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      _get(_getPrototypeOf(ToolbarView.prototype), \"render\", this).call(this); // Items added before rendering should be known to the #focusTracker.\n\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.items[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n          this.focusTracker.add(item.element);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      this.items.on('add', function (evt, item) {\n        _this2.focusTracker.add(item.element);\n      });\n      this.items.on('remove', function (evt, item) {\n        _this2.focusTracker.remove(item.element);\n      }); // Start listening for the keystrokes coming from #element.\n\n      this.keystrokes.listenTo(this.element);\n    }\n    /**\n     * Focuses the first focusable in {@link #items}.\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this._focusCycler.focusFirst();\n    }\n    /**\n     * Focuses the last focusable in {@link #items}.\n     */\n\n  }, {\n    key: \"focusLast\",\n    value: function focusLast() {\n      this._focusCycler.focusLast();\n    }\n    /**\n     * A utility which expands a plain toolbar configuration into\n     * {@link module:ui/toolbar/toolbarview~ToolbarView#items} using a given component factory.\n     *\n     * @param {Array.<String>} config The toolbar items config.\n     * @param {module:ui/componentfactory~ComponentFactory} factory A factory producing toolbar items.\n     */\n\n  }, {\n    key: \"fillFromConfig\",\n    value: function fillFromConfig(config, factory) {\n      var _this3 = this;\n\n      config.map(function (name) {\n        if (name == '|') {\n          _this3.items.add(new ToolbarSeparatorView());\n        } else if (factory.has(name)) {\n          _this3.items.add(factory.create(name));\n        } else {\n          /**\n           * There was a problem processing the configuration of the toolbar. The item with the given\n           * name does not exist so it was omitted when rendering the toolbar.\n           *\n           * This warning usually shows up when the {@link module:core/plugin~Plugin} which is supposed\n           * to provide a toolbar item has not been loaded or there is a typo in the configuration.\n           *\n           * Make sure the plugin responsible for this toolbar item is loaded and the toolbar configuration\n           * is correct, e.g. {@link module:basic-styles/bold~Bold} is loaded for the `'bold'` toolbar item.\n           *\n           * You can use the following snippet to retrieve all available toolbar items:\n           *\n           *\t\tArray.from( editor.ui.componentFactory.names() );\n           *\n           * @error toolbarview-item-unavailable\n           * @param {String} name The name of the component.\n           */\n          log.warn('toolbarview-item-unavailable: The requested toolbar item is unavailable.', {\n            name: name\n          });\n        }\n      });\n    }\n  }]);\n\n  return ToolbarView;\n}(View);\n\nexport { ToolbarView as default };","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/bindings/preventdefault\n */\n\n/**\n * A helper which executes a native `Event.preventDefault()` if the target of an event equals the\n * {@link module:ui/view~View#element element of the view}. It shortens the definition of a\n * {@link module:ui/view~View#template template}.\n *\n *\t\t// In a class extending View.\n *\t\timport preventDefault from '@ckeditor/ckeditor5-ui/src/bindings/preventdefault';\n *\n *\t\t// ...\n *\n *\t\tthis.setTemplate( {\n *\t\t\ttag: 'div',\n *\n *\t\t\ton: {\n *\t\t\t\t// Prevent the default mousedown action on this view.\n *\t\t\t\tmousedown: preventDefault( this )\n *\t\t\t}\n *\t\t} );\n *\n * @param {module:ui/view~View} view View instance that defines the template.\n * @returns {module:ui/template~TemplateToBinding}\n */\nexport default function preventDefault(view) {\n  return view.bindTemplate.to(function (evt) {\n    if (evt.target === view.element) {\n      evt.preventDefault();\n    }\n  });\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/dataprocessor/basichtmlwriter\n */\n\n/* globals document */\n\n/**\n * Basic HTML writer. It uses the native `innerHTML` property for basic conversion\n * from a document fragment to an HTML string.\n *\n * @implements module:engine/dataprocessor/htmlwriter~HtmlWriter\n */\nvar BasicHtmlWriter =\n/*#__PURE__*/\nfunction () {\n  function BasicHtmlWriter() {\n    _classCallCheck(this, BasicHtmlWriter);\n  }\n\n  _createClass(BasicHtmlWriter, [{\n    key: \"getHtml\",\n\n    /**\n     * Returns an HTML string created from the document fragment.\n     *\n     * @param {DocumentFragment} fragment\n     * @returns {String}\n     */\n    value: function getHtml(fragment) {\n      var doc = document.implementation.createHTMLDocument('');\n      var container = doc.createElement('div');\n      container.appendChild(fragment);\n      return container.innerHTML;\n    }\n  }]);\n\n  return BasicHtmlWriter;\n}();\n\nexport { BasicHtmlWriter as default };","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/dataprocessor/htmldataprocessor\n */\n\n/* globals document, DOMParser */\nimport BasicHtmlWriter from './basichtmlwriter';\nimport DomConverter from '../view/domconverter';\nimport { NBSP_FILLER } from '../view/filler';\n/**\n * The HTML data processor class.\n * This data processor implementation uses HTML as input and output data.\n *\n * @implements module:engine/dataprocessor/dataprocessor~DataProcessor\n */\n\nvar HtmlDataProcessor =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a new instance of the HTML data processor class.\n   */\n  function HtmlDataProcessor() {\n    _classCallCheck(this, HtmlDataProcessor);\n\n    /**\n     * A DOM parser instance used to parse an HTML string to an HTML document.\n     *\n     * @private\n     * @member {DOMParser}\n     */\n    this._domParser = new DOMParser();\n    /**\n     * A DOM converter used to convert DOM elements to view elements.\n     *\n     * @private\n     * @member {module:engine/view/domconverter~DomConverter}\n     */\n\n    this._domConverter = new DomConverter({\n      blockFiller: NBSP_FILLER\n    });\n    /**\n     * A basic HTML writer instance used to convert DOM elements to an HTML string.\n     *\n     * @private\n     * @member {module:engine/dataprocessor/basichtmlwriter~BasicHtmlWriter}\n     */\n\n    this._htmlWriter = new BasicHtmlWriter();\n  }\n  /**\n   * Converts a provided {@link module:engine/view/documentfragment~DocumentFragment document fragment}\n   * to data format &mdash; in this case to an HTML string.\n   *\n   * @param {module:engine/view/documentfragment~DocumentFragment} viewFragment\n   * @returns {String} HTML string.\n   */\n\n\n  _createClass(HtmlDataProcessor, [{\n    key: \"toData\",\n    value: function toData(viewFragment) {\n      // Convert view DocumentFragment to DOM DocumentFragment.\n      var domFragment = this._domConverter.viewToDom(viewFragment, document); // Convert DOM DocumentFragment to HTML output.\n\n\n      return this._htmlWriter.getHtml(domFragment);\n    }\n    /**\n     * Converts the provided HTML string to a view tree.\n     *\n     * @param {String} data An HTML string.\n     * @returns {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment|null} A converted view element.\n     */\n\n  }, {\n    key: \"toView\",\n    value: function toView(data) {\n      // Convert input HTML data to DOM DocumentFragment.\n      var domFragment = this._toDom(data); // Convert DOM DocumentFragment to view DocumentFragment.\n\n\n      return this._domConverter.domToView(domFragment);\n    }\n    /**\n     * Converts an HTML string to its DOM representation. Returns a document fragment containing nodes parsed from\n     * the provided data.\n     *\n     * @private\n     * @param {String} data\n     * @returns {DocumentFragment}\n     */\n\n  }, {\n    key: \"_toDom\",\n    value: function _toDom(data) {\n      var document = this._domParser.parseFromString(data, 'text/html');\n\n      var fragment = document.createDocumentFragment();\n      var nodes = document.body.childNodes;\n\n      while (nodes.length > 0) {\n        fragment.appendChild(nodes[0]);\n      }\n\n      return fragment;\n    }\n  }]);\n\n  return HtmlDataProcessor;\n}();\n\nexport { HtmlDataProcessor as default };","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbols from './_getSymbols.js';\nimport keys from './keys.js';\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nexport default getAllKeys;\n","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/count\n */\n\n/**\n * Returns the number of items return by the iterator.\n *\n *\t\tcount( [ 1, 2, 3, 4, 5 ] ); // 5;\n *\n * @param {Iterable.<*>} iterator Any iterator.\n * @returns {Number} Number of items returned by that iterator.\n */\nexport default function count(iterator) {\n  var count = 0;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = iterator[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var _ = _step.value;\n      // eslint-disable-line no-unused-vars\n      count++;\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return count;\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/operation/rootattributeoperation\n */\nimport Operation from './operation';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * Operation to change root element's attribute. Using this class you can add, remove or change value of the attribute.\n *\n * This operation is needed, because root elements can't be changed through\n * @link module:engine/model/operation/attributeoperation~AttributeOperation}.\n * It is because {@link module:engine/model/operation/attributeoperation~AttributeOperation}\n * requires a range to change and root element can't\n * be a part of range because every {@link module:engine/model/position~Position} has to be inside a root.\n * {@link module:engine/model/position~Position} can't be created before a root element.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\n\nvar RootAttributeOperation =\n/*#__PURE__*/\nfunction (_Operation) {\n  _inherits(RootAttributeOperation, _Operation);\n\n  /**\n   * Creates an operation that changes, removes or adds attributes on root element.\n   *\n   * @see module:engine/model/operation/attributeoperation~AttributeOperation\n   * @param {module:engine/model/rootelement~RootElement} root Root element to change.\n   * @param {String} key Key of an attribute to change or remove.\n   * @param {*} oldValue Old value of the attribute with given key or `null` if adding a new attribute.\n   * @param {*} newValue New value to set for the attribute. If `null`, then the operation just removes the attribute.\n   * @param {Number|null} baseVersion Document {@link module:engine/model/document~Document#version} on which operation\n   * can be applied or `null` if the operation operates on detached (non-document) tree.\n   */\n  function RootAttributeOperation(root, key, oldValue, newValue, baseVersion) {\n    var _this;\n\n    _classCallCheck(this, RootAttributeOperation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RootAttributeOperation).call(this, baseVersion));\n    /**\n     * Root element to change.\n     *\n     * @readonly\n     * @member {module:engine/model/rootelement~RootElement}\n     */\n\n    _this.root = root;\n    /**\n     * Key of an attribute to change or remove.\n     *\n     * @readonly\n     * @member {String}\n     */\n\n    _this.key = key;\n    /**\n     * Old value of the attribute with given key or `null` if adding a new attribute.\n     *\n     * @readonly\n     * @member {*}\n     */\n\n    _this.oldValue = oldValue;\n    /**\n     * New value to set for the attribute. If `null`, then the operation just removes the attribute.\n     *\n     * @readonly\n     * @member {*}\n     */\n\n    _this.newValue = newValue;\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(RootAttributeOperation, [{\n    key: \"clone\",\n\n    /**\n     * Creates and returns an operation that has the same parameters as this operation.\n     *\n     * @returns {module:engine/model/operation/rootattributeoperation~RootAttributeOperation} Clone of this operation.\n     */\n    value: function clone() {\n      return new RootAttributeOperation(this.root, this.key, this.oldValue, this.newValue, this.baseVersion);\n    }\n    /**\n     * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n     *\n     * @returns {module:engine/model/operation/rootattributeoperation~RootAttributeOperation}\n     */\n\n  }, {\n    key: \"getReversed\",\n    value: function getReversed() {\n      return new RootAttributeOperation(this.root, this.key, this.newValue, this.oldValue, this.baseVersion + 1);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_validate\",\n    value: function _validate() {\n      if (this.root != this.root.root || this.root.is('documentFragment')) {\n        /**\n         * The element to change is not a root element.\n         *\n         * @error rootattribute-operation-not-a-root\n         * @param {module:engine/model/rootelement~RootElement} root\n         * @param {String} key\n         * @param {*} value\n         */\n        throw new CKEditorError('rootattribute-operation-not-a-root: The element to change is not a root element.', {\n          root: this.root,\n          key: this.key\n        });\n      }\n\n      if (this.oldValue !== null && this.root.getAttribute(this.key) !== this.oldValue) {\n        /**\n         * The attribute which should be removed does not exists for the given node.\n         *\n         * @error rootattribute-operation-wrong-old-value\n         * @param {module:engine/model/rootelement~RootElement} root\n         * @param {String} key\n         * @param {*} value\n         */\n        throw new CKEditorError('rootattribute-operation-wrong-old-value: Changed node has different attribute value than operation\\'s ' + 'old attribute value.', {\n          root: this.root,\n          key: this.key\n        });\n      }\n\n      if (this.oldValue === null && this.newValue !== null && this.root.hasAttribute(this.key)) {\n        /**\n         * The attribute with given key already exists for the given node.\n         *\n         * @error rootattribute-operation-attribute-exists\n         * @param {module:engine/model/rootelement~RootElement} root\n         * @param {String} key\n         */\n        throw new CKEditorError('rootattribute-operation-attribute-exists: The attribute with given key already exists.', {\n          root: this.root,\n          key: this.key\n        });\n      }\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_execute\",\n    value: function _execute() {\n      if (this.newValue !== null) {\n        this.root._setAttribute(this.key, this.newValue);\n      } else {\n        this.root._removeAttribute(this.key);\n      }\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = _get(_getPrototypeOf(RootAttributeOperation.prototype), \"toJSON\", this).call(this);\n\n      json.root = this.root.toJSON();\n      return json;\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"type\",\n    get: function get() {\n      if (this.oldValue === null) {\n        return 'addRootAttribute';\n      } else if (this.newValue === null) {\n        return 'removeRootAttribute';\n      } else {\n        return 'changeRootAttribute';\n      }\n    }\n  }], [{\n    key: \"fromJSON\",\n\n    /**\n     * Creates RootAttributeOperation object from deserilized object, i.e. from parsed JSON string.\n     *\n     * @param {Object} json Deserialized JSON object.\n     * @param {module:engine/model/document~Document} document Document on which this operation will be applied.\n     * @returns {module:engine/model/operation/rootattributeoperation~RootAttributeOperation}\n     */\n    value: function fromJSON(json, document) {\n      if (!document.getRoot(json.root)) {\n        /**\n         * Cannot create RootAttributeOperation for document. Root with specified name does not exist.\n         *\n         * @error rootattributeoperation-fromjson-no-root\n         * @param {String} rootName\n         */\n        throw new CKEditorError('rootattribute-operation-fromjson-no-root: Cannot create RootAttributeOperation. Root with specified name does not exist.', {\n          rootName: json.root\n        });\n      }\n\n      return new RootAttributeOperation(document.getRoot(json.root), json.key, json.oldValue, json.newValue, json.baseVersion);\n    }\n  }, {\n    key: \"className\",\n    get: function get() {\n      return 'RootAttributeOperation';\n    }\n  }]);\n\n  return RootAttributeOperation;\n}(Operation);\n\nexport { RootAttributeOperation as default };","import baseGetTag from './_baseGetTag.js';\nimport getPrototype from './_getPrototype.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nexport default isPlainObject;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nexport default identity;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nexport default apply;\n","import apply from './_apply.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nexport default overRest;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nexport default constant;\n","import constant from './constant.js';\nimport defineProperty from './_defineProperty.js';\nimport identity from './identity.js';\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nexport default baseSetToString;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nexport default shortOut;\n","import baseSetToString from './_baseSetToString.js';\nimport shortOut from './_shortOut.js';\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nexport default setToString;\n","import identity from './identity.js';\nimport overRest from './_overRest.js';\nimport setToString from './_setToString.js';\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nexport default baseRest;\n","import eq from './eq.js';\nimport isArrayLike from './isArrayLike.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nexport default isIterateeCall;\n","import baseRest from './_baseRest.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nexport default createAssigner;\n","import copyObject from './_copyObject.js';\nimport createAssigner from './_createAssigner.js';\nimport keysIn from './keysIn.js';\n\n/**\n * This method is like `_.assign` except that it iterates over own and\n * inherited source properties.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias extend\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assign\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n */\nvar assignIn = createAssigner(function(object, source) {\n  copyObject(source, keysIn(source), object);\n});\n\nexport default assignIn;\n","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module clipboard/datatransfer\n */\n\n/**\n * Facade over the native [`DataTransfer`](https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer) object.\n */\nvar DataTransfer =\n/*#__PURE__*/\nfunction () {\n  function DataTransfer(nativeDataTransfer) {\n    _classCallCheck(this, DataTransfer);\n\n    /**\n     * The array of files created from the native `DataTransfer#files` or `DataTransfer#items`.\n     *\n     * @readonly\n     * @member {Array.<File>} #files\n     */\n    this.files = getFiles(nativeDataTransfer);\n    /**\n     * The native DataTransfer object.\n     *\n     * @private\n     * @member {DataTransfer} #_native\n     */\n\n    this._native = nativeDataTransfer;\n  }\n  /**\n   * Returns an array of available native content types.\n   *\n   * @returns {Array.<String>}\n   */\n\n\n  _createClass(DataTransfer, [{\n    key: \"getData\",\n\n    /**\n     * Gets data from the data transfer by its mime type.\n     *\n     *\t\tdataTransfer.getData( 'text/plain' );\n     *\n     * @param {String} type The mime type. E.g. `text/html` or `text/plain`.\n     * @returns {String}\n     */\n    value: function getData(type) {\n      return this._native.getData(type);\n    }\n    /**\n     * Sets data in the data transfer.\n     *\n     * @param {String} type The mime type. E.g. `text/html` or `text/plain`.\n     * @param {String} data\n     */\n\n  }, {\n    key: \"setData\",\n    value: function setData(type, data) {\n      this._native.setData(type, data);\n    }\n  }, {\n    key: \"types\",\n    get: function get() {\n      return this._native.types;\n    }\n  }]);\n\n  return DataTransfer;\n}();\n\nexport { DataTransfer as default };\n\nfunction getFiles(nativeDataTransfer) {\n  // DataTransfer.files and items are Array-like and might not have an iterable interface.\n  var files = nativeDataTransfer.files ? Array.from(nativeDataTransfer.files) : [];\n  var items = nativeDataTransfer.items ? Array.from(nativeDataTransfer.items) : [];\n\n  if (files.length) {\n    return files;\n  } // Chrome have empty DataTransfer.files, but let get files through the items interface.\n\n\n  return items.filter(function (item) {\n    return item.kind === 'file';\n  }).map(function (item) {\n    return item.getAsFile();\n  });\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module clipboard/clipboardobserver\n */\nimport DomEventObserver from '@ckeditor/ckeditor5-engine/src/view/observer/domeventobserver';\nimport DataTransfer from './datatransfer';\n/**\n * Clipboard events observer.\n *\n * Fires the following events:\n *\n * * {@link module:engine/view/document~Document#event:clipboardInput}\n * * {@link module:engine/view/document~Document#event:dragover}\n * * {@link module:engine/view/document~Document#event:drop}\n * * {@link module:engine/view/document~Document#event:paste}\n * * {@link module:engine/view/document~Document#event:copy}\n * * {@link module:engine/view/document~Document#event:cut}\n *\n * Note that this observer is not available by default (it is not added by the engine).\n * To make it available it needs to be added to {@link module:engine/view/document~Document} by\n * the {@link module:engine/view/view~View#addObserver `View#addObserver()`} method. You can also load the\n * {@link module:clipboard/clipboard~Clipboard} plugin which adds this observer automatically (because it uses it).\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\n\nvar ClipboardObserver =\n/*#__PURE__*/\nfunction (_DomEventObserver) {\n  _inherits(ClipboardObserver, _DomEventObserver);\n\n  function ClipboardObserver(view) {\n    var _this;\n\n    _classCallCheck(this, ClipboardObserver);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ClipboardObserver).call(this, view));\n    var viewDocument = _this.document;\n    _this.domEventType = ['paste', 'copy', 'cut', 'drop', 'dragover'];\n\n    _this.listenTo(viewDocument, 'paste', handleInput, {\n      priority: 'low'\n    });\n\n    _this.listenTo(viewDocument, 'drop', handleInput, {\n      priority: 'low'\n    });\n\n    function handleInput(evt, data) {\n      data.preventDefault();\n      var targetRanges = data.dropRange ? [data.dropRange] : Array.from(viewDocument.selection.getRanges());\n      viewDocument.fire('clipboardInput', {\n        dataTransfer: data.dataTransfer,\n        targetRanges: targetRanges\n      });\n    }\n\n    return _this;\n  }\n\n  _createClass(ClipboardObserver, [{\n    key: \"onDomEvent\",\n    value: function onDomEvent(domEvent) {\n      var evtData = {\n        dataTransfer: new DataTransfer(domEvent.clipboardData ? domEvent.clipboardData : domEvent.dataTransfer)\n      };\n\n      if (domEvent.type == 'drop') {\n        evtData.dropRange = getDropViewRange(this.view, domEvent);\n      }\n\n      this.fire(domEvent.type, domEvent, evtData);\n    }\n  }]);\n\n  return ClipboardObserver;\n}(DomEventObserver);\n\nexport { ClipboardObserver as default };\n\nfunction getDropViewRange(view, domEvent) {\n  var domDoc = domEvent.target.ownerDocument;\n  var x = domEvent.clientX;\n  var y = domEvent.clientY;\n  var domRange; // Webkit & Blink.\n\n  if (domDoc.caretRangeFromPoint && domDoc.caretRangeFromPoint(x, y)) {\n    domRange = domDoc.caretRangeFromPoint(x, y);\n  } // FF.\n  else if (domEvent.rangeParent) {\n      domRange = domDoc.createRange();\n      domRange.setStart(domEvent.rangeParent, domEvent.rangeOffset);\n      domRange.collapse(true);\n    }\n\n  if (domRange) {\n    return view.domConverter.domRangeToView(domRange);\n  } else {\n    return view.document.selection.getFirstRange();\n  }\n}\n/**\n * Fired as a continuation of {@link #event:paste} and {@link #event:drop} events.\n *\n * It is a part of the {@glink framework/guides/deep-dive/clipboard#input-pipeline \"clipboard input pipeline\"}.\n *\n * Fired with a `dataTransfer` which comes from the clipboard and which content should be processed\n * and inserted into the editor.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @see module:clipboard/clipboard~Clipboard\n * @event module:engine/view/document~Document#event:clipboardInput\n * @param {Object} data Event data.\n * @param {module:clipboard/datatransfer~DataTransfer} data.dataTransfer Data transfer instance.\n * @param {Array.<module:engine/view/range~Range>} data.targetRanges Ranges which are the target of the operation\n * (usually – into which the content should be inserted).\n * If clipboard input was triggered by a paste operation, then these are the selection ranges. If by a drop operation,\n * then it's the drop position (which can be different than the selection at the moment of drop).\n */\n\n/**\n * Fired when user drags content over one of the editables.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:engine/view/document~Document#event:clipboardInput\n * @event module:engine/view/document~Document#event:dragover\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\n */\n\n/**\n * Fired when user dropped content into one of the editables.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:engine/view/document~Document#event:clipboardInput\n * @event module:engine/view/document~Document#event:drop\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\n * @param {module:engine/view/range~Range} dropRange The position into which the content is dropped.\n */\n\n/**\n * Fired when user pasted content into one of the editables.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:engine/view/document~Document#event:clipboardInput\n * @event module:engine/view/document~Document#event:paste\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\n */\n\n/**\n * Fired when user copied content from one of the editables.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @event module:engine/view/document~Document#event:copy\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\n */\n\n/**\n * Fired when user cut content from one of the editables.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * Note that this event is not available by default. To make it available {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to {@link module:engine/view/document~Document} by the {@link module:engine/view/view~View#addObserver} method.\n * It's done by the {@link module:clipboard/clipboard~Clipboard} feature. If it's not loaded, it must be done manually.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @event module:engine/view/document~Document#event:cut\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data Event data.\n */\n\n/**\n * The value of the {@link module:engine/view/document~Document#event:paste},\n * {@link module:engine/view/document~Document#event:copy} and {@link module:engine/view/document~Document#event:cut} events.\n *\n * In order to access clipboard data use `dataTransfer` property.\n *\n * @class module:clipboard/clipboardobserver~ClipboardEventData\n * @extends module:engine/view/observer/domeventdata~DomEventData\n */\n\n/**\n * Data transfer instance.\n *\n * @readonly\n * @member {module:clipboard/datatransfer~DataTransfer} module:clipboard/clipboardobserver~ClipboardEventData#dataTransfer\n */","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module clipboard/utils/viewtoplaintext\n */\n// Elements which should not have empty-line padding.\n// Most `view.ContainerElement` want to be separate by new-line, but some are creating one structure\n// together (like `<li>`) so it is better to separate them by only one \"\\n\".\nvar smallPaddingElements = ['figcaption', 'li'];\n/**\n * Converts {@link module:engine/view/item~Item view item} and all of its children to plain text.\n *\n * @param {module:engine/view/item~Item} viewItem View item to convert.\n * @returns {String} Plain text representation of `viewItem`.\n */\n\nexport default function viewToPlainText(viewItem) {\n  var text = '';\n\n  if (viewItem.is('text') || viewItem.is('textProxy')) {\n    // If item is `Text` or `TextProxy` simple take its text data.\n    text = viewItem.data;\n  } else if (viewItem.is('img') && viewItem.hasAttribute('alt')) {\n    // Special case for images - use alt attribute if it is provided.\n    text = viewItem.getAttribute('alt');\n  } else {\n    // Other elements are document fragments, attribute elements or container elements.\n    // They don't have their own text value, so convert their children.\n    var prev = null;\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = viewItem.getChildren()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var child = _step.value;\n        var childText = viewToPlainText(child); // Separate container element children with one or more new-line characters.\n\n        if (prev && (prev.is('containerElement') || child.is('containerElement'))) {\n          if (smallPaddingElements.includes(prev.name) || smallPaddingElements.includes(child.name)) {\n            text += '\\n';\n          } else {\n            text += '\\n\\n';\n          }\n        }\n\n        text += childText;\n        prev = child;\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  }\n\n  return text;\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module clipboard/clipboard\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ClipboardObserver from './clipboardobserver';\nimport plainTextToHtml from './utils/plaintexttohtml';\nimport normalizeClipboardHtml from './utils/normalizeclipboarddata';\nimport viewToPlainText from './utils/viewtoplaintext.js';\nimport HtmlDataProcessor from '@ckeditor/ckeditor5-engine/src/dataprocessor/htmldataprocessor';\n/**\n * The clipboard feature. It is responsible for intercepting the `paste` and `drop` events and\n * passing the pasted content through the clipboard pipeline in order to insert it into the editor's content.\n * It also handles the `cut` and `copy` events to fill the native clipboard with serialized editor's data.\n *\n * Read more about the clipboard integration in {@glink framework/guides/deep-dive/clipboard \"Clipboard\" deep dive} guide.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar Clipboard =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(Clipboard, _Plugin);\n\n  function Clipboard() {\n    _classCallCheck(this, Clipboard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Clipboard).apply(this, arguments));\n  }\n\n  _createClass(Clipboard, [{\n    key: \"init\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function init() {\n      var _this = this;\n\n      var editor = this.editor;\n      var modelDocument = editor.model.document;\n      var view = editor.editing.view;\n      var viewDocument = view.document;\n      /**\n       * Data processor used to convert pasted HTML to a view structure.\n       *\n       * @private\n       * @member {module:engine/dataprocessor/htmldataprocessor~HtmlDataProcessor} #_htmlDataProcessor\n       */\n\n      this._htmlDataProcessor = new HtmlDataProcessor();\n      view.addObserver(ClipboardObserver); // The clipboard paste pipeline.\n      // Pasting and dropping is disabled when editor is read-only.\n      // See: https://github.com/ckeditor/ckeditor5-clipboard/issues/26.\n\n      this.listenTo(viewDocument, 'clipboardInput', function (evt) {\n        if (editor.isReadOnly) {\n          evt.stop();\n        }\n      }, {\n        priority: 'highest'\n      });\n      this.listenTo(viewDocument, 'clipboardInput', function (evt, data) {\n        var dataTransfer = data.dataTransfer;\n        var content = '';\n\n        if (dataTransfer.getData('text/html')) {\n          content = normalizeClipboardHtml(dataTransfer.getData('text/html'));\n        } else if (dataTransfer.getData('text/plain')) {\n          content = plainTextToHtml(dataTransfer.getData('text/plain'));\n        }\n\n        content = _this._htmlDataProcessor.toView(content);\n\n        _this.fire('inputTransformation', {\n          content: content,\n          dataTransfer: dataTransfer\n        });\n\n        view.scrollToTheSelection();\n      }, {\n        priority: 'low'\n      });\n      this.listenTo(this, 'inputTransformation', function (evt, data) {\n        if (!data.content.isEmpty) {\n          var dataController = _this.editor.data;\n          var model = _this.editor.model; // Convert the pasted content to a model document fragment.\n          // Conversion is contextual, but in this case we need an \"all allowed\" context and for that\n          // we use the $clipboardHolder item.\n\n          var modelFragment = dataController.toModel(data.content, '$clipboardHolder');\n\n          if (modelFragment.childCount == 0) {\n            return;\n          }\n\n          model.insertContent(modelFragment);\n        }\n      }, {\n        priority: 'low'\n      }); // The clipboard copy/cut pipeline.\n\n      function onCopyCut(evt, data) {\n        var dataTransfer = data.dataTransfer;\n        data.preventDefault();\n        var content = editor.data.toView(editor.model.getSelectedContent(modelDocument.selection));\n        viewDocument.fire('clipboardOutput', {\n          dataTransfer: dataTransfer,\n          content: content,\n          method: evt.name\n        });\n      }\n\n      this.listenTo(viewDocument, 'copy', onCopyCut, {\n        priority: 'low'\n      });\n      this.listenTo(viewDocument, 'cut', function (evt, data) {\n        // Cutting is disabled when editor is read-only.\n        // See: https://github.com/ckeditor/ckeditor5-clipboard/issues/26.\n        if (editor.isReadOnly) {\n          data.preventDefault();\n        } else {\n          onCopyCut(evt, data);\n        }\n      }, {\n        priority: 'low'\n      });\n      this.listenTo(viewDocument, 'clipboardOutput', function (evt, data) {\n        if (!data.content.isEmpty) {\n          data.dataTransfer.setData('text/html', _this._htmlDataProcessor.toData(data.content));\n          data.dataTransfer.setData('text/plain', viewToPlainText(data.content));\n        }\n\n        if (data.method == 'cut') {\n          editor.model.deleteContent(modelDocument.selection);\n        }\n      }, {\n        priority: 'low'\n      });\n    }\n  }], [{\n    key: \"pluginName\",\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return 'Clipboard';\n    }\n  }]);\n\n  return Clipboard;\n}(Plugin);\n/**\n * Fired with a `content` and `dataTransfer` objects. The `content` which comes from the clipboard (was pasted or dropped)\n * should be processed in order to be inserted into the editor. The `dataTransfer` object is available\n * in case the transformation functions needs access to a raw clipboard data.\n *\n * It is a part of the {@glink framework/guides/deep-dive/clipboard#input-pipeline \"clipboard input pipeline\"}.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @see module:clipboard/clipboard~Clipboard\n * @event module:clipboard/clipboard~Clipboard#event:inputTransformation\n * @param {Object} data Event data.\n * @param {module:engine/view/documentfragment~DocumentFragment} data.content Event data. Content to be inserted into the editor.\n * It can be modified by the event listeners. Read more about the clipboard pipelines in\n * {@glink framework/guides/deep-dive/clipboard \"Clipboard\" deep dive}.\n * @param {module:clipboard/datatransfer~DataTransfer} data.dataTransfer Data transfer instance.\n */\n\n/**\n * Fired on {@link module:engine/view/document~Document#event:copy} and {@link module:engine/view/document~Document#event:cut}\n * with a copy of selected content. The content can be processed before it ends up in the clipboard.\n *\n * It is a part of the {@glink framework/guides/deep-dive/clipboard#output-pipeline \"clipboard output pipeline\"}.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @see module:clipboard/clipboard~Clipboard\n * @event module:engine/view/document~Document#event:clipboardOutput\n * @param {module:clipboard/clipboard~ClipboardOutputEventData} data Event data.\n */\n\n/**\n * The value of the {@link module:engine/view/document~Document#event:clipboardOutput} event.\n *\n * @class module:clipboard/clipboard~ClipboardOutputEventData\n */\n\n/**\n * Data transfer instance.\n *\n * @readonly\n * @member {module:clipboard/datatransfer~DataTransfer} module:clipboard/clipboard~ClipboardOutputEventData#dataTransfer\n */\n\n/**\n * Content to be put into the clipboard. It can be modified by the event listeners.\n * Read more about the clipboard pipelines in {@glink framework/guides/deep-dive/clipboard \"Clipboard\" deep dive}.\n *\n * @member {module:engine/view/documentfragment~DocumentFragment} module:clipboard/clipboard~ClipboardOutputEventData#content\n */\n\n/**\n * Whether the event was triggered by copy or cut operation.\n *\n * @member {'copy'|'cut'} module:clipboard/clipboard~ClipboardOutputEventData#method\n */\n\n\nexport { Clipboard as default };","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module clipboard/utils/normalizeclipboarddata\n */\n\n/**\n * Removes some popular browser quirks out of the clipboard data (HTML).\n *\n * @param {String} data The HTML data to normalize.\n * @returns {String} Normalized HTML.\n */\nexport default function normalizeClipboardData(data) {\n  return data.replace(/<span(?: class=\"Apple-converted-space\"|)>(\\s+)<\\/span>/g, function (fullMatch, spaces) {\n    // Handle the most popular and problematic case when even a single space becomes an nbsp;.\n    // Decode those to normal spaces. Read more in https://github.com/ckeditor/ckeditor5-clipboard/issues/2.\n    if (spaces.length == 1) {\n      return ' ';\n    }\n\n    return spaces;\n  });\n}","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module clipboard/utils/plaintexttohtml\n */\n\n/**\n * Converts plain text to its HTML-ized version.\n *\n * @param {String} text The plain text to convert.\n * @returns {String} HTML generated from the plain text.\n */\nexport default function plainTextToHtml(text) {\n  text = text // Encode <>.\n  .replace(/</g, '&lt;').replace(/>/g, '&gt;') // Creates paragraphs for double line breaks and change single line breaks to <br>s.\n  .replace(/\\n\\n/g, '</p><p>').replace(/\\n/g, '<br>') // Preserve trailing spaces (only the first and last one – the rest is handled below).\n  .replace(/^\\s/, '&nbsp;').replace(/\\s$/, '&nbsp;') // Preserve other subsequent spaces now.\n  .replace(/\\s\\s/g, ' &nbsp;');\n\n  if (text.indexOf('</p><p>') > -1) {\n    // If we created paragraphs above, add the trailing ones.\n    text = \"<p>\".concat(text, \"</p>\");\n  } // TODO:\n  // * What about '\\nfoo' vs ' foo'?\n\n\n  return text;\n}","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nexport default overArg;\n","import baseGetTag from './_baseGetTag.js';\nimport isObject from './isObject.js';\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nexport default isFunction;\n","import defineProperty from './_defineProperty.js';\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nexport default baseAssignValue;\n","import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignValue;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nexport default stubArray;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nexport default arrayPush;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nexport default isLength;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nexport default isIndex;\n","import arrayPush from './_arrayPush.js';\nimport isArray from './isArray.js';\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nexport default baseGetAllKeys;\n","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/objecttomap\n */\n\n/**\n * Transforms object to map.\n *\n *\t\tconst map = objectToMap( { 'foo': 1, 'bar': 2 } );\n *\t\tmap.get( 'foo' ); // 1\n *\n * @param {Object} obj Object to transform.\n * @returns {Map} Map created from object.\n */\nexport default function objectToMap(obj) {\n  var map = new Map();\n\n  for (var key in obj) {\n    map.set(key, obj[key]);\n  }\n\n  return map;\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/documentselection\n */\nimport Selection from './selection';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\n/**\n * Class representing the document selection in the view.\n *\n * Its instance is available in {@link module:engine/view/document~Document#selection `Document#selection`}.\n *\n * It is similar to {@link module:engine/view/selection~Selection} but\n * it has a read-only API and can be modified only by the writer available in\n * the {@link module:engine/view/view~View#change `View#change()`} block\n * (so via {@link module:engine/view/downcastwriter~DowncastWriter#setSelection `DowncastWriter#setSelection()`}).\n */\n\nvar DocumentSelection =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates new DocumentSelection instance.\n   *\n   * \t\t// Creates empty selection without ranges.\n   *\t\tconst selection = new DocumentSelection();\n   *\n   *\t\t// Creates selection at the given range.\n   *\t\tconst range = writer.createRange( start, end );\n   *\t\tconst selection = new DocumentSelection( range );\n   *\n   *\t\t// Creates selection at the given ranges\n   * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( start2, end2 ) ];\n   *\t\tconst selection = new DocumentSelection( ranges );\n   *\n   *\t\t// Creates selection from the other selection.\n   *\t\tconst otherSelection = writer.createSelection();\n   *\t\tconst selection = new DocumentSelection( otherSelection );\n   *\n   * \t\t// Creates selection at the given position.\n   *\t\tconst position = writer.createPositionAt( root, offset );\n   *\t\tconst selection = new DocumentSelection( position );\n   *\n   *\t\t// Creates collapsed selection at the position of given item and offset.\n   *\t\tconst paragraph = writer.createContainerElement( 'paragraph' );\n   *\t\tconst selection = new DocumentSelection( paragraph, offset );\n   *\n   *\t\t// Creates a range inside an {@link module:engine/view/element~Element element} which starts before the\n   *\t\t// first child of that element and ends after the last child of that element.\n   *\t\tconst selection = new DocumentSelection( paragraph, 'in' );\n   *\n   *\t\t// Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends\n   *\t\t// just after the item.\n   *\t\tconst selection = new DocumentSelection( paragraph, 'on' );\n   *\n   * `Selection`'s constructor allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n   *\n   *\t\t// Creates backward selection.\n   *\t\tconst selection = new DocumentSelection( range, { backward: true } );\n   *\n   * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n   * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n   * represented in other way, for example by applying proper CSS class.\n   *\n   * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\n   * (and be  properly handled by screen readers).\n   *\n   *\t\t// Creates fake selection with label.\n   *\t\tconst selection = new DocumentSelection( range, { fake: true, label: 'foo' } );\n   *\n   * @param {module:engine/view/selection~Selection|module:engine/view/position~Position|\n   * Iterable.<module:engine/view/range~Range>|module:engine/view/range~Range|\n   * module:engine/view/item~Item|null} [selectable=null]\n   * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Offset or place when selectable is an `Item`.\n   * @param {Object} [options]\n   * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n   * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n   * @param {String} [options.label] Label for the fake selection.\n   */\n  function DocumentSelection() {\n    var selectable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var placeOrOffset = arguments.length > 1 ? arguments[1] : undefined;\n    var options = arguments.length > 2 ? arguments[2] : undefined;\n\n    _classCallCheck(this, DocumentSelection);\n\n    /**\n     * Selection is used internally (`DocumentSelection` is a proxy to that selection).\n     *\n     * @private\n     * @member {module:engine/view/selection~Selection}\n     */\n    this._selection = new Selection(); // Delegate change event to be fired on DocumentSelection instance.\n\n    this._selection.delegate('change').to(this); // Set selection data.\n\n\n    this._selection.setTo(selectable, placeOrOffset, options);\n  }\n  /**\n   * Returns true if selection instance is marked as `fake`.\n   *\n   * @see #_setTo\n   * @returns {Boolean}\n   */\n\n\n  _createClass(DocumentSelection, [{\n    key: \"getRanges\",\n\n    /**\n     * Returns an iterable that contains copies of all ranges added to the selection.\n     *\n     * @returns {Iterable.<module:engine/view/range~Range>}\n     */\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function getRanges() {\n      return regeneratorRuntime.wrap(function getRanges$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.delegateYield(this._selection.getRanges(), \"t0\", 1);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, getRanges, this);\n    })\n    /**\n     * Returns copy of the first range in the selection. First range is the one which\n     * {@link module:engine/view/range~Range#start start} position {@link module:engine/view/position~Position#isBefore is before} start\n     * position of all other ranges (not to confuse with the first range added to the selection).\n     * Returns `null` if no ranges are added to selection.\n     *\n     * @returns {module:engine/view/range~Range|null}\n     */\n\n  }, {\n    key: \"getFirstRange\",\n    value: function getFirstRange() {\n      return this._selection.getFirstRange();\n    }\n    /**\n     * Returns copy of the last range in the selection. Last range is the one which {@link module:engine/view/range~Range#end end}\n     * position {@link module:engine/view/position~Position#isAfter is after} end position of all other ranges (not to confuse\n     * with the last range added to the selection). Returns `null` if no ranges are added to selection.\n     *\n     * @returns {module:engine/view/range~Range|null}\n     */\n\n  }, {\n    key: \"getLastRange\",\n    value: function getLastRange() {\n      return this._selection.getLastRange();\n    }\n    /**\n     * Returns copy of the first position in the selection. First position is the position that\n     * {@link module:engine/view/position~Position#isBefore is before} any other position in the selection ranges.\n     * Returns `null` if no ranges are added to selection.\n     *\n     * @returns {module:engine/view/position~Position|null}\n     */\n\n  }, {\n    key: \"getFirstPosition\",\n    value: function getFirstPosition() {\n      return this._selection.getFirstPosition();\n    }\n    /**\n     * Returns copy of the last position in the selection. Last position is the position that\n     * {@link module:engine/view/position~Position#isAfter is after} any other position in the selection ranges.\n     * Returns `null` if no ranges are added to selection.\n     *\n     * @returns {module:engine/view/position~Position|null}\n     */\n\n  }, {\n    key: \"getLastPosition\",\n    value: function getLastPosition() {\n      return this._selection.getLastPosition();\n    }\n    /**\n     * Returns the selected element. {@link module:engine/view/element~Element Element} is considered as selected if there is only\n     * one range in the selection, and that range contains exactly one element.\n     * Returns `null` if there is no selected element.\n     *\n     * @returns {module:engine/view/element~Element|null}\n     */\n\n  }, {\n    key: \"getSelectedElement\",\n    value: function getSelectedElement() {\n      return this._selection.getSelectedElement();\n    }\n    /**\n     * Checks whether, this selection is equal to given selection. Selections are equal if they have same directions,\n     * same number of ranges and all ranges from one selection equal to a range from other selection.\n     *\n     * @param {module:engine/view/selection~Selection|module:engine/view/documentselection~DocumentSelection} otherSelection\n     * Selection to compare with.\n     * @returns {Boolean} `true` if selections are equal, `false` otherwise.\n     */\n\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(otherSelection) {\n      return this._selection.isEqual(otherSelection);\n    }\n    /**\n     * Checks whether this selection is similar to given selection. Selections are similar if they have same directions, same\n     * number of ranges, and all {@link module:engine/view/range~Range#getTrimmed trimmed} ranges from one selection are\n     * equal to any trimmed range from other selection.\n     *\n     * @param {module:engine/view/selection~Selection|module:engine/view/documentselection~DocumentSelection} otherSelection\n     * Selection to compare with.\n     * @returns {Boolean} `true` if selections are similar, `false` otherwise.\n     */\n\n  }, {\n    key: \"isSimilar\",\n    value: function isSimilar(otherSelection) {\n      return this._selection.isSimilar(otherSelection);\n    }\n    /**\n     * Sets this selection's ranges and direction to the specified location based on the given\n     * {@link module:engine/view/documentselection~DocumentSelection document selection},\n     * {@link module:engine/view/selection~Selection selection}, {@link module:engine/view/position~Position position},\n     * {@link module:engine/view/item~Item item}, {@link module:engine/view/range~Range range},\n     * an iterable of {@link module:engine/view/range~Range ranges} or null.\n     *\n     *\t\t// Sets selection to the given range.\n     *\t\tconst range = writer.createRange( start, end );\n     *\t\tdocumentSelection._setTo( range );\n     *\n     *\t\t// Sets selection to given ranges.\n     * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( start2, end2 ) ];\n     *\t\tdocumentSelection._setTo( range );\n     *\n     *\t\t// Sets selection to the other selection.\n     *\t\tconst otherSelection = writer.createSelection();\n     *\t\tdocumentSelection._setTo( otherSelection );\n     *\n     * \t\t// Sets collapsed selection at the given position.\n     *\t\tconst position = writer.createPositionAt( root, offset );\n     *\t\tdocumentSelection._setTo( position );\n     *\n     * \t\t// Sets collapsed selection at the position of given item and offset.\n     *\t\tdocumentSelection._setTo( paragraph, offset );\n     *\n     * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n     * that element and ends after the last child of that element.\n     *\n     *\t\tdocumentSelection._setTo( paragraph, 'in' );\n     *\n     * Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends just after the item.\n     *\n     *\t\tdocumentSelection._setTo( paragraph, 'on' );\n     *\n     * \t\t// Clears selection. Removes all ranges.\n     *\t\tdocumentSelection._setTo( null );\n     *\n     * `Selection#_setTo()` method allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n     *\n     *\t\t// Sets selection as backward.\n     *\t\tdocumentSelection._setTo( range, { backward: true } );\n     *\n     * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n     * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n     * represented in other way, for example by applying proper CSS class.\n     *\n     * Additionally fake's selection label can be provided. It will be used to des cribe fake selection in DOM\n     * (and be  properly handled by screen readers).\n     *\n     *\t\t// Creates fake selection with label.\n     *\t\tdocumentSelection._setTo( range, { fake: true, label: 'foo' } );\n     *\n     * @protected\n     * @fires change\n     * @param {module:engine/view/selection~Selection|module:engine/view/position~Position|\n     * Iterable.<module:engine/view/range~Range>|module:engine/view/range~Range|module:engine/view/item~Item|null} selectable\n     * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n     * @param {Object} [options]\n     * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n     * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n     * @param {String} [options.label] Label for the fake selection.\n     */\n\n  }, {\n    key: \"_setTo\",\n    value: function _setTo(selectable, placeOrOffset, options) {\n      this._selection.setTo(selectable, placeOrOffset, options);\n    }\n    /**\n     * Moves {@link #focus} to the specified location.\n     *\n     * The location can be specified in the same form as {@link module:engine/view/view~View#createPositionAt view.createPositionAt()}\n     * parameters.\n     *\n     * @protected\n     * @fires change\n     * @param {module:engine/view/item~Item|module:engine/view/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n     * first parameter is a {@link module:engine/view/item~Item view item}.\n     */\n\n  }, {\n    key: \"_setFocus\",\n    value: function _setFocus(itemOrPosition, offset) {\n      this._selection.setFocus(itemOrPosition, offset);\n    }\n    /**\n     * Fired whenever selection ranges are changed through {@link ~DocumentSelection Selection API}.\n     *\n     * @event change\n     */\n\n  }, {\n    key: \"isFake\",\n    get: function get() {\n      return this._selection.isFake;\n    }\n    /**\n     * Returns fake selection label.\n     *\n     * @see #_setTo\n     * @returns {String}\n     */\n\n  }, {\n    key: \"fakeSelectionLabel\",\n    get: function get() {\n      return this._selection.fakeSelectionLabel;\n    }\n    /**\n     * Selection anchor. Anchor may be described as a position where the selection starts. Together with\n     * {@link #focus focus} they define the direction of selection, which is important\n     * when expanding/shrinking selection. Anchor is always the start or end of the most recent added range.\n     * It may be a bit unintuitive when there are multiple ranges in selection.\n     *\n     * @see #focus\n     * @type {module:engine/view/position~Position}\n     */\n\n  }, {\n    key: \"anchor\",\n    get: function get() {\n      return this._selection.anchor;\n    }\n    /**\n     * Selection focus. Focus is a position where the selection ends.\n     *\n     * @see #anchor\n     * @type {module:engine/view/position~Position}\n     */\n\n  }, {\n    key: \"focus\",\n    get: function get() {\n      return this._selection.focus;\n    }\n    /**\n     * Returns whether the selection is collapsed. Selection is collapsed when there is exactly one range which is\n     * collapsed.\n     *\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isCollapsed\",\n    get: function get() {\n      return this._selection.isCollapsed;\n    }\n    /**\n     * Returns number of ranges in selection.\n     *\n     * @type {Number}\n     */\n\n  }, {\n    key: \"rangeCount\",\n    get: function get() {\n      return this._selection.rangeCount;\n    }\n    /**\n     * Specifies whether the {@link #focus} precedes {@link #anchor}.\n     *\n     * @type {Boolean}\n     */\n\n  }, {\n    key: \"isBackward\",\n    get: function get() {\n      return this._selection.isBackward;\n    }\n    /**\n     * {@link module:engine/view/editableelement~EditableElement EditableElement} instance that contains this selection, or `null`\n     * if the selection is not inside an editable element.\n     *\n     * @type {module:engine/view/editableelement~EditableElement|null}\n     */\n\n  }, {\n    key: \"editableElement\",\n    get: function get() {\n      return this._selection.editableElement;\n    }\n    /**\n     * Used for the compatibility with the {@link module:engine/view/selection~Selection#isEqual} method.\n     *\n     * @protected\n     */\n\n  }, {\n    key: \"_ranges\",\n    get: function get() {\n      return this._selection._ranges;\n    }\n  }]);\n\n  return DocumentSelection;\n}();\n\nexport { DocumentSelection as default };\nmix(DocumentSelection, EmitterMixin);","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/getborderwidths\n */\n\n/**\n * Returns an object containing CSS border widths of a specified HTML element.\n *\n * @param {HTMLElement} element An element which has CSS borders.\n * @returns {Object} An object containing `top`, `left`, `right` and `bottom` properties\n * with numerical values of the `border-[top,left,right,bottom]-width` CSS styles.\n */\nexport default function getBorderWidths(element) {\n  // Call getComputedStyle on the window the element document belongs to.\n  var style = element.ownerDocument.defaultView.getComputedStyle(element);\n  return {\n    top: parseInt(style.borderTopWidth, 10),\n    right: parseInt(style.borderRightWidth, 10),\n    bottom: parseInt(style.borderBottomWidth, 10),\n    left: parseInt(style.borderLeftWidth, 10)\n  };\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module basic-styles/attributecommand\n */\nimport Command from '@ckeditor/ckeditor5-core/src/command';\n/**\n * An extension of the base {@link module:core/command~Command} class, which provides utilities for a command\n * that toggles a single attribute on a text or an element.\n *\n * `AttributeCommand` uses {@link module:engine/model/document~Document#selection}\n * to decide which nodes (if any) should be changed, and applies or removes the attribute from them.\n *\n * The command checks the {@link module:engine/model/model~Model#schema} to decide if it can be enabled\n * for the current selection and to which nodes the attribute can be applied.\n *\n * @extends module:core/command~Command\n */\n\nvar AttributeCommand =\n/*#__PURE__*/\nfunction (_Command) {\n  _inherits(AttributeCommand, _Command);\n\n  /**\n   * @param {module:core/editor/editor~Editor} editor\n   * @param {String} attributeKey Attribute that will be set by the command.\n   */\n  function AttributeCommand(editor, attributeKey) {\n    var _this;\n\n    _classCallCheck(this, AttributeCommand);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AttributeCommand).call(this, editor));\n    /**\n     * The attribute that will be set by the command.\n     *\n     * @readonly\n     * @member {String}\n     */\n\n    _this.attributeKey = attributeKey;\n    /**\n     * Flag indicating whether the command is active. The command is active when the\n     * {@link module:engine/model/selection~Selection#hasAttribute selection has the attribute} which means that:\n     *\n     * * If the selection is not empty &ndash; That the attribute is set on the first node in the selection that allows this attribute.\n     * * If the selection is empty &ndash; That the selection has the attribute itself (which means that newly typed\n     * text will have this attribute, too).\n     *\n     * @observable\n     * @readonly\n     * @member {Boolean} #value\n     */\n\n    return _this;\n  }\n  /**\n   * Updates the command's {@link #value} and {@link #isEnabled} based on the current selection.\n   */\n\n\n  _createClass(AttributeCommand, [{\n    key: \"refresh\",\n    value: function refresh() {\n      var model = this.editor.model;\n      var doc = model.document;\n      this.value = this._getValueFromFirstAllowedNode();\n      this.isEnabled = model.schema.checkAttributeInSelection(doc.selection, this.attributeKey);\n    }\n    /**\n     * Executes the command &mdash; applies the attribute to the selection or removes it from the selection.\n     *\n     * If the command is active (`value == true`), it will remove attributes. Otherwise, it will set attributes.\n     *\n     * The execution result differs, depending on the {@link module:engine/model/document~Document#selection}:\n     *\n     * * If the selection is on a range, the command applies the attribute to all nodes in that range\n     * (if they are allowed to have this attribute by the {@link module:engine/model/schema~Schema schema}).\n     * * If the selection is collapsed in a non-empty node, the command applies the attribute to the\n     * {@link module:engine/model/document~Document#selection} itself (note that typed characters copy attributes from the selection).\n     * * If the selection is collapsed in an empty node, the command applies the attribute to the parent node of the selection (note\n     * that the selection inherits all attributes from a node if it is in an empty node).\n     *\n     * @fires execute\n     * @param {Object} [options] Command options.\n     * @param {Boolean} [options.forceValue] If set, it will force the command behavior. If `true`, the command will apply the attribute,\n     * otherwise the command will remove the attribute.\n     * If not set, the command will look for its current value to decide what it should do.\n     */\n\n  }, {\n    key: \"execute\",\n    value: function execute() {\n      var _this2 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var model = this.editor.model;\n      var doc = model.document;\n      var selection = doc.selection;\n      var value = options.forceValue === undefined ? !this.value : options.forceValue;\n      model.change(function (writer) {\n        if (selection.isCollapsed) {\n          if (value) {\n            writer.setSelectionAttribute(_this2.attributeKey, true);\n          } else {\n            writer.removeSelectionAttribute(_this2.attributeKey);\n          }\n        } else {\n          var ranges = model.schema.getValidRanges(selection.getRanges(), _this2.attributeKey);\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = ranges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var range = _step.value;\n\n              if (value) {\n                writer.setAttribute(_this2.attributeKey, value, range);\n              } else {\n                writer.removeAttribute(_this2.attributeKey, range);\n              }\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n        }\n      });\n    }\n    /**\n     * Checks the attribute value of the first node in the selection that allows the attribute.\n     * For the collapsed selection returns the selection attribute.\n     *\n     * @private\n     * @returns {Boolean} The attribute value.\n     */\n\n  }, {\n    key: \"_getValueFromFirstAllowedNode\",\n    value: function _getValueFromFirstAllowedNode() {\n      var model = this.editor.model;\n      var schema = model.schema;\n      var selection = model.document.selection;\n\n      if (selection.isCollapsed) {\n        return selection.hasAttribute(this.attributeKey);\n      }\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = selection.getRanges()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var range = _step2.value;\n          var _iteratorNormalCompletion3 = true;\n          var _didIteratorError3 = false;\n          var _iteratorError3 = undefined;\n\n          try {\n            for (var _iterator3 = range.getItems()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n              var item = _step3.value;\n\n              if (schema.checkAttribute(item, this.attributeKey)) {\n                return item.hasAttribute(this.attributeKey);\n              }\n            }\n          } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n                _iterator3.return();\n              }\n            } finally {\n              if (_didIteratorError3) {\n                throw _iteratorError3;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return false;\n    }\n  }]);\n\n  return AttributeCommand;\n}(Command);\n\nexport { AttributeCommand as default };","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/bindings/clickoutsidehandler\n */\n\n/* global document */\n\n/**\n * Handles clicking **outside** of a specified set of elements, then fires an action.\n *\n * **Note**: Actually, the action is executed upon `mousedown`, not `click`. It prevents\n * certain issues when the user keeps holding the mouse button and the UI cannot react\n * properly.\n *\n * @param {Object} options Configuration options.\n * @param {module:utils/dom/emittermixin~Emitter} options.emitter The emitter to which this behavior\n * should be added.\n * @param {Function} options.activator Function returning a `Boolean`, to determine whether the handler is active.\n * @param {Array.<HTMLElement>} options.contextElements HTML elements that determine the scope of the\n * handler. Clicking any of them or their descendants will **not** fire the callback.\n * @param {Function} options.callback An action executed by the handler.\n */\nexport default function clickOutsideHandler(_ref) {\n  var emitter = _ref.emitter,\n      activator = _ref.activator,\n      callback = _ref.callback,\n      contextElements = _ref.contextElements;\n  emitter.listenTo(document, 'mousedown', function (evt, _ref2) {\n    var target = _ref2.target;\n\n    if (!activator()) {\n      return;\n    }\n\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = contextElements[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var contextElement = _step.value;\n\n        if (contextElement.contains(target)) {\n          return;\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    callback();\n  });\n}","import getNative from './_getNative.js';\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nexport default nativeCreate;\n","import nativeCreate from './_nativeCreate.js';\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nexport default hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default hashDelete;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nexport default hashGet;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nexport default hashHas;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nexport default hashSet;\n","import hashClear from './_hashClear.js';\nimport hashDelete from './_hashDelete.js';\nimport hashGet from './_hashGet.js';\nimport hashHas from './_hashHas.js';\nimport hashSet from './_hashSet.js';\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nexport default Hash;\n","import Hash from './_Hash.js';\nimport ListCache from './_ListCache.js';\nimport Map from './_Map.js';\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nexport default mapCacheClear;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nexport default isKeyable;\n","import isKeyable from './_isKeyable.js';\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nexport default getMapData;\n","import getMapData from './_getMapData.js';\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default mapCacheDelete;\n","import getMapData from './_getMapData.js';\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nexport default mapCacheGet;\n","import getMapData from './_getMapData.js';\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nexport default mapCacheHas;\n","import getMapData from './_getMapData.js';\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nexport default mapCacheSet;\n","import mapCacheClear from './_mapCacheClear.js';\nimport mapCacheDelete from './_mapCacheDelete.js';\nimport mapCacheGet from './_mapCacheGet.js';\nimport mapCacheHas from './_mapCacheHas.js';\nimport mapCacheSet from './_mapCacheSet.js';\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nexport default MapCache;\n","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nexport default setCacheAdd;\n","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nexport default setCacheHas;\n","import MapCache from './_MapCache.js';\nimport setCacheAdd from './_setCacheAdd.js';\nimport setCacheHas from './_setCacheHas.js';\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nexport default SetCache;\n","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport default arraySome;\n","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nexport default cacheHas;\n","import SetCache from './_SetCache.js';\nimport arraySome from './_arraySome.js';\nimport cacheHas from './_cacheHas.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nexport default equalArrays;\n","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nexport default mapToArray;\n","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nexport default setToArray;\n","import Symbol from './_Symbol.js';\nimport Uint8Array from './_Uint8Array.js';\nimport eq from './eq.js';\nimport equalArrays from './_equalArrays.js';\nimport mapToArray from './_mapToArray.js';\nimport setToArray from './_setToArray.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nexport default equalByTag;\n","import getAllKeys from './_getAllKeys.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nexport default equalObjects;\n","import Stack from './_Stack.js';\nimport equalArrays from './_equalArrays.js';\nimport equalByTag from './_equalByTag.js';\nimport equalObjects from './_equalObjects.js';\nimport getTag from './_getTag.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nexport default baseIsEqualDeep;\n","import baseIsEqualDeep from './_baseIsEqualDeep.js';\nimport isObjectLike from './isObjectLike.js';\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nexport default baseIsEqual;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nexport default baseTimes;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nexport default baseIsArguments;\n","import baseIsArguments from './_baseIsArguments.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nexport default isArguments;\n","import baseTimes from './_baseTimes.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isIndex from './_isIndex.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default arrayLikeKeys;\n","import baseGetTag from './_baseGetTag.js';\nimport isLength from './isLength.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nexport default baseIsTypedArray;\n","import baseIsTypedArray from './_baseIsTypedArray.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nexport default isTypedArray;\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/label/labelview\n */\nimport View from '../view';\nimport '../../theme/components/label/label.css';\n/**\n * The label view class.\n *\n * @extends module:ui/view~View\n */\n\nvar LabelView =\n/*#__PURE__*/\nfunction (_View) {\n  _inherits(LabelView, _View);\n\n  /**\n   * @inheritDoc\n   */\n  function LabelView(locale) {\n    var _this;\n\n    _classCallCheck(this, LabelView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LabelView).call(this, locale));\n    /**\n     * The text of the label.\n     *\n     * @observable\n     * @member {String} #text\n     */\n\n    _this.set('text');\n    /**\n     * The `for` attribute of the label (i.e. to pair with an `<input>` element).\n     *\n     * @observable\n     * @member {String} #for\n     */\n\n\n    _this.set('for');\n\n    var bind = _this.bindTemplate;\n\n    _this.setTemplate({\n      tag: 'label',\n      attributes: {\n        class: ['ck', 'ck-label'],\n        for: bind.to('for')\n      },\n      children: [{\n        text: bind.to('text')\n      }]\n    });\n\n    return _this;\n  }\n\n  return LabelView;\n}(View);\n\nexport { LabelView as default };","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/tounit\n */\n\n/**\n * Returns a helper function, which adds a desired trailing\n * `unit` to the passed value.\n *\n * @param {String} unit An unit like \"px\" or \"em\".\n * @returns {module:utils/dom/tounit~helper}\n */\nexport default function toUnit(unit) {\n  /**\n   * A function, which adds a pre–defined trailing `unit`\n   * to the passed `value`.\n   *\n   * @function helper\n  \t * @param {*} value A value to be given the unit.\n  \t * @returns {String} A value with the trailing unit.\n   */\n  return function (value) {\n    return value + unit;\n  };\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/tooltip/tooltipview\n */\nimport View from '../view';\nimport '../../theme/components/tooltip/tooltip.css';\n/**\n * The tooltip view class.\n *\n * @extends module:ui/view~View\n */\n\nvar TooltipView =\n/*#__PURE__*/\nfunction (_View) {\n  _inherits(TooltipView, _View);\n\n  /**\n   * @inheritDoc\n   */\n  function TooltipView(locale) {\n    var _this;\n\n    _classCallCheck(this, TooltipView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TooltipView).call(this, locale));\n    /**\n     * The text of the tooltip visible to the user.\n     *\n     * @observable\n     * @member {String} #text\n     */\n\n    _this.set('text', '');\n    /**\n     * The position of the tooltip (south or north).\n     *\n     *\t\t+-----------+\n     *\t\t|   north   |\n     *\t\t+-----------+\n     *\t\t      V\n     *\t\t  [element]\n     *\n     *\t\t  [element]\n     *\t\t      ^\n     *\t\t+-----------+\n     *\t\t|   south   |\n     *\t\t+-----------+\n     *\n     * @observable\n     * @default 's'\n     * @member {'s'|'n'} #position\n     */\n\n\n    _this.set('position', 's');\n\n    var bind = _this.bindTemplate;\n\n    _this.setTemplate({\n      tag: 'span',\n      attributes: {\n        class: ['ck', 'ck-tooltip', bind.to('position', function (position) {\n          return 'ck-tooltip_' + position;\n        }), bind.if('text', 'ck-hidden', function (value) {\n          return !value.trim();\n        })]\n      },\n      children: [{\n        tag: 'span',\n        attributes: {\n          class: ['ck', 'ck-tooltip__text']\n        },\n        children: [{\n          text: bind.to('text')\n        }]\n      }]\n    });\n\n    return _this;\n  }\n\n  return TooltipView;\n}(View);\n\nexport { TooltipView as default };","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/model\n */\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport { extend } from 'lodash-es';\n/**\n * The base MVC model class.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\n\nvar Model =\n/**\n * Creates a new Model instance.\n *\n * @param {Object} [attributes] The model state attributes to be defined during the instance creation.\n * @param {Object} [properties] The (out of state) properties to be appended to the instance during creation.\n */\nfunction Model(attributes, properties) {\n  _classCallCheck(this, Model);\n\n  // Extend this instance with the additional (out of state) properties.\n  if (properties) {\n    extend(this, properties);\n  } // Initialize the attributes.\n\n\n  if (attributes) {\n    this.set(attributes);\n  }\n};\n\nexport { Model as default };\nmix(Model, ObservableMixin);","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/operation/nooperation\n */\nimport Operation from './operation';\n/**\n * Operation which is doing nothing (\"empty operation\", \"do-nothing operation\", \"noop\"). This is an operation,\n * which when executed does not change the tree model. It still has some parameters defined for transformation purposes.\n *\n * In most cases this operation is a result of transforming operations. When transformation returns\n * {@link module:engine/model/operation/nooperation~NoOperation} it means that changes done by the transformed operation\n * have already been applied.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\n\nvar NoOperation =\n/*#__PURE__*/\nfunction (_Operation) {\n  _inherits(NoOperation, _Operation);\n\n  function NoOperation() {\n    _classCallCheck(this, NoOperation);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(NoOperation).apply(this, arguments));\n  }\n\n  _createClass(NoOperation, [{\n    key: \"clone\",\n\n    /**\n     * Creates and returns an operation that has the same parameters as this operation.\n     *\n     * @returns {module:engine/model/operation/nooperation~NoOperation} Clone of this operation.\n     */\n    value: function clone() {\n      return new NoOperation(this.baseVersion);\n    }\n    /**\n     * See {@link module:engine/model/operation/operation~Operation#getReversed `Operation#getReversed()`}.\n     *\n     * @returns {module:engine/model/operation/nooperation~NoOperation}\n     */\n\n  }, {\n    key: \"getReversed\",\n    value: function getReversed() {\n      return new NoOperation(this.baseVersion + 1);\n    }\n  }, {\n    key: \"_execute\",\n    value: function _execute() {}\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"type\",\n    get: function get() {\n      return 'noop';\n    }\n  }], [{\n    key: \"className\",\n    get: function get() {\n      return 'NoOperation';\n    }\n  }]);\n\n  return NoOperation;\n}(Operation);\n\nexport { NoOperation as default };","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nimport InsertOperation from './insertoperation';\nimport AttributeOperation from './attributeoperation';\nimport RenameOperation from './renameoperation';\nimport MarkerOperation from './markeroperation';\nimport MoveOperation from './moveoperation';\nimport RootAttributeOperation from './rootattributeoperation';\nimport MergeOperation from './mergeoperation';\nimport SplitOperation from './splitoperation';\nimport NoOperation from './nooperation';\nimport Range from '../range';\nimport Position from '../position';\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\nimport log from '@ckeditor/ckeditor5-utils/src/log';\nvar transformations = new Map();\n/**\n * @module engine/model/operation/transform\n */\n\n/**\n * Sets a transformation function to be be used to transform instances of class `OperationA` by instances of class `OperationB`.\n *\n * The `transformationFunction` is passed three parameters:\n *\n * * `a` - operation to be transformed, an instance of `OperationA`,\n * * `b` - operation to be transformed by, an instance of `OperationB`,\n * * {@link module:engine/model/operation/transform~TransformationContext `context`} - object with additional information about\n * transformation context.\n *\n * The `transformationFunction` should return transformation result, which is an array with one or multiple\n * {@link module:engine/model/operation/operation~Operation operation} instances.\n *\n * @protected\n * @param {Function} OperationA\n * @param {Function} OperationB\n * @param {Function} transformationFunction Function to use for transforming.\n */\n\nfunction setTransformation(OperationA, OperationB, transformationFunction) {\n  var aGroup = transformations.get(OperationA);\n\n  if (!aGroup) {\n    aGroup = new Map();\n    transformations.set(OperationA, aGroup);\n  }\n\n  aGroup.set(OperationB, transformationFunction);\n}\n/**\n * Returns a previously set transformation function for transforming an instance of `OperationA` by an instance of `OperationB`.\n *\n * If no transformation was set for given pair of operations, {@link module:engine/model/operation/transform~noUpdateTransformation}\n * is returned. This means that if no transformation was set, the `OperationA` instance will not change when transformed\n * by the `OperationB` instance.\n *\n * @private\n * @param {Function} OperationA\n * @param {Function} OperationB\n * @returns {Function} Function set to transform an instance of `OperationA` by an instance of `OperationB`.\n */\n\n\nfunction getTransformation(OperationA, OperationB) {\n  var aGroup = transformations.get(OperationA);\n\n  if (aGroup && aGroup.has(OperationB)) {\n    return aGroup.get(OperationB);\n  }\n\n  return noUpdateTransformation;\n}\n/**\n * A transformation function that only clones operation to transform, without changing it.\n *\n * @private\n * @param {module:engine/model/operation/operation~Operation} a Operation to transform.\n * @returns {Array.<module:engine/model/operation/operation~Operation>}\n */\n\n\nfunction noUpdateTransformation(a) {\n  return [a];\n}\n/**\n * Transforms operation `a` by operation `b`.\n *\n * @param {module:engine/model/operation/operation~Operation} a Operation to be transformed.\n * @param {module:engine/model/operation/operation~Operation} b Operation to transform by.\n * @param {module:engine/model/operation/transform~TransformationContext} context Transformation context for this transformation.\n * @returns {Array.<module:engine/model/operation/operation~Operation>} Transformation result.\n */\n\n\nexport function transform(a, b) {\n  var context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var transformationFunction = getTransformation(a.constructor, b.constructor);\n\n  try {\n    a = a.clone();\n    return transformationFunction(a, b, context);\n  } catch (e) {\n    log.error('Error during operation transformation!', e.message);\n    log.error('Transformed operation', a);\n    log.error('Operation transformed by', b);\n    log.error('context.aIsStrong', context.aIsStrong);\n    log.error('context.aWasUndone', context.aWasUndone);\n    log.error('context.bWasUndone', context.bWasUndone);\n    log.error('context.abRelation', context.abRelation);\n    log.error('context.baRelation', context.baRelation);\n    throw e;\n  }\n}\n/**\n * Performs a transformation of two sets of operations - `operationsA` and `operationsB`. The transformation is two-way -\n * both transformed `operationsA` and transformed `operationsB` are returned.\n *\n * Note, that the first operation in each set should base on the same document state (\n * {@link module:engine/model/document~Document#version document version}).\n *\n * It is assumed that `operationsA` are \"more important\" during conflict resolution between two operations.\n *\n * New copies of both passed arrays and operations inside them are returned. Passed arguments are not altered.\n *\n * Base versions of the transformed operations sets are updated accordingly. For example, assume that base versions are `4`\n * and there are `3` operations in `operationsA` and `5` operations in `operationsB`. Then:\n *\n * * transformed `operationsA` will start from base version `9` (`4` base version + `5` operations B),\n * * transformed `operationsB` will start from base version `7` (`4` base version + `3` operations A).\n *\n * If no operation was broken into two during transformation, then both sets will end up with an operation that bases on version `11`:\n *\n * * transformed `operationsA` start from `9` and there are `3` of them, so the last will have `baseVersion` equal to `11`,\n * * transformed `operationsB` start from `7` and there are `5` of them, so the last will have `baseVersion` equal to `11`.\n *\n * @param {Array.<module:engine/model/operation/operation~Operation>} operationsA\n * @param {Array.<module:engine/model/operation/operation~Operation>} operationsB\n * @param {Object} options Additional transformation options.\n * @param {module:engine/model/document~Document|null} options.document Document which the operations change.\n * @param {Boolean} [options.useRelations=false] Whether during transformation relations should be used (used during undo for\n * better conflict resolution).\n * @param {Boolean} [options.padWithNoOps=false] Whether additional {@link module:engine/model/operation/nooperation~NoOperation}s\n * should be added to the transformation results to force the same last base version for both transformed sets (in case\n * if some operations got broken into multiple operations during transformation).\n * @returns {Object} Transformation result.\n * @returns {Array.<module:engine/model/operation/operation~Operation>} return.operationsA Transformed `operationsA`.\n * @returns {Array.<module:engine/model/operation/operation~Operation>} return.operationsB Transformed `operationsB`.\n */\n\nexport function transformSets(operationsA, operationsB, options) {\n  // Create new arrays so the originally passed arguments are not changed.\n  // No need to clone operations, they are cloned as they are transformed.\n  operationsA = operationsA.slice();\n  operationsB = operationsB.slice(); // If one of sets is empty there is simply nothing to transform, so return sets as they are.\n\n  if (operationsA.length == 0 || operationsB.length == 0) {\n    return {\n      operationsA: operationsA,\n      operationsB: operationsB\n    };\n  } //\n  // Following is a description of transformation process:\n  //\n  // There are `operationsA` and `operationsB` to be transformed, both by both.\n  //\n  // So, suppose we have sets of two operations each: `operationsA` = `[ a1, a2 ]`, `operationsB` = `[ b1, b2 ]`.\n  //\n  // Remember, that we can only transform operations that base on the same context. We assert that `a1` and `b1` base on\n  // the same context and we transform them. Then, we get `a1'` and `b1'`. `a2` bases on a context with `a1` -- `a2`\n  // is an operation that followed `a1`. Similarly, `b2` bases on a context with `b1`.\n  //\n  // However, since `a1'` is a result of transformation by `b1`, `a1'` now also has a context with `b1`. This means that\n  // we can safely transform `a1'` by `b2`. As we finish transforming `a1`, we also transformed all `operationsB`.\n  // All `operationsB` also have context including `a1`. Now, we can properly transform `a2` by those operations.\n  //\n  // The transformation process can be visualized on a transformation diagram (\"diamond diagram\"):\n  //\n  //          [the initial state]\n  //         [common for a1 and b1]\n  //\n  //                   *\n  //                  / \\\n  //                 /   \\\n  //               b1     a1\n  //               /       \\\n  //              /         \\\n  //             *           *\n  //            / \\         / \\\n  //           /   \\       /   \\\n  //         b2    a1'   b1'    a2\n  //         /       \\   /       \\\n  //        /         \\ /         \\\n  //       *           *           *\n  //        \\         / \\         /\n  //         \\       /   \\       /\n  //        a1''   b2'   a2'   b1''\n  //           \\   /       \\   /\n  //            \\ /         \\ /\n  //             *           *\n  //              \\         /\n  //               \\       /\n  //              a2''   b2''\n  //                 \\   /\n  //                  \\ /\n  //                   *\n  //\n  //           [the final state]\n  //\n  // The final state can be reached from the initial state by applying `a1`, `a2`, `b1''` and `b2''`, as well as by\n  // applying `b1`, `b2`, `a1''`, `a2''`. Note how the operations get to a proper common state before each pair is\n  // transformed.\n  //\n  // Another thing to consider is that an operation during transformation can be broken into multiple operations.\n  // Suppose that `a1` * `b1` = `[ a11', a12' ]` (instead of `a1'` that we considered previously).\n  //\n  // In that case, we leave `a12'` for later and we continue transforming `a11'` until it is transformed by all `operationsB`\n  // (in our case it is just `b2`). At this point, `b1` is transformed by \"whole\" `a1`, while `b2` is only transformed\n  // by `a11'`. Similarly, `a12'` is only transformed by `b1`. This leads to a conclusion that we need to start transforming `a12'`\n  // from the moment just after it was broken. So, `a12'` is transformed by `b2`. Now, \"the whole\" `a1` is transformed\n  // by `operationsB`, while all `operationsB` are transformed by \"the whole\" `a1`. This means that we can continue with\n  // following `operationsA` (in our case it is just `a2`).\n  //\n  // Of course, also `operationsB` can be broken. However, since we focus on transforming operation `a` to the end,\n  // the only thing to do is to store both pieces of operation `b`, so that the next transformed operation `a` will\n  // be transformed by both of them.\n  //\n  //                       *\n  //                      / \\\n  //                     /   \\\n  //                    /     \\\n  //                  b1       a1\n  //                  /         \\\n  //                 /           \\\n  //                /             \\\n  //               *               *\n  //              / \\             / \\\n  //             /  a11'         /   \\\n  //            /     \\         /     \\\n  //          b2       *      b1'      a2\n  //          /       / \\     /         \\\n  //         /       /  a12' /           \\\n  //        /       /     \\ /             \\\n  //       *       b2'     *               *\n  //        \\     /       / \\             /\n  //       a11'' /     b21'' \\           /\n  //          \\ /       /     \\         /\n  //           *       *      a2'     b1''\n  //            \\     / \\       \\     /\n  //          a12'' b22''\\       \\   /\n  //              \\ /     \\       \\ /\n  //               *      a2''     *\n  //                \\       \\     /\n  //                 \\       \\  b21'''\n  //                  \\       \\ /\n  //                a2'''      *\n  //                    \\     /\n  //                     \\  b22'''\n  //                      \\ /\n  //                       *\n  //\n  // Note, how `a1` is broken and transformed into `a11'` and `a12'`, while `b2'` got broken and transformed into `b21''` and `b22''`.\n  //\n  // Having all that on mind, here is an outline for the transformation process algorithm:\n  //\n  // 1. We have `operationsA` and `operationsB` array, which we dynamically update as the transformation process goes.\n  //\n  // 2. We take next (or first) operation from `operationsA` and check from which operation `b` we need to start transforming it.\n  // All original `operationsA` are set to be transformed starting from the first operation `b`.\n  //\n  // 3. We take operations from `operationsB`, one by one, starting from the correct one, and transform operation `a`\n  // by operation `b` (and vice versa). We update `operationsA` and `operationsB` by replacing the original operations\n  // with the transformation results.\n  //\n  // 4. If operation is broken into multiple operations, we save all the new operations in the place of the\n  // original operation.\n  //\n  // 5. Additionally, if operation `a` was broken, for the \"new\" operation, we remember from which operation `b` it should\n  // be transformed by.\n  //\n  // 6. We continue transforming \"current\" operation `a` until it is transformed by all `operationsB`. Then, go to 2.\n  // unless the last operation `a` was transformed.\n  //\n  // The actual implementation of the above algorithm is slightly different, as only one loop (while) is used.\n  // The difference is that we have \"current\" `a` operation to transform and we store the index of the next `b` operation\n  // to transform by. Each loop operates on two indexes then: index pointing to currently processed `a` operation and\n  // index pointing to next `b` operation. Each loop is just one `a * b` + `b * a` transformation. After each loop\n  // operation `b` index is updated. If all `b` operations were visited for the current `a` operation, we change\n  // current `a` operation index to the next one.\n  //\n  // For each operation `a`, keeps information what is the index in `operationsB` from which the transformation should start.\n\n\n  var nextTransformIndex = new WeakMap(); // For all the original `operationsA`, set that they should be transformed starting from the first of `operationsB`.\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = operationsA[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var op = _step.value;\n      nextTransformIndex.set(op, 0);\n    } // Additional data that is used for some postprocessing after the main transformation process is done.\n\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var data = {\n    nextBaseVersionA: operationsA[operationsA.length - 1].baseVersion + 1,\n    nextBaseVersionB: operationsB[operationsB.length - 1].baseVersion + 1,\n    originalOperationsACount: operationsA.length,\n    originalOperationsBCount: operationsB.length\n  };\n  var contextFactory = new ContextFactory(options.document, options.useRelations);\n  contextFactory.setOriginalOperations(operationsA);\n  contextFactory.setOriginalOperations(operationsB); // Index of currently transformed operation `a`.\n\n  var i = 0; // While not all `operationsA` are transformed...\n\n  while (i < operationsA.length) {\n    var _operationsA, _operationsB;\n\n    // Get \"current\" operation `a`.\n    var opA = operationsA[i]; // For the \"current\" operation `a`, get the index of the next operation `b` to transform by.\n\n    var indexB = nextTransformIndex.get(opA); // If operation `a` was already transformed by every operation `b`, change \"current\" operation `a` to the next one.\n\n    if (indexB == operationsB.length) {\n      i++;\n      continue;\n    }\n\n    var opB = operationsB[indexB]; // Transform `a` by `b` and `b` by `a`.\n\n    var newOpsA = transform(opA, opB, contextFactory.getContext(opA, opB, true));\n    var newOpsB = transform(opB, opA, contextFactory.getContext(opB, opA, false)); // As a result we get one or more `newOpsA` and one or more `newOpsB` operations.\n    // Update contextual information about operations.\n\n    contextFactory.updateRelation(opA, opB);\n    contextFactory.setOriginalOperations(newOpsA, opA);\n    contextFactory.setOriginalOperations(newOpsB, opB); // For new `a` operations, update their index of the next operation `b` to transform them by.\n    //\n    // This is needed even if there was only one result (`a` was not broken) because that information is used\n    // at the beginning of this loop every time.\n\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n      for (var _iterator2 = newOpsA[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        var newOpA = _step2.value;\n        // Acknowledge, that operation `b` also might be broken into multiple operations.\n        //\n        // This is why we raise `indexB` not just by 1. If `newOpsB` are multiple operations, they will be\n        // spliced in the place of `opB`. So we need to change `transformBy` accordingly, so that an operation won't\n        // be transformed by the same operation (part of it) again.\n        nextTransformIndex.set(newOpA, indexB + newOpsB.length);\n      } // Update `operationsA` and `operationsB` with the transformed versions.\n\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n          _iterator2.return();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n\n    (_operationsA = operationsA).splice.apply(_operationsA, [i, 1].concat(_toConsumableArray(newOpsA)));\n\n    (_operationsB = operationsB).splice.apply(_operationsB, [indexB, 1].concat(_toConsumableArray(newOpsB)));\n  }\n\n  if (options.padWithNoOps) {\n    // If no-operations padding is enabled, count how many extra `a` and `b` operations were generated.\n    var brokenOperationsACount = operationsA.length - data.originalOperationsACount;\n    var brokenOperationsBCount = operationsB.length - data.originalOperationsBCount; // Then, if that number is not the same, pad `operationsA` or `operationsB` with correct number of no-ops so\n    // that the base versions are equalled.\n    //\n    // Note that only one array will be updated, as only one of those subtractions can be greater than zero.\n\n    padWithNoOps(operationsA, brokenOperationsBCount - brokenOperationsACount);\n    padWithNoOps(operationsB, brokenOperationsACount - brokenOperationsBCount);\n  } // Finally, update base versions of transformed operations.\n\n\n  updateBaseVersions(operationsA, data.nextBaseVersionB);\n  updateBaseVersions(operationsB, data.nextBaseVersionA);\n  return {\n    operationsA: operationsA,\n    operationsB: operationsB\n  };\n} // Gathers additional data about operations processed during transformation. Can be used to obtain contextual information\n// about two operations that are about to be transformed. This contextual information can be used for better conflict resolution.\n\nvar ContextFactory =\n/*#__PURE__*/\nfunction () {\n  // Creates `ContextFactory` instance.\n  //\n  // @param {module:engine/model/document~Document} document Document which the operations change.\n  // @param {Boolean} useRelations Whether during transformation relations should be used (used during undo for\n  // better conflict resolution).\n  function ContextFactory(document, useRelations) {\n    _classCallCheck(this, ContextFactory);\n\n    // `model.History` instance which information about undone operations will be taken from.\n    this._history = document.history; // Whether additional context should be used.\n\n    this._useRelations = useRelations; // For each operation that is created during transformation process, we keep a reference to the original operation\n    // which it comes from. The original operation works as a kind of \"identifier\". Every contextual information\n    // gathered during transformation that we want to save for given operation, is actually saved for the original operation.\n    // This way no matter if operation `a` is cloned, then transformed, even breaks, we still have access to the previously\n    // gathered data through original operation reference.\n\n    this._originalOperations = new Map(); // Relations is a double-map structure (maps in map) where for two operations we store how those operations were related\n    // to each other. Those relations are evaluated during transformation process. For every transformated pair of operations\n    // we keep relations between them.\n\n    this._relations = new Map();\n  } // Sets \"original operation\" for given operations.\n  //\n  // During transformation process, operations are cloned, then changed, then processed again, sometimes broken into two\n  // or multiple operations. When gathering additional data it is important that all operations can be somehow linked\n  // so a cloned and transformed \"version\" still kept track of the data assigned earlier to it.\n  //\n  // The original operation object will be used as such an universal linking id. Throughout the transformation process\n  // all cloned operations will refer to \"the original operation\" when storing and reading additional data.\n  //\n  // If `takeFrom` is not set, each operation from `operations` array will be assigned itself as \"the original operation\".\n  // This should be used as an initialization step.\n  //\n  // If `takeFrom` is set, each operation from `operations` will be assigned the same original operation as assigned\n  // for `takeFrom` operation. This should be used to update original operations. It should be used in a way that\n  // `operations` are the result of `takeFrom` transformation to ensure proper \"original operation propagation\".\n  //\n  // @param {Array.<module:engine/model/operation/operation~Operation>} operations\n  // @param {module:engine/model/operation/operation~Operation|null} [takeFrom=null]\n\n\n  _createClass(ContextFactory, [{\n    key: \"setOriginalOperations\",\n    value: function setOriginalOperations(operations) {\n      var takeFrom = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var originalOperation = takeFrom ? this._originalOperations.get(takeFrom) : null;\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = operations[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var operation = _step3.value;\n\n          this._originalOperations.set(operation, originalOperation || operation);\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    } // Saves a relation between operations `opA` and `opB`.\n    //\n    // Relations are then later used to help solve conflicts when operations are transformed.\n    //\n    // @param {module:engine/model/operation/operation~Operation} opA\n    // @param {module:engine/model/operation/operation~Operation} opB\n\n  }, {\n    key: \"updateRelation\",\n    value: function updateRelation(opA, opB) {\n      // The use of relations is described in a bigger detail in transformation functions.\n      //\n      // In brief, this function, for specified pairs of operation types, checks how positions defined in those operations relate.\n      // Then those relations are saved. For example, for two move operations, it is saved if one of those operations target\n      // position is before the other operation source position. This kind of information gives contextual information when\n      // transformation is used during undo. Similar checks are done for other pairs of operations.\n      //\n      switch (opA.constructor) {\n        case MoveOperation:\n          {\n            switch (opB.constructor) {\n              case MergeOperation:\n                {\n                  if (opA.targetPosition.isEqual(opB.sourcePosition) || opB.movedRange.containsPosition(opA.targetPosition)) {\n                    this._setRelation(opA, opB, 'insertAtSource');\n                  } else if (opA.targetPosition.isEqual(opB.deletionPosition)) {\n                    this._setRelation(opA, opB, 'insertBetween');\n                  } else if (opA.targetPosition.isAfter(opB.sourcePosition)) {\n                    this._setRelation(opA, opB, 'moveTargetAfter');\n                  }\n\n                  break;\n                }\n\n              case MoveOperation:\n                {\n                  if (opA.targetPosition.isEqual(opB.sourcePosition) || opA.targetPosition.isBefore(opB.sourcePosition)) {\n                    this._setRelation(opA, opB, 'insertBefore');\n                  } else {\n                    this._setRelation(opA, opB, 'insertAfter');\n                  }\n\n                  break;\n                }\n            }\n\n            break;\n          }\n\n        case SplitOperation:\n          {\n            switch (opB.constructor) {\n              case MergeOperation:\n                {\n                  if (opA.splitPosition.isBefore(opB.sourcePosition)) {\n                    this._setRelation(opA, opB, 'splitBefore');\n                  }\n\n                  break;\n                }\n\n              case MoveOperation:\n                {\n                  if (opA.splitPosition.isEqual(opB.sourcePosition) || opA.splitPosition.isBefore(opB.sourcePosition)) {\n                    this._setRelation(opA, opB, 'splitBefore');\n                  }\n\n                  break;\n                }\n            }\n\n            break;\n          }\n\n        case MergeOperation:\n          {\n            switch (opB.constructor) {\n              case MergeOperation:\n                {\n                  if (!opA.targetPosition.isEqual(opB.sourcePosition)) {\n                    this._setRelation(opA, opB, 'mergeTargetNotMoved');\n                  }\n\n                  if (opA.sourcePosition.isEqual(opB.sourcePosition)) {\n                    this._setRelation(opA, opB, 'mergeSameElement');\n                  }\n\n                  break;\n                }\n\n              case SplitOperation:\n                {\n                  if (opA.sourcePosition.isEqual(opB.splitPosition)) {\n                    this._setRelation(opA, opB, 'splitAtSource');\n                  }\n                }\n            }\n\n            break;\n          }\n      }\n    } // Evaluates and returns contextual information about two given operations `opA` and `opB` which are about to be transformed.\n    //\n    // @param {module:engine/model/operation/operation~Operation} opA\n    // @param {module:engine/model/operation/operation~Operation} opB\n    // @returns {module:engine/model/operation/transform~TransformationContext}\n\n  }, {\n    key: \"getContext\",\n    value: function getContext(opA, opB, aIsStrong) {\n      return {\n        aIsStrong: aIsStrong,\n        aWasUndone: this._wasUndone(opA),\n        bWasUndone: this._wasUndone(opB),\n        abRelation: this._useRelations ? this._getRelation(opA, opB) : null,\n        baRelation: this._useRelations ? this._getRelation(opB, opA) : null\n      };\n    } // Returns whether given operation `op` has already been undone.\n    //\n    // Information whether an operation was undone gives more context when making a decision when two operations are in conflict.\n    //\n    // @param {module:engine/model/operation/operation~Operation} op\n    // @returns {Boolean}\n\n  }, {\n    key: \"_wasUndone\",\n    value: function _wasUndone(op) {\n      // For `op`, get its original operation. After all, if `op` is a clone (or even transformed clone) of another\n      // operation, literally `op` couldn't be undone. It was just generated. If anything, it was the operation it origins\n      // from which was undone. So get that original operation.\n      var originalOp = this._originalOperations.get(op); // And check with the document if the original operation was undone.\n\n\n      return originalOp.wasUndone || this._history.isUndoneOperation(originalOp);\n    } // Returns a relation between `opA` and an operation which is undone by `opB`. This can be `String` value if a relation\n    // was set earlier or `null` if there was no relation between those operations.\n    //\n    // This is a little tricky to understand, so let's compare it to `ContextFactory#_wasUndone`.\n    //\n    // When `wasUndone( opB )` is used, we check if the `opB` has already been undone. It is obvious, that the\n    // undoing operation must happen after the undone operation. So, essentially, we have `opB`, we take document history,\n    // we look forward in the future and ask if in that future `opB` was undone.\n    //\n    // Relations is a backward process to `wasUndone()`.\n    //\n    // Long story short - using relations is asking what happened in the past. Looking back. This time we have an undoing\n    // operation `opB` which has undone some other operation. When there is a transformation `opA` x `opB` and there is\n    // a conflict to solve and `opB` is an undoing operation, we can look back in the history and see what was a relation\n    // between `opA` and the operation which `opB` undone. Basing on that relation from the past, we can now make\n    // a better decision when resolving a conflict between two operations, because we know more about the context of\n    // those two operations.\n    //\n    // This is why this function does not return a relation directly between `opA` and `opB` because we need to look\n    // back to search for a meaningful contextual information.\n    //\n    // @param {module:engine/model/operation/operation~Operation} opA\n    // @param {module:engine/model/operation/operation~Operation} opB\n    // @returns {String|null}\n\n  }, {\n    key: \"_getRelation\",\n    value: function _getRelation(opA, opB) {\n      // Get the original operation. Similarly as in `wasUndone()` it is used as an universal identifier for stored data.\n      var origB = this._originalOperations.get(opB);\n\n      var undoneB = this._history.getUndoneOperation(origB); // If `opB` is not undoing any operation, there is no relation.\n\n\n      if (!undoneB) {\n        return null;\n      }\n\n      var origA = this._originalOperations.get(opA);\n\n      var relationsA = this._relations.get(origA); // Get all relations for `opA`, and check if there is a relation with `opB`-undone-counterpart. If so, return it.\n\n\n      if (relationsA) {\n        return relationsA.get(undoneB) || null;\n      }\n\n      return null;\n    } // Helper function for `ContextFactory#updateRelations`.\n    //\n    // @private\n    // @param {module:engine/model/operation/operation~Operation} opA\n    // @param {module:engine/model/operation/operation~Operation} opB\n    // @param {String} relation\n\n  }, {\n    key: \"_setRelation\",\n    value: function _setRelation(opA, opB, relation) {\n      // As always, setting is for original operations, not the clones/transformed operations.\n      var origA = this._originalOperations.get(opA);\n\n      var origB = this._originalOperations.get(opB);\n\n      var relationsA = this._relations.get(origA);\n\n      if (!relationsA) {\n        relationsA = new Map();\n\n        this._relations.set(origA, relationsA);\n      }\n\n      relationsA.set(origB, relation);\n    }\n  }]);\n\n  return ContextFactory;\n}();\n/**\n * Holds additional contextual information about a transformed pair of operations (`a` and `b`). Those information\n * can be used for better conflict resolving.\n *\n * @typedef {Object} module:engine/model/operation/transform~TransformationContext\n *\n * @property {Boolean} aIsStrong Whether `a` is strong operation in this transformation, or weak.\n * @property {Boolean} aWasUndone Whether `a` operation was undone.\n * @property {Boolean} bWasUndone Whether `b` operation was undone.\n * @property {String|null} abRelation The relation between `a` operation and an operation undone by `b` operation.\n * @property {String|null} baRelation The relation between `b` operation and an operation undone by `a` operation.\n */\n\n/**\n * An utility function that updates {@link module:engine/model/operation/operation~Operation#baseVersion base versions}\n * of passed operations.\n *\n * The function simply sets `baseVersion` as a base version of the first passed operation and then increments it for\n * each following operation in `operations`.\n *\n * @private\n * @param {Array.<module:engine/model/operation/operation~Operation>} operations Operations to update.\n * @param {Number} baseVersion Base version to set for the first operation in `operations`.\n */\n\n\nfunction updateBaseVersions(operations, baseVersion) {\n  var _iteratorNormalCompletion4 = true;\n  var _didIteratorError4 = false;\n  var _iteratorError4 = undefined;\n\n  try {\n    for (var _iterator4 = operations[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n      var operation = _step4.value;\n      operation.baseVersion = baseVersion++;\n    }\n  } catch (err) {\n    _didIteratorError4 = true;\n    _iteratorError4 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n        _iterator4.return();\n      }\n    } finally {\n      if (_didIteratorError4) {\n        throw _iteratorError4;\n      }\n    }\n  }\n}\n/**\n * Adds `howMany` instances of {@link module:engine/model/operation/nooperation~NoOperation} to `operations` set.\n *\n * @private\n * @param {Array.<module:engine/model/operation/operation~Operation>} operations\n * @param {Number} howMany\n */\n\n\nfunction padWithNoOps(operations, howMany) {\n  for (var i = 0; i < howMany; i++) {\n    operations.push(new NoOperation(0));\n  }\n} // -----------------------\n\n\nsetTransformation(AttributeOperation, AttributeOperation, function (a, b, context) {\n  if (a.key === b.key) {\n    // If operations attributes are in conflict, check if their ranges intersect and manage them properly.\n    // First, we want to apply change to the part of a range that has not been changed by the other operation.\n    var operations = a.range.getDifference(b.range).map(function (range) {\n      return new AttributeOperation(range, a.key, a.oldValue, a.newValue, 0);\n    }); // Then we take care of the common part of ranges.\n\n    var common = a.range.getIntersection(b.range);\n\n    if (common) {\n      // If this operation is more important, we also want to apply change to the part of the\n      // original range that has already been changed by the other operation. Since that range\n      // got changed we also have to update `oldValue`.\n      if (context.aIsStrong) {\n        operations.push(new AttributeOperation(common, b.key, b.newValue, a.newValue, 0));\n      }\n    }\n\n    if (operations.length == 0) {\n      return [new NoOperation(0)];\n    }\n\n    return operations;\n  } else {\n    // If operations don't conflict, simply return an array containing just a clone of this operation.\n    return [a];\n  }\n});\nsetTransformation(AttributeOperation, InsertOperation, function (a, b) {\n  // Case 1:\n  //\n  // The attribute operation range includes the position where nodes were inserted.\n  // There are two possible scenarios: the inserted nodes were text and they should receive attributes or\n  // the inserted nodes were elements and they should not receive attributes.\n  //\n  if (a.range.start.hasSameParentAs(b.position) && a.range.containsPosition(b.position)) {\n    // If new nodes should not receive attributes, two separated ranges will be returned.\n    // Otherwise, one expanded range will be returned.\n    var range = a.range._getTransformedByInsertion(b.position, b.howMany, !b.shouldReceiveAttributes);\n\n    var result = range.map(function (r) {\n      return new AttributeOperation(r, a.key, a.oldValue, a.newValue, a.baseVersion);\n    });\n\n    if (b.shouldReceiveAttributes) {\n      // `AttributeOperation#range` includes some newly inserted text.\n      // The operation should also change the attribute of that text. An example:\n      //\n      // Bold should be applied on the following range:\n      // <p>Fo[zb]ar</p>\n      //\n      // In meantime, new text is typed:\n      // <p>Fozxxbar</p>\n      //\n      // Bold should be applied also on the new text:\n      // <p>Fo[zxxb]ar</p>\n      // <p>Fo<$text bold=\"true\">zxxb</$text>ar</p>\n      //\n      // There is a special case to consider here to consider.\n      //\n      // Consider setting an attribute with multiple possible values, for example `highlight`. The inserted text might\n      // have already an attribute value applied and the `oldValue` property of the attribute operation might be wrong:\n      //\n      // Attribute `highlight=\"yellow\"` should be applied on the following range:\n      // <p>Fo[zb]ar<p>\n      //\n      // In meantime, character `x` with `highlight=\"red\"` is typed:\n      // <p>Fo[z<$text highlight=\"red\">x</$text>b]ar</p>\n      //\n      // In this case we cannot simply apply operation changing the attribute value from `null` to `\"yellow\"` for the whole range\n      // because that would lead to an exception (`oldValue` is incorrect for `x`).\n      //\n      // We also cannot break the original range as this would mess up a scenario when there are multiple following\n      // insert operations, because then only the first inserted character is included in those ranges:\n      // <p>Fo[z][x][b]ar</p>   -->   <p>Fo[z][x]x[b]ar</p>   -->   <p>Fo[z][x]xx[b]ar</p>\n      //\n      // So, the attribute range needs be expanded, no matter what attributes are set on the inserted nodes:\n      //\n      // <p>Fo[z<$text highlight=\"red\">x</$text>b]ar</p>      <--- Change from `null` to `yellow`, throwing an exception.\n      //\n      // But before that operation would be applied, we will add an additional attribute operation that will change\n      // attributes on the inserted nodes in a way which would make the original operation correct:\n      //\n      // <p>Fo[z{<$text highlight=\"red\">}x</$text>b]ar</p>    <--- Change range `{}` from `red` to `null`.\n      // <p>Fo[zxb]ar</p>                                     <--- Now change from `null` to `yellow` is completely fine.\n      //\n      // Generate complementary attribute operation. Be sure to add it before the original operation.\n      var op = _getComplementaryAttributeOperations(b, a.key, a.oldValue);\n\n      if (op) {\n        result.unshift(op);\n      }\n    } // If nodes should not receive new attribute, we are done here.\n\n\n    return result;\n  } // If insert operation is not expanding the attribute operation range, simply transform the range.\n\n\n  a.range = a.range._getTransformedByInsertion(b.position, b.howMany, false)[0];\n  return [a];\n});\n/**\n * Helper function for `AttributeOperation` x `InsertOperation` (and reverse) transformation.\n *\n * For given `insertOperation` it checks the inserted node if it has an attribute `key` set to a value different\n * than `newValue`. If so, it generates an `AttributeOperation` which changes the value of `key` attribute to `newValue`.\n *\n * @private\n * @param {module:engine/model/operation/insertoperation~InsertOperation} insertOperation\n * @param {String} key\n * @param {*} newValue\n * @returns {module:engine/model/operation/attributeoperation~AttributeOperation|null}\n */\n\nfunction _getComplementaryAttributeOperations(insertOperation, key, newValue) {\n  var nodes = insertOperation.nodes; // At the beginning we store the attribute value from the first node.\n\n  var insertValue = nodes.getNode(0).getAttribute(key);\n\n  if (insertValue == newValue) {\n    return null;\n  }\n\n  var range = new Range(insertOperation.position, insertOperation.position.getShiftedBy(insertOperation.howMany));\n  return new AttributeOperation(range, key, insertValue, newValue, 0);\n}\n\nsetTransformation(AttributeOperation, MergeOperation, function (a, b) {\n  var ranges = []; // Case 1:\n  //\n  // Attribute change on the merged element. In this case, the merged element was moved to the graveyard.\n  // An additional attribute operation that will change the (re)moved element needs to be generated.\n  //\n\n  if (a.range.start.hasSameParentAs(b.deletionPosition)) {\n    if (a.range.containsPosition(b.deletionPosition) || a.range.start.isEqual(b.deletionPosition)) {\n      ranges.push(Range._createFromPositionAndShift(b.graveyardPosition, 1));\n    }\n  }\n\n  var range = a.range._getTransformedByMergeOperation(b); // Do not add empty (collapsed) ranges to the result. `range` may be collapsed if it contained only the merged element.\n\n\n  if (!range.isCollapsed) {\n    ranges.push(range);\n  } // Create `AttributeOperation`s out of the ranges.\n\n\n  return ranges.map(function (range) {\n    return new AttributeOperation(range, a.key, a.oldValue, a.newValue, a.baseVersion);\n  });\n});\nsetTransformation(AttributeOperation, MoveOperation, function (a, b) {\n  var ranges = _breakRangeByMoveOperation(a.range, b); // Create `AttributeOperation`s out of the ranges.\n\n\n  return ranges.map(function (range) {\n    return new AttributeOperation(range, a.key, a.oldValue, a.newValue, a.baseVersion);\n  });\n}); // Helper function for `AttributeOperation` x `MoveOperation` transformation.\n//\n// Takes the passed `range` and transforms it by move operation `moveOp` in a specific way. Only top-level nodes of `range`\n// are considered to be in the range. If move operation moves nodes deep from inside of the range, those nodes won't\n// be included in the result. In other words, top-level nodes of the ranges from the result are exactly the same as\n// top-level nodes of the original `range`.\n//\n// This is important for `AttributeOperation` because, for its range, it changes only the top-level nodes. So we need to\n// track only how those nodes have been affected by `MoveOperation`.\n//\n// @private\n// @param {module:engine/model/range~Range} range\n// @param {module:engine/model/operation/moveoperation~MoveOperation} moveOp\n// @returns {Array.<module:engine/model/range~Range>}\n\nfunction _breakRangeByMoveOperation(range, moveOp) {\n  var moveRange = Range._createFromPositionAndShift(moveOp.sourcePosition, moveOp.howMany); // We are transforming `range` (original range) by `moveRange` (range moved by move operation). As usual when it comes to\n  // transforming a ranges, we may have a common part of the ranges and we may have a difference part (zero to two ranges).\n\n\n  var common = null;\n  var difference = []; // Let's compare the ranges.\n\n  if (moveRange.containsRange(range, true)) {\n    // If the whole original range is moved, treat it whole as a common part. There's also no difference part.\n    common = range;\n  } else if (range.start.hasSameParentAs(moveRange.start)) {\n    // If the ranges are \"on the same level\" (in the same parent) then move operation may move exactly those nodes\n    // that are changed by the attribute operation. In this case we get common part and difference part in the usual way.\n    difference = range.getDifference(moveRange);\n    common = range.getIntersection(moveRange);\n  } else {\n    // In any other situation we assume that original range is different than move range, that is that move operation\n    // moves other nodes that attribute operation change. Even if the moved range is deep inside in the original range.\n    //\n    // Note that this is different than in `.getIntersection` (we would get a common part in that case) and different\n    // than `.getDifference` (we would get two ranges).\n    difference = [range];\n  }\n\n  var result = []; // The default behaviour of `_getTransformedByMove` might get wrong results for difference part, though, so\n  // we do it by hand.\n\n  var _iteratorNormalCompletion5 = true;\n  var _didIteratorError5 = false;\n  var _iteratorError5 = undefined;\n\n  try {\n    for (var _iterator5 = difference[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n      var diff = _step5.value;\n      // First, transform the range by removing moved nodes. Since this is a difference, this is safe, `null` won't be returned\n      // as the range is different than the moved range.\n      diff = diff._getTransformedByDeletion(moveOp.sourcePosition, moveOp.howMany); // Transform also `targetPosition`.\n\n      var targetPosition = moveOp.getMovedRangeStart(); // Spread the range only if moved nodes are inserted only between the top-level nodes of the `diff` range.\n\n      var spread = diff.start.hasSameParentAs(targetPosition); // Transform by insertion of moved nodes.\n\n      diff = diff._getTransformedByInsertion(targetPosition, moveOp.howMany, spread);\n      result.push.apply(result, _toConsumableArray(diff));\n    } // Common part can be simply transformed by the move operation. This is because move operation will not target to\n    // that common part (the operation would have to target inside its own moved range).\n\n  } catch (err) {\n    _didIteratorError5 = true;\n    _iteratorError5 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n        _iterator5.return();\n      }\n    } finally {\n      if (_didIteratorError5) {\n        throw _iteratorError5;\n      }\n    }\n  }\n\n  if (common) {\n    result.push(common._getTransformedByMove(moveOp.sourcePosition, moveOp.targetPosition, moveOp.howMany, false)[0]);\n  }\n\n  return result;\n}\n\nsetTransformation(AttributeOperation, SplitOperation, function (a, b) {\n  // Case 1:\n  //\n  // Split node is the last node in `AttributeOperation#range`.\n  // `AttributeOperation#range` needs to be expanded to include the new (split) node.\n  //\n  // Attribute `type` to be changed to `numbered` but the `listItem` is split.\n  // <listItem type=\"bulleted\">foobar</listItem>\n  //\n  // After split:\n  // <listItem type=\"bulleted\">foo</listItem><listItem type=\"bulleted\">bar</listItem>\n  //\n  // After attribute change:\n  // <listItem type=\"numbered\">foo</listItem><listItem type=\"numbered\">foo</listItem>\n  //\n  if (a.range.end.isEqual(b.insertionPosition)) {\n    if (!b.graveyardPosition) {\n      a.range.end.offset++;\n    }\n\n    return [a];\n  } // Case 2:\n  //\n  // Split position is inside `AttributeOperation#range`, at the same level, so the nodes to change are\n  // not going to make a flat range.\n  //\n  // Content with range-to-change and split position:\n  // <p>Fo[zb^a]r</p>\n  //\n  // After split:\n  // <p>Fozb</p><p>ar</p>\n  //\n  // Make two separate ranges containing all nodes to change:\n  // <p>Fo[zb]</p><p>[a]r</p>\n  //\n\n\n  if (a.range.start.hasSameParentAs(b.splitPosition) && a.range.containsPosition(b.splitPosition)) {\n    var secondPart = a.clone();\n    secondPart.range = new Range(b.moveTargetPosition.clone(), a.range.end._getCombined(b.splitPosition, b.moveTargetPosition));\n    a.range.end = b.splitPosition.clone();\n    a.range.end.stickiness = 'toPrevious';\n    return [a, secondPart];\n  } // The default case.\n  //\n\n\n  a.range = a.range._getTransformedBySplitOperation(b);\n  return [a];\n});\nsetTransformation(InsertOperation, AttributeOperation, function (a, b) {\n  var result = [a]; // Case 1:\n  //\n  // The attribute operation range includes the position where nodes were inserted.\n  // There are two possible scenarios: the inserted nodes were text and they should receive attributes or\n  // the inserted nodes were elements and they should not receive attributes.\n  //\n  // This is a mirror scenario to the one described in `AttributeOperation` x `InsertOperation` transformation,\n  // although this case is a little less complicated. In this case we simply need to change attributes of the\n  // inserted nodes and that's it.\n  //\n\n  if (a.shouldReceiveAttributes && a.position.hasSameParentAs(b.range.start) && b.range.containsPosition(a.position)) {\n    var op = _getComplementaryAttributeOperations(a, b.key, b.newValue);\n\n    if (op) {\n      result.push(op);\n    }\n  } // The default case is: do nothing.\n  // `AttributeOperation` does not change the model tree structure so `InsertOperation` does not need to be changed.\n  //\n\n\n  return result;\n});\nsetTransformation(InsertOperation, InsertOperation, function (a, b, context) {\n  // Case 1:\n  //\n  // Two insert operations insert nodes at the same position. Since they are the same, it needs to be decided\n  // what will be the order of inserted nodes. However, there is no additional information to help in that\n  // decision. Also, when `b` will be transformed by `a`, the same order must be maintained.\n  //\n  // To achieve that, we will check if the operation is strong.\n  // If it is, it won't get transformed. If it is not, it will be moved.\n  //\n  if (a.position.isEqual(b.position) && context.aIsStrong) {\n    return [a];\n  } // The default case.\n  //\n\n\n  a.position = a.position._getTransformedByInsertOperation(b);\n  return [a];\n});\nsetTransformation(InsertOperation, MoveOperation, function (a, b) {\n  // The default case.\n  //\n  a.position = a.position._getTransformedByMoveOperation(b);\n  return [a];\n});\nsetTransformation(InsertOperation, SplitOperation, function (a, b) {\n  // The default case.\n  //\n  a.position = a.position._getTransformedBySplitOperation(b);\n  return [a];\n});\nsetTransformation(InsertOperation, MergeOperation, function (a, b) {\n  a.position = a.position._getTransformedByMergeOperation(b);\n  return [a];\n}); // -----------------------\n\nsetTransformation(MarkerOperation, InsertOperation, function (a, b) {\n  if (a.oldRange) {\n    a.oldRange = a.oldRange._getTransformedByInsertOperation(b)[0];\n  }\n\n  if (a.newRange) {\n    a.newRange = a.newRange._getTransformedByInsertOperation(b)[0];\n  }\n\n  return [a];\n});\nsetTransformation(MarkerOperation, MarkerOperation, function (a, b, context) {\n  if (a.name == b.name) {\n    if (context.aIsStrong) {\n      a.oldRange = b.newRange ? b.newRange.clone() : null;\n    } else {\n      return [new NoOperation(0)];\n    }\n  }\n\n  return [a];\n});\nsetTransformation(MarkerOperation, MergeOperation, function (a, b) {\n  if (a.oldRange) {\n    a.oldRange = a.oldRange._getTransformedByMergeOperation(b);\n  }\n\n  if (a.newRange) {\n    a.newRange = a.newRange._getTransformedByMergeOperation(b);\n  }\n\n  return [a];\n});\nsetTransformation(MarkerOperation, MoveOperation, function (a, b) {\n  if (a.oldRange) {\n    a.oldRange = Range._createFromRanges(a.oldRange._getTransformedByMoveOperation(b));\n  }\n\n  if (a.newRange) {\n    a.newRange = Range._createFromRanges(a.newRange._getTransformedByMoveOperation(b));\n  }\n\n  return [a];\n});\nsetTransformation(MarkerOperation, SplitOperation, function (a, b) {\n  if (a.oldRange) {\n    a.oldRange = a.oldRange._getTransformedBySplitOperation(b);\n  }\n\n  if (a.newRange) {\n    a.newRange = a.newRange._getTransformedBySplitOperation(b);\n  }\n\n  return [a];\n}); // -----------------------\n\nsetTransformation(MergeOperation, InsertOperation, function (a, b) {\n  if (a.sourcePosition.hasSameParentAs(b.position)) {\n    a.howMany += b.howMany;\n  }\n\n  a.sourcePosition = a.sourcePosition._getTransformedByInsertOperation(b);\n  a.targetPosition = a.targetPosition._getTransformedByInsertOperation(b);\n  return [a];\n});\nsetTransformation(MergeOperation, MergeOperation, function (a, b, context) {\n  // Case 1:\n  //\n  // Same merge operations.\n  //\n  // Both operations have same source and target positions. So the element already got merged and there is\n  // theoretically nothing to do.\n  //\n  if (a.sourcePosition.isEqual(b.sourcePosition) && a.targetPosition.isEqual(b.targetPosition)) {\n    // There are two ways that we can provide a do-nothing operation.\n    //\n    // First is simply a NoOperation instance. We will use it if `b` operation was not undone.\n    //\n    // Second is a merge operation that has the source operation in the merged element - in the graveyard -\n    // same target position and `howMany` equal to `0`. So it is basically merging an empty element from graveyard\n    // which is almost the same as NoOperation.\n    //\n    // This way the merge operation can be later transformed by split operation\n    // to provide correct undo. This will be used if `b` operation was undone (only then it is correct).\n    //\n    if (!context.bWasUndone) {\n      return [new NoOperation(0)];\n    } else {\n      var path = b.graveyardPosition.path.slice();\n      path.push(0);\n      a.sourcePosition = new Position(b.graveyardPosition.root, path);\n      a.howMany = 0;\n      return [a];\n    }\n  } // Case 2:\n  //\n  // Same merge source position but different target position.\n  //\n  // This can happen during collaboration. For example, if one client merged a paragraph to the previous paragraph\n  // and the other person removed that paragraph and merged the same paragraph to something before:\n  //\n  // Client A:\n  // <p>Foo</p><p>Bar</p><p>[]Xyz</p>\n  // <p>Foo</p><p>BarXyz</p>\n  //\n  // Client B:\n  // <p>Foo</p>[<p>Bar</p>]<p>Xyz</p>\n  // <p>Foo</p><p>[]Xyz</p>\n  // <p>FooXyz</p>\n  //\n  // In this case we need to decide where finally \"Xyz\" will land:\n  //\n  // <p>FooXyz</p>               graveyard: <p>Bar</p>\n  // <p>Foo</p>                  graveyard: <p>BarXyz</p>\n  //\n  // Let's move it in a way so that a merge operation that does not target to graveyard is more important so that\n  // nodes does not end up in the graveyard. It makes sense. Both for Client A and for Client B \"Xyz\" finally did not\n  // end up in the graveyard (see above).\n  //\n  // If neither or both operations point to graveyard, then let `aIsStrong` decide.\n  //\n\n\n  if (a.sourcePosition.isEqual(b.sourcePosition) && !a.targetPosition.isEqual(b.targetPosition) && !context.bWasUndone && context.abRelation != 'splitAtSource') {\n    var aToGraveyard = a.targetPosition.root.rootName == '$graveyard';\n    var bToGraveyard = b.targetPosition.root.rootName == '$graveyard'; // If `aIsWeak` it means that `a` points to graveyard while `b` doesn't. Don't move nodes then.\n\n    var aIsWeak = aToGraveyard && !bToGraveyard; // If `bIsWeak` it means that `b` points to graveyard while `a` doesn't. Force moving nodes then.\n\n    var bIsWeak = bToGraveyard && !aToGraveyard; // Force move if `b` is weak or neither operation is weak but `a` is stronger through `context.aIsStrong`.\n\n    var forceMove = bIsWeak || !aIsWeak && context.aIsStrong;\n\n    if (forceMove) {\n      var sourcePosition = b.targetPosition._getTransformedByMergeOperation(b);\n\n      var targetPosition = a.targetPosition._getTransformedByMergeOperation(b);\n\n      return [new MoveOperation(sourcePosition, a.howMany, targetPosition, 0)];\n    } else {\n      return [new NoOperation(0)];\n    }\n  } // The default case.\n  //\n\n\n  if (a.sourcePosition.hasSameParentAs(b.targetPosition)) {\n    a.howMany += b.howMany;\n  }\n\n  a.sourcePosition = a.sourcePosition._getTransformedByMergeOperation(b);\n  a.targetPosition = a.targetPosition._getTransformedByMergeOperation(b); // Handle positions in graveyard.\n  // If graveyard positions are same and `a` operation is strong - do not transform.\n\n  if (!a.graveyardPosition.isEqual(b.graveyardPosition) || !context.aIsStrong) {\n    a.graveyardPosition = a.graveyardPosition._getTransformedByMergeOperation(b);\n  }\n\n  return [a];\n});\nsetTransformation(MergeOperation, MoveOperation, function (a, b, context) {\n  // Case 1:\n  //\n  // The element to merge got removed.\n  //\n  // Merge operation does support merging elements which are not siblings. So it would not be a problem\n  // from technical point of view. However, if the element was removed, the intention of the user deleting it\n  // was to have it all deleted, together with its children. From user experience point of view, moving back the\n  // removed nodes might be unexpected. This means that in this scenario we will block the merging.\n  //\n  // The exception of this rule would be if the remove operation was later undone.\n  //\n  var removedRange = Range._createFromPositionAndShift(b.sourcePosition, b.howMany);\n\n  if (b.type == 'remove' && !context.bWasUndone) {\n    if (a.deletionPosition.hasSameParentAs(b.sourcePosition) && removedRange.containsPosition(a.sourcePosition)) {\n      return [new NoOperation(0)];\n    }\n  } // The default case.\n  //\n\n\n  if (a.sourcePosition.hasSameParentAs(b.targetPosition)) {\n    a.howMany += b.howMany;\n  }\n\n  if (a.sourcePosition.hasSameParentAs(b.sourcePosition)) {\n    a.howMany -= b.howMany;\n  }\n\n  a.sourcePosition = a.sourcePosition._getTransformedByMoveOperation(b);\n  a.targetPosition = a.targetPosition._getTransformedByMoveOperation(b); // `MergeOperation` graveyard position is like `MoveOperation` target position. It is a position where element(s) will\n  // be moved. Like in other similar cases, we need to consider the scenario when those positions are same.\n  // Here, we will treat `MergeOperation` like it is always strong (see `InsertOperation` x `InsertOperation` for comparison).\n  // This means that we won't transform graveyard position if it is equal to move operation target position.\n\n  if (!a.graveyardPosition.isEqual(b.targetPosition)) {\n    a.graveyardPosition = a.graveyardPosition._getTransformedByMoveOperation(b);\n  }\n\n  return [a];\n});\nsetTransformation(MergeOperation, SplitOperation, function (a, b, context) {\n  if (b.graveyardPosition) {\n    // If `b` operation defines graveyard position, a node from graveyard will be moved. This means that we need to\n    // transform `a.graveyardPosition` accordingly.\n    a.graveyardPosition = a.graveyardPosition._getTransformedByDeletion(b.graveyardPosition, 1); // This is a scenario foreseen in `MergeOperation` x `MergeOperation`, with two identical merge operations.\n    //\n    // So, there was `MergeOperation` x `MergeOperation` transformation earlier. Now, `a` is a merge operation which\n    // source position is in graveyard. Interestingly, split operation wants to use the node to be merged by `a`. This\n    // means that `b` is undoing that merge operation from earlier, which caused `a` to be in graveyard.\n    //\n    // If that's the case, at this point, we will only \"fix\" `a.howMany`. It was earlier set to `0` in\n    // `MergeOperation` x `MergeOperation` transformation. Later transformations in this function will change other\n    // properties.\n    //\n\n    if (a.deletionPosition.isEqual(b.graveyardPosition)) {\n      a.howMany = b.howMany;\n    }\n  } // Case 1:\n  //\n  // Merge operation moves nodes to the place where split happens.\n  // This is a classic situation when there are two paragraphs, and there is a split (enter) after the first\n  // paragraph and there is a merge (delete) at the beginning of the second paragraph:\n  //\n  // <p>Foo{}</p><p>[]Bar</p>.\n  //\n  // Split is after `Foo`, while merge is from `Bar` to the end of `Foo`.\n  //\n  // State after split:\n  // <p>Foo</p><p></p><p>Bar</p>\n  //\n  // Now, `Bar` should be merged to the new paragraph:\n  // <p>Foo</p><p>Bar</p>\n  //\n  // Instead of merging it to the original paragraph:\n  // <p>FooBar</p><p></p>\n  //\n  // This means that `targetPosition` needs to be transformed. This is the default case though.\n  // For example, if the split would be after `F`, `targetPosition` should also be transformed.\n  //\n  // There are three exceptions, though, when we want to keep `targetPosition` as it was.\n  //\n  // First exception is when the merge target position is inside an element (not at the end, as usual). This\n  // happens when the merge operation earlier was transformed by \"the same\" merge operation. If merge operation\n  // targets inside the element we want to keep the original target position (and not transform it) because\n  // we have additional context telling us that we want to merge to the original element. We can check if the\n  // merge operation points inside element by checking what is `SplitOperation#howMany`. Since merge target position\n  // is same as split position, if `howMany` is non-zero, it means that the merge target position is inside an element.\n  //\n  // Second exception is when the element to merge is in the graveyard and split operation uses it. In that case\n  // if target position would be transformed, the merge operation would target at the source position:\n  //\n  // root: <p>Foo</p>\t\t\t\tgraveyard: <p></p>\n  //\n  // SplitOperation: root [ 0, 3 ] using graveyard [ 0 ] (howMany = 0)\n  // MergeOperation: graveyard [ 0, 0 ] -> root [ 0, 3 ] (howMany = 0)\n  //\n  // Since split operation moves the graveyard node back to the root, the merge operation source position changes.\n  // We would like to merge from the empty <p> to the \"Foo\" <p>:\n  //\n  // root: <p>Foo</p><p></p>\t\t\tgraveyard:\n  //\n  // MergeOperation#sourcePosition = root [ 1, 0 ]\n  //\n  // If `targetPosition` is transformed, it would become root [ 1, 0 ] as well. It has to be kept as it was.\n  //\n  // Third exception is connected with relations. If this happens during undo and we have explicit information\n  // that target position has not been affected by the operation which is undone by this split then this split should\n  // not move the target position either.\n  //\n\n\n  if (a.targetPosition.isEqual(b.splitPosition)) {\n    var mergeInside = b.howMany != 0;\n    var mergeSplittingElement = b.graveyardPosition && a.deletionPosition.isEqual(b.graveyardPosition);\n\n    if (mergeInside || mergeSplittingElement || context.abRelation == 'mergeTargetNotMoved') {\n      a.sourcePosition = a.sourcePosition._getTransformedBySplitOperation(b);\n      return [a];\n    }\n  } // Case 2:\n  //\n  // Merge source is at the same position as split position. This sometimes happen during undo. This merge operation\n  // might have been earlier transformed by a merge operation which both merged the same element. See case in\n  // `MergeOperation` x `MergeOperation` transformation. In that case, if the merge operation has been undone, the special\n  // case is not applied.\n  //\n  // In this scenario the merge operation is now transformed by the split which has undone the previous merge operation.\n  // So now we are fixing situation which was skipped in `MergeOperation` x `MergeOperation` case.\n  //\n\n\n  if (a.sourcePosition.isEqual(b.splitPosition) && (context.abRelation == 'mergeSameElement' || a.sourcePosition.offset > 0)) {\n    a.sourcePosition = b.moveTargetPosition.clone();\n    a.targetPosition = a.targetPosition._getTransformedBySplitOperation(b);\n    return [a];\n  } // The default case.\n  //\n\n\n  if (a.sourcePosition.hasSameParentAs(b.splitPosition)) {\n    a.howMany = b.splitPosition.offset;\n  }\n\n  a.sourcePosition = a.sourcePosition._getTransformedBySplitOperation(b);\n  a.targetPosition = a.targetPosition._getTransformedBySplitOperation(b);\n  return [a];\n}); // -----------------------\n\nsetTransformation(MoveOperation, InsertOperation, function (a, b) {\n  var moveRange = Range._createFromPositionAndShift(a.sourcePosition, a.howMany);\n\n  var transformed = moveRange._getTransformedByInsertOperation(b, false)[0];\n\n  a.sourcePosition = transformed.start;\n  a.howMany = transformed.end.offset - transformed.start.offset; // See `InsertOperation` x `MoveOperation` transformation for details on this case.\n  //\n  // In summary, both operations point to the same place, so the order of nodes needs to be decided.\n  // `MoveOperation` is considered weaker, so it is always transformed, unless there was a certain relation\n  // between operations.\n  //\n\n  if (!a.targetPosition.isEqual(b.position)) {\n    a.targetPosition = a.targetPosition._getTransformedByInsertOperation(b);\n  }\n\n  return [a];\n});\nsetTransformation(MoveOperation, MoveOperation, function (a, b, context) {\n  //\n  // Setting and evaluating some variables that will be used in special cases and default algorithm.\n  //\n  // Create ranges from `MoveOperations` properties.\n  var rangeA = Range._createFromPositionAndShift(a.sourcePosition, a.howMany);\n\n  var rangeB = Range._createFromPositionAndShift(b.sourcePosition, b.howMany); // Assign `context.aIsStrong` to a different variable, because the value may change during execution of\n  // this algorithm and we do not want to override original `context.aIsStrong` that will be used in later transformations.\n\n\n  var aIsStrong = context.aIsStrong; // This will be used to decide the order of nodes if both operations target at the same position.\n  // By default, use strong/weak operation mechanism.\n\n  var insertBefore = !context.aIsStrong; // If the relation is set, then use it to decide nodes order.\n\n  if (context.abRelation == 'insertBefore' || context.baRelation == 'insertAfter') {\n    insertBefore = true;\n  } else if (context.abRelation == 'insertAfter' || context.baRelation == 'insertBefore') {\n    insertBefore = false;\n  } // `a.targetPosition` could be affected by the `b` operation. We will transform it.\n\n\n  var newTargetPosition;\n\n  if (a.targetPosition.isEqual(b.targetPosition) && insertBefore) {\n    newTargetPosition = a.targetPosition._getTransformedByDeletion(b.sourcePosition, b.howMany);\n  } else {\n    newTargetPosition = a.targetPosition._getTransformedByMove(b.sourcePosition, b.targetPosition, b.howMany);\n  } //\n  // Special case #1 + mirror.\n  //\n  // Special case when both move operations' target positions are inside nodes that are\n  // being moved by the other move operation. So in other words, we move ranges into inside of each other.\n  // This case can't be solved reasonably (on the other hand, it should not happen often).\n\n\n  if (_moveTargetIntoMovedRange(a, b) && _moveTargetIntoMovedRange(b, a)) {\n    // Instead of transforming operation, we return a reverse of the operation that we transform by.\n    // So when the results of this \"transformation\" will be applied, `b` MoveOperation will get reversed.\n    return [b.getReversed()];\n  } //\n  // End of special case #1.\n  //\n  //\n  // Special case #2.\n  //\n  // Check if `b` operation targets inside `rangeA`.\n\n\n  var bTargetsToA = rangeA.containsPosition(b.targetPosition); // If `b` targets to `rangeA` and `rangeA` contains `rangeB`, `b` operation has no influence on `a` operation.\n  // You might say that operation `b` is captured inside operation `a`.\n\n  if (bTargetsToA && rangeA.containsRange(rangeB, true)) {\n    // There is a mini-special case here, where `rangeB` is on other level than `rangeA`. That's why\n    // we need to transform `a` operation anyway.\n    rangeA.start = rangeA.start._getTransformedByMove(b.sourcePosition, b.targetPosition, b.howMany);\n    rangeA.end = rangeA.end._getTransformedByMove(b.sourcePosition, b.targetPosition, b.howMany);\n    return _makeMoveOperationsFromRanges([rangeA], newTargetPosition);\n  } //\n  // Special case #2 mirror.\n  //\n\n\n  var aTargetsToB = rangeB.containsPosition(a.targetPosition);\n\n  if (aTargetsToB && rangeB.containsRange(rangeA, true)) {\n    // `a` operation is \"moved together\" with `b` operation.\n    // Here, just move `rangeA` \"inside\" `rangeB`.\n    rangeA.start = rangeA.start._getCombined(b.sourcePosition, b.getMovedRangeStart());\n    rangeA.end = rangeA.end._getCombined(b.sourcePosition, b.getMovedRangeStart());\n    return _makeMoveOperationsFromRanges([rangeA], newTargetPosition);\n  } //\n  // End of special case #2.\n  //\n  //\n  // Special case #3 + mirror.\n  //\n  // `rangeA` has a node which is an ancestor of `rangeB`. In other words, `rangeB` is inside `rangeA`\n  // but not on the same tree level. In such case ranges have common part but we have to treat it\n  // differently, because in such case those ranges are not really conflicting and should be treated like\n  // two separate ranges. Also we have to discard two difference parts.\n\n\n  var aCompB = compareArrays(a.sourcePosition.getParentPath(), b.sourcePosition.getParentPath());\n\n  if (aCompB == 'prefix' || aCompB == 'extension') {\n    // Transform `rangeA` by `b` operation and make operation out of it, and that's all.\n    // Note that this is a simplified version of default case, but here we treat the common part (whole `rangeA`)\n    // like a one difference part.\n    rangeA.start = rangeA.start._getTransformedByMove(b.sourcePosition, b.targetPosition, b.howMany);\n    rangeA.end = rangeA.end._getTransformedByMove(b.sourcePosition, b.targetPosition, b.howMany);\n    return _makeMoveOperationsFromRanges([rangeA], newTargetPosition);\n  } //\n  // End of special case #3.\n  //\n  //\n  // Default case - ranges are on the same level or are not connected with each other.\n  //\n  // Modifier for default case.\n  // Modifies `aIsStrong` flag in certain conditions.\n  //\n  // If only one of operations is a remove operation, we force remove operation to be the \"stronger\" one\n  // to provide more expected results.\n\n\n  if (a.type == 'remove' && b.type != 'remove' && !context.aWasUndone) {\n    aIsStrong = true;\n  } else if (a.type != 'remove' && b.type == 'remove' && !context.bWasUndone) {\n    aIsStrong = false;\n  } // Handle operation's source ranges - check how `rangeA` is affected by `b` operation.\n  // This will aggregate transformed ranges.\n\n\n  var ranges = []; // Get the \"difference part\" of `a` operation source range.\n  // This is an array with one or two ranges. Two ranges if `rangeB` is inside `rangeA`.\n\n  var difference = rangeA.getDifference(rangeB);\n  var _iteratorNormalCompletion6 = true;\n  var _didIteratorError6 = false;\n  var _iteratorError6 = undefined;\n\n  try {\n    for (var _iterator6 = difference[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n      var range = _step6.value;\n      // Transform those ranges by `b` operation. For example if `b` moved range from before those ranges, fix those ranges.\n      range.start = range.start._getTransformedByDeletion(b.sourcePosition, b.howMany);\n      range.end = range.end._getTransformedByDeletion(b.sourcePosition, b.howMany); // If `b` operation targets into `rangeA` on the same level, spread `rangeA` into two ranges.\n\n      var shouldSpread = compareArrays(range.start.getParentPath(), b.getMovedRangeStart().getParentPath()) == 'same';\n\n      var newRanges = range._getTransformedByInsertion(b.getMovedRangeStart(), b.howMany, shouldSpread);\n\n      ranges.push.apply(ranges, _toConsumableArray(newRanges));\n    } // Then, we have to manage the \"common part\" of both move ranges.\n\n  } catch (err) {\n    _didIteratorError6 = true;\n    _iteratorError6 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n        _iterator6.return();\n      }\n    } finally {\n      if (_didIteratorError6) {\n        throw _iteratorError6;\n      }\n    }\n  }\n\n  var common = rangeA.getIntersection(rangeB);\n\n  if (common !== null && aIsStrong) {\n    // Calculate the new position of that part of original range.\n    common.start = common.start._getCombined(b.sourcePosition, b.getMovedRangeStart());\n    common.end = common.end._getCombined(b.sourcePosition, b.getMovedRangeStart()); // Take care of proper range order.\n    //\n    // Put `common` at appropriate place. Keep in mind that we are interested in original order.\n    // Basically there are only three cases: there is zero, one or two difference ranges.\n    //\n    // If there is zero difference ranges, just push `common` in the array.\n\n    if (ranges.length === 0) {\n      ranges.push(common);\n    } // If there is one difference range, we need to check whether common part was before it or after it.\n    else if (ranges.length == 1) {\n        if (rangeB.start.isBefore(rangeA.start) || rangeB.start.isEqual(rangeA.start)) {\n          ranges.unshift(common);\n        } else {\n          ranges.push(common);\n        }\n      } // If there are more ranges (which means two), put common part between them. This is the only scenario\n      // where there could be two difference ranges so we don't have to make any comparisons.\n      else {\n          ranges.splice(1, 0, common);\n        }\n  }\n\n  if (ranges.length === 0) {\n    // If there are no \"source ranges\", nothing should be changed.\n    // Note that this can happen only if `aIsStrong == false` and `rangeA.isEqual( rangeB )`.\n    return [new NoOperation(a.baseVersion)];\n  }\n\n  return _makeMoveOperationsFromRanges(ranges, newTargetPosition);\n});\nsetTransformation(MoveOperation, SplitOperation, function (a, b, context) {\n  var newTargetPosition = a.targetPosition.clone(); // Do not transform if target position is same as split insertion position and this split comes from undo.\n  // This should be done on relations but it is too much work for now as it would require relations working in collaboration.\n  // We need to make a decision how we will resolve such conflict and this is less harmful way.\n\n  if (!a.targetPosition.isEqual(b.insertionPosition) || !b.graveyardPosition || context.abRelation == 'moveTargetAfter') {\n    newTargetPosition = a.targetPosition._getTransformedBySplitOperation(b);\n  } // Case 1:\n  //\n  // Last element in the moved range got split.\n  //\n  // In this case the default range transformation will not work correctly as the element created by\n  // split operation would be outside the range. The range to move needs to be fixed manually.\n  //\n\n\n  var moveRange = Range._createFromPositionAndShift(a.sourcePosition, a.howMany);\n\n  if (moveRange.end.isEqual(b.insertionPosition)) {\n    // Do it only if this is a \"natural\" split, not a one that comes from undo.\n    // If this is undo split, only `targetPosition` needs to be changed (if the move is a remove).\n    if (!b.graveyardPosition) {\n      a.howMany++;\n    }\n\n    a.targetPosition = newTargetPosition;\n    return [a];\n  } // Case 2:\n  //\n  // Split happened between the moved nodes. In this case two ranges to move need to be generated.\n  //\n  // Characters `ozba` are moved to the end of paragraph `Xyz` but split happened.\n  // <p>F[oz|ba]r</p><p>Xyz</p>\n  //\n  // After split:\n  // <p>F[oz</p><p>ba]r</p><p>Xyz</p>\n  //\n  // Correct ranges:\n  // <p>F[oz]</p><p>[ba]r</p><p>Xyz</p>\n  //\n  // After move:\n  // <p>F</p><p>r</p><p>Xyzozba</p>\n  //\n\n\n  if (moveRange.start.hasSameParentAs(b.splitPosition) && moveRange.containsPosition(b.splitPosition)) {\n    var rightRange = new Range(b.splitPosition, moveRange.end);\n    rightRange = rightRange._getTransformedBySplitOperation(b);\n    var _ranges = [new Range(moveRange.start, b.splitPosition), rightRange];\n    return _makeMoveOperationsFromRanges(_ranges, newTargetPosition);\n  } // Case 3:\n  //\n  // Move operation targets at the split position. We need to decide if the nodes should be inserted\n  // at the end of the split element or at the beginning of the new element.\n  //\n\n\n  if (a.targetPosition.isEqual(b.splitPosition) && context.abRelation == 'insertAtSource') {\n    newTargetPosition = b.moveTargetPosition;\n  } // Case 4:\n  //\n  // Move operation targets just after the split element. We need to decide if the nodes should be inserted\n  // between two parts of split element, or after the new element.\n  //\n  // Split at `|`, while move operation moves `<p>Xyz</p>` and targets at `^`:\n  // <p>Foo|bar</p>^<p>baz</p>\n  // <p>Foo</p>^<p>bar</p><p>baz</p> or <p>Foo</p><p>bar</p>^<p>baz</p>?\n  //\n  // If there is no contextual information between operations (for example, they come from collaborative\n  // editing), we don't want to put some unrelated content (move) between parts of related content (split parts).\n  // However, if the split is from undo, in the past, the moved content might be targeting between the\n  // split parts, meaning that was exactly user's intention:\n  //\n  // <p>Foo</p>^<p>bar</p>\t\t<--- original situation, in \"past\".\n  // <p>Foobar</p>^\t\t\t\t<--- after merge target position is transformed.\n  // <p>Foo|bar</p>^\t\t\t\t<--- then the merge is undone, and split happens, which leads us to current situation.\n  //\n  // In this case it is pretty clear that the intention was to put new paragraph between those nodes,\n  // so we need to transform accordingly. We can detect this scenario thanks to relations.\n  //\n\n\n  if (a.targetPosition.isEqual(b.insertionPosition) && context.abRelation == 'insertBetween') {\n    newTargetPosition = a.targetPosition;\n  } // The default case.\n  //\n\n\n  var transformed = moveRange._getTransformedBySplitOperation(b);\n\n  var ranges = [transformed]; // Case 5:\n  //\n  // Moved range contains graveyard element used by split operation. Add extra move operation to the result.\n  //\n\n  if (b.graveyardPosition) {\n    var movesGraveyardElement = moveRange.start.isEqual(b.graveyardPosition) || moveRange.containsPosition(b.graveyardPosition);\n\n    if (a.howMany > 1 && movesGraveyardElement) {\n      ranges.push(Range._createFromPositionAndShift(b.insertionPosition, 1));\n    }\n  }\n\n  return _makeMoveOperationsFromRanges(ranges, newTargetPosition);\n});\nsetTransformation(MoveOperation, MergeOperation, function (a, b, context) {\n  var movedRange = Range._createFromPositionAndShift(a.sourcePosition, a.howMany);\n\n  if (b.deletionPosition.hasSameParentAs(a.sourcePosition) && movedRange.containsPosition(b.sourcePosition)) {\n    if (a.type == 'remove') {\n      // Case 1:\n      //\n      // The element to remove got merged.\n      //\n      // Merge operation does support merging elements which are not siblings. So it would not be a problem\n      // from technical point of view. However, if the element was removed, the intention of the user\n      // deleting it was to have it all deleted. From user experience point of view, moving back the\n      // removed nodes might be unexpected. This means that in this scenario we will reverse merging and remove the element.\n      //\n      if (!context.aWasUndone) {\n        var results = [];\n        var gyMoveSource = b.graveyardPosition.clone();\n        var splitNodesMoveSource = b.targetPosition.clone();\n\n        if (a.howMany > 1) {\n          results.push(new MoveOperation(a.sourcePosition, a.howMany - 1, a.targetPosition, 0));\n          gyMoveSource = gyMoveSource._getTransformedByInsertion(a.targetPosition, a.howMany - 1);\n          splitNodesMoveSource = splitNodesMoveSource._getTransformedByMove(a.sourcePosition, a.targetPosition, a.howMany - 1);\n        }\n\n        var gyMoveTarget = b.deletionPosition._getCombined(a.sourcePosition, a.targetPosition);\n\n        var gyMove = new MoveOperation(gyMoveSource, 1, gyMoveTarget, 0);\n        var targetPositionPath = gyMove.getMovedRangeStart().path.slice();\n        targetPositionPath.push(0);\n        var splitNodesMoveTarget = new Position(gyMove.targetPosition.root, targetPositionPath);\n        var splitNodesMove = new MoveOperation(splitNodesMoveSource, b.howMany, splitNodesMoveTarget, 0);\n        results.push(gyMove);\n        results.push(splitNodesMove);\n        return results;\n      }\n    } else {\n      // Case 2:\n      //\n      // The element to move got merged and it was the only element to move.\n      // In this case just don't do anything, leave the node in the graveyard. Without special case\n      // it would be a move operation that moves 0 nodes, so maybe it is better just to return no-op.\n      //\n      if (a.howMany == 1) {\n        if (!context.bWasUndone) {\n          return [new NoOperation(0)];\n        } else {\n          a.sourcePosition = b.graveyardPosition.clone();\n          a.targetPosition = a.targetPosition._getTransformedByMergeOperation(b);\n          return [a];\n        }\n      }\n    }\n  } // The default case.\n  //\n\n\n  var moveRange = Range._createFromPositionAndShift(a.sourcePosition, a.howMany);\n\n  var transformed = moveRange._getTransformedByMergeOperation(b);\n\n  a.sourcePosition = transformed.start;\n  a.howMany = transformed.end.offset - transformed.start.offset;\n  a.targetPosition = a.targetPosition._getTransformedByMergeOperation(b);\n  return [a];\n}); // -----------------------\n\nsetTransformation(RenameOperation, InsertOperation, function (a, b) {\n  a.position = a.position._getTransformedByInsertOperation(b);\n  return [a];\n});\nsetTransformation(RenameOperation, MergeOperation, function (a, b) {\n  // Case 1:\n  //\n  // Element to rename got merged, so it was moved to `b.graveyardPosition`.\n  //\n  if (a.position.isEqual(b.deletionPosition)) {\n    a.position = b.graveyardPosition.clone();\n    a.position.stickiness = 'toNext';\n    return [a];\n  }\n\n  a.position = a.position._getTransformedByMergeOperation(b);\n  return [a];\n});\nsetTransformation(RenameOperation, MoveOperation, function (a, b) {\n  a.position = a.position._getTransformedByMoveOperation(b);\n  return [a];\n});\nsetTransformation(RenameOperation, RenameOperation, function (a, b, context) {\n  if (a.position.isEqual(b.position)) {\n    if (context.aIsStrong) {\n      a.oldName = b.newName;\n    } else {\n      return [new NoOperation(0)];\n    }\n  }\n\n  return [a];\n});\nsetTransformation(RenameOperation, SplitOperation, function (a, b) {\n  // Case 1:\n  //\n  // The element to rename has been split. In this case, the new element should be also renamed.\n  //\n  // User decides to change the paragraph to a list item:\n  // <paragraph>Foobar</paragraph>\n  //\n  // However, in meantime, split happens:\n  // <paragraph>Foo</paragraph><paragraph>bar</paragraph>\n  //\n  // As a result, rename both elements:\n  // <listItem>Foo</listItem><listItem>bar</listItem>\n  //\n  var renamePath = a.position.path;\n  var splitPath = b.splitPosition.getParentPath();\n\n  if (compareArrays(renamePath, splitPath) == 'same' && !b.graveyardPosition) {\n    var extraRename = new RenameOperation(a.position.getShiftedBy(1), a.oldName, a.newName, 0);\n    return [a, extraRename];\n  } // The default case.\n  //\n\n\n  a.position = a.position._getTransformedBySplitOperation(b);\n  return [a];\n}); // -----------------------\n\nsetTransformation(RootAttributeOperation, RootAttributeOperation, function (a, b, context) {\n  if (a.root === b.root && a.key === b.key) {\n    if (!context.aIsStrong || a.newValue === b.newValue) {\n      return [new NoOperation(0)];\n    } else {\n      a.oldValue = b.newValue;\n    }\n  }\n\n  return [a];\n}); // -----------------------\n\nsetTransformation(SplitOperation, InsertOperation, function (a, b) {\n  // The default case.\n  //\n  if (a.splitPosition.hasSameParentAs(b.position) && a.splitPosition.offset < b.position.offset) {\n    a.howMany += b.howMany;\n  }\n\n  a.splitPosition = a.splitPosition._getTransformedByInsertOperation(b);\n  a.insertionPosition = SplitOperation.getInsertionPosition(a.splitPosition);\n  return [a];\n});\nsetTransformation(SplitOperation, MergeOperation, function (a, b, context) {\n  // Case 1:\n  //\n  // Split element got merged. If two different elements were merged, clients will have different content.\n  //\n  // Example. Merge at `{}`, split at `[]`:\n  // <heading>Foo</heading>{}<paragraph>B[]ar</paragraph>\n  //\n  // On merge side it will look like this:\n  // <heading>FooB[]ar</heading>\n  // <heading>FooB</heading><heading>ar</heading>\n  //\n  // On split side it will look like this:\n  // <heading>Foo</heading>{}<paragraph>B</paragraph><paragraph>ar</paragraph>\n  // <heading>FooB</heading><paragraph>ar</paragraph>\n  //\n  // Clearly, the second element is different for both clients.\n  //\n  // We could use the removed merge element from graveyard as a split element but then clients would have a different\n  // model state (in graveyard), because the split side client would still have an element in graveyard (removed by merge).\n  //\n  // To overcome this, in `SplitOperation` x `MergeOperation` transformation we will add additional `SplitOperation`\n  // in the graveyard, which will actually clone the merged-and-deleted element. Then, that cloned element will be\n  // used for splitting. Example below.\n  //\n  // Original state:\n  // <heading>Foo</heading>{}<paragraph>B[]ar</paragraph>\n  //\n  // Merge side client:\n  //\n  // After merge:\n  // <heading>FooB[]ar</heading>                                 graveyard: <paragraph></paragraph>\n  //\n  // Extra split:\n  // <heading>FooB[]ar</heading>                                 graveyard: <paragraph></paragraph><paragraph></paragraph>\n  //\n  // Use the \"cloned\" element from graveyard:\n  // <heading>FooB</heading><paragraph>ar</paragraph>            graveyard: <paragraph></paragraph>\n  //\n  // Split side client:\n  //\n  // After split:\n  // <heading>Foo</heading>{}<paragraph>B</paragraph><paragraph>ar</paragraph>\n  //\n  // After merge:\n  // <heading>FooB</heading><paragraph>ar</paragraph>            graveyard: <paragraph></paragraph>\n  //\n  // This special case scenario only applies if the original split operation clones the split element.\n  // If the original split operation has `graveyardPosition` set, it all doesn't have sense because split operation\n  // knows exactly which element it should use. So there would be no original problem with different contents.\n  //\n  // Additionally, the special case applies only if the merge wasn't already undone.\n  //\n  if (!a.graveyardPosition && !context.bWasUndone && a.splitPosition.hasSameParentAs(b.sourcePosition)) {\n    var splitPath = b.graveyardPosition.path.slice();\n    splitPath.push(0);\n    var splitPosition = new Position(b.graveyardPosition.root, splitPath);\n    var insertionPosition = SplitOperation.getInsertionPosition(new Position(b.graveyardPosition.root, splitPath));\n    var additionalSplit = new SplitOperation(splitPosition, 0, null, 0);\n    additionalSplit.insertionPosition = insertionPosition;\n    a.splitPosition = a.splitPosition._getTransformedByMergeOperation(b);\n    a.insertionPosition = SplitOperation.getInsertionPosition(a.splitPosition);\n    a.graveyardPosition = additionalSplit.insertionPosition.clone();\n    a.graveyardPosition.stickiness = 'toNext';\n    return [additionalSplit, a];\n  } // The default case.\n  //\n\n\n  if (a.splitPosition.hasSameParentAs(b.deletionPosition) && !a.splitPosition.isAfter(b.deletionPosition)) {\n    a.howMany--;\n  }\n\n  if (a.splitPosition.hasSameParentAs(b.targetPosition)) {\n    a.howMany += b.howMany;\n  }\n\n  a.splitPosition = a.splitPosition._getTransformedByMergeOperation(b);\n  a.insertionPosition = SplitOperation.getInsertionPosition(a.splitPosition);\n\n  if (a.graveyardPosition) {\n    a.graveyardPosition = a.graveyardPosition._getTransformedByMergeOperation(b);\n  }\n\n  return [a];\n});\nsetTransformation(SplitOperation, MoveOperation, function (a, b, context) {\n  var rangeToMove = Range._createFromPositionAndShift(b.sourcePosition, b.howMany);\n\n  if (a.graveyardPosition) {\n    // Case 1:\n    //\n    // Split operation graveyard node was moved. In this case move operation is stronger. Since graveyard element\n    // is already moved to the correct position, we need to only move the nodes after the split position.\n    // This will be done by `MoveOperation` instead of `SplitOperation`.\n    //\n    if (rangeToMove.start.isEqual(a.graveyardPosition) || rangeToMove.containsPosition(a.graveyardPosition)) {\n      var sourcePosition = a.splitPosition._getTransformedByMoveOperation(b);\n\n      var newParentPosition = a.graveyardPosition._getTransformedByMoveOperation(b);\n\n      var newTargetPath = newParentPosition.path.slice();\n      newTargetPath.push(0);\n      var newTargetPosition = new Position(newParentPosition.root, newTargetPath);\n      var moveOp = new MoveOperation(sourcePosition, a.howMany, newTargetPosition, 0);\n      return [moveOp];\n    }\n\n    a.graveyardPosition = a.graveyardPosition._getTransformedByMoveOperation(b);\n  } // Case 2:\n  //\n  // If the split position is inside the moved range, we need to shift the split position to a proper place.\n  // The position cannot be moved together with moved range because that would result in splitting of an incorrect element.\n  //\n  // Characters `bc` should be moved to the second paragraph while split position is between them:\n  // <paragraph>A[b|c]d</paragraph><paragraph>Xyz</paragraph>\n  //\n  // After move, new split position is incorrect:\n  // <paragraph>Ad</paragraph><paragraph>Xb|cyz</paragraph>\n  //\n  // Correct split position:\n  // <paragraph>A|d</paragraph><paragraph>Xbcyz</paragraph>\n  //\n  // After split:\n  // <paragraph>A</paragraph><paragraph>d</paragraph><paragraph>Xbcyz</paragraph>\n  //\n\n\n  if (a.splitPosition.hasSameParentAs(b.sourcePosition) && rangeToMove.containsPosition(a.splitPosition)) {\n    var howManyRemoved = b.howMany - (a.splitPosition.offset - b.sourcePosition.offset);\n    a.howMany -= howManyRemoved;\n\n    if (a.splitPosition.hasSameParentAs(b.targetPosition) && a.splitPosition.offset < b.targetPosition.offset) {\n      a.howMany += b.howMany;\n    }\n\n    a.splitPosition = b.sourcePosition.clone();\n    a.insertionPosition = SplitOperation.getInsertionPosition(a.splitPosition);\n    return [a];\n  } // Case 3:\n  //\n  // Split is at a position where nodes were moved.\n  //\n  // This is a scenario described in `MoveOperation` x `SplitOperation` transformation but from the\n  // \"split operation point of view\".\n  //\n\n\n  var splitAtTarget = a.splitPosition.isEqual(b.targetPosition);\n\n  if (splitAtTarget && (context.baRelation == 'insertAtSource' || context.abRelation == 'splitBefore')) {\n    a.howMany += b.howMany;\n    a.splitPosition = a.splitPosition._getTransformedByDeletion(b.sourcePosition, b.howMany);\n    a.insertionPosition = SplitOperation.getInsertionPosition(a.splitPosition);\n    return [a];\n  } // The default case.\n  // Don't change `howMany` if move operation does not really move anything.\n  //\n\n\n  if (!b.sourcePosition.isEqual(b.targetPosition)) {\n    if (a.splitPosition.hasSameParentAs(b.sourcePosition) && a.splitPosition.offset <= b.sourcePosition.offset) {\n      a.howMany -= b.howMany;\n    }\n\n    if (a.splitPosition.hasSameParentAs(b.targetPosition) && a.splitPosition.offset < b.targetPosition.offset) {\n      a.howMany += b.howMany;\n    }\n  } // Change position stickiness to force a correct transformation.\n\n\n  a.splitPosition.stickiness = 'toNone';\n  a.splitPosition = a.splitPosition._getTransformedByMoveOperation(b);\n  a.splitPosition.stickiness = 'toNext';\n\n  if (a.graveyardPosition) {\n    a.insertionPosition = a.insertionPosition._getTransformedByMoveOperation(b);\n  } else {\n    a.insertionPosition = SplitOperation.getInsertionPosition(a.splitPosition);\n  }\n\n  return [a];\n});\nsetTransformation(SplitOperation, SplitOperation, function (a, b, context) {\n  // Case 1:\n  //\n  // Split at the same position.\n  //\n  // If there already was a split at the same position as in `a` operation, it means that the intention\n  // conveyed by `a` operation has already been fulfilled and `a` should not do anything (to avoid double split).\n  //\n  // However, there is a difference if these are new splits or splits created by undo. These have different\n  // intentions. Also splits moving back different elements from graveyard have different intentions. They\n  // are just different operations.\n  //\n  // So we cancel split operation only if it was really identical.\n  //\n  if (a.splitPosition.isEqual(b.splitPosition)) {\n    if (!a.graveyardPosition && !b.graveyardPosition) {\n      return [new NoOperation(0)];\n    }\n\n    if (a.graveyardPosition && b.graveyardPosition && a.graveyardPosition.isEqual(b.graveyardPosition)) {\n      return [new NoOperation(0)];\n    }\n  } // Case 2:\n  //\n  // Same node is using to split different elements. This happens in undo when previously same element was merged to\n  // two different elements. This is described in `MergeOperation` x `MergeOperation` transformation.\n  //\n  // In this case we will follow the same logic. We will assume that `insertionPosition` is same for both\n  // split operations. This might not always be true but in the real cases that were experienced it was. After all,\n  // if these splits are reverses of merge operations that were merging the same element, then the `insertionPosition`\n  // should be same for both of those splits.\n  //\n  // Again, we will decide which operation is stronger by checking if split happens in graveyard or in non-graveyard root.\n  //\n\n\n  if (a.graveyardPosition && b.graveyardPosition && a.graveyardPosition.isEqual(b.graveyardPosition)) {\n    var aInGraveyard = a.splitPosition.root.rootName == '$graveyard';\n    var bInGraveyard = b.splitPosition.root.rootName == '$graveyard'; // If `aIsWeak` it means that `a` points to graveyard while `b` doesn't. Don't move nodes then.\n\n    var aIsWeak = aInGraveyard && !bInGraveyard; // If `bIsWeak` it means that `b` points to graveyard while `a` doesn't. Force moving nodes then.\n\n    var bIsWeak = bInGraveyard && !aInGraveyard; // Force move if `b` is weak or neither operation is weak but `a` is stronger through `context.aIsStrong`.\n\n    var forceMove = bIsWeak || !aIsWeak && context.aIsStrong;\n\n    if (forceMove) {\n      var result = []; // First we need to move any nodes split by `b` back to where they were.\n      // Do it only if `b` actually moved something.\n\n      if (b.howMany) {\n        result.push(new MoveOperation(b.moveTargetPosition, b.howMany, b.splitPosition, 0));\n      } // Then we need to move nodes from `a` split position to their new element.\n      // Do it only if `a` actually should move something.\n\n\n      if (a.howMany) {\n        result.push(new MoveOperation(a.splitPosition, a.howMany, a.moveTargetPosition, 0));\n      }\n\n      return result;\n    } else {\n      return [new NoOperation(0)];\n    }\n  }\n\n  if (a.graveyardPosition) {\n    a.graveyardPosition = a.graveyardPosition._getTransformedBySplitOperation(b);\n  } // Case 3:\n  //\n  // Position where operation `b` inserted a new node after split is the same as the operation `a` split position.\n  // As in similar cases, there is ambiguity if the split should be before the new node (created by `b`) or after.\n  //\n\n\n  if (a.splitPosition.isEqual(b.insertionPosition) && context.abRelation == 'splitBefore') {\n    a.howMany++;\n    return [a];\n  } // Case 4:\n  //\n  // This is a mirror to the case 2. above.\n  //\n\n\n  if (b.splitPosition.isEqual(a.insertionPosition) && context.baRelation == 'splitBefore') {\n    var newPositionPath = b.insertionPosition.path.slice();\n    newPositionPath.push(0);\n    var newPosition = new Position(b.insertionPosition.root, newPositionPath);\n    var moveOp = new MoveOperation(a.insertionPosition, 1, newPosition, 0);\n    return [a, moveOp];\n  } // The default case.\n  //\n\n\n  if (a.splitPosition.hasSameParentAs(b.splitPosition) && a.splitPosition.offset < b.splitPosition.offset) {\n    a.howMany -= b.howMany;\n  }\n\n  a.splitPosition = a.splitPosition._getTransformedBySplitOperation(b);\n  a.insertionPosition = SplitOperation.getInsertionPosition(a.splitPosition);\n  return [a];\n}); // Checks whether `MoveOperation` `targetPosition` is inside a node from the moved range of the other `MoveOperation`.\n//\n// @private\n// @param {module:engine/model/operation/moveoperation~MoveOperation} a\n// @param {module:engine/model/operation/moveoperation~MoveOperation} b\n// @returns {Boolean}\n\nfunction _moveTargetIntoMovedRange(a, b) {\n  return a.targetPosition._getTransformedByDeletion(b.sourcePosition, b.howMany) === null;\n} // Helper function for `MoveOperation` x `MoveOperation` transformation. Converts given ranges and target position to\n// move operations and returns them.\n//\n// Ranges and target position will be transformed on-the-fly when generating operations.\n//\n// Given `ranges` should be in the order of how they were in the original transformed operation.\n//\n// Given `targetPosition` is the target position of the first range from `ranges`.\n//\n// @private\n// @param {Array.<module:engine/model/range~Range>} ranges\n// @param {module:engine/model/position~Position} targetPosition\n// @returns {Array.<module:engine/model/operation/moveoperation~MoveOperation>}\n\n\nfunction _makeMoveOperationsFromRanges(ranges, targetPosition) {\n  // At this moment we have some ranges and a target position, to which those ranges should be moved.\n  // Order in `ranges` array is the go-to order of after transformation.\n  //\n  // We are almost done. We have `ranges` and `targetPosition` to make operations from.\n  // Unfortunately, those operations may affect each other. Precisely, first operation after move\n  // may affect source range and target position of second and third operation. Same with second\n  // operation affecting third.\n  //\n  // We need to fix those source ranges and target positions once again, before converting `ranges` to operations.\n  var operations = []; // Keep in mind that nothing will be transformed if there is just one range in `ranges`.\n\n  for (var i = 0; i < ranges.length; i++) {\n    // Create new operation out of a range and target position.\n    var range = ranges[i];\n    var op = new MoveOperation(range.start, range.end.offset - range.start.offset, // If the target is the end of the move range this operation doesn't really move anything.\n    // In this case, it is better for OT to use range start instead of range end.\n    targetPosition.isEqual(range.end) ? range.start : targetPosition, 0);\n    operations.push(op); // Transform other ranges by the generated operation.\n\n    for (var j = i + 1; j < ranges.length; j++) {\n      // All ranges in `ranges` array should be:\n      //\n      // * non-intersecting (these are part of original operation source range), and\n      // * `targetPosition` does not target into them (opposite would mean that transformed operation targets \"inside itself\").\n      //\n      // This means that the transformation will be \"clean\" and always return one result.\n      ranges[j] = ranges[j]._getTransformedByMove(op.sourcePosition, op.targetPosition, op.howMany)[0];\n    }\n\n    targetPosition = targetPosition._getTransformedByMove(op.sourcePosition, op.targetPosition, op.howMany);\n  }\n\n  return operations;\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module undo/basecommand\n */\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport { transformSets } from '@ckeditor/ckeditor5-engine/src/model/operation/transform';\n/**\n * Base class for undo feature commands: {@link module:undo/undocommand~UndoCommand} and {@link module:undo/redocommand~RedoCommand}.\n *\n * @protected\n * @extends module:core/command~Command\n */\n\nvar BaseCommand =\n/*#__PURE__*/\nfunction (_Command) {\n  _inherits(BaseCommand, _Command);\n\n  function BaseCommand(editor) {\n    var _this;\n\n    _classCallCheck(this, BaseCommand);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BaseCommand).call(this, editor));\n    /**\n     * Stack of items stored by the command. These are pairs of:\n     *\n     * * {@link module:engine/model/batch~Batch batch} saved by the command,\n     * * {@link module:engine/model/selection~Selection selection} state at the moment of saving the batch.\n     *\n     * @protected\n     * @member {Array} #_stack\n     */\n\n    _this._stack = [];\n    /**\n     * Stores all batches that were created by this command.\n     *\n     * @protected\n     * @member {WeakSet.<module:engine/model/batch~Batch>} #_createdBatches\n     */\n\n    _this._createdBatches = new WeakSet(); // Refresh state, so the command is inactive right after initialization.\n\n    _this.refresh();\n\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(BaseCommand, [{\n    key: \"refresh\",\n    value: function refresh() {\n      this.isEnabled = this._stack.length > 0;\n    }\n    /**\n     * Stores a batch in the command, together with the selection state of the {@link module:engine/model/document~Document document}\n     * created by the editor which this command is registered to.\n     *\n     * @param {module:engine/model/batch~Batch} batch The batch to add.\n     */\n\n  }, {\n    key: \"addBatch\",\n    value: function addBatch(batch) {\n      var docSelection = this.editor.model.document.selection;\n      var selection = {\n        ranges: docSelection.hasOwnRange ? Array.from(docSelection.getRanges()) : [],\n        isBackward: docSelection.isBackward\n      };\n\n      this._stack.push({\n        batch: batch,\n        selection: selection\n      });\n\n      this.refresh();\n    }\n    /**\n     * Removes all items from the stack.\n     */\n\n  }, {\n    key: \"clearStack\",\n    value: function clearStack() {\n      this._stack = [];\n      this.refresh();\n    }\n    /**\n     * Restores the {@link module:engine/model/document~Document#selection document selection} state after a batch was undone.\n     *\n     * @protected\n     * @param {Array.<module:engine/model/range~Range>} ranges Ranges to be restored.\n     * @param {Boolean} isBackward A flag describing whether the restored range was selected forward or backward.\n     * @param {Array.<module:engine/model/operation/operation~Operation>} operations Operations which has been applied\n     * since selection has been stored.\n     */\n\n  }, {\n    key: \"_restoreSelection\",\n    value: function _restoreSelection(ranges, isBackward, operations) {\n      var model = this.editor.model;\n      var document = model.document; // This will keep the transformed selection ranges.\n\n      var selectionRanges = []; // Transform all ranges from the restored selection.\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = ranges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var range = _step.value;\n          var transformed = transformSelectionRange(range, operations); // For each `range` from `ranges`, we take only one transformed range.\n          // This is because we want to prevent situation where single-range selection\n          // got transformed to multi-range selection. We will take the first range that\n          // is not in the graveyard.\n\n          var newRange = transformed.find(function (range) {\n            return range.start.root != document.graveyard;\n          }); // `transformedRange` might be `undefined` if transformed range ended up in graveyard.\n\n          if (newRange) {\n            selectionRanges.push(newRange);\n          }\n        } // `selectionRanges` may be empty if all ranges ended up in graveyard. If that is the case, do not restore selection.\n\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      if (selectionRanges.length) {\n        model.change(function (writer) {\n          writer.setSelection(selectionRanges, {\n            backward: isBackward\n          });\n        });\n      }\n    }\n    /**\n     * Undoes a batch by reversing that batch, transforming reversed batch and finally applying it.\n     * This is a helper method for {@link #execute}.\n     *\n     * @protected\n     * @param {module:engine/model/batch~Batch} batchToUndo The batch to be undone.\n     * @param {module:engine/model/batch~Batch} undoingBatch The batch that will contain undoing changes.\n     */\n\n  }, {\n    key: \"_undo\",\n    value: function _undo(batchToUndo, undoingBatch) {\n      var model = this.editor.model;\n      var document = model.document; // All changes done by the command execution will be saved as one batch.\n\n      this._createdBatches.add(undoingBatch);\n\n      var operationsToUndo = batchToUndo.operations.slice().filter(function (operation) {\n        return operation.isDocumentOperation;\n      });\n      operationsToUndo.reverse(); // We will process each operation from `batchToUndo`, in reverse order. If there were operations A, B and C in undone batch,\n      // we need to revert them in reverse order, so first C' (reversed C), then B', then A'.\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = operationsToUndo[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var operationToUndo = _step2.value;\n          var nextBaseVersion = operationToUndo.baseVersion + 1;\n          var historyOperations = Array.from(document.history.getOperations(nextBaseVersion));\n          var transformedSets = transformSets([operationToUndo.getReversed()], historyOperations, {\n            useRelations: true,\n            document: this.editor.model.document,\n            padWithNoOps: false\n          });\n          var reversedOperations = transformedSets.operationsA; // After reversed operation has been transformed by all history operations, apply it.\n\n          var _iteratorNormalCompletion3 = true;\n          var _didIteratorError3 = false;\n          var _iteratorError3 = undefined;\n\n          try {\n            for (var _iterator3 = reversedOperations[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n              var operation = _step3.value;\n              // Before applying, add the operation to the `undoingBatch`.\n              undoingBatch.addOperation(operation);\n              model.applyOperation(operation);\n              document.history.setOperationAsUndone(operationToUndo, operation);\n            }\n          } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n                _iterator3.return();\n              }\n            } finally {\n              if (_didIteratorError3) {\n                throw _iteratorError3;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n  }]);\n\n  return BaseCommand;\n}(Command); // Transforms given range `range` by given `operations`.\n// Returns an array containing one or more ranges, which are result of the transformation.\n\n\nexport { BaseCommand as default };\n\nfunction transformSelectionRange(range, operations) {\n  var transformed = range.getTransformedByOperations(operations); // After `range` got transformed, we have an array of ranges. Some of those\n  // ranges may be \"touching\" -- they can be next to each other and could be merged.\n  // First, we have to sort those ranges to assure that they are in order.\n\n  transformed.sort(function (a, b) {\n    return a.start.isBefore(b.start) ? -1 : 1;\n  }); // Then, we check if two consecutive ranges are touching.\n\n  for (var i = 1; i < transformed.length; i++) {\n    var a = transformed[i - 1];\n    var b = transformed[i];\n\n    if (a.end.isTouching(b.start)) {\n      // And join them together if they are.\n      a.end = b.end;\n      transformed.splice(i, 1);\n      i--;\n    }\n  }\n\n  return transformed;\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module undo/undocommand\n */\nimport BaseCommand from './basecommand';\n/**\n * The undo command stores {@link module:engine/model/batch~Batch batches} applied to the\n * {@link module:engine/model/document~Document document} and is able to undo a batch by reversing it and transforming by\n * batches from {@link module:engine/model/document~Document#history history} that happened after the reversed batch.\n *\n * The undo command also takes care of restoring the {@link module:engine/model/document~Document#selection document selection}.\n *\n * @extends module:undo/basecommand~BaseCommand\n */\n\nvar UndoCommand =\n/*#__PURE__*/\nfunction (_BaseCommand) {\n  _inherits(UndoCommand, _BaseCommand);\n\n  function UndoCommand() {\n    _classCallCheck(this, UndoCommand);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(UndoCommand).apply(this, arguments));\n  }\n\n  _createClass(UndoCommand, [{\n    key: \"execute\",\n\n    /**\n     * Executes the command. This method reverts a {@link module:engine/model/batch~Batch batch} added to the command's stack, transforms\n     * and applies the reverted version on the {@link module:engine/model/document~Document document} and removes the batch from the stack.\n     * Then, it restores the {@link module:engine/model/document~Document#selection document selection}.\n     *\n     * @fires execute\n     * @fires revert\n     * @param {module:engine/model/batch~Batch} [batch] A batch that should be undone. If not set, the last added batch will be undone.\n     */\n    value: function execute() {\n      var _this = this;\n\n      var batch = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      // If batch is not given, set `batchIndex` to the last index in command stack.\n      var batchIndex = batch ? this._stack.findIndex(function (a) {\n        return a.batch == batch;\n      }) : this._stack.length - 1;\n\n      var item = this._stack.splice(batchIndex, 1)[0];\n\n      var undoingBatch = this.editor.model.createBatch(); // All changes has to be done in one `enqueueChange` callback so other listeners will not\n      // step between consecutive operations, or won't do changes to the document before selection is properly restored.\n\n      this.editor.model.enqueueChange(undoingBatch, function () {\n        _this._undo(item.batch, undoingBatch);\n\n        var operations = _this.editor.model.document.history.getOperations(item.batch.baseVersion);\n\n        _this._restoreSelection(item.selection.ranges, item.selection.isBackward, operations);\n\n        _this.fire('revert', item.batch, undoingBatch);\n      });\n      this.refresh();\n    }\n  }]);\n\n  return UndoCommand;\n}(BaseCommand);\n/**\n * Fired when execution of the command reverts some batch.\n *\n * @event revert\n */\n\n\nexport { UndoCommand as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module undo/redocommand\n */\nimport BaseCommand from './basecommand';\n/**\n * The redo command stores {@link module:engine/model/batch~Batch batches} that were used to undo a batch by\n * {@link module:undo/undocommand~UndoCommand}. It is able to redo a previously undone batch by reversing the undoing\n * batches created by `UndoCommand`. The reversed batch is transformed by all the batches from\n * {@link module:engine/model/document~Document#history history} that happened after the reversed undo batch.\n *\n * The redo command also takes care of restoring the {@link module:engine/model/document~Document#selection document selection}.\n *\n * @extends module:undo/basecommand~BaseCommand\n */\n\nvar RedoCommand =\n/*#__PURE__*/\nfunction (_BaseCommand) {\n  _inherits(RedoCommand, _BaseCommand);\n\n  function RedoCommand() {\n    _classCallCheck(this, RedoCommand);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RedoCommand).apply(this, arguments));\n  }\n\n  _createClass(RedoCommand, [{\n    key: \"execute\",\n\n    /**\n     * Executes the command. This method reverts the last {@link module:engine/model/batch~Batch batch} added to\n     * the command's stack, applies the reverted and transformed version on the\n     * {@link module:engine/model/document~Document document} and removes the batch from the stack.\n     * Then, it restores the {@link module:engine/model/document~Document#selection document selection}.\n     *\n     * @fires execute\n     */\n    value: function execute() {\n      var _this = this;\n\n      var item = this._stack.pop();\n\n      var redoingBatch = this.editor.model.createBatch(); // All changes have to be done in one `enqueueChange` callback so other listeners will not step between consecutive\n      // operations, or won't do changes to the document before selection is properly restored.\n\n      this.editor.model.enqueueChange(redoingBatch, function () {\n        var lastOperation = item.batch.operations[item.batch.operations.length - 1];\n        var nextBaseVersion = lastOperation.baseVersion + 1;\n\n        var operations = _this.editor.model.document.history.getOperations(nextBaseVersion);\n\n        _this._restoreSelection(item.selection.ranges, item.selection.isBackward, operations);\n\n        _this._undo(item.batch, redoingBatch);\n      });\n      this.refresh();\n    }\n  }]);\n\n  return RedoCommand;\n}(BaseCommand);\n\nexport { RedoCommand as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module undo/undoediting\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport UndoCommand from './undocommand';\nimport RedoCommand from './redocommand';\n/**\n * The undo engine feature.\n *\n * It introduces the `'undo'` and `'redo'` commands to the editor.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar UndoEditing =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(UndoEditing, _Plugin);\n\n  /**\n   * @inheritDoc\n   */\n  function UndoEditing(editor) {\n    var _this;\n\n    _classCallCheck(this, UndoEditing);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UndoEditing).call(this, editor));\n    /**\n     * The command that manages undo {@link module:engine/model/batch~Batch batches} stack (history).\n     * Created and registered during the {@link #init feature initialization}.\n     *\n     * @private\n     * @member {module:undo/undocommand~UndoCommand} #_undoCommand\n     */\n\n    /**\n     * The command that manages redo {@link module:engine/model/batch~Batch batches} stack (history).\n     * Created and registered during the {@link #init feature initialization}.\n     *\n     * @private\n     * @member {module:undo/undocommand~UndoCommand} #_redoCommand\n     */\n\n    /**\n     * Keeps track of which batches were registered in undo.\n     *\n     * @private\n     * @member {WeakSet.<module:engine/model/batch~Batch>}\n     */\n\n    _this._batchRegistry = new WeakSet();\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(UndoEditing, [{\n    key: \"init\",\n    value: function init() {\n      var _this2 = this;\n\n      var editor = this.editor; // Create commands.\n\n      this._undoCommand = new UndoCommand(editor);\n      this._redoCommand = new RedoCommand(editor); // Register command to the editor.\n\n      editor.commands.add('undo', this._undoCommand);\n      editor.commands.add('redo', this._redoCommand);\n      this.listenTo(editor.model, 'applyOperation', function (evt, args) {\n        var operation = args[0]; // Do not register batch if the operation is not a document operation.\n        // This prevents from creating empty undo steps, where all operations where non-document operations.\n        // Non-document operations creates and alters content in detached tree fragments (for example, document fragments).\n        // Most of time this is preparing data before it is inserted into actual tree (for example during copy & paste).\n        // Such operations should not be reversed.\n\n        if (!operation.isDocumentOperation) {\n          return;\n        }\n\n        var batch = operation.batch; // If changes are not a part of a batch or this is not a new batch, omit those changes.\n\n        if (_this2._batchRegistry.has(batch) || batch.type == 'transparent') {\n          return;\n        } else {\n          if (_this2._redoCommand._createdBatches.has(batch)) {\n            // If this batch comes from `redoCommand`, add it to `undoCommand` stack.\n            _this2._undoCommand.addBatch(batch);\n          } else if (!_this2._undoCommand._createdBatches.has(batch)) {\n            // A default batch - these are new changes in the document, not introduced by undo feature.\n            // Add them to `undoCommand` stack and clear `redoCommand` stack.\n            _this2._undoCommand.addBatch(batch);\n\n            _this2._redoCommand.clearStack();\n          }\n        } // Add the batch to the registry so it will not be processed again.\n\n\n        _this2._batchRegistry.add(batch);\n      }, {\n        priority: 'highest'\n      });\n      this.listenTo(this._undoCommand, 'revert', function (evt, undoneBatch, undoingBatch) {\n        _this2._redoCommand.addBatch(undoingBatch);\n      });\n      editor.keystrokes.set('CTRL+Z', 'undo');\n      editor.keystrokes.set('CTRL+Y', 'redo');\n      editor.keystrokes.set('CTRL+SHIFT+Z', 'redo');\n    }\n  }]);\n\n  return UndoEditing;\n}(Plugin);\n\nexport { UndoEditing as default };","function _typeof(obj) {\n    if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {\n        _typeof = function _typeof(obj) {\n            return typeof obj;\n        };\n    } else {\n        _typeof = function _typeof(obj) {\n            return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n        };\n    }\n    return _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError('Cannot call a class as a function');\n    }\n}\nfunction _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if ('value' in descriptor)\n            descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps)\n        _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps)\n        _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === 'object' || typeof call === 'function')) {\n        return call;\n    }\n    return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError('this hasn\\'t been initialised - super() hasn\\'t been called');\n    }\n    return self;\n}\nfunction _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== 'function' && superClass !== null) {\n        throw new TypeError('Super expression must either be null or a function');\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass)\n        _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return _setPrototypeOf(o, p);\n}\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n/**\n * @module undo/undoui\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport undoIcon from '../theme/icons/undo.svg';\nimport redoIcon from '../theme/icons/redo.svg';\n/**\n * The undo UI feature. It introduces the `'undo'` and `'redo'` buttons to the editor.\n *\n * @extends module:core/plugin~Plugin\n */\nvar UndoUI = /*#__PURE__*/\nfunction (_Plugin) {\n    _inherits(UndoUI, _Plugin);\n    function UndoUI() {\n        _classCallCheck(this, UndoUI);\n        return _possibleConstructorReturn(this, _getPrototypeOf(UndoUI).apply(this, arguments));\n    }\n    _createClass(UndoUI, [\n        {\n            key: 'init',\n            /**\n     * @inheritDoc\n     */\n            value: function init() {\n                var editor = this.editor;\n                var t = editor.t;\n                this._addButton('undo', t('av'), 'CTRL+Z', undoIcon);\n                this._addButton('redo', t('aw'), 'CTRL+Y', redoIcon);\n            }    /**\n     * Creates a button for the specified command.\n     *\n     * @private\n     * @param {String} name Command name.\n     * @param {String} label Button label.\n     * @param {String} keystroke Command keystroke.\n     * @param {String} Icon Source of the icon.\n     */\n        },\n        {\n            key: '_addButton',\n            value: function _addButton(name, label, keystroke, Icon) {\n                var _this = this;\n                var editor = this.editor;\n                editor.ui.componentFactory.add(name, function (locale) {\n                    var command = editor.commands.get(name);\n                    var view = new ButtonView(locale);\n                    view.set({\n                        label: label,\n                        icon: Icon,\n                        keystroke: keystroke,\n                        tooltip: true\n                    });\n                    view.bind('isEnabled').to(command, 'isEnabled');\n                    _this.listenTo(view, 'execute', function () {\n                        return editor.execute(name);\n                    });\n                    return view;\n                });\n            }\n        }\n    ]);\n    return UndoUI;\n}(Plugin);\nexport {\n    UndoUI as default\n};","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module undo/undo\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport UndoEditing from './undoediting';\nimport UndoUI from './undoui';\n/**\n * The undo feature.\n *\n * This is a \"glue\" plugin which loads the {@link module:undo/undoediting~UndoEditing undo editing feature}\n * and {@link module:undo/undoui~UndoUI undo UI feature}.\n *\n * Below is the explanation of the undo mechanism working together with {@link module:engine/model/history~History History}:\n *\n * Whenever a {@link module:engine/model/operation/operation~Operation operation} is applied to the\n * {@link module:engine/model/document~Document document}, it is saved to `History` as is.\n * The {@link module:engine/model/batch~Batch batch} that owns that operation is also saved, in\n * {@link module:undo/undocommand~UndoCommand}, together with the selection that was present in the document before the\n * operation was applied. A batch is saved instead of the operation because changes are undone batch-by-batch, not operation-by-operation\n * and a batch is seen as one undo step.\n *\n * After some changes happen to the document, the `History` and `UndoCommand` stack can be represented as follows:\n *\n *\t\t    History                            Undo stack\n *\t\t==============             ==================================\n *\t\t[operation A1]                         [batch A]\n *\t\t[operation B1]                         [batch B]\n *\t\t[operation B2]                         [batch C]\n *\t\t[operation C1]\n *\t\t[operation C2]\n *\t\t[operation B3]\n *\t\t[operation C3]\n *\n * Where operations starting with the same letter are from same batch.\n *\n * Undoing a batch means that a set of operations which will reverse the effects of that batch needs to be generated.\n * For example, if a batch added several letters, undoing the batch should remove them. It is important to apply undoing\n * operations in the reversed order, so if a batch has operation `X`, `Y`, `Z`, reversed operations `Zr`, `Yr` and `Xr`\n * need to be applied. Otherwise reversed operation `Xr` would operate on a wrong document state, because operation `X`\n * does not know that operations `Y` and `Z` happened.\n *\n * After operations from an undone batch got {@link module:engine/model/operation/operation~Operation#getReversed reversed},\n * one needs to make sure if they are ready to be applied. In the scenario above, operation `C3` is the last operation and `C3r`\n * bases on up-to-date document state, so it can be applied to the document.\n *\n *\t\t     History                             Undo stack\n *\t\t=================             ==================================\n *\t\t[ operation A1  ]                      [  batch A  ]\n *\t\t[ operation B1  ]                      [  batch B  ]\n *\t\t[ operation B2  ]             [   processing undoing batch C   ]\n *\t\t[ operation C1  ]\n *\t\t[ operation C2  ]\n *\t\t[ operation B3  ]\n *\t\t[ operation C3  ]\n *\t\t[ operation C3r ]\n *\n * Next is operation `C2`, reversed to `C2r`. `C2r` bases on `C2`, so it bases on the wrong document state. It needs to be\n * transformed by operations from history that happened after it, so it \"knows\" about them. Let us assume that `C2' = C2r * B3 * C3 * C3r`,\n * where `*` means \"transformed by\". Rest of operations from that batch are processed in the same fashion.\n *\n *\t\t     History                             Undo stack                                      Redo stack\n *\t\t=================             ==================================             ==================================\n *\t\t[ operation A1  ]                      [  batch A  ]                                    [ batch Cr ]\n *\t\t[ operation B1  ]                      [  batch B  ]\n *\t\t[ operation B2  ]\n *\t\t[ operation C1  ]\n *\t\t[ operation C2  ]\n *\t\t[ operation B3  ]\n *\t\t[ operation C3  ]\n *\t\t[ operation C3r ]\n *\t\t[ operation C2' ]\n *\t\t[ operation C1' ]\n *\n * Selective undo works on the same basis, however, instead of undoing the last batch in the undo stack, any batch can be undone.\n * The same algorithm applies: operations from a batch (i.e. `A1`) are reversed and then transformed by operations stored in history.\n *\n * Redo also is very similar to undo. It has its own stack that is filled with undoing (reversed batches). Operations from\n * batch that is re-done are reversed-back, transformed in proper order and applied to the document.\n *\n *\t\t     History                             Undo stack                                      Redo stack\n *\t\t=================             ==================================             ==================================\n *\t\t[ operation A1  ]                      [  batch A  ]\n *\t\t[ operation B1  ]                      [  batch B  ]\n *\t\t[ operation B2  ]                      [ batch Crr ]\n *\t\t[ operation C1  ]\n *\t\t[ operation C2  ]\n *\t\t[ operation B3  ]\n *\t\t[ operation C3  ]\n *\t\t[ operation C3r ]\n *\t\t[ operation C2' ]\n *\t\t[ operation C1' ]\n *\t\t[ operation C1'r]\n *\t\t[ operation C2'r]\n *\t\t[ operation C3rr]\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar Undo =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(Undo, _Plugin);\n\n  function Undo() {\n    _classCallCheck(this, Undo);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Undo).apply(this, arguments));\n  }\n\n  _createClass(Undo, null, [{\n    key: \"requires\",\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return [UndoEditing, UndoUI];\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"pluginName\",\n    get: function get() {\n      return 'Undo';\n    }\n  }]);\n\n  return Undo;\n}(Plugin);\n\nexport { Undo as default };","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/position\n */\nimport global from './global';\nimport Rect from './rect';\nimport getPositionedAncestor from './getpositionedancestor';\nimport getBorderWidths from './getborderwidths';\nimport { isFunction } from 'lodash-es';\n/**\n * Calculates the `position: absolute` coordinates of a given element so it can be positioned with respect to the\n * target in the visually most efficient way, taking various restrictions like viewport or limiter geometry\n * into consideration.\n *\n *\t\t// The element which is to be positioned.\n *\t\tconst element = document.body.querySelector( '#toolbar' );\n *\n *\t\t// A target to which the element is positioned relatively.\n *\t\tconst target = document.body.querySelector( '#container' );\n *\n *\t\t// Finding the optimal coordinates for the positioning.\n *\t\tconst { left, top, name } = getOptimalPosition( {\n *\t\t\telement: element,\n *\t\t\ttarget: target,\n *\n * \t\t\t// The algorithm will chose among these positions to meet the requirements such\n * \t\t\t// as \"limiter\" element or \"fitInViewport\", set below. The positions are considered\n * \t\t\t// in the order of the array.\n *\t\t\tpositions: [\n *\t\t\t\t//\n *\t\t\t \t//\t[ Target ]\n *\t\t\t\t//\t+-----------------+\n *\t\t\t\t//\t|     Element     |\n *\t\t\t\t//\t+-----------------+\n *\t\t\t\t//\n *\t\t\t\ttargetRect => ( {\n *\t\t\t\t\ttop: targetRect.bottom,\n *\t\t\t\t\tleft: targetRect.left,\n *\t\t\t\t\tname: 'mySouthEastPosition'\n *\t\t\t\t} ),\n *\n *\t\t\t\t//\n *\t\t\t\t//\t+-----------------+\n *\t\t\t\t//\t|     Element     |\n *\t\t\t\t//\t+-----------------+\n *\t\t\t\t//\t[ Target ]\n *\t\t\t\t//\n *\t\t\t\t( targetRect, elementRect ) => ( {\n *\t\t\t\t\ttop: targetRect.top - elementRect.height,\n *\t\t\t\t\tleft: targetRect.left,\n *\t\t\t\t\tname: 'myNorthEastPosition'\n *\t\t\t\t} )\n *\t\t\t],\n *\n *\t\t\t// Find a position such guarantees the element remains within visible boundaries of <body>.\n *\t\t\tlimiter: document.body,\n *\n *\t\t\t// Find a position such guarantees the element remains within visible boundaries of the browser viewport.\n *\t\t\tfitInViewport: true\n *\t\t} );\n *\n *\t\t// The best position which fits into document.body and the viewport. May be useful\n *\t\t// to set proper class on the `element`.\n *\t\tconsole.log( name ); // -> \"myNorthEastPosition\"\n *\n *\t\t// Using the absolute coordinates which has been found to position the element\n *\t\t// as in the diagram depicting the \"myNorthEastPosition\" position.\n *\t\telement.style.top = top;\n *\t\telement.style.left = left;\n *\n * @param {module:utils/dom/position~Options} options Positioning options object.\n * @returns {module:utils/dom/position~Position}\n */\n\nexport function getOptimalPosition(_ref) {\n  var element = _ref.element,\n      target = _ref.target,\n      positions = _ref.positions,\n      limiter = _ref.limiter,\n      fitInViewport = _ref.fitInViewport;\n\n  // If the {@link module:utils/dom/position~Options#target} is a function, use what it returns.\n  // https://github.com/ckeditor/ckeditor5-utils/issues/157\n  if (isFunction(target)) {\n    target = target();\n  } // If the {@link module:utils/dom/position~Options#limiter} is a function, use what it returns.\n  // https://github.com/ckeditor/ckeditor5-ui/issues/260\n\n\n  if (isFunction(limiter)) {\n    limiter = limiter();\n  }\n\n  var positionedElementAncestor = getPositionedAncestor(element.parentElement);\n  var elementRect = new Rect(element);\n  var targetRect = new Rect(target);\n  var bestPosition;\n  var name; // If there are no limits, just grab the very first position and be done with that drama.\n\n  if (!limiter && !fitInViewport) {\n    var _getPosition = getPosition(positions[0], targetRect, elementRect);\n\n    var _getPosition2 = _slicedToArray(_getPosition, 2);\n\n    name = _getPosition2[0];\n    bestPosition = _getPosition2[1];\n  } else {\n    var limiterRect = limiter && new Rect(limiter).getVisible();\n    var viewportRect = fitInViewport && new Rect(global.window);\n\n    var _ref2 = getBestPosition(positions, targetRect, elementRect, limiterRect, viewportRect) || // If there's no best position found, i.e. when all intersections have no area because\n    // rects have no width or height, then just use the first available position.\n    getPosition(positions[0], targetRect, elementRect);\n\n    var _ref3 = _slicedToArray(_ref2, 2);\n\n    name = _ref3[0];\n    bestPosition = _ref3[1];\n  }\n\n  var _getAbsoluteRectCoord = getAbsoluteRectCoordinates(bestPosition),\n      left = _getAbsoluteRectCoord.left,\n      top = _getAbsoluteRectCoord.top;\n\n  if (positionedElementAncestor) {\n    var ancestorPosition = getAbsoluteRectCoordinates(new Rect(positionedElementAncestor));\n    var ancestorBorderWidths = getBorderWidths(positionedElementAncestor); // (https://github.com/ckeditor/ckeditor5-ui-default/issues/126)\n    // If there's some positioned ancestor of the panel, then its `Rect` must be taken into\n    // consideration. `Rect` is always relative to the viewport while `position: absolute` works\n    // with respect to that positioned ancestor.\n\n    left -= ancestorPosition.left;\n    top -= ancestorPosition.top; // (https://github.com/ckeditor/ckeditor5-utils/issues/139)\n    // If there's some positioned ancestor of the panel, not only its position must be taken into\n    // consideration (see above) but also its internal scrolls. Scroll have an impact here because `Rect`\n    // is relative to the viewport (it doesn't care about scrolling), while `position: absolute`\n    // must compensate that scrolling.\n\n    left += positionedElementAncestor.scrollLeft;\n    top += positionedElementAncestor.scrollTop; // (https://github.com/ckeditor/ckeditor5-utils/issues/139)\n    // If there's some positioned ancestor of the panel, then its `Rect` includes its CSS `borderWidth`\n    // while `position: absolute` positioning does not consider it.\n    // E.g. `{ position: absolute, top: 0, left: 0 }` means upper left corner of the element,\n    // not upper-left corner of its border.\n\n    left -= ancestorBorderWidths.left;\n    top -= ancestorBorderWidths.top;\n  }\n\n  return {\n    left: left,\n    top: top,\n    name: name\n  };\n} // For given position function, returns a corresponding `Rect` instance.\n//\n// @private\n// @param {Function} position A function returning {@link module:utils/dom/position~Position}.\n// @param {utils/dom/rect~Rect} targetRect A rect of the target.\n// @param {utils/dom/rect~Rect} elementRect A rect of positioned element.\n// @returns {Array} An array containing position name and its Rect.\n\nfunction getPosition(position, targetRect, elementRect) {\n  var _position = position(targetRect, elementRect),\n      left = _position.left,\n      top = _position.top,\n      name = _position.name;\n\n  return [name, elementRect.clone().moveTo(left, top)];\n} // For a given array of positioning functions, returns such that provides the best\n// fit of the `elementRect` into the `limiterRect` and `viewportRect`.\n//\n// @private\n// @param {module:utils/dom/position~Options#positions} positions Functions returning\n// {@link module:utils/dom/position~Position} to be checked, in the order of preference.\n// @param {utils/dom/rect~Rect} targetRect A rect of the {@link module:utils/dom/position~Options#target}.\n// @param {utils/dom/rect~Rect} elementRect A rect of positioned {@link module:utils/dom/position~Options#element}.\n// @param {utils/dom/rect~Rect} limiterRect A rect of the {@link module:utils/dom/position~Options#limiter}.\n// @param {utils/dom/rect~Rect} viewportRect A rect of the viewport.\n// @returns {Array} An array containing the name of the position and it's rect.\n\n\nfunction getBestPosition(positions, targetRect, elementRect, limiterRect, viewportRect) {\n  var maxLimiterIntersectArea = 0;\n  var maxViewportIntersectArea = 0;\n  var bestPositionRect;\n  var bestPositionName; // This is when element is fully visible.\n\n  var elementRectArea = elementRect.getArea();\n  positions.some(function (position) {\n    var _getPosition3 = getPosition(position, targetRect, elementRect),\n        _getPosition4 = _slicedToArray(_getPosition3, 2),\n        positionName = _getPosition4[0],\n        positionRect = _getPosition4[1];\n\n    var limiterIntersectArea;\n    var viewportIntersectArea;\n\n    if (limiterRect) {\n      if (viewportRect) {\n        // Consider only the part of the limiter which is visible in the viewport. So the limiter is getting limited.\n        var limiterViewportIntersectRect = limiterRect.getIntersection(viewportRect);\n\n        if (limiterViewportIntersectRect) {\n          // If the limiter is within the viewport, then check the intersection between that part of the\n          // limiter and actual position.\n          limiterIntersectArea = limiterViewportIntersectRect.getIntersectionArea(positionRect);\n        } else {\n          limiterIntersectArea = 0;\n        }\n      } else {\n        limiterIntersectArea = limiterRect.getIntersectionArea(positionRect);\n      }\n    }\n\n    if (viewportRect) {\n      viewportIntersectArea = viewportRect.getIntersectionArea(positionRect);\n    } // The only criterion: intersection with the viewport.\n\n\n    if (viewportRect && !limiterRect) {\n      if (viewportIntersectArea > maxViewportIntersectArea) {\n        setBestPosition();\n      }\n    } // The only criterion: intersection with the limiter.\n    else if (!viewportRect && limiterRect) {\n        if (limiterIntersectArea > maxLimiterIntersectArea) {\n          setBestPosition();\n        }\n      } // Two criteria: intersection with the viewport and the limiter visible in the viewport.\n      else {\n          if (viewportIntersectArea > maxViewportIntersectArea && limiterIntersectArea >= maxLimiterIntersectArea) {\n            setBestPosition();\n          } else if (viewportIntersectArea >= maxViewportIntersectArea && limiterIntersectArea > maxLimiterIntersectArea) {\n            setBestPosition();\n          }\n        }\n\n    function setBestPosition() {\n      maxViewportIntersectArea = viewportIntersectArea;\n      maxLimiterIntersectArea = limiterIntersectArea;\n      bestPositionRect = positionRect;\n      bestPositionName = positionName;\n    } // If a such position is found that element is fully container by the limiter then, obviously,\n    // there will be no better one, so finishing.\n\n\n    return limiterIntersectArea === elementRectArea;\n  });\n  return bestPositionRect ? [bestPositionName, bestPositionRect] : null;\n} // DOMRect (also Rect) works in a scroll–independent geometry but `position: absolute` doesn't.\n// This function converts Rect to `position: absolute` coordinates.\n//\n// @private\n// @param {utils/dom/rect~Rect} rect A rect to be converted.\n// @returns {Object} Object containing `left` and `top` properties, in absolute coordinates.\n\n\nfunction getAbsoluteRectCoordinates(_ref4) {\n  var left = _ref4.left,\n      top = _ref4.top;\n  var _global$window = global.window,\n      scrollX = _global$window.scrollX,\n      scrollY = _global$window.scrollY;\n  return {\n    left: left + scrollX,\n    top: top + scrollY\n  };\n}\n/**\n * The `getOptimalPosition` helper options.\n *\n * @interface module:utils/dom/position~Options\n */\n\n/**\n * Element that is to be positioned.\n *\n * @member {HTMLElement} #element\n */\n\n/**\n * Target with respect to which the `element` is to be positioned.\n *\n * @member {HTMLElement|Range|ClientRect|Rect|Function} #target\n */\n\n/**\n * An array of functions which return {@link module:utils/dom/position~Position} relative\n * to the `target`, in the order of preference.\n *\n * @member {Array.<Function>} #positions\n */\n\n/**\n * When set, the algorithm will chose position which fits the most in the\n * limiter's bounding rect.\n *\n * @member {HTMLElement|Range|ClientRect|Rect|Function} #limiter\n */\n\n/**\n * When set, the algorithm will chose such a position which fits `element`\n * the most inside visible viewport.\n *\n * @member {Boolean} #fitInViewport\n */\n\n/**\n * An object describing a position in `position: absolute` coordinate\n * system, along with position name.\n *\n * @typedef {Object} module:utils/dom/position~Position\n *\n * @property {Number} top Top position offset.\n * @property {Number} left Left position offset.\n * @property {String} name Name of the position.\n */","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/getpositionedancestor\n */\nimport global from './global';\n/**\n * For a given element, returns the nearest ancestor element which CSS position is not \"static\".\n *\n * @param {HTMLElement} element The native DOM element to be checked.\n * @returns {HTMLElement|null}\n */\n\nexport default function getPositionedAncestor(element) {\n  while (element && element.tagName.toLowerCase() != 'html') {\n    if (global.window.getComputedStyle(element).position != 'static') {\n      return element;\n    }\n\n    element = element.parentElement;\n  }\n\n  return null;\n}","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","\nvar content = require(\"!!../../../postcss-loader/src/index.js??ref--6-1!./heading.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"singleton\":true,\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../postcss-loader/src/index.js??ref--6-1!./heading.css\", function() {\n\t\tvar newContent = require(\"!!../../../postcss-loader/src/index.js??ref--6-1!./heading.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nexport default stubFalse;\n","import root from './_root.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nexport default cloneBuffer;\n","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M5.042 9.367l2.189 1.837a.75.75 0 0 1-.965 1.149l-3.788-3.18a.747.747 0 0 1-.21-.284.75.75 0 0 1 .17-.945L6.23 4.762a.75.75 0 1 1 .964 1.15L4.863 7.866h8.917A.75.75 0 0 1 14 7.9a4 4 0 1 1-1.477 7.718l.344-1.489a2.5 2.5 0 1 0 1.094-4.73l.008-.032H5.042z\\\"/></svg>\"","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M14.958 9.367l-2.189 1.837a.75.75 0 0 0 .965 1.149l3.788-3.18a.747.747 0 0 0 .21-.284.75.75 0 0 0-.17-.945L13.77 4.762a.75.75 0 1 0-.964 1.15l2.331 1.955H6.22A.75.75 0 0 0 6 7.9a4 4 0 1 0 1.477 7.718l-.344-1.489A2.5 2.5 0 1 1 6.039 9.4l-.008-.032h8.927z\\\"/></svg>\"","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M10.187 17H5.773c-.637 0-1.092-.138-1.364-.415-.273-.277-.409-.718-.409-1.323V4.738c0-.617.14-1.062.419-1.332.279-.27.73-.406 1.354-.406h4.68c.69 0 1.288.041 1.793.124.506.083.96.242 1.36.478.341.197.644.447.906.75a3.262 3.262 0 0 1 .808 2.162c0 1.401-.722 2.426-2.167 3.075C15.05 10.175 16 11.315 16 13.01a3.756 3.756 0 0 1-2.296 3.504 6.1 6.1 0 0 1-1.517.377c-.571.073-1.238.11-2 .11zm-.217-6.217H7v4.087h3.069c1.977 0 2.965-.69 2.965-2.072 0-.707-.256-1.22-.768-1.537-.512-.319-1.277-.478-2.296-.478zM7 5.13v3.619h2.606c.729 0 1.292-.067 1.69-.2a1.6 1.6 0 0 0 .91-.765c.165-.267.247-.566.247-.897 0-.707-.26-1.176-.778-1.409-.519-.232-1.31-.348-2.375-.348H7z\\\"/></svg>\"","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M9.586 14.633l.021.004c-.036.335.095.655.393.962.082.083.173.15.274.201h1.474a.6.6 0 1 1 0 1.2H5.304a.6.6 0 0 1 0-1.2h1.15c.474-.07.809-.182 1.005-.334.157-.122.291-.32.404-.597l2.416-9.55a1.053 1.053 0 0 0-.281-.823 1.12 1.12 0 0 0-.442-.296H8.15a.6.6 0 0 1 0-1.2h6.443a.6.6 0 1 1 0 1.2h-1.195c-.376.056-.65.155-.823.296-.215.175-.423.439-.623.79l-2.366 9.347z\\\"/></svg>\"","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M3 10.423a6.5 6.5 0 0 1 6.056-6.408l.038.67C6.448 5.423 5.354 7.663 5.22 10H9c.552 0 .5.432.5.986v4.511c0 .554-.448.503-1 .503h-5c-.552 0-.5-.449-.5-1.003v-4.574zm8 0a6.5 6.5 0 0 1 6.056-6.408l.038.67c-2.646.739-3.74 2.979-3.873 5.315H17c.552 0 .5.432.5.986v4.511c0 .554-.448.503-1 .503h-5c-.552 0-.5-.449-.5-1.003v-4.574z\\\"/></svg>\"","module.exports = \"<svg viewBox=\\\"0 0 10 10\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M.941 4.523a.75.75 0 1 1 1.06-1.06l3.006 3.005 3.005-3.005a.75.75 0 1 1 1.06 1.06l-3.549 3.55a.75.75 0 0 1-1.168-.136L.941 4.523z\\\"/></svg>\"","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M7 5.75c0 .414.336.75.75.75h9.5a.75.75 0 1 0 0-1.5h-9.5a.75.75 0 0 0-.75.75zM3.5 3v5H2V3.7H1v-1h2.5V3zM.343 17.857l2.59-3.257H2.92a.6.6 0 1 0-1.04 0H.302a2 2 0 1 1 3.995 0h-.001c-.048.405-.16.734-.333.988-.175.254-.59.692-1.244 1.312H4.3v1h-4l.043-.043zM7 14.75a.75.75 0 0 1 .75-.75h9.5a.75.75 0 1 1 0 1.5h-9.5a.75.75 0 0 1-.75-.75z\\\"/></svg>\"","module.exports = \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M7 5.75c0 .414.336.75.75.75h9.5a.75.75 0 1 0 0-1.5h-9.5a.75.75 0 0 0-.75.75zm-6 0C1 4.784 1.777 4 2.75 4c.966 0 1.75.777 1.75 1.75 0 .966-.777 1.75-1.75 1.75C1.784 7.5 1 6.723 1 5.75zm6 9c0 .414.336.75.75.75h9.5a.75.75 0 1 0 0-1.5h-9.5a.75.75 0 0 0-.75.75zm-6 0c0-.966.777-1.75 1.75-1.75.966 0 1.75.777 1.75 1.75 0 .966-.777 1.75-1.75 1.75-.966 0-1.75-.777-1.75-1.75z\\\"/></svg>\"","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/config\n */\nimport { isPlainObject } from 'lodash-es';\n/**\n * Handles a configuration dictionary.\n */\n\nvar Config =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of the {@link ~Config} class.\n   *\n   * @param {Object} [configurations] The initial configurations to be set. Usually, provided by the user.\n   * @param {Object} [defaultConfigurations] The default configurations. Usually, provided by the system.\n   */\n  function Config(configurations, defaultConfigurations) {\n    _classCallCheck(this, Config);\n\n    /**\n     * Store for the whole configuration.\n     *\n     * @private\n     * @member {Object}\n     */\n    this._config = {}; // Set default configuration.\n\n    if (defaultConfigurations) {\n      this.define(defaultConfigurations);\n    } // Set initial configuration.\n\n\n    if (configurations) {\n      this._setObjectToTarget(this._config, configurations);\n    }\n  }\n  /**\n   * Set configuration values.\n   *\n   * It accepts both a name/value pair or an object, which properties and values will be used to set\n   * configurations.\n   *\n   * It also accepts setting a \"deep configuration\" by using dots in the name. For example, `'resize.width'` sets\n   * the value for the `width` configuration in the `resize` subset.\n   *\n   *\t\tconfig.set( 'width', 500 );\n   *\t\tconfig.set( 'toolbar.collapsed', true );\n   *\n   *\t\t// Equivalent to:\n   *\t\tconfig.set( {\n   *\t\t\twidth: 500\n   *\t\t\ttoolbar: {\n   *\t\t\t\tcollapsed: true\n   *\t\t\t}\n   *\t\t} );\n   *\n   * Passing an object as the value will amend the configuration, not replace it.\n   *\n   *\t\tconfig.set( 'toolbar', {\n   *\t\t\tcollapsed: true,\n   *\t\t} );\n   *\n   *\t\tconfig.set( 'toolbar', {\n   *\t\t\tcolor: 'red',\n   *\t\t} );\n   *\n   *\t\tconfig.get( 'toolbar.collapsed' ); // true\n   *\t\tconfig.get( 'toolbar.color' ); // 'red'\n   *\n   * @param {String|Object} name The configuration name or an object from which take properties as\n   * configuration entries. Configuration names are case-sensitive.\n   * @param {*} value The configuration value. Used if a name is passed.\n   */\n\n\n  _createClass(Config, [{\n    key: \"set\",\n    value: function set(name, value) {\n      this._setToTarget(this._config, name, value);\n    }\n    /**\n     * Does exactly the same as {@link #set} with one exception – passed configuration extends\n     * existing one, but does not overwrite already defined values.\n     *\n     * This method is supposed to be called by plugin developers to setup plugin's configurations. It would be\n     * rarely used for other needs.\n     *\n     * @param {String|Object} name The configuration name or an object from which take properties as\n     * configuration entries. Configuration names are case-sensitive.\n     * @param {*} value The configuration value. Used if a name is passed.\n     */\n\n  }, {\n    key: \"define\",\n    value: function define(name, value) {\n      var isDefine = true;\n\n      this._setToTarget(this._config, name, value, isDefine);\n    }\n    /**\n     * Gets the value for a configuration entry.\n     *\n     *\t\tconfig.get( 'name' );\n     *\n     * Deep configurations can be retrieved by separating each part with a dot.\n     *\n     *\t\tconfig.get( 'toolbar.collapsed' );\n     *\n     * @param {String} name The configuration name. Configuration names are case-sensitive.\n     * @returns {*} The configuration value or `undefined` if the configuration entry was not found.\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(name) {\n      return this._getFromSource(this._config, name);\n    }\n    /**\n     * Saves passed configuration to the specified target (nested object).\n     *\n     * @private\n     * @param {Object} target Nested config object.\n     * @param {String|Object} name The configuration name or an object from which take properties as\n     * configuration entries. Configuration names are case-sensitive.\n     * @param {*} value The configuration value. Used if a name is passed.\n     * @param {Boolean} [isDefine=false] Define if passed configuration should overwrite existing one.\n     */\n\n  }, {\n    key: \"_setToTarget\",\n    value: function _setToTarget(target, name, value) {\n      var isDefine = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      // In case of an object, iterate through it and call `_setToTarget` again for each property.\n      if (isPlainObject(name)) {\n        this._setObjectToTarget(target, name, isDefine);\n\n        return;\n      } // The configuration name should be split into parts if it has dots. E.g. `resize.width` -> [`resize`, `width`].\n\n\n      var parts = name.split('.'); // Take the name of the configuration out of the parts. E.g. `resize.width` -> `width`.\n\n      name = parts.pop(); // Iterate over parts to check if currently stored configuration has proper structure.\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = parts[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var part = _step.value;\n\n          // If there is no object for specified part then create one.\n          if (!isPlainObject(target[part])) {\n            target[part] = {};\n          } // Nested object becomes a target.\n\n\n          target = target[part];\n        } // In case of value is an object.\n\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      if (isPlainObject(value)) {\n        // We take care of proper config structure.\n        if (!isPlainObject(target[name])) {\n          target[name] = {};\n        }\n\n        target = target[name]; // And iterate through this object calling `_setToTarget` again for each property.\n\n        this._setObjectToTarget(target, value, isDefine);\n\n        return;\n      } // Do nothing if we are defining configuration for non empty name.\n\n\n      if (isDefine && typeof target[name] != 'undefined') {\n        return;\n      }\n\n      target[name] = value;\n    }\n    /**\n     * Get specified configuration from specified source (nested object).\n     *\n     * @private\n     * @param {Object} source level of nested object.\n     * @param {String} name The configuration name. Configuration names are case-sensitive.\n     * @returns {*} The configuration value or `undefined` if the configuration entry was not found.\n     */\n\n  }, {\n    key: \"_getFromSource\",\n    value: function _getFromSource(source, name) {\n      // The configuration name should be split into parts if it has dots. E.g. `resize.width` -> [`resize`, `width`].\n      var parts = name.split('.'); // Take the name of the configuration out of the parts. E.g. `resize.width` -> `width`.\n\n      name = parts.pop(); // Iterate over parts to check if currently stored configuration has proper structure.\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = parts[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var part = _step2.value;\n\n          if (!isPlainObject(source[part])) {\n            source = null;\n            break;\n          } // Nested object becomes a source.\n\n\n          source = source[part];\n        } // Always returns undefined for non existing configuration\n\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return source ? source[name] : undefined;\n    }\n    /**\n     * Iterates through passed object and calls {@link #_setToTarget} method with object key and value for each property.\n     *\n     * @private\n     * @param {Object} target Nested config object.\n     * @param {Object} configuration Configuration data set\n     * @param {Boolean} [isDefine] Defines if passed configuration is default configuration or not.\n     */\n\n  }, {\n    key: \"_setObjectToTarget\",\n    value: function _setObjectToTarget(target, configuration, isDefine) {\n      var _this = this;\n\n      Object.keys(configuration).forEach(function (key) {\n        _this._setToTarget(target, key, configuration[key], isDefine);\n      });\n    }\n  }]);\n\n  return Config;\n}();\n\nexport { Config as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/rooteditableelement\n */\nimport EditableElement from './editableelement';\nvar rootNameSymbol = Symbol('rootName');\n/**\n * Class representing a single root in the data view. A root can be either {@link ~RootEditableElement#isReadOnly editable or read-only},\n * but in both cases it is called \"an editable\". Roots can contain other {@link module:engine/view/editableelement~EditableElement\n * editable elements} making them \"nested editables\".\n *\n * @extends module:engine/view/editableelement~EditableElement\n */\n\nvar RootEditableElement =\n/*#__PURE__*/\nfunction (_EditableElement) {\n  _inherits(RootEditableElement, _EditableElement);\n\n  /**\n   * Creates root editable element.\n   *\n   * @param {String} name Node name.\n   */\n  function RootEditableElement(name) {\n    var _this;\n\n    _classCallCheck(this, RootEditableElement);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RootEditableElement).call(this, name));\n    /**\n     * Name of this root inside {@link module:engine/view/document~Document} that is an owner of this root. If no\n     * other name is set, `main` name is used.\n     *\n     * @readonly\n     * @member {String}\n     */\n\n    _this.rootName = 'main';\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(RootEditableElement, [{\n    key: \"is\",\n    value: function is(type) {\n      var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (!name) {\n        return type == 'rootElement' || _get(_getPrototypeOf(RootEditableElement.prototype), \"is\", this).call(this, type);\n      } else {\n        return type == 'rootElement' && name == this.name || _get(_getPrototypeOf(RootEditableElement.prototype), \"is\", this).call(this, type, name);\n      }\n    }\n  }, {\n    key: \"rootName\",\n    get: function get() {\n      return this.getCustomProperty(rootNameSymbol);\n    },\n    set: function set(rootName) {\n      this._setCustomProperty(rootNameSymbol, rootName);\n    }\n    /**\n     * Overrides old element name and sets new one.\n     * This is needed because view roots are created before they are attached to the DOM.\n     * The name of the root element is temporary at this stage. It has to be changed when the\n     * view root element is attached to the DOM element.\n     *\n     * @protected\n     * @param {String} name The new name of element.\n     */\n\n  }, {\n    key: \"_name\",\n    set: function set(name) {\n      this.name = name;\n    }\n  }]);\n\n  return RootEditableElement;\n}(EditableElement);\n\nexport { RootEditableElement as default };","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/document\n */\nimport DocumentSelection from './documentselection';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\n/**\n * Document class creates an abstract layer over the content editable area, contains a tree of view elements and\n * {@link module:engine/view/documentselection~DocumentSelection view selection} associated with this document.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\n\nvar Document =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a Document instance.\n   */\n  function Document() {\n    _classCallCheck(this, Document);\n\n    /**\n     * Selection done on this document.\n     *\n     * @readonly\n     * @member {module:engine/view/documentselection~DocumentSelection} module:engine/view/document~Document#selection\n     */\n    this.selection = new DocumentSelection();\n    /**\n     * Roots of the view tree. Collection of the {@link module:engine/view/element~Element view elements}.\n     *\n     * View roots are created as a result of binding between {@link module:engine/view/document~Document#roots} and\n     * {@link module:engine/model/document~Document#roots} and this is handled by\n     * {@link module:engine/controller/editingcontroller~EditingController}, so to create view root we need to create\n     * model root using {@link module:engine/model/document~Document#createRoot}.\n     *\n     * @readonly\n     * @member {module:utils/collection~Collection} module:engine/view/document~Document#roots\n     */\n\n    this.roots = new Collection({\n      idProperty: 'rootName'\n    });\n    /**\n     * Defines whether document is in read-only mode.\n     *\n     * When document is read-ony then all roots are read-only as well and caret placed inside this root is hidden.\n     *\n     * @observable\n     * @member {Boolean} #isReadOnly\n     */\n\n    this.set('isReadOnly', false);\n    /**\n     * True if document is focused.\n     *\n     * This property is updated by the {@link module:engine/view/observer/focusobserver~FocusObserver}.\n     * If the {@link module:engine/view/observer/focusobserver~FocusObserver} is disabled this property will not change.\n     *\n     * @readonly\n     * @observable\n     * @member {Boolean} module:engine/view/document~Document#isFocused\n     */\n\n    this.set('isFocused', false);\n    /**\n     * True if composition is in progress inside the document.\n     *\n     * This property is updated by the {@link module:engine/view/observer/compositionobserver~CompositionObserver}.\n     * If the {@link module:engine/view/observer/compositionobserver~CompositionObserver} is disabled this property will not change.\n     *\n     * @readonly\n     * @observable\n     * @member {Boolean} module:engine/view/document~Document#isComposing\n     */\n\n    this.set('isComposing', false);\n    /**\n     * Post-fixer callbacks registered to the view document.\n     *\n     * @private\n     * @member {Set}\n     */\n\n    this._postFixers = new Set();\n  }\n  /**\n   * Gets a {@link module:engine/view/document~Document#roots view root element} with the specified name. If the name is not\n   * specific \"main\" root is returned.\n   *\n   * @param {String} [name='main'] Name of the root.\n   * @returns {module:engine/view/rooteditableelement~RootEditableElement|null} The view root element with the specified name\n   * or null when there is no root of given name.\n   */\n\n\n  _createClass(Document, [{\n    key: \"getRoot\",\n    value: function getRoot() {\n      var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'main';\n      return this.roots.get(name);\n    }\n    /**\n     * Used to register a post-fixer callback. A post-fixers mechanism allows to update view tree just before rendering\n     * to the DOM.\n     *\n     * Post-fixers are fired just after all changes from the outermost change block were applied but\n     * before the {@link module:engine/view/view~View#event:render render event} is fired. If a post-fixer callback made\n     * a change, it should return `true`. When this happens, all post-fixers are fired again to check if something else should\n     * not be fixed in the new document tree state.\n     *\n     * View post-fixers are useful when you wants to update view structure whenever it changes, for instance add some classes\n     * to elements based on the view structure or selection. However, is you need DOM elements to be already updated, use\n     * {@link module:engine/view/view~View#event:render render event}.\n     *\n     * As a parameter, a post-fixer callback receives a {@link module:engine/view/downcastwriter~DowncastWriter downcast writer}\n     * instance connected with the executed changes block.\n     *\n     * @param {Function} postFixer\n     */\n\n  }, {\n    key: \"registerPostFixer\",\n    value: function registerPostFixer(postFixer) {\n      this._postFixers.add(postFixer);\n    }\n    /**\n     * Performs post-fixer loops. Executes post-fixer callbacks as long as none of them has done any changes to the model.\n     *\n     * @protected\n     * @param {module:engine/view/downcastwriter~DowncastWriter} writer\n     */\n\n  }, {\n    key: \"_callPostFixers\",\n    value: function _callPostFixers(writer) {\n      var wasFixed = false;\n\n      do {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = this._postFixers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var callback = _step.value;\n            wasFixed = callback(writer);\n\n            if (wasFixed) {\n              break;\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      } while (wasFixed);\n    }\n    /**\n     * Event fired whenever document content layout changes. It is fired whenever content is\n     * {@link module:engine/view/view~View#event:render rendered}, but should be also fired by observers in case of\n     * other actions which may change layout, for instance when image loads.\n     *\n     * @event layoutChanged\n     */\n\n  }]);\n\n  return Document;\n}();\n\nexport { Document as default };\nmix(Document, ObservableMixin);\n/**\n * Enum representing type of the change.\n *\n * Possible values:\n *\n * * `children` - for child list changes,\n * * `attributes` - for element attributes changes,\n * * `text` - for text nodes changes.\n *\n * @typedef {String} module:engine/view/document~ChangeType\n */","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/emptyelement\n */\nimport Element from './element';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport Node from './node';\n/**\n * Empty element class. It is used to represent elements that cannot contain any child nodes (for example `<img>` elements).\n *\n * To create a new empty element use the\n * {@link module:engine/view/downcastwriter~DowncastWriter#createEmptyElement `downcastWriter#createEmptyElement()`} method.\n *\n * @extends module:engine/view/element~Element\n */\n\nvar EmptyElement =\n/*#__PURE__*/\nfunction (_Element) {\n  _inherits(EmptyElement, _Element);\n\n  /**\n   * Creates new instance of EmptyElement.\n   *\n   * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-emptyelement-cannot-add` when third parameter is passed,\n   * to inform that usage of EmptyElement is incorrect (adding child nodes to EmptyElement is forbidden).\n   *\n   * @see module:engine/view/downcastwriter~DowncastWriter#createEmptyElement\n   * @protected\n   * @param {String} name Node name.\n   * @param {Object|Iterable} [attributes] Collection of attributes.\n   */\n  function EmptyElement(name, attributes, children) {\n    var _this;\n\n    _classCallCheck(this, EmptyElement);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EmptyElement).call(this, name, attributes, children));\n    /**\n     * Returns `null` because filler is not needed for EmptyElements.\n     *\n     * @method #getFillerOffset\n     * @returns {null} Always returns null.\n     */\n\n    _this.getFillerOffset = getFillerOffset;\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(EmptyElement, [{\n    key: \"is\",\n    value: function is(type) {\n      var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (!name) {\n        return type == 'emptyElement' || _get(_getPrototypeOf(EmptyElement.prototype), \"is\", this).call(this, type);\n      } else {\n        return type == 'emptyElement' && name == this.name || _get(_getPrototypeOf(EmptyElement.prototype), \"is\", this).call(this, type, name);\n      }\n    }\n    /**\n     * Overrides {@link module:engine/view/element~Element#_insertChild} method.\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-emptyelement-cannot-add` to prevent\n     * adding any child nodes to EmptyElement.\n     *\n     * @protected\n     */\n\n  }, {\n    key: \"_insertChild\",\n    value: function _insertChild(index, nodes) {\n      if (nodes && (nodes instanceof Node || Array.from(nodes).length > 0)) {\n        /**\n         * Cannot add children to {@link module:engine/view/emptyelement~EmptyElement}.\n         *\n         * @error view-emptyelement-cannot-add\n         */\n        throw new CKEditorError('view-emptyelement-cannot-add: Cannot add child nodes to EmptyElement instance.');\n      }\n    }\n  }]);\n\n  return EmptyElement;\n}(Element); // Returns `null` because block filler is not needed for EmptyElements.\n//\n// @returns {null}\n\n\nexport { EmptyElement as default };\n\nfunction getFillerOffset() {\n  return null;\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/uielement\n */\nimport Element from './element';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport Node from './node';\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\n/**\n * UI element class. It should be used to represent editing UI which needs to be injected into the editing view\n * If possible, you should keep your UI outside the editing view. However, if that is not possible,\n * UI elements can be used.\n *\n * How a UI element is rendered is in your control (you pass a callback to\n * {@link module:engine/view/downcastwriter~DowncastWriter#createUIElement `downcastWriter#createUIElement()`}).\n * The editor will ignore your UI element – the selection cannot be placed in it, it is skipped (invisible) when\n * the user modifies the selection by using arrow keys and the editor does not listen to any mutations which\n * happen inside your UI elements.\n *\n * The limitation is that you cannot convert a model element to a UI element. UI elements need to be\n * created for {@link module:engine/model/markercollection~Marker markers} or as additinal elements\n * inside normal {@link module:engine/view/containerelement~ContainerElement container elements}.\n *\n * To create a new UI element use the\n * {@link module:engine/view/downcastwriter~DowncastWriter#createUIElement `downcastWriter#createUIElement()`} method.\n *\n * @extends module:engine/view/element~Element\n */\n\nvar UIElement =\n/*#__PURE__*/\nfunction (_Element) {\n  _inherits(UIElement, _Element);\n\n  /**\n   * Creates new instance of UIElement.\n   *\n   * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-uielement-cannot-add` when third parameter is passed,\n   * to inform that usage of UIElement is incorrect (adding child nodes to UIElement is forbidden).\n   *\n   * @see module:engine/view/downcastwriter~DowncastWriter#createUIElement\n   * @protected\n   * @param {String} name Node name.\n   * @param {Object|Iterable} [attributes] Collection of attributes.\n   */\n  function UIElement(name, attributes, children) {\n    var _this;\n\n    _classCallCheck(this, UIElement);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UIElement).call(this, name, attributes, children));\n    /**\n     * Returns `null` because filler is not needed for UIElements.\n     *\n     * @method #getFillerOffset\n     * @returns {null} Always returns null.\n     */\n\n    _this.getFillerOffset = getFillerOffset;\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(UIElement, [{\n    key: \"is\",\n    value: function is(type) {\n      var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (!name) {\n        return type == 'uiElement' || _get(_getPrototypeOf(UIElement.prototype), \"is\", this).call(this, type);\n      } else {\n        return type == 'uiElement' && name == this.name || _get(_getPrototypeOf(UIElement.prototype), \"is\", this).call(this, type, name);\n      }\n    }\n    /**\n     * Overrides {@link module:engine/view/element~Element#_insertChild} method.\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-uielement-cannot-add` to prevent adding any child nodes\n     * to UIElement.\n     */\n\n  }, {\n    key: \"_insertChild\",\n    value: function _insertChild(index, nodes) {\n      if (nodes && (nodes instanceof Node || Array.from(nodes).length > 0)) {\n        /**\n         * Cannot add children to {@link module:engine/view/uielement~UIElement}.\n         *\n         * @error view-uielement-cannot-add\n         */\n        throw new CKEditorError('view-uielement-cannot-add: Cannot add child nodes to UIElement instance.');\n      }\n    }\n    /**\n     * Renders this {@link module:engine/view/uielement~UIElement} to DOM. This method is called by\n     * {@link module:engine/view/domconverter~DomConverter}.\n     * Do not use inheritance to create custom rendering method, replace `render()` method instead:\n     *\n     *\t\tconst myUIElement = downcastWriter.createUIElement( 'span' );\n     *\t\tmyUIElement.render = function( domDocument ) {\n     *\t\t\tconst domElement = this.toDomElement( domDocument );\n     *\t\t\tdomElement.innerHTML = '<b>this is ui element</b>';\n     *\n     *\t\t\treturn domElement;\n     *\t\t};\n     *\n     * @param {Document} domDocument\n     * @returns {HTMLElement}\n     */\n\n  }, {\n    key: \"render\",\n    value: function render(domDocument) {\n      return this.toDomElement(domDocument);\n    }\n    /**\n     * Creates DOM element based on this view UIElement.\n     * Note that each time this method is called new DOM element is created.\n     *\n     * @param {Document} domDocument\n     * @returns {HTMLElement}\n     */\n\n  }, {\n    key: \"toDomElement\",\n    value: function toDomElement(domDocument) {\n      var domElement = domDocument.createElement(this.name);\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.getAttributeKeys()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var key = _step.value;\n          domElement.setAttribute(key, this.getAttribute(key));\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return domElement;\n    }\n  }]);\n\n  return UIElement;\n}(Element);\n/**\n * This function injects UI element handling to the given {@link module:engine/view/document~Document document}.\n *\n * A callback is added to {@link module:engine/view/document~Document#event:keydown document keydown event}.\n * The callback handles the situation when right arrow key is pressed and selection is collapsed before a UI element.\n * Without this handler, it would be impossible to \"jump over\" UI element using right arrow key.\n *\n * @param {module:engine/view/view~View} view View controller to which the quirks handling will be injected.\n */\n\n\nexport { UIElement as default };\nexport function injectUiElementHandling(view) {\n  view.document.on('keydown', function (evt, data) {\n    return jumpOverUiElement(evt, data, view.domConverter);\n  });\n} // Returns `null` because block filler is not needed for UIElements.\n//\n// @returns {null}\n\nfunction getFillerOffset() {\n  return null;\n} // Selection cannot be placed in a `UIElement`. Whenever it is placed there, it is moved before it. This\n// causes a situation when it is impossible to jump over `UIElement` using right arrow key, because the selection\n// ends up in ui element (in DOM) and is moved back to the left. This handler fixes this situation.\n\n\nfunction jumpOverUiElement(evt, data, domConverter) {\n  if (data.keyCode == keyCodes.arrowright) {\n    var domSelection = data.domTarget.ownerDocument.defaultView.getSelection();\n    var domSelectionCollapsed = domSelection.rangeCount == 1 && domSelection.getRangeAt(0).collapsed; // Jump over UI element if selection is collapsed or shift key is pressed. These are the cases when selection would extend.\n\n    if (domSelectionCollapsed || data.shiftKey) {\n      var domParent = domSelection.focusNode;\n      var domOffset = domSelection.focusOffset;\n      var viewPosition = domConverter.domPositionToView(domParent, domOffset); // In case if dom element is not converted to view or is not mapped or something. Happens for example in some tests.\n\n      if (viewPosition === null) {\n        return;\n      } // Skip all following ui elements.\n\n\n      var jumpedOverAnyUiElement = false;\n      var nextViewPosition = viewPosition.getLastMatchingPosition(function (value) {\n        if (value.item.is('uiElement')) {\n          // Remember that there was at least one ui element.\n          jumpedOverAnyUiElement = true;\n        } // Jump over ui elements, jump over empty attribute elements, move up from inside of attribute element.\n\n\n        if (value.item.is('uiElement') || value.item.is('attributeElement')) {\n          return true;\n        } // Don't jump over text or don't get out of container element.\n\n\n        return false;\n      }); // If anything has been skipped, fix position.\n      // This `if` could be possibly omitted but maybe it is better not to mess with DOM selection if not needed.\n\n      if (jumpedOverAnyUiElement) {\n        var newDomPosition = domConverter.viewPositionToDom(nextViewPosition);\n\n        if (domSelectionCollapsed) {\n          // Selection was collapsed, so collapse it at further position.\n          domSelection.collapse(newDomPosition.parent, newDomPosition.offset);\n        } else {\n          // Selection was not collapse, so extend it instead of collapsing.\n          domSelection.extend(newDomPosition.parent, newDomPosition.offset);\n        }\n      }\n    }\n  }\n}","function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module module:engine/view/downcastwriter\n */\nimport Position from './position';\nimport Range from './range';\nimport Selection from './selection';\nimport ContainerElement from './containerelement';\nimport AttributeElement from './attributeelement';\nimport EmptyElement from './emptyelement';\nimport UIElement from './uielement';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport DocumentFragment from './documentfragment';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\nimport Text from './text';\nimport EditableElement from './editableelement';\nimport { isPlainObject } from 'lodash-es';\n/**\n * View downcast writer.\n *\n * It provides a set of methods used to manipulate view nodes.\n *\n * Do not create an instance of this writer manually. To modify a view structure, use\n * the {@link module:engine/view/view~View#change `View#change()`} block.\n *\n * The `DowncastWriter` is designed to work with semantic views which are the views that were/are being downcasted from the model.\n * To work with ordinary views (e.g. parsed from a pasted content) use the\n * {@link module:engine/view/upcastwriter~UpcastWriter upcast writer}.\n *\n * Read more about changing the view in the {@glink framework/guides/architecture/editing-engine#changing-the-view Changing the view}\n * section of the {@glink framework/guides/architecture/editing-engine Editing engine architecture} guide.\n */\n\nvar DowncastWriter =\n/*#__PURE__*/\nfunction () {\n  function DowncastWriter(document) {\n    _classCallCheck(this, DowncastWriter);\n\n    /**\n     * @readonly\n     * @type {module:engine/view/document~Document}\n     */\n    this.document = document;\n    /**\n     * Holds references to the attribute groups that share the same {@link module:engine/view/attributeelement~AttributeElement#id id}.\n     * The keys are `id`s, the values are `Set`s holding {@link module:engine/view/attributeelement~AttributeElement}s.\n     *\n     * @private\n     * @type {Map.<String,Set>}\n     */\n\n    this._cloneGroups = new Map();\n  }\n  /**\n   * Sets {@link module:engine/view/documentselection~DocumentSelection selection's} ranges and direction to the\n   * specified location based on the given {@link module:engine/view/documentselection~DocumentSelection document selection},\n   * {@link module:engine/view/selection~Selection selection}, {@link module:engine/view/position~Position position},\n   * {@link module:engine/view/item~Item item}, {@link module:engine/view/range~Range range},\n   * an iterable of {@link module:engine/view/range~Range ranges} or null.\n   *\n   * Usage:\n   *\n   *\t\t// Sets selection to the given range.\n   *\t\tconst range = writer.createRange( start, end );\n   *\t\twriter.setSelection( range );\n   *\n   *\t\t// Sets backward selection to the given range.\n   *\t\tconst range = writer.createRange( start, end );\n   *\t\twriter.setSelection( range );\n   *\n   *\t\t// Sets selection to given ranges.\n   * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n   *\t\twriter.setSelection( range );\n   *\n   *\t\t// Sets selection to the other selection.\n   *\t\tconst otherSelection = writer.createSelection();\n   *\t\twriter.setSelection( otherSelection );\n   *\n   * \t\t// Sets collapsed selection at the given position.\n   *\t\tconst position = writer.createPositionFromPath( root, path );\n   *\t\twriter.setSelection( position );\n   *\n   * \t\t// Sets collapsed selection at the position of given item and offset.\n   *\t\tconst paragraph = writer.createContainerElement( 'paragraph' );\n   *\t\twriter.setSelection( paragraph, offset );\n   *\n   * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n  \t * that element and ends after the last child of that element.\n   *\n   * \t\twriter.setSelection( paragraph, 'in' );\n   *\n   * Creates a range on the {@link module:engine/view/item~Item item} which starts before the item and ends just after the item.\n   *\n   *\t\twriter.setSelection( paragraph, 'on' );\n   *\n   * \t\t// Removes all ranges.\n   *\t\twriter.setSelection( null );\n   *\n   * `DowncastWriter#setSelection()` allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n   *\n   *\t\t// Sets selection as backward.\n   *\t\twriter.setSelection( range, { backward: true } );\n   *\n   *\t\t// Sets selection as fake.\n   *\t\t// Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n   * \t\t// This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n   * \t\t// represented in other way, for example by applying proper CSS class.\n   *\t\twriter.setSelection( range, { fake: true } );\n   *\n   * \t\t// Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\n   * \t\t// (and be  properly handled by screen readers).\n   *\t\twriter.setSelection( range, { fake: true, label: 'foo' } );\n   *\n   * @param {module:engine/view/selection~Selection|module:engine/view/position~Position|\n   * Iterable.<module:engine/view/range~Range>|module:engine/view/range~Range|module:engine/view/item~Item|null} selectable\n   * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n   * @param {Object} [options]\n   * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n   * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n   * @param {String} [options.label] Label for the fake selection.\n   */\n\n\n  _createClass(DowncastWriter, [{\n    key: \"setSelection\",\n    value: function setSelection(selectable, placeOrOffset, options) {\n      this.document.selection._setTo(selectable, placeOrOffset, options);\n    }\n    /**\n     * Moves {@link module:engine/view/documentselection~DocumentSelection#focus selection's focus} to the specified location.\n     *\n     * The location can be specified in the same form as {@link module:engine/view/view~View#createPositionAt view.createPositionAt()}\n     * parameters.\n     *\n     * @param {module:engine/view/item~Item|module:engine/view/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n     * first parameter is a {@link module:engine/view/item~Item view item}.\n     */\n\n  }, {\n    key: \"setSelectionFocus\",\n    value: function setSelectionFocus(itemOrPosition, offset) {\n      this.document.selection._setFocus(itemOrPosition, offset);\n    }\n    /**\n     * Creates a new {@link module:engine/view/text~Text text node}.\n     *\n     *\t\twriter.createText( 'foo' );\n     *\n     * @param {String} data The text's data.\n     * @returns {module:engine/view/text~Text} The created text node.\n     */\n\n  }, {\n    key: \"createText\",\n    value: function createText(data) {\n      return new Text(data);\n    }\n    /**\n     * Creates new {@link module:engine/view/attributeelement~AttributeElement}.\n     *\n     *\t\twriter.createAttributeElement( 'strong' );\n     *\t\twriter.createAttributeElement( 'strong', { alignment: 'center' } );\n     *\n     *\t\t// Make `<a>` element contain other attributes element so the `<a>` element is not broken.\n     *\t\twriter.createAttributeElement( 'a', { href: 'foo.bar' }, { priority: 5 } );\n     *\n     *\t\t// Set `id` of a marker element so it is not joined or merged with \"normal\" elements.\n     *\t\twriter.createAttributeElement( 'span', { class: 'myMarker' }, { id: 'marker:my' } );\n     *\n     * @param {String} name Name of the element.\n     * @param {Object} [attributes] Element's attributes.\n     * @param {Object} [options] Element's options.\n     * @param {Number} [options.priority] Element's {@link module:engine/view/attributeelement~AttributeElement#priority priority}.\n     * @param {Number|String} [options.id] Element's {@link module:engine/view/attributeelement~AttributeElement#id id}.\n     * @returns {module:engine/view/attributeelement~AttributeElement} Created element.\n     */\n\n  }, {\n    key: \"createAttributeElement\",\n    value: function createAttributeElement(name, attributes) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var attributeElement = new AttributeElement(name, attributes);\n\n      if (options.priority) {\n        attributeElement._priority = options.priority;\n      }\n\n      if (options.id) {\n        attributeElement._id = options.id;\n      }\n\n      return attributeElement;\n    }\n    /**\n     * Creates new {@link module:engine/view/containerelement~ContainerElement}.\n     *\n     *\t\twriter.createContainerElement( 'paragraph' );\n     *\t\twriter.createContainerElement( 'paragraph', { alignment: 'center' } );\n     *\n     * @param {String} name Name of the element.\n     * @param {Object} [attributes] Elements attributes.\n     * @returns {module:engine/view/containerelement~ContainerElement} Created element.\n     */\n\n  }, {\n    key: \"createContainerElement\",\n    value: function createContainerElement(name, attributes) {\n      return new ContainerElement(name, attributes);\n    }\n    /**\n     * Creates new {@link module:engine/view/editableelement~EditableElement}.\n     *\n     *\t\twriter.createEditableElement( 'div' );\n     *\t\twriter.createEditableElement( 'div', { alignment: 'center' } );\n     *\n     * @param {String} name Name of the element.\n     * @param {Object} [attributes] Elements attributes.\n     * @returns {module:engine/view/editableelement~EditableElement} Created element.\n     */\n\n  }, {\n    key: \"createEditableElement\",\n    value: function createEditableElement(name, attributes) {\n      var editableElement = new EditableElement(name, attributes);\n      editableElement._document = this.document;\n      return editableElement;\n    }\n    /**\n     * Creates new {@link module:engine/view/emptyelement~EmptyElement}.\n     *\n     *\t\twriter.createEmptyElement( 'img' );\n     *\t\twriter.createEmptyElement( 'img', { alignment: 'center' } );\n     *\n     * @param {String} name Name of the element.\n     * @param {Object} [attributes] Elements attributes.\n     * @returns {module:engine/view/emptyelement~EmptyElement} Created element.\n     */\n\n  }, {\n    key: \"createEmptyElement\",\n    value: function createEmptyElement(name, attributes) {\n      return new EmptyElement(name, attributes);\n    }\n    /**\n     * Creates new {@link module:engine/view/uielement~UIElement}.\n     *\n     *\t\twriter.createUIElement( 'span' );\n     *\t\twriter.createUIElement( 'span', { alignment: 'center' } );\n     *\n     * Custom render function can be provided as third parameter:\n     *\n     *\t\twriter.createUIElement( 'span', null, function( domDocument ) {\n     *\t\t\tconst domElement = this.toDomElement( domDocument );\n     *\t\t\tdomElement.innerHTML = '<b>this is ui element</b>';\n     *\n     *\t\t\treturn domElement;\n     *\t\t} );\n     *\n     * @param {String} name Name of the element.\n     * @param {Object} [attributes] Elements attributes.\n     * @param {Function} [renderFunction] Custom render function.\n     * @returns {module:engine/view/uielement~UIElement} Created element.\n     */\n\n  }, {\n    key: \"createUIElement\",\n    value: function createUIElement(name, attributes, renderFunction) {\n      var uiElement = new UIElement(name, attributes);\n\n      if (renderFunction) {\n        uiElement.render = renderFunction;\n      }\n\n      return uiElement;\n    }\n    /**\n     * Adds or overwrite element's attribute with a specified key and value.\n     *\n     *\t\twriter.setAttribute( 'href', 'http://ckeditor.com', linkElement );\n     *\n     * @param {String} key Attribute key.\n     * @param {String} value Attribute value.\n     * @param {module:engine/view/element~Element} element\n     */\n\n  }, {\n    key: \"setAttribute\",\n    value: function setAttribute(key, value, element) {\n      element._setAttribute(key, value);\n    }\n    /**\n     * Removes attribute from the element.\n     *\n     *\t\twriter.removeAttribute( 'href', linkElement );\n     *\n     * @param {String} key Attribute key.\n     * @param {module:engine/view/element~Element} element\n     */\n\n  }, {\n    key: \"removeAttribute\",\n    value: function removeAttribute(key, element) {\n      element._removeAttribute(key);\n    }\n    /**\n     * Adds specified class to the element.\n     *\n     *\t\twriter.addClass( 'foo', linkElement );\n     *\t\twriter.addClass( [ 'foo', 'bar' ], linkElement );\n     *\n     * @param {Array.<String>|String} className\n     * @param {module:engine/view/element~Element} element\n     */\n\n  }, {\n    key: \"addClass\",\n    value: function addClass(className, element) {\n      element._addClass(className);\n    }\n    /**\n     * Removes specified class from the element.\n     *\n     *\t\twriter.removeClass( 'foo', linkElement );\n     *\t\twriter.removeClass( [ 'foo', 'bar' ], linkElement );\n     *\n     * @param {Array.<String>|String} className\n     * @param {module:engine/view/element~Element} element\n     */\n\n  }, {\n    key: \"removeClass\",\n    value: function removeClass(className, element) {\n      element._removeClass(className);\n    }\n    /**\n     * Adds style to the element.\n     *\n     *\t\twriter.setStyle( 'color', 'red', element );\n     *\t\twriter.setStyle( {\n     *\t\t\tcolor: 'red',\n     *\t\t\tposition: 'fixed'\n     *\t\t}, element );\n     *\n     * @param {String|Object} property Property name or object with key - value pairs.\n     * @param {String} [value] Value to set. This parameter is ignored if object is provided as the first parameter.\n     * @param {module:engine/view/element~Element} element Element to set styles on.\n     */\n\n  }, {\n    key: \"setStyle\",\n    value: function setStyle(property, value, element) {\n      if (isPlainObject(property) && element === undefined) {\n        element = value;\n      }\n\n      element._setStyle(property, value);\n    }\n    /**\n     * Removes specified style from the element.\n     *\n     *\t\twriter.removeStyle( 'color', element );  // Removes 'color' style.\n     *\t\twriter.removeStyle( [ 'color', 'border-top' ], element ); // Removes both 'color' and 'border-top' styles.\n     *\n     * @param {Array.<String>|String} property\n     * @param {module:engine/view/element~Element} element\n     */\n\n  }, {\n    key: \"removeStyle\",\n    value: function removeStyle(property, element) {\n      element._removeStyle(property);\n    }\n    /**\n     * Sets a custom property on element. Unlike attributes, custom properties are not rendered to the DOM,\n     * so they can be used to add special data to elements.\n     *\n     * @param {String|Symbol} key\n     * @param {*} value\n     * @param {module:engine/view/element~Element} element\n     */\n\n  }, {\n    key: \"setCustomProperty\",\n    value: function setCustomProperty(key, value, element) {\n      element._setCustomProperty(key, value);\n    }\n    /**\n     * Removes a custom property stored under the given key.\n     *\n     * @param {String|Symbol} key\n     * @param {module:engine/view/element~Element} element\n     * @returns {Boolean} Returns true if property was removed.\n     */\n\n  }, {\n    key: \"removeCustomProperty\",\n    value: function removeCustomProperty(key, element) {\n      return element._removeCustomProperty(key);\n    }\n    /**\n     * Breaks attribute nodes at provided position or at boundaries of provided range. It breaks attribute elements inside\n     * up to a container element.\n     *\n     * In following examples `<p>` is a container, `<b>` and `<u>` are attribute nodes:\n     *\n     *        <p>foo<b><u>bar{}</u></b></p> -> <p>foo<b><u>bar</u></b>[]</p>\n     *        <p>foo<b><u>{}bar</u></b></p> -> <p>foo{}<b><u>bar</u></b></p>\n     *        <p>foo<b><u>b{}ar</u></b></p> -> <p>foo<b><u>b</u></b>[]<b><u>ar</u></b></p>\n     *        <p><b>fo{o</b><u>ba}r</u></p> -> <p><b>fo</b><b>o</b><u>ba</u><u>r</u></b></p>\n     *\n     * **Note:** {@link module:engine/view/documentfragment~DocumentFragment DocumentFragment} is treated like a container.\n     *\n     * **Note:** Difference between {@link module:engine/view/downcastwriter~DowncastWriter#breakAttributes breakAttributes} and\n     * {@link module:engine/view/downcastwriter~DowncastWriter#breakContainer breakContainer} is that `breakAttributes` breaks all\n     * {@link module:engine/view/attributeelement~AttributeElement attribute elements} that are ancestors of given `position`,\n     * up to the first encountered {@link module:engine/view/containerelement~ContainerElement container element}.\n     * `breakContainer` assumes that given `position` is directly in container element and breaks that container element.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container`\n     * when {@link module:engine/view/range~Range#start start}\n     * and {@link module:engine/view/range~Range#end end} positions of a passed range are not placed inside same parent container.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-cannot-break-empty-element`\n     * when trying to break attributes\n     * inside {@link module:engine/view/emptyelement~EmptyElement EmptyElement}.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-cannot-break-ui-element`\n     * when trying to break attributes\n     * inside {@link module:engine/view/uielement~UIElement UIElement}.\n     *\n     * @see module:engine/view/attributeelement~AttributeElement\n     * @see module:engine/view/containerelement~ContainerElement\n     * @see module:engine/view/downcastwriter~DowncastWriter#breakContainer\n     * @param {module:engine/view/position~Position|module:engine/view/range~Range} positionOrRange Position where\n     * to break attribute elements.\n     * @returns {module:engine/view/position~Position|module:engine/view/range~Range} New position or range, after breaking the attribute\n     * elements.\n     */\n\n  }, {\n    key: \"breakAttributes\",\n    value: function breakAttributes(positionOrRange) {\n      if (positionOrRange instanceof Position) {\n        return this._breakAttributes(positionOrRange);\n      } else {\n        return this._breakAttributesRange(positionOrRange);\n      }\n    }\n    /**\n     * Breaks {@link module:engine/view/containerelement~ContainerElement container view element} into two, at the given position. Position\n     * has to be directly inside container element and cannot be in root. Does not break if position is at the beginning\n     * or at the end of it's parent element.\n     *\n     *        <p>foo^bar</p> -> <p>foo</p><p>bar</p>\n     *        <div><p>foo</p>^<p>bar</p></div> -> <div><p>foo</p></div><div><p>bar</p></div>\n     *        <p>^foobar</p> -> ^<p>foobar</p>\n     *        <p>foobar^</p> -> <p>foobar</p>^\n     *\n     * **Note:** Difference between {@link module:engine/view/downcastwriter~DowncastWriter#breakAttributes breakAttributes} and\n     * {@link module:engine/view/downcastwriter~DowncastWriter#breakContainer breakContainer} is that `breakAttributes` breaks all\n     * {@link module:engine/view/attributeelement~AttributeElement attribute elements} that are ancestors of given `position`,\n     * up to the first encountered {@link module:engine/view/containerelement~ContainerElement container element}.\n     * `breakContainer` assumes that given `position` is directly in container element and breaks that container element.\n     *\n     * @see module:engine/view/attributeelement~AttributeElement\n     * @see module:engine/view/containerelement~ContainerElement\n     * @see module:engine/view/downcastwriter~DowncastWriter#breakAttributes\n     * @param {module:engine/view/position~Position} position Position where to break element.\n     * @returns {module:engine/view/position~Position} Position between broken elements. If element has not been broken,\n     * the returned position is placed either before it or after it.\n     */\n\n  }, {\n    key: \"breakContainer\",\n    value: function breakContainer(position) {\n      var element = position.parent;\n\n      if (!element.is('containerElement')) {\n        /**\n         * Trying to break an element which is not a container element.\n         *\n         * @error view-writer-break-non-container-element\n         */\n        throw new CKEditorError('view-writer-break-non-container-element: Trying to break an element which is not a container element.');\n      }\n\n      if (!element.parent) {\n        /**\n         * Trying to break root element.\n         *\n         * @error view-writer-break-root\n         */\n        throw new CKEditorError('view-writer-break-root: Trying to break root element.');\n      }\n\n      if (position.isAtStart) {\n        return Position._createBefore(element);\n      } else if (!position.isAtEnd) {\n        var newElement = element._clone(false);\n\n        this.insert(Position._createAfter(element), newElement);\n        var sourceRange = new Range(position, Position._createAt(element, 'end'));\n        var targetPosition = new Position(newElement, 0);\n        this.move(sourceRange, targetPosition);\n      }\n\n      return Position._createAfter(element);\n    }\n    /**\n     * Merges {@link module:engine/view/attributeelement~AttributeElement attribute elements}. It also merges text nodes if needed.\n     * Only {@link module:engine/view/attributeelement~AttributeElement#isSimilar similar} attribute elements can be merged.\n     *\n     * In following examples `<p>` is a container and `<b>` is an attribute element:\n     *\n     *        <p>foo[]bar</p> -> <p>foo{}bar</p>\n     *        <p><b>foo</b>[]<b>bar</b></p> -> <p><b>foo{}bar</b></p>\n     *        <p><b foo=\"bar\">a</b>[]<b foo=\"baz\">b</b></p> -> <p><b foo=\"bar\">a</b>[]<b foo=\"baz\">b</b></p>\n     *\n     * It will also take care about empty attributes when merging:\n     *\n     *        <p><b>[]</b></p> -> <p>[]</p>\n     *        <p><b>foo</b><i>[]</i><b>bar</b></p> -> <p><b>foo{}bar</b></p>\n     *\n     * **Note:** Difference between {@link module:engine/view/downcastwriter~DowncastWriter#mergeAttributes mergeAttributes} and\n     * {@link module:engine/view/downcastwriter~DowncastWriter#mergeContainers mergeContainers} is that `mergeAttributes` merges two\n     * {@link module:engine/view/attributeelement~AttributeElement attribute elements} or {@link module:engine/view/text~Text text nodes}\n     * while `mergeContainer` merges two {@link module:engine/view/containerelement~ContainerElement container elements}.\n     *\n     * @see module:engine/view/attributeelement~AttributeElement\n     * @see module:engine/view/containerelement~ContainerElement\n     * @see module:engine/view/downcastwriter~DowncastWriter#mergeContainers\n     * @param {module:engine/view/position~Position} position Merge position.\n     * @returns {module:engine/view/position~Position} Position after merge.\n     */\n\n  }, {\n    key: \"mergeAttributes\",\n    value: function mergeAttributes(position) {\n      var positionOffset = position.offset;\n      var positionParent = position.parent; // When inside text node - nothing to merge.\n\n      if (positionParent.is('text')) {\n        return position;\n      } // When inside empty attribute - remove it.\n\n\n      if (positionParent.is('attributeElement') && positionParent.childCount === 0) {\n        var parent = positionParent.parent;\n        var offset = positionParent.index;\n\n        positionParent._remove();\n\n        this._removeFromClonedElementsGroup(positionParent);\n\n        return this.mergeAttributes(new Position(parent, offset));\n      }\n\n      var nodeBefore = positionParent.getChild(positionOffset - 1);\n      var nodeAfter = positionParent.getChild(positionOffset); // Position should be placed between two nodes.\n\n      if (!nodeBefore || !nodeAfter) {\n        return position;\n      } // When position is between two text nodes.\n\n\n      if (nodeBefore.is('text') && nodeAfter.is('text')) {\n        return mergeTextNodes(nodeBefore, nodeAfter);\n      } // When position is between two same attribute elements.\n      else if (nodeBefore.is('attributeElement') && nodeAfter.is('attributeElement') && nodeBefore.isSimilar(nodeAfter)) {\n          // Move all children nodes from node placed after selection and remove that node.\n          var count = nodeBefore.childCount;\n\n          nodeBefore._appendChild(nodeAfter.getChildren());\n\n          nodeAfter._remove();\n\n          this._removeFromClonedElementsGroup(nodeAfter); // New position is located inside the first node, before new nodes.\n          // Call this method recursively to merge again if needed.\n\n\n          return this.mergeAttributes(new Position(nodeBefore, count));\n        }\n\n      return position;\n    }\n    /**\n     * Merges two {@link module:engine/view/containerelement~ContainerElement container elements} that are before and after given position.\n     * Precisely, the element after the position is removed and it's contents are moved to element before the position.\n     *\n     *        <p>foo</p>^<p>bar</p> -> <p>foo^bar</p>\n     *        <div>foo</div>^<p>bar</p> -> <div>foo^bar</div>\n     *\n     * **Note:** Difference between {@link module:engine/view/downcastwriter~DowncastWriter#mergeAttributes mergeAttributes} and\n     * {@link module:engine/view/downcastwriter~DowncastWriter#mergeContainers mergeContainers} is that `mergeAttributes` merges two\n     * {@link module:engine/view/attributeelement~AttributeElement attribute elements} or {@link module:engine/view/text~Text text nodes}\n     * while `mergeContainer` merges two {@link module:engine/view/containerelement~ContainerElement container elements}.\n     *\n     * @see module:engine/view/attributeelement~AttributeElement\n     * @see module:engine/view/containerelement~ContainerElement\n     * @see module:engine/view/downcastwriter~DowncastWriter#mergeAttributes\n     * @param {module:engine/view/position~Position} position Merge position.\n     * @returns {module:engine/view/position~Position} Position after merge.\n     */\n\n  }, {\n    key: \"mergeContainers\",\n    value: function mergeContainers(position) {\n      var prev = position.nodeBefore;\n      var next = position.nodeAfter;\n\n      if (!prev || !next || !prev.is('containerElement') || !next.is('containerElement')) {\n        /**\n         * Element before and after given position cannot be merged.\n         *\n         * @error view-writer-merge-containers-invalid-position\n         */\n        throw new CKEditorError('view-writer-merge-containers-invalid-position: ' + 'Element before and after given position cannot be merged.');\n      }\n\n      var lastChild = prev.getChild(prev.childCount - 1);\n      var newPosition = lastChild instanceof Text ? Position._createAt(lastChild, 'end') : Position._createAt(prev, 'end');\n      this.move(Range._createIn(next), Position._createAt(prev, 'end'));\n      this.remove(Range._createOn(next));\n      return newPosition;\n    }\n    /**\n     * Insert node or nodes at specified position. Takes care about breaking attributes before insertion\n     * and merging them afterwards.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-insert-invalid-node` when nodes to insert\n     * contains instances that are not {@link module:engine/view/text~Text Texts},\n     * {@link module:engine/view/attributeelement~AttributeElement AttributeElements},\n     * {@link module:engine/view/containerelement~ContainerElement ContainerElements},\n     * {@link module:engine/view/emptyelement~EmptyElement EmptyElements} or\n     * {@link module:engine/view/uielement~UIElement UIElements}.\n     *\n     * @param {module:engine/view/position~Position} position Insertion position.\n     * @param {module:engine/view/text~Text|module:engine/view/attributeelement~AttributeElement|\n     * module:engine/view/containerelement~ContainerElement|module:engine/view/emptyelement~EmptyElement|\n     * module:engine/view/uielement~UIElement|Iterable.<module:engine/view/text~Text|\n     * module:engine/view/attributeelement~AttributeElement|module:engine/view/containerelement~ContainerElement|\n     * module:engine/view/emptyelement~EmptyElement|module:engine/view/uielement~UIElement>} nodes Node or nodes to insert.\n     * @returns {module:engine/view/range~Range} Range around inserted nodes.\n     */\n\n  }, {\n    key: \"insert\",\n    value: function insert(position, nodes) {\n      nodes = isIterable(nodes) ? _toConsumableArray(nodes) : [nodes]; // Check if nodes to insert are instances of AttributeElements, ContainerElements, EmptyElements, UIElements or Text.\n\n      validateNodesToInsert(nodes);\n      var container = getParentContainer(position);\n\n      if (!container) {\n        /**\n         * Position's parent container cannot be found.\n         *\n         * @error view-writer-invalid-position-container\n         */\n        throw new CKEditorError('view-writer-invalid-position-container');\n      }\n\n      var insertionPosition = this._breakAttributes(position, true);\n\n      var length = container._insertChild(insertionPosition.offset, nodes);\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = nodes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var node = _step.value;\n\n          this._addToClonedElementsGroup(node);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      var endPosition = insertionPosition.getShiftedBy(length);\n      var start = this.mergeAttributes(insertionPosition); // When no nodes were inserted - return collapsed range.\n\n      if (length === 0) {\n        return new Range(start, start);\n      } else {\n        // If start position was merged - move end position.\n        if (!start.isEqual(insertionPosition)) {\n          endPosition.offset--;\n        }\n\n        var end = this.mergeAttributes(endPosition);\n        return new Range(start, end);\n      }\n    }\n    /**\n     * Removes provided range from the container.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when\n     * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions are not placed inside\n     * same parent container.\n     *\n     * @param {module:engine/view/range~Range|module:engine/view/item~Item} rangeOrItem Range to remove from container\n     * or an {@link module:engine/view/item~Item item} to remove. If range is provided, after removing, it will be updated\n     * to a collapsed range showing the new position.\n     * @returns {module:engine/view/documentfragment~DocumentFragment} Document fragment containing removed nodes.\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(rangeOrItem) {\n      var range = rangeOrItem instanceof Range ? rangeOrItem : Range._createOn(rangeOrItem);\n      validateRangeContainer(range); // If range is collapsed - nothing to remove.\n\n      if (range.isCollapsed) {\n        return new DocumentFragment();\n      } // Break attributes at range start and end.\n\n\n      var _this$_breakAttribute = this._breakAttributesRange(range, true),\n          breakStart = _this$_breakAttribute.start,\n          breakEnd = _this$_breakAttribute.end;\n\n      var parentContainer = breakStart.parent;\n      var count = breakEnd.offset - breakStart.offset; // Remove nodes in range.\n\n      var removed = parentContainer._removeChildren(breakStart.offset, count);\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = removed[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var node = _step2.value;\n\n          this._removeFromClonedElementsGroup(node);\n        } // Merge after removing.\n\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      var mergePosition = this.mergeAttributes(breakStart);\n      range.start = mergePosition;\n      range.end = mergePosition.clone(); // Return removed nodes.\n\n      return new DocumentFragment(removed);\n    }\n    /**\n     * Removes matching elements from given range.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when\n     * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions are not placed inside\n     * same parent container.\n     *\n     * @param {module:engine/view/range~Range} range Range to clear.\n     * @param {module:engine/view/element~Element} element Element to remove.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear(range, element) {\n      validateRangeContainer(range); // Create walker on given range.\n      // We walk backward because when we remove element during walk it modifies range end position.\n\n      var walker = range.getWalker({\n        direction: 'backward',\n        ignoreElementEnd: true\n      }); // Let's walk.\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = walker[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var current = _step3.value;\n          var item = current.item;\n          var rangeToRemove = void 0; // When current item matches to the given element.\n\n          if (item.is('element') && element.isSimilar(item)) {\n            // Create range on this element.\n            rangeToRemove = Range._createOn(item); // When range starts inside Text or TextProxy element.\n          } else if (!current.nextPosition.isAfter(range.start) && item.is('textProxy')) {\n            // We need to check if parent of this text matches to given element.\n            var parentElement = item.getAncestors().find(function (ancestor) {\n              return ancestor.is('element') && element.isSimilar(ancestor);\n            }); // If it is then create range inside this element.\n\n            if (parentElement) {\n              rangeToRemove = Range._createIn(parentElement);\n            }\n          } // If we have found element to remove.\n\n\n          if (rangeToRemove) {\n            // We need to check if element range stick out of the given range and truncate if it is.\n            if (rangeToRemove.end.isAfter(range.end)) {\n              rangeToRemove.end = range.end;\n            }\n\n            if (rangeToRemove.start.isBefore(range.start)) {\n              rangeToRemove.start = range.start;\n            } // At the end we remove range with found element.\n\n\n            this.remove(rangeToRemove);\n          }\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n    /**\n     * Moves nodes from provided range to target position.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when\n     * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions are not placed inside\n     * same parent container.\n     *\n     * @param {module:engine/view/range~Range} sourceRange Range containing nodes to move.\n     * @param {module:engine/view/position~Position} targetPosition Position to insert.\n     * @returns {module:engine/view/range~Range} Range in target container. Inserted nodes are placed between\n     * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions.\n     */\n\n  }, {\n    key: \"move\",\n    value: function move(sourceRange, targetPosition) {\n      var nodes;\n\n      if (targetPosition.isAfter(sourceRange.end)) {\n        targetPosition = this._breakAttributes(targetPosition, true);\n        var parent = targetPosition.parent;\n        var countBefore = parent.childCount;\n        sourceRange = this._breakAttributesRange(sourceRange, true);\n        nodes = this.remove(sourceRange);\n        targetPosition.offset += parent.childCount - countBefore;\n      } else {\n        nodes = this.remove(sourceRange);\n      }\n\n      return this.insert(targetPosition, nodes);\n    }\n    /**\n        * Wraps elements within range with provided {@link module:engine/view/attributeelement~AttributeElement AttributeElement}.\n        * If a collapsed range is provided, it will be wrapped only if it is equal to view selection.\n        *\n        * If a collapsed range was passed and is same as selection, the selection\n        * will be moved to the inside of the wrapped attribute element.\n        *\n        * Throws {@link module:utils/ckeditorerror~CKEditorError} `view-writer-invalid-range-container`\n        * when {@link module:engine/view/range~Range#start}\n        * and {@link module:engine/view/range~Range#end} positions are not placed inside same parent container.\n        *\n        * Throws {@link module:utils/ckeditorerror~CKEditorError} `view-writer-wrap-invalid-attribute` when passed attribute element is not\n        * an instance of {@link module:engine/view/attributeelement~AttributeElement AttributeElement}.\n        *\n        * Throws {@link module:utils/ckeditorerror~CKEditorError} `view-writer-wrap-nonselection-collapsed-range` when passed range\n        * is collapsed and different than view selection.\n        *\n        * @param {module:engine/view/range~Range} range Range to wrap.\n        * @param {module:engine/view/attributeelement~AttributeElement} attribute Attribute element to use as wrapper.\n        * @returns {module:engine/view/range~Range} range Range after wrapping, spanning over wrapping attribute element.\n       */\n\n  }, {\n    key: \"wrap\",\n    value: function wrap(range, attribute) {\n      if (!(attribute instanceof AttributeElement)) {\n        throw new CKEditorError('view-writer-wrap-invalid-attribute');\n      }\n\n      validateRangeContainer(range);\n\n      if (!range.isCollapsed) {\n        // Non-collapsed range. Wrap it with the attribute element.\n        return this._wrapRange(range, attribute);\n      } else {\n        // Collapsed range. Wrap position.\n        var position = range.start;\n\n        if (position.parent.is('element') && !_hasNonUiChildren(position.parent)) {\n          position = position.getLastMatchingPosition(function (value) {\n            return value.item.is('uiElement');\n          });\n        }\n\n        position = this._wrapPosition(position, attribute);\n        var viewSelection = this.document.selection; // If wrapping position is equal to view selection, move view selection inside wrapping attribute element.\n\n        if (viewSelection.isCollapsed && viewSelection.getFirstPosition().isEqual(range.start)) {\n          this.setSelection(position);\n        }\n\n        return new Range(position);\n      }\n    }\n    /**\n     * Unwraps nodes within provided range from attribute element.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when\n     * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions are not placed inside\n     * same parent container.\n     *\n     * @param {module:engine/view/range~Range} range\n     * @param {module:engine/view/attributeelement~AttributeElement} attribute\n     */\n\n  }, {\n    key: \"unwrap\",\n    value: function unwrap(range, attribute) {\n      if (!(attribute instanceof AttributeElement)) {\n        /**\n         * Attribute element need to be instance of attribute element.\n         *\n         * @error view-writer-unwrap-invalid-attribute\n         */\n        throw new CKEditorError('view-writer-unwrap-invalid-attribute');\n      }\n\n      validateRangeContainer(range); // If range is collapsed - nothing to unwrap.\n\n      if (range.isCollapsed) {\n        return range;\n      } // Break attributes at range start and end.\n\n\n      var _this$_breakAttribute2 = this._breakAttributesRange(range, true),\n          breakStart = _this$_breakAttribute2.start,\n          breakEnd = _this$_breakAttribute2.end; // Range around one element - check if AttributeElement can be unwrapped partially when it's not similar.\n      // For example:\n      // <b class=\"foo bar\" title=\"baz\"></b> unwrap with:\t<b class=\"foo\"></p> result: <b class\"bar\" title=\"baz\"></b>\n\n\n      if (breakEnd.isEqual(breakStart.getShiftedBy(1))) {\n        var node = breakStart.nodeAfter; // Unwrap single attribute element.\n\n        if (!attribute.isSimilar(node) && node instanceof AttributeElement && this._unwrapAttributeElement(attribute, node)) {\n          var _start = this.mergeAttributes(breakStart);\n\n          if (!_start.isEqual(breakStart)) {\n            breakEnd.offset--;\n          }\n\n          var _end = this.mergeAttributes(breakEnd);\n\n          return new Range(_start, _end);\n        }\n      }\n\n      var parentContainer = breakStart.parent; // Unwrap children located between break points.\n\n      var newRange = this._unwrapChildren(parentContainer, breakStart.offset, breakEnd.offset, attribute); // Merge attributes at the both ends and return a new range.\n\n\n      var start = this.mergeAttributes(newRange.start); // If start position was merged - move end position back.\n\n      if (!start.isEqual(newRange.start)) {\n        newRange.end.offset--;\n      }\n\n      var end = this.mergeAttributes(newRange.end);\n      return new Range(start, end);\n    }\n    /**\n     * Renames element by creating a copy of renamed element but with changed name and then moving contents of the\n     * old element to the new one. Keep in mind that this will invalidate all {@link module:engine/view/position~Position positions} which\n     * has renamed element as {@link module:engine/view/position~Position#parent a parent}.\n     *\n     * New element has to be created because `Element#tagName` property in DOM is readonly.\n     *\n     * Since this function creates a new element and removes the given one, the new element is returned to keep reference.\n     *\n     * @param {String} newName New name for element.\n     * @param {module:engine/view/containerelement~ContainerElement} viewElement Element to be renamed.\n     */\n\n  }, {\n    key: \"rename\",\n    value: function rename(newName, viewElement) {\n      var newElement = new ContainerElement(newName, viewElement.getAttributes());\n      this.insert(Position._createAfter(viewElement), newElement);\n      this.move(Range._createIn(viewElement), Position._createAt(newElement, 0));\n      this.remove(Range._createOn(viewElement));\n      return newElement;\n    }\n    /**\n     * Cleans up memory by removing obsolete cloned elements group from the writer.\n     *\n     * Should be used whenever all {@link module:engine/view/attributeelement~AttributeElement attribute elements}\n     * with the same {@link module:engine/view/attributeelement~AttributeElement#id id} are going to be removed from the view and\n     * the group will no longer be needed.\n     *\n     * Cloned elements group are not removed automatically in case if the group is still needed after all its elements\n     * were removed from the view.\n     *\n     * Keep in mind that group names are equal to the `id` property of the attribute element.\n     *\n     * @param {String} groupName Name of the group to clear.\n     */\n\n  }, {\n    key: \"clearClonedElementsGroup\",\n    value: function clearClonedElementsGroup(groupName) {\n      this._cloneGroups.delete(groupName);\n    }\n    /**\n     * Creates position at the given location. The location can be specified as:\n     *\n     * * a {@link module:engine/view/position~Position position},\n     * * parent element and offset (offset defaults to `0`),\n     * * parent element and `'end'` (sets position at the end of that element),\n     * * {@link module:engine/view/item~Item view item} and `'before'` or `'after'` (sets position before or after given view item).\n     *\n     * This method is a shortcut to other constructors such as:\n     *\n     * * {@link #createPositionBefore},\n     * * {@link #createPositionAfter},\n     *\n     * @param {module:engine/view/item~Item|module:engine/model/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n     * first parameter is a {@link module:engine/view/item~Item view item}.\n     */\n\n  }, {\n    key: \"createPositionAt\",\n    value: function createPositionAt(itemOrPosition, offset) {\n      return Position._createAt(itemOrPosition, offset);\n    }\n    /**\n     * Creates a new position after given view item.\n     *\n     * @param {module:engine/view/item~Item} item View item after which the position should be located.\n     * @returns {module:engine/view/position~Position}\n     */\n\n  }, {\n    key: \"createPositionAfter\",\n    value: function createPositionAfter(item) {\n      return Position._createAfter(item);\n    }\n    /**\n     * Creates a new position before given view item.\n     *\n     * @param {module:engine/view/item~Item} item View item before which the position should be located.\n     * @returns {module:engine/view/position~Position}\n     */\n\n  }, {\n    key: \"createPositionBefore\",\n    value: function createPositionBefore(item) {\n      return Position._createBefore(item);\n    }\n    /**\n     * Creates a range spanning from `start` position to `end` position.\n     *\n     * **Note:** This factory method creates it's own {@link module:engine/view/position~Position} instances basing on passed values.\n     *\n     * @param {module:engine/view/position~Position} start Start position.\n     * @param {module:engine/view/position~Position} [end] End position. If not set, range will be collapsed at `start` position.\n     * @returns {module:engine/view/range~Range}\n     */\n\n  }, {\n    key: \"createRange\",\n    value: function createRange(start, end) {\n      return new Range(start, end);\n    }\n    /**\n     * Creates a range that starts before given {@link module:engine/view/item~Item view item} and ends after it.\n     *\n     * @param {module:engine/view/item~Item} item\n     * @returns {module:engine/view/range~Range}\n     */\n\n  }, {\n    key: \"createRangeOn\",\n    value: function createRangeOn(item) {\n      return Range._createOn(item);\n    }\n    /**\n     * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n     * that element and ends after the last child of that element.\n     *\n     * @param {module:engine/view/element~Element} element Element which is a parent for the range.\n     * @returns {module:engine/view/range~Range}\n     */\n\n  }, {\n    key: \"createRangeIn\",\n    value: function createRangeIn(element) {\n      return Range._createIn(element);\n    }\n    /**\n     Creates new {@link module:engine/view/selection~Selection} instance.\n     *\n     * \t\t// Creates empty selection without ranges.\n     *\t\tconst selection = writer.createSelection();\n     *\n     *\t\t// Creates selection at the given range.\n     *\t\tconst range = writer.createRange( start, end );\n     *\t\tconst selection = writer.createSelection( range );\n     *\n     *\t\t// Creates selection at the given ranges\n     * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n     *\t\tconst selection = writer.createSelection( ranges );\n     *\n     *\t\t// Creates selection from the other selection.\n     *\t\tconst otherSelection = writer.createSelection();\n     *\t\tconst selection = writer.createSelection( otherSelection );\n     *\n     *\t\t// Creates selection from the document selection.\n     *\t\tconst selection = writer.createSelection( editor.editing.view.document.selection );\n     *\n     * \t\t// Creates selection at the given position.\n     *\t\tconst position = writer.createPositionFromPath( root, path );\n     *\t\tconst selection = writer.createSelection( position );\n     *\n     *\t\t// Creates collapsed selection at the position of given item and offset.\n     *\t\tconst paragraph = writer.createContainerElement( 'paragraph' );\n     *\t\tconst selection = writer.createSelection( paragraph, offset );\n     *\n     *\t\t// Creates a range inside an {@link module:engine/view/element~Element element} which starts before the\n     *\t\t// first child of that element and ends after the last child of that element.\n     *\t\tconst selection = writer.createSelection( paragraph, 'in' );\n     *\n     *\t\t// Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends\n     *\t\t// just after the item.\n     *\t\tconst selection = writer.createSelection( paragraph, 'on' );\n     *\n     * `Selection`'s constructor allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n     *\n     *\t\t// Creates backward selection.\n     *\t\tconst selection = writer.createSelection( range, { backward: true } );\n     *\n     * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n     * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n     * represented in other way, for example by applying proper CSS class.\n     *\n     * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\n     * (and be  properly handled by screen readers).\n     *\n     *\t\t// Creates fake selection with label.\n     *\t\tconst selection = writer.createSelection( range, { fake: true, label: 'foo' } );\n     *\n     * @param {module:engine/view/selection~Selection|module:engine/view/documentselection~DocumentSelection|\n     * module:engine/view/position~Position|Iterable.<module:engine/view/range~Range>|module:engine/view/range~Range|\n     * module:engine/view/item~Item|null} [selectable=null]\n     * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Offset or place when selectable is an `Item`.\n     * @param {Object} [options]\n     * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n     * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n     * @param {String} [options.label] Label for the fake selection.\n     * @returns {module:engine/view/selection~Selection}\n     */\n\n  }, {\n    key: \"createSelection\",\n    value: function createSelection(selectable, placeOrOffset, options) {\n      return new Selection(selectable, placeOrOffset, options);\n    }\n    /**\n     * Wraps children with provided `attribute`. Only children contained in `parent` element between\n     * `startOffset` and `endOffset` will be wrapped.\n     *\n     * @private\n     * @param {module:engine/view/element~Element} parent\n     * @param {Number} startOffset\n     * @param {Number} endOffset\n     * @param {module:engine/view/element~Element} attribute\n     */\n\n  }, {\n    key: \"_wrapChildren\",\n    value: function _wrapChildren(parent, startOffset, endOffset, attribute) {\n      var i = startOffset;\n      var wrapPositions = [];\n\n      while (i < endOffset) {\n        var child = parent.getChild(i);\n        var isText = child.is('text');\n        var isAttribute = child.is('attributeElement');\n        var isEmpty = child.is('emptyElement');\n        var isUI = child.is('uiElement'); // Wrap text, empty elements, ui elements or attributes with higher or equal priority.\n\n        if (isText || isEmpty || isUI || isAttribute && shouldABeOutsideB(attribute, child)) {\n          // Clone attribute.\n          var newAttribute = attribute._clone(); // Wrap current node with new attribute.\n\n\n          child._remove();\n\n          newAttribute._appendChild(child);\n\n          parent._insertChild(i, newAttribute);\n\n          this._addToClonedElementsGroup(newAttribute);\n\n          wrapPositions.push(new Position(parent, i));\n        } // If other nested attribute is found start wrapping there.\n        else if (isAttribute) {\n            this._wrapChildren(child, 0, child.childCount, attribute);\n          }\n\n        i++;\n      } // Merge at each wrap.\n\n\n      var offsetChange = 0;\n\n      for (var _i = 0; _i < wrapPositions.length; _i++) {\n        var position = wrapPositions[_i];\n        position.offset -= offsetChange; // Do not merge with elements outside selected children.\n\n        if (position.offset == startOffset) {\n          continue;\n        }\n\n        var newPosition = this.mergeAttributes(position); // If nodes were merged - other merge offsets will change.\n\n        if (!newPosition.isEqual(position)) {\n          offsetChange++;\n          endOffset--;\n        }\n      }\n\n      return Range._createFromParentsAndOffsets(parent, startOffset, parent, endOffset);\n    }\n    /**\n     * Unwraps children from provided `attribute`. Only children contained in `parent` element between\n     * `startOffset` and `endOffset` will be unwrapped.\n     *\n     * @private\n     * @param {module:engine/view/element~Element} parent\n     * @param {Number} startOffset\n     * @param {Number} endOffset\n     * @param {module:engine/view/element~Element} attribute\n     */\n\n  }, {\n    key: \"_unwrapChildren\",\n    value: function _unwrapChildren(parent, startOffset, endOffset, attribute) {\n      var i = startOffset;\n      var unwrapPositions = []; // Iterate over each element between provided offsets inside parent.\n\n      while (i < endOffset) {\n        var child = parent.getChild(i); // If attributes are the similar, then unwrap.\n\n        if (child.isSimilar(attribute)) {\n          var unwrapped = child.getChildren();\n          var count = child.childCount; // Replace wrapper element with its children\n\n          child._remove();\n\n          parent._insertChild(i, unwrapped);\n\n          this._removeFromClonedElementsGroup(child); // Save start and end position of moved items.\n\n\n          unwrapPositions.push(new Position(parent, i), new Position(parent, i + count)); // Skip elements that were unwrapped. Assuming that there won't be another element to unwrap in child\n          // elements.\n\n          i += count;\n          endOffset += count - 1;\n        } else {\n          // If other nested attribute is found start unwrapping there.\n          if (child.is('attributeElement')) {\n            this._unwrapChildren(child, 0, child.childCount, attribute);\n          }\n\n          i++;\n        }\n      } // Merge at each unwrap.\n\n\n      var offsetChange = 0;\n\n      for (var _i2 = 0; _i2 < unwrapPositions.length; _i2++) {\n        var position = unwrapPositions[_i2];\n        position.offset -= offsetChange; // Do not merge with elements outside selected children.\n\n        if (position.offset == startOffset || position.offset == endOffset) {\n          continue;\n        }\n\n        var newPosition = this.mergeAttributes(position); // If nodes were merged - other merge offsets will change.\n\n        if (!newPosition.isEqual(position)) {\n          offsetChange++;\n          endOffset--;\n        }\n      }\n\n      return Range._createFromParentsAndOffsets(parent, startOffset, parent, endOffset);\n    }\n    /**\n     * Helper function for `view.writer.wrap`. Wraps range with provided attribute element.\n     * This method will also merge newly added attribute element with its siblings whenever possible.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError} `view-writer-wrap-invalid-attribute` when passed attribute element is not\n     * an instance of {@link module:engine/view/attributeelement~AttributeElement AttributeElement}.\n     *\n     * @private\n     * @param {module:engine/view/range~Range} range\n     * @param {module:engine/view/attributeelement~AttributeElement} attribute\n     * @returns {module:engine/view/range~Range} New range after wrapping, spanning over wrapping attribute element.\n     */\n\n  }, {\n    key: \"_wrapRange\",\n    value: function _wrapRange(range, attribute) {\n      // Range is inside single attribute and spans on all children.\n      if (rangeSpansOnAllChildren(range) && this._wrapAttributeElement(attribute, range.start.parent)) {\n        var parent = range.start.parent;\n\n        var _end2 = this.mergeAttributes(Position._createAfter(parent));\n\n        var _start2 = this.mergeAttributes(Position._createBefore(parent));\n\n        return new Range(_start2, _end2);\n      } // Break attributes at range start and end.\n\n\n      var _this$_breakAttribute3 = this._breakAttributesRange(range, true),\n          breakStart = _this$_breakAttribute3.start,\n          breakEnd = _this$_breakAttribute3.end; // Range around one element.\n\n\n      if (breakEnd.isEqual(breakStart.getShiftedBy(1))) {\n        var node = breakStart.nodeAfter;\n\n        if (node instanceof AttributeElement && this._wrapAttributeElement(attribute, node)) {\n          var _start3 = this.mergeAttributes(breakStart);\n\n          if (!_start3.isEqual(breakStart)) {\n            breakEnd.offset--;\n          }\n\n          var _end3 = this.mergeAttributes(breakEnd);\n\n          return new Range(_start3, _end3);\n        }\n      }\n\n      var parentContainer = breakStart.parent; // Unwrap children located between break points.\n\n      var unwrappedRange = this._unwrapChildren(parentContainer, breakStart.offset, breakEnd.offset, attribute); // Wrap all children with attribute.\n\n\n      var newRange = this._wrapChildren(parentContainer, unwrappedRange.start.offset, unwrappedRange.end.offset, attribute); // Merge attributes at the both ends and return a new range.\n\n\n      var start = this.mergeAttributes(newRange.start); // If start position was merged - move end position back.\n\n      if (!start.isEqual(newRange.start)) {\n        newRange.end.offset--;\n      }\n\n      var end = this.mergeAttributes(newRange.end);\n      return new Range(start, end);\n    }\n    /**\n     * Helper function for {@link #wrap}. Wraps position with provided attribute element.\n     * This method will also merge newly added attribute element with its siblings whenever possible.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError} `view-writer-wrap-invalid-attribute` when passed attribute element is not\n     * an instance of {@link module:engine/view/attributeelement~AttributeElement AttributeElement}.\n     *\n     * @private\n     * @param {module:engine/view/position~Position} position\n     * @param {module:engine/view/attributeelement~AttributeElement} attribute\n     * @returns {module:engine/view/position~Position} New position after wrapping.\n     */\n\n  }, {\n    key: \"_wrapPosition\",\n    value: function _wrapPosition(position, attribute) {\n      // Return same position when trying to wrap with attribute similar to position parent.\n      if (attribute.isSimilar(position.parent)) {\n        return movePositionToTextNode(position.clone());\n      } // When position is inside text node - break it and place new position between two text nodes.\n\n\n      if (position.parent.is('text')) {\n        position = breakTextNode(position);\n      } // Create fake element that will represent position, and will not be merged with other attributes.\n\n\n      var fakePosition = this.createAttributeElement();\n      fakePosition._priority = Number.POSITIVE_INFINITY;\n\n      fakePosition.isSimilar = function () {\n        return false;\n      }; // Insert fake element in position location.\n\n\n      position.parent._insertChild(position.offset, fakePosition); // Range around inserted fake attribute element.\n\n\n      var wrapRange = new Range(position, position.getShiftedBy(1)); // Wrap fake element with attribute (it will also merge if possible).\n\n      this.wrap(wrapRange, attribute); // Remove fake element and place new position there.\n\n      var newPosition = new Position(fakePosition.parent, fakePosition.index);\n\n      fakePosition._remove(); // If position is placed between text nodes - merge them and return position inside.\n\n\n      var nodeBefore = newPosition.nodeBefore;\n      var nodeAfter = newPosition.nodeAfter;\n\n      if (nodeBefore instanceof Text && nodeAfter instanceof Text) {\n        return mergeTextNodes(nodeBefore, nodeAfter);\n      } // If position is next to text node - move position inside.\n\n\n      return movePositionToTextNode(newPosition);\n    }\n    /**\n     * \tWraps one {@link module:engine/view/attributeelement~AttributeElement AttributeElement} into another by\n     * \tmerging them if possible. When merging is possible - all attributes, styles and classes are moved from wrapper\n     * \telement to element being wrapped.\n     *\n     * \t@private\n     * \t@param {module:engine/view/attributeelement~AttributeElement} wrapper Wrapper AttributeElement.\n     * \t@param {module:engine/view/attributeelement~AttributeElement} toWrap AttributeElement to wrap using wrapper element.\n     * \t@returns {Boolean} Returns `true` if elements are merged.\n     */\n\n  }, {\n    key: \"_wrapAttributeElement\",\n    value: function _wrapAttributeElement(wrapper, toWrap) {\n      if (!canBeJoined(wrapper, toWrap)) {\n        return false;\n      } // Can't merge if name or priority differs.\n\n\n      if (wrapper.name !== toWrap.name || wrapper.priority !== toWrap.priority) {\n        return false;\n      } // Check if attributes can be merged.\n\n\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = wrapper.getAttributeKeys()[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var key = _step4.value;\n\n          // Classes and styles should be checked separately.\n          if (key === 'class' || key === 'style') {\n            continue;\n          } // If some attributes are different we cannot wrap.\n\n\n          if (toWrap.hasAttribute(key) && toWrap.getAttribute(key) !== wrapper.getAttribute(key)) {\n            return false;\n          }\n        } // Check if styles can be merged.\n\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = wrapper.getStyleNames()[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var _key = _step5.value;\n\n          if (toWrap.hasStyle(_key) && toWrap.getStyle(_key) !== wrapper.getStyle(_key)) {\n            return false;\n          }\n        } // Move all attributes/classes/styles from wrapper to wrapped AttributeElement.\n\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = wrapper.getAttributeKeys()[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var _key2 = _step6.value;\n\n          // Classes and styles should be checked separately.\n          if (_key2 === 'class' || _key2 === 'style') {\n            continue;\n          } // Move only these attributes that are not present - other are similar.\n\n\n          if (!toWrap.hasAttribute(_key2)) {\n            this.setAttribute(_key2, wrapper.getAttribute(_key2), toWrap);\n          }\n        }\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n            _iterator6.return();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion7 = true;\n      var _didIteratorError7 = false;\n      var _iteratorError7 = undefined;\n\n      try {\n        for (var _iterator7 = wrapper.getStyleNames()[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n          var _key3 = _step7.value;\n\n          if (!toWrap.hasStyle(_key3)) {\n            this.setStyle(_key3, wrapper.getStyle(_key3), toWrap);\n          }\n        }\n      } catch (err) {\n        _didIteratorError7 = true;\n        _iteratorError7 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n            _iterator7.return();\n          }\n        } finally {\n          if (_didIteratorError7) {\n            throw _iteratorError7;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion8 = true;\n      var _didIteratorError8 = false;\n      var _iteratorError8 = undefined;\n\n      try {\n        for (var _iterator8 = wrapper.getClassNames()[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n          var _key4 = _step8.value;\n\n          if (!toWrap.hasClass(_key4)) {\n            this.addClass(_key4, toWrap);\n          }\n        }\n      } catch (err) {\n        _didIteratorError8 = true;\n        _iteratorError8 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n            _iterator8.return();\n          }\n        } finally {\n          if (_didIteratorError8) {\n            throw _iteratorError8;\n          }\n        }\n      }\n\n      return true;\n    }\n    /**\n     * Unwraps {@link module:engine/view/attributeelement~AttributeElement AttributeElement} from another by removing\n     * corresponding attributes, classes and styles. All attributes, classes and styles from wrapper should be present\n     * inside element being unwrapped.\n     *\n     * @private\n     * @param {module:engine/view/attributeelement~AttributeElement} wrapper Wrapper AttributeElement.\n     * @param {module:engine/view/attributeelement~AttributeElement} toUnwrap AttributeElement to unwrap using wrapper element.\n     * @returns {Boolean} Returns `true` if elements are unwrapped.\n     **/\n\n  }, {\n    key: \"_unwrapAttributeElement\",\n    value: function _unwrapAttributeElement(wrapper, toUnwrap) {\n      if (!canBeJoined(wrapper, toUnwrap)) {\n        return false;\n      } // Can't unwrap if name or priority differs.\n\n\n      if (wrapper.name !== toUnwrap.name || wrapper.priority !== toUnwrap.priority) {\n        return false;\n      } // Check if AttributeElement has all wrapper attributes.\n\n\n      var _iteratorNormalCompletion9 = true;\n      var _didIteratorError9 = false;\n      var _iteratorError9 = undefined;\n\n      try {\n        for (var _iterator9 = wrapper.getAttributeKeys()[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n          var key = _step9.value;\n\n          // Classes and styles should be checked separately.\n          if (key === 'class' || key === 'style') {\n            continue;\n          } // If some attributes are missing or different we cannot unwrap.\n\n\n          if (!toUnwrap.hasAttribute(key) || toUnwrap.getAttribute(key) !== wrapper.getAttribute(key)) {\n            return false;\n          }\n        } // Check if AttributeElement has all wrapper classes.\n\n      } catch (err) {\n        _didIteratorError9 = true;\n        _iteratorError9 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion9 && _iterator9.return != null) {\n            _iterator9.return();\n          }\n        } finally {\n          if (_didIteratorError9) {\n            throw _iteratorError9;\n          }\n        }\n      }\n\n      if (!toUnwrap.hasClass.apply(toUnwrap, _toConsumableArray(wrapper.getClassNames()))) {\n        return false;\n      } // Check if AttributeElement has all wrapper styles.\n\n\n      var _iteratorNormalCompletion10 = true;\n      var _didIteratorError10 = false;\n      var _iteratorError10 = undefined;\n\n      try {\n        for (var _iterator10 = wrapper.getStyleNames()[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n          var _key5 = _step10.value;\n\n          // If some styles are missing or different we cannot unwrap.\n          if (!toUnwrap.hasStyle(_key5) || toUnwrap.getStyle(_key5) !== wrapper.getStyle(_key5)) {\n            return false;\n          }\n        } // Remove all wrapper's attributes from unwrapped element.\n\n      } catch (err) {\n        _didIteratorError10 = true;\n        _iteratorError10 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion10 && _iterator10.return != null) {\n            _iterator10.return();\n          }\n        } finally {\n          if (_didIteratorError10) {\n            throw _iteratorError10;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion11 = true;\n      var _didIteratorError11 = false;\n      var _iteratorError11 = undefined;\n\n      try {\n        for (var _iterator11 = wrapper.getAttributeKeys()[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n          var _key6 = _step11.value;\n\n          // Classes and styles should be checked separately.\n          if (_key6 === 'class' || _key6 === 'style') {\n            continue;\n          }\n\n          this.removeAttribute(_key6, toUnwrap);\n        } // Remove all wrapper's classes from unwrapped element.\n\n      } catch (err) {\n        _didIteratorError11 = true;\n        _iteratorError11 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion11 && _iterator11.return != null) {\n            _iterator11.return();\n          }\n        } finally {\n          if (_didIteratorError11) {\n            throw _iteratorError11;\n          }\n        }\n      }\n\n      this.removeClass(Array.from(wrapper.getClassNames()), toUnwrap); // Remove all wrapper's styles from unwrapped element.\n\n      this.removeStyle(Array.from(wrapper.getStyleNames()), toUnwrap);\n      return true;\n    }\n    /**\n     * Helper function used by other `DowncastWriter` methods. Breaks attribute elements at the boundaries of given range.\n     *\n     * @private\n     * @param {module:engine/view/range~Range} range Range which `start` and `end` positions will be used to break attributes.\n     * @param {Boolean} [forceSplitText=false] If set to `true`, will break text nodes even if they are directly in container element.\n     * This behavior will result in incorrect view state, but is needed by other view writing methods which then fixes view state.\n     * @returns {module:engine/view/range~Range} New range with located at break positions.\n     */\n\n  }, {\n    key: \"_breakAttributesRange\",\n    value: function _breakAttributesRange(range) {\n      var forceSplitText = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var rangeStart = range.start;\n      var rangeEnd = range.end;\n      validateRangeContainer(range); // Break at the collapsed position. Return new collapsed range.\n\n      if (range.isCollapsed) {\n        var position = this._breakAttributes(range.start, forceSplitText);\n\n        return new Range(position, position);\n      }\n\n      var breakEnd = this._breakAttributes(rangeEnd, forceSplitText);\n\n      var count = breakEnd.parent.childCount;\n\n      var breakStart = this._breakAttributes(rangeStart, forceSplitText); // Calculate new break end offset.\n\n\n      breakEnd.offset += breakEnd.parent.childCount - count;\n      return new Range(breakStart, breakEnd);\n    }\n    /**\n     * Helper function used by other `DowncastWriter` methods. Breaks attribute elements at given position.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-cannot-break-empty-element` when break position\n     * is placed inside {@link module:engine/view/emptyelement~EmptyElement EmptyElement}.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-cannot-break-ui-element` when break position\n     * is placed inside {@link module:engine/view/uielement~UIElement UIElement}.\n     *\n     * @private\n     * @param {module:engine/view/position~Position} position Position where to break attributes.\n     * @param {Boolean} [forceSplitText=false] If set to `true`, will break text nodes even if they are directly in container element.\n     * This behavior will result in incorrect view state, but is needed by other view writing methods which then fixes view state.\n     * @returns {module:engine/view/position~Position} New position after breaking the attributes.\n     */\n\n  }, {\n    key: \"_breakAttributes\",\n    value: function _breakAttributes(position) {\n      var forceSplitText = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var positionOffset = position.offset;\n      var positionParent = position.parent; // If position is placed inside EmptyElement - throw an exception as we cannot break inside.\n\n      if (position.parent.is('emptyElement')) {\n        /**\n         * Cannot break inside EmptyElement instance.\n         *\n         * @error view-writer-cannot-break-empty-element\n         */\n        throw new CKEditorError('view-writer-cannot-break-empty-element');\n      } // If position is placed inside UIElement - throw an exception as we cannot break inside.\n\n\n      if (position.parent.is('uiElement')) {\n        /**\n         * Cannot break inside UIElement instance.\n         *\n         * @error view-writer-cannot-break-ui-element\n         */\n        throw new CKEditorError('view-writer-cannot-break-ui-element');\n      } // There are no attributes to break and text nodes breaking is not forced.\n\n\n      if (!forceSplitText && positionParent.is('text') && isContainerOrFragment(positionParent.parent)) {\n        return position.clone();\n      } // Position's parent is container, so no attributes to break.\n\n\n      if (isContainerOrFragment(positionParent)) {\n        return position.clone();\n      } // Break text and start again in new position.\n\n\n      if (positionParent.is('text')) {\n        return this._breakAttributes(breakTextNode(position), forceSplitText);\n      }\n\n      var length = positionParent.childCount; // <p>foo<b><u>bar{}</u></b></p>\n      // <p>foo<b><u>bar</u>[]</b></p>\n      // <p>foo<b><u>bar</u></b>[]</p>\n\n      if (positionOffset == length) {\n        var newPosition = new Position(positionParent.parent, positionParent.index + 1);\n        return this._breakAttributes(newPosition, forceSplitText);\n      } else // <p>foo<b><u>{}bar</u></b></p>\n        // <p>foo<b>[]<u>bar</u></b></p>\n        // <p>foo{}<b><u>bar</u></b></p>\n        if (positionOffset === 0) {\n          var _newPosition = new Position(positionParent.parent, positionParent.index);\n\n          return this._breakAttributes(_newPosition, forceSplitText);\n        } // <p>foo<b><u>b{}ar</u></b></p>\n        // <p>foo<b><u>b[]ar</u></b></p>\n        // <p>foo<b><u>b</u>[]<u>ar</u></b></p>\n        // <p>foo<b><u>b</u></b>[]<b><u>ar</u></b></p>\n        else {\n            var offsetAfter = positionParent.index + 1; // Break element.\n\n            var clonedNode = positionParent._clone(); // Insert cloned node to position's parent node.\n\n\n            positionParent.parent._insertChild(offsetAfter, clonedNode);\n\n            this._addToClonedElementsGroup(clonedNode); // Get nodes to move.\n\n\n            var count = positionParent.childCount - positionOffset;\n\n            var nodesToMove = positionParent._removeChildren(positionOffset, count); // Move nodes to cloned node.\n\n\n            clonedNode._appendChild(nodesToMove); // Create new position to work on.\n\n\n            var _newPosition2 = new Position(positionParent.parent, offsetAfter);\n\n            return this._breakAttributes(_newPosition2, forceSplitText);\n          }\n    }\n    /**\n     * Stores the information that an {@link module:engine/view/attributeelement~AttributeElement attribute element} was\n     * added to the tree. Saves the reference to the group in the given element and updates the group, so other elements\n     * from the group now keep a reference to the given attribute element.\n     *\n     * The clones group can be obtained using {@link module:engine/view/attributeelement~AttributeElement#getElementsWithSameId}.\n     *\n     * Does nothing if added element has no {@link module:engine/view/attributeelement~AttributeElement#id id}.\n     *\n     * @private\n     * @param {module:engine/view/attributeelement~AttributeElement} element Attribute element to save.\n     */\n\n  }, {\n    key: \"_addToClonedElementsGroup\",\n    value: function _addToClonedElementsGroup(element) {\n      // Add only if the element is in document tree.\n      if (!element.root.is('rootElement')) {\n        return;\n      } // Traverse the element's children recursively to find other attribute elements that also might got inserted.\n      // The loop is at the beginning so we can make fast returns later in the code.\n\n\n      if (element.is('element')) {\n        var _iteratorNormalCompletion12 = true;\n        var _didIteratorError12 = false;\n        var _iteratorError12 = undefined;\n\n        try {\n          for (var _iterator12 = element.getChildren()[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n            var child = _step12.value;\n\n            this._addToClonedElementsGroup(child);\n          }\n        } catch (err) {\n          _didIteratorError12 = true;\n          _iteratorError12 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion12 && _iterator12.return != null) {\n              _iterator12.return();\n            }\n          } finally {\n            if (_didIteratorError12) {\n              throw _iteratorError12;\n            }\n          }\n        }\n      }\n\n      var id = element.id;\n\n      if (!id) {\n        return;\n      }\n\n      var group = this._cloneGroups.get(id);\n\n      if (!group) {\n        group = new Set();\n\n        this._cloneGroups.set(id, group);\n      }\n\n      group.add(element);\n      element._clonesGroup = group;\n    }\n    /**\n     * Removes all the information about the given {@link module:engine/view/attributeelement~AttributeElement attribute element}\n     * from its clones group.\n     *\n     * Keep in mind, that the element will still keep a reference to the group (but the group will not keep a reference to it).\n     * This allows to reference the whole group even if the element was already removed from the tree.\n     *\n     * Does nothing if the element has no {@link module:engine/view/attributeelement~AttributeElement#id id}.\n     *\n     * @private\n     * @param {module:engine/view/attributeelement~AttributeElement} element Attribute element to remove.\n     */\n\n  }, {\n    key: \"_removeFromClonedElementsGroup\",\n    value: function _removeFromClonedElementsGroup(element) {\n      // Traverse the element's children recursively to find other attribute elements that also got removed.\n      // The loop is at the beginning so we can make fast returns later in the code.\n      if (element.is('element')) {\n        var _iteratorNormalCompletion13 = true;\n        var _didIteratorError13 = false;\n        var _iteratorError13 = undefined;\n\n        try {\n          for (var _iterator13 = element.getChildren()[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n            var child = _step13.value;\n\n            this._removeFromClonedElementsGroup(child);\n          }\n        } catch (err) {\n          _didIteratorError13 = true;\n          _iteratorError13 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion13 && _iterator13.return != null) {\n              _iterator13.return();\n            }\n          } finally {\n            if (_didIteratorError13) {\n              throw _iteratorError13;\n            }\n          }\n        }\n      }\n\n      var id = element.id;\n\n      if (!id) {\n        return;\n      }\n\n      var group = this._cloneGroups.get(id);\n\n      if (!group) {\n        return;\n      }\n\n      group.delete(element); // Not removing group from element on purpose!\n      // If other parts of code have reference to this element, they will be able to get references to other elements from the group.\n    }\n  }]);\n\n  return DowncastWriter;\n}(); // Helper function for `view.writer.wrap`. Checks if given element has any children that are not ui elements.\n\n\nexport { DowncastWriter as default };\n\nfunction _hasNonUiChildren(parent) {\n  return Array.from(parent.getChildren()).some(function (child) {\n    return !child.is('uiElement');\n  });\n}\n/**\n * Attribute element need to be instance of attribute element.\n *\n * @error view-writer-wrap-invalid-attribute\n */\n// Returns first parent container of specified {@link module:engine/view/position~Position Position}.\n// Position's parent node is checked as first, then next parents are checked.\n// Note that {@link module:engine/view/documentfragment~DocumentFragment DocumentFragment} is treated like a container.\n//\n// @param {module:engine/view/position~Position} position Position used as a start point to locate parent container.\n// @returns {module:engine/view/containerelement~ContainerElement|module:engine/view/documentfragment~DocumentFragment|undefined}\n// Parent container element or `undefined` if container is not found.\n\n\nfunction getParentContainer(position) {\n  var parent = position.parent;\n\n  while (!isContainerOrFragment(parent)) {\n    if (!parent) {\n      return undefined;\n    }\n\n    parent = parent.parent;\n  }\n\n  return parent;\n} // Checks if first {@link module:engine/view/attributeelement~AttributeElement AttributeElement} provided to the function\n// can be wrapped otuside second element. It is done by comparing elements'\n// {@link module:engine/view/attributeelement~AttributeElement#priority priorities}, if both have same priority\n// {@link module:engine/view/element~Element#getIdentity identities} are compared.\n//\n// @param {module:engine/view/attributeelement~AttributeElement} a\n// @param {module:engine/view/attributeelement~AttributeElement} b\n// @returns {Boolean}\n\n\nfunction shouldABeOutsideB(a, b) {\n  if (a.priority < b.priority) {\n    return true;\n  } else if (a.priority > b.priority) {\n    return false;\n  } // When priorities are equal and names are different - use identities.\n\n\n  return a.getIdentity() < b.getIdentity();\n} // Returns new position that is moved to near text node. Returns same position if there is no text node before of after\n// specified position.\n//\n//\t\t<p>foo[]</p>  ->  <p>foo{}</p>\n//\t\t<p>[]foo</p>  ->  <p>{}foo</p>\n//\n// @param {module:engine/view/position~Position} position\n// @returns {module:engine/view/position~Position} Position located inside text node or same position if there is no text nodes\n// before or after position location.\n\n\nfunction movePositionToTextNode(position) {\n  var nodeBefore = position.nodeBefore;\n\n  if (nodeBefore && nodeBefore.is('text')) {\n    return new Position(nodeBefore, nodeBefore.data.length);\n  }\n\n  var nodeAfter = position.nodeAfter;\n\n  if (nodeAfter && nodeAfter.is('text')) {\n    return new Position(nodeAfter, 0);\n  }\n\n  return position;\n} // Breaks text node into two text nodes when possible.\n//\n//\t\t<p>foo{}bar</p> -> <p>foo[]bar</p>\n//\t\t<p>{}foobar</p> -> <p>[]foobar</p>\n//\t\t<p>foobar{}</p> -> <p>foobar[]</p>\n//\n// @param {module:engine/view/position~Position} position Position that need to be placed inside text node.\n// @returns {module:engine/view/position~Position} New position after breaking text node.\n\n\nfunction breakTextNode(position) {\n  if (position.offset == position.parent.data.length) {\n    return new Position(position.parent.parent, position.parent.index + 1);\n  }\n\n  if (position.offset === 0) {\n    return new Position(position.parent.parent, position.parent.index);\n  } // Get part of the text that need to be moved.\n\n\n  var textToMove = position.parent.data.slice(position.offset); // Leave rest of the text in position's parent.\n\n  position.parent._data = position.parent.data.slice(0, position.offset); // Insert new text node after position's parent text node.\n\n  position.parent.parent._insertChild(position.parent.index + 1, new Text(textToMove)); // Return new position between two newly created text nodes.\n\n\n  return new Position(position.parent.parent, position.parent.index + 1);\n} // Merges two text nodes into first node. Removes second node and returns merge position.\n//\n// @param {module:engine/view/text~Text} t1 First text node to merge. Data from second text node will be moved at the end of\n// this text node.\n// @param {module:engine/view/text~Text} t2 Second text node to merge. This node will be removed after merging.\n// @returns {module:engine/view/position~Position} Position after merging text nodes.\n\n\nfunction mergeTextNodes(t1, t2) {\n  // Merge text data into first text node and remove second one.\n  var nodeBeforeLength = t1.data.length;\n  t1._data += t2.data;\n\n  t2._remove();\n\n  return new Position(t1, nodeBeforeLength);\n} // Returns `true` if range is located in same {@link module:engine/view/attributeelement~AttributeElement AttributeElement}\n// (`start` and `end` positions are located inside same {@link module:engine/view/attributeelement~AttributeElement AttributeElement}),\n// starts on 0 offset and ends after last child node.\n//\n// @param {module:engine/view/range~Range} Range\n// @returns {Boolean}\n\n\nfunction rangeSpansOnAllChildren(range) {\n  return range.start.parent == range.end.parent && range.start.parent.is('attributeElement') && range.start.offset === 0 && range.end.offset === range.start.parent.childCount;\n} // Checks if provided nodes are valid to insert. Checks if each node is an instance of\n// {@link module:engine/view/text~Text Text} or {@link module:engine/view/attributeelement~AttributeElement AttributeElement},\n// {@link module:engine/view/containerelement~ContainerElement ContainerElement},\n// {@link module:engine/view/emptyelement~EmptyElement EmptyElement} or\n// {@link module:engine/view/uielement~UIElement UIElement}.\n//\n// Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-insert-invalid-node` when nodes to insert\n// contains instances that are not {@link module:engine/view/text~Text Texts},\n// {@link module:engine/view/emptyelement~EmptyElement EmptyElements},\n// {@link module:engine/view/uielement~UIElement UIElements},\n// {@link module:engine/view/attributeelement~AttributeElement AttributeElements} or\n// {@link module:engine/view/containerelement~ContainerElement ContainerElements}.\n//\n// @param Iterable.<module:engine/view/text~Text|module:engine/view/attributeelement~AttributeElement\n// |module:engine/view/containerelement~ContainerElement> nodes\n\n\nfunction validateNodesToInsert(nodes) {\n  var _iteratorNormalCompletion14 = true;\n  var _didIteratorError14 = false;\n  var _iteratorError14 = undefined;\n\n  try {\n    var _loop = function _loop() {\n      var node = _step14.value;\n\n      if (!validNodesToInsert.some(function (validNode) {\n        return node instanceof validNode;\n      })) {\n        // eslint-disable-line no-use-before-define\n\n        /**\n         * Inserted nodes should be valid to insert. of {@link module:engine/view/attributeelement~AttributeElement AttributeElement},\n         * {@link module:engine/view/containerelement~ContainerElement ContainerElement},\n         * {@link module:engine/view/emptyelement~EmptyElement EmptyElement},\n         * {@link module:engine/view/uielement~UIElement UIElement}, {@link module:engine/view/text~Text Text}.\n         *\n         * @error view-writer-insert-invalid-node\n         */\n        throw new CKEditorError('view-writer-insert-invalid-node');\n      }\n\n      if (!node.is('text')) {\n        validateNodesToInsert(node.getChildren());\n      }\n    };\n\n    for (var _iterator14 = nodes[Symbol.iterator](), _step14; !(_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done); _iteratorNormalCompletion14 = true) {\n      _loop();\n    }\n  } catch (err) {\n    _didIteratorError14 = true;\n    _iteratorError14 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion14 && _iterator14.return != null) {\n        _iterator14.return();\n      }\n    } finally {\n      if (_didIteratorError14) {\n        throw _iteratorError14;\n      }\n    }\n  }\n}\n\nvar validNodesToInsert = [Text, AttributeElement, ContainerElement, EmptyElement, UIElement]; // Checks if node is ContainerElement or DocumentFragment, because in most cases they should be treated the same way.\n//\n// @param {module:engine/view/node~Node} node\n// @returns {Boolean} Returns `true` if node is instance of ContainerElement or DocumentFragment.\n\nfunction isContainerOrFragment(node) {\n  return node && (node.is('containerElement') || node.is('documentFragment'));\n} // Checks if {@link module:engine/view/range~Range#start range start} and {@link module:engine/view/range~Range#end range end} are placed\n// inside same {@link module:engine/view/containerelement~ContainerElement container element}.\n// Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when validation fails.\n//\n// @param {module:engine/view/range~Range} range\n\n\nfunction validateRangeContainer(range) {\n  var startContainer = getParentContainer(range.start);\n  var endContainer = getParentContainer(range.end);\n\n  if (!startContainer || !endContainer || startContainer !== endContainer) {\n    /**\n     * Range container is invalid. This can happen if {@link module:engine/view/range~Range#start range start} and\n     * {@link module:engine/view/range~Range#end range end} positions are not placed inside same container or\n     * parent container for these positions cannot be found.\n     *\n     * @error view-writer-invalid-range-container\n     */\n    throw new CKEditorError('view-writer-invalid-range-container');\n  }\n} // Checks if two attribute elements can be joined together. Elements can be joined together if, and only if\n// they do not have ids specified.\n//\n// @private\n// @param {module:engine/view/element~Element} a\n// @param {module:engine/view/element~Element} b\n// @returns {Boolean}\n\n\nfunction canBeJoined(a, b) {\n  return a.id === null && b.id === null;\n}","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/insertat\n */\n\n/**\n * Inserts node to the parent at given index.\n *\n * @param {Element} parentElement Parent element.\n * @param {Number} index Insertions index.\n * @param {Node} nodeToInsert Node to insert.\n */\nexport default function insertAt(parentElement, index, nodeToInsert) {\n  parentElement.insertBefore(nodeToInsert, parentElement.childNodes[index] || null);\n}","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/remove\n */\n\n/**\n * Removes given node from parent.\n *\n * @param {Node} node Node to remove.\n */\nexport default function remove(node) {\n  var parent = node.parentNode;\n\n  if (parent) {\n    parent.removeChild(node);\n  }\n}","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/fastdiff\n */\n\n/**\n * Finds position of the first and last change in the given strings and generates set of changes. Set of changes\n * can be applied to the input text in order to transform it into the output text, for example:\n *\n *\t\tfastDiff( '12a', '12xyza' );\n *\t\t// [ { index: 2, type: 'insert', values: [ 'x', 'y', 'z' ] } ]\n *\n *\t\tfastDiff( '12a', '12aa' );\n *\t\t// [ { index: 3, type: 'insert', values: [ 'a' ] } ]\n *\n *\t\tfastDiff( '12xyza', '12a' );\n *\t\t// [ { index: 2, type: 'delete', howMany: 3 } ]\n *\n *\t\tfastDiff( '12aa', '12a' );\n *\t\t// [ { index: 3, type: 'delete', howMany: 1 } ]\n *\n *\t\tfastDiff( '12abc3', '2ab' );\n *\t\t// [ { index: 0, type: 'insert', values: [ '2', 'a', 'b' ] }, { index: 3, type: 'delete', howMany: 6 } ]\n *\n * Using returned results you can modify `oldText` to transform it into `newText`:\n *\n * \t\tlet input = '12abc3';\n * \t\tconst output = '2ab';\n * \t\tconst changes = fastDiff( input, output );\n *\n *\t\tchanges.forEach( change => {\n *\t\t\tif ( change.type == 'insert' ) {\n *\t\t\t\tinput = input.substring( 0, change.index ) + change.values.join( '' ) + input.substring( change.index );\n *\t\t\t} else if ( change.type == 'delete' ) {\n *\t\t\t\tinput = input.substring( 0, change.index ) + input.substring( change.index + change.howMany );\n *\t\t\t}\n *\t\t} );\n *\n *\t\tinput === output; // -> true\n *\n * The output format of this function is compatible with {@link module:utils/difftochanges~diffToChanges} output format.\n *\n * @param {String} oldText Input string.\n * @param {String} newText Input string.\n * @returns {Array} Array of changes.\n */\nexport default function fastDiff(oldText, newText) {\n  // Check if both texts are equal.\n  if (oldText === newText) {\n    return [];\n  }\n\n  var changeIndexes = findChangeBoundaryIndexes(oldText, newText);\n  return changeIndexesToChanges(newText, changeIndexes);\n} // Finds position of the first and last change in the given strings. For example:\n//\n//\t\tconst indexes = findChangeBoundaryIndexes( '1234', '13424' );\n//\t\tconsole.log( indexes ); // { firstIndex: 1, lastIndexOld: 3, lastIndexNew: 4 }\n//\n// The above indexes means that in `oldText` modified part is `1[23]4` and in the `newText` it is `1[342]4`.\n// Based on such indexes, array with `insert`/`delete` operations which allows transforming\n// old text to the new one can be generated.\n//\n// It is expected that `oldText` and `newText` are different.\n//\n// @param {String} oldText\n// @param {String} newText\n// @returns {Object}\n// @returns {Number} return.firstIndex Index of the first change in both strings (always the same for both).\n// @returns {Number} result.lastIndexOld Index of the last common character in `oldText` string.\n// @returns {Number} result.lastIndexNew Index of the last common character in `newText` string.\n\nfunction findChangeBoundaryIndexes(oldText, newText) {\n  // Find the first difference between texts.\n  var firstIndex = findFirstDifferenceIndex(oldText, newText); // Remove the common part of texts and reverse them to make it simpler to find the last difference between texts.\n\n  var oldTextReversed = cutAndReverse(oldText, firstIndex);\n  var newTextReversed = cutAndReverse(newText, firstIndex); // Find the first difference between reversed texts.\n  // It should be treated as \"how many characters from the end the last difference occurred\".\n  //\n  // For example:\n  //\n  // \t\t\tinitial\t->\tafter cut\t-> reversed:\n  // oldText:\t'321ba'\t->\t'21ba'\t\t-> 'ab12'\n  // newText:\t'31xba'\t->\t'1xba'\t\t-> 'abx1'\n  // lastIndex:\t\t\t\t\t\t->    2\n  //\n  // So the last change occurred two characters from the end of the texts.\n\n  var lastIndex = findFirstDifferenceIndex(oldTextReversed, newTextReversed); // Use `lastIndex` to calculate proper offset, starting from the beginning (`lastIndex` kind of starts from the end).\n\n  var lastIndexOld = oldText.length - lastIndex;\n  var lastIndexNew = newText.length - lastIndex;\n  return {\n    firstIndex: firstIndex,\n    lastIndexOld: lastIndexOld,\n    lastIndexNew: lastIndexNew\n  };\n} // Returns a first index on which `oldText` and `newText` differ.\n//\n// @param {String} oldText\n// @param {String} newText\n// @returns {Number}\n\n\nfunction findFirstDifferenceIndex(oldText, newText) {\n  for (var i = 0; i < Math.max(oldText.length, newText.length); i++) {\n    if (oldText[i] !== newText[i]) {\n      return i;\n    }\n  } // No \"backup\" return cause we assume that `oldText` and `newText` differ. This means that they either have a\n  // difference or they have a different lengths. This means that the `if` condition will always be met eventually.\n\n} // Removes `howMany` characters from the given `text` string starting from the beginning, then reverses and returns it.\n//\n// @param {String} text Text to be processed.\n// @param {Number} howMany How many characters from text beginning to cut.\n// @returns {String} Shortened and reversed text.\n\n\nfunction cutAndReverse(text, howMany) {\n  return text.substring(howMany).split('').reverse().join('');\n} // Generates changes array based on change indexes from `findChangeBoundaryIndexes` function. This function will\n// generate array with 0 (no changes), 1 (deletion or insertion) or 2 records (insertion and deletion).\n//\n// @param {String} newText New text for which change indexes were calculated.\n// @param {Object} changeIndexes Change indexes object from `findChangeBoundaryIndexes` function.\n// @returns {Array.<Object>} Array of changes compatible with {@link module:utils/difftochanges~diffToChanges} format.\n\n\nfunction changeIndexesToChanges(newText, changeIndexes) {\n  var result = [];\n  var firstIndex = changeIndexes.firstIndex,\n      lastIndexOld = changeIndexes.lastIndexOld,\n      lastIndexNew = changeIndexes.lastIndexNew; // Order operations as 'insert', 'delete' array to keep compatibility with {@link module:utils/difftochanges~diffToChanges}\n  // in most cases. However, 'diffToChanges' does not stick to any order so in some cases\n  // (for example replacing '12345' with 'abcd') it will generate 'delete', 'insert' order.\n\n  if (lastIndexNew - firstIndex > 0) {\n    result.push({\n      index: firstIndex,\n      type: 'insert',\n      values: newText.substring(firstIndex, lastIndexNew).split('')\n    });\n  }\n\n  if (lastIndexOld - firstIndex > 0) {\n    result.push({\n      index: firstIndex + (lastIndexNew - firstIndex),\n      // Increase index of what was inserted.\n      type: 'delete',\n      howMany: lastIndexOld - firstIndex\n    });\n  }\n\n  return result;\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/* globals Node */\n\n/**\n * @module engine/view/renderer\n */\nimport ViewText from './text';\nimport ViewPosition from './position';\nimport { INLINE_FILLER, INLINE_FILLER_LENGTH, startsWithFiller, isInlineFiller, isBlockFiller } from './filler';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport diff from '@ckeditor/ckeditor5-utils/src/diff';\nimport insertAt from '@ckeditor/ckeditor5-utils/src/dom/insertat';\nimport remove from '@ckeditor/ckeditor5-utils/src/dom/remove';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport isText from '@ckeditor/ckeditor5-utils/src/dom/istext';\nimport isNode from '@ckeditor/ckeditor5-utils/src/dom/isnode';\nimport fastDiff from '@ckeditor/ckeditor5-utils/src/fastdiff';\nimport env from '@ckeditor/ckeditor5-utils/src/env';\n/**\n * Renderer is responsible for updating the DOM structure and the DOM selection based on\n * the {@link module:engine/view/renderer~Renderer#markToSync information about updated view nodes}.\n * In other words, it renders the view to the DOM.\n *\n * Its main responsibility is to make only the necessary, minimal changes to the DOM. However, unlike in many\n * virtual DOM implementations, the primary reason for doing minimal changes is not the performance but ensuring\n * that native editing features such as text composition, autocompletion, spell checking, selection's x-index are\n * affected as little as possible.\n *\n * Renderer uses {@link module:engine/view/domconverter~DomConverter} to transform view nodes and positions\n * to and from the DOM.\n */\n\nvar Renderer =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a renderer instance.\n   *\n   * @param {module:engine/view/domconverter~DomConverter} domConverter Converter instance.\n   * @param {module:engine/view/documentselection~DocumentSelection} selection View selection.\n   */\n  function Renderer(domConverter, selection) {\n    _classCallCheck(this, Renderer);\n\n    /**\n     * Set of DOM Documents instances.\n     *\n     * @readonly\n     * @member {Set.<Document>}\n     */\n    this.domDocuments = new Set();\n    /**\n     * Converter instance.\n     *\n     * @readonly\n     * @member {module:engine/view/domconverter~DomConverter}\n     */\n\n    this.domConverter = domConverter;\n    /**\n     * Set of nodes which attributes changed and may need to be rendered.\n     *\n     * @readonly\n     * @member {Set.<module:engine/view/node~Node>}\n     */\n\n    this.markedAttributes = new Set();\n    /**\n     * Set of elements which child lists changed and may need to be rendered.\n     *\n     * @readonly\n     * @member {Set.<module:engine/view/node~Node>}\n     */\n\n    this.markedChildren = new Set();\n    /**\n     * Set of text nodes which text data changed and may need to be rendered.\n     *\n     * @readonly\n     * @member {Set.<module:engine/view/node~Node>}\n     */\n\n    this.markedTexts = new Set();\n    /**\n     * View selection. Renderer updates DOM selection based on the view selection.\n     *\n     * @readonly\n     * @member {module:engine/view/documentselection~DocumentSelection}\n     */\n\n    this.selection = selection;\n    /**\n     * Indicates if the view document is focused and selection can be rendered. Selection will not be rendered if\n     * this is set to `false`.\n     *\n     * @member {Boolean}\n     */\n\n    this.isFocused = false;\n    /**\n     * The text node in which the inline filler was rendered.\n     *\n     * @private\n     * @member {Text}\n     */\n\n    this._inlineFiller = null;\n    /**\n     * DOM element containing fake selection.\n     *\n     * @private\n     * @type {null|HTMLElement}\n     */\n\n    this._fakeSelectionContainer = null;\n  }\n  /**\n   * Marks a view node to be updated in the DOM by {@link #render `render()`}.\n   *\n   * Note that only view nodes whose parents have corresponding DOM elements need to be marked to be synchronized.\n   *\n   * @see #markedAttributes\n   * @see #markedChildren\n   * @see #markedTexts\n   *\n   * @param {module:engine/view/document~ChangeType} type Type of the change.\n   * @param {module:engine/view/node~Node} node Node to be marked.\n   */\n\n\n  _createClass(Renderer, [{\n    key: \"markToSync\",\n    value: function markToSync(type, node) {\n      if (type === 'text') {\n        if (this.domConverter.mapViewToDom(node.parent)) {\n          this.markedTexts.add(node);\n        }\n      } else {\n        // If the node has no DOM element it is not rendered yet,\n        // its children/attributes do not need to be marked to be sync.\n        if (!this.domConverter.mapViewToDom(node)) {\n          return;\n        }\n\n        if (type === 'attributes') {\n          this.markedAttributes.add(node);\n        } else if (type === 'children') {\n          this.markedChildren.add(node);\n        } else {\n          /**\n           * Unknown type passed to Renderer.markToSync.\n           *\n           * @error renderer-unknown-type\n           */\n          throw new CKEditorError('view-renderer-unknown-type: Unknown type passed to Renderer.markToSync.');\n        }\n      }\n    }\n    /**\n     * Renders all buffered changes ({@link #markedAttributes}, {@link #markedChildren} and {@link #markedTexts}) and\n     * the current view selection (if needed) to the DOM by applying a minimal set of changes to it.\n     *\n     * Renderer tries not to break the text composition (e.g. IME) and x-index of the selection,\n     * so it does as little as it is needed to update the DOM.\n     *\n     * Renderer also handles {@link module:engine/view/filler fillers}. Especially, it checks if the inline filler is needed\n     * at the selection position and adds or removes it. To prevent breaking text composition inline filler will not be\n     * removed as long as the selection is in the text node which needed it at first.\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var inlineFillerPosition; // Refresh mappings.\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.markedChildren[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var element = _step.value;\n\n          this._updateChildrenMappings(element);\n        } // There was inline filler rendered in the DOM but it's not\n        // at the selection position any more, so we can remove it\n        // (cause even if it's needed, it must be placed in another location).\n\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      if (this._inlineFiller && !this._isSelectionInInlineFiller()) {\n        this._removeInlineFiller();\n      } // If we've got the filler, let's try to guess its position in the view.\n\n\n      if (this._inlineFiller) {\n        inlineFillerPosition = this._getInlineFillerPosition();\n      } // Otherwise, if it's needed, create it at the selection position.\n      else if (this._needsInlineFillerAtSelection()) {\n          inlineFillerPosition = this.selection.getFirstPosition(); // Do not use `markToSync` so it will be added even if the parent is already added.\n\n          this.markedChildren.add(inlineFillerPosition.parent);\n        }\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.markedAttributes[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var _element = _step2.value;\n\n          this._updateAttrs(_element);\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.markedChildren[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var _element2 = _step3.value;\n\n          this._updateChildren(_element2, {\n            inlineFillerPosition: inlineFillerPosition\n          });\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = this.markedTexts[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var node = _step4.value;\n\n          if (!this.markedChildren.has(node.parent) && this.domConverter.mapViewToDom(node.parent)) {\n            this._updateText(node, {\n              inlineFillerPosition: inlineFillerPosition\n            });\n          }\n        } // Check whether the inline filler is required and where it really is in the DOM.\n        // At this point in most cases it will be in the DOM, but there are exceptions.\n        // For example, if the inline filler was deep in the created DOM structure, it will not be created.\n        // Similarly, if it was removed at the beginning of this function and then neither text nor children were updated,\n        // it will not be present.\n        // Fix those and similar scenarios.\n\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      if (inlineFillerPosition) {\n        var fillerDomPosition = this.domConverter.viewPositionToDom(inlineFillerPosition);\n        var domDocument = fillerDomPosition.parent.ownerDocument;\n\n        if (!startsWithFiller(fillerDomPosition.parent)) {\n          // Filler has not been created at filler position. Create it now.\n          this._inlineFiller = addInlineFiller(domDocument, fillerDomPosition.parent, fillerDomPosition.offset);\n        } else {\n          // Filler has been found, save it.\n          this._inlineFiller = fillerDomPosition.parent;\n        }\n      } else {\n        // There is no filler needed.\n        this._inlineFiller = null;\n      }\n\n      this._updateSelection();\n\n      this._updateFocus();\n\n      this.markedTexts.clear();\n      this.markedAttributes.clear();\n      this.markedChildren.clear();\n    }\n    /**\n     * Updates mappings of view element's children.\n     *\n     * Children that were replaced in the view structure by similar elements (same tag name) are treated as 'replaced'.\n     * This means that their mappings can be updated so the new view elements are mapped to the existing DOM elements.\n     * Thanks to that these elements do not need to be re-rendered completely.\n     *\n     * @private\n     * @param {module:engine/view/node~Node} viewElement The view element whose children mappings will be updated.\n     */\n\n  }, {\n    key: \"_updateChildrenMappings\",\n    value: function _updateChildrenMappings(viewElement) {\n      var domElement = this.domConverter.mapViewToDom(viewElement);\n\n      if (!domElement) {\n        // If there is no `domElement` it means that it was already removed from DOM and there is no need to process it.\n        return;\n      }\n\n      var actualDomChildren = this.domConverter.mapViewToDom(viewElement).childNodes;\n      var expectedDomChildren = Array.from(this.domConverter.viewChildrenToDom(viewElement, domElement.ownerDocument, {\n        withChildren: false\n      }));\n\n      var diff = this._diffNodeLists(actualDomChildren, expectedDomChildren);\n\n      var actions = this._findReplaceActions(diff, actualDomChildren, expectedDomChildren);\n\n      if (actions.indexOf('replace') !== -1) {\n        var counter = {\n          equal: 0,\n          insert: 0,\n          delete: 0\n        };\n        var _iteratorNormalCompletion5 = true;\n        var _didIteratorError5 = false;\n        var _iteratorError5 = undefined;\n\n        try {\n          for (var _iterator5 = actions[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n            var action = _step5.value;\n\n            if (action === 'replace') {\n              var insertIndex = counter.equal + counter.insert;\n              var deleteIndex = counter.equal + counter.delete;\n              var viewChild = viewElement.getChild(insertIndex); // The 'uiElement' is a special one and its children are not stored in a view (#799),\n              // so we cannot use it with replacing flow (since it uses view children during rendering\n              // which will always result in rendering empty element).\n\n              if (viewChild && !viewChild.is('uiElement')) {\n                this._updateElementMappings(viewChild, actualDomChildren[deleteIndex]);\n              }\n\n              remove(expectedDomChildren[insertIndex]);\n              counter.equal++;\n            } else {\n              counter[action]++;\n            }\n          }\n        } catch (err) {\n          _didIteratorError5 = true;\n          _iteratorError5 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n              _iterator5.return();\n            }\n          } finally {\n            if (_didIteratorError5) {\n              throw _iteratorError5;\n            }\n          }\n        }\n      }\n    }\n    /**\n     * Updates mappings of a given view element.\n     *\n     * @private\n     * @param {module:engine/view/node~Node} viewElement The view element whose mappings will be updated.\n     * @param {Node} domElement The DOM element representing the given view element.\n     */\n\n  }, {\n    key: \"_updateElementMappings\",\n    value: function _updateElementMappings(viewElement, domElement) {\n      // Remap 'DomConverter' bindings.\n      this.domConverter.unbindDomElement(domElement);\n      this.domConverter.bindElements(domElement, viewElement); // View element may have children which needs to be updated, but are not marked, mark them to update.\n\n      this.markedChildren.add(viewElement); // Because we replace new view element mapping with the existing one, the corresponding DOM element\n      // will not be rerendered. The new view element may have different attributes than the previous one.\n      // Since its corresponding DOM element will not be rerendered, new attributes will not be added\n      // to the DOM, so we need to mark it here to make sure its attributes gets updated. See #1427 for more\n      // detailed case study.\n      // Also there are cases where replaced element is removed from the view structure and then has\n      // its attributes changed or removed. In such cases the element will not be present in `markedAttributes`\n      // and also may be the same (`element.isSimilar()`) as the reused element not having its attributes updated.\n      // To prevent such situations we always mark reused element to have its attributes rerenderd (#1560).\n\n      this.markedAttributes.add(viewElement);\n    }\n    /**\n     * Gets the position of the inline filler based on the current selection.\n     * Here, we assume that we know that the filler is needed and\n     * {@link #_isSelectionInInlineFiller is at the selection position}, and, since it is needed,\n     * it is somewhere at the selection position.\n     *\n     * Note: The filler position cannot be restored based on the filler's DOM text node, because\n     * when this method is called (before rendering), the bindings will often be broken. View-to-DOM\n     * bindings are only dependable after rendering.\n     *\n     * @private\n     * @returns {module:engine/view/position~Position}\n     */\n\n  }, {\n    key: \"_getInlineFillerPosition\",\n    value: function _getInlineFillerPosition() {\n      var firstPos = this.selection.getFirstPosition();\n\n      if (firstPos.parent.is('text')) {\n        return ViewPosition._createBefore(this.selection.getFirstPosition().parent);\n      } else {\n        return firstPos;\n      }\n    }\n    /**\n     * Returns `true` if the selection has not left the inline filler's text node.\n     * If it is `true`, it means that the filler had been added for a reason and the selection did not\n     * leave the filler's text node. For example, the user can be in the middle of a composition so it should not be touched.\n     *\n     * @private\n     * @returns {Boolean} `true` if the inline filler and selection are in the same place.\n     */\n\n  }, {\n    key: \"_isSelectionInInlineFiller\",\n    value: function _isSelectionInInlineFiller() {\n      if (this.selection.rangeCount != 1 || !this.selection.isCollapsed) {\n        return false;\n      } // Note, we can't check if selection's position equals position of the\n      // this._inlineFiller node, because of #663. We may not be able to calculate\n      // the filler's position in the view at this stage.\n      // Instead, we check it the other way – whether selection is anchored in\n      // that text node or next to it.\n      // Possible options are:\n      // \"FILLER{}\"\n      // \"FILLERadded-text{}\"\n\n\n      var selectionPosition = this.selection.getFirstPosition();\n      var position = this.domConverter.viewPositionToDom(selectionPosition);\n\n      if (position && isText(position.parent) && startsWithFiller(position.parent)) {\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Removes the inline filler.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_removeInlineFiller\",\n    value: function _removeInlineFiller() {\n      var domFillerNode = this._inlineFiller; // Something weird happened and the stored node doesn't contain the filler's text.\n\n      if (!startsWithFiller(domFillerNode)) {\n        /**\n         * The inline filler node was lost. Most likely, something overwrote the filler text node\n         * in the DOM.\n         *\n         * @error view-renderer-filler-was-lost\n         */\n        throw new CKEditorError('view-renderer-filler-was-lost: The inline filler node was lost.');\n      }\n\n      if (isInlineFiller(domFillerNode)) {\n        domFillerNode.parentNode.removeChild(domFillerNode);\n      } else {\n        domFillerNode.data = domFillerNode.data.substr(INLINE_FILLER_LENGTH);\n      }\n\n      this._inlineFiller = null;\n    }\n    /**\n     * Checks if the inline {@link module:engine/view/filler filler} should be added.\n     *\n     * @private\n     * @returns {Boolean} `true` if the inline filler should be added.\n     */\n\n  }, {\n    key: \"_needsInlineFillerAtSelection\",\n    value: function _needsInlineFillerAtSelection() {\n      if (this.selection.rangeCount != 1 || !this.selection.isCollapsed) {\n        return false;\n      }\n\n      var selectionPosition = this.selection.getFirstPosition();\n      var selectionParent = selectionPosition.parent;\n      var selectionOffset = selectionPosition.offset; // If there is no DOM root we do not care about fillers.\n\n      if (!this.domConverter.mapViewToDom(selectionParent.root)) {\n        return false;\n      }\n\n      if (!selectionParent.is('element')) {\n        return false;\n      } // Prevent adding inline filler inside elements with contenteditable=false.\n      // https://github.com/ckeditor/ckeditor5-engine/issues/1170\n\n\n      if (!isEditable(selectionParent)) {\n        return false;\n      } // We have block filler, we do not need inline one.\n\n\n      if (selectionOffset === selectionParent.getFillerOffset()) {\n        return false;\n      }\n\n      var nodeBefore = selectionPosition.nodeBefore;\n      var nodeAfter = selectionPosition.nodeAfter;\n\n      if (nodeBefore instanceof ViewText || nodeAfter instanceof ViewText) {\n        return false;\n      }\n\n      return true;\n    }\n    /**\n     * Checks if text needs to be updated and possibly updates it.\n     *\n     * @private\n     * @param {module:engine/view/text~Text} viewText View text to update.\n     * @param {Object} options\n     * @param {module:engine/view/position~Position} options.inlineFillerPosition The position where the inline\n     * filler should be rendered.\n     */\n\n  }, {\n    key: \"_updateText\",\n    value: function _updateText(viewText, options) {\n      var domText = this.domConverter.findCorrespondingDomText(viewText);\n      var newDomText = this.domConverter.viewToDom(viewText, domText.ownerDocument);\n      var actualText = domText.data;\n      var expectedText = newDomText.data;\n      var filler = options.inlineFillerPosition;\n\n      if (filler && filler.parent == viewText.parent && filler.offset == viewText.index) {\n        expectedText = INLINE_FILLER + expectedText;\n      }\n\n      if (actualText != expectedText) {\n        var actions = fastDiff(actualText, expectedText);\n        var _iteratorNormalCompletion6 = true;\n        var _didIteratorError6 = false;\n        var _iteratorError6 = undefined;\n\n        try {\n          for (var _iterator6 = actions[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n            var action = _step6.value;\n\n            if (action.type === 'insert') {\n              domText.insertData(action.index, action.values.join(''));\n            } else {\n              // 'delete'\n              domText.deleteData(action.index, action.howMany);\n            }\n          }\n        } catch (err) {\n          _didIteratorError6 = true;\n          _iteratorError6 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n              _iterator6.return();\n            }\n          } finally {\n            if (_didIteratorError6) {\n              throw _iteratorError6;\n            }\n          }\n        }\n      }\n    }\n    /**\n     * Checks if attribute list needs to be updated and possibly updates it.\n     *\n     * @private\n     * @param {module:engine/view/element~Element} viewElement The view element to update.\n     */\n\n  }, {\n    key: \"_updateAttrs\",\n    value: function _updateAttrs(viewElement) {\n      var domElement = this.domConverter.mapViewToDom(viewElement);\n\n      if (!domElement) {\n        // If there is no `domElement` it means that 'viewElement' is outdated as its mapping was updated\n        // in 'this._updateChildrenMappings()'. There is no need to process it as new view element which\n        // replaced old 'viewElement' mapping was also added to 'this.markedAttributes'\n        // in 'this._updateChildrenMappings()' so it will be processed separately.\n        return;\n      }\n\n      var domAttrKeys = Array.from(domElement.attributes).map(function (attr) {\n        return attr.name;\n      });\n      var viewAttrKeys = viewElement.getAttributeKeys(); // Add or overwrite attributes.\n\n      var _iteratorNormalCompletion7 = true;\n      var _didIteratorError7 = false;\n      var _iteratorError7 = undefined;\n\n      try {\n        for (var _iterator7 = viewAttrKeys[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n          var key = _step7.value;\n          domElement.setAttribute(key, viewElement.getAttribute(key));\n        } // Remove from DOM attributes which do not exists in the view.\n\n      } catch (err) {\n        _didIteratorError7 = true;\n        _iteratorError7 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n            _iterator7.return();\n          }\n        } finally {\n          if (_didIteratorError7) {\n            throw _iteratorError7;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion8 = true;\n      var _didIteratorError8 = false;\n      var _iteratorError8 = undefined;\n\n      try {\n        for (var _iterator8 = domAttrKeys[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n          var _key = _step8.value;\n\n          if (!viewElement.hasAttribute(_key)) {\n            domElement.removeAttribute(_key);\n          }\n        }\n      } catch (err) {\n        _didIteratorError8 = true;\n        _iteratorError8 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n            _iterator8.return();\n          }\n        } finally {\n          if (_didIteratorError8) {\n            throw _iteratorError8;\n          }\n        }\n      }\n    }\n    /**\n     * Checks if elements child list needs to be updated and possibly updates it.\n     *\n     * @private\n     * @param {module:engine/view/element~Element} viewElement View element to update.\n     * @param {Object} options\n     * @param {module:engine/view/position~Position} options.inlineFillerPosition The position where the inline\n     * filler should be rendered.\n     */\n\n  }, {\n    key: \"_updateChildren\",\n    value: function _updateChildren(viewElement, options) {\n      var domElement = this.domConverter.mapViewToDom(viewElement);\n\n      if (!domElement) {\n        // If there is no `domElement` it means that it was already removed from DOM.\n        // There is no need to process it. It will be processed when re-inserted.\n        return;\n      }\n\n      var inlineFillerPosition = options.inlineFillerPosition;\n      var actualDomChildren = this.domConverter.mapViewToDom(viewElement).childNodes;\n      var expectedDomChildren = Array.from(this.domConverter.viewChildrenToDom(viewElement, domElement.ownerDocument, {\n        bind: true,\n        inlineFillerPosition: inlineFillerPosition\n      })); // Inline filler element has to be created as it is present in the DOM, but not in the view. It is required\n      // during diffing so text nodes could be compared correctly and also during rendering to maintain\n      // proper order and indexes while updating the DOM.\n\n      if (inlineFillerPosition && inlineFillerPosition.parent === viewElement) {\n        addInlineFiller(domElement.ownerDocument, expectedDomChildren, inlineFillerPosition.offset);\n      }\n\n      var diff = this._diffNodeLists(actualDomChildren, expectedDomChildren);\n\n      var i = 0;\n      var nodesToUnbind = new Set();\n      var _iteratorNormalCompletion9 = true;\n      var _didIteratorError9 = false;\n      var _iteratorError9 = undefined;\n\n      try {\n        for (var _iterator9 = diff[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n          var action = _step9.value;\n\n          if (action === 'insert') {\n            insertAt(domElement, i, expectedDomChildren[i]);\n            i++;\n          } else if (action === 'delete') {\n            nodesToUnbind.add(actualDomChildren[i]);\n            remove(actualDomChildren[i]);\n          } else {\n            // 'equal'\n            // Force updating text nodes inside elements which did not change and do not need to be re-rendered (#1125).\n            this._markDescendantTextToSync(this.domConverter.domToView(expectedDomChildren[i]));\n\n            i++;\n          }\n        } // Unbind removed nodes. When node does not have a parent it means that it was removed from DOM tree during\n        // comparision with the expected DOM. We don't need to check child nodes, because if child node was reinserted,\n        // it was moved to DOM tree out of the removed node.\n\n      } catch (err) {\n        _didIteratorError9 = true;\n        _iteratorError9 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion9 && _iterator9.return != null) {\n            _iterator9.return();\n          }\n        } finally {\n          if (_didIteratorError9) {\n            throw _iteratorError9;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion10 = true;\n      var _didIteratorError10 = false;\n      var _iteratorError10 = undefined;\n\n      try {\n        for (var _iterator10 = nodesToUnbind[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n          var node = _step10.value;\n\n          if (!node.parentNode) {\n            this.domConverter.unbindDomElement(node);\n          }\n        }\n      } catch (err) {\n        _didIteratorError10 = true;\n        _iteratorError10 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion10 && _iterator10.return != null) {\n            _iterator10.return();\n          }\n        } finally {\n          if (_didIteratorError10) {\n            throw _iteratorError10;\n          }\n        }\n      }\n    }\n    /**\n     * Shorthand for diffing two arrays or node lists of DOM nodes.\n     *\n     * @private\n     * @param {Array.<Node>|NodeList} actualDomChildren Actual DOM children\n     * @param {Array.<Node>|NodeList} expectedDomChildren Expected DOM children.\n     * @returns {Array.<String>} The list of actions based on the {@link module:utils/diff~diff} function.\n     */\n\n  }, {\n    key: \"_diffNodeLists\",\n    value: function _diffNodeLists(actualDomChildren, expectedDomChildren) {\n      return diff(actualDomChildren, expectedDomChildren, sameNodes.bind(null, this.domConverter.blockFiller));\n    }\n    /**\n     * Finds DOM nodes that were replaced with the similar nodes (same tag name) in the view. All nodes are compared\n     * within one `insert`/`delete` action group, for example:\n     *\n     * \t\tActual DOM:\t\t<p><b>Foo</b>Bar<i>Baz</i><b>Bax</b></p>\n     * \t\tExpected DOM:\t<p>Bar<b>123</b><i>Baz</i><b>456</b></p>\n     * \t\tInput actions:\t[ insert, insert, delete, delete, equal, insert, delete ]\n     * \t\tOutput actions:\t[ insert, replace, delete, equal, replace ]\n     *\n     * @private\n     * @param {Array.<String>} actions Actions array which is a result of the {@link module:utils/diff~diff} function.\n     * @param {Array.<Node>|NodeList} actualDom Actual DOM children\n     * @param {Array.<Node>} expectedDom Expected DOM children.\n     * @returns {Array.<String>} Actions array modified with the `replace` actions.\n     */\n\n  }, {\n    key: \"_findReplaceActions\",\n    value: function _findReplaceActions(actions, actualDom, expectedDom) {\n      // If there is no both 'insert' and 'delete' actions, no need to check for replaced elements.\n      if (actions.indexOf('insert') === -1 || actions.indexOf('delete') === -1) {\n        return actions;\n      }\n\n      var newActions = [];\n      var actualSlice = [];\n      var expectedSlice = [];\n      var counter = {\n        equal: 0,\n        insert: 0,\n        delete: 0\n      };\n      var _iteratorNormalCompletion11 = true;\n      var _didIteratorError11 = false;\n      var _iteratorError11 = undefined;\n\n      try {\n        for (var _iterator11 = actions[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n          var action = _step11.value;\n\n          if (action === 'insert') {\n            expectedSlice.push(expectedDom[counter.equal + counter.insert]);\n          } else if (action === 'delete') {\n            actualSlice.push(actualDom[counter.equal + counter.delete]);\n          } else {\n            // equal\n            newActions = newActions.concat(diff(actualSlice, expectedSlice, areSimilar).map(function (x) {\n              return x === 'equal' ? 'replace' : x;\n            }));\n            newActions.push('equal'); // Reset stored elements on 'equal'.\n\n            actualSlice = [];\n            expectedSlice = [];\n          }\n\n          counter[action]++;\n        }\n      } catch (err) {\n        _didIteratorError11 = true;\n        _iteratorError11 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion11 && _iterator11.return != null) {\n            _iterator11.return();\n          }\n        } finally {\n          if (_didIteratorError11) {\n            throw _iteratorError11;\n          }\n        }\n      }\n\n      return newActions.concat(diff(actualSlice, expectedSlice, areSimilar).map(function (x) {\n        return x === 'equal' ? 'replace' : x;\n      }));\n    }\n    /**\n     * Marks text nodes to be synchronized.\n     *\n     * If a text node is passed, it will be marked. If an element is passed, all descendant text nodes inside it will be marked.\n     *\n     * @private\n     * @param {module:engine/view/node~Node} viewNode View node to sync.\n     */\n\n  }, {\n    key: \"_markDescendantTextToSync\",\n    value: function _markDescendantTextToSync(viewNode) {\n      if (!viewNode) {\n        return;\n      }\n\n      if (viewNode.is('text')) {\n        this.markedTexts.add(viewNode);\n      } else if (viewNode.is('element')) {\n        var _iteratorNormalCompletion12 = true;\n        var _didIteratorError12 = false;\n        var _iteratorError12 = undefined;\n\n        try {\n          for (var _iterator12 = viewNode.getChildren()[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n            var child = _step12.value;\n\n            this._markDescendantTextToSync(child);\n          }\n        } catch (err) {\n          _didIteratorError12 = true;\n          _iteratorError12 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion12 && _iterator12.return != null) {\n              _iterator12.return();\n            }\n          } finally {\n            if (_didIteratorError12) {\n              throw _iteratorError12;\n            }\n          }\n        }\n      }\n    }\n    /**\n     * Checks if the selection needs to be updated and possibly updates it.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_updateSelection\",\n    value: function _updateSelection() {\n      // If there is no selection - remove DOM and fake selections.\n      if (this.selection.rangeCount === 0) {\n        this._removeDomSelection();\n\n        this._removeFakeSelection();\n\n        return;\n      }\n\n      var domRoot = this.domConverter.mapViewToDom(this.selection.editableElement); // Do nothing if there is no focus, or there is no DOM element corresponding to selection's editable element.\n\n      if (!this.isFocused || !domRoot) {\n        return;\n      } // Render selection.\n\n\n      if (this.selection.isFake) {\n        this._updateFakeSelection(domRoot);\n      } else {\n        this._removeFakeSelection();\n\n        this._updateDomSelection(domRoot);\n      }\n    }\n    /**\n     * Updates the fake selection.\n     *\n     * @private\n     * @param {HTMLElement} domRoot A valid DOM root where the fake selection container should be added.\n     */\n\n  }, {\n    key: \"_updateFakeSelection\",\n    value: function _updateFakeSelection(domRoot) {\n      var domDocument = domRoot.ownerDocument;\n      var container = this._fakeSelectionContainer; // Create fake selection container if one does not exist.\n\n      if (!container) {\n        this._fakeSelectionContainer = container = domDocument.createElement('div');\n        Object.assign(container.style, {\n          position: 'fixed',\n          top: 0,\n          left: '-9999px',\n          // See https://github.com/ckeditor/ckeditor5/issues/752.\n          width: '42px'\n        }); // Fill it with a text node so we can update it later.\n\n        container.appendChild(domDocument.createTextNode(\"\\xA0\"));\n      } // Add fake container if not already added.\n\n\n      if (!container.parentElement) {\n        domRoot.appendChild(container);\n      } // Update contents.\n\n\n      container.firstChild.data = this.selection.fakeSelectionLabel || \"\\xA0\"; // Update selection.\n\n      var domSelection = domDocument.getSelection();\n      var domRange = domDocument.createRange();\n      domSelection.removeAllRanges();\n      domRange.selectNodeContents(container);\n      domSelection.addRange(domRange); // Bind fake selection container with current selection.\n\n      this.domConverter.bindFakeSelection(container, this.selection);\n    }\n    /**\n     * Updates the DOM selection.\n     *\n     * @private\n     * @param {HTMLElement} domRoot A valid DOM root where the DOM selection should be rendered.\n     */\n\n  }, {\n    key: \"_updateDomSelection\",\n    value: function _updateDomSelection(domRoot) {\n      var domSelection = domRoot.ownerDocument.defaultView.getSelection(); // Let's check whether DOM selection needs updating at all.\n\n      if (!this._domSelectionNeedsUpdate(domSelection)) {\n        return;\n      } // Multi-range selection is not available in most browsers, and, at least in Chrome, trying to\n      // set such selection, that is not continuous, throws an error. Because of that, we will just use anchor\n      // and focus of view selection.\n      // Since we are not supporting multi-range selection, we also do not need to check if proper editable is\n      // selected. If there is any editable selected, it is okay (editable is taken from selection anchor).\n\n\n      var anchor = this.domConverter.viewPositionToDom(this.selection.anchor);\n      var focus = this.domConverter.viewPositionToDom(this.selection.focus); // Focus the new editing host.\n      // Otherwise, FF may throw an error (https://github.com/ckeditor/ckeditor5/issues/721).\n\n      domRoot.focus();\n      domSelection.collapse(anchor.parent, anchor.offset);\n      domSelection.extend(focus.parent, focus.offset); // Firefox–specific hack (https://github.com/ckeditor/ckeditor5-engine/issues/1439).\n\n      if (env.isGecko) {\n        fixGeckoSelectionAfterBr(focus, domSelection);\n      }\n    }\n    /**\n     * Checks whether a given DOM selection needs to be updated.\n     *\n     * @private\n     * @param {Selection} domSelection The DOM selection to check.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"_domSelectionNeedsUpdate\",\n    value: function _domSelectionNeedsUpdate(domSelection) {\n      if (!this.domConverter.isDomSelectionCorrect(domSelection)) {\n        // Current DOM selection is in incorrect position. We need to update it.\n        return true;\n      }\n\n      var oldViewSelection = domSelection && this.domConverter.domSelectionToView(domSelection);\n\n      if (oldViewSelection && this.selection.isEqual(oldViewSelection)) {\n        return false;\n      } // If selection is not collapsed, it does not need to be updated if it is similar.\n\n\n      if (!this.selection.isCollapsed && this.selection.isSimilar(oldViewSelection)) {\n        // Selection did not changed and is correct, do not update.\n        return false;\n      } // Selections are not similar.\n\n\n      return true;\n    }\n    /**\n     * Removes the DOM selection.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_removeDomSelection\",\n    value: function _removeDomSelection() {\n      var _iteratorNormalCompletion13 = true;\n      var _didIteratorError13 = false;\n      var _iteratorError13 = undefined;\n\n      try {\n        for (var _iterator13 = this.domDocuments[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n          var doc = _step13.value;\n          var domSelection = doc.getSelection();\n\n          if (domSelection.rangeCount) {\n            var activeDomElement = doc.activeElement;\n            var viewElement = this.domConverter.mapDomToView(activeDomElement);\n\n            if (activeDomElement && viewElement) {\n              doc.getSelection().removeAllRanges();\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError13 = true;\n        _iteratorError13 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion13 && _iterator13.return != null) {\n            _iterator13.return();\n          }\n        } finally {\n          if (_didIteratorError13) {\n            throw _iteratorError13;\n          }\n        }\n      }\n    }\n    /**\n     * Removes the fake selection.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_removeFakeSelection\",\n    value: function _removeFakeSelection() {\n      var container = this._fakeSelectionContainer;\n\n      if (container) {\n        container.remove();\n      }\n    }\n    /**\n     * Checks if focus needs to be updated and possibly updates it.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_updateFocus\",\n    value: function _updateFocus() {\n      if (this.isFocused) {\n        var editable = this.selection.editableElement;\n\n        if (editable) {\n          this.domConverter.focus(editable);\n        }\n      }\n    }\n  }]);\n\n  return Renderer;\n}();\n\nexport { Renderer as default };\nmix(Renderer, ObservableMixin); // Checks if provided element is editable.\n//\n// @private\n// @param {module:engine/view/element~Element} element\n// @returns {Boolean}\n\nfunction isEditable(element) {\n  if (element.getAttribute('contenteditable') == 'false') {\n    return false;\n  }\n\n  var parent = element.findAncestor(function (element) {\n    return element.hasAttribute('contenteditable');\n  });\n  return !parent || parent.getAttribute('contenteditable') == 'true';\n} // Adds inline filler at a given position.\n//\n// The position can be given as an array of DOM nodes and an offset in that array,\n// or a DOM parent element and an offset in that element.\n//\n// @private\n// @param {Document} domDocument\n// @param {Element|Array.<Node>} domParentOrArray\n// @param {Number} offset\n// @returns {Text} The DOM text node that contains an inline filler.\n\n\nfunction addInlineFiller(domDocument, domParentOrArray, offset) {\n  var childNodes = domParentOrArray instanceof Array ? domParentOrArray : domParentOrArray.childNodes;\n  var nodeAfterFiller = childNodes[offset];\n\n  if (isText(nodeAfterFiller)) {\n    nodeAfterFiller.data = INLINE_FILLER + nodeAfterFiller.data;\n    return nodeAfterFiller;\n  } else {\n    var fillerNode = domDocument.createTextNode(INLINE_FILLER);\n\n    if (Array.isArray(domParentOrArray)) {\n      childNodes.splice(offset, 0, fillerNode);\n    } else {\n      insertAt(domParentOrArray, offset, fillerNode);\n    }\n\n    return fillerNode;\n  }\n} // Whether two DOM nodes should be considered as similar.\n// Nodes are considered similar if they have the same tag name.\n//\n// @private\n// @param {Node} node1\n// @param {Node} node2\n// @returns {Boolean}\n\n\nfunction areSimilar(node1, node2) {\n  return isNode(node1) && isNode(node2) && !isText(node1) && !isText(node2) && node1.tagName.toLowerCase() === node2.tagName.toLowerCase();\n} // Whether two dom nodes should be considered as the same.\n// Two nodes which are considered the same are:\n//\n//\t\t* Text nodes with the same text.\n//\t\t* Element nodes represented by the same object.\n//\t\t* Two block filler elements.\n//\n// @private\n// @param {Function} blockFiller Block filler creator function, see {@link module:engine/view/domconverter~DomConverter#blockFiller}.\n// @param {Node} node1\n// @param {Node} node2\n// @returns {Boolean}\n\n\nfunction sameNodes(blockFiller, actualDomChild, expectedDomChild) {\n  // Elements.\n  if (actualDomChild === expectedDomChild) {\n    return true;\n  } // Texts.\n  else if (isText(actualDomChild) && isText(expectedDomChild)) {\n      return actualDomChild.data === expectedDomChild.data;\n    } // Block fillers.\n    else if (isBlockFiller(actualDomChild, blockFiller) && isBlockFiller(expectedDomChild, blockFiller)) {\n        return true;\n      } // Not matching types.\n\n\n  return false;\n} // The following is a Firefox–specific hack (https://github.com/ckeditor/ckeditor5-engine/issues/1439).\n// When the native DOM selection is at the end of the block and preceded by <br /> e.g.\n//\n//\t\t<p>foo<br/>[]</p>\n//\n// which happens a lot when using the soft line break, the browser fails to (visually) move the\n// caret to the new line. A quick fix is as simple as force–refreshing the selection with the same range.\n\n\nfunction fixGeckoSelectionAfterBr(focus, domSelection) {\n  var parent = focus.parent; // This fix works only when the focus point is at the very end of an element.\n  // There is no point in running it in cases unrelated to the browser bug.\n\n  if (parent.nodeType != Node.ELEMENT_NODE || focus.offset != parent.childNodes.length - 1) {\n    return;\n  }\n\n  var childAtOffset = parent.childNodes[focus.offset]; // To stay on the safe side, the fix being as specific as possible, it targets only the\n  // selection which is at the very end of the element and preceded by <br />.\n\n  if (childAtOffset && childAtOffset.tagName == 'BR') {\n    domSelection.addRange(domSelection.getRangeAt(0));\n  }\n}","import baseIsEqual from './_baseIsEqual.js';\n\n/**\n * This method is like `_.isEqual` except that it accepts `customizer` which\n * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n * are handled by the method instead. The `customizer` is invoked with up to\n * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * function isGreeting(value) {\n *   return /^h(?:i|ello)$/.test(value);\n * }\n *\n * function customizer(objValue, othValue) {\n *   if (isGreeting(objValue) && isGreeting(othValue)) {\n *     return true;\n *   }\n * }\n *\n * var array = ['hello', 'goodbye'];\n * var other = ['hi', 'goodbye'];\n *\n * _.isEqualWith(array, other, customizer);\n * // => true\n */\nfunction isEqualWith(value, other, customizer) {\n  customizer = typeof customizer == 'function' ? customizer : undefined;\n  var result = customizer ? customizer(value, other) : undefined;\n  return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n}\n\nexport default isEqualWith;\n","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/observer/mutationobserver\n */\n\n/* globals window */\nimport Observer from './observer';\nimport ViewSelection from '../selection';\nimport { startsWithFiller, getDataWithoutFiller } from '../filler';\nimport { isEqualWith } from 'lodash-es';\n/**\n * Mutation observer class observes changes in the DOM, fires {@link module:engine/view/document~Document#event:mutations} event, mark view\n * elements as changed and call {@link module:engine/view/renderer~Renderer#render}.\n * Because all mutated nodes are marked as \"to be rendered\" and the\n * {@link module:engine/view/renderer~Renderer#render} is called, all changes will be reverted, unless the mutation will be handled by the\n * {@link module:engine/view/document~Document#event:mutations} event listener. It means user will see only handled changes, and the editor\n * will block all changes which are not handled.\n *\n * Mutation Observer also take care of reducing number of mutations which are fired. It removes duplicates and\n * mutations on elements which do not have corresponding view elements. Also\n * {@link module:engine/view/observer/mutationobserver~MutatedText text mutation} is fired only if parent element do not change child list.\n *\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\n *\n * @extends module:engine/view/observer/observer~Observer\n */\n\nvar MutationObserver =\n/*#__PURE__*/\nfunction (_Observer) {\n  _inherits(MutationObserver, _Observer);\n\n  function MutationObserver(view) {\n    var _this;\n\n    _classCallCheck(this, MutationObserver);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MutationObserver).call(this, view));\n    /**\n     * Native mutation observer config.\n     *\n     * @private\n     * @member {Object}\n     */\n\n    _this._config = {\n      childList: true,\n      characterData: true,\n      characterDataOldValue: true,\n      subtree: true\n    };\n    /**\n     * Reference to the {@link module:engine/view/view~View#domConverter}.\n     *\n     * @member {module:engine/view/domconverter~DomConverter}\n     */\n\n    _this.domConverter = view.domConverter;\n    /**\n     * Reference to the {@link module:engine/view/view~View#renderer}.\n     *\n     * @member {module:engine/view/renderer~Renderer}\n     */\n\n    _this.renderer = view._renderer;\n    /**\n     * Observed DOM elements.\n     *\n     * @private\n     * @member {Array.<HTMLElement>}\n     */\n\n    _this._domElements = [];\n    /**\n     * Native mutation observer.\n     *\n     * @private\n     * @member {MutationObserver}\n     */\n\n    _this._mutationObserver = new window.MutationObserver(_this._onMutations.bind(_assertThisInitialized(_assertThisInitialized(_this))));\n    return _this;\n  }\n  /**\n   * Synchronously fires {@link module:engine/view/document~Document#event:mutations} event with all mutations in record queue.\n   * At the same time empties the queue so mutations will not be fired twice.\n   */\n\n\n  _createClass(MutationObserver, [{\n    key: \"flush\",\n    value: function flush() {\n      this._onMutations(this._mutationObserver.takeRecords());\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"observe\",\n    value: function observe(domElement) {\n      this._domElements.push(domElement);\n\n      if (this.isEnabled) {\n        this._mutationObserver.observe(domElement, this._config);\n      }\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      _get(_getPrototypeOf(MutationObserver.prototype), \"enable\", this).call(this);\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this._domElements[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var domElement = _step.value;\n\n          this._mutationObserver.observe(domElement, this._config);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      _get(_getPrototypeOf(MutationObserver.prototype), \"disable\", this).call(this);\n\n      this._mutationObserver.disconnect();\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(MutationObserver.prototype), \"destroy\", this).call(this);\n\n      this._mutationObserver.disconnect();\n    }\n    /**\n     * Handles mutations. Deduplicates, mark view elements to sync, fire event and call render.\n     *\n     * @private\n     * @param {Array.<Object>} domMutations Array of native mutations.\n     */\n\n  }, {\n    key: \"_onMutations\",\n    value: function _onMutations(domMutations) {\n      // As a result of this.flush() we can have an empty collection.\n      if (domMutations.length === 0) {\n        return;\n      }\n\n      var domConverter = this.domConverter; // Use map and set for deduplication.\n\n      var mutatedTexts = new Map();\n      var mutatedElements = new Set(); // Handle `childList` mutations first, so we will be able to check if the `characterData` mutation is in the\n      // element with changed structure anyway.\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = domMutations[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var mutation = _step2.value;\n\n          if (mutation.type === 'childList') {\n            var element = domConverter.mapDomToView(mutation.target); // Do not collect mutations from UIElements.\n\n            if (element && element.is('uiElement')) {\n              continue;\n            }\n\n            if (element && !this._isBogusBrMutation(mutation)) {\n              mutatedElements.add(element);\n            }\n          }\n        } // Handle `characterData` mutations later, when we have the full list of nodes which changed structure.\n\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = domMutations[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var _mutation = _step3.value;\n\n          var _element = domConverter.mapDomToView(_mutation.target); // Do not collect mutations from UIElements.\n\n\n          if (_element && _element.is('uiElement')) {\n            continue;\n          }\n\n          if (_mutation.type === 'characterData') {\n            var text = domConverter.findCorrespondingViewText(_mutation.target);\n\n            if (text && !mutatedElements.has(text.parent)) {\n              // Use text as a key, for deduplication. If there will be another mutation on the same text element\n              // we will have only one in the map.\n              mutatedTexts.set(text, {\n                type: 'text',\n                oldText: text.data,\n                newText: getDataWithoutFiller(_mutation.target),\n                node: text\n              });\n            } // When we added first letter to the text node which had only inline filler, for the DOM it is mutation\n            // on text, but for the view, where filler text node did not existed, new text node was created, so we\n            // need to fire 'children' mutation instead of 'text'.\n            else if (!text && startsWithFiller(_mutation.target)) {\n                mutatedElements.add(domConverter.mapDomToView(_mutation.target.parentNode));\n              }\n          }\n        } // Now we build the list of mutations to fire and mark elements. We did not do it earlier to avoid marking the\n        // same node multiple times in case of duplication.\n        // List of mutations we will fire.\n\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      var viewMutations = [];\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = mutatedTexts.values()[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var mutatedText = _step4.value;\n          this.renderer.markToSync('text', mutatedText.node);\n          viewMutations.push(mutatedText);\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = mutatedElements[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var viewElement = _step5.value;\n          var domElement = domConverter.mapViewToDom(viewElement);\n          var viewChildren = Array.from(viewElement.getChildren());\n          var newViewChildren = Array.from(domConverter.domChildrenToView(domElement, {\n            withChildren: false\n          })); // It may happen that as a result of many changes (sth was inserted and then removed),\n          // both elements haven't really changed. #1031\n\n          if (!isEqualWith(viewChildren, newViewChildren, sameNodes)) {\n            this.renderer.markToSync('children', viewElement);\n            viewMutations.push({\n              type: 'children',\n              oldChildren: viewChildren,\n              newChildren: newViewChildren,\n              node: viewElement\n            });\n          }\n        } // Retrieve `domSelection` using `ownerDocument` of one of mutated nodes.\n        // There should not be simultaneous mutation in multiple documents, so it's fine.\n\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      var domSelection = domMutations[0].target.ownerDocument.getSelection();\n      var viewSelection = null;\n\n      if (domSelection && domSelection.anchorNode) {\n        // If `domSelection` is inside a dom node that is already bound to a view node from view tree, get\n        // corresponding selection in the view and pass it together with `viewMutations`. The `viewSelection` may\n        // be used by features handling mutations.\n        // Only one range is supported.\n        var viewSelectionAnchor = domConverter.domPositionToView(domSelection.anchorNode, domSelection.anchorOffset);\n        var viewSelectionFocus = domConverter.domPositionToView(domSelection.focusNode, domSelection.focusOffset); // Anchor and focus has to be properly mapped to view.\n\n        if (viewSelectionAnchor && viewSelectionFocus) {\n          viewSelection = new ViewSelection(viewSelectionAnchor);\n          viewSelection.setFocus(viewSelectionFocus);\n        }\n      }\n\n      this.document.fire('mutations', viewMutations, viewSelection); // If nothing changes on `mutations` event, at this point we have \"dirty DOM\" (changed) and de-synched\n      // view (which has not been changed). In order to \"reset DOM\" we render the view again.\n\n      this.view.render();\n\n      function sameNodes(child1, child2) {\n        // First level of comparison (array of children vs array of children) – use the Lodash's default behavior.\n        if (Array.isArray(child1)) {\n          return;\n        } // Elements.\n\n\n        if (child1 === child2) {\n          return true;\n        } // Texts.\n        else if (child1.is('text') && child2.is('text')) {\n            return child1.data === child2.data;\n          } // Not matching types.\n\n\n        return false;\n      }\n    }\n    /**\n     * Checks if mutation was generated by the browser inserting bogus br on the end of the block element.\n     * Such mutations are generated while pressing space or performing native spellchecker correction\n     * on the end of the block element in Firefox browser.\n     *\n     * @private\n     * @param {Object} mutation Native mutation object.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"_isBogusBrMutation\",\n    value: function _isBogusBrMutation(mutation) {\n      var addedNode = null; // Check if mutation added only one node on the end of its parent.\n\n      if (mutation.nextSibling === null && mutation.removedNodes.length === 0 && mutation.addedNodes.length == 1) {\n        addedNode = this.domConverter.domToView(mutation.addedNodes[0], {\n          withChildren: false\n        });\n      }\n\n      return addedNode && addedNode.is('element', 'br');\n    }\n  }]);\n\n  return MutationObserver;\n}(Observer);\n/**\n * Fired when mutation occurred. If tree view is not changed on this event, DOM will be reverted to the state before\n * mutation, so all changes which should be applied, should be handled on this event.\n *\n * Introduced by {@link module:engine/view/observer/mutationobserver~MutationObserver}.\n *\n * Note that because {@link module:engine/view/observer/mutationobserver~MutationObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/mutationobserver~MutationObserver\n * @event module:engine/view/document~Document#event:mutations\n * @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|module:engine/view/observer/mutationobserver~MutatedChildren>}\n * viewMutations Array of mutations.\n * For mutated texts it will be {@link module:engine/view/observer/mutationobserver~MutatedText} and for mutated elements it will be\n * {@link module:engine/view/observer/mutationobserver~MutatedChildren}. You can recognize the type based on the `type` property.\n * @param {module:engine/view/selection~Selection|null} viewSelection View selection that is a result of converting DOM selection to view.\n * Keep in\n * mind that the DOM selection is already \"updated\", meaning that it already acknowledges changes done in mutation.\n */\n\n/**\n * Mutation item for text.\n *\n * @see module:engine/view/document~Document#event:mutations\n * @see module:engine/view/observer/mutationobserver~MutatedChildren\n *\n * @typedef {Object} module:engine/view/observer/mutationobserver~MutatedText\n *\n * @property {String} type For text mutations it is always 'text'.\n * @property {module:engine/view/text~Text} node Mutated text node.\n * @property {String} oldText Old text.\n * @property {String} newText New text.\n */\n\n/**\n * Mutation item for child nodes.\n *\n * @see module:engine/view/document~Document#event:mutations\n * @see module:engine/view/observer/mutationobserver~MutatedText\n *\n * @typedef {Object} module:engine/view/observer/mutationobserver~MutatedChildren\n *\n * @property {String} type For child nodes mutations it is always 'children'.\n * @property {module:engine/view/element~Element} node Parent of the mutated children.\n * @property {Array.<module:engine/view/node~Node>} oldChildren Old child nodes.\n * @property {Array.<module:engine/view/node~Node>} newChildren New child nodes.\n */\n\n\nexport { MutationObserver as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/observer/keyobserver\n */\nimport DomEventObserver from './domeventobserver';\nimport { getCode } from '@ckeditor/ckeditor5-utils/src/keyboard';\n/**\n * {@link module:engine/view/document~Document#event:keydown Key down} event observer.\n *\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\n\nvar KeyObserver =\n/*#__PURE__*/\nfunction (_DomEventObserver) {\n  _inherits(KeyObserver, _DomEventObserver);\n\n  function KeyObserver(view) {\n    var _this;\n\n    _classCallCheck(this, KeyObserver);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(KeyObserver).call(this, view));\n    _this.domEventType = ['keydown', 'keyup'];\n    return _this;\n  }\n\n  _createClass(KeyObserver, [{\n    key: \"onDomEvent\",\n    value: function onDomEvent(domEvt) {\n      this.fire(domEvt.type, domEvt, {\n        keyCode: domEvt.keyCode,\n        altKey: domEvt.altKey,\n        ctrlKey: domEvt.ctrlKey || domEvt.metaKey,\n        shiftKey: domEvt.shiftKey,\n\n        get keystroke() {\n          return getCode(this);\n        }\n\n      });\n    }\n  }]);\n\n  return KeyObserver;\n}(DomEventObserver);\n/**\n * Fired when a key has been pressed.\n *\n * Introduced by {@link module:engine/view/observer/keyobserver~KeyObserver}.\n *\n * Note that because {@link module:engine/view/observer/keyobserver~KeyObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/keyobserver~KeyObserver\n * @event module:engine/view/document~Document#event:keydown\n * @param {module:engine/view/observer/keyobserver~KeyEventData} keyEventData\n */\n\n/**\n * Fired when a key has been released.\n *\n * Introduced by {@link module:engine/view/observer/keyobserver~KeyObserver}.\n *\n * Note that because {@link module:engine/view/observer/keyobserver~KeyObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/keyobserver~KeyObserver\n * @event module:engine/view/document~Document#event:keyup\n * @param {module:engine/view/observer/keyobserver~KeyEventData} keyEventData\n */\n\n/**\n * The value of both events - {@link module:engine/view/document~Document#event:keydown} and\n * {@link module:engine/view/document~Document#event:keyup}.\n *\n * @class module:engine/view/observer/keyobserver~KeyEventData\n * @extends module:engine/view/observer/domeventdata~DomEventData\n * @implements module:utils/keyboard~KeystrokeInfo\n */\n\n/**\n * Code of the whole keystroke. See {@link module:utils/keyboard~getCode}.\n *\n * @readonly\n * @member {Number} module:engine/view/observer/keyobserver~KeyEventData#keystroke\n */\n\n\nexport { KeyObserver as default };","import root from './_root.js';\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nexport default now;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","import isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import isObject from './isObject.js';\nimport now from './now.js';\nimport toNumber from './toNumber.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nexport default debounce;\n","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/observer/fakeselectionobserver\n */\nimport Observer from './observer';\nimport ViewSelection from '../selection';\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\nimport { debounce } from 'lodash-es';\n/**\n * Fake selection observer class. If view selection is fake it is placed in dummy DOM container. This observer listens\n * on {@link module:engine/view/document~Document#event:keydown keydown} events and handles moving fake view selection to the correct place\n * if arrow keys are pressed.\n * Fires {@link module:engine/view/document~Document#event:selectionChange selectionChange event} simulating natural behaviour of\n * {@link module:engine/view/observer/selectionobserver~SelectionObserver SelectionObserver}.\n *\n * @extends module:engine/view/observer/observer~Observer.Observer\n */\n\nvar FakeSelectionObserver =\n/*#__PURE__*/\nfunction (_Observer) {\n  _inherits(FakeSelectionObserver, _Observer);\n\n  /**\n   * Creates new FakeSelectionObserver instance.\n   *\n   * @param {module:engine/view/view~View} view\n   */\n  function FakeSelectionObserver(view) {\n    var _this;\n\n    _classCallCheck(this, FakeSelectionObserver);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FakeSelectionObserver).call(this, view));\n    /**\n     * Fires debounced event `selectionChangeDone`. It uses `lodash#debounce` method to delay function call.\n     *\n     * @private\n     * @param {Object} data Selection change data.\n     * @method #_fireSelectionChangeDoneDebounced\n     */\n\n    _this._fireSelectionChangeDoneDebounced = debounce(function (data) {\n      return _this.document.fire('selectionChangeDone', data);\n    }, 200);\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(FakeSelectionObserver, [{\n    key: \"observe\",\n    value: function observe() {\n      var _this2 = this;\n\n      var document = this.document;\n      document.on('keydown', function (eventInfo, data) {\n        var selection = document.selection;\n\n        if (selection.isFake && _isArrowKeyCode(data.keyCode) && _this2.isEnabled) {\n          // Prevents default key down handling - no selection change will occur.\n          data.preventDefault();\n\n          _this2._handleSelectionMove(data.keyCode);\n        }\n      }, {\n        priority: 'lowest'\n      });\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(FakeSelectionObserver.prototype), \"destroy\", this).call(this);\n\n      this._fireSelectionChangeDoneDebounced.cancel();\n    }\n    /**\n     * Handles collapsing view selection according to given key code. If left or up key is provided - new selection will be\n     * collapsed to left. If right or down key is pressed - new selection will be collapsed to right.\n     *\n     * This method fires {@link module:engine/view/document~Document#event:selectionChange} and\n     * {@link module:engine/view/document~Document#event:selectionChangeDone} events imitating behaviour of\n     * {@link module:engine/view/observer/selectionobserver~SelectionObserver}.\n     *\n     * @private\n     * @param {Number} keyCode\n     * @fires module:engine/view/document~Document#event:selectionChange\n     * @fires module:engine/view/document~Document#event:selectionChangeDone\n     */\n\n  }, {\n    key: \"_handleSelectionMove\",\n    value: function _handleSelectionMove(keyCode) {\n      var selection = this.document.selection;\n      var newSelection = new ViewSelection(selection.getRanges(), {\n        backward: selection.isBackward,\n        fake: false\n      }); // Left or up arrow pressed - move selection to start.\n\n      if (keyCode == keyCodes.arrowleft || keyCode == keyCodes.arrowup) {\n        newSelection.setTo(newSelection.getFirstPosition());\n      } // Right or down arrow pressed - move selection to end.\n\n\n      if (keyCode == keyCodes.arrowright || keyCode == keyCodes.arrowdown) {\n        newSelection.setTo(newSelection.getLastPosition());\n      }\n\n      var data = {\n        oldSelection: selection,\n        newSelection: newSelection,\n        domSelection: null\n      }; // Fire dummy selection change event.\n\n      this.document.fire('selectionChange', data); // Call` #_fireSelectionChangeDoneDebounced` every time when `selectionChange` event is fired.\n      // This function is debounced what means that `selectionChangeDone` event will be fired only when\n      // defined int the function time will elapse since the last time the function was called.\n      // So `selectionChangeDone` will be fired when selection will stop changing.\n\n      this._fireSelectionChangeDoneDebounced(data);\n    }\n  }]);\n\n  return FakeSelectionObserver;\n}(Observer); // Checks if one of the arrow keys is pressed.\n//\n// @private\n// @param {Number} keyCode\n// @returns {Boolean}\n\n\nexport { FakeSelectionObserver as default };\n\nfunction _isArrowKeyCode(keyCode) {\n  return keyCode == keyCodes.arrowright || keyCode == keyCodes.arrowleft || keyCode == keyCodes.arrowup || keyCode == keyCodes.arrowdown;\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/observer/selectionobserver\n */\n\n/* global setInterval, clearInterval */\nimport Observer from './observer';\nimport MutationObserver from './mutationobserver';\nimport log from '@ckeditor/ckeditor5-utils/src/log';\nimport { debounce } from 'lodash-es';\n/**\n * Selection observer class observes selection changes in the document. If selection changes on the document this\n * observer checks if there are any mutations and if DOM selection is different than the\n * {@link module:engine/view/document~Document#selection view selection}. Selection observer fires\n * {@link module:engine/view/document~Document#event:selectionChange} event only if selection change was the only change in the document\n * and DOM selection is different then the view selection.\n *\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\n *\n * @see module:engine/view/observer/mutationobserver~MutationObserver\n * @extends module:engine/view/observer/observer~Observer\n */\n\nvar SelectionObserver =\n/*#__PURE__*/\nfunction (_Observer) {\n  _inherits(SelectionObserver, _Observer);\n\n  function SelectionObserver(view) {\n    var _this;\n\n    _classCallCheck(this, SelectionObserver);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SelectionObserver).call(this, view));\n    /**\n     * Instance of the mutation observer. Selection observer calls\n     * {@link module:engine/view/observer/mutationobserver~MutationObserver#flush} to ensure that the mutations will be handled\n     * before the {@link module:engine/view/document~Document#event:selectionChange} event is fired.\n     *\n     * @readonly\n     * @member {module:engine/view/observer/mutationobserver~MutationObserver}\n     * module:engine/view/observer/selectionobserver~SelectionObserver#mutationObserver\n     */\n\n    _this.mutationObserver = view.getObserver(MutationObserver);\n    /**\n     * Reference to the view {@link module:engine/view/documentselection~DocumentSelection} object used to compare\n     * new selection with it.\n     *\n     * @readonly\n     * @member {module:engine/view/documentselection~DocumentSelection}\n     * module:engine/view/observer/selectionobserver~SelectionObserver#selection\n     */\n\n    _this.selection = _this.document.selection;\n    /* eslint-disable max-len */\n\n    /**\n     * Reference to the {@link module:engine/view/view~View#domConverter}.\n     *\n     * @readonly\n     * @member {module:engine/view/domconverter~DomConverter} module:engine/view/observer/selectionobserver~SelectionObserver#domConverter\n     */\n\n    /* eslint-enable max-len */\n\n    _this.domConverter = view.domConverter;\n    /**\n     * Set of documents which have added \"selectionchange\" listener to avoid adding listener twice to the same\n     * document.\n     *\n     * @private\n     * @member {WeakSet.<Document>} module:engine/view/observer/selectionobserver~SelectionObserver#_documents\n     */\n\n    _this._documents = new WeakSet();\n    /**\n     * Fires debounced event `selectionChangeDone`. It uses `lodash#debounce` method to delay function call.\n     *\n     * @private\n     * @param {Object} data Selection change data.\n     * @method #_fireSelectionChangeDoneDebounced\n     */\n\n    _this._fireSelectionChangeDoneDebounced = debounce(function (data) {\n      return _this.document.fire('selectionChangeDone', data);\n    }, 200);\n    _this._clearInfiniteLoopInterval = setInterval(function () {\n      return _this._clearInfiniteLoop();\n    }, 1000);\n    /**\n     * Private property to check if the code does not enter infinite loop.\n     *\n     * @private\n     * @member {Number} module:engine/view/observer/selectionobserver~SelectionObserver#_loopbackCounter\n     */\n\n    _this._loopbackCounter = 0;\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(SelectionObserver, [{\n    key: \"observe\",\n    value: function observe(domElement) {\n      var _this2 = this;\n\n      var domDocument = domElement.ownerDocument; // Add listener once per each document.\n\n      if (this._documents.has(domDocument)) {\n        return;\n      }\n\n      this.listenTo(domDocument, 'selectionchange', function () {\n        _this2._handleSelectionChange(domDocument);\n      });\n\n      this._documents.add(domDocument);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(SelectionObserver.prototype), \"destroy\", this).call(this);\n\n      clearInterval(this._clearInfiniteLoopInterval);\n\n      this._fireSelectionChangeDoneDebounced.cancel();\n    }\n    /**\n     * Selection change listener. {@link module:engine/view/observer/mutationobserver~MutationObserver#flush Flush} mutations, check if\n     * selection changes and fires {@link module:engine/view/document~Document#event:selectionChange} event on every change\n     * and {@link module:engine/view/document~Document#event:selectionChangeDone} when selection stop changing.\n     *\n     * @private\n     * @param {Document} domDocument DOM document.\n     */\n\n  }, {\n    key: \"_handleSelectionChange\",\n    value: function _handleSelectionChange(domDocument) {\n      // Selection is handled when document is not focused but is read-only. This is because in read-only\n      // mode contenteditable is set as false and editor won't receive focus but we still need to know\n      // selection position.\n      if (!this.isEnabled || !this.document.isFocused && !this.document.isReadOnly) {\n        return;\n      } // Ensure the mutation event will be before selection event on all browsers.\n\n\n      this.mutationObserver.flush(); // If there were mutations then the view will be re-rendered by the mutation observer and selection\n      // will be updated, so selections will equal and event will not be fired, as expected.\n\n      var domSelection = domDocument.defaultView.getSelection();\n      var newViewSelection = this.domConverter.domSelectionToView(domSelection);\n\n      if (this.selection.isEqual(newViewSelection) && this.domConverter.isDomSelectionCorrect(domSelection)) {\n        return;\n      } // Ensure we are not in the infinite loop (#400).\n      // This counter is reset each second. 60 selection changes in 1 second is enough high number\n      // to be very difficult (impossible) to achieve using just keyboard keys (during normal editor use).\n\n\n      if (++this._loopbackCounter > 60) {\n        /**\n         * Selection change observer detected an infinite rendering loop.\n         * Most probably you try to put the selection in the position which is not allowed\n         * by the browser and browser fixes it automatically what causes `selectionchange` event on\n         * which a loopback through a model tries to re-render the wrong selection and again.\n         *\n         * @error selectionchange-infinite-loop\n         */\n        log.warn('selectionchange-infinite-loop: Selection change observer detected an infinite rendering loop.');\n        return;\n      }\n\n      if (this.selection.isSimilar(newViewSelection)) {\n        // If selection was equal and we are at this point of algorithm, it means that it was incorrect.\n        // Just re-render it, no need to fire any events, etc.\n        this.view.render();\n      } else {\n        var data = {\n          oldSelection: this.selection,\n          newSelection: newViewSelection,\n          domSelection: domSelection\n        }; // Prepare data for new selection and fire appropriate events.\n\n        this.document.fire('selectionChange', data); // Call` #_fireSelectionChangeDoneDebounced` every time when `selectionChange` event is fired.\n        // This function is debounced what means that `selectionChangeDone` event will be fired only when\n        // defined int the function time will elapse since the last time the function was called.\n        // So `selectionChangeDone` will be fired when selection will stop changing.\n\n        this._fireSelectionChangeDoneDebounced(data);\n      }\n    }\n    /**\n     * Clears `SelectionObserver` internal properties connected with preventing infinite loop.\n     *\n     * @protected\n     */\n\n  }, {\n    key: \"_clearInfiniteLoop\",\n    value: function _clearInfiniteLoop() {\n      this._loopbackCounter = 0;\n    }\n  }]);\n\n  return SelectionObserver;\n}(Observer);\n/**\n * Fired when selection has changed. This event is fired only when the selection change was the only change that happened\n * in the document, and old selection is different then the new selection.\n *\n * Introduced by {@link module:engine/view/observer/selectionobserver~SelectionObserver}.\n *\n * Note that because {@link module:engine/view/observer/selectionobserver~SelectionObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/selectionobserver~SelectionObserver\n * @event module:engine/view/document~Document#event:selectionChange\n * @param {Object} data\n * @param {module:engine/view/documentselection~DocumentSelection} data.oldSelection Old View selection which is\n * {@link module:engine/view/document~Document#selection}.\n * @param {module:engine/view/selection~Selection} data.newSelection New View selection which is converted DOM selection.\n * @param {Selection} data.domSelection Native DOM selection.\n */\n\n/**\n * Fired when selection stops changing.\n *\n * Introduced by {@link module:engine/view/observer/selectionobserver~SelectionObserver}.\n *\n * Note that because {@link module:engine/view/observer/selectionobserver~SelectionObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/selectionobserver~SelectionObserver\n * @event module:engine/view/document~Document#event:selectionChangeDone\n * @param {Object} data\n * @param {module:engine/view/documentselection~DocumentSelection} data.oldSelection Old View selection which is\n * {@link module:engine/view/document~Document#selection}.\n * @param {module:engine/view/selection~Selection} data.newSelection New View selection which is converted DOM selection.\n * @param {Selection} data.domSelection Native DOM selection.\n */\n\n\nexport { SelectionObserver as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/observer/focusobserver\n */\n\n/* globals setTimeout, clearTimeout */\nimport DomEventObserver from './domeventobserver';\n/**\n * {@link module:engine/view/document~Document#event:focus Focus}\n * and {@link module:engine/view/document~Document#event:blur blur} events observer.\n * Focus observer handle also {@link module:engine/view/rooteditableelement~RootEditableElement#isFocused isFocused} property of the\n * {@link module:engine/view/rooteditableelement~RootEditableElement root elements}.\n *\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\n\nvar FocusObserver =\n/*#__PURE__*/\nfunction (_DomEventObserver) {\n  _inherits(FocusObserver, _DomEventObserver);\n\n  function FocusObserver(view) {\n    var _this;\n\n    _classCallCheck(this, FocusObserver);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FocusObserver).call(this, view));\n    _this.domEventType = ['focus', 'blur'];\n    _this.useCapture = true;\n    var document = _this.document;\n    document.on('focus', function () {\n      document.isFocused = true; // Unfortunately native `selectionchange` event is fired asynchronously.\n      // We need to wait until `SelectionObserver` handle the event and then render. Otherwise rendering will\n      // overwrite new DOM selection with selection from the view.\n      // See https://github.com/ckeditor/ckeditor5-engine/issues/795 for more details.\n      // Long timeout is needed to solve #676 and https://github.com/ckeditor/ckeditor5-engine/issues/1157 issues.\n\n      _this._renderTimeoutId = setTimeout(function () {\n        return view.render();\n      }, 50);\n    });\n    document.on('blur', function (evt, data) {\n      var selectedEditable = document.selection.editableElement;\n\n      if (selectedEditable === null || selectedEditable === data.target) {\n        document.isFocused = false; // Re-render the document to update view elements.\n\n        view.render();\n      }\n    });\n    /**\n     * Identifier of the timeout currently used by focus listener to delay rendering execution.\n     *\n     * @private\n     * @member {Number} #_renderTimeoutId\n     */\n\n    return _this;\n  }\n\n  _createClass(FocusObserver, [{\n    key: \"onDomEvent\",\n    value: function onDomEvent(domEvent) {\n      this.fire(domEvent.type, domEvent);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this._renderTimeoutId) {\n        clearTimeout(this._renderTimeoutId);\n      }\n\n      _get(_getPrototypeOf(FocusObserver.prototype), \"destroy\", this).call(this);\n    }\n  }]);\n\n  return FocusObserver;\n}(DomEventObserver);\n/**\n * Fired when one of the editables gets focus.\n *\n * Introduced by {@link module:engine/view/observer/focusobserver~FocusObserver}.\n *\n * Note that because {@link module:engine/view/observer/focusobserver~FocusObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/focusobserver~FocusObserver\n * @event module:engine/view/document~Document#event:focus\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n\n/**\n * Fired when one of the editables loses focus.\n *\n * Introduced by {@link module:engine/view/observer/focusobserver~FocusObserver}.\n *\n * Note that because {@link module:engine/view/observer/focusobserver~FocusObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/focusobserver~FocusObserver\n * @event module:engine/view/document~Document#event:blur\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n\n\nexport { FocusObserver as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/observer/compositionobserver\n */\nimport DomEventObserver from './domeventobserver';\n/**\n * {@link module:engine/view/document~Document#event:compositionstart Compositionstart},\n * {@link module:engine/view/document~Document#event:compositionupdate compositionupdate} and\n * {@link module:engine/view/document~Document#event:compositionend compositionend} events observer.\n *\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\n\nvar CompositionObserver =\n/*#__PURE__*/\nfunction (_DomEventObserver) {\n  _inherits(CompositionObserver, _DomEventObserver);\n\n  function CompositionObserver(view) {\n    var _this;\n\n    _classCallCheck(this, CompositionObserver);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CompositionObserver).call(this, view));\n    _this.domEventType = ['compositionstart', 'compositionupdate', 'compositionend'];\n    var document = _this.document;\n    document.on('compositionstart', function () {\n      document.isComposing = true;\n    });\n    document.on('compositionend', function () {\n      document.isComposing = false;\n    });\n    return _this;\n  }\n\n  _createClass(CompositionObserver, [{\n    key: \"onDomEvent\",\n    value: function onDomEvent(domEvent) {\n      this.fire(domEvent.type, domEvent);\n    }\n  }]);\n\n  return CompositionObserver;\n}(DomEventObserver);\n/**\n * Fired when composition starts inside one of the editables.\n *\n * Introduced by {@link module:engine/view/observer/compositionobserver~CompositionObserver}.\n *\n * Note that because {@link module:engine/view/observer/compositionobserver~CompositionObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/compositionobserver~CompositionObserver\n * @event module:engine/view/document~Document#event:compositionstart\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n\n/**\n * Fired when composition is updated inside one of the editables.\n *\n * Introduced by {@link module:engine/view/observer/compositionobserver~CompositionObserver}.\n *\n * Note that because {@link module:engine/view/observer/compositionobserver~CompositionObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/compositionobserver~CompositionObserver\n * @event module:engine/view/document~Document#event:compositionupdate\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n\n/**\n * Fired when composition ends inside one of the editables.\n *\n * Introduced by {@link module:engine/view/observer/compositionobserver~CompositionObserver}.\n *\n * Note that because {@link module:engine/view/observer/compositionobserver~CompositionObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/compositionobserver~CompositionObserver\n * @event module:engine/view/document~Document#event:compositionend\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n\n\nexport { CompositionObserver as default };","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/scroll\n */\nimport isRange from './isrange';\nimport Rect from './rect';\nimport isText from './istext';\nvar utils = {};\n/**\n * Makes any page `HTMLElement` or `Range` (`target`) visible inside the browser viewport.\n * This helper will scroll all `target` ancestors and the web browser viewport to reveal the target to\n * the user. If the `target` is already visible, nothing will happen.\n *\n * @param {HTMLElement|Range} options.target A target, which supposed to become visible to the user.\n * @param {Number} [options.viewportOffset] An offset from the edge of the viewport (in pixels)\n * the `target` will be moved by when the viewport is scrolled. It enhances the user experience\n * by keeping the `target` some distance from the edge of the viewport and thus making it easier to\n * read or edit by the user.\n */\n\nexport function scrollViewportToShowTarget(_ref) {\n  var target = _ref.target,\n      _ref$viewportOffset = _ref.viewportOffset,\n      viewportOffset = _ref$viewportOffset === void 0 ? 0 : _ref$viewportOffset;\n  var targetWindow = getWindow(target);\n  var currentWindow = targetWindow;\n  var currentFrame = null; // Iterate over all windows, starting from target's parent window up to window#top.\n\n  while (currentWindow) {\n    var firstAncestorToScroll = void 0; // Let's scroll target's ancestors first to reveal it. Then, once the ancestor scrolls\n    // settled down, the algorithm can eventually scroll the viewport of the current window.\n    //\n    // Note: If the current window is target's **original** window (e.g. the first one),\n    // start scrolling the closest parent of the target. If not, scroll the closest parent\n    // of an iframe that resides in the current window.\n\n    if (currentWindow == targetWindow) {\n      firstAncestorToScroll = getParentElement(target);\n    } else {\n      firstAncestorToScroll = getParentElement(currentFrame);\n    } // Scroll the target's ancestors first. Once done, scrolling the viewport is easy.\n\n\n    scrollAncestorsToShowRect(firstAncestorToScroll, function () {\n      // Note: If the target does not belong to the current window **directly**,\n      // i.e. it resides in an iframe belonging to the window, obtain the target's rect\n      // in the coordinates of the current window. By default, a Rect returns geometry\n      // relative to the current window's viewport. To make it work in a parent window,\n      // it must be shifted.\n      return getRectRelativeToWindow(target, currentWindow);\n    }); // Obtain the rect of the target after it has been scrolled within its ancestors.\n    // It's time to scroll the viewport.\n\n    var targetRect = getRectRelativeToWindow(target, currentWindow);\n    scrollWindowToShowRect(currentWindow, targetRect, viewportOffset);\n\n    if (currentWindow.parent != currentWindow) {\n      // Keep the reference to the <iframe> element the \"previous current window\" was\n      // rendered within. It will be useful to re–calculate the rect of the target\n      // in the parent window's relative geometry. The target's rect must be shifted\n      // by it's iframe's position.\n      currentFrame = currentWindow.frameElement;\n      currentWindow = currentWindow.parent; // If the current window has some parent but frameElement is inaccessible, then they have\n      // different domains/ports and, due to security reasons, accessing and scrolling\n      // the parent window won't be possible.\n      // See https://github.com/ckeditor/ckeditor5/issues/930.\n\n      if (!currentFrame) {\n        return;\n      }\n    } else {\n      currentWindow = null;\n    }\n  }\n}\n/**\n * Makes any page `HTMLElement` or `Range` (target) visible within its scrollable ancestors,\n * e.g. if they have `overflow: scroll` CSS style.\n *\n * @param {HTMLElement|Range} target A target, which supposed to become visible to the user.\n */\n\nexport function scrollAncestorsToShowTarget(target) {\n  var targetParent = getParentElement(target);\n  scrollAncestorsToShowRect(targetParent, function () {\n    return new Rect(target);\n  });\n} // TODO: Using a property value shorthand in the top of the file\n// causes JSDoc to throw errors. See https://github.com/cksource/docs-builder/issues/75.\n\nObject.assign(utils, {\n  scrollViewportToShowTarget: scrollViewportToShowTarget,\n  scrollAncestorsToShowTarget: scrollAncestorsToShowTarget\n}); // Makes a given rect visible within its parent window.\n//\n// Note: Avoid the situation where the caret is still in the viewport, but totally\n// at the edge of it. In such situation, if it moved beyond the viewport in the next\n// action e.g. after paste, the scrolling would move it to the viewportOffset level\n// and it all would look like the caret visually moved up/down:\n//\n// 1.\n//\t\t| foo[]\n//\t\t|                                    <--- N px of space below the caret\n//\t\t+---------------------------------...\n//\n// 2. *paste*\n// 3.\n//\t\t|\n//\t\t|\n//\t\t+-foo-----------------------------...\n//\t\t  bar[]                              <--- caret below viewport, scrolling...\n//\n// 4. *scrolling*\n// 5.\n//\t\t|\n//\t\t| foo\n//\t\t| bar[]                              <--- caret precisely at the edge\n//\t\t+---------------------------------...\n//\n// To prevent this, this method checks the rects moved by the viewportOffset to cover\n// the upper/lower edge of the viewport. It makes sure if the action repeats, there's\n// no twitching – it's a purely visual improvement:\n//\n// 5. (after fix)\n//\t\t|\n//\t\t| foo\n//\t\t| bar[]\n//\t\t|                                    <--- N px of space below the caret\n//\t\t+---------------------------------...\n//\n// @private\n// @param {Window} window A window which is scrolled to reveal the rect.\n// @param {module:utils/dom/rect~Rect} rect A rect which is to be revealed.\n// @param {Number} viewportOffset See scrollViewportToShowTarget.\n\nfunction scrollWindowToShowRect(window, rect, viewportOffset) {\n  var targetShiftedDownRect = rect.clone().moveBy(0, viewportOffset);\n  var targetShiftedUpRect = rect.clone().moveBy(0, -viewportOffset);\n  var viewportRect = new Rect(window).excludeScrollbarsAndBorders();\n  var rects = [targetShiftedUpRect, targetShiftedDownRect];\n\n  if (!rects.every(function (rect) {\n    return viewportRect.contains(rect);\n  })) {\n    var scrollX = window.scrollX,\n        scrollY = window.scrollY;\n\n    if (isAbove(targetShiftedUpRect, viewportRect)) {\n      scrollY -= viewportRect.top - rect.top + viewportOffset;\n    } else if (isBelow(targetShiftedDownRect, viewportRect)) {\n      scrollY += rect.bottom - viewportRect.bottom + viewportOffset;\n    } // TODO: Web browsers scroll natively to place the target in the middle\n    // of the viewport. It's not a very popular case, though.\n\n\n    if (isLeftOf(rect, viewportRect)) {\n      scrollX -= viewportRect.left - rect.left + viewportOffset;\n    } else if (isRightOf(rect, viewportRect)) {\n      scrollX += rect.right - viewportRect.right + viewportOffset;\n    }\n\n    window.scrollTo(scrollX, scrollY);\n  }\n} // Recursively scrolls element ancestors to visually reveal a rect.\n//\n// @private\n// @param {HTMLElement} A parent The first ancestors to start scrolling.\n// @param {Function} getRect A function which returns the Rect, which is to be revealed.\n\n\nfunction scrollAncestorsToShowRect(parent, getRect) {\n  var parentWindow = getWindow(parent);\n  var parentRect, targetRect;\n\n  while (parent != parentWindow.document.body) {\n    targetRect = getRect();\n    parentRect = new Rect(parent).excludeScrollbarsAndBorders();\n\n    if (!parentRect.contains(targetRect)) {\n      if (isAbove(targetRect, parentRect)) {\n        parent.scrollTop -= parentRect.top - targetRect.top;\n      } else if (isBelow(targetRect, parentRect)) {\n        parent.scrollTop += targetRect.bottom - parentRect.bottom;\n      }\n\n      if (isLeftOf(targetRect, parentRect)) {\n        parent.scrollLeft -= parentRect.left - targetRect.left;\n      } else if (isRightOf(targetRect, parentRect)) {\n        parent.scrollLeft += targetRect.right - parentRect.right;\n      }\n    }\n\n    parent = parent.parentNode;\n  }\n} // Determines if a given `Rect` extends beyond the bottom edge of the second `Rect`.\n//\n// @private\n// @param {module:utils/dom/rect~Rect} firstRect\n// @param {module:utils/dom/rect~Rect} secondRect\n\n\nfunction isBelow(firstRect, secondRect) {\n  return firstRect.bottom > secondRect.bottom;\n} // Determines if a given `Rect` extends beyond the top edge of the second `Rect`.\n//\n// @private\n// @param {module:utils/dom/rect~Rect} firstRect\n// @param {module:utils/dom/rect~Rect} secondRect\n\n\nfunction isAbove(firstRect, secondRect) {\n  return firstRect.top < secondRect.top;\n} // Determines if a given `Rect` extends beyond the left edge of the second `Rect`.\n//\n// @private\n// @param {module:utils/dom/rect~Rect} firstRect\n// @param {module:utils/dom/rect~Rect} secondRect\n\n\nfunction isLeftOf(firstRect, secondRect) {\n  return firstRect.left < secondRect.left;\n} // Determines if a given `Rect` extends beyond the right edge of the second `Rect`.\n//\n// @private\n// @param {module:utils/dom/rect~Rect} firstRect\n// @param {module:utils/dom/rect~Rect} secondRect\n\n\nfunction isRightOf(firstRect, secondRect) {\n  return firstRect.right > secondRect.right;\n} // Returns the closest window of an element or range.\n//\n// @private\n// @param {HTMLElement|Range} firstRect\n// @returns {Window}\n\n\nfunction getWindow(elementOrRange) {\n  if (isRange(elementOrRange)) {\n    return elementOrRange.startContainer.ownerDocument.defaultView;\n  } else {\n    return elementOrRange.ownerDocument.defaultView;\n  }\n} // Returns the closest parent of an element or DOM range.\n//\n// @private\n// @param {HTMLElement|Range} firstRect\n// @returns {HTMLelement}\n\n\nfunction getParentElement(elementOrRange) {\n  if (isRange(elementOrRange)) {\n    var parent = elementOrRange.commonAncestorContainer; // If a Range is attached to the Text, use the closest element ancestor.\n\n    if (isText(parent)) {\n      parent = parent.parentNode;\n    }\n\n    return parent;\n  } else {\n    return elementOrRange.parentNode;\n  }\n} // Returns the rect of an element or range residing in an iframe.\n// The result rect is relative to the geometry of the passed window instance.\n//\n// @private\n// @param {HTMLElement|Range} target Element or range which rect should be returned.\n// @param {Window} relativeWindow A window the rect should be relative to.\n// @returns {module:utils/dom/rect~Rect}\n\n\nfunction getRectRelativeToWindow(target, relativeWindow) {\n  var targetWindow = getWindow(target);\n  var rect = new Rect(target);\n\n  if (targetWindow === relativeWindow) {\n    return rect;\n  } else {\n    var currentWindow = targetWindow;\n\n    while (currentWindow != relativeWindow) {\n      var frame = currentWindow.frameElement;\n      var frameRect = new Rect(frame).excludeScrollbarsAndBorders();\n      rect.moveBy(frameRect.left, frameRect.top);\n      currentWindow = currentWindow.parent;\n    }\n  }\n\n  return rect;\n}","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/view/view\n */\nimport Document from './document';\nimport DowncastWriter from './downcastwriter';\nimport Renderer from './renderer';\nimport DomConverter from './domconverter';\nimport Position from './position';\nimport Range from './range';\nimport Selection from './selection';\nimport MutationObserver from './observer/mutationobserver';\nimport KeyObserver from './observer/keyobserver';\nimport FakeSelectionObserver from './observer/fakeselectionobserver';\nimport SelectionObserver from './observer/selectionobserver';\nimport FocusObserver from './observer/focusobserver';\nimport CompositionObserver from './observer/compositionobserver';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport log from '@ckeditor/ckeditor5-utils/src/log';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport { scrollViewportToShowTarget } from '@ckeditor/ckeditor5-utils/src/dom/scroll';\nimport { injectUiElementHandling } from './uielement';\nimport { injectQuirksHandling } from './filler';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * Editor's view controller class. Its main responsibility is DOM - View management for editing purposes, to provide\n * abstraction over the DOM structure and events and hide all browsers quirks.\n *\n * View controller renders view document to DOM whenever view structure changes. To determine when view can be rendered,\n * all changes need to be done using the {@link module:engine/view/view~View#change} method, using\n * {@link module:engine/view/downcastwriter~DowncastWriter}:\n *\n *\t\tview.change( writer => {\n *\t\t\twriter.insert( position, writer.createText( 'foo' ) );\n *\t\t} );\n *\n * View controller also register {@link module:engine/view/observer/observer~Observer observers} which observes changes\n * on DOM and fire events on the {@link module:engine/view/document~Document Document}.\n * Note that the following observers are added by the class constructor and are always available:\n *\n * * {@link module:engine/view/observer/mutationobserver~MutationObserver},\n * * {@link module:engine/view/observer/selectionobserver~SelectionObserver},\n * * {@link module:engine/view/observer/focusobserver~FocusObserver},\n * * {@link module:engine/view/observer/keyobserver~KeyObserver},\n * * {@link module:engine/view/observer/fakeselectionobserver~FakeSelectionObserver}.\n * * {@link module:engine/view/observer/compositionobserver~CompositionObserver}.\n *\n * This class also {@link module:engine/view/view~View#attachDomRoot binds the DOM and the view elements}.\n *\n * If you do not need full a DOM - view management, and only want to transform a tree of view elements to a tree of DOM\n * elements you do not need this controller. You can use the {@link module:engine/view/domconverter~DomConverter DomConverter} instead.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\n\nvar View =\n/*#__PURE__*/\nfunction () {\n  function View() {\n    var _this = this;\n\n    _classCallCheck(this, View);\n\n    /**\n     * Instance of the {@link module:engine/view/document~Document} associated with this view controller.\n     *\n     * @readonly\n     * @member {module:engine/view/document~Document} module:engine/view/view~View#document\n     */\n    this.document = new Document();\n    /**\n     * Instance of the {@link module:engine/view/domconverter~DomConverter domConverter} use by\n     * {@link module:engine/view/view~View#renderer renderer}\n     * and {@link module:engine/view/observer/observer~Observer observers}.\n     *\n     * @readonly\n     * @member {module:engine/view/domconverter~DomConverter} module:engine/view/view~View#domConverter\n     */\n\n    this.domConverter = new DomConverter();\n    /**\n     * Instance of the {@link module:engine/view/renderer~Renderer renderer}.\n     *\n     * @protected\n     * @member {module:engine/view/renderer~Renderer} module:engine/view/view~View#renderer\n     */\n\n    this._renderer = new Renderer(this.domConverter, this.document.selection);\n\n    this._renderer.bind('isFocused').to(this.document);\n    /**\n     * Roots of the DOM tree. Map on the `HTMLElement`s with roots names as keys.\n     *\n     * @readonly\n     * @member {Map} module:engine/view/view~View#domRoots\n     */\n\n\n    this.domRoots = new Map();\n    /**\n     * Map of registered {@link module:engine/view/observer/observer~Observer observers}.\n     *\n     * @private\n     * @member {Map.<Function, module:engine/view/observer/observer~Observer>} module:engine/view/view~View#_observers\n     */\n\n    this._observers = new Map();\n    /**\n     * Is set to `true` when {@link #change view changes} are currently in progress.\n     *\n     * @private\n     * @member {Boolean} module:engine/view/view~View#_ongoingChange\n     */\n\n    this._ongoingChange = false;\n    /**\n     * Used to prevent calling {@link #render} and {@link #change} during rendering view to the DOM.\n     *\n     * @private\n     * @member {Boolean} module:engine/view/view~View#_renderingInProgress\n     */\n\n    this._renderingInProgress = false;\n    /**\n     * Used to prevent calling {@link #render} and {@link #change} during rendering view to the DOM.\n     *\n     * @private\n     * @member {Boolean} module:engine/view/view~View#_renderingInProgress\n     */\n\n    this._postFixersInProgress = false;\n    /**\n     * Internal flag to temporary disable rendering. See usage in the editing controller.\n     *\n     * @protected\n     * @member {Boolean} module:engine/view/view~View#_renderingDisabled\n     */\n\n    this._renderingDisabled = false;\n    /**\n     * DowncastWriter instance used in {@link #change change method) callbacks.\n     *\n     * @private\n     * @member {module:engine/view/downcastwriter~DowncastWriter} module:engine/view/view~View#_writer\n     */\n\n    this._writer = new DowncastWriter(this.document); // Add default observers.\n\n    this.addObserver(MutationObserver);\n    this.addObserver(SelectionObserver);\n    this.addObserver(FocusObserver);\n    this.addObserver(KeyObserver);\n    this.addObserver(FakeSelectionObserver);\n    this.addObserver(CompositionObserver); // Inject quirks handlers.\n\n    injectQuirksHandling(this);\n    injectUiElementHandling(this); // Use 'normal' priority so that rendering is performed as first when using that priority.\n\n    this.on('render', function () {\n      _this._render(); // Informs that layout has changed after render.\n\n\n      _this.document.fire('layoutChanged');\n    });\n  }\n  /**\n   * Attaches DOM root element to the view element and enable all observers on that element.\n   * Also {@link module:engine/view/renderer~Renderer#markToSync mark element} to be synchronized with the view\n   * what means that all child nodes will be removed and replaced with content of the view root.\n   *\n   * This method also will change view element name as the same as tag name of given dom root.\n   * Name is always transformed to lower case.\n   *\n   * @param {Element} domRoot DOM root element.\n   * @param {String} [name='main'] Name of the root.\n   */\n\n\n  _createClass(View, [{\n    key: \"attachDomRoot\",\n    value: function attachDomRoot(domRoot) {\n      var _this2 = this;\n\n      var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'main';\n      var viewRoot = this.document.getRoot(name); // Set view root name the same as DOM root tag name.\n\n      viewRoot._name = domRoot.tagName.toLowerCase();\n      this.domRoots.set(name, domRoot);\n      this.domConverter.bindElements(domRoot, viewRoot);\n\n      this._renderer.markToSync('children', viewRoot);\n\n      this._renderer.domDocuments.add(domRoot.ownerDocument);\n\n      viewRoot.on('change:children', function (evt, node) {\n        return _this2._renderer.markToSync('children', node);\n      });\n      viewRoot.on('change:attributes', function (evt, node) {\n        return _this2._renderer.markToSync('attributes', node);\n      });\n      viewRoot.on('change:text', function (evt, node) {\n        return _this2._renderer.markToSync('text', node);\n      });\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this._observers.values()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var observer = _step.value;\n          observer.observe(domRoot, name);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n    /**\n     * Gets DOM root element.\n     *\n     * @param {String} [name='main']  Name of the root.\n     * @returns {Element} DOM root element instance.\n     */\n\n  }, {\n    key: \"getDomRoot\",\n    value: function getDomRoot() {\n      var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'main';\n      return this.domRoots.get(name);\n    }\n    /**\n     * Creates observer of the given type if not yet created, {@link module:engine/view/observer/observer~Observer#enable enables} it\n     * and {@link module:engine/view/observer/observer~Observer#observe attaches} to all existing and future\n     * {@link #domRoots DOM roots}.\n     *\n     * Note: Observers are recognized by their constructor (classes). A single observer will be instantiated and used only\n     * when registered for the first time. This means that features and other components can register a single observer\n     * multiple times without caring whether it has been already added or not.\n     *\n     * @param {Function} Observer The constructor of an observer to add.\n     * Should create an instance inheriting from {@link module:engine/view/observer/observer~Observer}.\n     * @returns {module:engine/view/observer/observer~Observer} Added observer instance.\n     */\n\n  }, {\n    key: \"addObserver\",\n    value: function addObserver(Observer) {\n      var observer = this._observers.get(Observer);\n\n      if (observer) {\n        return observer;\n      }\n\n      observer = new Observer(this);\n\n      this._observers.set(Observer, observer);\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.domRoots[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var _step2$value = _slicedToArray(_step2.value, 2),\n              name = _step2$value[0],\n              domElement = _step2$value[1];\n\n          observer.observe(domElement, name);\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      observer.enable();\n      return observer;\n    }\n    /**\n     * Returns observer of the given type or `undefined` if such observer has not been added yet.\n     *\n     * @param {Function} Observer The constructor of an observer to get.\n     * @returns {module:engine/view/observer/observer~Observer|undefined} Observer instance or undefined.\n     */\n\n  }, {\n    key: \"getObserver\",\n    value: function getObserver(Observer) {\n      return this._observers.get(Observer);\n    }\n    /**\n     * Disables all added observers.\n     */\n\n  }, {\n    key: \"disableObservers\",\n    value: function disableObservers() {\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this._observers.values()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var observer = _step3.value;\n          observer.disable();\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n    /**\n     * Enables all added observers.\n     */\n\n  }, {\n    key: \"enableObservers\",\n    value: function enableObservers() {\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = this._observers.values()[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var observer = _step4.value;\n          observer.enable();\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n    }\n    /**\n     * Scrolls the page viewport and {@link #domRoots} with their ancestors to reveal the\n     * caret, if not already visible to the user.\n     */\n\n  }, {\n    key: \"scrollToTheSelection\",\n    value: function scrollToTheSelection() {\n      var range = this.document.selection.getFirstRange();\n\n      if (range) {\n        scrollViewportToShowTarget({\n          target: this.domConverter.viewRangeToDom(range),\n          viewportOffset: 20\n        });\n      }\n    }\n    /**\n     * It will focus DOM element representing {@link module:engine/view/editableelement~EditableElement EditableElement}\n     * that is currently having selection inside.\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      if (!this.document.isFocused) {\n        var editable = this.document.selection.editableElement;\n\n        if (editable) {\n          this.domConverter.focus(editable);\n          this.render();\n        } else {\n          /**\n           * Before focusing view document, selection should be placed inside one of the view's editables.\n           * Normally its selection will be converted from model document (which have default selection), but\n           * when using view document on its own, we need to manually place selection before focusing it.\n           *\n           * @error view-focus-no-selection\n           */\n          log.warn('view-focus-no-selection: There is no selection in any editable to focus.');\n        }\n      }\n    }\n    /**\n     * The `change()` method is the primary way of changing the view. You should use it to modify any node in the view tree.\n     * It makes sure that after all changes are made the view is rendered to the DOM. It prevents situations when the DOM is updated\n     * when the view state is not yet correct. It allows to nest calls one inside another and still performs a single rendering\n     * after all those changes are made. It also returns the return value of its callback.\n     *\n     *\t\tconst text = view.change( writer => {\n     *\t\t\tconst newText = writer.createText( 'foo' );\n     *\t\t\twriter.insert( position1, newText );\n     *\n     *\t\t\tview.change( writer => {\n     *\t\t\t\twriter.insert( position2, writer.createText( 'bar' ) );\n     *\t\t\t} );\n     *\n     * \t\t\twriter.remove( range );\n     *\n     * \t\t\treturn newText;\n     *\t\t} );\n     *\n     * When the outermost change block is done and rendering to the DOM is over the\n     * {@link module:engine/view/view~View#event:render `View#render`} event is fired.\n     *\n     * This method throws a `applying-view-changes-on-rendering` error when\n     * the change block is used after rendering to the DOM has started.\n     *\n     * @param {Function} callback Callback function which may modify the view.\n     * @returns {*} Value returned by the callback.\n     */\n\n  }, {\n    key: \"change\",\n    value: function change(callback) {\n      if (this._renderingInProgress || this._postFixersInProgress) {\n        /**\n         * Thrown when there is an attempt to make changes to the view tree when it is in incorrect state. This may\n         * cause some unexpected behaviour and inconsistency between the DOM and the view.\n         * This may be caused by:\n         *\n         * * calling {@link #change} or {@link #render} during rendering process,\n         * * calling {@link #change} or {@link #render} inside of\n         *   {@link module:engine/view/document~Document#registerPostFixer post-fixer function}.\n         *\n         * @error cannot-change-view-tree\n         */\n        throw new CKEditorError('cannot-change-view-tree: ' + 'Attempting to make changes to the view when it is in an incorrect state: rendering or post-fixers are in progress. ' + 'This may cause some unexpected behavior and inconsistency between the DOM and the view.');\n      } // Recursive call to view.change() method - execute listener immediately.\n\n\n      if (this._ongoingChange) {\n        return callback(this._writer);\n      } // This lock will assure that all recursive calls to view.change() will end up in same block - one \"render\"\n      // event for all nested calls.\n\n\n      this._ongoingChange = true;\n      var callbackResult = callback(this._writer);\n      this._ongoingChange = false; // This lock is used by editing controller to render changes from outer most model.change() once. As plugins might call\n      // view.change() inside model.change() block - this will ensures that postfixers and rendering are called once after all changes.\n\n      if (!this._renderingDisabled) {\n        this._postFixersInProgress = true;\n\n        this.document._callPostFixers(this._writer);\n\n        this._postFixersInProgress = false;\n        this.fire('render');\n      }\n\n      return callbackResult;\n    }\n    /**\n     * Renders {@link module:engine/view/document~Document view document} to DOM. If any view changes are\n     * currently in progress, rendering will start after all {@link #change change blocks} are processed.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `applying-view-changes-on-rendering` when\n     * trying to re-render when rendering to DOM has already started.\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.change(function () {});\n    }\n    /**\n     * Destroys this instance. Makes sure that all observers are destroyed and listeners removed.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = this._observers.values()[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var observer = _step5.value;\n          observer.destroy();\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      this.stopListening();\n    }\n    /**\n     * Creates position at the given location. The location can be specified as:\n     *\n     * * a {@link module:engine/view/position~Position position},\n     * * parent element and offset (offset defaults to `0`),\n     * * parent element and `'end'` (sets position at the end of that element),\n     * * {@link module:engine/view/item~Item view item} and `'before'` or `'after'` (sets position before or after given view item).\n     *\n     * This method is a shortcut to other constructors such as:\n     *\n     * * {@link #createPositionBefore},\n     * * {@link #createPositionAfter},\n     *\n     * @param {module:engine/view/item~Item|module:engine/model/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n     * first parameter is a {@link module:engine/view/item~Item view item}.\n     */\n\n  }, {\n    key: \"createPositionAt\",\n    value: function createPositionAt(itemOrPosition, offset) {\n      return Position._createAt(itemOrPosition, offset);\n    }\n    /**\n     * Creates a new position after given view item.\n     *\n     * @param {module:engine/view/item~Item} item View item after which the position should be located.\n     * @returns {module:engine/view/position~Position}\n     */\n\n  }, {\n    key: \"createPositionAfter\",\n    value: function createPositionAfter(item) {\n      return Position._createAfter(item);\n    }\n    /**\n     * Creates a new position before given view item.\n     *\n     * @param {module:engine/view/item~Item} item View item before which the position should be located.\n     * @returns {module:engine/view/position~Position}\n     */\n\n  }, {\n    key: \"createPositionBefore\",\n    value: function createPositionBefore(item) {\n      return Position._createBefore(item);\n    }\n    /**\n     * Creates a range spanning from `start` position to `end` position.\n     *\n     * **Note:** This factory method creates it's own {@link module:engine/view/position~Position} instances basing on passed values.\n     *\n     * @param {module:engine/view/position~Position} start Start position.\n     * @param {module:engine/view/position~Position} [end] End position. If not set, range will be collapsed at `start` position.\n     * @returns {module:engine/view/range~Range}\n     */\n\n  }, {\n    key: \"createRange\",\n    value: function createRange(start, end) {\n      return new Range(start, end);\n    }\n    /**\n     * Creates a range that starts before given {@link module:engine/view/item~Item view item} and ends after it.\n     *\n     * @param {module:engine/view/item~Item} item\n     * @returns {module:engine/view/range~Range}\n     */\n\n  }, {\n    key: \"createRangeOn\",\n    value: function createRangeOn(item) {\n      return Range._createOn(item);\n    }\n    /**\n     * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n     * that element and ends after the last child of that element.\n     *\n     * @param {module:engine/view/element~Element} element Element which is a parent for the range.\n     * @returns {module:engine/view/range~Range}\n     */\n\n  }, {\n    key: \"createRangeIn\",\n    value: function createRangeIn(element) {\n      return Range._createIn(element);\n    }\n    /**\n     Creates new {@link module:engine/view/selection~Selection} instance.\n     *\n     * \t\t// Creates empty selection without ranges.\n     *\t\tconst selection = view.createSelection();\n     *\n     *\t\t// Creates selection at the given range.\n     *\t\tconst range = view.createRange( start, end );\n     *\t\tconst selection = view.createSelection( range );\n     *\n     *\t\t// Creates selection at the given ranges\n     * \t\tconst ranges = [ view.createRange( start1, end2 ), view.createRange( star2, end2 ) ];\n     *\t\tconst selection = view.createSelection( ranges );\n     *\n     *\t\t// Creates selection from the other selection.\n     *\t\tconst otherSelection = view.createSelection();\n     *\t\tconst selection = view.createSelection( otherSelection );\n     *\n     *\t\t// Creates selection from the document selection.\n     *\t\tconst selection = view.createSelection( editor.editing.view.document.selection );\n     *\n     * \t\t// Creates selection at the given position.\n     *\t\tconst position = view.createPositionFromPath( root, path );\n     *\t\tconst selection = view.createSelection( position );\n     *\n     *\t\t// Creates collapsed selection at the position of given item and offset.\n     *\t\tconst paragraph = view.createContainerElement( 'paragraph' );\n     *\t\tconst selection = view.createSelection( paragraph, offset );\n     *\n     *\t\t// Creates a range inside an {@link module:engine/view/element~Element element} which starts before the\n     *\t\t// first child of that element and ends after the last child of that element.\n     *\t\tconst selection = view.createSelection( paragraph, 'in' );\n     *\n     *\t\t// Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends\n     *\t\t// just after the item.\n     *\t\tconst selection = view.createSelection( paragraph, 'on' );\n     *\n     * `Selection`'s factory method allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n     *\n     *\t\t// Creates backward selection.\n     *\t\tconst selection = view.createSelection( range, { backward: true } );\n     *\n     * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n     * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n     * represented in other way, for example by applying proper CSS class.\n     *\n     * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\n     * (and be  properly handled by screen readers).\n     *\n     *\t\t// Creates fake selection with label.\n     *\t\tconst selection = view.createSelection( range, { fake: true, label: 'foo' } );\n     *\n     * @param {module:engine/view/selection~Selection|module:engine/view/documentselection~DocumentSelection|\n     * module:engine/view/position~Position|Iterable.<module:engine/view/range~Range>|module:engine/view/range~Range|\n     * module:engine/view/item~Item|null} [selectable=null]\n     * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Offset or place when selectable is an `Item`.\n     * @param {Object} [options]\n     * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n     * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n     * @param {String} [options.label] Label for the fake selection.\n     * @returns {module:engine/view/selection~Selection}\n     */\n\n  }, {\n    key: \"createSelection\",\n    value: function createSelection(selectable, placeOrOffset, options) {\n      return new Selection(selectable, placeOrOffset, options);\n    }\n    /**\n     * Renders all changes. In order to avoid triggering the observers (e.g. mutations) all observers are disabled\n     * before rendering and re-enabled after that.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      this._renderingInProgress = true;\n      this.disableObservers();\n\n      this._renderer.render();\n\n      this.enableObservers();\n      this._renderingInProgress = false;\n    }\n    /**\n     * Fired after a topmost {@link module:engine/view/view~View#change change block} and all\n     * {@link module:engine/view/document~Document#registerPostFixer post-fixers} are executed.\n     *\n     * Actual rendering is performed as a first listener on 'normal' priority.\n     *\n     *\t\tview.on( 'render', () => {\n     *\t\t\t// Rendering to the DOM is complete.\n     *\t\t} );\n     *\n     * This event is useful when you want to update interface elements after the rendering, e.g. position of the\n     * balloon panel. If you wants to change view structure use\n     * {@link module:engine/view/document~Document#registerPostFixer post-fixers}.\n     *\n     * @event module:engine/view/view~View#event:render\n     */\n\n  }]);\n\n  return View;\n}();\n\nexport { View as default };\nmix(View, ObservableMixin);","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/conversion/mapper\n */\nimport ModelPosition from '../model/position';\nimport ModelRange from '../model/range';\nimport ViewPosition from '../view/position';\nimport ViewRange from '../view/range';\nimport ViewText from '../view/text';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n/**\n * Maps elements, positions and markers between {@link module:engine/view/document~Document the view} and\n * {@link module:engine/model/model the model}.\n *\n * Mapper use bound elements to find corresponding elements and positions, so, to get proper results,\n * all model elements should be {@link module:engine/conversion/mapper~Mapper#bindElements bound}.\n *\n * To map complex model to/from view relations, you may provide custom callbacks for\n * {@link module:engine/conversion/mapper~Mapper#event:modelToViewPosition modelToViewPosition event} and\n * {@link module:engine/conversion/mapper~Mapper#event:viewToModelPosition viewToModelPosition event} that are fired whenever\n * a position mapping request occurs.\n * Those events are fired by {@link module:engine/conversion/mapper~Mapper#toViewPosition toViewPosition}\n * and {@link module:engine/conversion/mapper~Mapper#toModelPosition toModelPosition} methods. `Mapper` adds it's own default callbacks\n * with `'lowest'` priority. To override default `Mapper` mapping, add custom callback with higher priority and\n * stop the event.\n */\n\nvar Mapper =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of the mapper.\n   */\n  function Mapper() {\n    var _this = this;\n\n    _classCallCheck(this, Mapper);\n\n    /**\n     * Model element to view element mapping.\n     *\n     * @private\n     * @member {WeakMap}\n     */\n    this._modelToViewMapping = new WeakMap();\n    /**\n     * View element to model element mapping.\n     *\n     * @private\n     * @member {WeakMap}\n     */\n\n    this._viewToModelMapping = new WeakMap();\n    /**\n     * A map containing callbacks between view element names and functions evaluating length of view elements\n     * in model.\n     *\n     * @private\n     * @member {Map}\n     */\n\n    this._viewToModelLengthCallbacks = new Map();\n    /**\n     * Model marker name to view elements mapping.\n     *\n     * Keys are `String`s while values are `Set`s with {@link module:engine/view/element~Element view elements}.\n     * One marker (name) can be mapped to multiple elements.\n     *\n     * @private\n     * @member {Map}\n     */\n\n    this._markerNameToElements = new Map(); // Default mapper algorithm for mapping model position to view position.\n\n    this.on('modelToViewPosition', function (evt, data) {\n      if (data.viewPosition) {\n        return;\n      }\n\n      var viewContainer = _this._modelToViewMapping.get(data.modelPosition.parent);\n\n      data.viewPosition = _this._findPositionIn(viewContainer, data.modelPosition.offset);\n    }, {\n      priority: 'low'\n    }); // Default mapper algorithm for mapping view position to model position.\n\n    this.on('viewToModelPosition', function (evt, data) {\n      if (data.modelPosition) {\n        return;\n      }\n\n      var viewBlock = data.viewPosition.parent;\n\n      var modelParent = _this._viewToModelMapping.get(viewBlock);\n\n      while (!modelParent) {\n        viewBlock = viewBlock.parent;\n        modelParent = _this._viewToModelMapping.get(viewBlock);\n      }\n\n      var modelOffset = _this._toModelOffset(data.viewPosition.parent, data.viewPosition.offset, viewBlock);\n\n      data.modelPosition = ModelPosition._createAt(modelParent, modelOffset);\n    }, {\n      priority: 'low'\n    });\n  }\n  /**\n   * Marks model and view elements as corresponding. Corresponding elements can be retrieved by using\n   * the {@link module:engine/conversion/mapper~Mapper#toModelElement toModelElement} and\n   * {@link module:engine/conversion/mapper~Mapper#toViewElement toViewElement} methods.\n   * The information that elements are bound is also used to translate positions.\n   *\n   * @param {module:engine/model/element~Element} modelElement Model element.\n   * @param {module:engine/view/element~Element} viewElement View element.\n   */\n\n\n  _createClass(Mapper, [{\n    key: \"bindElements\",\n    value: function bindElements(modelElement, viewElement) {\n      this._modelToViewMapping.set(modelElement, viewElement);\n\n      this._viewToModelMapping.set(viewElement, modelElement);\n    }\n    /**\n     * Unbinds given {@link module:engine/view/element~Element view element} from the map.\n     *\n     * **Note:** view-to-model binding will be removed, if it existed. However, corresponding model-to-view binding\n     * will be removed only if model element is still bound to passed `viewElement`.\n     *\n     * This behavior lets for re-binding model element to another view element without fear of losing the new binding\n     * when the previously bound view element is unbound.\n     *\n     * @param {module:engine/view/element~Element} viewElement View element to unbind.\n     */\n\n  }, {\n    key: \"unbindViewElement\",\n    value: function unbindViewElement(viewElement) {\n      var modelElement = this.toModelElement(viewElement);\n\n      this._viewToModelMapping.delete(viewElement);\n\n      if (this._modelToViewMapping.get(modelElement) == viewElement) {\n        this._modelToViewMapping.delete(modelElement);\n      }\n    }\n    /**\n     * Unbinds given {@link module:engine/model/element~Element model element} from the map.\n     *\n     * **Note:** model-to-view binding will be removed, if it existed. However, corresponding view-to-model binding\n     * will be removed only if view element is still bound to passed `modelElement`.\n     *\n     * This behavior lets for re-binding view element to another model element without fear of losing the new binding\n     * when the previously bound model element is unbound.\n     *\n     * @param {module:engine/model/element~Element} modelElement Model element to unbind.\n     */\n\n  }, {\n    key: \"unbindModelElement\",\n    value: function unbindModelElement(modelElement) {\n      var viewElement = this.toViewElement(modelElement);\n\n      this._modelToViewMapping.delete(modelElement);\n\n      if (this._viewToModelMapping.get(viewElement) == modelElement) {\n        this._viewToModelMapping.delete(viewElement);\n      }\n    }\n    /**\n     * Binds given marker name with given {@link module:engine/view/element~Element view element}. The element\n     * will be added to the current set of elements bound with given marker name.\n     *\n     * @param {module:engine/view/element~Element} element Element to bind.\n     * @param {String} name Marker name.\n     */\n\n  }, {\n    key: \"bindElementToMarker\",\n    value: function bindElementToMarker(element, name) {\n      var elements = this._markerNameToElements.get(name) || new Set();\n      elements.add(element);\n\n      this._markerNameToElements.set(name, elements);\n    }\n    /**\n     * Unbinds all elements from given marker name.\n     *\n     * @param {String} name Marker name.\n     */\n\n  }, {\n    key: \"unbindElementsFromMarkerName\",\n    value: function unbindElementsFromMarkerName(name) {\n      this._markerNameToElements.delete(name);\n    }\n    /**\n     * Removes all model to view and view to model bindings.\n     */\n\n  }, {\n    key: \"clearBindings\",\n    value: function clearBindings() {\n      this._modelToViewMapping = new WeakMap();\n      this._viewToModelMapping = new WeakMap();\n      this._markerNameToElements = new Map();\n    }\n    /**\n     * Gets the corresponding model element.\n     *\n     * **Note:** {@link module:engine/view/uielement~UIElement} does not have corresponding element in model.\n     *\n     * @param {module:engine/view/element~Element} viewElement View element.\n     * @returns {module:engine/model/element~Element|undefined} Corresponding model element or `undefined` if not found.\n     */\n\n  }, {\n    key: \"toModelElement\",\n    value: function toModelElement(viewElement) {\n      return this._viewToModelMapping.get(viewElement);\n    }\n    /**\n     * Gets the corresponding view element.\n     *\n     * @param {module:engine/model/element~Element} modelElement Model element.\n     * @returns {module:engine/view/element~Element|undefined} Corresponding view element or `undefined` if not found.\n     */\n\n  }, {\n    key: \"toViewElement\",\n    value: function toViewElement(modelElement) {\n      return this._modelToViewMapping.get(modelElement);\n    }\n    /**\n     * Gets the corresponding model range.\n     *\n     * @param {module:engine/view/range~Range} viewRange View range.\n     * @returns {module:engine/model/range~Range} Corresponding model range.\n     */\n\n  }, {\n    key: \"toModelRange\",\n    value: function toModelRange(viewRange) {\n      return new ModelRange(this.toModelPosition(viewRange.start), this.toModelPosition(viewRange.end));\n    }\n    /**\n     * Gets the corresponding view range.\n     *\n     * @param {module:engine/model/range~Range} modelRange Model range.\n     * @returns {module:engine/view/range~Range} Corresponding view range.\n     */\n\n  }, {\n    key: \"toViewRange\",\n    value: function toViewRange(modelRange) {\n      return new ViewRange(this.toViewPosition(modelRange.start), this.toViewPosition(modelRange.end));\n    }\n    /**\n     * Gets the corresponding model position.\n     *\n     * @fires viewToModelPosition\n     * @param {module:engine/view/position~Position} viewPosition View position.\n     * @returns {module:engine/model/position~Position} Corresponding model position.\n     */\n\n  }, {\n    key: \"toModelPosition\",\n    value: function toModelPosition(viewPosition) {\n      var data = {\n        viewPosition: viewPosition,\n        mapper: this\n      };\n      this.fire('viewToModelPosition', data);\n      return data.modelPosition;\n    }\n    /**\n     * Gets the corresponding view position.\n     *\n     * @fires modelToViewPosition\n     * @param {module:engine/model/position~Position} modelPosition Model position.\n     * @param {Object} [options] Additional options for position mapping process.\n     * @param {Boolean} [options.isPhantom=false] Should be set to `true` if the model position to map is pointing to a place\n     * in model tree which no longer exists. For example, it could be an end of a removed model range.\n     * @returns {module:engine/view/position~Position} Corresponding view position.\n     */\n\n  }, {\n    key: \"toViewPosition\",\n    value: function toViewPosition(modelPosition) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        isPhantom: false\n      };\n      var data = {\n        modelPosition: modelPosition,\n        mapper: this,\n        isPhantom: options.isPhantom\n      };\n      this.fire('modelToViewPosition', data);\n      return data.viewPosition;\n    }\n    /**\n     * Gets all view elements bound to the given marker name.\n     *\n     * @param {String} name Marker name.\n     * @returns {Set.<module:engine/view/element~Element>|null} View elements bound with given marker name or `null`\n     * if no elements are bound to given marker name.\n     */\n\n  }, {\n    key: \"markerNameToElements\",\n    value: function markerNameToElements(name) {\n      var boundElements = this._markerNameToElements.get(name);\n\n      if (!boundElements) {\n        return null;\n      }\n\n      var elements = new Set();\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = boundElements[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var element = _step.value;\n\n          if (element.is('attributeElement')) {\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n              for (var _iterator2 = element.getElementsWithSameId()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                var clone = _step2.value;\n                elements.add(clone);\n              }\n            } catch (err) {\n              _didIteratorError2 = true;\n              _iteratorError2 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                  _iterator2.return();\n                }\n              } finally {\n                if (_didIteratorError2) {\n                  throw _iteratorError2;\n                }\n              }\n            }\n          } else {\n            elements.add(element);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return elements;\n    }\n    /**\n     * Registers a callback that evaluates the length in the model of a view element with given name.\n     *\n     * The callback is fired with one argument, which is a view element instance. The callback is expected to return\n     * a number representing the length of view element in model.\n     *\n     *\t\t// List item in view may contain nested list, which have other list items. In model though,\n     *\t\t// the lists are represented by flat structure. Because of those differences, length of list view element\n     *\t\t// may be greater than one. In the callback it's checked how many nested list items are in evaluated list item.\n     *\n     *\t\tfunction getViewListItemLength( element ) {\n     *\t\t\tlet length = 1;\n     *\n     *\t\t\tfor ( let child of element.getChildren() ) {\n     *\t\t\t\tif ( child.name == 'ul' || child.name == 'ol' ) {\n     *\t\t\t\t\tfor ( let item of child.getChildren() ) {\n     *\t\t\t\t\t\tlength += getViewListItemLength( item );\n     *\t\t\t\t\t}\n     *\t\t\t\t}\n     *\t\t\t}\n     *\n     *\t\t\treturn length;\n     *\t\t}\n     *\n     *\t\tmapper.registerViewToModelLength( 'li', getViewListItemLength );\n     *\n     * @param {String} viewElementName Name of view element for which callback is registered.\n     * @param {Function} lengthCallback Function return a length of view element instance in model.\n     */\n\n  }, {\n    key: \"registerViewToModelLength\",\n    value: function registerViewToModelLength(viewElementName, lengthCallback) {\n      this._viewToModelLengthCallbacks.set(viewElementName, lengthCallback);\n    }\n    /**\n     * Calculates model offset based on the view position and the block element.\n     *\n     * Example:\n     *\n     *\t\t<p>foo<b>ba|r</b></p> // _toModelOffset( b, 2, p ) -> 5\n     *\n     * Is a sum of:\n     *\n     *\t\t<p>foo|<b>bar</b></p> // _toModelOffset( p, 3, p ) -> 3\n     *\t\t<p>foo<b>ba|r</b></p> // _toModelOffset( b, 2, b ) -> 2\n     *\n     * @private\n     * @param {module:engine/view/element~Element} viewParent Position parent.\n     * @param {Number} viewOffset Position offset.\n     * @param {module:engine/view/element~Element} viewBlock Block used as a base to calculate offset.\n     * @returns {Number} Offset in the model.\n     */\n\n  }, {\n    key: \"_toModelOffset\",\n    value: function _toModelOffset(viewParent, viewOffset, viewBlock) {\n      if (viewBlock != viewParent) {\n        // See example.\n        var offsetToParentStart = this._toModelOffset(viewParent.parent, viewParent.index, viewBlock);\n\n        var offsetInParent = this._toModelOffset(viewParent, viewOffset, viewParent);\n\n        return offsetToParentStart + offsetInParent;\n      } // viewBlock == viewParent, so we need to calculate the offset in the parent element.\n      // If the position is a text it is simple (\"ba|r\" -> 2).\n\n\n      if (viewParent.is('text')) {\n        return viewOffset;\n      } // If the position is in an element we need to sum lengths of siblings ( <b> bar </b> foo | -> 3 + 3 = 6 ).\n\n\n      var modelOffset = 0;\n\n      for (var i = 0; i < viewOffset; i++) {\n        modelOffset += this.getModelLength(viewParent.getChild(i));\n      }\n\n      return modelOffset;\n    }\n    /**\n     * Gets the length of the view element in the model.\n     *\n     * The length is calculated as follows:\n     * * if {@link #registerViewToModelLength length mapping callback} is provided for given `viewNode` it is used to\n     * evaluate model length (`viewNode` is used as first and only parameter passed to the callback),\n     * * length of a {@link module:engine/view/text~Text text node} is equal to the length of it's\n     * {@link module:engine/view/text~Text#data data},\n     * * length of a {@link module:engine/view/uielement~UIElement ui element} is equal to 0,\n     * * length of a mapped {@link module:engine/view/element~Element element} is equal to 1,\n     * * length of a not-mapped {@link module:engine/view/element~Element element} is equal to the length of it's children.\n     *\n     * Examples:\n     *\n     *\t\tfoo                          -> 3 // Text length is equal to it's data length.\n     *\t\t<p>foo</p>                   -> 1 // Length of an element which is mapped is by default equal to 1.\n     *\t\t<b>foo</b>                   -> 3 // Length of an element which is not mapped is a length of its children.\n     *\t\t<div><p>x</p><p>y</p></div>  -> 2 // Assuming that <div> is not mapped and <p> are mapped.\n     *\n     * @param {module:engine/view/element~Element} viewNode View node.\n     * @returns {Number} Length of the node in the tree model.\n     */\n\n  }, {\n    key: \"getModelLength\",\n    value: function getModelLength(viewNode) {\n      if (this._viewToModelLengthCallbacks.get(viewNode.name)) {\n        var callback = this._viewToModelLengthCallbacks.get(viewNode.name);\n\n        return callback(viewNode);\n      } else if (this._viewToModelMapping.has(viewNode)) {\n        return 1;\n      } else if (viewNode.is('text')) {\n        return viewNode.data.length;\n      } else if (viewNode.is('uiElement')) {\n        return 0;\n      } else {\n        var len = 0;\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n          for (var _iterator3 = viewNode.getChildren()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n            var child = _step3.value;\n            len += this.getModelLength(child);\n          }\n        } catch (err) {\n          _didIteratorError3 = true;\n          _iteratorError3 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n              _iterator3.return();\n            }\n          } finally {\n            if (_didIteratorError3) {\n              throw _iteratorError3;\n            }\n          }\n        }\n\n        return len;\n      }\n    }\n    /**\n     * Finds the position in the view node (or its children) with the expected model offset.\n     *\n     * Example:\n     *\n     *\t\t<p>fo<b>bar</b>bom</p> -> expected offset: 4\n     *\n     *\t\t_findPositionIn( p, 4 ):\n     *\t\t<p>|fo<b>bar</b>bom</p> -> expected offset: 4, actual offset: 0\n     *\t\t<p>fo|<b>bar</b>bom</p> -> expected offset: 4, actual offset: 2\n     *\t\t<p>fo<b>bar</b>|bom</p> -> expected offset: 4, actual offset: 5 -> we are too far\n     *\n     *\t\t_findPositionIn( b, 4 - ( 5 - 3 ) ):\n     *\t\t<p>fo<b>|bar</b>bom</p> -> expected offset: 2, actual offset: 0\n     *\t\t<p>fo<b>bar|</b>bom</p> -> expected offset: 2, actual offset: 3 -> we are too far\n     *\n     *\t\t_findPositionIn( bar, 2 - ( 3 - 3 ) ):\n     *\t\tWe are in the text node so we can simple find the offset.\n     *\t\t<p>fo<b>ba|r</b>bom</p> -> expected offset: 2, actual offset: 2 -> position found\n     *\n     * @private\n     * @param {module:engine/view/element~Element} viewParent Tree view element in which we are looking for the position.\n     * @param {Number} expectedOffset Expected offset.\n     * @returns {module:engine/view/position~Position} Found position.\n     */\n\n  }, {\n    key: \"_findPositionIn\",\n    value: function _findPositionIn(viewParent, expectedOffset) {\n      // Last scanned view node.\n      var viewNode; // Length of the last scanned view node.\n\n      var lastLength = 0;\n      var modelOffset = 0;\n      var viewOffset = 0; // In the text node it is simple: offset in the model equals offset in the text.\n\n      if (viewParent.is('text')) {\n        return new ViewPosition(viewParent, expectedOffset);\n      } // In other cases we add lengths of child nodes to find the proper offset.\n      // If it is smaller we add the length.\n\n\n      while (modelOffset < expectedOffset) {\n        viewNode = viewParent.getChild(viewOffset);\n        lastLength = this.getModelLength(viewNode);\n        modelOffset += lastLength;\n        viewOffset++;\n      } // If it equals we found the position.\n\n\n      if (modelOffset == expectedOffset) {\n        return this._moveViewPositionToTextNode(new ViewPosition(viewParent, viewOffset));\n      } // If it is higher we need to enter last child.\n      else {\n          // ( modelOffset - lastLength ) is the offset to the child we enter,\n          // so we subtract it from the expected offset to fine the offset in the child.\n          return this._findPositionIn(viewNode, expectedOffset - (modelOffset - lastLength));\n        }\n    }\n    /**\n     * Because we prefer positions in text nodes over positions next to text node moves view position to the text node\n     * if it was next to it.\n     *\n     *\t\t<p>[]<b>foo</b></p> -> <p>[]<b>foo</b></p> // do not touch if position is not directly next to text\n     *\t\t<p>foo[]<b>foo</b></p> -> <p>foo{}<b>foo</b></p> // move to text node\n     *\t\t<p><b>[]foo</b></p> -> <p><b>{}foo</b></p> // move to text node\n     *\n     * @private\n     * @param {module:engine/view/position~Position} viewPosition Position potentially next to text node.\n     * @returns {module:engine/view/position~Position} Position in text node if possible.\n     */\n\n  }, {\n    key: \"_moveViewPositionToTextNode\",\n    value: function _moveViewPositionToTextNode(viewPosition) {\n      // If the position is just after text node, put it at the end of that text node.\n      // If the position is just before text node, put it at the beginning of that text node.\n      var nodeBefore = viewPosition.nodeBefore;\n      var nodeAfter = viewPosition.nodeAfter;\n\n      if (nodeBefore instanceof ViewText) {\n        return new ViewPosition(nodeBefore, nodeBefore.data.length);\n      } else if (nodeAfter instanceof ViewText) {\n        return new ViewPosition(nodeAfter, 0);\n      } // Otherwise, just return the given position.\n\n\n      return viewPosition;\n    }\n    /**\n     * Fired for each model-to-view position mapping request. The purpose of this event is to enable custom model-to-view position\n     * mapping. Callbacks added to this event take {@link module:engine/model/position~Position model position} and are expected to\n     * calculate {@link module:engine/view/position~Position view position}. Calculated view position should be added as `viewPosition`\n     * value in `data` object that is passed as one of parameters to the event callback.\n     *\n     * \t\t// Assume that \"captionedImage\" model element is converted to <img> and following <span> elements in view,\n     * \t\t// and the model element is bound to <img> element. Force mapping model positions inside \"captionedImage\" to that\n     * \t\t// <span> element.\n     *\t\tmapper.on( 'modelToViewPosition', ( evt, data ) => {\n     *\t\t\tconst positionParent = modelPosition.parent;\n     *\n     *\t\t\tif ( positionParent.name == 'captionedImage' ) {\n     *\t\t\t\tconst viewImg = data.mapper.toViewElement( positionParent );\n     *\t\t\t\tconst viewCaption = viewImg.nextSibling; // The <span> element.\n     *\n     *\t\t\t\tdata.viewPosition = new ViewPosition( viewCaption, modelPosition.offset );\n     *\n     *\t\t\t\t// Stop the event if other callbacks should not modify calculated value.\n     *\t\t\t\tevt.stop();\n     *\t\t\t}\n     *\t\t} );\n     *\n     * **Note:** keep in mind that sometimes a \"phantom\" model position is being converted. \"Phantom\" model position is\n     * a position that points to a non-existing place in model. Such position might still be valid for conversion, though\n     * (it would point to a correct place in view when converted). One example of such situation is when a range is\n     * removed from model, there may be a need to map the range's end (which is no longer valid model position). To\n     * handle such situation, check `data.isPhantom` flag:\n     *\n     * \t\t// Assume that there is \"customElement\" model element and whenever position is before it, we want to move it\n     * \t\t// to the inside of the view element bound to \"customElement\".\n     *\t\tmapper.on( 'modelToViewPosition', ( evt, data ) => {\n     *\t\t\tif ( data.isPhantom ) {\n     *\t\t\t\treturn;\n     *\t\t\t}\n     *\n     *\t\t\t// Below line might crash for phantom position that does not exist in model.\n     *\t\t\tconst sibling = data.modelPosition.nodeBefore;\n     *\n     *\t\t\t// Check if this is the element we are interested in.\n     *\t\t\tif ( !sibling.is( 'customElement' ) ) {\n     *\t\t\t\treturn;\n     *\t\t\t}\n     *\n     *\t\t\tconst viewElement = data.mapper.toViewElement( sibling );\n     *\n     *\t\t\tdata.viewPosition = new ViewPosition( sibling, 0 );\n     *\n     *\t\t\tevt.stop();\n     *\t\t} );\n     *\n     * **Note:** default mapping callback is provided with `low` priority setting and does not cancel the event, so it is possible to\n     * attach a custom callback after default callback and also use `data.viewPosition` calculated by default callback\n     * (for example to fix it).\n     *\n     * **Note:** default mapping callback will not fire if `data.viewPosition` is already set.\n     *\n     * **Note:** these callbacks are called **very often**. For efficiency reasons, it is advised to use them only when position\n     * mapping between given model and view elements is unsolvable using just elements mapping and default algorithm. Also,\n     * the condition that checks if special case scenario happened should be as simple as possible.\n     *\n     * @event modelToViewPosition\n     * @param {Object} data Data pipeline object that can store and pass data between callbacks. The callback should add\n     * `viewPosition` value to that object with calculated {@link module:engine/view/position~Position view position}.\n     * @param {module:engine/conversion/mapper~Mapper} data.mapper Mapper instance that fired the event.\n     */\n\n    /**\n     * Fired for each view-to-model position mapping request. See {@link module:engine/conversion/mapper~Mapper#event:modelToViewPosition}.\n     *\n     * \t\t// See example in `modelToViewPosition` event description.\n     * \t\t// This custom mapping will map positions from <span> element next to <img> to the \"captionedImage\" element.\n     *\t\tmapper.on( 'viewToModelPosition', ( evt, data ) => {\n     *\t\t\tconst positionParent = viewPosition.parent;\n     *\n     *\t\t\tif ( positionParent.hasClass( 'image-caption' ) ) {\n     *\t\t\t\tconst viewImg = positionParent.previousSibling;\n     *\t\t\t\tconst modelImg = data.mapper.toModelElement( viewImg );\n     *\n     *\t\t\t\tdata.modelPosition = new ModelPosition( modelImg, viewPosition.offset );\n     *\t\t\t\tevt.stop();\n     *\t\t\t}\n     *\t\t} );\n     *\n     * **Note:** default mapping callback is provided with `low` priority setting and does not cancel the event, so it is possible to\n     * attach a custom callback after default callback and also use `data.modelPosition` calculated by default callback\n     * (for example to fix it).\n     *\n     * **Note:** default mapping callback will not fire if `data.modelPosition` is already set.\n     *\n     * **Note:** these callbacks are called **very often**. For efficiency reasons, it is advised to use them only when position\n     * mapping between given model and view elements is unsolvable using just elements mapping and default algorithm. Also,\n     * the condition that checks if special case scenario happened should be as simple as possible.\n     *\n     * @event viewToModelPosition\n     * @param {Object} data Data pipeline object that can store and pass data between callbacks. The callback should add\n     * `modelPosition` value to that object with calculated {@link module:engine/model/position~Position model position}.\n     * @param {module:engine/conversion/mapper~Mapper} data.mapper Mapper instance that fired the event.\n     */\n\n  }]);\n\n  return Mapper;\n}();\n\nexport { Mapper as default };\nmix(Mapper, EmitterMixin);","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/conversion/modelconsumable\n */\nimport TextProxy from '../model/textproxy';\n/**\n * Manages a list of consumable values for {@link module:engine/model/item~Item model items}.\n *\n * Consumables are various aspects of the model. A model item can be broken down into singular properties that might be\n * taken into consideration when converting that item.\n *\n * `ModelConsumable` is used by {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher} while analyzing changed\n * parts of {@link module:engine/model/document~Document the document}. The added / changed / removed model items are broken down\n * into singular properties (the item itself and it's attributes). All those parts are saved in `ModelConsumable`. Then,\n * during conversion, when given part of model item is converted (i.e. the view element has been inserted into the view,\n * but without attributes), consumable value is removed from `ModelConsumable`.\n *\n * For model items, `ModelConsumable` stores consumable values of one of following types: `insert`, `addattribute:<attributeKey>`,\n * `changeattributes:<attributeKey>`, `removeattributes:<attributeKey>`.\n *\n * In most cases, it is enough to let {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher}\n * gather consumable values, so there is no need to use\n * {@link module:engine/conversion/modelconsumable~ModelConsumable#add add method} directly.\n * However, it is important to understand how consumable values can be\n * {@link module:engine/conversion/modelconsumable~ModelConsumable#consume consumed}.\n * See {@link module:engine/conversion/downcast-selection-converters default downcast converters} for more information.\n *\n * Keep in mind, that one conversion event may have multiple callbacks (converters) attached to it. Each of those is\n * able to convert one or more parts of the model. However, when one of those callbacks actually converts\n * something, other should not, because they would duplicate the results. Using `ModelConsumable` helps avoiding\n * this situation, because callbacks should only convert those values, which were not yet consumed from `ModelConsumable`.\n *\n * Consuming multiple values in a single callback:\n *\n *\t\t// Converter for custom `image` element that might have a `caption` element inside which changes\n *\t\t// how the image is displayed in the view:\n *\t\t//\n *\t\t// Model:\n *\t\t//\n *\t\t// [image]\n *\t\t//   └─ [caption]\n *\t\t//       └─ foo\n *\t\t//\n *\t\t// View:\n *\t\t//\n *\t\t// <figure>\n *\t\t//   ├─ <img />\n *\t\t//   └─ <caption>\n *\t\t//       └─ foo\n *\t\tmodelConversionDispatcher.on( 'insert:image', ( evt, data, conversionApi ) => {\n *\t\t\t// First, consume the `image` element.\n *\t\t\tconversionApi.consumable.consume( data.item, 'insert' );\n *\n *\t\t\t// Just create normal image element for the view.\n *\t\t\t// Maybe it will be \"decorated\" later.\n *\t\t\tconst viewImage = new ViewElement( 'img' );\n *\t\t\tconst insertPosition = conversionApi.mapper.toViewPosition( data.range.start );\n *\t\t\tconst viewWriter = conversionApi.writer;\n *\n *\t\t\t// Check if the `image` element has children.\n *\t\t\tif ( data.item.childCount > 0 ) {\n *\t\t\t\tconst modelCaption = data.item.getChild( 0 );\n *\n *\t\t\t\t// `modelCaption` insertion change is consumed from consumable values.\n *\t\t\t\t// It will not be converted by other converters, but it's children (probably some text) will be.\n *\t\t\t\t// Through mapping, converters for text will know where to insert contents of `modelCaption`.\n *\t\t\t\tif ( conversionApi.consumable.consume( modelCaption, 'insert' ) ) {\n *\t\t\t\t\tconst viewCaption = new ViewElement( 'figcaption' );\n *\n *\t\t\t\t\tconst viewImageHolder = new ViewElement( 'figure', null, [ viewImage, viewCaption ] );\n *\n *\t\t\t\t\tconversionApi.mapper.bindElements( modelCaption, viewCaption );\n *\t\t\t\t\tconversionApi.mapper.bindElements( data.item, viewImageHolder );\n *\t\t\t\t\tviewWriter.insert( insertPosition, viewImageHolder );\n *\t\t\t\t}\n *\t\t\t} else {\n *\t\t\t\tconversionApi.mapper.bindElements( data.item, viewImage );\n *\t\t\t\tviewWriter.insert( insertPosition, viewImage );\n *\t\t\t}\n *\n *\t\t\tevt.stop();\n *\t\t} );\n */\n\nvar ModelConsumable =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an empty consumables list.\n   */\n  function ModelConsumable() {\n    _classCallCheck(this, ModelConsumable);\n\n    /**\n     * Contains list of consumable values.\n     *\n     * @private\n     * @member {Map} module:engine/conversion/modelconsumable~ModelConsumable#_consumable\n     */\n    this._consumable = new Map();\n    /**\n     * For each {@link module:engine/model/textproxy~TextProxy} added to `ModelConsumable`, this registry holds parent\n     * of that `TextProxy` and start and end indices of that `TextProxy`. This allows identification of `TextProxy`\n     * instances that points to the same part of the model but are different instances. Each distinct `TextProxy`\n     * is given unique `Symbol` which is then registered as consumable. This process is transparent for `ModelConsumable`\n     * API user because whenever `TextProxy` is added, tested, consumed or reverted, internal mechanisms of\n     * `ModelConsumable` translates `TextProxy` to that unique `Symbol`.\n     *\n     * @private\n     * @member {Map} module:engine/conversion/modelconsumable~ModelConsumable#_textProxyRegistry\n     */\n\n    this._textProxyRegistry = new Map();\n  }\n  /**\n   * Adds a consumable value to the consumables list and links it with given model item.\n   *\n   *\t\tmodelConsumable.add( modelElement, 'insert' ); // Add `modelElement` insertion change to consumable values.\n   *\t\tmodelConsumable.add( modelElement, 'addAttribute:bold' ); // Add `bold` attribute insertion on `modelElement` change.\n   *\t\tmodelConsumable.add( modelElement, 'removeAttribute:bold' ); // Add `bold` attribute removal on `modelElement` change.\n   *\t\tmodelConsumable.add( modelSelection, 'selection' ); // Add `modelSelection` to consumable values.\n   *\t\tmodelConsumable.add( modelRange, 'range' ); // Add `modelRange` to consumable values.\n   *\n   * @param {module:engine/model/item~Item|module:engine/model/selection~Selection|module:engine/model/range~Range} item\n   * Model item, range or selection that has the consumable.\n   * @param {String} type Consumable type. Will be normalized to a proper form, that is either `<word>` or `<part>:<part>`.\n   * Second colon and everything after will be cut. Passing event name is a safe and good practice.\n   */\n\n\n  _createClass(ModelConsumable, [{\n    key: \"add\",\n    value: function add(item, type) {\n      type = _normalizeConsumableType(type);\n\n      if (item instanceof TextProxy) {\n        item = this._getSymbolForTextProxy(item);\n      }\n\n      if (!this._consumable.has(item)) {\n        this._consumable.set(item, new Map());\n      }\n\n      this._consumable.get(item).set(type, true);\n    }\n    /**\n     * Removes given consumable value from given model item.\n     *\n     *\t\tmodelConsumable.consume( modelElement, 'insert' ); // Remove `modelElement` insertion change from consumable values.\n     *\t\tmodelConsumable.consume( modelElement, 'addAttribute:bold' ); // Remove `bold` attribute insertion on `modelElement` change.\n     *\t\tmodelConsumable.consume( modelElement, 'removeAttribute:bold' ); // Remove `bold` attribute removal on `modelElement` change.\n     *\t\tmodelConsumable.consume( modelSelection, 'selection' ); // Remove `modelSelection` from consumable values.\n     *\t\tmodelConsumable.consume( modelRange, 'range' ); // Remove 'modelRange' from consumable values.\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/selection~Selection|module:engine/model/range~Range} item\n     * Model item, range or selection from which consumable will be consumed.\n     * @param {String} type Consumable type. Will be normalized to a proper form, that is either `<word>` or `<part>:<part>`.\n     * Second colon and everything after will be cut. Passing event name is a safe and good practice.\n     * @returns {Boolean} `true` if consumable value was available and was consumed, `false` otherwise.\n     */\n\n  }, {\n    key: \"consume\",\n    value: function consume(item, type) {\n      type = _normalizeConsumableType(type);\n\n      if (item instanceof TextProxy) {\n        item = this._getSymbolForTextProxy(item);\n      }\n\n      if (this.test(item, type)) {\n        this._consumable.get(item).set(type, false);\n\n        return true;\n      } else {\n        return false;\n      }\n    }\n    /**\n     * Tests whether there is a consumable value of given type connected with given model item.\n     *\n     *\t\tmodelConsumable.test( modelElement, 'insert' ); // Check for `modelElement` insertion change.\n     *\t\tmodelConsumable.test( modelElement, 'addAttribute:bold' ); // Check for `bold` attribute insertion on `modelElement` change.\n     *\t\tmodelConsumable.test( modelElement, 'removeAttribute:bold' ); // Check for `bold` attribute removal on `modelElement` change.\n     *\t\tmodelConsumable.test( modelSelection, 'selection' ); // Check if `modelSelection` is consumable.\n     *\t\tmodelConsumable.test( modelRange, 'range' ); // Check if `modelRange` is consumable.\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/selection~Selection|module:engine/model/range~Range} item\n     * Model item, range or selection to be tested.\n     * @param {String} type Consumable type. Will be normalized to a proper form, that is either `<word>` or `<part>:<part>`.\n     * Second colon and everything after will be cut. Passing event name is a safe and good practice.\n     * @returns {null|Boolean} `null` if such consumable was never added, `false` if the consumable values was\n     * already consumed or `true` if it was added and not consumed yet.\n     */\n\n  }, {\n    key: \"test\",\n    value: function test(item, type) {\n      type = _normalizeConsumableType(type);\n\n      if (item instanceof TextProxy) {\n        item = this._getSymbolForTextProxy(item);\n      }\n\n      var itemConsumables = this._consumable.get(item);\n\n      if (itemConsumables === undefined) {\n        return null;\n      }\n\n      var value = itemConsumables.get(type);\n\n      if (value === undefined) {\n        return null;\n      }\n\n      return value;\n    }\n    /**\n     * Reverts consuming of consumable value.\n     *\n     *\t\tmodelConsumable.revert( modelElement, 'insert' ); // Revert consuming `modelElement` insertion change.\n     *\t\tmodelConsumable.revert( modelElement, 'addAttribute:bold' ); // Revert consuming `bold` attribute insert from `modelElement`.\n     *\t\tmodelConsumable.revert( modelElement, 'removeAttribute:bold' ); // Revert consuming `bold` attribute remove from `modelElement`.\n     *\t\tmodelConsumable.revert( modelSelection, 'selection' ); // Revert consuming `modelSelection`.\n     *\t\tmodelConsumable.revert( modelRange, 'range' ); // Revert consuming `modelRange`.\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/selection~Selection|module:engine/model/range~Range} item\n     * Model item, range or selection to be reverted.\n     * @param {String} type Consumable type.\n     * @returns {null|Boolean} `true` if consumable has been reversed, `false` otherwise. `null` if the consumable has\n     * never been added.\n     */\n\n  }, {\n    key: \"revert\",\n    value: function revert(item, type) {\n      type = _normalizeConsumableType(type);\n\n      if (item instanceof TextProxy) {\n        item = this._getSymbolForTextProxy(item);\n      }\n\n      var test = this.test(item, type);\n\n      if (test === false) {\n        this._consumable.get(item).set(type, true);\n\n        return true;\n      } else if (test === true) {\n        return false;\n      }\n\n      return null;\n    }\n    /**\n     * Gets a unique symbol for passed {@link module:engine/model/textproxy~TextProxy} instance. All `TextProxy` instances that\n     * have same parent, same start index and same end index will get the same symbol.\n     *\n     * Used internally to correctly consume `TextProxy` instances.\n     *\n     * @private\n     * @param {module:engine/model/textproxy~TextProxy} textProxy `TextProxy` instance to get a symbol for.\n     * @returns {Symbol} Symbol representing all equal instances of `TextProxy`.\n     */\n\n  }, {\n    key: \"_getSymbolForTextProxy\",\n    value: function _getSymbolForTextProxy(textProxy) {\n      var symbol = null;\n\n      var startMap = this._textProxyRegistry.get(textProxy.startOffset);\n\n      if (startMap) {\n        var endMap = startMap.get(textProxy.endOffset);\n\n        if (endMap) {\n          symbol = endMap.get(textProxy.parent);\n        }\n      }\n\n      if (!symbol) {\n        symbol = this._addSymbolForTextProxy(textProxy.startOffset, textProxy.endOffset, textProxy.parent);\n      }\n\n      return symbol;\n    }\n    /**\n     * Adds a symbol for given properties that characterizes a {@link module:engine/model/textproxy~TextProxy} instance.\n     *\n     * Used internally to correctly consume `TextProxy` instances.\n     *\n     * @private\n     * @param {Number} startIndex Text proxy start index in it's parent.\n     * @param {Number} endIndex Text proxy end index in it's parent.\n     * @param {module:engine/model/element~Element} parent Text proxy parent.\n     * @returns {Symbol} Symbol generated for given properties.\n     */\n\n  }, {\n    key: \"_addSymbolForTextProxy\",\n    value: function _addSymbolForTextProxy(start, end, parent) {\n      var symbol = Symbol('textProxySymbol');\n      var startMap, endMap;\n      startMap = this._textProxyRegistry.get(start);\n\n      if (!startMap) {\n        startMap = new Map();\n\n        this._textProxyRegistry.set(start, startMap);\n      }\n\n      endMap = startMap.get(end);\n\n      if (!endMap) {\n        endMap = new Map();\n        startMap.set(end, endMap);\n      }\n\n      endMap.set(parent, symbol);\n      return symbol;\n    }\n  }]);\n\n  return ModelConsumable;\n}(); // Returns a normalized consumable type name from given string. A normalized consumable type name is a string that has\n// at most one colon, for example: `insert` or `addMarker:highlight`. If string to normalize has more \"parts\" (more colons),\n// the other parts are dropped, for example: `addattribute:bold:$text` -> `addattributes:bold`.\n//\n// @param {String} type Consumable type.\n// @returns {String} Normalized consumable type.\n\n\nexport { ModelConsumable as default };\n\nfunction _normalizeConsumableType(type) {\n  var parts = type.split(':');\n  return parts.length > 1 ? parts[0] + ':' + parts[1] : parts[0];\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/conversion/downcastdispatcher\n */\nimport Consumable from './modelconsumable';\nimport Range from '../model/range';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport { extend } from 'lodash-es';\n/**\n * `DowncastDispatcher` is a central point of downcasting (conversion from model to view), which is a process of reacting to changes\n * in the model and firing a set of events. Callbacks listening to those events are called converters. Those\n * converters role is to convert the model changes to changes in view (for example, adding view nodes or\n * changing attributes on view elements).\n *\n * During conversion process, `DowncastDispatcher` fires events, basing on state of the model and prepares\n * data for those events. It is important to understand that those events are connected with changes done on model,\n * for example: \"node has been inserted\" or \"attribute has changed\". This is in a contrary to upcasting (view to model conversion),\n * where we convert view state (view nodes) to a model tree.\n *\n * The events are prepared basing on a diff created by {@link module:engine/model/differ~Differ Differ}, which buffers them\n * and then passes to `DowncastDispatcher` as a diff between old model state and new model state.\n *\n * Note, that because changes are converted there is a need to have a mapping between model structure and view structure.\n * To map positions and elements during downcast (model to view conversion) use {@link module:engine/conversion/mapper~Mapper}.\n *\n * `DowncastDispatcher` fires following events for model tree changes:\n *\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:insert insert}\n * if a range of nodes has been inserted to the model tree,\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:remove remove}\n * if a range of nodes has been removed from the model tree,\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:attribute attribute}\n * if attribute has been added, changed or removed from a model node.\n *\n * For {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:insert insert}\n * and {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:attribute attribute},\n * `DowncastDispatcher` generates {@link module:engine/conversion/modelconsumable~ModelConsumable consumables}.\n * These are used to have a control over which changes has been already consumed. It is useful when some converters\n * overwrite other or converts multiple changes (for example converts insertion of an element and also converts that\n * element's attributes during insertion).\n *\n * Additionally, `DowncastDispatcher` fires events for {@link module:engine/model/markercollection~Marker marker} changes:\n *\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:addMarker} if a marker has been added,\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:removeMarker} if a marker has been removed.\n *\n * Note, that changing a marker is done through removing the marker from the old range, and adding on the new range,\n * so both those events are fired.\n *\n * Finally, `DowncastDispatcher` also handles firing events for {@link module:engine/model/selection model selection}\n * conversion:\n *\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:selection}\n * which converts selection from model to view,\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:attribute}\n * which is fired for every selection attribute,\n * * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:addMarker}\n * which is fired for every marker which contains selection.\n *\n * Unlike model tree and markers, events for selection are not fired for changes but for selection state.\n *\n * When providing custom listeners for `DowncastDispatcher` remember to check whether given change has not been\n * {@link module:engine/conversion/modelconsumable~ModelConsumable#consume consumed} yet.\n *\n * When providing custom listeners for `DowncastDispatcher` keep in mind that any callback that had\n * {@link module:engine/conversion/modelconsumable~ModelConsumable#consume consumed} a value from a consumable and\n * converted the change should also stop the event (for efficiency purposes).\n *\n * When providing custom listeners for `DowncastDispatcher` remember to use provided\n * {@link module:engine/view/downcastwriter~DowncastWriter view downcast writer} to apply changes to the view document.\n *\n * Example of a custom converter for `DowncastDispatcher`:\n *\n *\t\t// We will convert inserting \"paragraph\" model element into the model.\n *\t\tdowncastDispatcher.on( 'insert:paragraph', ( evt, data, conversionApi ) => {\n *\t\t\t// Remember to check whether the change has not been consumed yet and consume it.\n *\t\t\tif ( conversionApi.consumable.consume( data.item, 'insert' ) ) {\n *\t\t\t\treturn;\n *\t\t\t}\n *\n *\t\t\t// Translate position in model to position in view.\n *\t\t\tconst viewPosition = conversionApi.mapper.toViewPosition( data.range.start );\n *\n *\t\t\t// Create <p> element that will be inserted in view at `viewPosition`.\n *\t\t\tconst viewElement = conversionApi.writer.createContainerElement( 'p' );\n *\n *\t\t\t// Bind the newly created view element to model element so positions will map accordingly in future.\n *\t\t\tconversionApi.mapper.bindElements( data.item, viewElement );\n *\n *\t\t\t// Add the newly created view element to the view.\n *\t\t\tconversionApi.writer.insert( viewPosition, viewElement );\n *\n *\t\t\t// Remember to stop the event propagation.\n *\t\t\tevt.stop();\n *\t\t} );\n */\n\nvar DowncastDispatcher =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a `DowncastDispatcher` instance.\n   *\n   * @param {Object} [conversionApi] Interface passed by dispatcher to the events calls.\n   */\n  function DowncastDispatcher() {\n    var conversionApi = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, DowncastDispatcher);\n\n    /**\n     * Interface passed by dispatcher to the events callbacks.\n     *\n     * @member {Object}\n     */\n    this.conversionApi = extend({\n      dispatcher: this\n    }, conversionApi);\n  }\n  /**\n   * Takes {@link module:engine/model/differ~Differ model differ} object with buffered changes and fires conversion basing on it.\n   *\n   * @param {module:engine/model/differ~Differ} differ Differ object with buffered changes.\n   * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\n   */\n\n\n  _createClass(DowncastDispatcher, [{\n    key: \"convertChanges\",\n    value: function convertChanges(differ, writer) {\n      // Before the view is updated, remove markers which have changed.\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = differ.getMarkersToRemove()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var change = _step.value;\n          this.convertMarkerRemove(change.name, change.range, writer);\n        } // Convert changes that happened on model tree.\n\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = differ.getChanges()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var entry = _step2.value;\n\n          if (entry.type == 'insert') {\n            this.convertInsert(Range._createFromPositionAndShift(entry.position, entry.length), writer);\n          } else if (entry.type == 'remove') {\n            this.convertRemove(entry.position, entry.length, entry.name, writer);\n          } else {\n            // entry.type == 'attribute'.\n            this.convertAttribute(entry.range, entry.attributeKey, entry.attributeOldValue, entry.attributeNewValue, writer);\n          }\n        } // After the view is updated, convert markers which have changed.\n\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = differ.getMarkersToAdd()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var _change = _step3.value;\n          this.convertMarkerAdd(_change.name, _change.range, writer);\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n    /**\n     * Starts conversion of a range insertion.\n     *\n     * For each node in the range, {@link #event:insert insert event is fired}. For each attribute on each node,\n     * {@link #event:attribute attribute event is fired}.\n     *\n     * @fires insert\n     * @fires attribute\n     * @param {module:engine/model/range~Range} range Inserted range.\n     * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\n     */\n\n  }, {\n    key: \"convertInsert\",\n    value: function convertInsert(range, writer) {\n      this.conversionApi.writer = writer; // Create a list of things that can be consumed, consisting of nodes and their attributes.\n\n      this.conversionApi.consumable = this._createInsertConsumable(range); // Fire a separate insert event for each node and text fragment contained in the range.\n\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = range[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var value = _step4.value;\n          var item = value.item;\n\n          var itemRange = Range._createFromPositionAndShift(value.previousPosition, value.length);\n\n          var data = {\n            item: item,\n            range: itemRange\n          };\n\n          this._testAndFire('insert', data); // Fire a separate addAttribute event for each attribute that was set on inserted items.\n          // This is important because most attributes converters will listen only to add/change/removeAttribute events.\n          // If we would not add this part, attributes on inserted nodes would not be converted.\n\n\n          var _iteratorNormalCompletion5 = true;\n          var _didIteratorError5 = false;\n          var _iteratorError5 = undefined;\n\n          try {\n            for (var _iterator5 = item.getAttributeKeys()[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n              var key = _step5.value;\n              data.attributeKey = key;\n              data.attributeOldValue = null;\n              data.attributeNewValue = item.getAttribute(key);\n\n              this._testAndFire(\"attribute:\".concat(key), data);\n            }\n          } catch (err) {\n            _didIteratorError5 = true;\n            _iteratorError5 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n                _iterator5.return();\n              }\n            } finally {\n              if (_didIteratorError5) {\n                throw _iteratorError5;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      this._clearConversionApi();\n    }\n    /**\n     * Fires conversion of a single node removal. Fires {@link #event:remove remove event} with provided data.\n     *\n     * @param {module:engine/model/position~Position} position Position from which node was removed.\n     * @param {Number} length Offset size of removed node.\n     * @param {String} name Name of removed node.\n     * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\n     */\n\n  }, {\n    key: \"convertRemove\",\n    value: function convertRemove(position, length, name, writer) {\n      this.conversionApi.writer = writer;\n      this.fire('remove:' + name, {\n        position: position,\n        length: length\n      }, this.conversionApi);\n\n      this._clearConversionApi();\n    }\n    /**\n     * Starts conversion of attribute change on given `range`.\n     *\n     * For each node in the given `range`, {@link #event:attribute attribute event} is fired with the passed data.\n     *\n     * @fires attribute\n     * @param {module:engine/model/range~Range} range Changed range.\n     * @param {String} key Key of the attribute that has changed.\n     * @param {*} oldValue Attribute value before the change or `null` if the attribute has not been set before.\n     * @param {*} newValue New attribute value or `null` if the attribute has been removed.\n     * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\n     */\n\n  }, {\n    key: \"convertAttribute\",\n    value: function convertAttribute(range, key, oldValue, newValue, writer) {\n      this.conversionApi.writer = writer; // Create a list with attributes to consume.\n\n      this.conversionApi.consumable = this._createConsumableForRange(range, \"attribute:\".concat(key)); // Create a separate attribute event for each node in the range.\n\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = range[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var value = _step6.value;\n          var item = value.item;\n\n          var itemRange = Range._createFromPositionAndShift(value.previousPosition, value.length);\n\n          var data = {\n            item: item,\n            range: itemRange,\n            attributeKey: key,\n            attributeOldValue: oldValue,\n            attributeNewValue: newValue\n          };\n\n          this._testAndFire(\"attribute:\".concat(key), data);\n        }\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n            _iterator6.return();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n\n      this._clearConversionApi();\n    }\n    /**\n     * Starts model selection conversion.\n     *\n     * Fires events for given {@link module:engine/model/selection~Selection selection} to start selection conversion.\n     *\n     * @fires selection\n     * @fires addMarker\n     * @fires attribute\n     * @param {module:engine/model/selection~Selection} selection Selection to convert.\n     * @param {Array.<module:engine/model/markercollection~Marker>} markers Array of markers containing model markers.\n     * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\n     */\n\n  }, {\n    key: \"convertSelection\",\n    value: function convertSelection(selection, markers, writer) {\n      var markersAtSelection = Array.from(markers.getMarkersAtPosition(selection.getFirstPosition()));\n      this.conversionApi.writer = writer;\n      this.conversionApi.consumable = this._createSelectionConsumable(selection, markersAtSelection);\n      this.fire('selection', {\n        selection: selection\n      }, this.conversionApi);\n\n      if (!selection.isCollapsed) {\n        return;\n      }\n\n      for (var _i = 0; _i < markersAtSelection.length; _i++) {\n        var marker = markersAtSelection[_i];\n        var markerRange = marker.getRange();\n\n        if (!shouldMarkerChangeBeConverted(selection.getFirstPosition(), marker, this.conversionApi.mapper)) {\n          continue;\n        }\n\n        var data = {\n          item: selection,\n          markerName: marker.name,\n          markerRange: markerRange\n        };\n\n        if (this.conversionApi.consumable.test(selection, 'addMarker:' + marker.name)) {\n          this.fire('addMarker:' + marker.name, data, this.conversionApi);\n        }\n      }\n\n      var _iteratorNormalCompletion7 = true;\n      var _didIteratorError7 = false;\n      var _iteratorError7 = undefined;\n\n      try {\n        for (var _iterator7 = selection.getAttributeKeys()[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n          var key = _step7.value;\n          var _data = {\n            item: selection,\n            range: selection.getFirstRange(),\n            attributeKey: key,\n            attributeOldValue: null,\n            attributeNewValue: selection.getAttribute(key)\n          }; // Do not fire event if the attribute has been consumed.\n\n          if (this.conversionApi.consumable.test(selection, 'attribute:' + _data.attributeKey)) {\n            this.fire('attribute:' + _data.attributeKey, _data, this.conversionApi);\n          }\n        }\n      } catch (err) {\n        _didIteratorError7 = true;\n        _iteratorError7 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n            _iterator7.return();\n          }\n        } finally {\n          if (_didIteratorError7) {\n            throw _iteratorError7;\n          }\n        }\n      }\n\n      this._clearConversionApi();\n    }\n    /**\n     * Converts added marker. Fires {@link #event:addMarker addMarker} event for each item\n     * in marker's range. If range is collapsed single event is dispatched. See event description for more details.\n     *\n     * @fires addMarker\n     * @param {String} markerName Marker name.\n     * @param {module:engine/model/range~Range} markerRange Marker range.\n     * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\n     */\n\n  }, {\n    key: \"convertMarkerAdd\",\n    value: function convertMarkerAdd(markerName, markerRange, writer) {\n      // Do not convert if range is in graveyard or not in the document (e.g. in DocumentFragment).\n      if (!markerRange.root.document || markerRange.root.rootName == '$graveyard') {\n        return;\n      }\n\n      this.conversionApi.writer = writer; // In markers' case, event name == consumable name.\n\n      var eventName = 'addMarker:' + markerName; // When range is collapsed - fire single event with collapsed range in consumable.\n\n      if (markerRange.isCollapsed) {\n        var consumable = new Consumable();\n        consumable.add(markerRange, eventName);\n        this.conversionApi.consumable = consumable;\n        this.fire(eventName, {\n          markerName: markerName,\n          markerRange: markerRange\n        }, this.conversionApi);\n        return;\n      } // Create consumable for each item in range.\n\n\n      this.conversionApi.consumable = this._createConsumableForRange(markerRange, eventName); // Create separate event for each node in the range.\n\n      var _iteratorNormalCompletion8 = true;\n      var _didIteratorError8 = false;\n      var _iteratorError8 = undefined;\n\n      try {\n        for (var _iterator8 = markerRange.getItems()[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n          var item = _step8.value;\n\n          // Do not fire event for already consumed items.\n          if (!this.conversionApi.consumable.test(item, eventName)) {\n            continue;\n          }\n\n          var data = {\n            item: item,\n            range: Range._createOn(item),\n            markerName: markerName,\n            markerRange: markerRange\n          };\n          this.fire(eventName, data, this.conversionApi);\n        }\n      } catch (err) {\n        _didIteratorError8 = true;\n        _iteratorError8 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n            _iterator8.return();\n          }\n        } finally {\n          if (_didIteratorError8) {\n            throw _iteratorError8;\n          }\n        }\n      }\n\n      this._clearConversionApi();\n    }\n    /**\n     * Fires conversion of marker removal. Fires {@link #event:removeMarker removeMarker} event with provided data.\n     *\n     * @fires removeMarker\n     * @param {String} markerName Marker name.\n     * @param {module:engine/model/range~Range} markerRange Marker range.\n     * @param {module:engine/view/downcastwriter~DowncastWriter} writer View writer that should be used to modify view document.\n     */\n\n  }, {\n    key: \"convertMarkerRemove\",\n    value: function convertMarkerRemove(markerName, markerRange, writer) {\n      // Do not convert if range is in graveyard or not in the document (e.g. in DocumentFragment).\n      if (!markerRange.root.document || markerRange.root.rootName == '$graveyard') {\n        return;\n      }\n\n      this.conversionApi.writer = writer;\n      this.fire('removeMarker:' + markerName, {\n        markerName: markerName,\n        markerRange: markerRange\n      }, this.conversionApi);\n\n      this._clearConversionApi();\n    }\n    /**\n     * Creates {@link module:engine/conversion/modelconsumable~ModelConsumable} with values to consume from given range,\n     * assuming that the range has just been inserted to the model.\n     *\n     * @private\n     * @param {module:engine/model/range~Range} range Inserted range.\n     * @returns {module:engine/conversion/modelconsumable~ModelConsumable} Values to consume.\n     */\n\n  }, {\n    key: \"_createInsertConsumable\",\n    value: function _createInsertConsumable(range) {\n      var consumable = new Consumable();\n      var _iteratorNormalCompletion9 = true;\n      var _didIteratorError9 = false;\n      var _iteratorError9 = undefined;\n\n      try {\n        for (var _iterator9 = range[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n          var value = _step9.value;\n          var item = value.item;\n          consumable.add(item, 'insert');\n          var _iteratorNormalCompletion10 = true;\n          var _didIteratorError10 = false;\n          var _iteratorError10 = undefined;\n\n          try {\n            for (var _iterator10 = item.getAttributeKeys()[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n              var key = _step10.value;\n              consumable.add(item, 'attribute:' + key);\n            }\n          } catch (err) {\n            _didIteratorError10 = true;\n            _iteratorError10 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion10 && _iterator10.return != null) {\n                _iterator10.return();\n              }\n            } finally {\n              if (_didIteratorError10) {\n                throw _iteratorError10;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError9 = true;\n        _iteratorError9 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion9 && _iterator9.return != null) {\n            _iterator9.return();\n          }\n        } finally {\n          if (_didIteratorError9) {\n            throw _iteratorError9;\n          }\n        }\n      }\n\n      return consumable;\n    }\n    /**\n     * Creates {@link module:engine/conversion/modelconsumable~ModelConsumable} with values to consume for given range.\n     *\n     * @private\n     * @param {module:engine/model/range~Range} range Affected range.\n     * @param {String} type Consumable type.\n     * @returns {module:engine/conversion/modelconsumable~ModelConsumable} Values to consume.\n     */\n\n  }, {\n    key: \"_createConsumableForRange\",\n    value: function _createConsumableForRange(range, type) {\n      var consumable = new Consumable();\n      var _iteratorNormalCompletion11 = true;\n      var _didIteratorError11 = false;\n      var _iteratorError11 = undefined;\n\n      try {\n        for (var _iterator11 = range.getItems()[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n          var item = _step11.value;\n          consumable.add(item, type);\n        }\n      } catch (err) {\n        _didIteratorError11 = true;\n        _iteratorError11 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion11 && _iterator11.return != null) {\n            _iterator11.return();\n          }\n        } finally {\n          if (_didIteratorError11) {\n            throw _iteratorError11;\n          }\n        }\n      }\n\n      return consumable;\n    }\n    /**\n     * Creates {@link module:engine/conversion/modelconsumable~ModelConsumable} with selection consumable values.\n     *\n     * @private\n     * @param {module:engine/model/selection~Selection} selection Selection to create consumable from.\n     * @param {Iterable.<module:engine/model/markercollection~Marker>} markers Markers which contains selection.\n     * @returns {module:engine/conversion/modelconsumable~ModelConsumable} Values to consume.\n     */\n\n  }, {\n    key: \"_createSelectionConsumable\",\n    value: function _createSelectionConsumable(selection, markers) {\n      var consumable = new Consumable();\n      consumable.add(selection, 'selection');\n      var _iteratorNormalCompletion12 = true;\n      var _didIteratorError12 = false;\n      var _iteratorError12 = undefined;\n\n      try {\n        for (var _iterator12 = markers[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n          var marker = _step12.value;\n          consumable.add(selection, 'addMarker:' + marker.name);\n        }\n      } catch (err) {\n        _didIteratorError12 = true;\n        _iteratorError12 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion12 && _iterator12.return != null) {\n            _iterator12.return();\n          }\n        } finally {\n          if (_didIteratorError12) {\n            throw _iteratorError12;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion13 = true;\n      var _didIteratorError13 = false;\n      var _iteratorError13 = undefined;\n\n      try {\n        for (var _iterator13 = selection.getAttributeKeys()[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n          var key = _step13.value;\n          consumable.add(selection, 'attribute:' + key);\n        }\n      } catch (err) {\n        _didIteratorError13 = true;\n        _iteratorError13 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion13 && _iterator13.return != null) {\n            _iterator13.return();\n          }\n        } finally {\n          if (_didIteratorError13) {\n            throw _iteratorError13;\n          }\n        }\n      }\n\n      return consumable;\n    }\n    /**\n     * Tests passed `consumable` to check whether given event can be fired and if so, fires it.\n     *\n     * @private\n     * @fires insert\n     * @fires attribute\n     * @param {String} type Event type.\n     * @param {Object} data Event data.\n     */\n\n  }, {\n    key: \"_testAndFire\",\n    value: function _testAndFire(type, data) {\n      if (!this.conversionApi.consumable.test(data.item, type)) {\n        // Do not fire event if the item was consumed.\n        return;\n      }\n\n      var name = data.item.name || '$text';\n      this.fire(type + ':' + name, data, this.conversionApi);\n    }\n    /**\n     * Clears conversion API object.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_clearConversionApi\",\n    value: function _clearConversionApi() {\n      delete this.conversionApi.writer;\n      delete this.conversionApi.consumable;\n    }\n    /**\n     * Fired for inserted nodes.\n     *\n     * `insert` is a namespace for a class of events. Names of actually called events follow this pattern:\n     * `insert:name`. `name` is either `'$text'`, when {@link module:engine/model/text~Text a text node} has been inserted,\n     * or {@link module:engine/model/element~Element#name name} of inserted element.\n     *\n     * This way listeners can either listen to a general `insert` event or specific event (for example `insert:paragraph`).\n     *\n     * @event insert\n     * @param {Object} data Additional information about the change.\n     * @param {module:engine/model/item~Item} data.item Inserted item.\n     * @param {module:engine/model/range~Range} data.range Range spanning over inserted item.\n     * @param {Object} conversionApi Conversion interface to be used by callback, passed in `DowncastDispatcher` constructor.\n     */\n\n    /**\n     * Fired for removed nodes.\n     *\n     * `remove` is a namespace for a class of events. Names of actually called events follow this pattern:\n     * `remove:name`. `name` is either `'$text'`, when {@link module:engine/model/text~Text a text node} has been removed,\n     * or the {@link module:engine/model/element~Element#name name} of removed element.\n     *\n     * This way listeners can either listen to a general `remove` event or specific event (for example `remove:paragraph`).\n     *\n     * @event remove\n     * @param {Object} data Additional information about the change.\n     * @param {module:engine/model/position~Position} data.position Position from which the node has been removed.\n     * @param {Number} data.length Offset size of the removed node.\n     * @param {Object} conversionApi Conversion interface to be used by callback, passed in `DowncastDispatcher` constructor.\n     */\n\n    /**\n     * Fired in the following cases:\n     *\n     * * when an attribute has been added, changed, or removed from a node,\n     * * when a node with an attribute is inserted,\n     * * when collapsed model selection attribute is converted.\n     *\n     * `attribute` is a namespace for a class of events. Names of actually called events follow this pattern:\n     * `attribute:attributeKey:name`. `attributeKey` is the key of added/changed/removed attribute.\n     * `name` is either `'$text'` if change was on {@link module:engine/model/text~Text a text node},\n     * or the {@link module:engine/model/element~Element#name name} of element which attribute has changed.\n     *\n     * This way listeners can either listen to a general `attribute:bold` event or specific event (for example `attribute:src:image`).\n     *\n     * @event attribute\n     * @param {Object} data Additional information about the change.\n     * @param {module:engine/model/item~Item|module:engine/model/documentselection~DocumentSelection} data.item Changed item\n     * or converted selection.\n     * @param {module:engine/model/range~Range} data.range Range spanning over changed item or selection range.\n     * @param {String} data.attributeKey Attribute key.\n     * @param {*} data.attributeOldValue Attribute value before the change. This is `null` when selection attribute is converted.\n     * @param {*} data.attributeNewValue New attribute value.\n     * @param {module:engine/conversion/modelconsumable~ModelConsumable} consumable Values to consume.\n     * @param {Object} conversionApi Conversion interface to be used by callback, passed in `DowncastDispatcher` constructor.\n     */\n\n    /**\n     * Fired for {@link module:engine/model/selection~Selection selection} changes.\n     *\n     * @event selection\n     * @param {module:engine/model/selection~Selection} selection Selection that is converted.\n     * @param {module:engine/conversion/modelconsumable~ModelConsumable} consumable Values to consume.\n     * @param {Object} conversionApi Conversion interface to be used by callback, passed in `DowncastDispatcher` constructor.\n     */\n\n    /**\n     * Fired when a new marker is added to the model. Also fired when collapsed model selection that is inside marker is converted.\n     *\n     * `addMarker` is a namespace for a class of events. Names of actually called events follow this pattern:\n     * `addMarker:markerName`. By specifying certain marker names, you can make the events even more gradual. For example,\n     * if markers are named `foo:abc`, `foo:bar`, then it is possible to listen to `addMarker:foo` or `addMarker:foo:abc` and\n     * `addMarker:foo:bar` events.\n     *\n     * If the marker range is not collapsed:\n     *\n     * * the event is fired for each item in the marker range one by one,\n     * * consumables object includes each item of the marker range and the consumable value is same as event name.\n     *\n     * If the marker range is collapsed:\n     *\n     * * there is only one event,\n     * * consumables object includes marker range with event name.\n     *\n     * If selection inside a marker is converted:\n     *\n     * * there is only one event,\n     * * consumables object includes selection instance with event name.\n     *\n     * @event addMarker\n     * @param {Object} data Additional information about the change.\n     * @param {module:engine/model/item~Item|module:engine/model/selection~Selection} data.item Item inside the new marker or\n     * the selection that is being converted.\n     * @param {module:engine/model/range~Range} [data.range] Range spanning over converted item. Available only in marker conversion, if\n     * the marker range was not collapsed.\n     * @param {module:engine/model/range~Range} data.markerRange Marker range.\n     * @param {String} data.markerName Marker name.\n     * @param {module:engine/conversion/modelconsumable~ModelConsumable} consumable Values to consume.\n     * @param {Object} conversionApi Conversion interface to be used by callback, passed in `DowncastDispatcher` constructor.\n     */\n\n    /**\n     * Fired when marker is removed from the model.\n     *\n     * `removeMarker` is a namespace for a class of events. Names of actually called events follow this pattern:\n     * `removeMarker:markerName`. By specifying certain marker names, you can make the events even more gradual. For example,\n     * if markers are named `foo:abc`, `foo:bar`, then it is possible to listen to `removeMarker:foo` or `removeMarker:foo:abc` and\n     * `removeMarker:foo:bar` events.\n     *\n     * @event removeMarker\n     * @param {Object} data Additional information about the change.\n     * @param {module:engine/model/range~Range} data.markerRange Marker range.\n     * @param {String} data.markerName Marker name.\n     * @param {Object} conversionApi Conversion interface to be used by callback, passed in `DowncastDispatcher` constructor.\n     */\n\n  }]);\n\n  return DowncastDispatcher;\n}();\n\nexport { DowncastDispatcher as default };\nmix(DowncastDispatcher, EmitterMixin); // Helper function, checks whether change of `marker` at `modelPosition` should be converted. Marker changes are not\n// converted if they happen inside an element with custom conversion method.\n//\n// @param {module:engine/model/position~Position} modelPosition\n// @param {module:engine/model/markercollection~Marker} marker\n// @param {module:engine/conversion/mapper~Mapper} mapper\n// @returns {Boolean}\n\nfunction shouldMarkerChangeBeConverted(modelPosition, marker, mapper) {\n  var range = marker.getRange();\n  var ancestors = Array.from(modelPosition.getAncestors());\n  ancestors.shift(); // Remove root element. It cannot be passed to `model.Range#containsItem`.\n\n  ancestors.reverse();\n  var hasCustomHandling = ancestors.some(function (element) {\n    if (range.containsItem(element)) {\n      var viewElement = mapper.toViewElement(element);\n      return !!viewElement.getCustomProperty('addHighlight');\n    }\n  });\n  return !hasCustomHandling;\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/controller/editingcontroller\n */\nimport RootEditableElement from '../view/rooteditableelement';\nimport View from '../view/view';\nimport Mapper from '../conversion/mapper';\nimport DowncastDispatcher from '../conversion/downcastdispatcher';\nimport { insertText, remove } from '../conversion/downcast-converters';\nimport { convertSelectionChange } from '../conversion/upcast-selection-converters';\nimport { clearAttributes, convertCollapsedSelection, convertRangeSelection } from '../conversion/downcast-selection-converters';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n/**\n * Controller for the editing pipeline. The editing pipeline controls {@link ~EditingController#model model} rendering,\n * including selection handling. It also creates the {@link ~EditingController#view view} which builds a\n * browser-independent virtualization over the DOM elements. The editing controller also attaches default converters.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\n\nvar EditingController =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an editing controller instance.\n   *\n   * @param {module:engine/model/model~Model} model Editing model.\n   */\n  function EditingController(model) {\n    var _this = this;\n\n    _classCallCheck(this, EditingController);\n\n    /**\n     * Editor model.\n     *\n     * @readonly\n     * @member {module:engine/model/model~Model}\n     */\n    this.model = model;\n    /**\n     * Editing view controller.\n     *\n     * @readonly\n     * @member {module:engine/view/view~View}\n     */\n\n    this.view = new View();\n    /**\n     * Mapper which describes the model-view binding.\n     *\n     * @readonly\n     * @member {module:engine/conversion/mapper~Mapper}\n     */\n\n    this.mapper = new Mapper();\n    /**\n     * Downcast dispatcher that converts changes from the model to {@link #view the editing view}.\n     *\n     * @readonly\n     * @member {module:engine/conversion/downcastdispatcher~DowncastDispatcher} #downcastDispatcher\n     */\n\n    this.downcastDispatcher = new DowncastDispatcher({\n      mapper: this.mapper\n    });\n    var doc = this.model.document;\n    var selection = doc.selection;\n    var markers = this.model.markers; // When plugins listen on model changes (on selection change, post fixers, etc) and change the view as a result of\n    // model's change, they might trigger view rendering before the conversion is completed (e.g. before the selection\n    // is converted). We disable rendering for the length of the outermost model change() block to prevent that.\n    //\n    // See  https://github.com/ckeditor/ckeditor5-engine/issues/1528\n\n    this.listenTo(this.model, '_beforeChanges', function () {\n      _this.view._renderingDisabled = true;\n    }, {\n      priority: 'highest'\n    });\n    this.listenTo(this.model, '_afterChanges', function () {\n      _this.view._renderingDisabled = false;\n\n      _this.view.render();\n    }, {\n      priority: 'lowest'\n    }); // Whenever model document is changed, convert those changes to the view (using model.Document#differ).\n    // Do it on 'low' priority, so changes are converted after other listeners did their job.\n    // Also convert model selection.\n\n    this.listenTo(doc, 'change', function () {\n      _this.view.change(function (writer) {\n        _this.downcastDispatcher.convertChanges(doc.differ, writer);\n\n        _this.downcastDispatcher.convertSelection(selection, markers, writer);\n      });\n    }, {\n      priority: 'low'\n    }); // Convert selection from the view to the model when it changes in the view.\n\n    this.listenTo(this.view.document, 'selectionChange', convertSelectionChange(this.model, this.mapper)); // Attach default model converters.\n\n    this.downcastDispatcher.on('insert:$text', insertText(), {\n      priority: 'lowest'\n    });\n    this.downcastDispatcher.on('remove', remove(), {\n      priority: 'low'\n    }); // Attach default model selection converters.\n\n    this.downcastDispatcher.on('selection', clearAttributes(), {\n      priority: 'low'\n    });\n    this.downcastDispatcher.on('selection', convertRangeSelection(), {\n      priority: 'low'\n    });\n    this.downcastDispatcher.on('selection', convertCollapsedSelection(), {\n      priority: 'low'\n    }); // Binds {@link module:engine/view/document~Document#roots view roots collection} to\n    // {@link module:engine/model/document~Document#roots model roots collection} so creating\n    // model root automatically creates corresponding view root.\n\n    this.view.document.roots.bindTo(this.model.document.roots).using(function (root) {\n      // $graveyard is a special root that has no reflection in the view.\n      if (root.rootName == '$graveyard') {\n        return null;\n      }\n\n      var viewRoot = new RootEditableElement(root.name);\n      viewRoot.rootName = root.rootName;\n      viewRoot._document = _this.view.document;\n\n      _this.mapper.bindElements(root, viewRoot);\n\n      return viewRoot;\n    });\n  }\n  /**\n   * Removes all event listeners attached to the `EditingController`. Destroys all objects created\n   * by `EditingController` that need to be destroyed.\n   */\n\n\n  _createClass(EditingController, [{\n    key: \"destroy\",\n    value: function destroy() {\n      this.view.destroy();\n      this.stopListening();\n    }\n  }]);\n\n  return EditingController;\n}();\n\nexport { EditingController as default };\nmix(EditingController, ObservableMixin);","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * Contains {@link module:engine/view/documentselection~DocumentSelection view selection}\n * to {@link module:engine/model/selection~Selection model selection} conversion helpers.\n *\n * @module engine/conversion/upcast-selection-converters\n */\nimport ModelSelection from '../model/selection';\n/**\n * Function factory, creates a callback function which converts a {@link module:engine/view/selection~Selection\n * view selection} taken from the {@link module:engine/view/document~Document#event:selectionChange} event\n * and sets in on the {@link module:engine/model/document~Document#selection model}.\n *\n * **Note**: because there is no view selection change dispatcher nor any other advanced view selection to model\n * conversion mechanism, the callback should be set directly on view document.\n *\n *\t\tview.document.on( 'selectionChange', convertSelectionChange( modelDocument, mapper ) );\n *\n * @param {module:engine/model/model~Model} model Data model.\n * @param {module:engine/conversion/mapper~Mapper} mapper Conversion mapper.\n * @returns {Function} {@link module:engine/view/document~Document#event:selectionChange} callback function.\n */\n\nexport function convertSelectionChange(model, mapper) {\n  return function (evt, data) {\n    var viewSelection = data.newSelection;\n    var modelSelection = new ModelSelection();\n    var ranges = [];\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = viewSelection.getRanges()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var viewRange = _step.value;\n        ranges.push(mapper.toModelRange(viewRange));\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    modelSelection.setTo(ranges, {\n      backward: viewSelection.isBackward\n    });\n\n    if (!modelSelection.isEqual(model.document.selection)) {\n      model.change(function (writer) {\n        writer.setSelection(modelSelection);\n      });\n    }\n  };\n}","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * Contains {@link module:engine/model/selection~Selection model selection} to\n * {@link module:engine/view/documentselection~DocumentSelection view selection} converters for\n * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher downcast dispatcher}.\n *\n * @module engine/conversion/downcast-selection-converters\n */\n\n/**\n * Function factory that creates a converter which converts a non-collapsed {@link module:engine/model/selection~Selection model selection}\n * to a {@link module:engine/view/documentselection~DocumentSelection view selection}. The converter consumes appropriate\n * value from the `consumable` object and maps model positions from the selection to view positions.\n *\n *\t\tmodelDispatcher.on( 'selection', convertRangeSelection() );\n *\n * @returns {Function} Selection converter.\n */\nexport function convertRangeSelection() {\n  return function (evt, data, conversionApi) {\n    var selection = data.selection;\n\n    if (selection.isCollapsed) {\n      return;\n    }\n\n    if (!conversionApi.consumable.consume(selection, 'selection')) {\n      return;\n    }\n\n    var viewRanges = [];\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = selection.getRanges()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var range = _step.value;\n        var viewRange = conversionApi.mapper.toViewRange(range);\n        viewRanges.push(viewRange);\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    conversionApi.writer.setSelection(viewRanges, {\n      backward: selection.isBackward\n    });\n  };\n}\n/**\n * Function factory that creates a converter which converts a collapsed {@link module:engine/model/selection~Selection model selection} to\n * a {@link module:engine/view/documentselection~DocumentSelection view selection}. The converter consumes appropriate\n * value from the `consumable` object, maps the model selection position to the view position and breaks\n * {@link module:engine/view/attributeelement~AttributeElement attribute elements} at the selection position.\n *\n *\t\tmodelDispatcher.on( 'selection', convertCollapsedSelection() );\n *\n * An example of the view state before and after converting the collapsed selection:\n *\n *\t\t   <p><strong>f^oo<strong>bar</p>\n *\t\t-> <p><strong>f</strong>^<strong>oo</strong>bar</p>\n *\n * By breaking attribute elements like `<strong>`, the selection is in a correct element. Then, when the selection attribute is\n * converted, broken attributes might be merged again, or the position where the selection is may be wrapped\n * with different, appropriate attribute elements.\n *\n * See also {@link module:engine/conversion/downcast-selection-converters~clearAttributes} which does a clean-up\n * by merging attributes.\n *\n * @returns {Function} Selection converter.\n */\n\nexport function convertCollapsedSelection() {\n  return function (evt, data, conversionApi) {\n    var selection = data.selection;\n\n    if (!selection.isCollapsed) {\n      return;\n    }\n\n    if (!conversionApi.consumable.consume(selection, 'selection')) {\n      return;\n    }\n\n    var viewWriter = conversionApi.writer;\n    var modelPosition = selection.getFirstPosition();\n    var viewPosition = conversionApi.mapper.toViewPosition(modelPosition);\n    var brokenPosition = viewWriter.breakAttributes(viewPosition);\n    viewWriter.setSelection(brokenPosition);\n  };\n}\n/**\n * Function factory that creates a converter which clears artifacts after the previous\n * {@link module:engine/model/selection~Selection model selection} conversion. It removes all empty\n * {@link module:engine/view/attributeelement~AttributeElement view attribute elements} and merges sibling attributes at all start and end\n * positions of all ranges.\n *\n *\t\t   <p><strong>^</strong></p>\n *\t\t-> <p>^</p>\n *\n *\t\t   <p><strong>foo</strong>^<strong>bar</strong>bar</p>\n *\t\t-> <p><strong>foo^bar<strong>bar</p>\n *\n *\t\t   <p><strong>foo</strong><em>^</em><strong>bar</strong>bar</p>\n *\t\t-> <p><strong>foo^bar<strong>bar</p>\n *\n * This listener should be assigned before any converter for the new selection:\n *\n *\t\tmodelDispatcher.on( 'selection', clearAttributes() );\n *\n * See {@link module:engine/conversion/downcast-selection-converters~convertCollapsedSelection}\n * which does the opposite by breaking attributes in the selection position.\n *\n * @returns {Function} Selection converter.\n */\n\nexport function clearAttributes() {\n  return function (evt, data, conversionApi) {\n    var viewWriter = conversionApi.writer;\n    var viewSelection = viewWriter.document.selection;\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n      for (var _iterator2 = viewSelection.getRanges()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        var range = _step2.value;\n\n        // Not collapsed selection should not have artifacts.\n        if (range.isCollapsed) {\n          // Position might be in the node removed by the view writer.\n          if (range.end.parent.document) {\n            conversionApi.writer.mergeAttributes(range.start);\n          }\n        }\n      }\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n          _iterator2.return();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n\n    viewWriter.setSelection(null);\n  };\n}","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module core/plugincollection\n */\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport log from '@ckeditor/ckeditor5-utils/src/log';\n/**\n * Manages a list of CKEditor plugins, including loading, resolving dependencies and initialization.\n */\n\nvar PluginCollection =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of the PluginCollection class.\n   * Allows loading and initializing plugins and their dependencies.\n   *\n   * @param {module:core/editor/editor~Editor} editor\n   * @param {Array.<Function>} [availablePlugins] Plugins (constructors) which the collection will be able to use\n   * when {@link module:core/plugincollection~PluginCollection#load} is used with plugin names (strings, instead of constructors).\n   * Usually, the editor will pass its built-in plugins to the collection so they can later be\n   * used in `config.plugins` or `config.removePlugins` by names.\n   */\n  function PluginCollection(editor) {\n    var availablePlugins = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    _classCallCheck(this, PluginCollection);\n\n    /**\n     * @protected\n     * @member {module:core/editor/editor~Editor} module:core/plugin~PluginCollection#_editor\n     */\n    this._editor = editor;\n    /**\n     * Map of plugin constructors which can be retrieved by their names.\n     *\n     * @protected\n     * @member {Map.<String|Function,Function>} module:core/plugin~PluginCollection#_availablePlugins\n     */\n\n    this._availablePlugins = new Map();\n    /**\n     * @protected\n     * @member {Map} module:core/plugin~PluginCollection#_plugins\n     */\n\n    this._plugins = new Map();\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = availablePlugins[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var PluginConstructor = _step.value;\n\n        this._availablePlugins.set(PluginConstructor, PluginConstructor);\n\n        if (PluginConstructor.pluginName) {\n          this._availablePlugins.set(PluginConstructor.pluginName, PluginConstructor);\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  }\n  /**\n   * Iterable interface.\n   *\n   * Returns `[ PluginConstructor, pluginInstance ]` pairs.\n   *\n   * @returns {Iterable.<Array>}\n   */\n\n\n  _createClass(PluginCollection, [{\n    key: Symbol.iterator,\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function value() {\n      var _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, entry;\n\n      return regeneratorRuntime.wrap(function value$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _iteratorNormalCompletion2 = true;\n              _didIteratorError2 = false;\n              _iteratorError2 = undefined;\n              _context.prev = 3;\n              _iterator2 = this._plugins[Symbol.iterator]();\n\n            case 5:\n              if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {\n                _context.next = 13;\n                break;\n              }\n\n              entry = _step2.value;\n\n              if (!(typeof entry[0] == 'function')) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.next = 10;\n              return entry;\n\n            case 10:\n              _iteratorNormalCompletion2 = true;\n              _context.next = 5;\n              break;\n\n            case 13:\n              _context.next = 19;\n              break;\n\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](3);\n              _didIteratorError2 = true;\n              _iteratorError2 = _context.t0;\n\n            case 19:\n              _context.prev = 19;\n              _context.prev = 20;\n\n              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                _iterator2.return();\n              }\n\n            case 22:\n              _context.prev = 22;\n\n              if (!_didIteratorError2) {\n                _context.next = 25;\n                break;\n              }\n\n              throw _iteratorError2;\n\n            case 25:\n              return _context.finish(22);\n\n            case 26:\n              return _context.finish(19);\n\n            case 27:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, value, this, [[3, 15, 19, 27], [20,, 22, 26]]);\n    })\n    /**\n     * Gets the plugin instance by its constructor or name.\n     *\n     * @param {Function|String} key The plugin constructor or {@link module:core/plugin~PluginInterface.pluginName name}.\n     * @returns {module:core/plugin~PluginInterface}\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      return this._plugins.get(key);\n    }\n    /**\n     * Loads a set of plugins and adds them to the collection.\n     *\n     * @param {Array.<Function|String>} plugins An array of {@link module:core/plugin~PluginInterface plugin constructors}\n     * or {@link module:core/plugin~PluginInterface.pluginName plugin names}. The second option (names) works only if\n     * `availablePlugins` were passed to the {@link #constructor}.\n     * @param {Array.<String|Function>} [removePlugins] Names of plugins or plugin constructors\n     * that should not be loaded (despite being specified in the `plugins` array).\n     * @returns {Promise} A promise which gets resolved once all plugins are loaded and available in the\n     * collection.\n     * @returns {Promise.<Array.<module:core/plugin~PluginInterface>>} returns.loadedPlugins The array of loaded plugins.\n     */\n\n  }, {\n    key: \"load\",\n    value: function load(plugins) {\n      var removePlugins = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      var that = this;\n      var editor = this._editor;\n      var loading = new Set();\n      var loaded = [];\n      var pluginConstructors = mapToAvailableConstructors(plugins);\n      var removePluginConstructors = mapToAvailableConstructors(removePlugins);\n      var missingPlugins = getMissingPluginNames(plugins);\n\n      if (missingPlugins) {\n        /**\n         * Some plugins are not available and could not be loaded.\n         *\n         * Plugin classes (constructors) need to be provided to the editor before they can be loaded by name.\n         * This is usually done in CKEditor 5 builds by setting the {@link module:core/editor/editor~Editor.builtinPlugins}\n         * property.\n         *\n         * **If you see this warning when using one of the {@glink builds/index CKEditor 5 Builds}**, it means\n         * that you try to enable a plugin which was not included in that build. This may be due to a typo\n         * in the plugin name or simply because that plugin is not a part of this build. In the latter scenario,\n         * read more about {@glink builds/guides/development/custom-builds custom builds}.\n         *\n         * **If you see this warning when using one of the editor creators directly** (not a build), then it means\n         * that you tried loading plugins by name. However, unlike CKEditor 4, CKEditor 5 does not implement a \"plugin loader\".\n         * This means that CKEditor 5 does not know where to load the plugin modules from. Therefore, you need to\n         * provide each plugin through reference (as a constructor function). Check out the examples in\n         * {@glink builds/guides/integration/advanced-setup#scenario-2-building-from-source \"Building from source\"}.\n         *\n         * @error plugincollection-plugin-not-found\n         * @param {Array.<String>} plugins The name of the plugins which could not be loaded.\n         */\n        var errorMsg = 'plugincollection-plugin-not-found: Some plugins are not available and could not be loaded.'; // Log the error so it's more visible on the console. Hopefully, for better DX.\n\n        log.error(errorMsg, {\n          plugins: missingPlugins\n        });\n        return Promise.reject(new CKEditorError(errorMsg, {\n          plugins: missingPlugins\n        }));\n      }\n\n      return Promise.all(pluginConstructors.map(loadPlugin)).then(function () {\n        return loaded;\n      });\n\n      function loadPlugin(PluginConstructor) {\n        if (removePluginConstructors.includes(PluginConstructor)) {\n          return;\n        } // The plugin is already loaded or being loaded - do nothing.\n\n\n        if (that.get(PluginConstructor) || loading.has(PluginConstructor)) {\n          return;\n        }\n\n        return instantiatePlugin(PluginConstructor).catch(function (err) {\n          /**\n           * It was not possible to load the plugin.\n           *\n           * This is a generic error logged to the console when a JavaSript error is thrown during the initialization\n           * of one of the plugins.\n           *\n           * If you correctly handled the promise returned by the editor's `create()` method (like shown below)\n           * you will find the original error logged to the console, too:\n           *\n           *\t\tClassicEditor.create( document.getElementById( 'editor' ) )\n           *\t\t\t.then( editor => {\n           *\t\t\t\t// ...\n           * \t\t\t} )\n           *\t\t\t.catch( error => {\n           *\t\t\t\tconsole.error( error );\n           *\t\t\t} );\n           *\n           * @error plugincollection-load\n           * @param {String} plugin The name of the plugin that could not be loaded.\n           */\n          log.error('plugincollection-load: It was not possible to load the plugin.', {\n            plugin: PluginConstructor\n          });\n          throw err;\n        });\n      }\n\n      function instantiatePlugin(PluginConstructor) {\n        return new Promise(function (resolve) {\n          loading.add(PluginConstructor);\n\n          if (PluginConstructor.requires) {\n            PluginConstructor.requires.forEach(function (RequiredPluginConstructorOrName) {\n              var RequiredPluginConstructor = getPluginConstructor(RequiredPluginConstructorOrName);\n\n              if (removePlugins.includes(RequiredPluginConstructor)) {\n                /**\n                 * Cannot load a plugin because one of its dependencies is listed in the `removePlugins` option.\n                 *\n                 * @error plugincollection-required\n                 * @param {Function} plugin The required plugin.\n                 * @param {Function} requiredBy The parent plugin.\n                 */\n                throw new CKEditorError('plugincollection-required: Cannot load a plugin because one of its dependencies is listed in' + 'the `removePlugins` option.', {\n                  plugin: RequiredPluginConstructor,\n                  requiredBy: PluginConstructor\n                });\n              }\n\n              loadPlugin(RequiredPluginConstructor);\n            });\n          }\n\n          var plugin = new PluginConstructor(editor);\n\n          that._add(PluginConstructor, plugin);\n\n          loaded.push(plugin);\n          resolve();\n        });\n      }\n\n      function getPluginConstructor(PluginConstructorOrName) {\n        if (typeof PluginConstructorOrName == 'function') {\n          return PluginConstructorOrName;\n        }\n\n        return that._availablePlugins.get(PluginConstructorOrName);\n      }\n\n      function getMissingPluginNames(plugins) {\n        var missingPlugins = [];\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n          for (var _iterator3 = plugins[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n            var pluginNameOrConstructor = _step3.value;\n\n            if (!getPluginConstructor(pluginNameOrConstructor)) {\n              missingPlugins.push(pluginNameOrConstructor);\n            }\n          }\n        } catch (err) {\n          _didIteratorError3 = true;\n          _iteratorError3 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n              _iterator3.return();\n            }\n          } finally {\n            if (_didIteratorError3) {\n              throw _iteratorError3;\n            }\n          }\n        }\n\n        return missingPlugins.length ? missingPlugins : null;\n      }\n\n      function mapToAvailableConstructors(plugins) {\n        return plugins.map(function (pluginNameOrConstructor) {\n          return getPluginConstructor(pluginNameOrConstructor);\n        }).filter(function (PluginConstructor) {\n          return !!PluginConstructor;\n        });\n      }\n    }\n    /**\n     * Destroys all loaded plugins.\n     *\n     * @returns {Promise}\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var promises = Array.from(this).map(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            pluginInstance = _ref2[1];\n\n        return pluginInstance;\n      }).filter(function (pluginInstance) {\n        return typeof pluginInstance.destroy == 'function';\n      }).map(function (pluginInstance) {\n        return pluginInstance.destroy();\n      });\n      return Promise.all(promises);\n    }\n    /**\n     * Adds the plugin to the collection. Exposed mainly for testing purposes.\n     *\n     * @protected\n     * @param {Function} PluginConstructor The plugin constructor.\n     * @param {module:core/plugin~PluginInterface} plugin The instance of the plugin.\n     */\n\n  }, {\n    key: \"_add\",\n    value: function _add(PluginConstructor, plugin) {\n      this._plugins.set(PluginConstructor, plugin);\n\n      var pluginName = PluginConstructor.pluginName;\n\n      if (!pluginName) {\n        return;\n      }\n\n      if (this._plugins.has(pluginName)) {\n        /**\n         * Two plugins with the same {@link module:core/plugin~PluginInterface.pluginName} were loaded.\n         * This will lead to runtime conflicts between these plugins.\n         *\n         * In practice, this warning usually means that new plugins were added to an existing CKEditor 5 build.\n         * Plugins should always be added to a source version of the editor (`@ckeditor/ckeditor5-editor-*`),\n         * not to an editor imported from one of the `@ckeditor/ckeditor5-build-*` packages.\n         *\n         * Check your import paths and the list of plugins passed to\n         * {@link module:core/editor/editor~Editor.create `Editor.create()`}\n         * or specified in {@link module:core/editor/editor~Editor.builtinPlugins `Editor.builtinPlugins`}.\n         *\n         * The second option is that your `node_modules/` directory contains duplicated versions of the same\n         * CKEditor 5 packages. Normally, on clean installations, npm deduplicates packages in `node_modules/`, so\n         * it may be enough to call `rm -rf node_modules && npm i`. However, if you installed conflicting versions\n         * of packages, their dependencies may need to be installed in more than one version which may lead to this\n         * warning.\n         *\n         * Technically speaking, this error occurs because after adding a plugin to an existing editor build\n         * dependencies of this plugin are being duplicated.\n         * They are already built into that editor build and now get added for the second time as dependencies\n         * of the plugin you are installing.\n         *\n         * Read more about {@glink builds/guides/integration/installing-plugins installing plugins}.\n         *\n         * @error plugincollection-plugin-name-conflict\n         * @param {String} pluginName The duplicated plugin name.\n         * @param {Function} plugin1 The first plugin constructor.\n         * @param {Function} plugin2 The second plugin constructor.\n         */\n        log.warn('plugincollection-plugin-name-conflict: Two plugins with the same name were loaded.', {\n          pluginName: pluginName,\n          plugin1: this._plugins.get(pluginName).constructor,\n          plugin2: PluginConstructor\n        });\n      } else {\n        this._plugins.set(pluginName, plugin);\n      }\n    }\n  }]);\n\n  return PluginCollection;\n}();\n\nexport { PluginCollection as default };","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module core/commandcollection\n */\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * Collection of commands. Its instance is available in {@link module:core/editor/editor~Editor#commands `editor.commands`}.\n */\n\nvar CommandCollection =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates collection instance.\n   */\n  function CommandCollection() {\n    _classCallCheck(this, CommandCollection);\n\n    /**\n     * Command map.\n     *\n     * @private\n     * @member {Map}\n     */\n    this._commands = new Map();\n  }\n  /**\n   * Registers a new command.\n   *\n   * @param {String} commandName The name of the command.\n   * @param {module:core/command~Command} command\n   */\n\n\n  _createClass(CommandCollection, [{\n    key: \"add\",\n    value: function add(commandName, command) {\n      this._commands.set(commandName, command);\n    }\n    /**\n     * Retrieves a command from the collection.\n     *\n     * @param {String} commandName The name of the command.\n     * @returns {module:core/command~Command}\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(commandName) {\n      return this._commands.get(commandName);\n    }\n    /**\n     * Executes a command.\n     *\n     * @param {String} commandName The name of the command.\n     * @param {*} [...commandParams] Command parameters.\n     */\n\n  }, {\n    key: \"execute\",\n    value: function execute(commandName) {\n      var command = this.get(commandName);\n\n      if (!command) {\n        /**\n         * Command does not exist.\n         *\n         * @error commandcollection-command-not-found\n         * @param {String} commandName Name of the command.\n         */\n        throw new CKEditorError('commandcollection-command-not-found: Command does not exist.', {\n          commandName: commandName\n        });\n      }\n\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      command.execute.apply(command, args);\n    }\n    /**\n     * Returns iterator of command names.\n     *\n     * @returns {Iterable.<String>}\n     */\n\n  }, {\n    key: \"names\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function names() {\n      return regeneratorRuntime.wrap(function names$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.delegateYield(this._commands.keys(), \"t0\", 1);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, names, this);\n    })\n    /**\n     * Returns iterator of command instances.\n     *\n     * @returns {Iterable.<module:core/command~Command>}\n     */\n\n  }, {\n    key: \"commands\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function commands() {\n      return regeneratorRuntime.wrap(function commands$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.delegateYield(this._commands.values(), \"t0\", 1);\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, commands, this);\n    })\n    /**\n     * Iterable interface.\n     *\n     * Returns `[ commandName, commandInstance ]` pairs.\n     *\n     * @returns {Iterable.<Array>}\n     */\n\n  }, {\n    key: Symbol.iterator,\n    value: function value() {\n      return this._commands[Symbol.iterator]();\n    }\n    /**\n     * Destroys all collection commands.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.commands()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var command = _step.value;\n          command.destroy();\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }]);\n\n  return CommandCollection;\n}();\n\nexport { CommandCollection as default };","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/* globals window */\n\n/**\n * @module utils/translation-service\n */\n\n/* istanbul ignore else */\nif (!window.CKEDITOR_TRANSLATIONS) {\n  window.CKEDITOR_TRANSLATIONS = {};\n}\n/**\n * Adds translations to existing ones.\n * These translations will later be available for the {@link module:utils/translation-service~translate `translate()`} function.\n *\n *\t\tadd( 'pl', {\n *\t\t\t'OK': 'OK',\n *\t\t\t'Cancel [context: reject]': 'Anuluj'\n *\t\t} );\n *\n * If you cannot import this function from this module (e.g. because you use a CKEditor 5 build), then you can\n * still add translations by extending the global `window.CKEDITOR_TRANSLATIONS` object by using a function like\n * the one below:\n *\n *\t\tfunction addTranslations( language, translations ) {\n *\t\t\tif ( !window.CKEDITOR_TRANSLATIONS ) {\n *\t\t\t\twindow.CKEDITOR_TRANSLATIONS = {};\n *\t\t\t}\n *\n *\t\t\tconst dictionary = window.CKEDITOR_TRANSLATIONS[ language ] || ( window.CKEDITOR_TRANSLATIONS[ language ] = {} );\n *\n *\t\t\t// Extend the dictionary for the given language.\n *\t\t\tObject.assign( dictionary, translations );\n *\t\t}\n *\n * @param {String} language Target language.\n * @param {Object.<String, String>} translations Translations which will be added to the dictionary.\n */\n\n\nexport function add(language, translations) {\n  var dictionary = window.CKEDITOR_TRANSLATIONS[language] || (window.CKEDITOR_TRANSLATIONS[language] = {});\n  Object.assign(dictionary, translations);\n}\n/**\n * Translates string if the translation of the string was previously added to the dictionary.\n * See {@link module:utils/translation-service Translation Service}.\n * This happens in a multi-language mode were translation modules are created by the bundler.\n *\n * When no translation is defined in the dictionary or the dictionary doesn't exist this function returns\n * the original string without the `'[context: ]'` (happens in development and single-language modes).\n *\n * In a single-language mode (when values passed to `t()` were replaced with target language strings) the dictionary\n * is left empty, so this function will return the original strings always.\n *\n *\t\ttranslate( 'pl', 'Cancel [context: reject]' );\n *\n * @param {String} language Target language.\n * @param {String} translationKey String that will be translated.\n * @returns {String} Translated sentence.\n */\n\nexport function translate(language, translationKey) {\n  var numberOfLanguages = getNumberOfLanguages();\n\n  if (numberOfLanguages === 1) {\n    // Override the language to the only supported one.\n    // This can't be done in the `Locale` class, because the translations comes after the `Locale` class initialization.\n    language = Object.keys(window.CKEDITOR_TRANSLATIONS)[0];\n  }\n\n  if (numberOfLanguages === 0 || !hasTranslation(language, translationKey)) {\n    return translationKey.replace(/ \\[context: [^\\]]+\\]$/, '');\n  }\n\n  var dictionary = window.CKEDITOR_TRANSLATIONS[language]; // In case of missing translations we still need to cut off the `[context: ]` parts.\n\n  return dictionary[translationKey].replace(/ \\[context: [^\\]]+\\]$/, '');\n}\n/**\n * Clears dictionaries for test purposes.\n *\n * @protected\n */\n\nexport function _clear() {\n  window.CKEDITOR_TRANSLATIONS = {};\n} // Checks whether the dictionary exists and translation in that dictionary exists.\n\nfunction hasTranslation(language, translationKey) {\n  return language in window.CKEDITOR_TRANSLATIONS && translationKey in window.CKEDITOR_TRANSLATIONS[language];\n}\n\nfunction getNumberOfLanguages() {\n  return Object.keys(window.CKEDITOR_TRANSLATIONS).length;\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/locale\n */\nimport { translate } from './translation-service';\n/**\n * Represents the localization services.\n */\n\nvar Locale =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a new instance of the Locale class.\n   *\n   * @param {String} [language='en'] The language code in [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) format.\n   */\n  function Locale(language) {\n    var _this = this;\n\n    _classCallCheck(this, Locale);\n\n    /**\n     * The language code in [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) format.\n     *\n     * @readonly\n     * @member {String}\n     */\n    this.language = language || 'en';\n    /**\n     * Translates the given string to the {@link #language}. This method is also available in {@link module:core/editor/editor~Editor#t}\n     * and {@link module:ui/view~View#t}.\n     *\n     * The strings may contain placeholders (`%<index>`) for values which are passed as the second argument.\n     * `<index>` is the index in the `values` array.\n     *\n     *\t\teditor.t( 'Created file \"%0\" in %1ms.', [ fileName, timeTaken ] );\n     *\n     * This method's context is statically bound to Locale instance,\n     * so it can be called as a function:\n     *\n     *\t\tconst t = this.t;\n     *\t\tt( 'Label' );\n     *\n     * @method #t\n     * @param {String} str The string to translate.\n     * @param {String[]} [values] Values that should be used to interpolate the string.\n     */\n\n    this.t = function () {\n      return _this._t.apply(_this, arguments);\n    };\n  }\n  /**\n   * Base for the {@link #t} method.\n   *\n   * @private\n   */\n\n\n  _createClass(Locale, [{\n    key: \"_t\",\n    value: function _t(str, values) {\n      var translatedString = translate(this.language, str);\n\n      if (values) {\n        translatedString = translatedString.replace(/%(\\d+)/g, function (match, index) {\n          return index < values.length ? values[index] : match;\n        });\n      }\n\n      return translatedString;\n    }\n  }]);\n\n  return Locale;\n}();\n\nexport { Locale as default };","function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/conversion/viewconsumable\n */\nimport { isArray } from 'lodash-es';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * Class used for handling consumption of view {@link module:engine/view/element~Element elements},\n * {@link module:engine/view/text~Text text nodes} and {@link module:engine/view/documentfragment~DocumentFragment document fragments}.\n * Element's name and its parts (attributes, classes and styles) can be consumed separately. Consuming an element's name\n * does not consume its attributes, classes and styles.\n * To add items for consumption use {@link module:engine/conversion/viewconsumable~ViewConsumable#add add method}.\n * To test items use {@link module:engine/conversion/viewconsumable~ViewConsumable#test test method}.\n * To consume items use {@link module:engine/conversion/viewconsumable~ViewConsumable#consume consume method}.\n * To revert already consumed items use {@link module:engine/conversion/viewconsumable~ViewConsumable#revert revert method}.\n *\n *\t\tviewConsumable.add( element, { name: true } ); // Adds element's name as ready to be consumed.\n *\t\tviewConsumable.add( textNode ); // Adds text node for consumption.\n *\t\tviewConsumable.add( docFragment ); // Adds document fragment for consumption.\n *\t\tviewConsumable.test( element, { name: true }  ); // Tests if element's name can be consumed.\n *\t\tviewConsumable.test( textNode ); // Tests if text node can be consumed.\n *\t\tviewConsumable.test( docFragment ); // Tests if document fragment can be consumed.\n *\t\tviewConsumable.consume( element, { name: true }  ); // Consume element's name.\n *\t\tviewConsumable.consume( textNode ); // Consume text node.\n *\t\tviewConsumable.consume( docFragment ); // Consume document fragment.\n *\t\tviewConsumable.revert( element, { name: true }  ); // Revert already consumed element's name.\n *\t\tviewConsumable.revert( textNode ); // Revert already consumed text node.\n *\t\tviewConsumable.revert( docFragment ); // Revert already consumed document fragment.\n */\n\nvar ViewConsumable =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates new ViewConsumable.\n   */\n  function ViewConsumable() {\n    _classCallCheck(this, ViewConsumable);\n\n    /**\n     * Map of consumable elements. If {@link module:engine/view/element~Element element} is used as a key,\n     * {@link module:engine/conversion/viewconsumable~ViewElementConsumables ViewElementConsumables} instance is stored as value.\n     * For {@link module:engine/view/text~Text text nodes} and\n     * {@link module:engine/view/documentfragment~DocumentFragment document fragments} boolean value is stored as value.\n     *\n     * @protected\n     * @member {Map.<module:engine/conversion/viewconsumable~ViewElementConsumables|Boolean>}\n    */\n    this._consumables = new Map();\n  }\n  /**\n   * Adds {@link module:engine/view/element~Element view element}, {@link module:engine/view/text~Text text node} or\n   * {@link module:engine/view/documentfragment~DocumentFragment document fragment} as ready to be consumed.\n   *\n   *\t\tviewConsumable.add( p, { name: true } ); // Adds element's name to consume.\n   *\t\tviewConsumable.add( p, { attributes: 'name' } ); // Adds element's attribute.\n   *\t\tviewConsumable.add( p, { classes: 'foobar' } ); // Adds element's class.\n   *\t\tviewConsumable.add( p, { styles: 'color' } ); // Adds element's style\n   *\t\tviewConsumable.add( p, { attributes: 'name', styles: 'color' } ); // Adds attribute and style.\n   *\t\tviewConsumable.add( p, { classes: [ 'baz', 'bar' ] } ); // Multiple consumables can be provided.\n   *\t\tviewConsumable.add( textNode ); // Adds text node to consume.\n   *\t\tviewConsumable.add( docFragment ); // Adds document fragment to consume.\n   *\n   * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `viewconsumable-invalid-attribute` when `class` or `style`\n   * attribute is provided - it should be handled separately by providing actual style/class.\n   *\n   *\t\tviewConsumable.add( p, { attributes: 'style' } ); // This call will throw an exception.\n   *\t\tviewConsumable.add( p, { styles: 'color' } ); // This is properly handled style.\n   *\n   * @param {module:engine/view/element~Element|module:engine/view/text~Text|module:engine/view/documentfragment~DocumentFragment} element\n   * @param {Object} [consumables] Used only if first parameter is {@link module:engine/view/element~Element view element} instance.\n   * @param {Boolean} consumables.name If set to true element's name will be included.\n   * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names.\n   * @param {String|Array.<String>} consumables.classes Class name or array of class names.\n   * @param {String|Array.<String>} consumables.styles Style name or array of style names.\n   */\n\n\n  _createClass(ViewConsumable, [{\n    key: \"add\",\n    value: function add(element, consumables) {\n      var elementConsumables; // For text nodes and document fragments just mark them as consumable.\n\n      if (element.is('text') || element.is('documentFragment')) {\n        this._consumables.set(element, true);\n\n        return;\n      } // For elements create new ViewElementConsumables or update already existing one.\n\n\n      if (!this._consumables.has(element)) {\n        elementConsumables = new ViewElementConsumables();\n\n        this._consumables.set(element, elementConsumables);\n      } else {\n        elementConsumables = this._consumables.get(element);\n      }\n\n      elementConsumables.add(consumables);\n    }\n    /**\n     * Tests if {@link module:engine/view/element~Element view element}, {@link module:engine/view/text~Text text node} or\n     * {@link module:engine/view/documentfragment~DocumentFragment document fragment} can be consumed.\n     * It returns `true` when all items included in method's call can be consumed. Returns `false` when\n     * first already consumed item is found and `null` when first non-consumable item is found.\n     *\n     *\t\tviewConsumable.test( p, { name: true } ); // Tests element's name.\n     *\t\tviewConsumable.test( p, { attributes: 'name' } ); // Tests attribute.\n     *\t\tviewConsumable.test( p, { classes: 'foobar' } ); // Tests class.\n     *\t\tviewConsumable.test( p, { styles: 'color' } ); // Tests style.\n     *\t\tviewConsumable.test( p, { attributes: 'name', styles: 'color' } ); // Tests attribute and style.\n     *\t\tviewConsumable.test( p, { classes: [ 'baz', 'bar' ] } ); // Multiple consumables can be tested.\n     *\t\tviewConsumable.test( textNode ); // Tests text node.\n     *\t\tviewConsumable.test( docFragment ); // Tests document fragment.\n     *\n     * Testing classes and styles as attribute will test if all added classes/styles can be consumed.\n     *\n     *\t\tviewConsumable.test( p, { attributes: 'class' } ); // Tests if all added classes can be consumed.\n     *\t\tviewConsumable.test( p, { attributes: 'style' } ); // Tests if all added styles can be consumed.\n     *\n     * @param {module:engine/view/element~Element|module:engine/view/text~Text|module:engine/view/documentfragment~DocumentFragment} element\n     * @param {Object} [consumables] Used only if first parameter is {@link module:engine/view/element~Element view element} instance.\n     * @param {Boolean} consumables.name If set to true element's name will be included.\n     * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names.\n     * @param {String|Array.<String>} consumables.classes Class name or array of class names.\n     * @param {String|Array.<String>} consumables.styles Style name or array of style names.\n     * @returns {Boolean|null} Returns `true` when all items included in method's call can be consumed. Returns `false`\n     * when first already consumed item is found and `null` when first non-consumable item is found.\n     */\n\n  }, {\n    key: \"test\",\n    value: function test(element, consumables) {\n      var elementConsumables = this._consumables.get(element);\n\n      if (elementConsumables === undefined) {\n        return null;\n      } // For text nodes and document fragments return stored boolean value.\n\n\n      if (element.is('text') || element.is('documentFragment')) {\n        return elementConsumables;\n      } // For elements test consumables object.\n\n\n      return elementConsumables.test(consumables);\n    }\n    /**\n     * Consumes {@link module:engine/view/element~Element view element}, {@link module:engine/view/text~Text text node} or\n     * {@link module:engine/view/documentfragment~DocumentFragment document fragment}.\n     * It returns `true` when all items included in method's call can be consumed, otherwise returns `false`.\n     *\n     *\t\tviewConsumable.consume( p, { name: true } ); // Consumes element's name.\n     *\t\tviewConsumable.consume( p, { attributes: 'name' } ); // Consumes element's attribute.\n     *\t\tviewConsumable.consume( p, { classes: 'foobar' } ); // Consumes element's class.\n     *\t\tviewConsumable.consume( p, { styles: 'color' } ); // Consumes element's style.\n     *\t\tviewConsumable.consume( p, { attributes: 'name', styles: 'color' } ); // Consumes attribute and style.\n     *\t\tviewConsumable.consume( p, { classes: [ 'baz', 'bar' ] } ); // Multiple consumables can be consumed.\n     *\t\tviewConsumable.consume( textNode ); // Consumes text node.\n     *\t\tviewConsumable.consume( docFragment ); // Consumes document fragment.\n     *\n     * Consuming classes and styles as attribute will test if all added classes/styles can be consumed.\n     *\n     *\t\tviewConsumable.consume( p, { attributes: 'class' } ); // Consume only if all added classes can be consumed.\n     *\t\tviewConsumable.consume( p, { attributes: 'style' } ); // Consume only if all added styles can be consumed.\n     *\n     * @param {module:engine/view/element~Element|module:engine/view/text~Text|module:engine/view/documentfragment~DocumentFragment} element\n     * @param {Object} [consumables] Used only if first parameter is {@link module:engine/view/element~Element view element} instance.\n     * @param {Boolean} consumables.name If set to true element's name will be included.\n     * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names.\n     * @param {String|Array.<String>} consumables.classes Class name or array of class names.\n     * @param {String|Array.<String>} consumables.styles Style name or array of style names.\n     * @returns {Boolean} Returns `true` when all items included in method's call can be consumed,\n     * otherwise returns `false`.\n     */\n\n  }, {\n    key: \"consume\",\n    value: function consume(element, consumables) {\n      if (this.test(element, consumables)) {\n        if (element.is('text') || element.is('documentFragment')) {\n          // For text nodes and document fragments set value to false.\n          this._consumables.set(element, false);\n        } else {\n          // For elements - consume consumables object.\n          this._consumables.get(element).consume(consumables);\n        }\n\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Reverts {@link module:engine/view/element~Element view element}, {@link module:engine/view/text~Text text node} or\n     * {@link module:engine/view/documentfragment~DocumentFragment document fragment} so they can be consumed once again.\n     * Method does not revert items that were never previously added for consumption, even if they are included in\n     * method's call.\n     *\n     *\t\tviewConsumable.revert( p, { name: true } ); // Reverts element's name.\n     *\t\tviewConsumable.revert( p, { attributes: 'name' } ); // Reverts element's attribute.\n     *\t\tviewConsumable.revert( p, { classes: 'foobar' } ); // Reverts element's class.\n     *\t\tviewConsumable.revert( p, { styles: 'color' } ); // Reverts element's style.\n     *\t\tviewConsumable.revert( p, { attributes: 'name', styles: 'color' } ); // Reverts attribute and style.\n     *\t\tviewConsumable.revert( p, { classes: [ 'baz', 'bar' ] } ); // Multiple names can be reverted.\n     *\t\tviewConsumable.revert( textNode ); // Reverts text node.\n     *\t\tviewConsumable.revert( docFragment ); // Reverts document fragment.\n     *\n     * Reverting classes and styles as attribute will revert all classes/styles that were previously added for\n     * consumption.\n     *\n     *\t\tviewConsumable.revert( p, { attributes: 'class' } ); // Reverts all classes added for consumption.\n     *\t\tviewConsumable.revert( p, { attributes: 'style' } ); // Reverts all styles added for consumption.\n     *\n     * @param {module:engine/view/element~Element|module:engine/view/text~Text|module:engine/view/documentfragment~DocumentFragment} element\n     * @param {Object} [consumables] Used only if first parameter is {@link module:engine/view/element~Element view element} instance.\n     * @param {Boolean} consumables.name If set to true element's name will be included.\n     * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names.\n     * @param {String|Array.<String>} consumables.classes Class name or array of class names.\n     * @param {String|Array.<String>} consumables.styles Style name or array of style names.\n     */\n\n  }, {\n    key: \"revert\",\n    value: function revert(element, consumables) {\n      var elementConsumables = this._consumables.get(element);\n\n      if (elementConsumables !== undefined) {\n        if (element.is('text') || element.is('documentFragment')) {\n          // For text nodes and document fragments - set consumable to true.\n          this._consumables.set(element, true);\n        } else {\n          // For elements - revert items from consumables object.\n          elementConsumables.revert(consumables);\n        }\n      }\n    }\n    /**\n     * Creates consumable object from {@link module:engine/view/element~Element view element}. Consumable object will include\n     * element's name and all its attributes, classes and styles.\n     *\n     * @static\n     * @param {module:engine/view/element~Element} element\n     * @returns {Object} consumables\n     */\n\n  }], [{\n    key: \"consumablesFromElement\",\n    value: function consumablesFromElement(element) {\n      var consumables = {\n        name: true,\n        attributes: [],\n        classes: [],\n        styles: []\n      };\n      var attributes = element.getAttributeKeys();\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = attributes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var attribute = _step.value;\n\n          // Skip classes and styles - will be added separately.\n          if (attribute == 'style' || attribute == 'class') {\n            continue;\n          }\n\n          consumables.attributes.push(attribute);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      var classes = element.getClassNames();\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = classes[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var className = _step2.value;\n          consumables.classes.push(className);\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      var styles = element.getStyleNames();\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = styles[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var style = _step3.value;\n          consumables.styles.push(style);\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      return consumables;\n    }\n    /**\n     * Creates {@link module:engine/conversion/viewconsumable~ViewConsumable ViewConsumable} instance from\n     * {@link module:engine/view/node~Node node} or {@link module:engine/view/documentfragment~DocumentFragment document fragment}.\n     * Instance will contain all elements, child nodes, attributes, styles and classes added for consumption.\n     *\n     * @static\n     * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} from View node or document fragment\n     * from which `ViewConsumable` will be created.\n     * @param {module:engine/conversion/viewconsumable~ViewConsumable} [instance] If provided, given `ViewConsumable` instance will be used\n     * to add all consumables. It will be returned instead of a new instance.\n     */\n\n  }, {\n    key: \"createFrom\",\n    value: function createFrom(from, instance) {\n      if (!instance) {\n        instance = new ViewConsumable();\n      }\n\n      if (from.is('text')) {\n        instance.add(from);\n        return instance;\n      } // Add `from` itself, if it is an element.\n\n\n      if (from.is('element')) {\n        instance.add(from, ViewConsumable.consumablesFromElement(from));\n      }\n\n      if (from.is('documentFragment')) {\n        instance.add(from);\n      }\n\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = from.getChildren()[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var child = _step4.value;\n          instance = ViewConsumable.createFrom(child, instance);\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      return instance;\n    }\n  }]);\n\n  return ViewConsumable;\n}();\n/**\n * This is a private helper-class for {@link module:engine/conversion/viewconsumable~ViewConsumable}.\n * It represents and manipulates consumable parts of a single {@link module:engine/view/element~Element}.\n *\n * @private\n */\n\n\nexport { ViewConsumable as default };\n\nvar ViewElementConsumables =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates ViewElementConsumables instance.\n   */\n  function ViewElementConsumables() {\n    _classCallCheck(this, ViewElementConsumables);\n\n    /**\n     * Flag indicating if name of the element can be consumed.\n     *\n     * @private\n     * @member {Boolean}\n     */\n    this._canConsumeName = null;\n    /**\n     * Contains maps of element's consumables: attributes, classes and styles.\n     *\n     * @private\n     * @member {Object}\n     */\n\n    this._consumables = {\n      attributes: new Map(),\n      styles: new Map(),\n      classes: new Map()\n    };\n  }\n  /**\n   * Adds consumable parts of the {@link module:engine/view/element~Element view element}.\n   * Element's name itself can be marked to be consumed (when element's name is consumed its attributes, classes and\n   * styles still could be consumed):\n   *\n   *\t\tconsumables.add( { name: true } );\n   *\n   * Attributes classes and styles:\n   *\n   *\t\tconsumables.add( { attributes: 'title', classes: 'foo', styles: 'color' } );\n   *\t\tconsumables.add( { attributes: [ 'title', 'name' ], classes: [ 'foo', 'bar' ] );\n   *\n   * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `viewconsumable-invalid-attribute` when `class` or `style`\n   * attribute is provided - it should be handled separately by providing `style` and `class` in consumables object.\n   *\n   * @param {Object} consumables Object describing which parts of the element can be consumed.\n   * @param {Boolean} consumables.name If set to `true` element's name will be added as consumable.\n   * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names to add as consumable.\n   * @param {String|Array.<String>} consumables.classes Class name or array of class names to add as consumable.\n   * @param {String|Array.<String>} consumables.styles Style name or array of style names to add as consumable.\n   */\n\n\n  _createClass(ViewElementConsumables, [{\n    key: \"add\",\n    value: function add(consumables) {\n      if (consumables.name) {\n        this._canConsumeName = true;\n      }\n\n      for (var type in this._consumables) {\n        if (type in consumables) {\n          this._add(type, consumables[type]);\n        }\n      }\n    }\n    /**\n     * Tests if parts of the {@link module:engine/view/node~Node view node} can be consumed.\n     *\n     * Element's name can be tested:\n     *\n     *\t\tconsumables.test( { name: true } );\n     *\n     * Attributes classes and styles:\n     *\n     *\t\tconsumables.test( { attributes: 'title', classes: 'foo', styles: 'color' } );\n     *\t\tconsumables.test( { attributes: [ 'title', 'name' ], classes: [ 'foo', 'bar' ] );\n     *\n     * @param {Object} consumables Object describing which parts of the element should be tested.\n     * @param {Boolean} consumables.name If set to `true` element's name will be tested.\n     * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names to test.\n     * @param {String|Array.<String>} consumables.classes Class name or array of class names to test.\n     * @param {String|Array.<String>} consumables.styles Style name or array of style names to test.\n     * @returns {Boolean|null} `true` when all tested items can be consumed, `null` when even one of the items\n     * was never marked for consumption and `false` when even one of the items was already consumed.\n     */\n\n  }, {\n    key: \"test\",\n    value: function test(consumables) {\n      // Check if name can be consumed.\n      if (consumables.name && !this._canConsumeName) {\n        return this._canConsumeName;\n      }\n\n      for (var type in this._consumables) {\n        if (type in consumables) {\n          var value = this._test(type, consumables[type]);\n\n          if (value !== true) {\n            return value;\n          }\n        }\n      } // Return true only if all can be consumed.\n\n\n      return true;\n    }\n    /**\n     * Consumes parts of {@link module:engine/view/element~Element view element}. This function does not check if consumable item\n     * is already consumed - it consumes all consumable items provided.\n     * Element's name can be consumed:\n     *\n     *\t\tconsumables.consume( { name: true } );\n     *\n     * Attributes classes and styles:\n     *\n     *\t\tconsumables.consume( { attributes: 'title', classes: 'foo', styles: 'color' } );\n     *\t\tconsumables.consume( { attributes: [ 'title', 'name' ], classes: [ 'foo', 'bar' ] );\n     *\n     * @param {Object} consumables Object describing which parts of the element should be consumed.\n     * @param {Boolean} consumables.name If set to `true` element's name will be consumed.\n     * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names to consume.\n     * @param {String|Array.<String>} consumables.classes Class name or array of class names to consume.\n     * @param {String|Array.<String>} consumables.styles Style name or array of style names to consume.\n     */\n\n  }, {\n    key: \"consume\",\n    value: function consume(consumables) {\n      if (consumables.name) {\n        this._canConsumeName = false;\n      }\n\n      for (var type in this._consumables) {\n        if (type in consumables) {\n          this._consume(type, consumables[type]);\n        }\n      }\n    }\n    /**\n     * Revert already consumed parts of {@link module:engine/view/element~Element view Element}, so they can be consumed once again.\n     * Element's name can be reverted:\n     *\n     *\t\tconsumables.revert( { name: true } );\n     *\n     * Attributes classes and styles:\n     *\n     *\t\tconsumables.revert( { attributes: 'title', classes: 'foo', styles: 'color' } );\n     *\t\tconsumables.revert( { attributes: [ 'title', 'name' ], classes: [ 'foo', 'bar' ] );\n     *\n     * @param {Object} consumables Object describing which parts of the element should be reverted.\n     * @param {Boolean} consumables.name If set to `true` element's name will be reverted.\n     * @param {String|Array.<String>} consumables.attributes Attribute name or array of attribute names to revert.\n     * @param {String|Array.<String>} consumables.classes Class name or array of class names to revert.\n     * @param {String|Array.<String>} consumables.styles Style name or array of style names to revert.\n     */\n\n  }, {\n    key: \"revert\",\n    value: function revert(consumables) {\n      if (consumables.name) {\n        this._canConsumeName = true;\n      }\n\n      for (var type in this._consumables) {\n        if (type in consumables) {\n          this._revert(type, consumables[type]);\n        }\n      }\n    }\n    /**\n     * Helper method that adds consumables of a given type: attribute, class or style.\n     *\n     * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `viewconsumable-invalid-attribute` when `class` or `style`\n     * type is provided - it should be handled separately by providing actual style/class type.\n     *\n     * @private\n     * @param {String} type Type of the consumable item: `attributes`, `classes` or `styles`.\n     * @param {String|Array.<String>} item Consumable item or array of items.\n     */\n\n  }, {\n    key: \"_add\",\n    value: function _add(type, item) {\n      var items = isArray(item) ? item : [item];\n      var consumables = this._consumables[type];\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = items[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var name = _step5.value;\n\n          if (type === 'attributes' && (name === 'class' || name === 'style')) {\n            /**\n             * Class and style attributes should be handled separately in\n             * {@link module:engine/conversion/viewconsumable~ViewConsumable#add `ViewConsumable#add()`}.\n             *\n             * What you have done is trying to use:\n             *\n             *\t\tconsumables.add( { attributes: [ 'class', 'style' ] } );\n             *\n             * While each class and style should be registered separately:\n             *\n             *\t\tconsumables.add( { classes: 'some-class', styles: 'font-weight' } );\n             *\n             * @error viewconsumable-invalid-attribute\n             */\n            throw new CKEditorError('viewconsumable-invalid-attribute: Classes and styles should be handled separately.');\n          }\n\n          consumables.set(name, true);\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n    }\n    /**\n     * Helper method that tests consumables of a given type: attribute, class or style.\n     *\n     * @private\n     * @param {String} type Type of the consumable item: `attributes`, `classes` or `styles`.\n     * @param {String|Array.<String>} item Consumable item or array of items.\n     * @returns {Boolean|null} Returns `true` if all items can be consumed, `null` when one of the items cannot be\n     * consumed and `false` when one of the items is already consumed.\n     */\n\n  }, {\n    key: \"_test\",\n    value: function _test(type, item) {\n      var items = isArray(item) ? item : [item];\n      var consumables = this._consumables[type];\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = items[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var name = _step6.value;\n\n          if (type === 'attributes' && (name === 'class' || name === 'style')) {\n            var consumableName = name == 'class' ? 'classes' : 'styles'; // Check all classes/styles if class/style attribute is tested.\n\n            var value = this._test(consumableName, _toConsumableArray(this._consumables[consumableName].keys()));\n\n            if (value !== true) {\n              return value;\n            }\n          } else {\n            var _value = consumables.get(name); // Return null if attribute is not found.\n\n\n            if (_value === undefined) {\n              return null;\n            }\n\n            if (!_value) {\n              return false;\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n            _iterator6.return();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n\n      return true;\n    }\n    /**\n     * Helper method that consumes items of a given type: attribute, class or style.\n     *\n     * @private\n     * @param {String} type Type of the consumable item: `attributes`, `classes` or `styles`.\n     * @param {String|Array.<String>} item Consumable item or array of items.\n     */\n\n  }, {\n    key: \"_consume\",\n    value: function _consume(type, item) {\n      var items = isArray(item) ? item : [item];\n      var consumables = this._consumables[type];\n      var _iteratorNormalCompletion7 = true;\n      var _didIteratorError7 = false;\n      var _iteratorError7 = undefined;\n\n      try {\n        for (var _iterator7 = items[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n          var name = _step7.value;\n\n          if (type === 'attributes' && (name === 'class' || name === 'style')) {\n            var consumableName = name == 'class' ? 'classes' : 'styles'; // If class or style is provided for consumption - consume them all.\n\n            this._consume(consumableName, _toConsumableArray(this._consumables[consumableName].keys()));\n          } else {\n            consumables.set(name, false);\n          }\n        }\n      } catch (err) {\n        _didIteratorError7 = true;\n        _iteratorError7 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n            _iterator7.return();\n          }\n        } finally {\n          if (_didIteratorError7) {\n            throw _iteratorError7;\n          }\n        }\n      }\n    }\n    /**\n     * Helper method that reverts items of a given type: attribute, class or style.\n     *\n     * @private\n     * @param {String} type Type of the consumable item: `attributes`, `classes` or , `styles`.\n     * @param {String|Array.<String>} item Consumable item or array of items.\n     */\n\n  }, {\n    key: \"_revert\",\n    value: function _revert(type, item) {\n      var items = isArray(item) ? item : [item];\n      var consumables = this._consumables[type];\n      var _iteratorNormalCompletion8 = true;\n      var _didIteratorError8 = false;\n      var _iteratorError8 = undefined;\n\n      try {\n        for (var _iterator8 = items[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n          var name = _step8.value;\n\n          if (type === 'attributes' && (name === 'class' || name === 'style')) {\n            var consumableName = name == 'class' ? 'classes' : 'styles'; // If class or style is provided for reverting - revert them all.\n\n            this._revert(consumableName, _toConsumableArray(this._consumables[consumableName].keys()));\n          } else {\n            var value = consumables.get(name);\n\n            if (value === false) {\n              consumables.set(name, true);\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError8 = true;\n        _iteratorError8 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n            _iterator8.return();\n          }\n        } finally {\n          if (_didIteratorError8) {\n            throw _iteratorError8;\n          }\n        }\n      }\n    }\n  }]);\n\n  return ViewElementConsumables;\n}();","var _marked =\n/*#__PURE__*/\nregeneratorRuntime.mark(combineWalkers),\n    _marked2 =\n/*#__PURE__*/\nregeneratorRuntime.mark(convertToMinimalFlatRanges);\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/schema\n */\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport Range from './range';\nimport Position from './position';\nimport Element from './element';\nimport Text from './text';\nimport TreeWalker from './treewalker';\n/**\n * The model's schema. It defines allowed and disallowed structures of nodes as well as nodes' attributes.\n * The schema is usually defined by features and based on them the editing framework and features\n * make decisions how to change and process the model.\n *\n * The instance of schema is available in {@link module:engine/model/model~Model#schema `editor.model.schema`}.\n *\n * Read more about the schema in:\n *\n * * {@glink framework/guides/architecture/editing-engine#schema \"Schema\"} section of the\n * {@glink framework/guides/architecture/editing-engine Introduction to the \"Editing engine architecture\"}.\n * * {@glink framework/guides/deep-dive/schema \"Schema\" deep dive} guide.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\n\nvar Schema =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates schema instance.\n   */\n  function Schema() {\n    var _this = this;\n\n    _classCallCheck(this, Schema);\n\n    this._sourceDefinitions = {};\n    this.decorate('checkChild');\n    this.decorate('checkAttribute');\n    this.on('checkAttribute', function (evt, args) {\n      args[0] = new SchemaContext(args[0]);\n    }, {\n      priority: 'highest'\n    });\n    this.on('checkChild', function (evt, args) {\n      args[0] = new SchemaContext(args[0]);\n      args[1] = _this.getDefinition(args[1]);\n    }, {\n      priority: 'highest'\n    });\n  }\n  /**\n   * Registers schema item. Can only be called once for every item name.\n   *\n   *\t\tschema.register( 'paragraph', {\n   *\t\t\tinheritAllFrom: '$block'\n   *\t\t} );\n   *\n   * @param {String} itemName\n   * @param {module:engine/model/schema~SchemaItemDefinition} definition\n   */\n\n\n  _createClass(Schema, [{\n    key: \"register\",\n    value: function register(itemName, definition) {\n      if (this._sourceDefinitions[itemName]) {\n        // TODO docs\n        throw new CKEditorError('schema-cannot-register-item-twice: A single item cannot be registered twice in the schema.', {\n          itemName: itemName\n        });\n      }\n\n      this._sourceDefinitions[itemName] = [Object.assign({}, definition)];\n\n      this._clearCache();\n    }\n    /**\n     * Extends a {@link #register registered} item's definition.\n     *\n     * Extending properties such as `allowIn` will add more items to the existing properties,\n     * while redefining properties such as `isBlock` will override the previously defined ones.\n     *\n     *\t\tschema.register( 'foo', {\n     *\t\t\tallowIn: '$root',\n     *\t\t\tisBlock: true;\n     *\t\t} );\n     *\t\tschema.extend( 'foo', {\n     *\t\t\tallowIn: 'blockQuote',\n     *\t\t\tisBlock: false\n     *\t\t} );\n     *\n     *\t\tschema.getDefinition( 'foo' );\n     *\t\t//\t{\n     *\t\t//\t\tallowIn: [ '$root', 'blockQuote' ],\n     *\t\t// \t\tisBlock: false\n     *\t\t//\t}\n     *\n     * @param {String} itemName\n     * @param {module:engine/model/schema~SchemaItemDefinition} definition\n     */\n\n  }, {\n    key: \"extend\",\n    value: function extend(itemName, definition) {\n      if (!this._sourceDefinitions[itemName]) {\n        // TODO docs\n        throw new CKEditorError('schema-cannot-extend-missing-item: Cannot extend an item which was not registered yet.', {\n          itemName: itemName\n        });\n      }\n\n      this._sourceDefinitions[itemName].push(Object.assign({}, definition));\n\n      this._clearCache();\n    }\n    /**\n     * Returns all registered items.\n     *\n     * @returns {Object.<String,module:engine/model/schema~SchemaCompiledItemDefinition>}\n     */\n\n  }, {\n    key: \"getDefinitions\",\n    value: function getDefinitions() {\n      if (!this._compiledDefinitions) {\n        this._compile();\n      }\n\n      return this._compiledDefinitions;\n    }\n    /**\n     * Returns a definition of the given item or `undefined` if item is not registered.\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/schema~SchemaContextItem|String} item\n     * @returns {module:engine/model/schema~SchemaCompiledItemDefinition}\n     */\n\n  }, {\n    key: \"getDefinition\",\n    value: function getDefinition(item) {\n      var itemName;\n\n      if (typeof item == 'string') {\n        itemName = item;\n      } else if (item.is && (item.is('text') || item.is('textProxy'))) {\n        itemName = '$text';\n      } // Element or module:engine/model/schema~SchemaContextItem.\n      else {\n          itemName = item.name;\n        }\n\n      return this.getDefinitions()[itemName];\n    }\n    /**\n     * Returns `true` if the given item is registered in the schema.\n     *\n     *\t\tschema.isRegistered( 'paragraph' ); // -> true\n     *\t\tschema.isRegistered( editor.model.document.getRoot() ); // -> true\n     *\t\tschema.isRegistered( 'foo' ); // -> false\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/schema~SchemaContextItem|String} item\n     */\n\n  }, {\n    key: \"isRegistered\",\n    value: function isRegistered(item) {\n      return !!this.getDefinition(item);\n    }\n    /**\n     * Returns `true` if the given item is defined to be\n     * a block by {@link module:engine/model/schema~SchemaItemDefinition}'s `isBlock` property.\n     *\n     *\t\tschema.isBlock( 'paragraph' ); // -> true\n     *\t\tschema.isBlock( '$root' ); // -> false\n     *\n     *\t\tconst paragraphElement = writer.createElement( 'paragraph' );\n     *\t\tschema.isBlock( paragraphElement ); // -> true\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/schema~SchemaContextItem|String} item\n     */\n\n  }, {\n    key: \"isBlock\",\n    value: function isBlock(item) {\n      var def = this.getDefinition(item);\n      return !!(def && def.isBlock);\n    }\n    /**\n     * Returns `true` if the given item is defined to be\n     * a limit element by {@link module:engine/model/schema~SchemaItemDefinition}'s `isLimit` or `isObject` property\n     * (all objects are also limits).\n     *\n     *\t\tschema.isLimit( 'paragraph' ); // -> false\n     *\t\tschema.isLimit( '$root' ); // -> true\n     *\t\tschema.isLimit( editor.model.document.getRoot() ); // -> true\n     *\t\tschema.isLimit( 'image' ); // -> true\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/schema~SchemaContextItem|String} item\n     */\n\n  }, {\n    key: \"isLimit\",\n    value: function isLimit(item) {\n      var def = this.getDefinition(item);\n\n      if (!def) {\n        return false;\n      }\n\n      return !!(def.isLimit || def.isObject);\n    }\n    /**\n     * Returns `true` if the given item is defined to be\n     * a object element by {@link module:engine/model/schema~SchemaItemDefinition}'s `isObject` property.\n     *\n     *\t\tschema.isObject( 'paragraph' ); // -> false\n     *\t\tschema.isObject( 'image' ); // -> true\n     *\n     *\t\tconst imageElement = writer.createElement( 'image' );\n     *\t\tschema.isObject( imageElement ); // -> true\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/schema~SchemaContextItem|String} item\n     */\n\n  }, {\n    key: \"isObject\",\n    value: function isObject(item) {\n      var def = this.getDefinition(item);\n      return !!(def && def.isObject);\n    }\n    /**\n     * Checks whether the given node (`child`) can be a child of the given context.\n     *\n     *\t\tschema.checkChild( model.document.getRoot(), paragraph ); // -> false\n     *\n     *\t\tschema.register( 'paragraph', {\n     *\t\t\tallowIn: '$root'\n     *\t\t} );\n     *\t\tschema.checkChild( model.document.getRoot(), paragraph ); // -> true\n     *\n     * Note: When verifying whether the given node can be a child of the given context, the\n     * schema also verifies the entire context &mdash; from its root to its last element. Therefore, it is possible\n     * for `checkChild()` to return `false` even though the context's last element can contain the checked child.\n     * It happens if one of the context's elements does not allow its child.\n     *\n     * @fires checkChild\n     * @param {module:engine/model/schema~SchemaContextDefinition} context The context in which the child will be checked.\n     * @param {module:engine/model/node~Node|String} def The child to check.\n     */\n\n  }, {\n    key: \"checkChild\",\n    value: function checkChild(context, def) {\n      // Note: context and child are already normalized here to a SchemaContext and SchemaCompiledItemDefinition.\n      if (!def) {\n        return false;\n      }\n\n      return this._checkContextMatch(def, context);\n    }\n    /**\n     * Checks whether the given attribute can be applied in the given context (on the last\n     * item of the context).\n     *\n     *\t\tschema.checkAttribute( textNode, 'bold' ); // -> false\n     *\n     *\t\tschema.extend( '$text', {\n     *\t\t\tallowAttributes: 'bold'\n     *\t\t} );\n     *\t\tschema.checkAttribute( textNode, 'bold' ); // -> true\n     *\n     * @fires checkAttribute\n     * @param {module:engine/model/schema~SchemaContextDefinition} context The context in which the attribute will be checked.\n     * @param {String} attributeName\n     */\n\n  }, {\n    key: \"checkAttribute\",\n    value: function checkAttribute(context, attributeName) {\n      var def = this.getDefinition(context.last);\n\n      if (!def) {\n        return false;\n      }\n\n      return def.allowAttributes.includes(attributeName);\n    }\n    /**\n     * Checks whether the given element (`elementToMerge`) can be merged with the specified base element (`positionOrBaseElement`).\n     *\n     * In other words &mdash; whether `elementToMerge`'s children {@link #checkChild are allowed} in the `positionOrBaseElement`.\n     *\n     * This check ensures that elements merged with {@link module:engine/model/writer~Writer#merge `Writer#merge()`}\n     * will be valid.\n     *\n     * Instead of elements, you can pass the instance of the {@link module:engine/model/position~Position} class as the\n     * `positionOrBaseElement`. It means that the elements before and after the position will be checked whether they can be merged.\n     *\n     * @param {module:engine/model/position~Position|module:engine/model/element~Element} positionOrBaseElement The position or base\n     * element to which the `elementToMerge` will be merged.\n     * @param {module:engine/model/element~Element} elementToMerge The element to merge. Required if `positionOrBaseElement` is an element.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"checkMerge\",\n    value: function checkMerge(positionOrBaseElement) {\n      var elementToMerge = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (positionOrBaseElement instanceof Position) {\n        var nodeBefore = positionOrBaseElement.nodeBefore;\n        var nodeAfter = positionOrBaseElement.nodeAfter;\n\n        if (!(nodeBefore instanceof Element)) {\n          /**\n           * The node before the merge position must be an element.\n           *\n           * @error schema-check-merge-no-element-before\n           */\n          throw new CKEditorError('schema-check-merge-no-element-before: The node before the merge position must be an element.');\n        }\n\n        if (!(nodeAfter instanceof Element)) {\n          /**\n           * The node after the merge position must be an element.\n           *\n           * @error schema-check-merge-no-element-after\n           */\n          throw new CKEditorError('schema-check-merge-no-element-after: The node after the merge position must be an element.');\n        }\n\n        return this.checkMerge(nodeBefore, nodeAfter);\n      }\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = elementToMerge.getChildren()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var child = _step.value;\n\n          if (!this.checkChild(positionOrBaseElement, child)) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return true;\n    }\n    /**\n     * Allows registering a callback to the {@link #checkChild} method calls.\n     *\n     * Callbacks allow you to implement rules which are not otherwise possible to achieve\n     * by using the declarative API of {@link module:engine/model/schema~SchemaItemDefinition}.\n     * For example, by using this method you can disallow elements in specific contexts.\n     *\n     * This method is a shorthand for using the {@link #event:checkChild} event. For even better control,\n     * you can use that event instead.\n     *\n     * Example:\n     *\n     *\t\t// Disallow heading1 directly inside a blockQuote.\n     *\t\tschema.addChildCheck( ( context, childDefinition ) => {\n     *\t\t\tif ( context.endsWith( 'blockQuote' ) && childDefinition.name == 'heading1' ) {\n     *\t\t\t\treturn false;\n     *\t\t\t}\n     *\t\t} );\n     *\n     * Which translates to:\n     *\n     *\t\tschema.on( 'checkChild', ( evt, args ) => {\n     *\t\t\tconst context = args[ 0 ];\n     *\t\t\tconst childDefinition = args[ 1 ];\n     *\n     *\t\t\tif ( context.endsWith( 'blockQuote' ) && childDefinition && childDefinition.name == 'heading1' ) {\n     *\t\t\t\t// Prevent next listeners from being called.\n     *\t\t\t\tevt.stop();\n     *\t\t\t\t// Set the checkChild()'s return value.\n     *\t\t\t\tevt.return = false;\n     *\t\t\t}\n     *\t\t}, { priority: 'high' } );\n     *\n     * @param {Function} callback The callback to be called. It is called with two parameters:\n     * {@link module:engine/model/schema~SchemaContext} (context) instance and\n     * {@link module:engine/model/schema~SchemaCompiledItemDefinition} (child-to-check definition).\n     * The callback may return `true/false` to override `checkChild()`'s return value. If it does not return\n     * a boolean value, the default algorithm (or other callbacks) will define `checkChild()`'s return value.\n     */\n\n  }, {\n    key: \"addChildCheck\",\n    value: function addChildCheck(callback) {\n      this.on('checkChild', function (evt, _ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            ctx = _ref2[0],\n            childDef = _ref2[1];\n\n        // checkChild() was called with a non-registered child.\n        // In 99% cases such check should return false, so not to overcomplicate all callbacks\n        // don't even execute them.\n        if (!childDef) {\n          return;\n        }\n\n        var retValue = callback(ctx, childDef);\n\n        if (typeof retValue == 'boolean') {\n          evt.stop();\n          evt.return = retValue;\n        }\n      }, {\n        priority: 'high'\n      });\n    }\n    /**\n     * Allows registering a callback to the {@link #checkAttribute} method calls.\n     *\n     * Callbacks allow you to implement rules which are not otherwise possible to achieve\n     * by using the declarative API of {@link module:engine/model/schema~SchemaItemDefinition}.\n     * For example, by using this method you can disallow attribute if node to which it is applied\n     * is contained within some other element (e.g. you want to disallow `bold` on `$text` within `heading1`).\n     *\n     * This method is a shorthand for using the {@link #event:checkAttribute} event. For even better control,\n     * you can use that event instead.\n     *\n     * Example:\n     *\n     *\t\t// Disallow bold on $text inside heading1.\n     *\t\tschema.addChildCheck( ( context, attributeName ) => {\n     *\t\t\tif ( context.endsWith( 'heading1 $text' ) && attributeName == 'bold' ) {\n     *\t\t\t\treturn false;\n     *\t\t\t}\n     *\t\t} );\n     *\n     * Which translates to:\n     *\n     *\t\tschema.on( 'checkAttribute', ( evt, args ) => {\n     *\t\t\tconst context = args[ 0 ];\n     *\t\t\tconst attributeName = args[ 1 ];\n     *\n     *\t\t\tif ( context.endsWith( 'heading1 $text' ) && attributeName == 'bold' ) {\n     *\t\t\t\t// Prevent next listeners from being called.\n     *\t\t\t\tevt.stop();\n     *\t\t\t\t// Set the checkAttribute()'s return value.\n     *\t\t\t\tevt.return = false;\n     *\t\t\t}\n     *\t\t}, { priority: 'high' } );\n     *\n     * @param {Function} callback The callback to be called. It is called with two parameters:\n     * {@link module:engine/model/schema~SchemaContext} (context) instance and attribute name.\n     * The callback may return `true/false` to override `checkAttribute()`'s return value. If it does not return\n     * a boolean value, the default algorithm (or other callbacks) will define `checkAttribute()`'s return value.\n     */\n\n  }, {\n    key: \"addAttributeCheck\",\n    value: function addAttributeCheck(callback) {\n      this.on('checkAttribute', function (evt, _ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            ctx = _ref4[0],\n            attributeName = _ref4[1];\n\n        var retValue = callback(ctx, attributeName);\n\n        if (typeof retValue == 'boolean') {\n          evt.stop();\n          evt.return = retValue;\n        }\n      }, {\n        priority: 'high'\n      });\n    }\n    /**\n     * Returns the lowest {@link module:engine/model/schema~Schema#isLimit limit element} containing the entire\n     * selection/range/position or the root otherwise.\n     *\n     * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection|\n     * module:engine/model/range~Range|module:engine/model/position~Position} selectionOrRangeOrPosition\n     * The selection/range/position to check.\n     * @returns {module:engine/model/element~Element} The lowest limit element containing\n     * the entire `selectionOrRangeOrPosition`.\n     */\n\n  }, {\n    key: \"getLimitElement\",\n    value: function getLimitElement(selectionOrRangeOrPosition) {\n      var element;\n\n      if (selectionOrRangeOrPosition instanceof Position) {\n        element = selectionOrRangeOrPosition.parent;\n      } else {\n        var ranges = selectionOrRangeOrPosition instanceof Range ? [selectionOrRangeOrPosition] : Array.from(selectionOrRangeOrPosition.getRanges()); // Find the common ancestor for all selection's ranges.\n\n        element = ranges.reduce(function (element, range) {\n          var rangeCommonAncestor = range.getCommonAncestor();\n\n          if (!element) {\n            return rangeCommonAncestor;\n          }\n\n          return element.getCommonAncestor(rangeCommonAncestor, {\n            includeSelf: true\n          });\n        }, null);\n      }\n\n      while (!this.isLimit(element)) {\n        if (element.parent) {\n          element = element.parent;\n        } else {\n          break;\n        }\n      }\n\n      return element;\n    }\n    /**\n     * Checks whether the attribute is allowed in selection:\n     *\n     * * if the selection is not collapsed, then checks if the attribute is allowed on any of nodes in that range,\n     * * if the selection is collapsed, then checks if on the selection position there's a text with the\n     * specified attribute allowed.\n     *\n     * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n     * Selection which will be checked.\n     * @param {String} attribute The name of the attribute to check.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"checkAttributeInSelection\",\n    value: function checkAttributeInSelection(selection, attribute) {\n      if (selection.isCollapsed) {\n        var firstPosition = selection.getFirstPosition();\n        var context = [].concat(_toConsumableArray(firstPosition.getAncestors()), [new Text('', selection.getAttributes())]); // Check whether schema allows for a text with the attribute in the selection.\n\n        return this.checkAttribute(context, attribute);\n      } else {\n        var ranges = selection.getRanges(); // For all ranges, check nodes in them until you find a node that is allowed to have the attribute.\n\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = ranges[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var range = _step2.value;\n            var _iteratorNormalCompletion3 = true;\n            var _didIteratorError3 = false;\n            var _iteratorError3 = undefined;\n\n            try {\n              for (var _iterator3 = range[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                var value = _step3.value;\n\n                if (this.checkAttribute(value.item, attribute)) {\n                  // If we found a node that is allowed to have the attribute, return true.\n                  return true;\n                }\n              }\n            } catch (err) {\n              _didIteratorError3 = true;\n              _iteratorError3 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n                  _iterator3.return();\n                }\n              } finally {\n                if (_didIteratorError3) {\n                  throw _iteratorError3;\n                }\n              }\n            }\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      } // If we haven't found such node, return false.\n\n\n      return false;\n    }\n    /**\n     * Transforms the given set of ranges into a set of ranges where the given attribute is allowed (and can be applied).\n     *\n     * @param {Array.<module:engine/model/range~Range>} ranges Ranges to be validated.\n     * @param {String} attribute The name of the attribute to check.\n     * @returns {Iterator.<module:engine/model/range~Range>} Ranges in which the attribute is allowed.\n     */\n\n  }, {\n    key: \"getValidRanges\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function getValidRanges(ranges, attribute) {\n      var _iteratorNormalCompletion4, _didIteratorError4, _iteratorError4, _iterator4, _step4, range;\n\n      return regeneratorRuntime.wrap(function getValidRanges$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              ranges = convertToMinimalFlatRanges(ranges);\n              _iteratorNormalCompletion4 = true;\n              _didIteratorError4 = false;\n              _iteratorError4 = undefined;\n              _context.prev = 4;\n              _iterator4 = ranges[Symbol.iterator]();\n\n            case 6:\n              if (_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done) {\n                _context.next = 12;\n                break;\n              }\n\n              range = _step4.value;\n              return _context.delegateYield(this._getValidRangesForRange(range, attribute), \"t0\", 9);\n\n            case 9:\n              _iteratorNormalCompletion4 = true;\n              _context.next = 6;\n              break;\n\n            case 12:\n              _context.next = 18;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t1 = _context[\"catch\"](4);\n              _didIteratorError4 = true;\n              _iteratorError4 = _context.t1;\n\n            case 18:\n              _context.prev = 18;\n              _context.prev = 19;\n\n              if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n                _iterator4.return();\n              }\n\n            case 21:\n              _context.prev = 21;\n\n              if (!_didIteratorError4) {\n                _context.next = 24;\n                break;\n              }\n\n              throw _iteratorError4;\n\n            case 24:\n              return _context.finish(21);\n\n            case 25:\n              return _context.finish(18);\n\n            case 26:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, getValidRanges, this, [[4, 14, 18, 26], [19,, 21, 25]]);\n    })\n    /**\n     * Takes a flat range and an attribute name. Traverses the range recursively and deeply to find and return all ranges\n     * inside the given range on which the attribute can be applied.\n     *\n     * This is a helper function for {@link ~Schema#getValidRanges}.\n     *\n     * @private\n     * @param {module:engine/model/range~Range} range Range to process.\n     * @param {String} attribute The name of the attribute to check.\n     * @returns {Iterator.<module:engine/model/range~Range>} Ranges in which the attribute is allowed.\n     */\n\n  }, {\n    key: \"_getValidRangesForRange\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _getValidRangesForRange(range, attribute) {\n      var start, end, _iteratorNormalCompletion5, _didIteratorError5, _iteratorError5, _iterator5, _step5, item;\n\n      return regeneratorRuntime.wrap(function _getValidRangesForRange$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              start = range.start;\n              end = range.start;\n              _iteratorNormalCompletion5 = true;\n              _didIteratorError5 = false;\n              _iteratorError5 = undefined;\n              _context2.prev = 5;\n              _iterator5 = range.getItems({\n                shallow: true\n              })[Symbol.iterator]();\n\n            case 7:\n              if (_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done) {\n                _context2.next = 20;\n                break;\n              }\n\n              item = _step5.value;\n\n              if (!item.is('element')) {\n                _context2.next = 11;\n                break;\n              }\n\n              return _context2.delegateYield(this._getValidRangesForRange(Range._createIn(item), attribute), \"t0\", 11);\n\n            case 11:\n              if (this.checkAttribute(item, attribute)) {\n                _context2.next = 16;\n                break;\n              }\n\n              if (start.isEqual(end)) {\n                _context2.next = 15;\n                break;\n              }\n\n              _context2.next = 15;\n              return new Range(start, end);\n\n            case 15:\n              start = Position._createAfter(item);\n\n            case 16:\n              end = Position._createAfter(item);\n\n            case 17:\n              _iteratorNormalCompletion5 = true;\n              _context2.next = 7;\n              break;\n\n            case 20:\n              _context2.next = 26;\n              break;\n\n            case 22:\n              _context2.prev = 22;\n              _context2.t1 = _context2[\"catch\"](5);\n              _didIteratorError5 = true;\n              _iteratorError5 = _context2.t1;\n\n            case 26:\n              _context2.prev = 26;\n              _context2.prev = 27;\n\n              if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n                _iterator5.return();\n              }\n\n            case 29:\n              _context2.prev = 29;\n\n              if (!_didIteratorError5) {\n                _context2.next = 32;\n                break;\n              }\n\n              throw _iteratorError5;\n\n            case 32:\n              return _context2.finish(29);\n\n            case 33:\n              return _context2.finish(26);\n\n            case 34:\n              if (start.isEqual(end)) {\n                _context2.next = 37;\n                break;\n              }\n\n              _context2.next = 37;\n              return new Range(start, end);\n\n            case 37:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _getValidRangesForRange, this, [[5, 22, 26, 34], [27,, 29, 33]]);\n    })\n    /**\n     * Basing on given `position`, finds and returns a {@link module:engine/model/range~Range range} which is\n     * nearest to that `position` and is a correct range for selection.\n     *\n     * The correct selection range might be collapsed when it is located in a position where the text node can be placed.\n     * Non-collapsed range is returned when selection can be placed around element marked as an \"object\" in\n     * the {@link module:engine/model/schema~Schema schema}.\n     *\n     * Direction of searching for the nearest correct selection range can be specified as:\n     *\n     * * `both` - searching will be performed in both ways,\n     * * `forward` - searching will be performed only forward,\n     * * `backward` - searching will be performed only backward.\n     *\n     * When valid selection range cannot be found, `null` is returned.\n     *\n     * @param {module:engine/model/position~Position} position Reference position where new selection range should be looked for.\n     * @param {'both'|'forward'|'backward'} [direction='both'] Search direction.\n     * @returns {module:engine/model/range~Range|null} Nearest selection range or `null` if one cannot be found.\n     */\n\n  }, {\n    key: \"getNearestSelectionRange\",\n    value: function getNearestSelectionRange(position) {\n      var direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'both';\n\n      // Return collapsed range if provided position is valid.\n      if (this.checkChild(position, '$text')) {\n        return new Range(position);\n      }\n\n      var backwardWalker, forwardWalker;\n\n      if (direction == 'both' || direction == 'backward') {\n        backwardWalker = new TreeWalker({\n          startPosition: position,\n          direction: 'backward'\n        });\n      }\n\n      if (direction == 'both' || direction == 'forward') {\n        forwardWalker = new TreeWalker({\n          startPosition: position\n        });\n      }\n\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = combineWalkers(backwardWalker, forwardWalker)[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var data = _step6.value;\n          var type = data.walker == backwardWalker ? 'elementEnd' : 'elementStart';\n          var value = data.value;\n\n          if (value.type == type && this.isObject(value.item)) {\n            return Range._createOn(value.item);\n          }\n\n          if (this.checkChild(value.nextPosition, '$text')) {\n            return new Range(value.nextPosition);\n          }\n        }\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n            _iterator6.return();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n\n      return null;\n    }\n    /**\n     * Tries to find position ancestors that allows to insert given node.\n     * It starts searching from the given position and goes node by node to the top of the model tree\n     * as long as {@link module:engine/model/schema~Schema#isLimit limit element},\n     * {@link module:engine/model/schema~Schema#isObject object element} or top-most ancestor won't be reached.\n     *\n     * @params {module:engine/model/node~Node} node Node for which allowed parent should be found.\n     * @params {module:engine/model/position~Position} position Position from searching will start.\n     * @returns {module:engine/model/element~Element|null} element Allowed parent or null if nothing was found.\n     */\n\n  }, {\n    key: \"findAllowedParent\",\n    value: function findAllowedParent(node, position) {\n      var parent = position.parent;\n\n      while (parent) {\n        if (this.checkChild(parent, node)) {\n          return parent;\n        } // Do not split limit elements.\n\n\n        if (this.isLimit(parent)) {\n          return null;\n        }\n\n        parent = parent.parent;\n      }\n\n      return null;\n    }\n    /**\n     * Removes attributes disallowed by the schema.\n     *\n     * @param {Iterable.<module:engine/model/node~Node>} nodes Nodes that will be filtered.\n     * @param {module:engine/model/writer~Writer} writer\n     */\n\n  }, {\n    key: \"removeDisallowedAttributes\",\n    value: function removeDisallowedAttributes(nodes, writer) {\n      var _iteratorNormalCompletion7 = true;\n      var _didIteratorError7 = false;\n      var _iteratorError7 = undefined;\n\n      try {\n        for (var _iterator7 = nodes[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n          var node = _step7.value;\n          var _iteratorNormalCompletion8 = true;\n          var _didIteratorError8 = false;\n          var _iteratorError8 = undefined;\n\n          try {\n            for (var _iterator8 = node.getAttributeKeys()[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n              var attribute = _step8.value;\n\n              if (!this.checkAttribute(node, attribute)) {\n                writer.removeAttribute(attribute, node);\n              }\n            }\n          } catch (err) {\n            _didIteratorError8 = true;\n            _iteratorError8 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n                _iterator8.return();\n              }\n            } finally {\n              if (_didIteratorError8) {\n                throw _iteratorError8;\n              }\n            }\n          }\n\n          if (node.is('element')) {\n            this.removeDisallowedAttributes(node.getChildren(), writer);\n          }\n        }\n      } catch (err) {\n        _didIteratorError7 = true;\n        _iteratorError7 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n            _iterator7.return();\n          }\n        } finally {\n          if (_didIteratorError7) {\n            throw _iteratorError7;\n          }\n        }\n      }\n    }\n    /**\n     * Creates an instance of the schema context.\n     *\n     * @param {module:engine/model/schema~SchemaContextDefinition} context\n     * @returns {module:engine/model/schema~SchemaContext}\n     */\n\n  }, {\n    key: \"createContext\",\n    value: function createContext(context) {\n      return new SchemaContext(context);\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_clearCache\",\n    value: function _clearCache() {\n      this._compiledDefinitions = null;\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_compile\",\n    value: function _compile() {\n      var compiledDefinitions = {};\n      var sourceRules = this._sourceDefinitions;\n      var itemNames = Object.keys(sourceRules);\n\n      for (var _i2 = 0; _i2 < itemNames.length; _i2++) {\n        var itemName = itemNames[_i2];\n        compiledDefinitions[itemName] = compileBaseItemRule(sourceRules[itemName], itemName);\n      }\n\n      for (var _i3 = 0; _i3 < itemNames.length; _i3++) {\n        var _itemName = itemNames[_i3];\n        compileAllowContentOf(compiledDefinitions, _itemName);\n      }\n\n      for (var _i4 = 0; _i4 < itemNames.length; _i4++) {\n        var _itemName2 = itemNames[_i4];\n        compileAllowWhere(compiledDefinitions, _itemName2);\n      }\n\n      for (var _i5 = 0; _i5 < itemNames.length; _i5++) {\n        var _itemName3 = itemNames[_i5];\n        compileAllowAttributesOf(compiledDefinitions, _itemName3);\n        compileInheritPropertiesFrom(compiledDefinitions, _itemName3);\n      }\n\n      for (var _i6 = 0; _i6 < itemNames.length; _i6++) {\n        var _itemName4 = itemNames[_i6];\n        cleanUpAllowIn(compiledDefinitions, _itemName4);\n        cleanUpAllowAttributes(compiledDefinitions, _itemName4);\n      }\n\n      this._compiledDefinitions = compiledDefinitions;\n    }\n    /**\n     * @private\n     * @param {module:engine/model/schema~SchemaCompiledItemDefinition} def\n     * @param {module:engine/model/schema~SchemaContext} context\n     * @param {Number} contextItemIndex\n     */\n\n  }, {\n    key: \"_checkContextMatch\",\n    value: function _checkContextMatch(def, context) {\n      var contextItemIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : context.length - 1;\n      var contextItem = context.getItem(contextItemIndex);\n\n      if (def.allowIn.includes(contextItem.name)) {\n        if (contextItemIndex == 0) {\n          return true;\n        } else {\n          var parentRule = this.getDefinition(contextItem);\n          return this._checkContextMatch(parentRule, context, contextItemIndex - 1);\n        }\n      } else {\n        return false;\n      }\n    }\n  }]);\n\n  return Schema;\n}();\n\nexport { Schema as default };\nmix(Schema, ObservableMixin);\n/**\n * Event fired when the {@link #checkChild} method is called. It allows plugging in\n * additional behavior – e.g. implementing rules which cannot be defined using the declarative\n * {@link module:engine/model/schema~SchemaItemDefinition} interface.\n *\n * **Note:** The {@link #addChildCheck} method is a more handy way to register callbacks. Internally,\n * it registers a listener to this event but comes with a simpler API and it is the recommended choice\n * in most of the cases.\n *\n * The {@link #checkChild} method fires an event because it is\n * {@link module:utils/observablemixin~ObservableMixin#decorate decorated} with it. Thanks to that you can\n * use this event in a various way, but the most important use case is overriding standard behaviour of the\n * `checkChild()` method. Let's see a typical listener template:\n *\n *\t\tschema.on( 'checkChild', ( evt, args ) => {\n *\t\t\tconst context = args[ 0 ];\n *\t\t\tconst childDefinition = args[ 1 ];\n *\t\t}, { priority: 'high' } );\n *\n * The listener is added with a `high` priority to be executed before the default method is really called. The `args` callback\n * parameter contains arguments passed to `checkChild( context, child )`. However, the `context` parameter is already\n * normalized to a {@link module:engine/model/schema~SchemaContext} instance and `child` to a\n * {@link module:engine/model/schema~SchemaCompiledItemDefinition} instance, so you don't have to worry about\n * the various ways how `context` and `child` may be passed to `checkChild()`.\n *\n * **Note:** `childDefinition` may be `undefined` if `checkChild()` was called with a non-registered element.\n *\n * So, in order to implement a rule \"disallow `heading1` in `blockQuote`\" you can add such a listener:\n *\n *\t\tschema.on( 'checkChild', ( evt, args ) => {\n *\t\t\tconst context = args[ 0 ];\n *\t\t\tconst childDefinition = args[ 1 ];\n *\n *\t\t\tif ( context.endsWith( 'blockQuote' ) && childDefinition && childDefinition.name == 'heading1' ) {\n *\t\t\t\t// Prevent next listeners from being called.\n *\t\t\t\tevt.stop();\n *\t\t\t\t// Set the checkChild()'s return value.\n *\t\t\t\tevt.return = false;\n *\t\t\t}\n *\t\t}, { priority: 'high' } );\n *\n * Allowing elements in specific contexts will be a far less common use case, because it's normally handled by\n * `allowIn` rule from {@link module:engine/model/schema~SchemaItemDefinition} but if you have a complex scenario\n * where `listItem` should be allowed only in element `foo` which must be in element `bar`, then this would be the way:\n *\n *\t\tschema.on( 'checkChild', ( evt, args ) => {\n *\t\t\tconst context = args[ 0 ];\n *\t\t\tconst childDefinition = args[ 1 ];\n *\n *\t\t\tif ( context.endsWith( 'bar foo' ) && childDefinition.name == 'listItem' ) {\n *\t\t\t\t// Prevent next listeners from being called.\n *\t\t\t\tevt.stop();\n *\t\t\t\t// Set the checkChild()'s return value.\n *\t\t\t\tevt.return = true;\n *\t\t\t}\n *\t\t}, { priority: 'high' } );\n *\n * @event checkChild\n * @param {Array} args The `checkChild()`'s arguments.\n */\n\n/**\n * Event fired when the {@link #checkAttribute} method is called. It allows plugging in\n * additional behavior – e.g. implementing rules which cannot be defined using the declarative\n * {@link module:engine/model/schema~SchemaItemDefinition} interface.\n *\n * **Note:** The {@link #addAttributeCheck} method is a more handy way to register callbacks. Internally,\n * it registers a listener to this event but comes with a simpler API and it is the recommended choice\n * in most of the cases.\n *\n * The {@link #checkAttribute} method fires an event because it's\n * {@link module:utils/observablemixin~ObservableMixin#decorate decorated} with it. Thanks to that you can\n * use this event in a various way, but the most important use case is overriding standard behaviour of the\n * `checkAttribute()` method. Let's see a typical listener template:\n *\n *\t\tschema.on( 'checkAttribute', ( evt, args ) => {\n *\t\t\tconst context = args[ 0 ];\n *\t\t\tconst attributeName = args[ 1 ];\n *\t\t}, { priority: 'high' } );\n *\n * The listener is added with a `high` priority to be executed before the default method is really called. The `args` callback\n * parameter contains arguments passed to `checkAttribute( context, attributeName )`. However, the `context` parameter is already\n * normalized to a {@link module:engine/model/schema~SchemaContext} instance, so you don't have to worry about\n * the various ways how `context` may be passed to `checkAttribute()`.\n *\n * So, in order to implement a rule \"disallow `bold` in a text which is in a `heading1` you can add such a listener:\n *\n *\t\tschema.on( 'checkAttribute', ( evt, args ) => {\n *\t\t\tconst context = args[ 0 ];\n *\t\t\tconst atributeName = args[ 1 ];\n *\n *\t\t\tif ( context.endsWith( 'heading1 $text' ) && attributeName == 'bold' ) {\n *\t\t\t\t// Prevent next listeners from being called.\n *\t\t\t\tevt.stop();\n *\t\t\t\t// Set the checkAttribute()'s return value.\n *\t\t\t\tevt.return = false;\n *\t\t\t}\n *\t\t}, { priority: 'high' } );\n *\n * Allowing attributes in specific contexts will be a far less common use case, because it's normally handled by\n * `allowAttributes` rule from {@link module:engine/model/schema~SchemaItemDefinition} but if you have a complex scenario\n * where `bold` should be allowed only in element `foo` which must be in element `bar`, then this would be the way:\n *\n *\t\tschema.on( 'checkAttribute', ( evt, args ) => {\n *\t\t\tconst context = args[ 0 ];\n *\t\t\tconst atributeName = args[ 1 ];\n *\n *\t\t\tif ( context.endsWith( 'bar foo $text' ) && attributeName == 'bold' ) {\n *\t\t\t\t// Prevent next listeners from being called.\n *\t\t\t\tevt.stop();\n *\t\t\t\t// Set the checkAttribute()'s return value.\n *\t\t\t\tevt.return = true;\n *\t\t\t}\n *\t\t}, { priority: 'high' } );\n *\n * @event checkAttribute\n * @param {Array} args The `checkAttribute()`'s arguments.\n */\n\n/**\n * A definition of a {@link module:engine/model/schema~Schema schema} item.\n *\n * You can define the following rules:\n *\n * * `allowIn` &ndash; A string or an array of strings. Defines in which other items this item will be allowed.\n * * `allowAttributes` &ndash; A string or an array of strings. Defines allowed attributes of the given item.\n * * `allowContentOf` &ndash; A string or an array of strings. Inherits \"allowed children\" from other items.\n * * `allowWhere` &ndash; A string or an array of strings. Inherits \"allowed in\" from other items.\n * * `allowAttributesOf` &ndash; A string or an array of strings. Inherits attributes from other items.\n * * `inheritTypesFrom` &ndash; A string or an array of strings. Inherits `is*` properties of other items.\n * * `inheritAllFrom` &ndash; A string. A shorthand for `allowContentOf`, `allowWhere`, `allowAttributesOf`, `inheritTypesFrom`.\n * * Additionally, you can define the following `is*` properties: `isBlock`, `isLimit`, `isObject`. Read about them below.\n *\n * # The is* properties\n *\n * There are 3 commonly used `is*` properties. Their role is to assign additional semantics to schema items.\n * You can define more properties but you will also need to implement support for them in the existing editor features.\n *\n * * `isBlock` &ndash; Whether this item is paragraph-like. Generally speaking, content is usually made out of blocks\n * like paragraphs, list items, images, headings, etc. All these elements are marked as blocks. A block\n * should not allow another block inside. Note: There is also the `$block` generic item which has `isBlock` set to `true`.\n * Most block type items will inherit from `$block` (through `inheritAllFrom`).\n * * `isLimit` &ndash; It can be understood as whether this element should not be split by <kbd>Enter</kbd>.\n * Examples of limit elements: `$root`, table cell, image caption, etc. In other words, all actions that happen inside\n * a limit element are limited to its content. **Note:** All objects (`isObject`) are treated as limit elements, too.\n * * `isObject` &ndash; Whether an item is \"self-contained\" and should be treated as a whole. Examples of object elements:\n * `image`, `table`, `video`, etc. **Note:** An object is also a limit, so\n * {@link module:engine/model/schema~Schema#isLimit `isLimit()`}\n * returns `true` for object elements automatically.\n *\n * # Generic items\n *\n * There are three basic generic items: `$root`, `$block` and `$text`.\n * They are defined as follows:\n *\n *\t\tthis.schema.register( '$root', {\n *\t\t\tisLimit: true\n *\t\t} );\n *\t\tthis.schema.register( '$block', {\n *\t\t\tallowIn: '$root',\n *\t\t\tisBlock: true\n *\t\t} );\n *\t\tthis.schema.register( '$text', {\n *\t\t\tallowIn: '$block'\n *\t\t} );\n *\n * They reflect typical editor content that is contained within one root, consists of several blocks\n * (paragraphs, lists items, headings, images) which, in turn, may contain text inside.\n *\n * By inheriting from the generic items you can define new items which will get extended by other editor features.\n * Read more about generic types in the {@linkTODO Defining schema} guide.\n *\n * # Example definitions\n *\n * Allow `paragraph` in roots and block quotes:\n *\n *\t\tschema.register( 'paragraph', {\n *\t\t\tallowIn: [ '$root', 'blockQuote' ],\n *\t\t\tisBlock: true\n *\t\t} );\n *\n * Allow `paragraph` everywhere where `$block` is allowed (i.e. in `$root`):\n *\n *\t\tschema.register( 'paragraph', {\n *\t\t\tallowWhere: '$block',\n *\t\t\tisBlock: true\n *\t\t} );\n *\n * Make `image` a block object, which is allowed everywhere where `$block` is.\n * Also, allow `src` and `alt` attributes in it:\n *\n *\t\tschema.register( 'image', {\n *\t\t\tallowWhere: '$block',\n *\t\t\tallowAttributes: [ 'src', 'alt' ],\n *\t\t\tisBlock: true,\n *\t\t\tisObject: true\n *\t\t} );\n *\n * Make `caption` allowed in `image` and make it allow all the content of `$block`s (usually, `$text`).\n * Also, mark it as a limit element so it cannot be split:\n *\n *\t\tschema.register( 'caption', {\n *\t\t\tallowIn: 'image',\n *\t\t\tallowContentOf: '$block',\n *\t\t\tisLimit: true\n *\t\t} );\n *\n * Make `listItem` inherit all from `$block` but also allow additional attributes:\n *\n *\t\tschema.register( 'listItem', {\n *\t\t\tinheritAllFrom: '$block',\n *\t\t\tallowAttributes: [ 'listType', 'listIndent' ]\n *\t\t} );\n *\n * Which translates to:\n *\n *\t\tschema.register( 'listItem', {\n *\t\t\tallowWhere: '$block',\n *\t\t\tallowContentOf: '$block',\n *\t\t\tallowAttributesOf: '$block',\n *\t\t\tinheritTypesFrom: '$block',\n *\t\t\tallowAttributes: [ 'listType', 'listIndent' ]\n *\t\t} );\n *\n * # Tips\n *\n * * Check schema definitions of existing features to see how they are defined.\n * * If you want to publish your feature so other developers can use it, try to use\n * generic items as much as possible.\n * * Keep your model clean. Limit it to the actual data and store information in a normalized way.\n * * Remember about definining the `is*` properties. They do not affect the allowed structures, but they can\n * affect how the editor features treat your elements.\n *\n * @typedef {Object} module:engine/model/schema~SchemaItemDefinition\n */\n\n/**\n * A simplified version of {@link module:engine/model/schema~SchemaItemDefinition} after\n * compilation by the {@link module:engine/model/schema~Schema schema}.\n * Rules fed to the schema by {@link module:engine/model/schema~Schema#register}\n * and {@link module:engine/model/schema~Schema#extend} methods are defined in the\n * {@link module:engine/model/schema~SchemaItemDefinition} format.\n * Later on, they are compiled to `SchemaCompiledItemDefition` so when you use e.g.\n * the {@link module:engine/model/schema~Schema#getDefinition} method you get the compiled version.\n *\n * The compiled version contains only the following properties:\n *\n * * The `name` property,\n * * The `is*` properties,\n * * The `allowIn` array,\n * * The `allowAttributes` array.\n *\n * @typedef {Object} module:engine/model/schema~SchemaCompiledItemDefinition\n */\n\n/**\n * A schema context &mdash; a list of ancestors of a given position in the document.\n *\n * Considering such position:\n *\n *\t\t<$root>\n *\t\t\t<blockQuote>\n *\t\t\t\t<paragraph>\n *\t\t\t\t\t^\n *\t\t\t\t</paragraph>\n *\t\t\t</blockQuote>\n *\t\t</$root>\n *\n * The context of this position is its {@link module:engine/model/position~Position#getAncestors lists of ancestors}:\n *\n *\t\t[ rootElement, blockQuoteElement, paragraphElement ]\n *\n * Contexts are used in the {@link module:engine/model/schema~Schema#event:checkChild `Schema#checkChild`} and\n * {@link module:engine/model/schema~Schema#event:checkAttribute `Schema#checkAttribute`} events as a definition\n * of a place in the document where the check occurs. The context instances are created based on the first arguments\n * of the {@link module:engine/model/schema~Schema#checkChild `Schema#checkChild()`} and\n * {@link module:engine/model/schema~Schema#checkAttribute `Schema#checkAttribute()`} methods so when\n * using these methods you need to use {@link module:engine/model/schema~SchemaContextDefinition}s.\n */\n\nexport var SchemaContext =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of the context.\n   *\n   * @param {module:engine/model/schema~SchemaContextDefinition} context\n   */\n  function SchemaContext(context) {\n    _classCallCheck(this, SchemaContext);\n\n    if (context instanceof SchemaContext) {\n      return context;\n    }\n\n    if (typeof context == 'string') {\n      context = [context];\n    } else if (!Array.isArray(context)) {\n      // `context` is item or position.\n      // Position#getAncestors() doesn't accept any parameters but it works just fine here.\n      context = context.getAncestors({\n        includeSelf: true\n      });\n    }\n\n    if (context[0] && typeof context[0] != 'string' && context[0].is('documentFragment')) {\n      context.shift();\n    }\n\n    this._items = context.map(mapContextItem);\n  }\n  /**\n   * The number of items.\n   *\n   * @type {Number}\n   */\n\n\n  _createClass(SchemaContext, [{\n    key: Symbol.iterator,\n\n    /**\n     * Iterable interface.\n     *\n     * Iterates over all context items.\n     *\n     * @returns {Iterable.<module:engine/model/schema~SchemaContextItem>}\n     */\n    value: function value() {\n      return this._items[Symbol.iterator]();\n    }\n    /**\n     * Returns a new schema context instance with an additional item.\n     *\n     * Item can be added as:\n     *\n     * \t\tconst context = new SchemaContext( [ '$root' ] );\n     *\n     * \t\t// An element.\n     * \t\tconst fooElement = writer.createElement( 'fooElement' );\n     * \t\tconst newContext = context.push( fooElement ); // [ '$root', 'fooElement' ]\n     *\n     * \t\t// A text node.\n     * \t\tconst text = writer.createText( 'foobar' );\n     * \t\tconst newContext = context.push( text ); // [ '$root', '$text' ]\n     *\n     * \t\t// A string (element name).\n     * \t\tconst newContext = context.push( 'barElement' ); // [ '$root', 'barElement' ]\n     *\n     * **Note** {@link module:engine/model/node~Node} that is already in the model tree will be added as the only item\n     * (without ancestors).\n     *\n     * @param {String|module:engine/model/node~Node|Array<String|module:engine/model/node~Node>} item An item that will be added\n     * to the current context.\n     * @returns {module:engine/model/schema~SchemaContext} A new schema context instance with an additional item.\n     */\n\n  }, {\n    key: \"push\",\n    value: function push(item) {\n      var ctx = new SchemaContext([item]);\n      ctx._items = [].concat(_toConsumableArray(this._items), _toConsumableArray(ctx._items));\n      return ctx;\n    }\n    /**\n     * Gets an item on the given index.\n     *\n     * @returns {module:engine/model/schema~SchemaContextItem}\n     */\n\n  }, {\n    key: \"getItem\",\n    value: function getItem(index) {\n      return this._items[index];\n    }\n    /**\n     * Returns the names of items.\n     *\n     * @returns {Iterable.<String>}\n     */\n\n  }, {\n    key: \"getNames\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function getNames() {\n      return regeneratorRuntime.wrap(function getNames$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              return _context3.delegateYield(this._items.map(function (item) {\n                return item.name;\n              }), \"t0\", 1);\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, getNames, this);\n    })\n    /**\n     * Checks whether the context ends with the given nodes.\n     *\n     *\t\tconst ctx = new SchemaContext( [ rootElement, paragraphElement, textNode ] );\n     *\n     *\t\tctx.endsWith( '$text' ); // -> true\n     *\t\tctx.endsWith( 'paragraph $text' ); // -> true\n     *\t\tctx.endsWith( '$root' ); // -> false\n     *\t\tctx.endsWith( 'paragraph' ); // -> false\n     *\n     * @param {String} query\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"endsWith\",\n    value: function endsWith(query) {\n      return Array.from(this.getNames()).join(' ').endsWith(query);\n    }\n  }, {\n    key: \"length\",\n    get: function get() {\n      return this._items.length;\n    }\n    /**\n     * The last item (the lowest node).\n     *\n     * @type {module:engine/model/schema~SchemaContextItem}\n     */\n\n  }, {\n    key: \"last\",\n    get: function get() {\n      return this._items[this._items.length - 1];\n    }\n  }]);\n\n  return SchemaContext;\n}();\n/**\n * The definition of a {@link module:engine/model/schema~SchemaContext schema context}.\n *\n * Contexts can be created in multiple ways:\n *\n * * By defining a **node** – in this cases this node and all its ancestors will be used.\n * * By defining a **position** in the document – in this case all its ancestors will be used.\n * * By defining an **array of nodes** – in this case this array defines the entire context.\n * * By defining a **name of node** - in this case node will be \"mocked\". It is not recommended because context\n * will be unrealistic (e.g. attributes of these nodes are not specified). However, at times this may be the only\n * way to define the context (e.g. when checking some hypothetical situation).\n * * By defining an **array of node names** (potentially, mixed with real nodes) – The same as **name of node**\n * but it is possible to create a path.\n * * By defining a {@link module:engine/model/schema~SchemaContext} instance - in this case the same instance as provided\n * will be return.\n *\n * Examples of context definitions passed to the {@link module:engine/model/schema~Schema#checkChild `Schema#checkChild()`}\n * method:\n *\n *\t\t// Assuming that we have a $root > blockQuote > paragraph structure, the following code\n *\t\t// will check node 'foo' in the following context:\n *\t\t// [ rootElement, blockQuoteElement, paragraphElement ]\n *\t\tconst contextDefinition = paragraphElement;\n * \t\tconst childToCheck = 'foo';\n *\t\tschema.checkChild( contextDefinition, childToCheck );\n *\n *\t\t// Also check in [ rootElement, blockQuoteElement, paragraphElement ].\n *\t\tschema.checkChild( model.createPositionAt( paragraphElement, 0 ), 'foo' );\n *\n *\t\t// Check in [ rootElement, paragraphElement ].\n *\t\tschema.checkChild( [ rootElement, paragraphElement ], 'foo' );\n *\n *\t\t// Check only fakeParagraphElement.\n *\t\tschema.checkChild( 'paragraph', 'foo' );\n *\n *\t\t// Check in [ fakeRootElement, fakeBarElement, paragraphElement ].\n *\t\tschema.checkChild( [ '$root', 'bar', paragraphElement ], 'foo' );\n *\n * All these `checkChild()` calls will fire {@link module:engine/model/schema~Schema#event:checkChild `Schema#checkChild`}\n * events in which `args[ 0 ]` is an instance of the context. Therefore, you can write a listener like this:\n *\n *\t\tschema.on( 'checkChild', ( evt, args ) => {\n *\t\t\tconst ctx = args[ 0 ];\n *\n *\t\t\tconsole.log( Array.from( ctx.getNames() ) );\n *\t\t} );\n *\n * Which will log the following:\n *\n *\t\t[ '$root', 'blockQuote', 'paragraph' ]\n *\t\t[ '$root', 'paragraph' ]\n *\t\t[ '$root', 'bar', 'paragraph' ]\n *\n * Note: When using the {@link module:engine/model/schema~Schema#checkAttribute `Schema#checkAttribute()`} method\n * you may want to check whether a text node may have an attribute. A {@link module:engine/model/text~Text} is a\n * correct way to define a context so you can do this:\n *\n *\t\tschema.checkAttribute( textNode, 'bold' );\n *\n * But sometimes you want to check whether a text at a given position might've had some attribute,\n * in which case you can create a context by mising an array of elements with a `'$text'` string:\n *\n *\t\t// Check in [ rootElement, paragraphElement, textNode ].\n *\t\tschema.checkChild( [ ...positionInParagraph.getAncestors(), '$text' ], 'bold' );\n *\n * @typedef {module:engine/model/node~Node|module:engine/model/position~Position|module:engine/model/schema~SchemaContext|\n * String|Array.<String|module:engine/model/node~Node>} module:engine/model/schema~SchemaContextDefinition\n */\n\n/**\n * An item of the {@link module:engine/model/schema~SchemaContext schema context}.\n *\n * It contains 3 properties:\n *\n * * `name` – the name of this item,\n * * `* getAttributeKeys()` – a generator of keys of item attributes,\n * * `getAttribute( keyName )` – a method to get attribute values.\n *\n * The context item interface is a highly simplified version of {@link module:engine/model/node~Node} and its role\n * is to expose only the information which schema checks are able to provide (which is the name of the node and\n * node's attributes).\n *\n *\t\tschema.on( 'checkChild', ( evt, args ) => {\n *\t\t\tconst ctx = args[ 0 ];\n *\t\t\tconst firstItem = ctx.getItem( 0 );\n *\n *\t\t\tconsole.log( firstItem.name ); // -> '$root'\n *\t\t\tconsole.log( firstItem.getAttribute( 'foo' ) ); // -> 'bar'\n *\t\t\tconsole.log( Array.from( firstItem.getAttributeKeys() ) ); // -> [ 'foo', 'faa' ]\n *\t\t} );\n *\n * @typedef {Object} module:engine/model/schema~SchemaContextItem\n */\n\nfunction compileBaseItemRule(sourceItemRules, itemName) {\n  var itemRule = {\n    name: itemName,\n    allowIn: [],\n    allowContentOf: [],\n    allowWhere: [],\n    allowAttributes: [],\n    allowAttributesOf: [],\n    inheritTypesFrom: []\n  };\n  copyTypes(sourceItemRules, itemRule);\n  copyProperty(sourceItemRules, itemRule, 'allowIn');\n  copyProperty(sourceItemRules, itemRule, 'allowContentOf');\n  copyProperty(sourceItemRules, itemRule, 'allowWhere');\n  copyProperty(sourceItemRules, itemRule, 'allowAttributes');\n  copyProperty(sourceItemRules, itemRule, 'allowAttributesOf');\n  copyProperty(sourceItemRules, itemRule, 'inheritTypesFrom');\n  makeInheritAllWork(sourceItemRules, itemRule);\n  return itemRule;\n}\n\nfunction compileAllowContentOf(compiledDefinitions, itemName) {\n  var _iteratorNormalCompletion9 = true;\n  var _didIteratorError9 = false;\n  var _iteratorError9 = undefined;\n\n  try {\n    for (var _iterator9 = compiledDefinitions[itemName].allowContentOf[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n      var allowContentOfItemName = _step9.value;\n\n      // The allowContentOf property may point to an unregistered element.\n      if (compiledDefinitions[allowContentOfItemName]) {\n        var allowedChildren = getAllowedChildren(compiledDefinitions, allowContentOfItemName);\n        allowedChildren.forEach(function (allowedItem) {\n          allowedItem.allowIn.push(itemName);\n        });\n      }\n    }\n  } catch (err) {\n    _didIteratorError9 = true;\n    _iteratorError9 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion9 && _iterator9.return != null) {\n        _iterator9.return();\n      }\n    } finally {\n      if (_didIteratorError9) {\n        throw _iteratorError9;\n      }\n    }\n  }\n\n  delete compiledDefinitions[itemName].allowContentOf;\n}\n\nfunction compileAllowWhere(compiledDefinitions, itemName) {\n  var _iteratorNormalCompletion10 = true;\n  var _didIteratorError10 = false;\n  var _iteratorError10 = undefined;\n\n  try {\n    for (var _iterator10 = compiledDefinitions[itemName].allowWhere[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n      var allowWhereItemName = _step10.value;\n      var inheritFrom = compiledDefinitions[allowWhereItemName]; // The allowWhere property may point to an unregistered element.\n\n      if (inheritFrom) {\n        var _compiledDefinitions$;\n\n        var allowedIn = inheritFrom.allowIn;\n\n        (_compiledDefinitions$ = compiledDefinitions[itemName].allowIn).push.apply(_compiledDefinitions$, _toConsumableArray(allowedIn));\n      }\n    }\n  } catch (err) {\n    _didIteratorError10 = true;\n    _iteratorError10 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion10 && _iterator10.return != null) {\n        _iterator10.return();\n      }\n    } finally {\n      if (_didIteratorError10) {\n        throw _iteratorError10;\n      }\n    }\n  }\n\n  delete compiledDefinitions[itemName].allowWhere;\n}\n\nfunction compileAllowAttributesOf(compiledDefinitions, itemName) {\n  var _iteratorNormalCompletion11 = true;\n  var _didIteratorError11 = false;\n  var _iteratorError11 = undefined;\n\n  try {\n    for (var _iterator11 = compiledDefinitions[itemName].allowAttributesOf[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n      var allowAttributeOfItem = _step11.value;\n      var inheritFrom = compiledDefinitions[allowAttributeOfItem];\n\n      if (inheritFrom) {\n        var _compiledDefinitions$2;\n\n        var inheritAttributes = inheritFrom.allowAttributes;\n\n        (_compiledDefinitions$2 = compiledDefinitions[itemName].allowAttributes).push.apply(_compiledDefinitions$2, _toConsumableArray(inheritAttributes));\n      }\n    }\n  } catch (err) {\n    _didIteratorError11 = true;\n    _iteratorError11 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion11 && _iterator11.return != null) {\n        _iterator11.return();\n      }\n    } finally {\n      if (_didIteratorError11) {\n        throw _iteratorError11;\n      }\n    }\n  }\n\n  delete compiledDefinitions[itemName].allowAttributesOf;\n}\n\nfunction compileInheritPropertiesFrom(compiledDefinitions, itemName) {\n  var item = compiledDefinitions[itemName];\n  var _iteratorNormalCompletion12 = true;\n  var _didIteratorError12 = false;\n  var _iteratorError12 = undefined;\n\n  try {\n    for (var _iterator12 = item.inheritTypesFrom[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n      var inheritPropertiesOfItem = _step12.value;\n      var inheritFrom = compiledDefinitions[inheritPropertiesOfItem];\n\n      if (inheritFrom) {\n        var typeNames = Object.keys(inheritFrom).filter(function (name) {\n          return name.startsWith('is');\n        });\n        var _iteratorNormalCompletion13 = true;\n        var _didIteratorError13 = false;\n        var _iteratorError13 = undefined;\n\n        try {\n          for (var _iterator13 = typeNames[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n            var name = _step13.value;\n\n            if (!(name in item)) {\n              item[name] = inheritFrom[name];\n            }\n          }\n        } catch (err) {\n          _didIteratorError13 = true;\n          _iteratorError13 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion13 && _iterator13.return != null) {\n              _iterator13.return();\n            }\n          } finally {\n            if (_didIteratorError13) {\n              throw _iteratorError13;\n            }\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError12 = true;\n    _iteratorError12 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion12 && _iterator12.return != null) {\n        _iterator12.return();\n      }\n    } finally {\n      if (_didIteratorError12) {\n        throw _iteratorError12;\n      }\n    }\n  }\n\n  delete item.inheritTypesFrom;\n} // Remove items which weren't registered (because it may break some checks or we'd need to complicate them).\n// Make sure allowIn doesn't contain repeated values.\n\n\nfunction cleanUpAllowIn(compiledDefinitions, itemName) {\n  var itemRule = compiledDefinitions[itemName];\n  var existingItems = itemRule.allowIn.filter(function (itemToCheck) {\n    return compiledDefinitions[itemToCheck];\n  });\n  itemRule.allowIn = Array.from(new Set(existingItems));\n}\n\nfunction cleanUpAllowAttributes(compiledDefinitions, itemName) {\n  var itemRule = compiledDefinitions[itemName];\n  itemRule.allowAttributes = Array.from(new Set(itemRule.allowAttributes));\n}\n\nfunction copyTypes(sourceItemRules, itemRule) {\n  var _iteratorNormalCompletion14 = true;\n  var _didIteratorError14 = false;\n  var _iteratorError14 = undefined;\n\n  try {\n    for (var _iterator14 = sourceItemRules[Symbol.iterator](), _step14; !(_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done); _iteratorNormalCompletion14 = true) {\n      var sourceItemRule = _step14.value;\n      var typeNames = Object.keys(sourceItemRule).filter(function (name) {\n        return name.startsWith('is');\n      });\n      var _iteratorNormalCompletion15 = true;\n      var _didIteratorError15 = false;\n      var _iteratorError15 = undefined;\n\n      try {\n        for (var _iterator15 = typeNames[Symbol.iterator](), _step15; !(_iteratorNormalCompletion15 = (_step15 = _iterator15.next()).done); _iteratorNormalCompletion15 = true) {\n          var name = _step15.value;\n          itemRule[name] = sourceItemRule[name];\n        }\n      } catch (err) {\n        _didIteratorError15 = true;\n        _iteratorError15 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion15 && _iterator15.return != null) {\n            _iterator15.return();\n          }\n        } finally {\n          if (_didIteratorError15) {\n            throw _iteratorError15;\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError14 = true;\n    _iteratorError14 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion14 && _iterator14.return != null) {\n        _iterator14.return();\n      }\n    } finally {\n      if (_didIteratorError14) {\n        throw _iteratorError14;\n      }\n    }\n  }\n}\n\nfunction copyProperty(sourceItemRules, itemRule, propertyName) {\n  var _iteratorNormalCompletion16 = true;\n  var _didIteratorError16 = false;\n  var _iteratorError16 = undefined;\n\n  try {\n    for (var _iterator16 = sourceItemRules[Symbol.iterator](), _step16; !(_iteratorNormalCompletion16 = (_step16 = _iterator16.next()).done); _iteratorNormalCompletion16 = true) {\n      var sourceItemRule = _step16.value;\n\n      if (typeof sourceItemRule[propertyName] == 'string') {\n        itemRule[propertyName].push(sourceItemRule[propertyName]);\n      } else if (Array.isArray(sourceItemRule[propertyName])) {\n        var _itemRule$propertyNam;\n\n        (_itemRule$propertyNam = itemRule[propertyName]).push.apply(_itemRule$propertyNam, _toConsumableArray(sourceItemRule[propertyName]));\n      }\n    }\n  } catch (err) {\n    _didIteratorError16 = true;\n    _iteratorError16 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion16 && _iterator16.return != null) {\n        _iterator16.return();\n      }\n    } finally {\n      if (_didIteratorError16) {\n        throw _iteratorError16;\n      }\n    }\n  }\n}\n\nfunction makeInheritAllWork(sourceItemRules, itemRule) {\n  var _iteratorNormalCompletion17 = true;\n  var _didIteratorError17 = false;\n  var _iteratorError17 = undefined;\n\n  try {\n    for (var _iterator17 = sourceItemRules[Symbol.iterator](), _step17; !(_iteratorNormalCompletion17 = (_step17 = _iterator17.next()).done); _iteratorNormalCompletion17 = true) {\n      var sourceItemRule = _step17.value;\n      var inheritFrom = sourceItemRule.inheritAllFrom;\n\n      if (inheritFrom) {\n        itemRule.allowContentOf.push(inheritFrom);\n        itemRule.allowWhere.push(inheritFrom);\n        itemRule.allowAttributesOf.push(inheritFrom);\n        itemRule.inheritTypesFrom.push(inheritFrom);\n      }\n    }\n  } catch (err) {\n    _didIteratorError17 = true;\n    _iteratorError17 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion17 && _iterator17.return != null) {\n        _iterator17.return();\n      }\n    } finally {\n      if (_didIteratorError17) {\n        throw _iteratorError17;\n      }\n    }\n  }\n}\n\nfunction getAllowedChildren(compiledDefinitions, itemName) {\n  var itemRule = compiledDefinitions[itemName];\n  return getValues(compiledDefinitions).filter(function (def) {\n    return def.allowIn.includes(itemRule.name);\n  });\n}\n\nfunction getValues(obj) {\n  return Object.keys(obj).map(function (key) {\n    return obj[key];\n  });\n}\n\nfunction mapContextItem(ctxItem) {\n  if (typeof ctxItem == 'string') {\n    return {\n      name: ctxItem,\n      getAttributeKeys:\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function getAttributeKeys() {\n        return regeneratorRuntime.wrap(function getAttributeKeys$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, getAttributeKeys, this);\n      }),\n      getAttribute: function getAttribute() {}\n    };\n  } else {\n    return {\n      // '$text' means text nodes and text proxies.\n      name: ctxItem.is('element') ? ctxItem.name : '$text',\n      getAttributeKeys:\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function getAttributeKeys() {\n        return regeneratorRuntime.wrap(function getAttributeKeys$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                return _context5.delegateYield(ctxItem.getAttributeKeys(), \"t0\", 1);\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, getAttributeKeys, this);\n      }),\n      getAttribute: function getAttribute(key) {\n        return ctxItem.getAttribute(key);\n      }\n    };\n  }\n} // Generator function returning values from provided walkers, switching between them at each iteration. If only one walker\n// is provided it will return data only from that walker.\n//\n// @param {module:engine/module/treewalker~TreeWalker} [backward] Walker iterating in backward direction.\n// @param {module:engine/module/treewalker~TreeWalker} [forward] Walker iterating in forward direction.\n// @returns {Iterable.<Object>} Object returned at each iteration contains `value` and `walker` (informing which walker returned\n// given value) fields.\n\n\nfunction combineWalkers(backward, forward) {\n  var done, step, _step18;\n\n  return regeneratorRuntime.wrap(function combineWalkers$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          done = false;\n\n        case 1:\n          if (done) {\n            _context6.next = 17;\n            break;\n          }\n\n          done = true;\n\n          if (!backward) {\n            _context6.next = 9;\n            break;\n          }\n\n          step = backward.next();\n\n          if (step.done) {\n            _context6.next = 9;\n            break;\n          }\n\n          done = false;\n          _context6.next = 9;\n          return {\n            walker: backward,\n            value: step.value\n          };\n\n        case 9:\n          if (!forward) {\n            _context6.next = 15;\n            break;\n          }\n\n          _step18 = forward.next();\n\n          if (_step18.done) {\n            _context6.next = 15;\n            break;\n          }\n\n          done = false;\n          _context6.next = 15;\n          return {\n            walker: forward,\n            value: _step18.value\n          };\n\n        case 15:\n          _context6.next = 1;\n          break;\n\n        case 17:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked, this);\n} // Takes an array of non-intersecting ranges. For each of them gets minimal flat ranges covering that range and returns\n// all those minimal flat ranges.\n//\n// @param {Array.<module:engine/model/range~Range>} ranges Ranges to process.\n// @returns {Iterator.<module:engine/model/range~Range>} Minimal flat ranges of given `ranges`.\n\n\nfunction convertToMinimalFlatRanges(ranges) {\n  var _iteratorNormalCompletion18, _didIteratorError18, _iteratorError18, _iterator18, _step19, range;\n\n  return regeneratorRuntime.wrap(function convertToMinimalFlatRanges$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _iteratorNormalCompletion18 = true;\n          _didIteratorError18 = false;\n          _iteratorError18 = undefined;\n          _context7.prev = 3;\n          _iterator18 = ranges[Symbol.iterator]();\n\n        case 5:\n          if (_iteratorNormalCompletion18 = (_step19 = _iterator18.next()).done) {\n            _context7.next = 11;\n            break;\n          }\n\n          range = _step19.value;\n          return _context7.delegateYield(range.getMinimalFlatRanges(), \"t0\", 8);\n\n        case 8:\n          _iteratorNormalCompletion18 = true;\n          _context7.next = 5;\n          break;\n\n        case 11:\n          _context7.next = 17;\n          break;\n\n        case 13:\n          _context7.prev = 13;\n          _context7.t1 = _context7[\"catch\"](3);\n          _didIteratorError18 = true;\n          _iteratorError18 = _context7.t1;\n\n        case 17:\n          _context7.prev = 17;\n          _context7.prev = 18;\n\n          if (!_iteratorNormalCompletion18 && _iterator18.return != null) {\n            _iterator18.return();\n          }\n\n        case 20:\n          _context7.prev = 20;\n\n          if (!_didIteratorError18) {\n            _context7.next = 23;\n            break;\n          }\n\n          throw _iteratorError18;\n\n        case 23:\n          return _context7.finish(20);\n\n        case 24:\n          return _context7.finish(17);\n\n        case 25:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked2, this, [[3, 13, 17, 25], [18,, 20, 24]]);\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/conversion/upcastdispatcher\n */\nimport ViewConsumable from './viewconsumable';\nimport ModelRange from '../model/range';\nimport ModelPosition from '../model/position';\nimport { SchemaContext } from '../model/schema';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n/**\n * `UpcastDispatcher` is a central point of {@link module:engine/view/view view} conversion, which is a process of\n * converting given {@link module:engine/view/documentfragment~DocumentFragment view document fragment} or\n * {@link module:engine/view/element~Element} into another structure.\n * In default application, {@link module:engine/view/view view} is converted to {@link module:engine/model/model}.\n *\n * During conversion process, for all {@link module:engine/view/node~Node view nodes} from the converted view document fragment,\n * `UpcastDispatcher` fires corresponding events. Special callbacks called \"converters\" should listen to\n * `UpcastDispatcher` for those events.\n *\n * Each callback, as the second argument, is passed a special object `data` that has `viewItem`, `modelCursor` and\n * `modelRange` properties. `viewItem` property contains {@link module:engine/view/node~Node view node} or\n * {@link module:engine/view/documentfragment~DocumentFragment view document fragment}\n * that is converted at the moment and might be handled by the callback. `modelRange` property should be used to save the result\n * of conversion and is always a {@link module:engine/model/range~Range} when conversion result is correct.\n * `modelCursor` property is a {@link module:engine/model/position~Position position} on which conversion result will be inserted\n * and is a context according to {@link module:engine/model/schema~Schema schema} will be checked before the conversion.\n * See also {@link ~UpcastDispatcher#convert}. It is also shared by reference by all callbacks listening to given event.\n *\n * The third parameter passed to a callback is an instance of {@link ~UpcastDispatcher}\n * which provides additional tools for converters.\n *\n * Examples of providing callbacks for `UpcastDispatcher`:\n *\n *\t\t// Converter for links (<a>).\n *\t\tupcastDispatcher.on( 'element:a', ( evt, data, conversionApi ) => {\n *\t\t\tif ( conversionApi.consumable.consume( data.viewItem, { name: true, attributes: [ 'href' ] } ) ) {\n *\t\t\t\t// <a> element is inline and is represented by an attribute in the model.\n *\t\t\t\t// This is why we need to convert only children.\n *\t\t\t\tconst { modelRange } = conversionApi.convertChildren( data.viewItem, data.modelCursor );\n *\n *\t\t\t\tfor ( let item of modelRange.getItems() ) {\n *\t\t\t\t\tif ( conversionApi.schema.checkAttribute( item, 'linkHref' ) ) {\n *\t\t\t\t\t\tconversionApi.writer.setAttribute( 'linkHref', data.viewItem.getAttribute( 'href' ), item );\n *\t\t\t\t\t}\n *\t\t\t\t}\n *\t\t\t}\n *\t\t} );\n *\n *\t\t// Convert all elements which have no custom converter into paragraph (autoparagraphing).\n *  \tdata.viewToModel.on( 'element', ( evt, data, conversionApi ) => {\n *  \t \t// When element is already consumed by higher priority converters then do nothing.\n *  \t \tif ( conversionApi.consumable.test( data.viewItem, { name: data.viewItem.name } ) ) {\n *  \t \t\t\tconst paragraph = conversionApi.writer.createElement( 'paragraph' );\n *\n *  \t \t\t\t// Find allowed parent for paragraph that we are going to insert. If current parent does not allow\n *  \t \t\t\t// to insert paragraph but one of the ancestors does then split nodes to allowed parent.\n *  \t \t\t\tconst splitResult = conversionApi.splitToAllowedParent( paragraph, data.modelCursor );\n *\n *  \t \t\t\t// When there is no split result it means that we can't insert paragraph in this position.\n *  \t \t\t\tif ( splitResult ) {\n *  \t \t\t\t\t// Insert paragraph in allowed position.\n *  \t \t\t\t\tconversionApi.writer.insert( paragraph, splitResult.position );\n *\n *  \t \t\t\t\t// Convert children to paragraph.\n *  \t \t\t\t\tconst { modelRange } = conversionApi.convertChildren(\n *  \t \t\t\t\t\tdata.viewItem,\n *  \t \t\t\t\t\tconversionApi.writer.createPositionAt( paragraph, 0 )\n *  \t \t\t\t\t);\n *\n * \t\t\t\t\t\t// Set as conversion result, attribute converters may use this property.\n *  \t \t\t\t\tdata.modelRange = conversionApi.writer.createRange(\n *  \t \t\t\t\t\tconversionApi.writer.createPositionBefore( paragraph ),\n *  \t \t\t\t\t\tmodelRange.end\n *  \t \t\t\t\t);\n *\n *  \t \t\t\t\t// Continue conversion inside paragraph.\n *  \t \t\t\t\tdata.modelCursor = data.modelRange.end;\n *  \t \t\t\t}\n *  \t \t\t}\n *  \t \t}\n *  \t }, { priority: 'low' } );\n *\n * Before each conversion process, `UpcastDispatcher` fires {@link ~UpcastDispatcher#event:viewCleanup}\n * event which can be used to prepare tree view for conversion.\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n * @fires viewCleanup\n * @fires element\n * @fires text\n * @fires documentFragment\n */\n\nvar UpcastDispatcher =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a `UpcastDispatcher` that operates using passed API.\n   *\n   * @see module:engine/conversion/upcastdispatcher~ViewConversionApi\n   * @param {Object} [conversionApi] Additional properties for interface that will be passed to events fired\n   * by `UpcastDispatcher`.\n   */\n  function UpcastDispatcher() {\n    var conversionApi = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, UpcastDispatcher);\n\n    /**\n     * List of elements that will be checked after conversion process and if element in the list will be empty it\n     * will be removed from conversion result.\n     *\n     * After conversion process list is cleared.\n     *\n     * @protected\n     * @type {Set<module:engine/model/element~Element>}\n     */\n    this._removeIfEmpty = new Set();\n    /**\n     * Position in the temporary structure where the converted content is inserted. The structure reflect the context of\n     * the target position where the content will be inserted. This property is build based on the context parameter of the\n     * convert method.\n     *\n     * @private\n     * @type {module:engine/model/position~Position|null}\n     */\n\n    this._modelCursor = null;\n    /**\n     * Interface passed by dispatcher to the events callbacks.\n     *\n     * @member {module:engine/conversion/upcastdispatcher~ViewConversionApi}\n     */\n\n    this.conversionApi = Object.assign({}, conversionApi); // `convertItem`, `convertChildren` and `splitToAllowedParent` are bound to this `UpcastDispatcher`\n    // instance and set on `conversionApi`. This way only a part of `UpcastDispatcher` API is exposed.\n\n    this.conversionApi.convertItem = this._convertItem.bind(this);\n    this.conversionApi.convertChildren = this._convertChildren.bind(this);\n    this.conversionApi.splitToAllowedParent = this._splitToAllowedParent.bind(this);\n  }\n  /**\n   * Starts the conversion process. The entry point for the conversion.\n   *\n   * @fires element\n   * @fires text\n   * @fires documentFragment\n   * @param {module:engine/view/documentfragment~DocumentFragment|module:engine/view/element~Element} viewItem\n   * Part of the view to be converted.\n   * @param {module:engine/model/writer~Writer} writer Instance of model writer.\n   * @param {module:engine/model/schema~SchemaContextDefinition} [context=['$root']] Elements will be converted according to this context.\n   * @returns {module:engine/model/documentfragment~DocumentFragment} Model data that is a result of the conversion process\n   * wrapped in `DocumentFragment`. Converted marker elements will be set as that document fragment's\n   * {@link module:engine/model/documentfragment~DocumentFragment#markers static markers map}.\n   */\n\n\n  _createClass(UpcastDispatcher, [{\n    key: \"convert\",\n    value: function convert(viewItem, writer) {\n      var context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ['$root'];\n      this.fire('viewCleanup', viewItem); // Create context tree and set position in the top element.\n      // Items will be converted according to this position.\n\n      this._modelCursor = createContextTree(context, writer); // Store writer in conversion as a conversion API\n      // to be sure that conversion process will use the same batch.\n\n      this.conversionApi.writer = writer; // Create consumable values list for conversion process.\n\n      this.conversionApi.consumable = ViewConsumable.createFrom(viewItem); // Custom data stored by converter for conversion process.\n\n      this.conversionApi.store = {}; // Do the conversion.\n\n      var _this$_convertItem = this._convertItem(viewItem, this._modelCursor),\n          modelRange = _this$_convertItem.modelRange; // Conversion result is always a document fragment so let's create this fragment.\n\n\n      var documentFragment = writer.createDocumentFragment(); // When there is a conversion result.\n\n      if (modelRange) {\n        // Remove all empty elements that was added to #_removeIfEmpty list.\n        this._removeEmptyElements(); // Move all items that was converted to context tree to document fragment.\n\n\n        var _arr = Array.from(this._modelCursor.parent.getChildren());\n\n        for (var _i = 0; _i < _arr.length; _i++) {\n          var item = _arr[_i];\n          writer.append(item, documentFragment);\n        } // Extract temporary markers elements from model and set as static markers collection.\n\n\n        documentFragment.markers = extractMarkersFromModelFragment(documentFragment, writer);\n      } // Clear context position.\n\n\n      this._modelCursor = null; // Clear split elements.\n\n      this._removeIfEmpty.clear(); // Clear conversion API.\n\n\n      this.conversionApi.writer = null;\n      this.conversionApi.store = null; // Return fragment as conversion result.\n\n      return documentFragment;\n    }\n    /**\n     * @private\n     * @see module:engine/conversion/upcastdispatcher~ViewConversionApi#convertItem\n     */\n\n  }, {\n    key: \"_convertItem\",\n    value: function _convertItem(viewItem, modelCursor) {\n      var data = Object.assign({\n        viewItem: viewItem,\n        modelCursor: modelCursor,\n        modelRange: null\n      });\n\n      if (viewItem.is('element')) {\n        this.fire('element:' + viewItem.name, data, this.conversionApi);\n      } else if (viewItem.is('text')) {\n        this.fire('text', data, this.conversionApi);\n      } else {\n        this.fire('documentFragment', data, this.conversionApi);\n      } // Handle incorrect conversion result.\n\n\n      if (data.modelRange && !(data.modelRange instanceof ModelRange)) {\n        /**\n         * Incorrect conversion result was dropped.\n         *\n         * {@link module:engine/model/range~Range Model range} should be a conversion result.\n         *\n         * @error view-conversion-dispatcher-incorrect-result\n         */\n        throw new CKEditorError('view-conversion-dispatcher-incorrect-result: Incorrect conversion result was dropped.');\n      }\n\n      return {\n        modelRange: data.modelRange,\n        modelCursor: data.modelCursor\n      };\n    }\n    /**\n     * @private\n     * @see module:engine/conversion/upcastdispatcher~ViewConversionApi#convertChildren\n     */\n\n  }, {\n    key: \"_convertChildren\",\n    value: function _convertChildren(viewItem, modelCursor) {\n      var modelRange = new ModelRange(modelCursor);\n      var nextModelCursor = modelCursor;\n\n      var _arr2 = Array.from(viewItem.getChildren());\n\n      for (var _i2 = 0; _i2 < _arr2.length; _i2++) {\n        var viewChild = _arr2[_i2];\n\n        var result = this._convertItem(viewChild, nextModelCursor);\n\n        if (result.modelRange instanceof ModelRange) {\n          modelRange.end = result.modelRange.end;\n          nextModelCursor = result.modelCursor;\n        }\n      }\n\n      return {\n        modelRange: modelRange,\n        modelCursor: nextModelCursor\n      };\n    }\n    /**\n     * @private\n     * @see module:engine/conversion/upcastdispatcher~ViewConversionApi#splitToAllowedParent\n     */\n\n  }, {\n    key: \"_splitToAllowedParent\",\n    value: function _splitToAllowedParent(node, modelCursor) {\n      // Try to find allowed parent.\n      var allowedParent = this.conversionApi.schema.findAllowedParent(node, modelCursor); // When there is no parent that allows to insert node then return `null`.\n\n      if (!allowedParent) {\n        return null;\n      } // When current position parent allows to insert node then return this position.\n\n\n      if (allowedParent === modelCursor.parent) {\n        return {\n          position: modelCursor\n        };\n      } // When allowed parent is in context tree.\n\n\n      if (this._modelCursor.parent.getAncestors().includes(allowedParent)) {\n        return null;\n      } // Split element to allowed parent.\n\n\n      var splitResult = this.conversionApi.writer.split(modelCursor, allowedParent); // Remember all elements that are created as a result of split.\n      // This is important because at the end of conversion we want to remove all empty split elements.\n      //\n      // Loop through positions between elements in range (except split result position) and collect parents.\n      // <notSplit><split1><split2>[pos]</split2>[pos]</split1>[omit]<split1>[pos]<split2>[pos]</split2></split1></notSplit>\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = splitResult.range.getPositions()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var position = _step.value;\n\n          if (!position.isEqual(splitResult.position)) {\n            this._removeIfEmpty.add(position.parent);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return {\n        position: splitResult.position,\n        cursorParent: splitResult.range.end.parent\n      };\n    }\n    /**\n     * Checks if {@link #_removeIfEmpty} contains empty elements and remove them.\n     * We need to do it smart because there could be elements that are not empty because contains\n     * other empty elements and after removing its children they become available to remove.\n     * We need to continue iterating over split elements as long as any element will be removed.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_removeEmptyElements\",\n    value: function _removeEmptyElements() {\n      var removed = false;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this._removeIfEmpty[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var element = _step2.value;\n\n          if (element.isEmpty) {\n            this.conversionApi.writer.remove(element);\n\n            this._removeIfEmpty.delete(element);\n\n            removed = true;\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      if (removed) {\n        this._removeEmptyElements();\n      }\n    }\n    /**\n     * Fired before the first conversion event, at the beginning of upcast (view to model conversion) process.\n     *\n     * @event viewCleanup\n     * @param {module:engine/view/documentfragment~DocumentFragment|module:engine/view/element~Element}\n     * viewItem Part of the view to be converted.\n     */\n\n    /**\n     * Fired when {@link module:engine/view/element~Element} is converted.\n     *\n     * `element` is a namespace event for a class of events. Names of actually called events follow this pattern:\n     * `element:<elementName>` where `elementName` is the name of converted element. This way listeners may listen to\n     * all elements conversion or to conversion of specific elements.\n     *\n     * @event element\n     * @param {Object} data Conversion data. Keep in mind that this object is shared by reference between all\n     * callbacks that will be called. This means that callbacks can override values if needed, and those values will\n     * be available in other callbacks.\n     * @param {module:engine/view/item~Item} data.viewItem Converted item.\n     * @param {module:engine/model/position~Position} data.modelCursor Position where a converter should start changes.\n     * Change this value for the next converter to tell where the conversion should continue.\n     * @param {module:engine/model/range~Range} data.modelRange The current state of conversion result. Every change to\n     * converted element should be reflected by setting or modifying this property.\n     * @param {ViewConversionApi} conversionApi Conversion utilities to be used by callback.\n     */\n\n    /**\n     * Fired when {@link module:engine/view/text~Text} is converted.\n     *\n     * @event text\n     * @see #event:element\n     */\n\n    /**\n     * Fired when {@link module:engine/view/documentfragment~DocumentFragment} is converted.\n     *\n     * @event documentFragment\n     * @see #event:element\n     */\n\n  }]);\n\n  return UpcastDispatcher;\n}();\n\nexport { UpcastDispatcher as default };\nmix(UpcastDispatcher, EmitterMixin); // Traverses given model item and searches elements which marks marker range. Found element is removed from\n// DocumentFragment but path of this element is stored in a Map which is then returned.\n//\n// @param {module:engine/view/documentfragment~DocumentFragment|module:engine/view/node~Node} modelItem Fragment of model.\n// @returns {Map<String, module:engine/model/range~Range>} List of static markers.\n\nfunction extractMarkersFromModelFragment(modelItem, writer) {\n  var markerElements = new Set();\n  var markers = new Map(); // Create ModelTreeWalker.\n\n  var range = ModelRange._createIn(modelItem).getItems(); // Walk through DocumentFragment and collect marker elements.\n\n\n  var _iteratorNormalCompletion3 = true;\n  var _didIteratorError3 = false;\n  var _iteratorError3 = undefined;\n\n  try {\n    for (var _iterator3 = range[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n      var item = _step3.value;\n\n      // Check if current element is a marker.\n      if (item.name == '$marker') {\n        markerElements.add(item);\n      }\n    } // Walk through collected marker elements store its path and remove its from the DocumentFragment.\n\n  } catch (err) {\n    _didIteratorError3 = true;\n    _iteratorError3 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n        _iterator3.return();\n      }\n    } finally {\n      if (_didIteratorError3) {\n        throw _iteratorError3;\n      }\n    }\n  }\n\n  var _iteratorNormalCompletion4 = true;\n  var _didIteratorError4 = false;\n  var _iteratorError4 = undefined;\n\n  try {\n    for (var _iterator4 = markerElements[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n      var markerElement = _step4.value;\n      var markerName = markerElement.getAttribute('data-name');\n      var currentPosition = writer.createPositionBefore(markerElement); // When marker of given name is not stored it means that we have found the beginning of the range.\n\n      if (!markers.has(markerName)) {\n        markers.set(markerName, new ModelRange(currentPosition.clone())); // Otherwise is means that we have found end of the marker range.\n      } else {\n        markers.get(markerName).end = currentPosition.clone();\n      } // Remove marker element from DocumentFragment.\n\n\n      writer.remove(markerElement);\n    }\n  } catch (err) {\n    _didIteratorError4 = true;\n    _iteratorError4 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n        _iterator4.return();\n      }\n    } finally {\n      if (_didIteratorError4) {\n        throw _iteratorError4;\n      }\n    }\n  }\n\n  return markers;\n} // Creates model fragment according to given context and returns position in top element.\n\n\nfunction createContextTree(contextDefinition, writer) {\n  var position;\n  var _iteratorNormalCompletion5 = true;\n  var _didIteratorError5 = false;\n  var _iteratorError5 = undefined;\n\n  try {\n    for (var _iterator5 = new SchemaContext(contextDefinition)[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n      var item = _step5.value;\n      var attributes = {};\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = item.getAttributeKeys()[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var key = _step6.value;\n          attributes[key] = item.getAttribute(key);\n        }\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n            _iterator6.return();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n\n      var current = writer.createElement(item.name, attributes);\n\n      if (position) {\n        writer.append(current, position);\n      }\n\n      position = ModelPosition._createAt(current, 0);\n    }\n  } catch (err) {\n    _didIteratorError5 = true;\n    _iteratorError5 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n        _iterator5.return();\n      }\n    } finally {\n      if (_didIteratorError5) {\n        throw _iteratorError5;\n      }\n    }\n  }\n\n  return position;\n}\n/**\n * Conversion interface that is registered for given {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher}\n * and is passed as one of parameters when {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher dispatcher}\n * fires it's events.\n *\n * @interface ViewConversionApi\n */\n\n/**\n * Starts conversion of given item by firing an appropriate event.\n *\n * Every fired event is passed (as first parameter) an object with `modelRange` property. Every event may set and/or\n * modify that property. When all callbacks are done, the final value of `modelRange` property is returned by this method.\n * The `modelRange` must be {@link module:engine/model/range~Range model range} or `null` (as set by default).\n *\n * @method #convertItem\n * @fires module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:element\n * @fires module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:text\n * @fires module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:documentFragment\n * @param {module:engine/view/item~Item} viewItem Item to convert.\n * @param {module:engine/model/position~Position} modelCursor Position of conversion.\n * @returns {Object} result Conversion result.\n * @returns {module:engine/model/range~Range|null} result.modelRange Model range containing result of item conversion,\n * created and modified by callbacks attached to fired event, or `null` if the conversion result was incorrect.\n * @returns {module:engine/model/position~Position} result.modelCursor Position where conversion should be continued.\n */\n\n/**\n * Starts conversion of all children of given item by firing appropriate events for all those children.\n *\n * @method #convertChildren\n * @fires module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:element\n * @fires module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:text\n * @fires module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:documentFragment\n * @param {module:engine/view/item~Item} viewItem Item to convert.\n * @param {module:engine/model/position~Position} modelCursor Position of conversion.\n * @returns {Object} result Conversion result.\n * @returns {module:engine/model/range~Range} result.modelRange Model range containing results of conversion of all children of given item.\n * When no children was converted then range is collapsed.\n * @returns {module:engine/model/position~Position} result.modelCursor Position where conversion should be continued.\n */\n\n/**\n * Checks {@link module:engine/model/schema~Schema schema} to find allowed parent for element that we are going to insert\n * starting from given position. If current parent does not allow to insert element but one of the ancestors does then\n * split nodes to allowed parent.\n *\n * If schema allows to insert node in given position, nothing is split and object with that position is returned.\n *\n * If it was not possible to find allowed parent, `null` is returned, nothing is split.\n *\n * Otherwise, ancestors are split and object with position and the copy of the split element is returned.\n *\n * For instance, if `<image>` is not allowed in `<paragraph>` but is allowed in `$root`:\n *\n *\t\t<paragraph>foo[]bar</paragraph>\n *\n *  \t-> split for `<image>` ->\n *\n *  \t<paragraph>foo</paragraph>[]<paragraph>bar</paragraph>\n *\n * In the sample above position between `<paragraph>` elements will be returned as `position` and the second `paragraph`\n * as `cursorParent`.\n *\n * @method #splitToAllowedParent\n * @param {module:engine/model/position~Position} position Position on which element is going to be inserted.\n * @param {module:engine/model/node~Node} node Node to insert.\n * @returns {Object|null} Split result. If it was not possible to find allowed position `null` is returned.\n * @returns {module:engine/model/position~Position} position between split elements.\n * @returns {module:engine/model/element~Element} [cursorParent] Element inside which cursor should be placed to\n * continue conversion. When element is not defined it means that there was no split.\n */\n\n/**\n * Instance of {@link module:engine/conversion/viewconsumable~ViewConsumable}. It stores\n * information about what parts of processed view item are still waiting to be handled. After a piece of view item\n * was converted, appropriate consumable value should be {@link module:engine/conversion/viewconsumable~ViewConsumable#consume consumed}.\n *\n * @param {Object} #consumable\n */\n\n/**\n * Custom data stored by converters for conversion process. Custom properties of this object can be defined and use to\n * pass parameters between converters.\n *\n * The difference between this property and `data` parameter of\n * {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:element} is that `data` parameters allows you\n * to pass parameters within a single event and `store` within the whole conversion.\n *\n * @param {Object} #store\n */","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/controller/datacontroller\n */\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport Mapper from '../conversion/mapper';\nimport DowncastDispatcher from '../conversion/downcastdispatcher';\nimport { insertText } from '../conversion/downcast-converters';\nimport UpcastDispatcher from '../conversion/upcastdispatcher';\nimport { convertText, convertToModelFragment } from '../conversion/upcast-converters';\nimport ViewDocumentFragment from '../view/documentfragment';\nimport ViewDocument from '../view/document';\nimport ViewDowncastWriter from '../view/downcastwriter';\nimport ModelRange from '../model/range';\n/**\n * Controller for the data pipeline. The data pipeline controls how data is retrieved from the document\n * and set inside it. Hence, the controller features two methods which allow to {@link ~DataController#get get}\n * and {@link ~DataController#set set} data of the {@link ~DataController#model model}\n * using given:\n *\n * * {@link module:engine/dataprocessor/dataprocessor~DataProcessor data processor},\n * * downcast converters,\n * * upcast converters.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\n\nvar DataController =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a data controller instance.\n   *\n   * @param {module:engine/model/model~Model} model Data model.\n   * @param {module:engine/dataprocessor/dataprocessor~DataProcessor} [dataProcessor] Data processor that should be used\n   * by the controller.\n   */\n  function DataController(model, dataProcessor) {\n    _classCallCheck(this, DataController);\n\n    /**\n     * Data model.\n     *\n     * @readonly\n     * @member {module:engine/model/model~Model}\n     */\n    this.model = model;\n    /**\n     * Data processor used during the conversion.\n     *\n     * @readonly\n     * @member {module:engine/dataProcessor~DataProcessor}\n     */\n\n    this.processor = dataProcessor;\n    /**\n     * Mapper used for the conversion. It has no permanent bindings, because they are created when getting data and\n     * cleared directly after the data are converted. However, the mapper is defined as a class property, because\n     * it needs to be passed to the `DowncastDispatcher` as a conversion API.\n     *\n     * @readonly\n     * @member {module:engine/conversion/mapper~Mapper}\n     */\n\n    this.mapper = new Mapper();\n    /**\n     * Downcast dispatcher used by the {@link #get get method}. Downcast converters should be attached to it.\n     *\n     * @readonly\n     * @member {module:engine/conversion/downcastdispatcher~DowncastDispatcher}\n     */\n\n    this.downcastDispatcher = new DowncastDispatcher({\n      mapper: this.mapper\n    });\n    this.downcastDispatcher.on('insert:$text', insertText(), {\n      priority: 'lowest'\n    });\n    /**\n     * Upcast dispatcher used by the {@link #set set method}. Upcast converters should be attached to it.\n     *\n     * @readonly\n     * @member {module:engine/conversion/upcastdispatcher~UpcastDispatcher}\n     */\n\n    this.upcastDispatcher = new UpcastDispatcher({\n      schema: model.schema\n    }); // Define default converters for text and elements.\n    //\n    // Note that if there is no default converter for the element it will be skipped, for instance `<b>foo</b>` will be\n    // converted to nothing. We add `convertToModelFragment` as a last converter so it converts children of that\n    // element to the document fragment so `<b>foo</b>` will be converted to `foo` if there is no converter for `<b>`.\n\n    this.upcastDispatcher.on('text', convertText(), {\n      priority: 'lowest'\n    });\n    this.upcastDispatcher.on('element', convertToModelFragment(), {\n      priority: 'lowest'\n    });\n    this.upcastDispatcher.on('documentFragment', convertToModelFragment(), {\n      priority: 'lowest'\n    });\n    this.decorate('init');\n  }\n  /**\n   * Returns the model's data converted by downcast dispatchers attached to {@link #downcastDispatcher} and\n   * formatted by the {@link #processor data processor}.\n   *\n   * @param {String} [rootName='main'] Root name.\n   * @returns {String} Output data.\n   */\n\n\n  _createClass(DataController, [{\n    key: \"get\",\n    value: function get() {\n      var rootName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'main';\n      // Get model range.\n      return this.stringify(this.model.document.getRoot(rootName));\n    }\n    /**\n     * Returns the content of the given {@link module:engine/model/element~Element model's element} or\n     * {@link module:engine/model/documentfragment~DocumentFragment model document fragment} converted by the downcast converters\n     * attached to {@link #downcastDispatcher} and formatted by the {@link #processor data processor}.\n     *\n     * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} modelElementOrFragment\n     * Element whose content will be stringified.\n     * @returns {String} Output data.\n     */\n\n  }, {\n    key: \"stringify\",\n    value: function stringify(modelElementOrFragment) {\n      // Model -> view.\n      var viewDocumentFragment = this.toView(modelElementOrFragment); // View -> data.\n\n      return this.processor.toData(viewDocumentFragment);\n    }\n    /**\n     * Returns the content of the given {@link module:engine/model/element~Element model element} or\n     * {@link module:engine/model/documentfragment~DocumentFragment model document fragment} converted by the downcast\n     * converters attached to {@link #downcastDispatcher} to a\n     * {@link module:engine/view/documentfragment~DocumentFragment view document fragment}.\n     *\n     * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} modelElementOrFragment\n     * Element or document fragment whose content will be converted.\n     * @returns {module:engine/view/documentfragment~DocumentFragment} Output view DocumentFragment.\n     */\n\n  }, {\n    key: \"toView\",\n    value: function toView(modelElementOrFragment) {\n      // Clear bindings so the call to this method gives correct results.\n      this.mapper.clearBindings(); // First, convert elements.\n\n      var modelRange = ModelRange._createIn(modelElementOrFragment);\n\n      var viewDocumentFragment = new ViewDocumentFragment(); // Create separate ViewDowncastWriter just for data conversion purposes.\n      // We have no view controller and rendering do DOM in DataController so view.change() block is not used here.\n\n      var viewWriter = new ViewDowncastWriter(new ViewDocument());\n      this.mapper.bindElements(modelElementOrFragment, viewDocumentFragment);\n      this.downcastDispatcher.convertInsert(modelRange, viewWriter);\n\n      if (!modelElementOrFragment.is('documentFragment')) {\n        // Then, if a document element is converted, convert markers.\n        // From all document markers, get those, which \"intersect\" with the converter element.\n        var markers = _getMarkersRelativeToElement(modelElementOrFragment);\n\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = markers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var _step$value = _slicedToArray(_step.value, 2),\n                name = _step$value[0],\n                range = _step$value[1];\n\n            this.downcastDispatcher.convertMarkerAdd(name, range, viewWriter);\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n\n      return viewDocumentFragment;\n    }\n    /**\n     * Sets initial input data parsed by the {@link #processor data processor} and\n     * converted by the {@link #upcastDispatcher view-to-model converters}.\n     * Initial data can be set only to document that {@link module:engine/model/document~Document#version} is equal 0.\n     *\n     * **Note** This method is {@link module:utils/observablemixin~ObservableMixin#decorate decorated} which is\n     * used by e.g. collaborative editing plugin that syncs remote data on init.\n     *\n     * @fires init\n     * @param {String} data Input data.\n     * @param {String} [rootName='main'] Root name.\n     * @returns {Promise} Promise that is resolved after the data is set on the editor.\n     */\n\n  }, {\n    key: \"init\",\n    value: function init(data) {\n      var _this = this;\n\n      var rootName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'main';\n\n      if (this.model.document.version) {\n        /**\n         * Cannot set initial data to not empty {@link module:engine/model/document~Document}.\n         * Initial data should be set once, during {@link module:core/editor/editor~Editor} initialization,\n         * when the {@link module:engine/model/document~Document#version} is equal 0.\n         *\n         * @error datacontroller-init-document-not-empty\n         */\n        throw new CKEditorError('datacontroller-init-document-not-empty: Trying to set initial data to not empty document.');\n      }\n\n      var modelRoot = this.model.document.getRoot(rootName);\n      this.model.enqueueChange('transparent', function (writer) {\n        writer.insert(_this.parse(data, modelRoot), modelRoot, 0);\n      });\n      return Promise.resolve();\n    }\n    /**\n     * Sets input data parsed by the {@link #processor data processor} and\n     * converted by the {@link #upcastDispatcher view-to-model converters}.\n     * This method can be used any time to replace existing editor data by the new one without clearing the\n     * {@link module:engine/model/document~Document#history document history}.\n     *\n     * This method also creates a batch with all the changes applied. If all you need is to parse data, use\n     * the {@link #parse} method.\n     *\n     * @param {String} data Input data.\n     * @param {String} [rootName='main'] Root name.\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(data) {\n      var _this2 = this;\n\n      var rootName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'main';\n      // Save to model.\n      var modelRoot = this.model.document.getRoot(rootName);\n      this.model.enqueueChange('transparent', function (writer) {\n        writer.setSelection(null);\n        writer.removeSelectionAttribute(_this2.model.document.selection.getAttributeKeys());\n        writer.remove(writer.createRangeIn(modelRoot));\n        writer.insert(_this2.parse(data, modelRoot), modelRoot, 0);\n      });\n    }\n    /**\n     * Returns the data parsed by the {@link #processor data processor} and then converted by upcast converters\n     * attached to the {@link #upcastDispatcher}.\n     *\n     * @see #set\n     * @param {String} data Data to parse.\n     * @param {module:engine/model/schema~SchemaContextDefinition} [context='$root'] Base context in which the view will\n     * be converted to the model. See: {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher#convert}.\n     * @returns {module:engine/model/documentfragment~DocumentFragment} Parsed data.\n     */\n\n  }, {\n    key: \"parse\",\n    value: function parse(data) {\n      var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '$root';\n      // data -> view\n      var viewDocumentFragment = this.processor.toView(data); // view -> model\n\n      return this.toModel(viewDocumentFragment, context);\n    }\n    /**\n     * Returns the result of the given {@link module:engine/view/element~Element view element} or\n     * {@link module:engine/view/documentfragment~DocumentFragment view document fragment} converted by the\n     * {@link #upcastDispatcher view-to-model converters}, wrapped by {@link module:engine/model/documentfragment~DocumentFragment}.\n     *\n     * When marker elements were converted during the conversion process, it will be set as a document fragment's\n     * {@link module:engine/model/documentfragment~DocumentFragment#markers static markers map}.\n     *\n     * @param {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment} viewElementOrFragment\n     * Element or document fragment whose content will be converted.\n     * @param {module:engine/model/schema~SchemaContextDefinition} [context='$root'] Base context in which the view will\n     * be converted to the model. See: {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher#convert}.\n     * @returns {module:engine/model/documentfragment~DocumentFragment} Output document fragment.\n     */\n\n  }, {\n    key: \"toModel\",\n    value: function toModel(viewElementOrFragment) {\n      var _this3 = this;\n\n      var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '$root';\n      return this.model.change(function (writer) {\n        return _this3.upcastDispatcher.convert(viewElementOrFragment, writer, context);\n      });\n    }\n    /**\n     * Removes all event listeners set by the DataController.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {}\n    /**\n     * Event fired by decorated {@link #init} method.\n     * See {@link module:utils/observablemixin~ObservableMixin.decorate} for more information and samples.\n     *\n     * @event init\n     */\n\n  }]);\n\n  return DataController;\n}();\n\nexport { DataController as default };\nmix(DataController, ObservableMixin); // Helper function for downcast conversion.\n//\n// Takes a document element (element that is added to a model document) and checks which markers are inside it\n// and which markers are containing it. If the marker is intersecting with element, the intersection is returned.\n\nfunction _getMarkersRelativeToElement(element) {\n  var result = [];\n  var doc = element.root.document;\n\n  if (!doc) {\n    return [];\n  }\n\n  var elementRange = ModelRange._createIn(element);\n\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = doc.model.markers[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var marker = _step2.value;\n      var intersection = elementRange.getIntersection(marker.getRange());\n\n      if (intersection) {\n        result.push([marker.name, intersection]);\n      }\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return result;\n}","var _marked =\n/*#__PURE__*/\nregeneratorRuntime.mark(_getAllUpcastDefinitions),\n    _marked2 =\n/*#__PURE__*/\nregeneratorRuntime.mark(_getUpcastDefinition);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/conversion/conversion\n */\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport { downcastElementToElement, downcastAttributeToElement, downcastAttributeToAttribute } from './downcast-converters';\nimport { upcastElementToElement, upcastElementToAttribute, upcastAttributeToAttribute } from './upcast-converters';\n/**\n * A utility class that helps add converters to upcast and downcast dispatchers.\n *\n * We recommend reading the {@glink framework/guides/architecture/editing-engine Editing engine architecture} guide first to\n * understand the core concepts of the conversion mechanisms.\n *\n * The instance of the conversion manager is available in the\n * {@link module:core/editor/editor~Editor#conversion `editor.conversion`} property\n * and by default has the following groups of dispatchers (i.e. directions of conversion):\n *\n * * `downcast` (editing and data downcasts)\n * * `editingDowncast`\n * * `dataDowncast`\n * * `upcast`\n *\n * To add a converter to a specific group, use the {@link module:engine/conversion/conversion~Conversion#for `for()`}\n * method:\n *\n *\t\t// Add a converter to editing downcast and data downcast.\n *\t\teditor.conversion.for( 'downcast' ).add( downcastElementToElement( config ) );\n *\n *\t\t// Add a converter to the data pipepline only:\n *\t\teditor.conversion.for( 'dataDowncast' ).add( downcastElementToElement( dataConversionConfig ) );\n *\t\t// And a slightly different one for the editing pipeline:\n *\t\teditor.conversion.for( 'editingDowncast' ).add( downcastElementToElement( editingConversionConfig ) );\n *\n * The functions used in `add()` calls are one-way converters (i.e. you need to remember yourself to add\n * a converter in the other direction, if your feature requires that). They are also called \"conversion helpers\".\n * You can find a set of them in the {@link module:engine/conversion/downcast-converters} and\n * {@link module:engine/conversion/upcast-converters} modules.\n *\n * Besides allowing to register converters to specific dispatchers, you can also use methods available in this\n * class to add two-way converters (upcast and downcast):\n *\n * * {@link module:engine/conversion/conversion~Conversion#elementToElement `elementToElement()`} &ndash;\n * Model element to view element and vice versa.\n * * {@link module:engine/conversion/conversion~Conversion#attributeToElement `attributeToElement()`} &ndash;\n * Model attribute to view element and vice versa.\n * * {@link module:engine/conversion/conversion~Conversion#attributeToAttribute `attributeToAttribute()`} &ndash;\n * Model attribute to view element and vice versa.\n */\n\nvar Conversion =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a new conversion instance.\n   */\n  function Conversion() {\n    _classCallCheck(this, Conversion);\n\n    /**\n     * @private\n     * @member {Map}\n     */\n    this._dispatchersGroups = new Map();\n  }\n  /**\n   * Registers one or more converters under a given group name. The group name can then be used to assign a converter\n   * to multiple dispatchers at once.\n   *\n   * If a given group name is used for the second time, the\n   * {@link module:utils/ckeditorerror~CKEditorError `conversion-register-group-exists` error} is thrown.\n   *\n   * @param {String} groupName The name for dispatchers group.\n   * @param {Array.<module:engine/conversion/downcastdispatcher~DowncastDispatcher|\n   * module:engine/conversion/upcastdispatcher~UpcastDispatcher>} dispatchers Dispatchers to register\n   * under the given name.\n   */\n\n\n  _createClass(Conversion, [{\n    key: \"register\",\n    value: function register(groupName, dispatchers) {\n      if (this._dispatchersGroups.has(groupName)) {\n        /**\n         * Trying to register a group name that was already registered.\n         *\n         * @error conversion-register-group-exists\n         */\n        throw new CKEditorError('conversion-register-group-exists: Trying to register a group name that was already registered.');\n      }\n\n      this._dispatchersGroups.set(groupName, dispatchers);\n    }\n    /**\n     * Provides chainable API to assign converters to dispatchers registered under a given group name. Converters are added\n     * by calling the `.add()` method of an object returned by this function.\n     *\n     *\t\tconversion.for( 'downcast' )\n     *\t\t\t.add( conversionHelperA )\n     *\t\t\t.add( conversionHelperB );\n     *\n     * In this example `conversionHelperA` and `conversionHelperB` will be called for all dispatchers from the `'model'` group.\n     *\n     * The `.add()` method takes exactly one parameter, which is a function. This function should accept one parameter that\n     * is a dispatcher instance. The function should add an actual converter to the passed dispatcher instance.\n     *\n     * Conversion helpers for most common cases are already provided. They are flexible enough to cover most use cases.\n     * See the documentation to learn how they can be configured.\n     *\n     * For downcast (model-to-view conversion), these are:\n     *\n     * * {@link module:engine/conversion/downcast-converters~downcastElementToElement Downcast element-to-element converter},\n     * * {@link module:engine/conversion/downcast-converters~downcastAttributeToElement Downcast attribute-to-element converter},\n     * * {@link module:engine/conversion/downcast-converters~downcastAttributeToAttribute Downcast attribute-to-attribute converter}.\n     *\n     * For upcast (view-to-model conversion), these are:\n     *\n     * * {@link module:engine/conversion/upcast-converters~upcastElementToElement Upcast element-to-element converter},\n     * * {@link module:engine/conversion/upcast-converters~upcastElementToAttribute Upcast attribute-to-element converter},\n     * * {@link module:engine/conversion/upcast-converters~upcastAttributeToAttribute Upcast attribute-to-attribute converter}.\n     *\n     * An example of using conversion helpers to convert the `paragraph` model element to the `p` view element (and back):\n     *\n     *\t\t// Define conversion configuration - model element 'paragraph' should be converted to view element 'p'.\n     *\t\tconst config = { model: 'paragraph', view: 'p' };\n     *\n     *\t\t// Add converters to proper dispatchers using conversion helpers.\n     *\t\tconversion.for( 'downcast' ).add( downcastElementToElement( config ) );\n     *\t\tconversion.for( 'upcast' ).add( upcastElementToElement( config ) );\n     *\n     * An example of providing a custom conversion helper that uses a custom converter function:\n     *\n     *\t\t// Adding a custom `myConverter` converter for 'paragraph' element insertion, with the default priority ('normal').\n     *\t\tconversion.for( 'downcast' ).add( conversion.customConverter( 'insert:paragraph', myConverter ) );\n     *\n     * @param {String} groupName The name of dispatchers group to add the converters to.\n     * @returns {Object} An object with the `.add()` method, providing a way to add converters.\n     */\n\n  }, {\n    key: \"for\",\n    value: function _for(groupName) {\n      var dispatchers = this._getDispatchers(groupName);\n\n      return {\n        add: function add(conversionHelper) {\n          _addToDispatchers(dispatchers, conversionHelper);\n\n          return this;\n        }\n      };\n    }\n    /**\n     * Sets up converters between the model and the view that convert a model element to a view element (and vice versa).\n     * For example, the model `<paragraph>Foo</paragraph>` is `<p>Foo</p>` in the view.\n     *\n     *\t\t// A simple conversion from the `paragraph` model element to the `<p>` view element (and vice versa).\n     *\t\tconversion.elementToElement( { model: 'paragraph', view: 'p' } );\n     *\n     *\t\t// Override other converters by specifying a converter definition with a higher priority.\n     *\t\tconversion.elementToElement( { model: 'paragraph', view: 'div', converterPriority: 'high' } );\n     *\n     *\t\t// View specified as an object instead of a string.\n     *\t\tconversion.elementToElement( {\n     *\t\t\tmodel: 'fancyParagraph',\n     *\t\t\tview: {\n     *\t\t\t\tname: 'p',\n     *\t\t\t\tclasses: 'fancy'\n     *\t\t\t}\n     *\t\t} );\n     *\n     *\t\t// Use `upcastAlso` to define other view elements that should also be converted to a `paragraph` element.\n     *\t\tconversion.elementToElement( {\n     *\t\t\tmodel: 'paragraph',\n     *\t\t\tview: 'p',\n     *\t\t\tupcastAlso: [\n     *\t\t\t\t'div',\n     *\t\t\t\t{\n     *\t\t\t\t\t// Any element with the `display: block` style.\n     *\t\t\t\t\tstyles: {\n     *\t\t\t\t\t\tdisplay: 'block'\n     *\t\t\t\t\t}\n     *\t\t\t\t}\n     *\t\t\t]\n     *\t\t} );\n     *\n     *\t\t// `upcastAlso` set as callback enables a conversion of a wide range of different view elements.\n     *\t\tconversion.elementToElement( {\n     *\t\t\tmodel: 'heading',\n     *\t\t\tview: 'h2',\n     *\t\t\t// Convert \"headling-like\" paragraphs to headings.\n     *\t\t\tupcastAlso: viewElement => {\n     *\t\t\t\tconst fontSize = viewElement.getStyle( 'font-size' );\n     *\n     *\t\t\t\tif ( !fontSize ) {\n     *\t\t\t\t\treturn null;\n     *\t\t\t\t}\n     *\n     *\t\t\t\tconst match = fontSize.match( /(\\d+)\\s*px/ );\n     *\n     *\t\t\t\tif ( !match ) {\n     *\t\t\t\t\treturn null;\n     *\t\t\t\t}\n     *\n     *\t\t\t\tconst size = Number( match[ 1 ] );\n     *\n     *\t\t\t\tif ( size > 26 ) {\n     *\t\t\t\t\t// Returned value can be an object with the matched properties.\n     *\t\t\t\t\t// These properties will be \"consumed\" during the conversion.\n     *\t\t\t\t\t// See `engine.view.Matcher~MatcherPattern` and `engine.view.Matcher#match` for more details.\n     *\n     *\t\t\t\t\treturn { name: true, styles: [ 'font-size' ] };\n     *\t\t\t\t}\n     *\n     *\t\t\t\treturn null;\n     *\t\t\t}\n     *\t\t} );\n     *\n     * `definition.model` is a `String` with a model element name to convert from or to.\n     * See {@link module:engine/conversion/conversion~ConverterDefinition} to learn about other parameters.\n     *\n     * @param {module:engine/conversion/conversion~ConverterDefinition} definition The converter definition.\n     */\n\n  }, {\n    key: \"elementToElement\",\n    value: function elementToElement(definition) {\n      // Set up downcast converter.\n      this.for('downcast').add(downcastElementToElement(definition)); // Set up upcast converter.\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _getAllUpcastDefinitions(definition)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var _step$value = _step.value,\n              model = _step$value.model,\n              view = _step$value.view;\n          this.for('upcast').add(upcastElementToElement({\n            model: model,\n            view: view,\n            converterPriority: definition.converterPriority\n          }));\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n    /**\n     * Sets up converters between the model and the view that convert a model attribute to a view element (and vice versa).\n     * For example, a model text node with `\"Foo\"` as data and the `bold` attribute is `<strong>Foo</strong>` in the view.\n     *\n     *\t\t// A simple conversion from the `bold=true` attribute to the `<strong>` view element (and vice versa).\n     *\t\tconversion.attributeToElement( { model: 'bold', view: 'strong' } );\n     *\n     *\t\t// Override other converters by specifying a converter definition with a higher priority.\n     *\t\tconversion.attributeToElement( { model: 'bold', view: 'b', converterPriority: 'high' } );\n     *\n     *\t\t// View specified as an object instead of a string.\n     *\t\tconversion.attributeToElement( {\n     *\t\t\tmodel: 'bold',\n     *\t\t\tview: {\n     *\t\t\t\tname: 'span',\n     *\t\t\t\tclasses: 'bold'\n     *\t\t\t}\n     *\t\t} );\n     *\n     *\t\t// Use `config.model.name` to define the conversion only from a given node type, `$text` in this case.\n     *\t\t// The same attribute on different elements may then be handled by a different converter.\n     *\t\tconversion.attributeToElement( {\n     *\t\t\tmodel: {\n     *\t\t\t\tkey: 'textDecoration',\n     *\t\t\t\tvalues: [ 'underline', 'lineThrough' ],\n     *\t\t\t\tname: '$text'\n     *\t\t\t},\n     *\t\t\tview: {\n     *\t\t\t\tunderline: {\n     *\t\t\t\t\tname: 'span',\n     *\t\t\t\t\tstyles: {\n     *\t\t\t\t\t\t'text-decoration': 'underline'\n     *\t\t\t\t\t}\n     *\t\t\t\t},\n     *\t\t\t\tlineThrough: {\n     *\t\t\t\t\tname: 'span',\n     *\t\t\t\t\tstyles: {\n     *\t\t\t\t\t\t'text-decoration': 'line-through'\n     *\t\t\t\t\t}\n     *\t\t\t\t}\n     *\t\t\t}\n     *\t\t} );\n     *\n     *\t\t// Use `upcastAlso` to define other view elements that should also be converted to the `bold` attribute.\n     *\t\tconversion.attributeToElement( {\n     *\t\t\tmodel: 'bold',\n     *\t\t\tview: 'strong',\n     *\t\t\tupcastAlso: [\n     *\t\t\t\t'b',\n     *\t\t\t\t{\n     *\t\t\t\t\tname: 'span',\n     *\t\t\t\t\tclasses: 'bold'\n     *\t\t\t\t},\n     *\t\t\t\t{\n     *\t\t\t\t\tname: 'span',\n     *\t\t\t\t\tstyles: {\n     *\t\t\t\t\t\t'font-weight': 'bold'\n     *\t\t\t\t\t}\n     *\t\t\t\t},\n     *\t\t\t\tviewElement => {\n     *\t\t\t\t\tconst fontWeight = viewElement.getStyle( 'font-weight' );\n     *\n     *\t\t\t\t\tif ( viewElement.is( 'span' ) && fontWeight && /\\d+/.test() && Number( fontWeight ) > 500 ) {\n     *\t\t\t\t\t\t// Returned value can be an object with the matched properties.\n     *\t\t\t\t\t\t// These properties will be \"consumed\" during the conversion.\n     *\t\t\t\t\t\t// See `engine.view.Matcher~MatcherPattern` and `engine.view.Matcher#match` for more details.\n     *\n     *\t\t\t\t\t\treturn {\n     *\t\t\t\t\t\t\tname: true,\n     *\t\t\t\t\t\t\tstyles: [ 'font-weight' ]\n     *\t\t\t\t\t\t};\n     *\t\t\t\t\t}\n     *\t\t\t\t}\n     *\t\t\t]\n     *\t\t} );\n     *\n     *\t\t// Conversion from and to a model attribute key whose value is an enum (`fontSize=big|small`).\n     *\t\t// `upcastAlso` set as callback enables a conversion of a wide range of different view elements.\n     *\t\tconversion.attributeToElement( {\n     *\t\t\tmodel: {\n     *\t\t\t\tkey: 'fontSize',\n     *\t\t\t\tvalues: [ 'big', 'small' ]\n     *\t\t\t},\n     *\t\t\tview: {\n     *\t\t\t\tbig: {\n     *\t\t\t\t\tname: 'span',\n     *\t\t\t\t\tstyles: {\n     *\t\t\t\t\t\t'font-size': '1.2em'\n     *\t\t\t\t\t}\n     *\t\t\t\t},\n     *\t\t\t\tsmall: {\n     *\t\t\t\t\tname: 'span',\n     *\t\t\t\t\tstyles: {\n     *\t\t\t\t\t\t'font-size': '0.8em'\n     *\t\t\t\t\t}\n     *\t\t\t\t}\n     *\t\t\t},\n     *\t\t\tupcastAlso: {\n     *\t\t\t\tbig: viewElement => {\n     *\t\t\t\t\tconst fontSize = viewElement.getStyle( 'font-size' );\n     *\n     *\t\t\t\t\tif ( !fontSize ) {\n     *\t\t\t\t\t\treturn null;\n     *\t\t\t\t\t}\n     *\n     *\t\t\t\t\tconst match = fontSize.match( /(\\d+)\\s*px/ );\n     *\n     *\t\t\t\t\tif ( !match ) {\n     *\t\t\t\t\t\treturn null;\n     *\t\t\t\t\t}\n     *\n     *\t\t\t\t\tconst size = Number( match[ 1 ] );\n     *\n     *\t\t\t\t\tif ( viewElement.is( 'span' ) && size > 10 ) {\n     *\t\t\t\t\t\t// Returned value can be an object with the matched properties.\n     *\t\t\t\t\t\t// These properties will be \"consumed\" during the conversion.\n     *\t\t\t\t\t\t// See `engine.view.Matcher~MatcherPattern` and `engine.view.Matcher#match` for more details.\n     *\n     *\t\t\t\t\t\treturn { name: true, styles: [ 'font-size' ] };\n     *\t\t\t\t\t}\n     *\n     *\t\t\t\t\treturn null;\n     *\t\t\t\t},\n     *\t\t\t\tsmall: viewElement => {\n     *\t\t\t\t\tconst fontSize = viewElement.getStyle( 'font-size' );\n     *\n     *\t\t\t\t\tif ( !fontSize ) {\n     *\t\t\t\t\t\treturn null;\n     *\t\t\t\t\t}\n     *\n     *\t\t\t\t\tconst match = fontSize.match( /(\\d+)\\s*px/ );\n     *\n     *\t\t\t\t\tif ( !match ) {\n     *\t\t\t\t\t\treturn null;\n     *\t\t\t\t\t}\n     *\n     *\t\t\t\t\tconst size = Number( match[ 1 ] );\n     *\n     *\t\t\t\t\tif ( viewElement.is( 'span' ) && size < 10 ) {\n     *\t\t\t\t\t\t// Returned value can be an object with the matched properties.\n     *\t\t\t\t\t\t// These properties will be \"consumed\" during the conversion.\n     *\t\t\t\t\t\t// See `engine.view.Matcher~MatcherPattern` and `engine.view.Matcher#match` for more details.\n     *\n     *\t\t\t\t\t\treturn { name: true, styles: [ 'font-size' ] };\n     *\t\t\t\t\t}\n     *\n     *\t\t\t\t\treturn null;\n     *\t\t\t\t}\n     *\t\t\t}\n     *\t\t} );\n     *\n     * The `definition.model` parameter specifies which model attribute should be converted from or to. It can be a `{ key, value }` object\n     * describing the attribute key and value to convert or a `String` specifying just the attribute key (then `value` is set to `true`).\n     * See {@link module:engine/conversion/conversion~ConverterDefinition} to learn about other parameters.\n     *\n     * @param {module:engine/conversion/conversion~ConverterDefinition} definition The converter definition.\n     */\n\n  }, {\n    key: \"attributeToElement\",\n    value: function attributeToElement(definition) {\n      // Set up downcast converter.\n      this.for('downcast').add(downcastAttributeToElement(definition)); // Set up upcast converter.\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = _getAllUpcastDefinitions(definition)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var _step2$value = _step2.value,\n              model = _step2$value.model,\n              view = _step2$value.view;\n          this.for('upcast').add(upcastElementToAttribute({\n            view: view,\n            model: model,\n            priority: definition.priority\n          }));\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n    /**\n     * Sets up converters between the model and the view that convert a model attribute to a view attribute (and vice versa).\n     * For example, `<image src='foo.jpg'></image>` is converted to `<img src='foo.jpg'></img>` (the same attribute key and value).\n     * This type of converters is intended to be used with {@link module:engine/model/element~Element model element} nodes.\n     * To convert text attributes {@link module:engine/conversion/conversion~Conversion#attributeToElement `attributeToElement converter`}\n     * should be set up.\n     *\n     *\t\t// A simple conversion from the `source` model attribute to the `src` view attribute (and vice versa).\n     *\t\tconversion.attributeToAttribute( { model: 'source', view: 'src' } );\n     *\n     *\t\t// Attribute values are strictly specified.\n     *\t\tconversion.attributeToAttribute( {\n     *\t\t\tmodel: {\n     *\t\t\t\tname: 'image',\n     *\t\t\t\tkey: 'aside',\n     *\t\t\t\tvalues: [ 'aside' ]\n     *\t\t\t},\n     *\t\t\tview: {\n     *\t\t\t\taside: {\n     *\t\t\t\t\tname: 'img',\n     *\t\t\t\t\tkey: 'class',\n     *\t\t\t\t\tvalue: [ 'aside', 'half-size' ]\n     *\t\t\t\t}\n     *\t\t\t}\n     *\t\t} );\n     *\n     *\t\t// Set the style attribute.\n     *\t\tconversion.attributeToAttribute( {\n     *\t\t\tmodel: {\n     *\t\t\t\tname: 'image',\n     *\t\t\t\tkey: 'aside',\n     *\t\t\t\tvalues: [ 'aside' ]\n     *\t\t\t},\n     *\t\t\tview: {\n     *\t\t\t\taside: {\n     *\t\t\t\t\tname: 'img',\n     *\t\t\t\t\tkey: 'style',\n     *\t\t\t\t\tvalue: {\n     *\t\t\t\t\t\tfloat: 'right',\n     *\t\t\t\t\t\twidth: '50%',\n     *\t\t\t\t\t\tmargin: '5px'\n     *\t\t\t\t\t}\n     *\t\t\t\t}\n     *\t\t\t}\n     *\t\t} );\n     *\n     *\t\t// Conversion from and to a model attribute key whose value is an enum (`align=right|center`).\n     *\t\t// Use `upcastAlso` to define other view elements that should also be converted to the `align=right` attribute.\n     *\t\tconversion.attributeToAttribute( {\n     *\t\t\tmodel: {\n     *\t\t\t\tkey: 'align',\n     *\t\t\t\tvalues: [ 'right', 'center' ]\n     *\t\t\t},\n     *\t\t\tview: {\n     *\t\t\t\tright: {\n     *\t\t\t\t\tkey: 'class',\n     *\t\t\t\t\tvalue: 'align-right'\n     *\t\t\t\t},\n     *\t\t\t\tcenter: {\n     *\t\t\t\t\tkey: 'class',\n     *\t\t\t\t\tvalue: 'align-center'\n     *\t\t\t\t}\n     *\t\t\t},\n     *\t\t\tupcastAlso: {\n     *\t\t\t\tright: {\n     *\t\t\t\t\tstyles: {\n     *\t\t\t\t\t\t'text-align': 'right'\n     *\t\t\t\t\t}\n     *\t\t\t\t},\n     *\t\t\t\tcenter: {\n     *\t\t\t\t\tstyles: {\n     *\t\t\t\t\t\t'text-align': 'center'\n     *\t\t\t\t\t}\n     *\t\t\t\t}\n     *\t\t\t}\n     *\t\t} );\n     *\n     * The `definition.model` parameter specifies which model attribute should be converted from and to.\n     * It can be a `{ key, [ values ], [ name ] }` object or a `String`, which will be treated like `{ key: definition.model }`.\n     * The `key` property is the model attribute key to convert from and to.\n     * The `values` are the possible model attribute values. If `values` is not set, the model attribute value will be the same as the\n     * view attribute value.\n     * If `name` is set, the conversion will be set up only for model elements with the given name.\n     *\n     * The `definition.view` parameter specifies which view attribute should be converted from and to.\n     * It can be a `{ key, value, [ name ] }` object or a `String`, which will be treated like `{ key: definition.view }`.\n     * The `key` property is the view attribute key to convert from and to.\n     * The `value` is the view attribute value to convert from and to. If `definition.value` is not set, the view attribute value will be\n     * the same as the model attribute value.\n     * If `key` is `'class'`, `value` can be a `String` or an array of `String`s.\n     * If `key` is `'style'`, `value` is an object with key-value pairs.\n     * In other cases, `value` is a `String`.\n     * If `name` is set, the conversion will be set up only for model elements with the given name.\n     * If `definition.model.values` is set, `definition.view` is an object that assigns values from `definition.model.values`\n     * to `{ key, value, [ name ] }` objects.\n     *\n     * `definition.upcastAlso` specifies which other matching view elements should also be upcast to the given model configuration.\n     * If `definition.model.values` is set, `definition.upcastAlso` should be an object assigning values from `definition.model.values`\n     * to {@link module:engine/view/matcher~MatcherPattern}s or arrays of {@link module:engine/view/matcher~MatcherPattern}s.\n     *\n     * **Note:** `definition.model` and `definition.view` form should be mirrored, so the same types of parameters should\n     * be given in both parameters.\n     *\n     * @param {Object} definition The converter definition.\n     * @param {String|Object} definition.model The model attribute to convert from and to.\n     * @param {String|Object} definition.view The view attribute to convert from and to.\n     * @param {module:engine/view/matcher~MatcherPattern|Array.<module:engine/view/matcher~MatcherPattern>} [definition.upcastAlso]\n     * Any view element matching `definition.upcastAlso` will also be converted to the given model attribute. `definition.upcastAlso`\n     * is used only if `config.model.values` is specified.\n     */\n\n  }, {\n    key: \"attributeToAttribute\",\n    value: function attributeToAttribute(definition) {\n      // Set up downcast converter.\n      this.for('downcast').add(downcastAttributeToAttribute(definition)); // Set up upcast converter.\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = _getAllUpcastDefinitions(definition)[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var _step3$value = _step3.value,\n              model = _step3$value.model,\n              view = _step3$value.view;\n          this.for('upcast').add(upcastAttributeToAttribute({\n            view: view,\n            model: model\n          }));\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n    /**\n     * Returns dispatchers registered under a given group name.\n     *\n     * If the given group name has not been registered, the\n     * {@link module:utils/ckeditorerror~CKEditorError `conversion-for-unknown-group` error} is thrown.\n     *\n     * @private\n     * @param {String} groupName\n     * @returns {Array.<module:engine/conversion/downcastdispatcher~DowncastDispatcher|\n     * module:engine/conversion/upcastdispatcher~UpcastDispatcher>}\n     */\n\n  }, {\n    key: \"_getDispatchers\",\n    value: function _getDispatchers(groupName) {\n      var dispatchers = this._dispatchersGroups.get(groupName);\n\n      if (!dispatchers) {\n        /**\n         * Trying to add a converter to an unknown dispatchers group.\n         *\n         * @error conversion-for-unknown-group\n         */\n        throw new CKEditorError('conversion-for-unknown-group: Trying to add a converter to an unknown dispatchers group.');\n      }\n\n      return dispatchers;\n    }\n  }]);\n\n  return Conversion;\n}();\n/**\n * Defines how the model should be converted from and to the view.\n *\n * @typedef {Object} module:engine/conversion/conversion~ConverterDefinition\n *\n * @property {*} [model] The model conversion definition. Describes the model element or model attribute to convert. This parameter differs\n * for different functions that accept `ConverterDefinition`. See the description of the function to learn how to set it.\n * @property {module:engine/view/elementdefinition~ElementDefinition|Object} view The definition of the view element to convert from and\n * to. If `model` describes multiple values, `view` is an object that assigns these values (`view` object keys) to view element definitions\n * (`view` object values).\n * @property {module:engine/view/matcher~MatcherPattern|Array.<module:engine/view/matcher~MatcherPattern>} [upcastAlso]\n * Any view element matching `upcastAlso` will also be converted to the model. If `model` describes multiple values, `upcastAlso`\n * is an object that assigns these values (`upcastAlso` object keys) to {@link module:engine/view/matcher~MatcherPattern}s\n * (`upcastAlso` object values).\n * @property {module:utils/priorities~PriorityString} [converterPriority] The converter priority.\n */\n// Helper function for the `Conversion` `.add()` method.\n//\n// Calls `conversionHelper` on each dispatcher from the group specified earlier in the `.for()` call, effectively\n// adding converters to all specified dispatchers.\n//\n// @private\n// @param {Array.<module:engine/conversion/downcastdispatcher~DowncastDispatcher|\n// module:engine/conversion/upcastdispatcher~UpcastDispatcher>} dispatchers\n// @param {Function} conversionHelper\n\n\nexport { Conversion as default };\n\nfunction _addToDispatchers(dispatchers, conversionHelper) {\n  var _iteratorNormalCompletion4 = true;\n  var _didIteratorError4 = false;\n  var _iteratorError4 = undefined;\n\n  try {\n    for (var _iterator4 = dispatchers[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n      var dispatcher = _step4.value;\n      conversionHelper(dispatcher);\n    }\n  } catch (err) {\n    _didIteratorError4 = true;\n    _iteratorError4 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n        _iterator4.return();\n      }\n    } finally {\n      if (_didIteratorError4) {\n        throw _iteratorError4;\n      }\n    }\n  }\n} // Helper function that creates a joint array out of an item passed in `definition.view` and items passed in\n// `definition.upcastAlso`.\n//\n// @param {module:engine/conversion/conversion~ConverterDefinition} definition\n// @returns {Array} Array containing view definitions.\n\n\nfunction _getAllUpcastDefinitions(definition) {\n  var _iteratorNormalCompletion5, _didIteratorError5, _iteratorError5, _iterator5, _step5, value, model, view, upcastAlso;\n\n  return regeneratorRuntime.wrap(function _getAllUpcastDefinitions$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!definition.model.values) {\n            _context.next = 31;\n            break;\n          }\n\n          _iteratorNormalCompletion5 = true;\n          _didIteratorError5 = false;\n          _iteratorError5 = undefined;\n          _context.prev = 4;\n          _iterator5 = definition.model.values[Symbol.iterator]();\n\n        case 6:\n          if (_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done) {\n            _context.next = 15;\n            break;\n          }\n\n          value = _step5.value;\n          model = {\n            key: definition.model.key,\n            value: value\n          };\n          view = definition.view[value];\n          upcastAlso = definition.upcastAlso ? definition.upcastAlso[value] : undefined;\n          return _context.delegateYield(_getUpcastDefinition(model, view, upcastAlso), \"t0\", 12);\n\n        case 12:\n          _iteratorNormalCompletion5 = true;\n          _context.next = 6;\n          break;\n\n        case 15:\n          _context.next = 21;\n          break;\n\n        case 17:\n          _context.prev = 17;\n          _context.t1 = _context[\"catch\"](4);\n          _didIteratorError5 = true;\n          _iteratorError5 = _context.t1;\n\n        case 21:\n          _context.prev = 21;\n          _context.prev = 22;\n\n          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n            _iterator5.return();\n          }\n\n        case 24:\n          _context.prev = 24;\n\n          if (!_didIteratorError5) {\n            _context.next = 27;\n            break;\n          }\n\n          throw _iteratorError5;\n\n        case 27:\n          return _context.finish(24);\n\n        case 28:\n          return _context.finish(21);\n\n        case 29:\n          _context.next = 32;\n          break;\n\n        case 31:\n          return _context.delegateYield(_getUpcastDefinition(definition.model, definition.view, definition.upcastAlso), \"t2\", 32);\n\n        case 32:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[4, 17, 21, 29], [22,, 24, 28]]);\n}\n\nfunction _getUpcastDefinition(model, view, upcastAlso) {\n  var _iteratorNormalCompletion6, _didIteratorError6, _iteratorError6, _iterator6, _step6, upcastAlsoItem;\n\n  return regeneratorRuntime.wrap(function _getUpcastDefinition$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return {\n            model: model,\n            view: view\n          };\n\n        case 2:\n          if (!upcastAlso) {\n            _context2.next = 30;\n            break;\n          }\n\n          upcastAlso = Array.isArray(upcastAlso) ? upcastAlso : [upcastAlso];\n          _iteratorNormalCompletion6 = true;\n          _didIteratorError6 = false;\n          _iteratorError6 = undefined;\n          _context2.prev = 7;\n          _iterator6 = upcastAlso[Symbol.iterator]();\n\n        case 9:\n          if (_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done) {\n            _context2.next = 16;\n            break;\n          }\n\n          upcastAlsoItem = _step6.value;\n          _context2.next = 13;\n          return {\n            model: model,\n            view: upcastAlsoItem\n          };\n\n        case 13:\n          _iteratorNormalCompletion6 = true;\n          _context2.next = 9;\n          break;\n\n        case 16:\n          _context2.next = 22;\n          break;\n\n        case 18:\n          _context2.prev = 18;\n          _context2.t0 = _context2[\"catch\"](7);\n          _didIteratorError6 = true;\n          _iteratorError6 = _context2.t0;\n\n        case 22:\n          _context2.prev = 22;\n          _context2.prev = 23;\n\n          if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n            _iterator6.return();\n          }\n\n        case 25:\n          _context2.prev = 25;\n\n          if (!_didIteratorError6) {\n            _context2.next = 28;\n            break;\n          }\n\n          throw _iteratorError6;\n\n        case 28:\n          return _context2.finish(25);\n\n        case 29:\n          return _context2.finish(22);\n\n        case 30:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this, [[7, 18, 22, 30], [23,, 25, 29]]);\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/batch\n */\n\n/**\n * A batch instance groups model changes ({@link module:engine/model/operation/operation~Operation operations}). All operations\n * grouped in a single batch can be reverted together, so you can also think about a batch as of a single undo step. If you want\n * to extend a given undo step, you can add more changes to the batch using {@link module:engine/model/model~Model#enqueueChange}:\n *\n *\t\tmodel.enqueueChange( batch, writer => {\n *\t\t\twriter.insertText( 'foo', paragraph, 'end' );\n *\t\t} );\n *\n * @see module:engine/model/model~Model#enqueueChange\n * @see module:engine/model/model~Model#change\n */\nvar Batch =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a batch instance.\n   *\n   * @see module:engine/model/model~Model#enqueueChange\n   * @see module:engine/model/model~Model#change\n   * @param {'transparent'|'default'} [type='default'] The type of the batch.\n   */\n  function Batch() {\n    var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'default';\n\n    _classCallCheck(this, Batch);\n\n    /**\n     * An array of operations that compose this batch.\n     *\n     * @readonly\n     * @type {Array.<module:engine/model/operation/operation~Operation>}\n     */\n    this.operations = [];\n    /**\n     * The type of the batch.\n     *\n     * It can be one of the following values:\n     * * `'default'` &ndash; All \"normal\" batches. This is the most commonly used type.\n     * * `'transparent'` &ndash; A batch that should be ignored by other features, i.e. an initial batch or collaborative editing\n     * changes.\n     *\n     * @readonly\n     * @type {'transparent'|'default'}\n     */\n\n    this.type = type;\n  }\n  /**\n   * Returns the base version of this batch, which is equal to the base version of the first operation in the batch.\n   * If there are no operations in the batch or neither operation has the base version set, it returns `null`.\n   *\n   * @readonly\n   * @type {Number|null}\n   */\n\n\n  _createClass(Batch, [{\n    key: \"addOperation\",\n\n    /**\n     * Adds an operation to the batch instance.\n     *\n     * @param {module:engine/model/operation/operation~Operation} operation An operation to add.\n     * @returns {module:engine/model/operation/operation~Operation} The added operation.\n     */\n    value: function addOperation(operation) {\n      operation.batch = this;\n      this.operations.push(operation);\n      return operation;\n    }\n  }, {\n    key: \"baseVersion\",\n    get: function get() {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.operations[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var op = _step.value;\n\n          if (op.baseVersion !== null) {\n            return op.baseVersion;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return null;\n    }\n  }]);\n\n  return Batch;\n}();\n\nexport { Batch as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/operation/detachoperation\n */\nimport Operation from './operation';\nimport Range from '../range';\nimport { _remove } from './utils';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * Operation to permanently remove node from detached root.\n * Note this operation is only a local operation and won't be send to the other clients.\n *\n * @extends module:engine/model/operation/operation~Operation\n */\n\nvar DetachOperation =\n/*#__PURE__*/\nfunction (_Operation) {\n  _inherits(DetachOperation, _Operation);\n\n  /**\n   * Creates an insert operation.\n   *\n   * @param {module:engine/model/position~Position} sourcePosition\n   * Position before the first {@link module:engine/model/item~Item model item} to move.\n   * @param {Number} howMany Offset size of moved range. Moved range will start from `sourcePosition` and end at\n   * `sourcePosition` with offset shifted by `howMany`.\n   */\n  function DetachOperation(sourcePosition, howMany) {\n    var _this;\n\n    _classCallCheck(this, DetachOperation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DetachOperation).call(this, null));\n    /**\n     * Position before the first {@link module:engine/model/item~Item model item} to detach.\n     *\n     * @member {module:engine/model/position~Position} #sourcePosition\n     */\n\n    _this.sourcePosition = sourcePosition.clone();\n    /**\n     * Offset size of moved range.\n     *\n     * @member {Number} #howMany\n     */\n\n    _this.howMany = howMany;\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(DetachOperation, [{\n    key: \"toJSON\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function toJSON() {\n      var json = _get(_getPrototypeOf(DetachOperation.prototype), \"toJSON\", this).call(this);\n\n      json.sourcePosition = this.sourcePosition.toJSON();\n      return json;\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_validate\",\n    value: function _validate() {\n      if (this.sourcePosition.root.document) {\n        /**\n         * Cannot detach document node.\n         *\n         * @error detach-operation-on-document-node\n         */\n        throw new CKEditorError('detach-operation-on-document-node: Cannot detach document node.');\n      }\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"_execute\",\n    value: function _execute() {\n      _remove(Range._createFromPositionAndShift(this.sourcePosition, this.howMany));\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"type\",\n    get: function get() {\n      return 'detach';\n    }\n  }], [{\n    key: \"className\",\n    get: function get() {\n      return 'DetachOperation';\n    }\n  }]);\n\n  return DetachOperation;\n}(Operation);\n\nexport { DetachOperation as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/rootelement\n */\nimport Element from './element';\n/**\n * Type of {@link module:engine/model/element~Element} that is a root of a model tree.\n * @extends module:engine/model/element~Element\n */\n\nvar RootElement =\n/*#__PURE__*/\nfunction (_Element) {\n  _inherits(RootElement, _Element);\n\n  /**\n   * Creates root element.\n   *\n   * @param {module:engine/model/document~Document} doc Document that is an owner of this root.\n   * @param {String} name Node name.\n   * @param {String} [rootName='main'] Unique root name used to identify this root\n   * element by {@link module:engine/model/document~Document}.\n   */\n  function RootElement(doc, name) {\n    var _this;\n\n    var rootName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'main';\n\n    _classCallCheck(this, RootElement);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RootElement).call(this, name));\n    /**\n     * Document that is an owner of this root.\n     *\n     * @private\n     * @member {module:engine/model/document~Document}\n     */\n\n    _this._doc = doc;\n    /**\n     * Unique root name used to identify this root element by {@link module:engine/model/document~Document}.\n     *\n     * @readonly\n     * @member {String}\n     */\n\n    _this.rootName = rootName;\n    return _this;\n  }\n  /**\n   * {@link module:engine/model/document~Document Document} that owns this root element.\n   *\n   * In contrary, to {@link module:engine/model/node~Node node}, root element always have a `document`.\n   *\n   * @readonly\n   * @type {module:engine/model/document~Document|null}\n   */\n\n\n  _createClass(RootElement, [{\n    key: \"is\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function is(type, name) {\n      if (!name) {\n        return type == 'rootElement' || _get(_getPrototypeOf(RootElement.prototype), \"is\", this).call(this, type);\n      } else {\n        return type == 'rootElement' && name == this.name || _get(_getPrototypeOf(RootElement.prototype), \"is\", this).call(this, type, name);\n      }\n    }\n    /**\n     * Converts `RootElement` instance to `String` containing it's name.\n     *\n     * @returns {String} `RootElement` instance converted to `String`.\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.rootName;\n    }\n  }, {\n    key: \"document\",\n    get: function get() {\n      return this._doc;\n    }\n  }]);\n\n  return RootElement;\n}(Element);\n\nexport { RootElement as default };","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/writer\n */\nimport AttributeOperation from './operation/attributeoperation';\nimport DetachOperation from './operation/detachoperation';\nimport InsertOperation from './operation/insertoperation';\nimport MarkerOperation from './operation/markeroperation';\nimport MoveOperation from './operation/moveoperation';\nimport RenameOperation from './operation/renameoperation';\nimport RootAttributeOperation from './operation/rootattributeoperation';\nimport SplitOperation from './operation/splitoperation';\nimport MergeOperation from './operation/mergeoperation';\nimport DocumentFragment from './documentfragment';\nimport Text from './text';\nimport Element from './element';\nimport RootElement from './rootelement';\nimport Position from './position';\nimport Range from './range.js';\nimport DocumentSelection from './documentselection';\nimport toMap from '@ckeditor/ckeditor5-utils/src/tomap';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * The model can only be modified by using the writer. It should be used whenever you want to create a node, modify\n * child nodes, attributes or text, set the selection's position and its attributes.\n *\n * The instance of the writer is only available in the {@link module:engine/model/model~Model#change `change()`} or\n * {@link module:engine/model/model~Model#enqueueChange `enqueueChange()`}.\n *\n *\t\tmodel.change( writer => {\n *\t\t\twriter.insertText( 'foo', paragraph, 'end' );\n *\t\t} );\n *\n * Note that the writer should never be stored and used outside of the `change()` and\n * `enqueueChange()` blocks.\n *\n * Note that writer's methods do not check the {@link module:engine/model/schema~Schema}. It is possible\n * to create incorrect model structures by using the writer. Read more about in\n * {@glink framework/guides/deep-dive/schema#who-checks-the-schema \"Who checks the schema?\"}.\n *\n * @see module:engine/model/model~Model#change\n * @see module:engine/model/model~Model#enqueueChange\n */\n\nvar Writer =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a writer instance.\n   *\n   * **Note:** It is not recommended to use it directly. Use {@link module:engine/model/model~Model#change `Model#change()`} or\n   * {@link module:engine/model/model~Model#enqueueChange `Model#enqueueChange()`} instead.\n   *\n   * @protected\n   * @param {module:engine/model/model~Model} model\n   * @param {module:engine/model/batch~Batch} batch\n   */\n  function Writer(model, batch) {\n    _classCallCheck(this, Writer);\n\n    /**\n     * Instance of the model on which this writer operates.\n     *\n     * @readonly\n     * @type {module:engine/model/model~Model}\n     */\n    this.model = model;\n    /**\n     * The batch to which this writer will add changes.\n     *\n     * @readonly\n     * @type {module:engine/model/batch~Batch}\n     */\n\n    this.batch = batch;\n  }\n  /**\n   * Creates a new {@link module:engine/model/text~Text text node}.\n   *\n   *\t\twriter.createText( 'foo' );\n   *\t\twriter.createText( 'foo', { bold: true } );\n   *\n   * @param {String} data Text data.\n   * @param {Object} [attributes] Text attributes.\n   * @returns {module:engine/model/text~Text} Created text node.\n   */\n\n\n  _createClass(Writer, [{\n    key: \"createText\",\n    value: function createText(data, attributes) {\n      return new Text(data, attributes);\n    }\n    /**\n     * Creates a new {@link module:engine/model/element~Element element}.\n     *\n     *\t\twriter.createElement( 'paragraph' );\n     *\t\twriter.createElement( 'paragraph', { alignment: 'center' } );\n     *\n     * @param {String} name Name of the element.\n     * @param {Object} [attributes] Elements attributes.\n     * @returns {module:engine/model/element~Element} Created element.\n     */\n\n  }, {\n    key: \"createElement\",\n    value: function createElement(name, attributes) {\n      return new Element(name, attributes);\n    }\n    /**\n     * Creates a new {@link module:engine/model/documentfragment~DocumentFragment document fragment}.\n     *\n     * @returns {module:engine/model/documentfragment~DocumentFragment} Created document fragment.\n     */\n\n  }, {\n    key: \"createDocumentFragment\",\n    value: function createDocumentFragment() {\n      return new DocumentFragment();\n    }\n    /**\n     * Inserts item on given position.\n     *\n     *\t\tconst paragraph = writer.createElement( 'paragraph' );\n     *\t\twriter.insert( paragraph, position );\n     *\n     * Instead of using position you can use parent and offset:\n     *\n     *\t\tconst text = writer.createText( 'foo' );\n     *\t\twriter.insert( text, paragraph, 5 );\n     *\n     * You can also use `end` instead of the offset to insert at the end:\n     *\n     *\t\tconst text = writer.createText( 'foo' );\n     *\t\twriter.insert( text, paragraph, 'end' );\n     *\n     * Or insert before or after another element:\n     *\n     *\t\tconst paragraph = writer.createElement( 'paragraph' );\n     *\t\twriter.insert( paragraph, anotherParagraph, 'after' );\n     *\n     * These parameters works the same way as {@link #createPositionAt `writer.createPositionAt()`}.\n     *\n     * Note that if the item already has parent it will be removed from the previous parent.\n     *\n     * Note that you cannot re-insert a node from a document to a different document or a document fragment. In this case,\n     * `model-writer-insert-forbidden-move` is thrown.\n     *\n     * If you want to move {@link module:engine/model/range~Range range} instead of an\n     * {@link module:engine/model/item~Item item} use {@link module:engine/model/writer~Writer#move `Writer#move()`}.\n     *\n     * **Note:** For a paste-like content insertion mechanism see\n     * {@link module:engine/model/model~Model#insertContent `model.insertContent()`}.\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/documentfragment~DocumentFragment} item Item or document\n     * fragment to insert.\n     * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n     * second parameter is a {@link module:engine/model/item~Item model item}.\n     */\n\n  }, {\n    key: \"insert\",\n    value: function insert(item, itemOrPosition) {\n      var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n      this._assertWriterUsedCorrectly();\n\n      var position = Position._createAt(itemOrPosition, offset); // If item has a parent already.\n\n\n      if (item.parent) {\n        // We need to check if item is going to be inserted within the same document.\n        if (isSameTree(item.root, position.root)) {\n          // If it's we just need to move it.\n          this.move(Range._createOn(item), position);\n          return;\n        } // If it isn't the same root.\n        else {\n            if (item.root.document) {\n              // It is forbidden to move a node that was already in a document outside of it.\n              throw new Error('model-writer-insert-forbidden-move: Cannot move a node from a document to a different tree.');\n            } else {\n              // Move between two different document fragments or from document fragment to a document is possible.\n              // In that case, remove the item from it's original parent.\n              this.remove(item);\n            }\n          }\n      }\n\n      var version = position.root.document ? position.root.document.version : null;\n      var insert = new InsertOperation(position, item, version);\n\n      if (item instanceof Text) {\n        insert.shouldReceiveAttributes = true;\n      }\n\n      this.batch.addOperation(insert);\n      this.model.applyOperation(insert); // When element is a DocumentFragment we need to move its markers to Document#markers.\n\n      if (item instanceof DocumentFragment) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = item.markers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var _step$value = _slicedToArray(_step.value, 2),\n                markerName = _step$value[0],\n                markerRange = _step$value[1];\n\n            // We need to migrate marker range from DocumentFragment to Document.\n            var rangeRootPosition = Position._createAt(markerRange.root, 0);\n\n            var range = new Range(markerRange.start._getCombined(rangeRootPosition, position), markerRange.end._getCombined(rangeRootPosition, position));\n            this.addMarker(markerName, {\n              range: range,\n              usingOperation: true,\n              affectsData: true\n            });\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n    }\n    /**\n     * Creates and inserts text on given position. You can optionally set text attributes:\n     *\n     *\t\twriter.insertText( 'foo', position );\n     *\t\twriter.insertText( 'foo', { bold: true }, position );\n     *\n     * Instead of using position you can use parent and offset or define that text should be inserted at the end\n     * or before or after other node:\n     *\n     *\t\t// Inserts 'foo' in paragraph, at offset 5:\n     *\t\twriter.insertText( 'foo', paragraph, 5 );\n     *\t\t// Inserts 'foo' at the end of a paragraph:\n     *\t\twriter.insertText( 'foo', paragraph, 'end' );\n     *\t\t// Inserts 'foo' after an image:\n     *\t\twriter.insertText( 'foo', image, 'after' );\n     *\n     * These parameters work in the same way as {@link #createPositionAt `writer.createPositionAt()`}.\n     *\n     * @param {String} data Text data.\n     * @param {Object} [attributes] Text attributes.\n     * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n     * third parameter is a {@link module:engine/model/item~Item model item}.\n     */\n\n  }, {\n    key: \"insertText\",\n    value: function insertText(text, attributes, itemOrPosition, offset) {\n      if (attributes instanceof DocumentFragment || attributes instanceof Element || attributes instanceof Position) {\n        this.insert(this.createText(text), attributes, itemOrPosition);\n      } else {\n        this.insert(this.createText(text, attributes), itemOrPosition, offset);\n      }\n    }\n    /**\n     * Creates and inserts element on given position. You can optionally set attributes:\n     *\n     *\t\twriter.insertElement( 'paragraph', position );\n     *\t\twriter.insertElement( 'paragraph', { alignment: 'center' }, position );\n     *\n     * Instead of using position you can use parent and offset or define that text should be inserted at the end\n     * or before or after other node:\n     *\n     *\t\t// Inserts paragraph in the root at offset 5:\n     *\t\twriter.insertElement( 'paragraph', root, 5 );\n     *\t\t// Inserts paragraph at the end of a blockquote:\n     *\t\twriter.insertElement( 'paragraph', blockquote, 'end' );\n     *\t\t// Inserts after an image:\n     *\t\twriter.insertElement( 'paragraph', image, 'after' );\n     *\n     * These parameters works the same way as {@link #createPositionAt `writer.createPositionAt()`}.\n     *\n     * @param {String} name Name of the element.\n     * @param {Object} [attributes] Elements attributes.\n     * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n     * third parameter is a {@link module:engine/model/item~Item model item}.\n     */\n\n  }, {\n    key: \"insertElement\",\n    value: function insertElement(name, attributes, itemOrPosition, offset) {\n      if (attributes instanceof DocumentFragment || attributes instanceof Element || attributes instanceof Position) {\n        this.insert(this.createElement(name), attributes, itemOrPosition);\n      } else {\n        this.insert(this.createElement(name, attributes), itemOrPosition, offset);\n      }\n    }\n    /**\n     * Inserts item at the end of the given parent.\n     *\n     *\t\tconst paragraph = writer.createElement( 'paragraph' );\n     *\t\twriter.append( paragraph, root );\n     *\n     * Note that if the item already has parent it will be removed from the previous parent.\n     *\n     * If you want to move {@link module:engine/model/range~Range range} instead of an\n     * {@link module:engine/model/item~Item item} use {@link module:engine/model/writer~Writer#move `Writer#move()`}.\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/documentfragment~DocumentFragment}\n     * item Item or document fragment to insert.\n     * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} parent\n     */\n\n  }, {\n    key: \"append\",\n    value: function append(item, parent) {\n      this.insert(item, parent, 'end');\n    }\n    /**\n     * Creates text node and inserts it at the end of the parent. You can optionally set text attributes:\n     *\n     *\t\twriter.appendText( 'foo', paragraph );\n     *\t\twriter.appendText( 'foo', { bold: true }, paragraph );\n     *\n     * @param {String} text Text data.\n     * @param {Object} [attributes] Text attributes.\n     * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} parent\n     */\n\n  }, {\n    key: \"appendText\",\n    value: function appendText(text, attributes, parent) {\n      if (attributes instanceof DocumentFragment || attributes instanceof Element) {\n        this.insert(this.createText(text), attributes, 'end');\n      } else {\n        this.insert(this.createText(text, attributes), parent, 'end');\n      }\n    }\n    /**\n     * Creates element and inserts it at the end of the parent. You can optionally set attributes:\n     *\n     *\t\twriter.appendElement( 'paragraph', root );\n     *\t\twriter.appendElement( 'paragraph', { alignment: 'center' }, root );\n     *\n     * @param {String} name Name of the element.\n     * @param {Object} [attributes] Elements attributes.\n     * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} parent\n     */\n\n  }, {\n    key: \"appendElement\",\n    value: function appendElement(name, attributes, parent) {\n      if (attributes instanceof DocumentFragment || attributes instanceof Element) {\n        this.insert(this.createElement(name), attributes, 'end');\n      } else {\n        this.insert(this.createElement(name, attributes), parent, 'end');\n      }\n    }\n    /**\n     * Sets value of the attribute with given key on a {@link module:engine/model/item~Item model item}\n     * or on a {@link module:engine/model/range~Range range}.\n     *\n     * @param {String} key Attribute key.\n     * @param {*} value Attribute new value.\n     * @param {module:engine/model/item~Item|module:engine/model/range~Range} itemOrRange\n     * Model item or range on which the attribute will be set.\n     */\n\n  }, {\n    key: \"setAttribute\",\n    value: function setAttribute(key, value, itemOrRange) {\n      this._assertWriterUsedCorrectly();\n\n      if (itemOrRange instanceof Range) {\n        var ranges = itemOrRange.getMinimalFlatRanges();\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = ranges[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var range = _step2.value;\n            setAttributeOnRange(this, key, value, range);\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      } else {\n        setAttributeOnItem(this, key, value, itemOrRange);\n      }\n    }\n    /**\n     * Sets values of attributes on a {@link module:engine/model/item~Item model item}\n     * or on a {@link module:engine/model/range~Range range}.\n     *\n     *\t\twriter.setAttributes( {\n     *\t\t\tbold: true,\n     *\t\t\titalic: true\n     *\t\t}, range );\n     *\n     * @param {Object} attributes Attributes keys and values.\n     * @param {module:engine/model/item~Item|module:engine/model/range~Range} itemOrRange\n     * Model item or range on which the attributes will be set.\n     */\n\n  }, {\n    key: \"setAttributes\",\n    value: function setAttributes(attributes, itemOrRange) {\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = toMap(attributes)[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var _step3$value = _slicedToArray(_step3.value, 2),\n              key = _step3$value[0],\n              val = _step3$value[1];\n\n          this.setAttribute(key, val, itemOrRange);\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n    /**\n     * Removes an attribute with given key from a {@link module:engine/model/item~Item model item}\n     * or from a {@link module:engine/model/range~Range range}.\n     *\n     * @param {String} key Attribute key.\n     * @param {module:engine/model/item~Item|module:engine/model/range~Range} itemOrRange\n     * Model item or range from which the attribute will be removed.\n     */\n\n  }, {\n    key: \"removeAttribute\",\n    value: function removeAttribute(key, itemOrRange) {\n      this._assertWriterUsedCorrectly();\n\n      if (itemOrRange instanceof Range) {\n        var ranges = itemOrRange.getMinimalFlatRanges();\n        var _iteratorNormalCompletion4 = true;\n        var _didIteratorError4 = false;\n        var _iteratorError4 = undefined;\n\n        try {\n          for (var _iterator4 = ranges[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n            var range = _step4.value;\n            setAttributeOnRange(this, key, null, range);\n          }\n        } catch (err) {\n          _didIteratorError4 = true;\n          _iteratorError4 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n              _iterator4.return();\n            }\n          } finally {\n            if (_didIteratorError4) {\n              throw _iteratorError4;\n            }\n          }\n        }\n      } else {\n        setAttributeOnItem(this, key, null, itemOrRange);\n      }\n    }\n    /**\n     * Removes all attributes from all elements in the range or from the given item.\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/range~Range} itemOrRange\n     * Model item or range from which all attributes will be removed.\n     */\n\n  }, {\n    key: \"clearAttributes\",\n    value: function clearAttributes(itemOrRange) {\n      var _this = this;\n\n      this._assertWriterUsedCorrectly();\n\n      var removeAttributesFromItem = function removeAttributesFromItem(item) {\n        var _iteratorNormalCompletion5 = true;\n        var _didIteratorError5 = false;\n        var _iteratorError5 = undefined;\n\n        try {\n          for (var _iterator5 = item.getAttributeKeys()[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n            var attribute = _step5.value;\n\n            _this.removeAttribute(attribute, item);\n          }\n        } catch (err) {\n          _didIteratorError5 = true;\n          _iteratorError5 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n              _iterator5.return();\n            }\n          } finally {\n            if (_didIteratorError5) {\n              throw _iteratorError5;\n            }\n          }\n        }\n      };\n\n      if (!(itemOrRange instanceof Range)) {\n        removeAttributesFromItem(itemOrRange);\n      } else {\n        var _iteratorNormalCompletion6 = true;\n        var _didIteratorError6 = false;\n        var _iteratorError6 = undefined;\n\n        try {\n          for (var _iterator6 = itemOrRange.getItems()[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n            var item = _step6.value;\n            removeAttributesFromItem(item);\n          }\n        } catch (err) {\n          _didIteratorError6 = true;\n          _iteratorError6 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n              _iterator6.return();\n            }\n          } finally {\n            if (_didIteratorError6) {\n              throw _iteratorError6;\n            }\n          }\n        }\n      }\n    }\n    /**\n     * Moves all items in the source range to the target position.\n     *\n     *\t\twriter.move( sourceRange, targetPosition );\n     *\n     * Instead of the target position you can use parent and offset or define that range should be moved to the end\n     * or before or after chosen item:\n     *\n     *\t\t// Moves all items in the range to the paragraph at offset 5:\n     *\t\twriter.move( sourceRange, paragraph, 5 );\n     *\t\t// Moves all items in the range to the end of a blockquote:\n     *\t\twriter.move( sourceRange, blockquote, 'end' );\n     *\t\t// Moves all items in the range to a position after an image:\n     *\t\twriter.move( sourceRange, image, 'after' );\n     *\n     * These parameters works the same way as {@link #createPositionAt `writer.createPositionAt()`}.\n     *\n     * Note that items can be moved only within the same tree. It means that you can move items within the same root\n     * (element or document fragment) or between {@link module:engine/model/document~Document#roots documents roots},\n     * but you can not move items from document fragment to the document or from one detached element to another. Use\n     * {@link module:engine/model/writer~Writer#insert} in such cases.\n     *\n     * @param {module:engine/model/range~Range} range Source range.\n     * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n     * second parameter is a {@link module:engine/model/item~Item model item}.\n     */\n\n  }, {\n    key: \"move\",\n    value: function move(range, itemOrPosition, offset) {\n      this._assertWriterUsedCorrectly();\n\n      if (!(range instanceof Range)) {\n        /**\n         * Invalid range to move.\n         *\n         * @error writer-move-invalid-range\n         */\n        throw new CKEditorError('writer-move-invalid-range: Invalid range to move.');\n      }\n\n      if (!range.isFlat) {\n        /**\n         * Range to move is not flat.\n         *\n         * @error writer-move-range-not-flat\n         */\n        throw new CKEditorError('writer-move-range-not-flat: Range to move is not flat.');\n      }\n\n      var position = Position._createAt(itemOrPosition, offset);\n\n      if (!isSameTree(range.root, position.root)) {\n        /**\n         * Range is going to be moved within not the same document. Please use\n         * {@link module:engine/model/writer~Writer#insert insert} instead.\n         *\n         * @error writer-move-different-document\n         */\n        throw new CKEditorError('writer-move-different-document: Range is going to be moved between different documents.');\n      }\n\n      var version = range.root.document ? range.root.document.version : null;\n      var operation = new MoveOperation(range.start, range.end.offset - range.start.offset, position, version);\n      this.batch.addOperation(operation);\n      this.model.applyOperation(operation);\n    }\n    /**\n     * Removes given model {@link module:engine/model/item~Item item} or {@link module:engine/model/range~Range range}.\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/range~Range} itemOrRange Model item or range to remove.\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(itemOrRange) {\n      this._assertWriterUsedCorrectly();\n\n      if (itemOrRange instanceof Range) {\n        // The array is reversed, so the ranges to remove are in correct order and do not have to be updated.\n        var ranges = itemOrRange.getMinimalFlatRanges().reverse();\n        var _iteratorNormalCompletion7 = true;\n        var _didIteratorError7 = false;\n        var _iteratorError7 = undefined;\n\n        try {\n          for (var _iterator7 = ranges[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n            var flat = _step7.value;\n            applyRemoveOperation(flat.start, flat.end.offset - flat.start.offset, this.batch, this.model);\n          }\n        } catch (err) {\n          _didIteratorError7 = true;\n          _iteratorError7 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n              _iterator7.return();\n            }\n          } finally {\n            if (_didIteratorError7) {\n              throw _iteratorError7;\n            }\n          }\n        }\n      } else {\n        var howMany = itemOrRange.is('text') ? itemOrRange.offsetSize : 1;\n        applyRemoveOperation(Position._createBefore(itemOrRange), howMany, this.batch, this.model);\n      }\n    }\n    /**\n     * Merges two siblings at the given position.\n     *\n     * Node before and after the position have to be an element. Otherwise `writer-merge-no-element-before` or\n     * `writer-merge-no-element-after` error will be thrown.\n     *\n     * @param {module:engine/model/position~Position} position Position between merged elements.\n     */\n\n  }, {\n    key: \"merge\",\n    value: function merge(position) {\n      this._assertWriterUsedCorrectly();\n\n      var nodeBefore = position.nodeBefore;\n      var nodeAfter = position.nodeAfter;\n\n      if (!(nodeBefore instanceof Element)) {\n        /**\n         * Node before merge position must be an element.\n         *\n         * @error writer-merge-no-element-before\n         */\n        throw new CKEditorError('writer-merge-no-element-before: Node before merge position must be an element.');\n      }\n\n      if (!(nodeAfter instanceof Element)) {\n        /**\n         * Node after merge position must be an element.\n         *\n         * @error writer-merge-no-element-after\n         */\n        throw new CKEditorError('writer-merge-no-element-after: Node after merge position must be an element.');\n      }\n\n      if (!position.root.document) {\n        this._mergeDetached(position);\n      } else {\n        this._merge(position);\n      }\n    }\n    /**\n     * Shortcut for {@link module:engine/model/model~Model#createPositionFromPath `Model#createPositionFromPath()`}.\n     *\n     * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} root Root of the position.\n     * @param {Array.<Number>} path Position path. See {@link module:engine/model/position~Position#path}.\n     * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone'] Position stickiness.\n     * See {@link module:engine/model/position~PositionStickiness}.\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"createPositionFromPath\",\n    value: function createPositionFromPath(root, path, stickiness) {\n      return this.model.createPositionFromPath(root, path, stickiness);\n    }\n    /**\n     * Shortcut for {@link module:engine/model/model~Model#createPositionAt `Model#createPositionAt()`}.\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n     * first parameter is a {@link module:engine/model/item~Item model item}.\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"createPositionAt\",\n    value: function createPositionAt(itemOrPosition, offset) {\n      return this.model.createPositionAt(itemOrPosition, offset);\n    }\n    /**\n     * Shortcut for {@link module:engine/model/model~Model#createPositionAfter `Model#createPositionAfter()`}.\n     *\n     * @param {module:engine/model/item~Item} item Item after which the position should be placed.\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"createPositionAfter\",\n    value: function createPositionAfter(item) {\n      return this.model.createPositionAfter(item);\n    }\n    /**\n     * Shortcut for {@link module:engine/model/model~Model#createPositionBefore `Model#createPositionBefore()`}.\n     *\n     * @param {module:engine/model/item~Item} item Item after which the position should be placed.\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"createPositionBefore\",\n    value: function createPositionBefore(item) {\n      return this.model.createPositionBefore(item);\n    }\n    /**\n     * Shortcut for {@link module:engine/model/model~Model#createRange `Model#createRange()`}.\n     *\n     * @param {module:engine/model/position~Position} start Start position.\n     * @param {module:engine/model/position~Position} [end] End position. If not set, range will be collapsed at `start` position.\n     * @returns {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"createRange\",\n    value: function createRange(start, end) {\n      return this.model.createRange(start, end);\n    }\n    /**\n     * Shortcut for {@link module:engine/model/model~Model#createRangeIn `Model#createRangeIn()`}.\n     *\n     * @param {module:engine/model/element~Element} element Element which is a parent for the range.\n     * @returns {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"createRangeIn\",\n    value: function createRangeIn(element) {\n      return this.model.createRangeIn(element);\n    }\n    /**\n     * Shortcut for {@link module:engine/model/model~Model#createRangeOn `Model#createRangeOn()`}.\n     *\n     * @param {module:engine/model/element~Element} element Element which is a parent for the range.\n     * @returns {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"createRangeOn\",\n    value: function createRangeOn(element) {\n      return this.model.createRangeOn(element);\n    }\n    /**\n     * Shortcut for {@link module:engine/model/model~Model#createSelection `Model#createSelection()`}.\n     *\n     * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection|\n     * module:engine/model/position~Position|module:engine/model/element~Element|\n     * Iterable.<module:engine/model/range~Range>|module:engine/model/range~Range|null} selectable\n     * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n     * @param {Object} [options]\n     * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n     * @returns {module:engine/model/selection~Selection}\n     */\n\n  }, {\n    key: \"createSelection\",\n    value: function createSelection(selectable, placeOrOffset, options) {\n      return this.model.createSelection(selectable, placeOrOffset, options);\n    }\n    /**\n     * Performs merge action in a detached tree.\n     *\n     * @private\n     * @param {module:engine/model/position~Position} position Position between merged elements.\n     */\n\n  }, {\n    key: \"_mergeDetached\",\n    value: function _mergeDetached(position) {\n      var nodeBefore = position.nodeBefore;\n      var nodeAfter = position.nodeAfter;\n      this.move(Range._createIn(nodeAfter), Position._createAt(nodeBefore, 'end'));\n      this.remove(nodeAfter);\n    }\n    /**\n     * Performs merge action in a non-detached tree.\n     *\n     * @private\n     * @param {module:engine/model/position~Position} position Position between merged elements.\n     */\n\n  }, {\n    key: \"_merge\",\n    value: function _merge(position) {\n      var targetPosition = Position._createAt(position.nodeBefore, 'end');\n\n      var sourcePosition = Position._createAt(position.nodeAfter, 0);\n\n      var graveyard = position.root.document.graveyard;\n      var graveyardPosition = new Position(graveyard, [0]);\n      var version = position.root.document.version;\n      var merge = new MergeOperation(sourcePosition, position.nodeAfter.maxOffset, targetPosition, graveyardPosition, version);\n      this.batch.addOperation(merge);\n      this.model.applyOperation(merge);\n    }\n    /**\n     * Renames the given element.\n     *\n     * @param {module:engine/model/element~Element} element The element to rename.\n     * @param {String} newName New element name.\n     */\n\n  }, {\n    key: \"rename\",\n    value: function rename(element, newName) {\n      this._assertWriterUsedCorrectly();\n\n      if (!(element instanceof Element)) {\n        /**\n         * Trying to rename an object which is not an instance of Element.\n         *\n         * @error writer-rename-not-element-instance\n         */\n        throw new CKEditorError('writer-rename-not-element-instance: Trying to rename an object which is not an instance of Element.');\n      }\n\n      var version = element.root.document ? element.root.document.version : null;\n      var renameOperation = new RenameOperation(Position._createBefore(element), element.name, newName, version);\n      this.batch.addOperation(renameOperation);\n      this.model.applyOperation(renameOperation);\n    }\n    /**\n     * Splits elements starting from the given position and going to the top of the model tree as long as given\n     * `limitElement` is reached. When `limitElement` is not defined then only the parent of the given position will be split.\n     *\n     * The element needs to have a parent. It cannot be a root element nor a document fragment.\n     * The `writer-split-element-no-parent` error will be thrown if you try to split an element with no parent.\n     *\n     * @param {module:engine/model/position~Position} position Position of split.\n     * @param {module:engine/model/node~Node} [limitElement] Stop splitting when this element will be reached.\n     * @returns {Object} result Split result.\n     * @returns {module:engine/model/position~Position} result.position between split elements.\n     * @returns {module:engine/model/range~Range} result.range Range that stars from the end of the first split element and ands\n     * at the beginning of the first copy element.\n     */\n\n  }, {\n    key: \"split\",\n    value: function split(position, limitElement) {\n      this._assertWriterUsedCorrectly();\n\n      var splitElement = position.parent;\n\n      if (!splitElement.parent) {\n        /**\n         * Element with no parent can not be split.\n         *\n         * @error writer-split-element-no-parent\n         */\n        throw new CKEditorError('writer-split-element-no-parent: Element with no parent can not be split.');\n      } // When limit element is not defined lets set splitElement parent as limit.\n\n\n      if (!limitElement) {\n        limitElement = splitElement.parent;\n      }\n\n      if (!position.parent.getAncestors({\n        includeSelf: true\n      }).includes(limitElement)) {\n        throw new CKEditorError('writer-split-invalid-limit-element: Limit element is not a position ancestor.');\n      } // We need to cache elements that will be created as a result of the first split because\n      // we need to create a range from the end of the first split element to the beginning of the\n      // first copy element. This should be handled by LiveRange but it doesn't work on detached nodes.\n\n\n      var firstSplitElement, firstCopyElement;\n\n      do {\n        var version = splitElement.root.document ? splitElement.root.document.version : null;\n        var howMany = splitElement.maxOffset - position.offset;\n        var split = new SplitOperation(position, howMany, null, version);\n        this.batch.addOperation(split);\n        this.model.applyOperation(split); // Cache result of the first split.\n\n        if (!firstSplitElement && !firstCopyElement) {\n          firstSplitElement = splitElement;\n          firstCopyElement = position.parent.nextSibling;\n        }\n\n        position = this.createPositionAfter(position.parent);\n        splitElement = position.parent;\n      } while (splitElement !== limitElement);\n\n      return {\n        position: position,\n        range: new Range(Position._createAt(firstSplitElement, 'end'), Position._createAt(firstCopyElement, 0))\n      };\n    }\n    /**\n     * Wraps the given range with the given element or with a new element (if a string was passed).\n     *\n     * **Note:** range to wrap should be a \"flat range\" (see {@link module:engine/model/range~Range#isFlat `Range#isFlat`}).\n     * If not, an error will be thrown.\n     *\n     * @param {module:engine/model/range~Range} range Range to wrap.\n     * @param {module:engine/model/element~Element|String} elementOrString Element or name of element to wrap the range with.\n     */\n\n  }, {\n    key: \"wrap\",\n    value: function wrap(range, elementOrString) {\n      this._assertWriterUsedCorrectly();\n\n      if (!range.isFlat) {\n        /**\n         * Range to wrap is not flat.\n         *\n         * @error writer-wrap-range-not-flat\n         */\n        throw new CKEditorError('writer-wrap-range-not-flat: Range to wrap is not flat.');\n      }\n\n      var element = elementOrString instanceof Element ? elementOrString : new Element(elementOrString);\n\n      if (element.childCount > 0) {\n        /**\n         * Element to wrap with is not empty.\n         *\n         * @error writer-wrap-element-not-empty\n         */\n        throw new CKEditorError('writer-wrap-element-not-empty: Element to wrap with is not empty.');\n      }\n\n      if (element.parent !== null) {\n        /**\n         * Element to wrap with is already attached to a tree model.\n         *\n         * @error writer-wrap-element-attached\n         */\n        throw new CKEditorError('writer-wrap-element-attached: Element to wrap with is already attached to tree model.');\n      }\n\n      var version = range.root.document ? range.root.document.version : null; // Has to be `range.start` not `range.end` for better transformations.\n\n      var insert = new InsertOperation(range.start, element, version);\n      this.batch.addOperation(insert);\n      this.model.applyOperation(insert);\n      var move = new MoveOperation(range.start.getShiftedBy(1), range.end.offset - range.start.offset, Position._createAt(element, 0), version === null ? null : version + 1);\n      this.batch.addOperation(move);\n      this.model.applyOperation(move);\n    }\n    /**\n     * Unwraps children of the given element – all its children are moved before it and then the element is removed.\n     * Throws error if you try to unwrap an element which does not have a parent.\n     *\n     * @param {module:engine/model/element~Element} element Element to unwrap.\n     */\n\n  }, {\n    key: \"unwrap\",\n    value: function unwrap(element) {\n      this._assertWriterUsedCorrectly();\n\n      if (element.parent === null) {\n        /**\n         * Trying to unwrap an element which has no parent.\n         *\n         * @error writer-unwrap-element-no-parent\n         */\n        throw new CKEditorError('writer-unwrap-element-no-parent: Trying to unwrap an element which has no parent.');\n      }\n\n      this.move(Range._createIn(element), this.createPositionAfter(element));\n      this.remove(element);\n    }\n    /**\n     * Adds a {@link module:engine/model/markercollection~Marker marker}. Marker is a named range, which tracks\n     * changes in the document and updates its range automatically, when model tree changes.\n     *\n     * As the first parameter you can set marker name.\n     *\n     * The required `options.usingOperation` parameter lets you decide if the marker should be managed by operations or not. See\n     * {@link module:engine/model/markercollection~Marker marker class description} to learn about the difference between\n     * markers managed by operations and not-managed by operations.\n     *\n     * The `options.affectsData` parameter, which defaults to `false`, allows you to define if a marker affects the data. It should be\n     * `true` when the marker change changes the data returned by the\n     * {@link module:core/editor/utils/dataapimixin~DataApi#getData `editor.getData()`} method.\n     * When set to `true` it fires the {@link module:engine/model/document~Document#event:change:data `change:data`} event.\n     * When set to `false` it fires the {@link module:engine/model/document~Document#event:change `change`} event.\n     *\n     * Create marker directly base on marker's name:\n     *\n     *\t\taddMarker( markerName, { range, usingOperation: false } );\n     *\n     * Create marker using operation:\n     *\n     *\t\taddMarker( markerName, { range, usingOperation: true } );\n     *\n     * Create marker that affects the editor data:\n     *\n     *\t\taddMarker( markerName, { range, usingOperation: false, affectsData: true } );\n     *\n     * Note: For efficiency reasons, it's best to create and keep as little markers as possible.\n     *\n     * @see module:engine/model/markercollection~Marker\n     * @param {String} name Name of a marker to create - must be unique.\n     * @param {Object} options\n     * @param {Boolean} options.usingOperation Flag indicating that the marker should be added by MarkerOperation.\n     * See {@link module:engine/model/markercollection~Marker#managedUsingOperations}.\n     * @param {module:engine/model/range~Range} options.range Marker range.\n     * @param {Boolean} [options.affectsData=false] Flag indicating that the marker changes the editor data.\n     * @returns {module:engine/model/markercollection~Marker} Marker that was set.\n     */\n\n  }, {\n    key: \"addMarker\",\n    value: function addMarker(name, options) {\n      this._assertWriterUsedCorrectly();\n\n      if (!options || typeof options.usingOperation != 'boolean') {\n        /**\n         * The `options.usingOperations` parameter is required when adding a new marker.\n         *\n         * @error writer-addMarker-no-usingOperations\n         */\n        throw new CKEditorError('writer-addMarker-no-usingOperations: The options.usingOperations parameter is required when adding a new marker.');\n      }\n\n      var usingOperation = options.usingOperation;\n      var range = options.range;\n      var affectsData = options.affectsData === undefined ? false : options.affectsData;\n\n      if (this.model.markers.has(name)) {\n        /**\n         * Marker with provided name already exists.\n         *\n         * @error writer-addMarker-marker-exists\n         */\n        throw new CKEditorError('writer-addMarker-marker-exists: Marker with provided name already exists.');\n      }\n\n      if (!range) {\n        /**\n         * Range parameter is required when adding a new marker.\n         *\n         * @error writer-addMarker-no-range\n         */\n        throw new CKEditorError('writer-addMarker-no-range: Range parameter is required when adding a new marker.');\n      }\n\n      if (!usingOperation) {\n        return this.model.markers._set(name, range, usingOperation, affectsData);\n      }\n\n      applyMarkerOperation(this, name, null, range, affectsData);\n      return this.model.markers.get(name);\n    }\n    /**\n     * Adds or updates a {@link module:engine/model/markercollection~Marker marker}. Marker is a named range, which tracks\n     * changes in the document and updates its range automatically, when model tree changes. Still, it is possible to change the\n     * marker's range directly using this method.\n     *\n     * As the first parameter you can set marker name or instance. If none of them is provided, new marker, with a unique\n     * name is created and returned.\n     *\n     * The `options.usingOperation` parameter lets you change if the marker should be managed by operations or not. See\n     * {@link module:engine/model/markercollection~Marker marker class description} to learn about the difference between\n     * markers managed by operations and not-managed by operations. It is possible to change this option for an existing marker.\n     *\n     * The `options.affectsData` parameter, which defaults to `false`, allows you to define if a marker affects the data. It should be\n     * `true` when the marker change changes the data returned by\n     * the {@link module:core/editor/utils/dataapimixin~DataApi#getData `editor.getData()`} method.\n     * When set to `true` it fires the {@link module:engine/model/document~Document#event:change:data `change:data`} event.\n     * When set to `false` it fires the {@link module:engine/model/document~Document#event:change `change`} event.\n     *\n     * Update marker directly base on marker's name:\n     *\n     *\t\tupdateMarker( markerName, { range } );\n     *\n     * Update marker using operation:\n     *\n     *\t\tupdateMarker( marker, { range, usingOperation: true } );\n     *\t\tupdateMarker( markerName, { range, usingOperation: true } );\n     *\n     * Change marker's option (start using operations to manage it):\n     *\n     *\t\tupdateMarker( marker, { usingOperation: true } );\n     *\n     * Change marker's option (inform the engine, that the marker does not affect the data anymore):\n     *\n     *\t\tupdateMarker( markerName, { affectsData: false } );\n     *\n     * @see module:engine/model/markercollection~Marker\n     * @param {String} markerOrName Name of a marker to update, or a marker instance.\n     * @param {Object} options\n     * @param {module:engine/model/range~Range} [options.range] Marker range to update.\n     * @param {Boolean} [options.usingOperation] Flag indicated whether the marker should be added by MarkerOperation.\n     * See {@link module:engine/model/markercollection~Marker#managedUsingOperations}.\n     * @param {Boolean} [options.affectsData] Flag indicating that the marker changes the editor data.\n     */\n\n  }, {\n    key: \"updateMarker\",\n    value: function updateMarker(markerOrName) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      this._assertWriterUsedCorrectly();\n\n      var markerName = typeof markerOrName == 'string' ? markerOrName : markerOrName.name;\n      var currentMarker = this.model.markers.get(markerName);\n\n      if (!currentMarker) {\n        /**\n         * Marker with provided name does not exists.\n         *\n         * @error writer-updateMarker-marker-not-exists\n         */\n        throw new CKEditorError('writer-updateMarker-marker-not-exists: Marker with provided name does not exists.');\n      }\n\n      var hasUsingOperationDefined = typeof options.usingOperation == 'boolean';\n      var affectsDataDefined = typeof options.affectsData == 'boolean'; // Use previously defined marker's affectsData if the property is not provided.\n\n      var affectsData = affectsDataDefined ? options.affectsData : currentMarker.affectsData;\n\n      if (!hasUsingOperationDefined && !options.range && !affectsDataDefined) {\n        /**\n         * One of the options is required - provide range, usingOperations or affectsData.\n         *\n         * @error writer-updateMarker-wrong-options\n         */\n        throw new CKEditorError('writer-updateMarker-wrong-options: One of the options is required - provide range, usingOperations or affectsData.');\n      }\n\n      var currentRange = currentMarker.getRange();\n      var updatedRange = options.range ? options.range : currentRange;\n\n      if (hasUsingOperationDefined && options.usingOperation !== currentMarker.managedUsingOperations) {\n        // The marker type is changed so it's necessary to create proper operations.\n        if (options.usingOperation) {\n          // If marker changes to a managed one treat this as synchronizing existing marker.\n          // Create `MarkerOperation` with `oldRange` set to `null`, so reverse operation will remove the marker.\n          applyMarkerOperation(this, markerName, null, updatedRange, affectsData);\n        } else {\n          // If marker changes to a marker that do not use operations then we need to create additional operation\n          // that removes that marker first.\n          applyMarkerOperation(this, markerName, currentRange, null, affectsData); // Although not managed the marker itself should stay in model and its range should be preserver or changed to passed range.\n\n          this.model.markers._set(markerName, updatedRange, undefined, affectsData);\n        }\n\n        return;\n      } // Marker's type doesn't change so update it accordingly.\n\n\n      if (currentMarker.managedUsingOperations) {\n        applyMarkerOperation(this, markerName, currentRange, updatedRange, affectsData);\n      } else {\n        this.model.markers._set(markerName, updatedRange, undefined, affectsData);\n      }\n    }\n    /**\n     * Removes given {@link module:engine/model/markercollection~Marker marker} or marker with given name.\n     * The marker is removed accordingly to how it has been created, so if the marker was created using operation,\n     * it will be destroyed using operation.\n     *\n     * @param {module:engine/model/markercollection~Marker|String} markerOrName Marker or marker name to remove.\n     */\n\n  }, {\n    key: \"removeMarker\",\n    value: function removeMarker(markerOrName) {\n      this._assertWriterUsedCorrectly();\n\n      var name = typeof markerOrName == 'string' ? markerOrName : markerOrName.name;\n\n      if (!this.model.markers.has(name)) {\n        /**\n         * Trying to remove marker which does not exist.\n         *\n         * @error writer-removeMarker-no-marker\n         */\n        throw new CKEditorError('writer-removeMarker-no-marker: Trying to remove marker which does not exist.');\n      }\n\n      var marker = this.model.markers.get(name);\n\n      if (!marker.managedUsingOperations) {\n        this.model.markers._remove(name);\n\n        return;\n      }\n\n      var oldRange = marker.getRange();\n      applyMarkerOperation(this, name, oldRange, null, marker.affectsData);\n    }\n    /**\n     * Sets the document's selection (ranges and direction) to the specified location based on:\n     *\n     * * the given {@link module:engine/model/selection~Selection selection},\n     * * or the given {@link module:engine/model/position~Position position},\n     * * or the given {@link module:engine/model/range~Range range},\n     * * or the given iterable of {@link module:engine/model/range~Range ranges},\n     * * or the given {@link module:engine/model/node~Node node},\n     * * or `null`.\n     *\n     *\t\t// Sets selection to the given range.\n     *\t\tconst range = writer.createRange( start, end );\n     *\t\twriter.setSelection( range );\n     *\n     *\t\t// Sets selection to given ranges.\n     *\t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n     *\t\twriter.setSelection( range );\n     *\n     *\t\t// Sets selection to other selection.\n     *\t\tconst otherSelection = writer.createSelection();\n     *\t\twriter.setSelection( otherSelection );\n     *\n     *\t\t// Sets selection to the given document selection.\n     *\t\tconst documentSelection = model.document.selection;\n     *\t\twriter.setSelection( documentSelection );\n     *\n     *\t\t// Sets collapsed selection at the given position.\n     *\t\tconst position = writer.createPosition( root, path );\n     *\t\twriter.setSelection( position );\n     *\n     *\t\t// Sets collapsed selection at the position of the given node and an offset.\n     *\t\twriter.setSelection( paragraph, offset );\n     *\n     * Creates a range inside an {@link module:engine/model/element~Element element} which starts before the first child of\n    \t * that element and ends after the last child of that element.\n     *\n     *\t\twriter.setSelection( paragraph, 'in' );\n     *\n     * Creates a range on an {@link module:engine/model/item~Item item} which starts before the item and ends just after the item.\n     *\n     *\t\twriter.setSelection( paragraph, 'on' );\n     *\n     *\t\t// Removes all selection's ranges.\n     *\t\twriter.setSelection( null );\n     *\n     * `Writer#setSelection()` allow passing additional options (`backward`) as the last argument.\n     *\n     *\t\t// Sets selection as backward.\n     *\t\twriter.setSelection( range, { backward: true } );\n     *\n     * Throws `writer-incorrect-use` error when the writer is used outside the `change()` block.\n     *\n     * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection|\n     * module:engine/model/position~Position|module:engine/model/node~Node|\n     * Iterable.<module:engine/model/range~Range>|module:engine/model/range~Range|null} selectable\n     * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n     * @param {Object} [options]\n     * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n     */\n\n  }, {\n    key: \"setSelection\",\n    value: function setSelection(selectable, placeOrOffset, options) {\n      this._assertWriterUsedCorrectly();\n\n      this.model.document.selection._setTo(selectable, placeOrOffset, options);\n    }\n    /**\n     * Moves {@link module:engine/model/documentselection~DocumentSelection#focus} to the specified location.\n     *\n     * The location can be specified in the same form as\n     * {@link #createPositionAt `writer.createPositionAt()`} parameters.\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset=0] Offset or one of the flags. Used only when\n     * first parameter is a {@link module:engine/model/item~Item model item}.\n     */\n\n  }, {\n    key: \"setSelectionFocus\",\n    value: function setSelectionFocus(itemOrPosition, offset) {\n      this._assertWriterUsedCorrectly();\n\n      this.model.document.selection._setFocus(itemOrPosition, offset);\n    }\n    /**\n     * Sets attribute(s) on the selection. If attribute with the same key already is set, it's value is overwritten.\n     *\n     * Using key and value pair:\n     *\n     * \twriter.setSelectionAttribute( 'italic', true );\n     *\n     * Using key-value object:\n     *\n     * \twriter.setSelectionAttribute( { italic: true, bold: false } );\n     *\n     * Using iterable object:\n     *\n     * \twriter.setSelectionAttribute( new Map( [ [ 'italic', true ] ] ) );\n     *\n     * @param {String|Object|Iterable.<*>} keyOrObjectOrIterable Key of the attribute to set\n     * or object / iterable of key => value attribute pairs.\n     * @param {*} [value] Attribute value.\n     */\n\n  }, {\n    key: \"setSelectionAttribute\",\n    value: function setSelectionAttribute(keyOrObjectOrIterable, value) {\n      this._assertWriterUsedCorrectly();\n\n      if (typeof keyOrObjectOrIterable === 'string') {\n        this._setSelectionAttribute(keyOrObjectOrIterable, value);\n      } else {\n        var _iteratorNormalCompletion8 = true;\n        var _didIteratorError8 = false;\n        var _iteratorError8 = undefined;\n\n        try {\n          for (var _iterator8 = toMap(keyOrObjectOrIterable)[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n            var _step8$value = _slicedToArray(_step8.value, 2),\n                key = _step8$value[0],\n                _value = _step8$value[1];\n\n            this._setSelectionAttribute(key, _value);\n          }\n        } catch (err) {\n          _didIteratorError8 = true;\n          _iteratorError8 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n              _iterator8.return();\n            }\n          } finally {\n            if (_didIteratorError8) {\n              throw _iteratorError8;\n            }\n          }\n        }\n      }\n    }\n    /**\n     * Removes attribute(s) with given key(s) from the selection.\n     *\n     * Remove one attribute:\n     *\n     *\t\twriter.removeSelectionAttribute( 'italic' );\n     *\n     * Remove multiple attributes:\n     *\n     *\t\twriter.removeSelectionAttribute( [ 'italic', 'bold' ] );\n     *\n     * @param {String|Iterable.<String>} keyOrIterableOfKeys Key of the attribute to remove or an iterable of attribute keys to remove.\n     */\n\n  }, {\n    key: \"removeSelectionAttribute\",\n    value: function removeSelectionAttribute(keyOrIterableOfKeys) {\n      this._assertWriterUsedCorrectly();\n\n      if (typeof keyOrIterableOfKeys === 'string') {\n        this._removeSelectionAttribute(keyOrIterableOfKeys);\n      } else {\n        var _iteratorNormalCompletion9 = true;\n        var _didIteratorError9 = false;\n        var _iteratorError9 = undefined;\n\n        try {\n          for (var _iterator9 = keyOrIterableOfKeys[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n            var key = _step9.value;\n\n            this._removeSelectionAttribute(key);\n          }\n        } catch (err) {\n          _didIteratorError9 = true;\n          _iteratorError9 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion9 && _iterator9.return != null) {\n              _iterator9.return();\n            }\n          } finally {\n            if (_didIteratorError9) {\n              throw _iteratorError9;\n            }\n          }\n        }\n      }\n    }\n    /**\n     * Temporarily changes the {@link module:engine/model/documentselection~DocumentSelection#isGravityOverridden gravity}\n     * of the selection from left to right.\n     *\n     * The gravity defines from which direction the selection inherits its attributes. If it's the default left gravity,\n     * then the selection (after being moved by the user) inherits attributes from its left-hand side.\n     * This method allows to temporarily override this behavior by forcing the gravity to the right.\n     *\n     * For the following model fragment:\n     *\n     *\t\t<$text bold=\"true\" linkHref=\"url\">bar[]</$text><$text bold=\"true\">biz</$text>\n     *\n     * * Default gravity: selection will have the `bold` and `linkHref` attributes.\n     * * Overridden gravity: selection will have `bold` attribute.\n     *\n     * **Note**: It returns an unique identifier which is required to restore the gravity. It guarantees the symmetry\n     * of the process.\n     *\n     * @returns {String} The unique id which allows restoring the gravity.\n     */\n\n  }, {\n    key: \"overrideSelectionGravity\",\n    value: function overrideSelectionGravity() {\n      return this.model.document.selection._overrideGravity();\n    }\n    /**\n     * Restores {@link ~Writer#overrideSelectionGravity} gravity to default.\n     *\n     * Restoring the gravity is only possible using the unique identifier returned by\n     * {@link ~Writer#overrideSelectionGravity}. Note that the gravity remains overridden as long as won't be restored\n     * the same number of times it was overridden.\n     *\n     * @param {String} uid The unique id returned by {@link ~Writer#overrideSelectionGravity}.\n     */\n\n  }, {\n    key: \"restoreSelectionGravity\",\n    value: function restoreSelectionGravity(uid) {\n      this.model.document.selection._restoreGravity(uid);\n    }\n    /**\n     * @private\n     * @param {String} key Key of the attribute to remove.\n     * @param {*} value Attribute value.\n     */\n\n  }, {\n    key: \"_setSelectionAttribute\",\n    value: function _setSelectionAttribute(key, value) {\n      var selection = this.model.document.selection; // Store attribute in parent element if the selection is collapsed in an empty node.\n\n      if (selection.isCollapsed && selection.anchor.parent.isEmpty) {\n        var storeKey = DocumentSelection._getStoreAttributeKey(key);\n\n        this.setAttribute(storeKey, value, selection.anchor.parent);\n      }\n\n      selection._setAttribute(key, value);\n    }\n    /**\n     * @private\n     * @param {String} key Key of the attribute to remove.\n     */\n\n  }, {\n    key: \"_removeSelectionAttribute\",\n    value: function _removeSelectionAttribute(key) {\n      var selection = this.model.document.selection; // Remove stored attribute from parent element if the selection is collapsed in an empty node.\n\n      if (selection.isCollapsed && selection.anchor.parent.isEmpty) {\n        var storeKey = DocumentSelection._getStoreAttributeKey(key);\n\n        this.removeAttribute(storeKey, selection.anchor.parent);\n      }\n\n      selection._removeAttribute(key);\n    }\n    /**\n     * Throws `writer-detached-writer-tries-to-modify-model` error when the writer is used outside of the `change()` block.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_assertWriterUsedCorrectly\",\n    value: function _assertWriterUsedCorrectly() {\n      /**\n       * Trying to use a writer outside a {@link module:engine/model/model~Model#change `change()` or\n       * {@link module:engine/model/model~Model#enqueueChange `enqueueChange()`} blocks.\n       *\n       * The writer can only be used inside these blocks which ensures that the model\n       * can only be changed during such \"sessions\".\n       *\n       * @error writer-incorrect-use\n       */\n      if (this.model._currentWriter !== this) {\n        throw new CKEditorError('writer-incorrect-use: Trying to use a writer outside the change() block.');\n      }\n    }\n  }]);\n\n  return Writer;\n}(); // Sets given attribute to each node in given range. When attribute value is null then attribute will be removed.\n//\n// Because attribute operation needs to have the same attribute value on the whole range, this function splits\n// the range into smaller parts.\n//\n// Given `range` must be flat.\n//\n// @private\n// @param {module:engine/model/writer~Writer} writer\n// @param {String} key Attribute key.\n// @param {*} value Attribute new value.\n// @param {module:engine/model/range~Range} range Model range on which the attribute will be set.\n\n\nexport { Writer as default };\n\nfunction setAttributeOnRange(writer, key, value, range) {\n  var model = writer.model;\n  var doc = model.document; // Position of the last split, the beginning of the new range.\n\n  var lastSplitPosition = range.start; // Currently position in the scanning range. Because we need value after the position, it is not a current\n  // position of the iterator but the previous one (we need to iterate one more time to get the value after).\n\n  var position; // Value before the currently position.\n\n  var valueBefore; // Value after the currently position.\n\n  var valueAfter;\n  var _iteratorNormalCompletion10 = true;\n  var _didIteratorError10 = false;\n  var _iteratorError10 = undefined;\n\n  try {\n    for (var _iterator10 = range.getWalker({\n      shallow: true\n    })[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n      var val = _step10.value;\n      valueAfter = val.item.getAttribute(key); // At the first run of the iterator the position in undefined. We also do not have a valueBefore, but\n      // because valueAfter may be null, valueBefore may be equal valueAfter ( undefined == null ).\n\n      if (position && valueBefore != valueAfter) {\n        // if valueBefore == value there is nothing to change, so we add operation only if these values are different.\n        if (valueBefore != value) {\n          addOperation();\n        }\n\n        lastSplitPosition = position;\n      }\n\n      position = val.nextPosition;\n      valueBefore = valueAfter;\n    } // Because position in the loop is not the iterator position (see let position comment), the last position in\n    // the while loop will be last but one position in the range. We need to check the last position manually.\n\n  } catch (err) {\n    _didIteratorError10 = true;\n    _iteratorError10 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion10 && _iterator10.return != null) {\n        _iterator10.return();\n      }\n    } finally {\n      if (_didIteratorError10) {\n        throw _iteratorError10;\n      }\n    }\n  }\n\n  if (position instanceof Position && position != lastSplitPosition && valueBefore != value) {\n    addOperation();\n  }\n\n  function addOperation() {\n    var range = new Range(lastSplitPosition, position);\n    var version = range.root.document ? doc.version : null;\n    var operation = new AttributeOperation(range, key, valueBefore, value, version);\n    writer.batch.addOperation(operation);\n    model.applyOperation(operation);\n  }\n} // Sets given attribute to the given node. When attribute value is null then attribute will be removed.\n//\n// @private\n// @param {module:engine/model/writer~Writer} writer\n// @param {String} key Attribute key.\n// @param {*} value Attribute new value.\n// @param {module:engine/model/item~Item} item Model item on which the attribute will be set.\n\n\nfunction setAttributeOnItem(writer, key, value, item) {\n  var model = writer.model;\n  var doc = model.document;\n  var previousValue = item.getAttribute(key);\n  var range, operation;\n\n  if (previousValue != value) {\n    var isRootChanged = item.root === item;\n\n    if (isRootChanged) {\n      // If we change attributes of root element, we have to use `RootAttributeOperation`.\n      var version = item.document ? doc.version : null;\n      operation = new RootAttributeOperation(item, key, previousValue, value, version);\n    } else {\n      range = new Range(Position._createBefore(item), writer.createPositionAfter(item));\n\n      var _version = range.root.document ? doc.version : null;\n\n      operation = new AttributeOperation(range, key, previousValue, value, _version);\n    }\n\n    writer.batch.addOperation(operation);\n    model.applyOperation(operation);\n  }\n} // Creates and applies marker operation to {@link module:engine/model/operation/operation~Operation operation}.\n//\n// @private\n// @param {module:engine/model/writer~Writer} writer\n// @param {String} name Marker name.\n// @param {module:engine/model/range~Range} oldRange Marker range before the change.\n// @param {module:engine/model/range~Range} newRange Marker range after the change.\n// @param {Boolean} affectsData\n\n\nfunction applyMarkerOperation(writer, name, oldRange, newRange, affectsData) {\n  var model = writer.model;\n  var doc = model.document;\n  var operation = new MarkerOperation(name, oldRange, newRange, model.markers, affectsData, doc.version);\n  writer.batch.addOperation(operation);\n  model.applyOperation(operation);\n} // Creates `MoveOperation` or `DetachOperation` that removes `howMany` nodes starting from `position`.\n// The operation will be applied on given model instance and added to given operation instance.\n//\n// @private\n// @param {module:engine/model/position~Position} position Position from which nodes are removed.\n// @param {Number} howMany Number of nodes to remove.\n// @param {Batch} batch Batch to which the operation will be added.\n// @param {module:engine/model/model~Model} model Model instance on which operation will be applied.\n\n\nfunction applyRemoveOperation(position, howMany, batch, model) {\n  var operation;\n\n  if (position.root.document) {\n    var doc = model.document;\n    var graveyardPosition = new Position(doc.graveyard, [0]);\n    operation = new MoveOperation(position, howMany, graveyardPosition, doc.version);\n  } else {\n    operation = new DetachOperation(position, howMany);\n  }\n\n  batch.addOperation(operation);\n  model.applyOperation(operation);\n} // Returns `true` if both root elements are the same element or both are documents root elements.\n//\n// Elements in the same tree can be moved (for instance you can move element form one documents root to another, or\n// within the same document fragment), but when element supposed to be moved from document fragment to the document, or\n// to another document it should be removed and inserted to avoid problems with OT. This is because features like undo or\n// collaboration may track changes on the document but ignore changes on detached fragments and should not get\n// unexpected `move` operation.\n\n\nfunction isSameTree(rootA, rootB) {\n  // If it is the same root this is the same tree.\n  if (rootA === rootB) {\n    return true;\n  } // If both roots are documents root it is operation within the document what we still treat as the same tree.\n\n\n  if (rootA instanceof RootElement && rootB instanceof RootElement) {\n    return true;\n  }\n\n  return false;\n}","function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/differ\n */\nimport Position from './position';\nimport Range from './range';\n/**\n * Calculates the difference between two model states.\n *\n * Receives operations that are to be applied on the model document. Marks parts of the model document tree which\n * are changed and saves the state of these elements before the change. Then, it compares saved elements with the\n * changed elements, after all changes are applied on the model document. Calculates the diff between saved\n * elements and new ones and returns a change set.\n */\n\nvar Differ =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a `Differ` instance.\n   *\n   * @param {module:engine/model/markercollection~MarkerCollection} markerCollection Model's marker collection.\n   */\n  function Differ(markerCollection) {\n    _classCallCheck(this, Differ);\n\n    /**\n     * Reference to the model's marker collection.\n     *\n     * @private\n     * @type {module:engine/model/markercollection~MarkerCollection}\n     */\n    this._markerCollection = markerCollection;\n    /**\n     * A map that stores changes that happened in a given element.\n     *\n     * The keys of the map are references to the model elements.\n     * The values of the map are arrays with changes that were done on this element.\n     *\n     * @private\n     * @type {Map}\n     */\n\n    this._changesInElement = new Map();\n    /**\n     * A map that stores \"element's children snapshots\". A snapshot is representing children of a given element before\n     * the first change was applied on that element. Snapshot items are objects with two properties: `name`,\n     * containing the element name (or `'$text'` for a text node) and `attributes` which is a map of the node's attributes.\n     *\n     * @private\n     * @type {Map}\n     */\n\n    this._elementSnapshots = new Map();\n    /**\n     * A map that stores all changed markers.\n     *\n     * The keys of the map are marker names.\n     * The values of the map are objects with the `oldRange` and `newRange` properties. They store the marker range\n     * state before and after the change.\n     *\n     * @private\n     * @type {Map}\n     */\n\n    this._changedMarkers = new Map();\n    /**\n     * Stores the number of changes that were processed. Used to order the changes chronologically. It is important\n     * when changes are sorted.\n     *\n     * @private\n     * @type {Number}\n     */\n\n    this._changeCount = 0;\n    /**\n     * For efficiency purposes, `Differ` stores the change set returned by the differ after {@link #getChanges} call.\n     * Cache is reset each time a new operation is buffered. If the cache has not been reset, {@link #getChanges} will\n     * return the cached value instead of calculating it again.\n     *\n     * This property stores those changes that did not take place in graveyard root.\n     *\n     * @private\n     * @type {Array.<Object>|null}\n     */\n\n    this._cachedChanges = null;\n    /**\n     * For efficiency purposes, `Differ` stores the change set returned by the differ after the {@link #getChanges} call.\n     * The cache is reset each time a new operation is buffered. If the cache has not been reset, {@link #getChanges} will\n     * return the cached value instead of calculating it again.\n     *\n     * This property stores all changes evaluated by `Differ`, including those that took place in the graveyard.\n     *\n     * @private\n     * @type {Array.<Object>|null}\n     */\n\n    this._cachedChangesWithGraveyard = null;\n  }\n  /**\n   * Informs whether there are any changes buffered in `Differ`.\n   *\n   * @readonly\n   * @type {Boolean}\n   */\n\n\n  _createClass(Differ, [{\n    key: \"bufferOperation\",\n\n    /**\n     * Buffers the given operation. An operation has to be buffered before it is executed.\n     *\n     * Operation type is checked and it is checked which nodes it will affect. These nodes are then stored in `Differ`\n     * in the state before the operation is executed.\n     *\n     * @param {module:engine/model/operation/operation~Operation} operation An operation to buffer.\n     */\n    value: function bufferOperation(operation) {\n      // Below we take an operation, check its type, then use its parameters in marking (private) methods.\n      // The general rule is to not mark elements inside inserted element. All inserted elements are re-rendered.\n      // Marking changes in them would cause a \"double\" changing then.\n      //\n      switch (operation.type) {\n        case 'insert':\n          {\n            if (this._isInInsertedElement(operation.position.parent)) {\n              return;\n            }\n\n            this._markInsert(operation.position.parent, operation.position.offset, operation.nodes.maxOffset);\n\n            break;\n          }\n\n        case 'addAttribute':\n        case 'removeAttribute':\n        case 'changeAttribute':\n          {\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n              for (var _iterator = operation.range.getItems()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var item = _step.value;\n\n                if (this._isInInsertedElement(item.parent)) {\n                  continue;\n                }\n\n                this._markAttribute(item);\n              }\n            } catch (err) {\n              _didIteratorError = true;\n              _iteratorError = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                  _iterator.return();\n                }\n              } finally {\n                if (_didIteratorError) {\n                  throw _iteratorError;\n                }\n              }\n            }\n\n            break;\n          }\n\n        case 'remove':\n        case 'move':\n        case 'reinsert':\n          {\n            var sourceParentInserted = this._isInInsertedElement(operation.sourcePosition.parent);\n\n            var targetParentInserted = this._isInInsertedElement(operation.targetPosition.parent);\n\n            if (!sourceParentInserted) {\n              this._markRemove(operation.sourcePosition.parent, operation.sourcePosition.offset, operation.howMany);\n            }\n\n            if (!targetParentInserted) {\n              this._markInsert(operation.targetPosition.parent, operation.getMovedRangeStart().offset, operation.howMany);\n            }\n\n            break;\n          }\n\n        case 'rename':\n          {\n            if (this._isInInsertedElement(operation.position.parent)) {\n              return;\n            }\n\n            this._markRemove(operation.position.parent, operation.position.offset, 1);\n\n            this._markInsert(operation.position.parent, operation.position.offset, 1);\n\n            var range = Range._createFromPositionAndShift(operation.position, 1);\n\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n              for (var _iterator2 = this._markerCollection.getMarkersIntersectingRange(range)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                var marker = _step2.value;\n                var markerRange = marker.getRange();\n                this.bufferMarkerChange(marker.name, markerRange, markerRange, marker.affectsData);\n              }\n            } catch (err) {\n              _didIteratorError2 = true;\n              _iteratorError2 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                  _iterator2.return();\n                }\n              } finally {\n                if (_didIteratorError2) {\n                  throw _iteratorError2;\n                }\n              }\n            }\n\n            break;\n          }\n\n        case 'split':\n          {\n            var splitElement = operation.splitPosition.parent; // Mark that children of the split element were removed.\n\n            if (!this._isInInsertedElement(splitElement)) {\n              this._markRemove(splitElement, operation.splitPosition.offset, operation.howMany);\n            } // Mark that the new element (split copy) was inserted.\n\n\n            if (!this._isInInsertedElement(operation.insertionPosition.parent)) {\n              this._markInsert(operation.insertionPosition.parent, operation.insertionPosition.offset, 1);\n            } // If the split took the element from the graveyard, mark that the element from the graveyard was removed.\n\n\n            if (operation.graveyardPosition) {\n              this._markRemove(operation.graveyardPosition.parent, operation.graveyardPosition.offset, 1);\n            }\n\n            break;\n          }\n\n        case 'merge':\n          {\n            // Mark that the merged element was removed.\n            var mergedElement = operation.sourcePosition.parent;\n\n            if (!this._isInInsertedElement(mergedElement.parent)) {\n              this._markRemove(mergedElement.parent, mergedElement.startOffset, 1);\n            } // Mark that the merged element was inserted into graveyard.\n\n\n            var graveyardParent = operation.graveyardPosition.parent;\n\n            this._markInsert(graveyardParent, operation.graveyardPosition.offset, 1); // Mark that children of merged element were inserted at new parent.\n\n\n            var mergedIntoElement = operation.targetPosition.parent;\n\n            if (!this._isInInsertedElement(mergedIntoElement)) {\n              this._markInsert(mergedIntoElement, operation.targetPosition.offset, mergedElement.maxOffset);\n            }\n\n            break;\n          }\n      } // Clear cache after each buffered operation as it is no longer valid.\n\n\n      this._cachedChanges = null;\n    }\n    /**\n     * Buffers a marker change.\n     *\n     * @param {String} markerName The name of the marker that changed.\n     * @param {module:engine/model/range~Range|null} oldRange Marker range before the change or `null` if the marker has just\n     * been created.\n     * @param {module:engine/model/range~Range|null} newRange Marker range after the change or `null` if the marker was removed.\n     * @param {Boolean} affectsData Flag indicating whether marker affects the editor data.\n     */\n\n  }, {\n    key: \"bufferMarkerChange\",\n    value: function bufferMarkerChange(markerName, oldRange, newRange, affectsData) {\n      var buffered = this._changedMarkers.get(markerName);\n\n      if (!buffered) {\n        this._changedMarkers.set(markerName, {\n          oldRange: oldRange,\n          newRange: newRange,\n          affectsData: affectsData\n        });\n      } else {\n        buffered.newRange = newRange;\n        buffered.affectsData = affectsData;\n\n        if (buffered.oldRange == null && buffered.newRange == null) {\n          // The marker is going to be removed (`newRange == null`) but it did not exist before the first buffered change\n          // (`buffered.oldRange == null`). In this case, do not keep the marker in buffer at all.\n          this._changedMarkers.delete(markerName);\n        }\n      }\n    }\n    /**\n     * Returns all markers that should be removed as a result of buffered changes.\n     *\n     * @returns {Array.<Object>} Markers to remove. Each array item is an object containing the `name` and `range` properties.\n     */\n\n  }, {\n    key: \"getMarkersToRemove\",\n    value: function getMarkersToRemove() {\n      var result = [];\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this._changedMarkers[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var _step3$value = _slicedToArray(_step3.value, 2),\n              name = _step3$value[0],\n              change = _step3$value[1];\n\n          if (change.oldRange != null) {\n            result.push({\n              name: name,\n              range: change.oldRange\n            });\n          }\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Returns all markers which should be added as a result of buffered changes.\n     *\n     * @returns {Array.<Object>} Markers to add. Each array item is an object containing the `name` and `range` properties.\n     */\n\n  }, {\n    key: \"getMarkersToAdd\",\n    value: function getMarkersToAdd() {\n      var result = [];\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = this._changedMarkers[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var _step4$value = _slicedToArray(_step4.value, 2),\n              name = _step4$value[0],\n              change = _step4$value[1];\n\n          if (change.newRange != null) {\n            result.push({\n              name: name,\n              range: change.newRange\n            });\n          }\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      return result;\n    }\n    /**\n     * Checks whether some of the buffered changes affect the editor data.\n     *\n     * Types of changes which affect the editor data:\n     *\n     * * model structure changes,\n     * * attribute changes,\n     * * changes of markers which were defined as `affectingData`.\n     *\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"hasDataChanges\",\n    value: function hasDataChanges() {\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = this._changedMarkers[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var _step5$value = _slicedToArray(_step5.value, 2),\n              change = _step5$value[1];\n\n          if (change.affectsData) {\n            return true;\n          }\n        } // If markers do not affect the data, check whether there are some changes in elements.\n\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      return this._changesInElement.size > 0;\n    }\n    /**\n     * Calculates the diff between the old model tree state (the state before the first buffered operations since the last {@link #reset}\n     * call) and the new model tree state (actual one). It should be called after all buffered operations are executed.\n     *\n     * The diff set is returned as an array of diff items, each describing a change done on the model. The items are sorted by\n     * the position on which the change happened. If a position {@link module:engine/model/position~Position#isBefore is before}\n     * another one, it will be on an earlier index in the diff set.\n     *\n     * Because calculating the diff is a costly operation, the result is cached. If no new operation was buffered since the\n     * previous {@link #getChanges} call, the next call will return the cached value.\n     *\n     * @param {Object} options Additional options.\n     * @param {Boolean} [options.includeChangesInGraveyard=false] If set to `true`, also changes that happened\n     * in the graveyard root will be returned. By default, changes in the graveyard root are not returned.\n     * @returns {Array.<Object>} Diff between the old and the new model tree state.\n     */\n\n  }, {\n    key: \"getChanges\",\n    value: function getChanges() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        includeChangesInGraveyard: false\n      };\n\n      // If there are cached changes, just return them instead of calculating changes again.\n      if (this._cachedChanges) {\n        if (options.includeChangesInGraveyard) {\n          return this._cachedChangesWithGraveyard.slice();\n        } else {\n          return this._cachedChanges.slice();\n        }\n      } // Will contain returned results.\n\n\n      var diffSet = []; // Check all changed elements.\n\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = this._changesInElement.keys()[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var element = _step6.value;\n\n          // Get changes for this element and sort them.\n          var changes = this._changesInElement.get(element).sort(function (a, b) {\n            if (a.offset === b.offset) {\n              if (a.type != b.type) {\n                // If there are multiple changes at the same position, \"remove\" change should be first.\n                // If the order is different, for example, we would first add some nodes and then removed them\n                // (instead of the nodes that we should remove).\n                return a.type == 'remove' ? -1 : 1;\n              }\n\n              return 0;\n            }\n\n            return a.offset < b.offset ? -1 : 1;\n          }); // Get children of this element before any change was applied on it.\n\n\n          var snapshotChildren = this._elementSnapshots.get(element); // Get snapshot of current element's children.\n\n\n          var elementChildren = _getChildrenSnapshot(element.getChildren()); // Generate actions basing on changes done on element.\n\n\n          var actions = _generateActionsFromChanges(snapshotChildren.length, changes);\n\n          var _i3 = 0; // Iterator in `elementChildren` array -- iterates through current children of element.\n\n          var j = 0; // Iterator in `snapshotChildren` array -- iterates through old children of element.\n          // Process every action.\n\n          var _iteratorNormalCompletion7 = true;\n          var _didIteratorError7 = false;\n          var _iteratorError7 = undefined;\n\n          try {\n            for (var _iterator7 = actions[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n              var action = _step7.value;\n\n              if (action === 'i') {\n                // Generate diff item for this element and insert it into the diff set.\n                diffSet.push(this._getInsertDiff(element, _i3, elementChildren[_i3].name));\n                _i3++;\n              } else if (action === 'r') {\n                // Generate diff item for this element and insert it into the diff set.\n                diffSet.push(this._getRemoveDiff(element, _i3, snapshotChildren[j].name));\n                j++;\n              } else if (action === 'a') {\n                // Take attributes from saved and current children.\n                var elementAttributes = elementChildren[_i3].attributes;\n                var snapshotAttributes = snapshotChildren[j].attributes;\n                var range = void 0;\n\n                if (elementChildren[_i3].name == '$text') {\n                  range = new Range(Position._createAt(element, _i3), Position._createAt(element, _i3 + 1));\n                } else {\n                  var index = element.offsetToIndex(_i3);\n                  range = new Range(Position._createAt(element, _i3), Position._createAt(element.getChild(index), 0));\n                } // Generate diff items for this change (there might be multiple attributes changed and\n                // there is a single diff for each of them) and insert them into the diff set.\n\n\n                diffSet.push.apply(diffSet, _toConsumableArray(this._getAttributesDiff(range, snapshotAttributes, elementAttributes)));\n                _i3++;\n                j++;\n              } else {\n                // `action` is 'equal'. Child not changed.\n                _i3++;\n                j++;\n              }\n            }\n          } catch (err) {\n            _didIteratorError7 = true;\n            _iteratorError7 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n                _iterator7.return();\n              }\n            } finally {\n              if (_didIteratorError7) {\n                throw _iteratorError7;\n              }\n            }\n          }\n        } // Then, sort the changes by the position (change at position before other changes is first).\n\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n            _iterator6.return();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n\n      diffSet.sort(function (a, b) {\n        // If the change is in different root, we don't care much, but we'd like to have all changes in given\n        // root \"together\" in the array. So let's just sort them by the root name. It does not matter which root\n        // will be processed first.\n        if (a.position.root != b.position.root) {\n          return a.position.root.rootName < b.position.root.rootName ? -1 : 1;\n        } // If change happens at the same position...\n\n\n        if (a.position.isEqual(b.position)) {\n          // Keep chronological order of operations.\n          return a.changeCount - b.changeCount;\n        } // If positions differ, position \"on the left\" should be earlier in the result.\n\n\n        return a.position.isBefore(b.position) ? -1 : 1;\n      }); // Glue together multiple changes (mostly on text nodes).\n\n      for (var i = 1; i < diffSet.length; i++) {\n        var prevDiff = diffSet[i - 1];\n        var thisDiff = diffSet[i]; // Glue remove changes if they happen on text on same position.\n\n        var isConsecutiveTextRemove = prevDiff.type == 'remove' && thisDiff.type == 'remove' && prevDiff.name == '$text' && thisDiff.name == '$text' && prevDiff.position.isEqual(thisDiff.position); // Glue insert changes if they happen on text on consecutive fragments.\n\n        var isConsecutiveTextAdd = prevDiff.type == 'insert' && thisDiff.type == 'insert' && prevDiff.name == '$text' && thisDiff.name == '$text' && prevDiff.position.parent == thisDiff.position.parent && prevDiff.position.offset + prevDiff.length == thisDiff.position.offset; // Glue attribute changes if they happen on consecutive fragments and have same key, old value and new value.\n\n        var isConsecutiveAttributeChange = prevDiff.type == 'attribute' && thisDiff.type == 'attribute' && prevDiff.position.parent == thisDiff.position.parent && prevDiff.range.isFlat && thisDiff.range.isFlat && prevDiff.position.offset + prevDiff.length == thisDiff.position.offset && prevDiff.attributeKey == thisDiff.attributeKey && prevDiff.attributeOldValue == thisDiff.attributeOldValue && prevDiff.attributeNewValue == thisDiff.attributeNewValue;\n\n        if (isConsecutiveTextRemove || isConsecutiveTextAdd || isConsecutiveAttributeChange) {\n          diffSet[i - 1].length++;\n\n          if (isConsecutiveAttributeChange) {\n            diffSet[i - 1].range.end = diffSet[i - 1].range.end.getShiftedBy(1);\n          }\n\n          diffSet.splice(i, 1);\n          i--;\n        }\n      } // Remove `changeCount` property from diff items. It is used only for sorting and is internal thing.\n\n\n      for (var _i2 = 0; _i2 < diffSet.length; _i2++) {\n        var item = diffSet[_i2];\n        delete item.changeCount;\n\n        if (item.type == 'attribute') {\n          delete item.position;\n          delete item.length;\n        }\n      }\n\n      this._changeCount = 0; // Cache changes.\n\n      this._cachedChangesWithGraveyard = diffSet.slice();\n      this._cachedChanges = diffSet.slice().filter(_changesInGraveyardFilter);\n\n      if (options.includeChangesInGraveyard) {\n        return this._cachedChangesWithGraveyard;\n      } else {\n        return this._cachedChanges;\n      }\n    }\n    /**\n     * Resets `Differ`. Removes all buffered changes.\n     */\n\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._changesInElement.clear();\n\n      this._elementSnapshots.clear();\n\n      this._changedMarkers.clear();\n\n      this._cachedChanges = null;\n    }\n    /**\n     * Saves and handles an insert change.\n     *\n     * @private\n     * @param {module:engine/model/element~Element} parent\n     * @param {Number} offset\n     * @param {Number} howMany\n     */\n\n  }, {\n    key: \"_markInsert\",\n    value: function _markInsert(parent, offset, howMany) {\n      var changeItem = {\n        type: 'insert',\n        offset: offset,\n        howMany: howMany,\n        count: this._changeCount++\n      };\n\n      this._markChange(parent, changeItem);\n    }\n    /**\n     * Saves and handles a remove change.\n     *\n     * @private\n     * @param {module:engine/model/element~Element} parent\n     * @param {Number} offset\n     * @param {Number} howMany\n     */\n\n  }, {\n    key: \"_markRemove\",\n    value: function _markRemove(parent, offset, howMany) {\n      var changeItem = {\n        type: 'remove',\n        offset: offset,\n        howMany: howMany,\n        count: this._changeCount++\n      };\n\n      this._markChange(parent, changeItem);\n\n      this._removeAllNestedChanges(parent, offset, howMany);\n    }\n    /**\n     * Saves and handles an attribute change.\n     *\n     * @private\n     * @param {module:engine/model/item~Item} item\n     */\n\n  }, {\n    key: \"_markAttribute\",\n    value: function _markAttribute(item) {\n      var changeItem = {\n        type: 'attribute',\n        offset: item.startOffset,\n        howMany: item.offsetSize,\n        count: this._changeCount++\n      };\n\n      this._markChange(item.parent, changeItem);\n    }\n    /**\n     * Saves and handles a model change.\n     *\n     * @private\n     * @param {module:engine/model/element~Element} parent\n     * @param {Object} changeItem\n     */\n\n  }, {\n    key: \"_markChange\",\n    value: function _markChange(parent, changeItem) {\n      // First, make a snapshot of this parent's children (it will be made only if it was not made before).\n      this._makeSnapshot(parent); // Then, get all changes that already were done on the element (empty array if this is the first change).\n\n\n      var changes = this._getChangesForElement(parent); // Then, look through all the changes, and transform them or the new change.\n\n\n      this._handleChange(changeItem, changes); // Add the new change.\n\n\n      changes.push(changeItem); // Remove incorrect changes. During transformation some change might be, for example, included in another.\n      // In that case, the change will have `howMany` property set to `0` or less. We need to remove those changes.\n\n      for (var i = 0; i < changes.length; i++) {\n        if (changes[i].howMany < 1) {\n          changes.splice(i, 1);\n          i--;\n        }\n      }\n    }\n    /**\n     * Gets an array of changes that have already been saved for a given element.\n     *\n     * @private\n     * @param {module:engine/model/element~Element} element\n     * @returns {Array.<Object>}\n     */\n\n  }, {\n    key: \"_getChangesForElement\",\n    value: function _getChangesForElement(element) {\n      var changes;\n\n      if (this._changesInElement.has(element)) {\n        changes = this._changesInElement.get(element);\n      } else {\n        changes = [];\n\n        this._changesInElement.set(element, changes);\n      }\n\n      return changes;\n    }\n    /**\n     * Saves a children snapshot for a given element.\n     *\n     * @private\n     * @param {module:engine/model/element~Element} element\n     */\n\n  }, {\n    key: \"_makeSnapshot\",\n    value: function _makeSnapshot(element) {\n      if (!this._elementSnapshots.has(element)) {\n        this._elementSnapshots.set(element, _getChildrenSnapshot(element.getChildren()));\n      }\n    }\n    /**\n     * For a given newly saved change, compares it with a change already done on the element and modifies the incoming\n     * change and/or the old change.\n     *\n     * @private\n     * @param {Object} inc Incoming (new) change.\n     * @param {Array.<Object>} changes An array containing all the changes done on that element.\n     */\n\n  }, {\n    key: \"_handleChange\",\n    value: function _handleChange(inc, changes) {\n      // We need a helper variable that will store how many nodes are to be still handled for this change item.\n      // `nodesToHandle` (how many nodes still need to be handled) and `howMany` (how many nodes were affected)\n      // needs to be differentiated.\n      //\n      // This comes up when there are multiple changes that are affected by `inc` change item.\n      //\n      // For example: assume two insert changes: `{ offset: 2, howMany: 1 }` and `{ offset: 5, howMany: 1 }`.\n      // Assume that `inc` change is remove `{ offset: 2, howMany: 2, nodesToHandle: 2 }`.\n      //\n      // Then, we:\n      // - \"forget\" about first insert change (it is \"eaten\" by remove),\n      // - because of that, at the end we will want to remove only one node (`nodesToHandle = 1`),\n      // - but still we have to change offset of the second insert change from `5` to `3`!\n      //\n      // So, `howMany` does not change throughout items transformation and keeps information about how many nodes were affected,\n      // while `nodesToHandle` means how many nodes need to be handled after the change item is transformed by other changes.\n      inc.nodesToHandle = inc.howMany;\n      var _iteratorNormalCompletion8 = true;\n      var _didIteratorError8 = false;\n      var _iteratorError8 = undefined;\n\n      try {\n        for (var _iterator8 = changes[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n          var old = _step8.value;\n          var incEnd = inc.offset + inc.howMany;\n          var oldEnd = old.offset + old.howMany;\n\n          if (inc.type == 'insert') {\n            if (old.type == 'insert') {\n              if (inc.offset <= old.offset) {\n                old.offset += inc.howMany;\n              } else if (inc.offset < oldEnd) {\n                old.howMany += inc.nodesToHandle;\n                inc.nodesToHandle = 0;\n              }\n            }\n\n            if (old.type == 'remove') {\n              if (inc.offset < old.offset) {\n                old.offset += inc.howMany;\n              }\n            }\n\n            if (old.type == 'attribute') {\n              if (inc.offset <= old.offset) {\n                old.offset += inc.howMany;\n              } else if (inc.offset < oldEnd) {\n                // This case is more complicated, because attribute change has to be split into two.\n                // Example (assume that uppercase and lowercase letters mean different attributes):\n                //\n                // initial state:\t\tabcxyz\n                // attribute change:\taBCXYz\n                // incoming insert:\t\taBCfooXYz\n                //\n                // Change ranges cannot intersect because each item has to be described exactly (it was either\n                // not changed, inserted, removed, or its attribute was changed). That's why old attribute\n                // change has to be split and both parts has to be handled separately from now on.\n                var howMany = old.howMany;\n                old.howMany = inc.offset - old.offset; // Add the second part of attribute change to the beginning of processed array so it won't\n                // be processed again in this loop.\n\n                changes.unshift({\n                  type: 'attribute',\n                  offset: incEnd,\n                  howMany: howMany - old.howMany,\n                  count: this._changeCount++\n                });\n              }\n            }\n          }\n\n          if (inc.type == 'remove') {\n            if (old.type == 'insert') {\n              if (incEnd <= old.offset) {\n                old.offset -= inc.howMany;\n              } else if (incEnd <= oldEnd) {\n                if (inc.offset < old.offset) {\n                  var intersectionLength = incEnd - old.offset;\n                  old.offset = inc.offset;\n                  old.howMany -= intersectionLength;\n                  inc.nodesToHandle -= intersectionLength;\n                } else {\n                  old.howMany -= inc.nodesToHandle;\n                  inc.nodesToHandle = 0;\n                }\n              } else {\n                if (inc.offset <= old.offset) {\n                  inc.nodesToHandle -= old.howMany;\n                  old.howMany = 0;\n                } else if (inc.offset < oldEnd) {\n                  var _intersectionLength = oldEnd - inc.offset;\n\n                  old.howMany -= _intersectionLength;\n                  inc.nodesToHandle -= _intersectionLength;\n                }\n              }\n            }\n\n            if (old.type == 'remove') {\n              if (incEnd <= old.offset) {\n                old.offset -= inc.howMany;\n              } else if (inc.offset < old.offset) {\n                inc.nodesToHandle += old.howMany;\n                old.howMany = 0;\n              }\n            }\n\n            if (old.type == 'attribute') {\n              if (incEnd <= old.offset) {\n                old.offset -= inc.howMany;\n              } else if (inc.offset < old.offset) {\n                var _intersectionLength2 = incEnd - old.offset;\n\n                old.offset = inc.offset;\n                old.howMany -= _intersectionLength2;\n              } else if (inc.offset < oldEnd) {\n                if (incEnd <= oldEnd) {\n                  // On first sight in this case we don't need to split attribute operation into two.\n                  // However the changes set is later converted to actions (see `_generateActionsFromChanges`).\n                  // For that reason, no two changes may intersect.\n                  // So we cannot have an attribute change that \"contains\" remove change.\n                  // Attribute change needs to be split.\n                  var _howMany = old.howMany;\n                  old.howMany = inc.offset - old.offset;\n                  var howManyAfter = _howMany - old.howMany - inc.nodesToHandle; // Add the second part of attribute change to the beginning of processed array so it won't\n                  // be processed again in this loop.\n\n                  changes.unshift({\n                    type: 'attribute',\n                    offset: inc.offset,\n                    howMany: howManyAfter,\n                    count: this._changeCount++\n                  });\n                } else {\n                  old.howMany -= oldEnd - inc.offset;\n                }\n              }\n            }\n          }\n\n          if (inc.type == 'attribute') {\n            // In case of attribute change, `howMany` should be kept same as `nodesToHandle`. It's not an error.\n            if (old.type == 'insert') {\n              if (inc.offset < old.offset && incEnd > old.offset) {\n                if (incEnd > oldEnd) {\n                  // This case is similar to a case described when incoming change was insert and old change was attribute.\n                  // See comment above.\n                  //\n                  // This time incoming change is attribute. We need to split incoming change in this case too.\n                  // However this time, the second part of the attribute change needs to be processed further\n                  // because there might be other changes that it collides with.\n                  var attributePart = {\n                    type: 'attribute',\n                    offset: oldEnd,\n                    howMany: incEnd - oldEnd,\n                    count: this._changeCount++\n                  };\n\n                  this._handleChange(attributePart, changes);\n\n                  changes.push(attributePart);\n                }\n\n                inc.nodesToHandle = old.offset - inc.offset;\n                inc.howMany = inc.nodesToHandle;\n              } else if (inc.offset >= old.offset && inc.offset < oldEnd) {\n                if (incEnd > oldEnd) {\n                  inc.nodesToHandle = incEnd - oldEnd;\n                  inc.offset = oldEnd;\n                } else {\n                  inc.nodesToHandle = 0;\n                }\n              }\n            }\n\n            if (old.type == 'attribute') {\n              // There are only two conflicting scenarios possible here:\n              if (inc.offset >= old.offset && incEnd <= oldEnd) {\n                // `old` change includes `inc` change, or they are the same.\n                inc.nodesToHandle = 0;\n                inc.howMany = 0;\n                inc.offset = 0;\n              } else if (inc.offset <= old.offset && incEnd >= oldEnd) {\n                // `inc` change includes `old` change.\n                old.howMany = 0;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError8 = true;\n        _iteratorError8 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n            _iterator8.return();\n          }\n        } finally {\n          if (_didIteratorError8) {\n            throw _iteratorError8;\n          }\n        }\n      }\n\n      inc.howMany = inc.nodesToHandle;\n      delete inc.nodesToHandle;\n    }\n    /**\n     * Returns an object with a single insert change description.\n     *\n     * @private\n     * @param {module:engine/model/element~Element} parent The element in which the change happened.\n     * @param {Number} offset The offset at which change happened.\n     * @param {String} name The name of the removed element or `'$text'` for a character.\n     * @returns {Object} The diff item.\n     */\n\n  }, {\n    key: \"_getInsertDiff\",\n    value: function _getInsertDiff(parent, offset, name) {\n      return {\n        type: 'insert',\n        position: Position._createAt(parent, offset),\n        name: name,\n        length: 1,\n        changeCount: this._changeCount++\n      };\n    }\n    /**\n     * Returns an object with a single remove change description.\n     *\n     * @private\n     * @param {module:engine/model/element~Element} parent The element in which change happened.\n     * @param {Number} offset The offset at which change happened.\n     * @param {String} name The name of the removed element or `'$text'` for a character.\n     * @returns {Object} The diff item.\n     */\n\n  }, {\n    key: \"_getRemoveDiff\",\n    value: function _getRemoveDiff(parent, offset, name) {\n      return {\n        type: 'remove',\n        position: Position._createAt(parent, offset),\n        name: name,\n        length: 1,\n        changeCount: this._changeCount++\n      };\n    }\n    /**\n     * Returns an array of objects where each one is a single attribute change description.\n     *\n     * @private\n     * @param {module:engine/model/range~Range} range The range where the change happened.\n     * @param {Map} oldAttributes A map, map iterator or compatible object that contains attributes before the change.\n     * @param {Map} newAttributes A map, map iterator or compatible object that contains attributes after the change.\n     * @returns {Array.<Object>} An array containing one or more diff items.\n     */\n\n  }, {\n    key: \"_getAttributesDiff\",\n    value: function _getAttributesDiff(range, oldAttributes, newAttributes) {\n      // Results holder.\n      var diffs = []; // Clone new attributes as we will be performing changes on this object.\n\n      newAttributes = new Map(newAttributes); // Look through old attributes.\n\n      var _iteratorNormalCompletion9 = true;\n      var _didIteratorError9 = false;\n      var _iteratorError9 = undefined;\n\n      try {\n        for (var _iterator9 = oldAttributes[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n          var _step9$value = _slicedToArray(_step9.value, 2),\n              key = _step9$value[0],\n              oldValue = _step9$value[1];\n\n          // Check what is the new value of the attribute (or if it was removed).\n          var newValue = newAttributes.has(key) ? newAttributes.get(key) : null; // If values are different (or attribute was removed)...\n\n          if (newValue !== oldValue) {\n            // Add diff item.\n            diffs.push({\n              type: 'attribute',\n              position: range.start,\n              range: range.clone(),\n              length: 1,\n              attributeKey: key,\n              attributeOldValue: oldValue,\n              attributeNewValue: newValue,\n              changeCount: this._changeCount++\n            });\n          } // Prevent returning two diff items for the same change.\n\n\n          newAttributes.delete(key);\n        } // Look through new attributes that weren't handled above.\n\n      } catch (err) {\n        _didIteratorError9 = true;\n        _iteratorError9 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion9 && _iterator9.return != null) {\n            _iterator9.return();\n          }\n        } finally {\n          if (_didIteratorError9) {\n            throw _iteratorError9;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion10 = true;\n      var _didIteratorError10 = false;\n      var _iteratorError10 = undefined;\n\n      try {\n        for (var _iterator10 = newAttributes[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n          var _step10$value = _slicedToArray(_step10.value, 2),\n              key = _step10$value[0],\n              _newValue = _step10$value[1];\n\n          // Each of them is a new attribute. Add diff item.\n          diffs.push({\n            type: 'attribute',\n            position: range.start,\n            range: range.clone(),\n            length: 1,\n            attributeKey: key,\n            attributeOldValue: null,\n            attributeNewValue: _newValue,\n            changeCount: this._changeCount++\n          });\n        }\n      } catch (err) {\n        _didIteratorError10 = true;\n        _iteratorError10 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion10 && _iterator10.return != null) {\n            _iterator10.return();\n          }\n        } finally {\n          if (_didIteratorError10) {\n            throw _iteratorError10;\n          }\n        }\n      }\n\n      return diffs;\n    }\n    /**\n     * Checks whether given element or any of its parents is an element that is buffered as an inserted element.\n     *\n     * @private\n     * @param {module:engine/model/element~Element} element Element to check.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"_isInInsertedElement\",\n    value: function _isInInsertedElement(element) {\n      var parent = element.parent;\n\n      if (!parent) {\n        return false;\n      }\n\n      var changes = this._changesInElement.get(parent);\n\n      var offset = element.startOffset;\n\n      if (changes) {\n        var _iteratorNormalCompletion11 = true;\n        var _didIteratorError11 = false;\n        var _iteratorError11 = undefined;\n\n        try {\n          for (var _iterator11 = changes[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n            var change = _step11.value;\n\n            if (change.type == 'insert' && offset >= change.offset && offset < change.offset + change.howMany) {\n              return true;\n            }\n          }\n        } catch (err) {\n          _didIteratorError11 = true;\n          _iteratorError11 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion11 && _iterator11.return != null) {\n              _iterator11.return();\n            }\n          } finally {\n            if (_didIteratorError11) {\n              throw _iteratorError11;\n            }\n          }\n        }\n      }\n\n      return this._isInInsertedElement(parent);\n    }\n    /**\n     * Removes deeply all buffered changes that are registered in elements from range specified by `parent`, `offset`\n     * and `howMany`.\n     *\n     * @private\n     * @param {module:engine/model/element~Element} parent\n     * @param {Number} offset\n     * @param {Number} howMany\n     */\n\n  }, {\n    key: \"_removeAllNestedChanges\",\n    value: function _removeAllNestedChanges(parent, offset, howMany) {\n      var range = new Range(Position._createAt(parent, offset), Position._createAt(parent, offset + howMany));\n      var _iteratorNormalCompletion12 = true;\n      var _didIteratorError12 = false;\n      var _iteratorError12 = undefined;\n\n      try {\n        for (var _iterator12 = range.getItems({\n          shallow: true\n        })[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n          var item = _step12.value;\n\n          if (item.is('element')) {\n            this._elementSnapshots.delete(item);\n\n            this._changesInElement.delete(item);\n\n            this._removeAllNestedChanges(item, 0, item.maxOffset);\n          }\n        }\n      } catch (err) {\n        _didIteratorError12 = true;\n        _iteratorError12 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion12 && _iterator12.return != null) {\n            _iterator12.return();\n          }\n        } finally {\n          if (_didIteratorError12) {\n            throw _iteratorError12;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"isEmpty\",\n    get: function get() {\n      return this._changesInElement.size == 0 && this._changedMarkers.size == 0;\n    }\n  }]);\n\n  return Differ;\n}(); // Returns an array that is a copy of passed child list with the exception that text nodes are split to one or more\n// objects, each representing one character and attributes set on that character.\n\n\nexport { Differ as default };\n\nfunction _getChildrenSnapshot(children) {\n  var snapshot = [];\n  var _iteratorNormalCompletion13 = true;\n  var _didIteratorError13 = false;\n  var _iteratorError13 = undefined;\n\n  try {\n    for (var _iterator13 = children[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n      var child = _step13.value;\n\n      if (child.is('text')) {\n        for (var i = 0; i < child.data.length; i++) {\n          snapshot.push({\n            name: '$text',\n            attributes: new Map(child.getAttributes())\n          });\n        }\n      } else {\n        snapshot.push({\n          name: child.name,\n          attributes: new Map(child.getAttributes())\n        });\n      }\n    }\n  } catch (err) {\n    _didIteratorError13 = true;\n    _iteratorError13 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion13 && _iterator13.return != null) {\n        _iterator13.return();\n      }\n    } finally {\n      if (_didIteratorError13) {\n        throw _iteratorError13;\n      }\n    }\n  }\n\n  return snapshot;\n} // Generates array of actions for given changes set.\n// It simulates what `diff` function does.\n// Generated actions are:\n// - 'e' for 'equal' - when item at that position did not change,\n// - 'i' for 'insert' - when item at that position was inserted,\n// - 'r' for 'remove' - when item at that position was removed,\n// - 'a' for 'attribute' - when item at that position has it attributes changed.\n//\n// Example (assume that uppercase letters have bold attribute, compare with function code):\n//\n// children before:\tfooBAR\n// children after:\tfoxybAR\n//\n// changes: type: remove, offset: 1, howMany: 1\n//\t\t\ttype: insert, offset: 2, howMany: 2\n//\t\t\ttype: attribute, offset: 4, howMany: 1\n//\n// expected actions: equal (f), remove (o), equal (o), insert (x), insert (y), attribute (b), equal (A), equal (R)\n//\n// steps taken by th script:\n//\n// 1. change = \"type: remove, offset: 1, howMany: 1\"; offset = 0; oldChildrenHandled = 0\n//    1.1 between this change and the beginning is one not-changed node, fill with one equal action, one old child has been handled\n//    1.2 this change removes one node, add one remove action\n//    1.3 change last visited `offset` to 1\n//    1.4 since an old child has been removed, one more old child has been handled\n//    1.5 actions at this point are: equal, remove\n//\n// 2. change = \"type: insert, offset: 2, howMany: 2\"; offset = 1; oldChildrenHandled = 2\n//    2.1 between this change and previous change is one not-changed node, add equal action, another one old children has been handled\n//    2.2 this change inserts two nodes, add two insert actions\n//    2.3 change last visited offset to the end of the inserted range, that is 4\n//    2.4 actions at this point are: equal, remove, equal, insert, insert\n//\n// 3. change = \"type: attribute, offset: 4, howMany: 1\"; offset = 4, oldChildrenHandled = 3\n//    3.1 between this change and previous change are no not-changed nodes\n//    3.2 this change changes one node, add one attribute action\n//    3.3 change last visited `offset` to the end of change range, that is 5\n//    3.4 since an old child has been changed, one more old child has been handled\n//    3.5 actions at this point are: equal, remove, equal, insert, insert, attribute\n//\n// 4. after loop oldChildrenHandled = 4, oldChildrenLength = 6 (fooBAR is 6 characters)\n//    4.1 fill up with two equal actions\n//\n// The result actions are: equal, remove, equal, insert, insert, attribute, equal, equal.\n\n\nfunction _generateActionsFromChanges(oldChildrenLength, changes) {\n  var actions = [];\n  var offset = 0;\n  var oldChildrenHandled = 0; // Go through all buffered changes.\n\n  var _iteratorNormalCompletion14 = true;\n  var _didIteratorError14 = false;\n  var _iteratorError14 = undefined;\n\n  try {\n    for (var _iterator14 = changes[Symbol.iterator](), _step14; !(_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done); _iteratorNormalCompletion14 = true) {\n      var change = _step14.value;\n\n      // First, fill \"holes\" between changes with \"equal\" actions.\n      if (change.offset > offset) {\n        actions.push.apply(actions, _toConsumableArray('e'.repeat(change.offset - offset).split('')));\n        oldChildrenHandled += change.offset - offset;\n      } // Then, fill up actions accordingly to change type.\n\n\n      if (change.type == 'insert') {\n        actions.push.apply(actions, _toConsumableArray('i'.repeat(change.howMany).split(''))); // The last handled offset is after inserted range.\n\n        offset = change.offset + change.howMany;\n      } else if (change.type == 'remove') {\n        actions.push.apply(actions, _toConsumableArray('r'.repeat(change.howMany).split(''))); // The last handled offset is at the position where the nodes were removed.\n\n        offset = change.offset; // We removed `howMany` old nodes, update `oldChildrenHandled`.\n\n        oldChildrenHandled += change.howMany;\n      } else {\n        actions.push.apply(actions, _toConsumableArray('a'.repeat(change.howMany).split(''))); // The last handled offset isa at the position after the changed range.\n\n        offset = change.offset + change.howMany; // We changed `howMany` old nodes, update `oldChildrenHandled`.\n\n        oldChildrenHandled += change.howMany;\n      }\n    } // Fill \"equal\" actions at the end of actions set. Use `oldChildrenHandled` to see how many children\n    // has not been changed / removed at the end of their parent.\n\n  } catch (err) {\n    _didIteratorError14 = true;\n    _iteratorError14 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion14 && _iterator14.return != null) {\n        _iterator14.return();\n      }\n    } finally {\n      if (_didIteratorError14) {\n        throw _iteratorError14;\n      }\n    }\n  }\n\n  if (oldChildrenHandled < oldChildrenLength) {\n    actions.push.apply(actions, _toConsumableArray('e'.repeat(oldChildrenLength - oldChildrenHandled).split('')));\n  }\n\n  return actions;\n} // Filter callback for Array.filter that filters out change entries that are in graveyard.\n\n\nfunction _changesInGraveyardFilter(entry) {\n  var posInGy = entry.position && entry.position.root.rootName == '$graveyard';\n  var rangeInGy = entry.range && entry.range.root.rootName == '$graveyard';\n  return !posInGy && !rangeInGy;\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/history\n */\n\n/**\n * `History` keeps the track of all the operations applied to the {@link module:engine/model/document~Document document}.\n */\nvar History =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an empty History instance.\n   */\n  function History() {\n    _classCallCheck(this, History);\n\n    /**\n     * Operations added to the history.\n     *\n     * @protected\n     * @member {Array.<module:engine/model/operation/operation~Operation>} module:engine/model/history~History#_operations\n     */\n    this._operations = [];\n    /**\n     * Holds an information which {@link module:engine/model/operation/operation~Operation operation} undoes which\n     * {@link module:engine/model/operation/operation~Operation operation}.\n     *\n     * Keys of the map are \"undoing operations\", that is operations that undone some other operations. For each key, the\n     * value is an operation that has been undone by the \"undoing operation\".\n     *\n     * @private\n     * @member {Map} module:engine/model/history~History#_undoPairs\n     */\n\n    this._undoPairs = new Map();\n    /**\n     * Holds all undone operations.\n     *\n     * @private\n     * @member {Set.<module:engine/model/operation/operation~Operation>} module:engine/model/history~History#_undoneOperations\n     */\n\n    this._undoneOperations = new Set();\n  }\n  /**\n   * Adds an operation to the history.\n   *\n   * @param {module:engine/model/operation/operation~Operation} operation Operation to add.\n   */\n\n\n  _createClass(History, [{\n    key: \"addOperation\",\n    value: function addOperation(operation) {\n      if (this._operations.includes(operation)) {\n        return;\n      }\n\n      this._operations.push(operation);\n    }\n    /**\n     * Returns operations added to the history.\n     *\n     * @param {Number} [from=0] Base version from which operations should be returned (inclusive). Defaults to `0`, which means\n     * that operations from the first one will be returned.\n     * @param {Number} [to=Number.POSITIVE_INFINITY] Base version up to which operations should be returned (exclusive).\n     * Defaults to `Number.POSITIVE_INFINITY` which means that operations up to the last one will be returned.\n     * @returns {Iterable.<module:engine/model/operation/operation~Operation>} Operations added to the history.\n     */\n\n  }, {\n    key: \"getOperations\",\n    value: function getOperations() {\n      var from = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var to = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Number.POSITIVE_INFINITY;\n\n      if (from < 0) {\n        return [];\n      }\n\n      return this._operations.slice(from, to);\n    }\n    /**\n     * Returns operation from the history that bases on given `baseVersion`.\n     *\n     * @param {Number} baseVersion Base version of the operation to get.\n     * @returns {module:engine/model/operation/operation~Operation|null} Operation with given base version or `null` if\n     * there is no such operation in history.\n     */\n\n  }, {\n    key: \"getOperation\",\n    value: function getOperation(baseVersion) {\n      return this._operations[baseVersion];\n    }\n    /**\n     * Marks in history that one operation is an operation that is undoing the other operation. By marking operation this way,\n     * history is keeping more context information about operations, which helps in operational transformation.\n     *\n     * @param {module:engine/model/operation/operation~Operation} undoneOperation Operation which is undone by `undoingOperation`.\n     * @param {module:engine/model/operation/operation~Operation} undoingOperation Operation which undoes `undoneOperation`.\n     */\n\n  }, {\n    key: \"setOperationAsUndone\",\n    value: function setOperationAsUndone(undoneOperation, undoingOperation) {\n      this._undoPairs.set(undoingOperation, undoneOperation);\n\n      this._undoneOperations.add(undoneOperation);\n    }\n    /**\n     * Checks whether given `operation` is undoing any other operation.\n     *\n     * @param {module:engine/model/operation/operation~Operation} operation Operation to check.\n     * @returns {Boolean} `true` if given `operation` is undoing any other operation, `false` otherwise.\n     */\n\n  }, {\n    key: \"isUndoingOperation\",\n    value: function isUndoingOperation(operation) {\n      return this._undoPairs.has(operation);\n    }\n    /**\n     * Checks whether given `operation` has been undone by any other operation.\n     *\n     * @param {module:engine/model/operation/operation~Operation} operation Operation to check.\n     * @returns {Boolean} `true` if given `operation` has been undone any other operation, `false` otherwise.\n     */\n\n  }, {\n    key: \"isUndoneOperation\",\n    value: function isUndoneOperation(operation) {\n      return this._undoneOperations.has(operation);\n    }\n    /**\n     * For given `undoingOperation`, returns the operation which has been undone by it.\n     *\n     * @param {module:engine/model/operation/operation~Operation} undoingOperation\n     * @returns {module:engine/model/operation/operation~Operation|undefined} Operation that has been undone by given\n     * `undoingOperation` or `undefined` if given `undoingOperation` is not undoing any other operation.\n     */\n\n  }, {\n    key: \"getUndoneOperation\",\n    value: function getUndoneOperation(undoingOperation) {\n      return this._undoPairs.get(undoingOperation);\n    }\n  }]);\n\n  return History;\n}();\n\nexport { History as default };","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * Set of utils to handle unicode characters.\n *\n * @module utils/unicode\n */\n\n/**\n * Checks whether given `character` is a combining mark.\n *\n * @param {String} character Character to check.\n * @returns {Boolean}\n */\nexport function isCombiningMark(character) {\n  return !!character && character.length == 1 && /[\\u0300-\\u036f\\u1ab0-\\u1aff\\u1dc0-\\u1dff\\u20d0-\\u20ff\\ufe20-\\ufe2f]/.test(character);\n}\n/**\n * Checks whether given `character` is a high half of surrogate pair.\n *\n * Using UTF-16 terminology, a surrogate pair denotes UTF-16 character using two UTF-8 characters. The surrogate pair\n * consist of high surrogate pair character followed by low surrogate pair character.\n *\n * @param {String} character Character to check.\n * @returns {Boolean}\n */\n\nexport function isHighSurrogateHalf(character) {\n  return !!character && character.length == 1 && /[\\ud800-\\udbff]/.test(character);\n}\n/**\n * Checks whether given `character` is a low half of surrogate pair.\n *\n * Using UTF-16 terminology, a surrogate pair denotes UTF-16 character using two UTF-8 characters. The surrogate pair\n * consist of high surrogate pair character followed by low surrogate pair character.\n *\n * @param {String} character Character to check.\n * @returns {Boolean}\n */\n\nexport function isLowSurrogateHalf(character) {\n  return !!character && character.length == 1 && /[\\udc00-\\udfff]/.test(character);\n}\n/**\n * Checks whether given offset in a string is inside a surrogate pair (between two surrogate halves).\n *\n * @param {String} string String to check.\n * @param {Number} offset Offset to check.\n * @returns {Boolean}\n */\n\nexport function isInsideSurrogatePair(string, offset) {\n  return isHighSurrogateHalf(string.charAt(offset - 1)) && isLowSurrogateHalf(string.charAt(offset));\n}\n/**\n * Checks whether given offset in a string is between base character and combining mark or between two combining marks.\n *\n * @param {String} string String to check.\n * @param {Number} offset Offset to check.\n * @returns {Boolean}\n */\n\nexport function isInsideCombinedSymbol(string, offset) {\n  return isCombiningMark(string.charAt(offset));\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/document\n */\nimport Differ from './differ';\nimport RootElement from './rootelement';\nimport History from './history';\nimport DocumentSelection from './documentselection';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport { isInsideSurrogatePair, isInsideCombinedSymbol } from '@ckeditor/ckeditor5-utils/src/unicode';\nimport { clone } from 'lodash-es';\nvar graveyardName = '$graveyard';\n/**\n * Data model's document. It contains the model's structure, its selection and the history of changes.\n *\n * Read more about working with the model in\n * {@glink framework/guides/architecture/editing-engine#model introduction to the the editing engine's architecture}.\n *\n * Usually, the document contains just one {@link module:engine/model/document~Document#roots root element}, so\n * you can retrieve it by just calling {@link module:engine/model/document~Document#getRoot} without specifying its name:\n *\n *\t\tmodel.document.getRoot(); // -> returns the main root\n *\n * However, the document may contain multiple roots – e.g. when the editor has multiple editable areas\n * (e.g. a title and a body of a message).\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n */\n\nvar Document =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an empty document instance with no {@link #roots} (other than\n   * the {@link #graveyard graveyard root}).\n   */\n  function Document(model) {\n    var _this = this;\n\n    _classCallCheck(this, Document);\n\n    /**\n     * The {@link module:engine/model/model~Model model} that the document is a part of.\n     *\n     * @readonly\n     * @member {module:engine/model/model~Model}\n     */\n    this.model = model;\n    /**\n     * The document version. It starts from `0` and every operation increases the version number. It is used to ensure that\n     * operations are applied on a proper document version.\n     *\n     * If the {@link module:engine/model/operation/operation~Operation#baseVersion base version} does not match the document version,\n     * a {@link module:utils/ckeditorerror~CKEditorError model-document-applyOperation-wrong-version} error is thrown.\n     *\n     * @readonly\n     * @member {Number}\n     */\n\n    this.version = 0;\n    /**\n     * The document's history.\n     *\n     * @readonly\n     * @member {module:engine/model/history~History}\n     */\n\n    this.history = new History(this);\n    /**\n     * The selection in this document.\n     *\n     * @readonly\n     * @member {module:engine/model/documentselection~DocumentSelection}\n     */\n\n    this.selection = new DocumentSelection(this);\n    /**\n     * A list of roots that are owned and managed by this document. Use {@link #createRoot} and\n     * {@link #getRoot} to manipulate it.\n     *\n     * @readonly\n     * @member {module:utils/collection~Collection}\n     */\n\n    this.roots = new Collection({\n      idProperty: 'rootName'\n    });\n    /**\n     * The model differ object. Its role is to buffer changes done on the model document and then calculate a diff of those changes.\n     *\n     * @readonly\n     * @member {module:engine/model/differ~Differ}\n     */\n\n    this.differ = new Differ(model.markers);\n    /**\n     * Post-fixer callbacks registered to the model document.\n     *\n     * @private\n     * @member {Set}\n     */\n\n    this._postFixers = new Set(); // Graveyard tree root. Document always have a graveyard root, which stores removed nodes.\n\n    this.createRoot('$root', graveyardName); // First, if the operation is a document operation check if it's base version is correct.\n\n    this.listenTo(model, 'applyOperation', function (evt, args) {\n      var operation = args[0];\n\n      if (operation.isDocumentOperation && operation.baseVersion !== _this.version) {\n        /**\n         * Only operations with matching versions can be applied.\n         *\n         * @error document-applyOperation-wrong-version\n         * @param {module:engine/model/operation/operation~Operation} operation\n         */\n        throw new CKEditorError('model-document-applyOperation-wrong-version: Only operations with matching versions can be applied.', {\n          operation: operation\n        });\n      }\n    }, {\n      priority: 'highest'\n    }); // Then, still before an operation is applied on model, buffer the change in differ.\n\n    this.listenTo(model, 'applyOperation', function (evt, args) {\n      var operation = args[0];\n\n      if (operation.isDocumentOperation) {\n        _this.differ.bufferOperation(operation);\n      }\n    }, {\n      priority: 'high'\n    }); // After the operation is applied, bump document's version and add the operation to the history.\n\n    this.listenTo(model, 'applyOperation', function (evt, args) {\n      var operation = args[0];\n\n      if (operation.isDocumentOperation) {\n        _this.version++;\n\n        _this.history.addOperation(operation);\n      }\n    }, {\n      priority: 'low'\n    }); // Listen to selection changes. If selection changed, mark it.\n\n    var hasSelectionChanged = false;\n    this.listenTo(this.selection, 'change', function () {\n      hasSelectionChanged = true;\n    }); // Wait for `_change` event from model, which signalizes that outermost change block has finished.\n    // When this happens, check if there were any changes done on document, and if so, call post-fixers,\n    // fire `change` event for features and conversion and then reset the differ.\n    // Fire `change:data` event when at least one operation or buffered marker changes the data.\n\n    this.listenTo(model, '_change', function (evt, writer) {\n      if (!_this.differ.isEmpty || hasSelectionChanged) {\n        _this._callPostFixers(writer);\n\n        if (_this.differ.hasDataChanges()) {\n          _this.fire('change:data', writer.batch);\n        } else {\n          _this.fire('change', writer.batch);\n        }\n\n        _this.differ.reset();\n\n        hasSelectionChanged = false;\n      }\n    }); // Buffer marker changes.\n    // This is not covered in buffering operations because markers may change outside of them (when they\n    // are modified using `model.markers` collection, not through `MarkerOperation`).\n\n    this.listenTo(model.markers, 'update', function (evt, marker, oldRange, newRange) {\n      // Whenever marker is updated, buffer that change.\n      _this.differ.bufferMarkerChange(marker.name, oldRange, newRange, marker.affectsData);\n\n      if (oldRange === null) {\n        // If this is a new marker, add a listener that will buffer change whenever marker changes.\n        marker.on('change', function (evt, oldRange) {\n          _this.differ.bufferMarkerChange(marker.name, oldRange, marker.getRange(), marker.affectsData);\n        });\n      }\n    });\n  }\n  /**\n   * The graveyard tree root. A document always has a graveyard root that stores removed nodes.\n   *\n   * @readonly\n   * @member {module:engine/model/rootelement~RootElement}\n   */\n\n\n  _createClass(Document, [{\n    key: \"createRoot\",\n\n    /**\n     * Creates a new root.\n     *\n     * @param {String} [elementName='$root'] The element name. Defaults to `'$root'` which also has some basic schema defined\n     * (`$block`s are allowed inside the `$root`). Make sure to define a proper schema if you use a different name.\n     * @param {String} [rootName='main'] A unique root name.\n     * @returns {module:engine/model/rootelement~RootElement} The created root.\n     */\n    value: function createRoot() {\n      var elementName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '$root';\n      var rootName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'main';\n\n      if (this.roots.get(rootName)) {\n        /**\n         * A root with the specified name already exists.\n         *\n         * @error model-document-createRoot-name-exists\n         * @param {module:engine/model/document~Document} doc\n         * @param {String} name\n         */\n        throw new CKEditorError('model-document-createRoot-name-exists: Root with specified name already exists.', {\n          name: rootName\n        });\n      }\n\n      var root = new RootElement(this, elementName, rootName);\n      this.roots.add(root);\n      return root;\n    }\n    /**\n     * Removes all event listeners set by the document instance.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.selection.destroy();\n      this.stopListening();\n    }\n    /**\n     * Returns a root by its name.\n     *\n     * @param {String} [name='main'] A unique root name.\n     * @returns {module:engine/model/rootelement~RootElement|null} The root registered under a given name or `null` when\n     * there is no root with the given name.\n     */\n\n  }, {\n    key: \"getRoot\",\n    value: function getRoot() {\n      var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'main';\n      return this.roots.get(name);\n    }\n    /**\n     * Returns an array with names of all roots (without the {@link #graveyard}) added to the document.\n     *\n     * @returns {Array.<String>} Roots names.\n     */\n\n  }, {\n    key: \"getRootNames\",\n    value: function getRootNames() {\n      return Array.from(this.roots, function (root) {\n        return root.rootName;\n      }).filter(function (name) {\n        return name != graveyardName;\n      });\n    }\n    /**\n     * Used to register a post-fixer callback. A post-fixer mechanism guarantees that the features that listen to\n     * the {@link module:engine/model/model~Model#event:_change model's change event} will operate on a correct model state.\n     *\n     * An execution of a feature may lead to an incorrect document tree state. The callbacks are used to fix the document tree after\n     * it has changed. Post-fixers are fired just after all changes from the outermost change block were applied but\n     * before the {@link module:engine/model/document~Document#event:change change event} is fired. If a post-fixer callback made\n     * a change, it should return `true`. When this happens, all post-fixers are fired again to check if something else should\n     * not be fixed in the new document tree state.\n     *\n     * As a parameter, a post-fixer callback receives a {@link module:engine/model/writer~Writer writer} instance connected with the\n     * executed changes block. Thanks to that, all changes done by the callback will be added to the same\n     * {@link module:engine/model/batch~Batch batch} (and undo step) as the original changes. This makes post-fixer changes transparent\n     * for the user.\n     *\n     * An example of a post-fixer is a callback that checks if all the data were removed from the editor. If so, the\n     * callback should add an empty paragraph so that the editor is never empty:\n     *\n     *\t\tdocument.registerPostFixer( writer => {\n     *\t\t\tconst changes = document.differ.getChanges();\n     *\n     *\t\t\t// Check if the changes lead to an empty root in the editor.\n     *\t\t\tfor ( const entry of changes ) {\n     *\t\t\t\tif ( entry.type == 'remove' && entry.position.root.isEmpty ) {\n     *\t\t\t\t\twriter.insertElement( 'paragraph', entry.position.root, 0 );\n     *\n     *\t\t\t\t\t// It is fine to return early, even if multiple roots would need to be fixed.\n     *\t\t\t\t\t// All post-fixers will be fired again, so if there are more empty roots, those will be fixed, too.\n     *\t\t\t\t\treturn true;\n     *\t\t\t\t}\n     *\t\t\t}\n     *\t\t} );\n     *\n     * @param {Function} postFixer\n     */\n\n  }, {\n    key: \"registerPostFixer\",\n    value: function registerPostFixer(postFixer) {\n      this._postFixers.add(postFixer);\n    }\n    /**\n     * A custom `toJSON()` method to solve child-parent circular dependencies.\n     *\n     * @returns {Object} A clone of this object with the document property changed to a string.\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = clone(this); // Due to circular references we need to remove parent reference.\n\n      json.selection = '[engine.model.DocumentSelection]';\n      json.model = '[engine.model.Model]';\n      return json;\n    }\n    /**\n     * Returns the default root for this document which is either the first root that was added to the document using\n     * {@link #createRoot} or the {@link #graveyard graveyard root} if no other roots were created.\n     *\n     * @protected\n     * @returns {module:engine/model/rootelement~RootElement} The default root for this document.\n     */\n\n  }, {\n    key: \"_getDefaultRoot\",\n    value: function _getDefaultRoot() {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.roots[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var root = _step.value;\n\n          if (root !== this.graveyard) {\n            return root;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return this.graveyard;\n    }\n    /**\n     * Returns the default range for this selection. The default range is a collapsed range that starts and ends\n     * at the beginning of this selection's document {@link #_getDefaultRoot default root}.\n     *\n     * @protected\n     * @returns {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"_getDefaultRange\",\n    value: function _getDefaultRange() {\n      var defaultRoot = this._getDefaultRoot();\n\n      var model = this.model;\n      var schema = model.schema; // Find the first position where the selection can be put.\n\n      var position = model.createPositionFromPath(defaultRoot, [0]);\n      var nearestRange = schema.getNearestSelectionRange(position); // If valid selection range is not found - return range collapsed at the beginning of the root.\n\n      return nearestRange || model.createRange(position);\n    }\n    /**\n     * Checks whether a given {@link module:engine/model/range~Range range} is a valid range for\n     * the {@link #selection document's selection}.\n     *\n     * @private\n     * @param {module:engine/model/range~Range} range A range to check.\n     * @returns {Boolean} `true` if `range` is valid, `false` otherwise.\n     */\n\n  }, {\n    key: \"_validateSelectionRange\",\n    value: function _validateSelectionRange(range) {\n      return validateTextNodePosition(range.start) && validateTextNodePosition(range.end);\n    }\n    /**\n     * Performs post-fixer loops. Executes post-fixer callbacks as long as none of them has done any changes to the model.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_callPostFixers\",\n    value: function _callPostFixers(writer) {\n      var wasFixed = false;\n\n      do {\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = this._postFixers[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var callback = _step2.value;\n            wasFixed = callback(writer);\n\n            if (wasFixed) {\n              break;\n            }\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      } while (wasFixed);\n    }\n    /**\n     * Fired after each {@link module:engine/model/model~Model#enqueueChange `enqueueChange()` block} or the outermost\n     * {@link module:engine/model/model~Model#change `change()` block} was executed and the document was changed\n     * during that block's execution.\n     *\n     * The changes which this event will cover include:\n     *\n     * * document structure changes,\n     * * selection changes,\n     * * marker changes.\n     *\n     * If you want to be notified about all these changes, then simply listen to this event like this:\n     *\n     *\t\tmodel.document.on( 'change', () => {\n     *\t\t\tconsole.log( 'The document has changed!' );\n     *\t\t} );\n     *\n     * If, however, you only want to be notified about the data changes, then use the\n     * {@link module:engine/model/document~Document#event:change:data change:data} event,\n     * which is fired for document structure changes and marker changes (which affects the data).\n     *\n     *\t\tmodel.document.on( 'change:data', () => {\n     *\t\t\tconsole.log( 'The data has changed!' );\n     *\t\t} );\n     *\n     * @event change\n     * @param {module:engine/model/batch~Batch} batch The batch that was used in the executed changes block.\n     */\n\n    /**\n     * It is a narrower version of the {@link #event:change} event. It is fired for changes which\n     * affect the editor data. This is:\n     *\n     * * document structure changes,\n     * * marker changes (which affects the data).\n     *\n     * If you want to be notified about the data changes, then listen to this event:\n     *\n     *\t\tmodel.document.on( 'change:data', () => {\n     *\t\t\tconsole.log( 'The data has changed!' );\n     *\t\t} );\n     *\n     * If you would like to listen to all document changes, then check out the\n     * {@link module:engine/model/document~Document#event:change change} event.\n     *\n     * @event change:data\n     * @param {module:engine/model/batch~Batch} batch The batch that was used in the executed changes block.\n     */\n\n  }, {\n    key: \"graveyard\",\n    get: function get() {\n      return this.getRoot(graveyardName);\n    }\n  }]);\n\n  return Document;\n}();\n\nexport { Document as default };\nmix(Document, EmitterMixin); // Checks whether given range boundary position is valid for document selection, meaning that is not between\n// unicode surrogate pairs or base character and combining marks.\n\nfunction validateTextNodePosition(rangeBoundary) {\n  var textNode = rangeBoundary.textNode;\n\n  if (textNode) {\n    var data = textNode.data;\n    var offset = rangeBoundary.offset - textNode.startOffset;\n    return !isInsideSurrogatePair(data, offset) && !isInsideCombinedSymbol(data, offset);\n  }\n\n  return true;\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/markercollection\n */\nimport LiveRange from './liverange';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n/**\n * The collection of all {@link module:engine/model/markercollection~Marker markers} attached to the document.\n * It lets you {@link module:engine/model/markercollection~MarkerCollection#get get} markers or track them using\n * {@link module:engine/model/markercollection~MarkerCollection#event:update} event.\n *\n * To create, change or remove makers use {@link module:engine/model/writer~Writer model writers'} methods:\n * {@link module:engine/model/writer~Writer#addMarker} or {@link module:engine/model/writer~Writer#removeMarker}. Since\n * the writer is the only proper way to change the data model it is not possible to change markers directly using this\n * collection. All markers created by the writer will be automatically added to this collection.\n *\n * By default there is one marker collection available as {@link module:engine/model/model~Model#markers model property}.\n *\n * @see module:engine/model/markercollection~Marker\n */\n\nvar MarkerCollection =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a markers collection.\n   */\n  function MarkerCollection() {\n    _classCallCheck(this, MarkerCollection);\n\n    /**\n     * Stores {@link ~Marker markers} added to the collection.\n     *\n     * @private\n     * @member {Map} #_markers\n     */\n    this._markers = new Map();\n  }\n  /**\n   * Iterable interface.\n   *\n   * Iterates over all {@link ~Marker markers} added to the collection.\n   *\n   * @returns {Iterable}\n   */\n\n\n  _createClass(MarkerCollection, [{\n    key: Symbol.iterator,\n    value: function value() {\n      return this._markers.values();\n    }\n    /**\n     * Checks if marker with given `markerName` is in the collection.\n     *\n     * @param {String} markerName Marker name.\n     * @returns {Boolean} `true` if marker with given `markerName` is in the collection, `false` otherwise.\n     */\n\n  }, {\n    key: \"has\",\n    value: function has(markerName) {\n      return this._markers.has(markerName);\n    }\n    /**\n     * Returns {@link ~Marker marker} with given `markerName`.\n     *\n     * @param {String} markerName Name of marker to get.\n     * @returns {module:engine/model/markercollection~Marker|null} Marker with given name or `null` if such marker was\n     * not added to the collection.\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(markerName) {\n      return this._markers.get(markerName) || null;\n    }\n    /**\n     * Creates and adds a {@link ~Marker marker} to the `MarkerCollection` with given name on given\n     * {@link module:engine/model/range~Range range}.\n     *\n     * If `MarkerCollection` already had a marker with given name (or {@link ~Marker marker} was passed), the marker in\n     * collection is updated and {@link module:engine/model/markercollection~MarkerCollection#event:update} event is fired\n     * but only if there was a change (marker range or {@link module:engine/model/markercollection~Marker#managedUsingOperations}\n     * flag has changed.\n     *\n     * @protected\n     * @fires module:engine/model/markercollection~MarkerCollection#event:update\n     * @param {String|module:engine/model/markercollection~Marker} markerOrName Name of marker to set or marker instance to update.\n     * @param {module:engine/model/range~Range} range Marker range.\n     * @param {Boolean} [managedUsingOperations=false] Specifies whether the marker is managed using operations.\n     * @param {Boolean} [affectsData=false] Specifies whether the marker affects the data produced by the data pipeline\n     * (is persisted in the editor's data).\n     * @returns {module:engine/model/markercollection~Marker} `Marker` instance which was added or updated.\n     */\n\n  }, {\n    key: \"_set\",\n    value: function _set(markerOrName, range) {\n      var managedUsingOperations = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var affectsData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      var markerName = markerOrName instanceof Marker ? markerOrName.name : markerOrName;\n\n      var oldMarker = this._markers.get(markerName);\n\n      if (oldMarker) {\n        var oldRange = oldMarker.getRange();\n        var hasChanged = false;\n\n        if (!oldRange.isEqual(range)) {\n          oldMarker._attachLiveRange(LiveRange.fromRange(range));\n\n          hasChanged = true;\n        }\n\n        if (managedUsingOperations != oldMarker.managedUsingOperations) {\n          oldMarker._managedUsingOperations = managedUsingOperations;\n          hasChanged = true;\n        }\n\n        if (typeof affectsData === 'boolean' && affectsData != oldMarker.affectsData) {\n          oldMarker._affectsData = affectsData;\n          hasChanged = true;\n        }\n\n        if (hasChanged) {\n          this.fire('update:' + markerName, oldMarker, oldRange, range);\n        }\n\n        return oldMarker;\n      }\n\n      var liveRange = LiveRange.fromRange(range);\n      var marker = new Marker(markerName, liveRange, managedUsingOperations, affectsData);\n\n      this._markers.set(markerName, marker);\n\n      this.fire('update:' + markerName, marker, null, range);\n      return marker;\n    }\n    /**\n     * Removes given {@link ~Marker marker} or a marker with given name from the `MarkerCollection`.\n     *\n     * @protected\n     * @fires module:engine/model/markercollection~MarkerCollection#event:update\n     * @param {String} markerOrName Marker or name of a marker to remove.\n     * @returns {Boolean} `true` if marker was found and removed, `false` otherwise.\n     */\n\n  }, {\n    key: \"_remove\",\n    value: function _remove(markerOrName) {\n      var markerName = markerOrName instanceof Marker ? markerOrName.name : markerOrName;\n\n      var oldMarker = this._markers.get(markerName);\n\n      if (oldMarker) {\n        this._markers.delete(markerName);\n\n        this.fire('update:' + markerName, oldMarker, oldMarker.getRange(), null);\n\n        this._destroyMarker(oldMarker);\n\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Returns iterator that iterates over all markers, which ranges contain given {@link module:engine/model/position~Position position}.\n     *\n     * @param {module:engine/model/position~Position} position\n     * @returns {Iterable.<module:engine/model/markercollection~Marker>}\n     */\n\n  }, {\n    key: \"getMarkersAtPosition\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function getMarkersAtPosition(position) {\n      var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, marker;\n\n      return regeneratorRuntime.wrap(function getMarkersAtPosition$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _iteratorError = undefined;\n              _context.prev = 3;\n              _iterator = this[Symbol.iterator]();\n\n            case 5:\n              if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                _context.next = 13;\n                break;\n              }\n\n              marker = _step.value;\n\n              if (!marker.getRange().containsPosition(position)) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.next = 10;\n              return marker;\n\n            case 10:\n              _iteratorNormalCompletion = true;\n              _context.next = 5;\n              break;\n\n            case 13:\n              _context.next = 19;\n              break;\n\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](3);\n              _didIteratorError = true;\n              _iteratorError = _context.t0;\n\n            case 19:\n              _context.prev = 19;\n              _context.prev = 20;\n\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n\n            case 22:\n              _context.prev = 22;\n\n              if (!_didIteratorError) {\n                _context.next = 25;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 25:\n              return _context.finish(22);\n\n            case 26:\n              return _context.finish(19);\n\n            case 27:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, getMarkersAtPosition, this, [[3, 15, 19, 27], [20,, 22, 26]]);\n    })\n    /**\n     * Returns iterator that iterates over all markers, which intersects with given {@link module:engine/model/range~Range range}.\n     *\n     * @param {module:engine/model/range~Range} range\n     * @returns {Iterable.<module:engine/model/markercollection~Marker>}\n     */\n\n  }, {\n    key: \"getMarkersIntersectingRange\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function getMarkersIntersectingRange(range) {\n      var _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, marker;\n\n      return regeneratorRuntime.wrap(function getMarkersIntersectingRange$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _iteratorNormalCompletion2 = true;\n              _didIteratorError2 = false;\n              _iteratorError2 = undefined;\n              _context2.prev = 3;\n              _iterator2 = this[Symbol.iterator]();\n\n            case 5:\n              if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {\n                _context2.next = 13;\n                break;\n              }\n\n              marker = _step2.value;\n\n              if (!(marker.getRange().getIntersection(range) !== null)) {\n                _context2.next = 10;\n                break;\n              }\n\n              _context2.next = 10;\n              return marker;\n\n            case 10:\n              _iteratorNormalCompletion2 = true;\n              _context2.next = 5;\n              break;\n\n            case 13:\n              _context2.next = 19;\n              break;\n\n            case 15:\n              _context2.prev = 15;\n              _context2.t0 = _context2[\"catch\"](3);\n              _didIteratorError2 = true;\n              _iteratorError2 = _context2.t0;\n\n            case 19:\n              _context2.prev = 19;\n              _context2.prev = 20;\n\n              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                _iterator2.return();\n              }\n\n            case 22:\n              _context2.prev = 22;\n\n              if (!_didIteratorError2) {\n                _context2.next = 25;\n                break;\n              }\n\n              throw _iteratorError2;\n\n            case 25:\n              return _context2.finish(22);\n\n            case 26:\n              return _context2.finish(19);\n\n            case 27:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, getMarkersIntersectingRange, this, [[3, 15, 19, 27], [20,, 22, 26]]);\n    })\n    /**\n     * Destroys marker collection and all markers inside it.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this._markers.values()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var marker = _step3.value;\n\n          this._destroyMarker(marker);\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      this._markers = null;\n      this.stopListening();\n    }\n    /**\n     * Iterates over all markers that starts with given `prefix`.\n     *\n     *\t\tconst markerFooA = markersCollection.set( 'foo:a', rangeFooA );\n     *\t\tconst markerFooB = markersCollection.set( 'foo:b', rangeFooB );\n     *\t\tconst markerBarA = markersCollection.set( 'bar:a', rangeBarA );\n     *\t\tconst markerFooBarA = markersCollection.set( 'foobar:a', rangeFooBarA );\n     *\t\tArray.from( markersCollection.getMarkersGroup( 'foo' ) ); // [ markerFooA, markerFooB ]\n     *\t\tArray.from( markersCollection.getMarkersGroup( 'a' ) ); // []\n     *\n     * @param prefix\n     * @returns {Iterable.<module:engine/model/markercollection~Marker>}\n     */\n\n  }, {\n    key: \"getMarkersGroup\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function getMarkersGroup(prefix) {\n      var _iteratorNormalCompletion4, _didIteratorError4, _iteratorError4, _iterator4, _step4, marker;\n\n      return regeneratorRuntime.wrap(function getMarkersGroup$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _iteratorNormalCompletion4 = true;\n              _didIteratorError4 = false;\n              _iteratorError4 = undefined;\n              _context3.prev = 3;\n              _iterator4 = this._markers.values()[Symbol.iterator]();\n\n            case 5:\n              if (_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done) {\n                _context3.next = 13;\n                break;\n              }\n\n              marker = _step4.value;\n\n              if (!marker.name.startsWith(prefix + ':')) {\n                _context3.next = 10;\n                break;\n              }\n\n              _context3.next = 10;\n              return marker;\n\n            case 10:\n              _iteratorNormalCompletion4 = true;\n              _context3.next = 5;\n              break;\n\n            case 13:\n              _context3.next = 19;\n              break;\n\n            case 15:\n              _context3.prev = 15;\n              _context3.t0 = _context3[\"catch\"](3);\n              _didIteratorError4 = true;\n              _iteratorError4 = _context3.t0;\n\n            case 19:\n              _context3.prev = 19;\n              _context3.prev = 20;\n\n              if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n                _iterator4.return();\n              }\n\n            case 22:\n              _context3.prev = 22;\n\n              if (!_didIteratorError4) {\n                _context3.next = 25;\n                break;\n              }\n\n              throw _iteratorError4;\n\n            case 25:\n              return _context3.finish(22);\n\n            case 26:\n              return _context3.finish(19);\n\n            case 27:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, getMarkersGroup, this, [[3, 15, 19, 27], [20,, 22, 26]]);\n    })\n    /**\n     * Destroys the marker.\n     *\n     * @private\n     * @param {module:engine/model/markercollection~Marker} marker Marker to destroy.\n     */\n\n  }, {\n    key: \"_destroyMarker\",\n    value: function _destroyMarker(marker) {\n      marker.stopListening();\n\n      marker._detachLiveRange();\n    }\n    /**\n     * Fired whenever marker is added, updated or removed from `MarkerCollection`.\n     *\n     * @event update\n     * @param {module:engine/model/markercollection~Marker} Updated Marker.\n     * @param {module:engine/model/range~Range|null} oldRange Marker range before the update. When is not defined it\n     * means that marker is just added.\n     * @param {module:engine/model/range~Range|null} newRange Marker range after update. When is not defined it\n     * means that marker is just removed.\n     */\n\n  }]);\n\n  return MarkerCollection;\n}();\n\nexport { MarkerCollection as default };\nmix(MarkerCollection, EmitterMixin);\n/**\n * `Marker` is a continuous parts of model (like a range), is named and represent some kind of information about marked\n * part of model document. In contrary to {@link module:engine/model/node~Node nodes}, which are building blocks of\n * model document tree, markers are not stored directly in document tree but in\n * {@link module:engine/model/model~Model#markers model markers' collection}. Still, they are document data, by giving\n * additional meaning to the part of a model document between marker start and marker end.\n *\n * In this sense, markers are similar to adding and converting attributes on nodes. The difference is that attribute is\n * connected with a given node (e.g. a character is bold no matter if it gets moved or content around it changes).\n * Markers on the other hand are continuous ranges and are characterized by their start and end position. This means that\n * any character in the marker is marked by the marker. For example, if a character is moved outside of marker it stops being\n * \"special\" and the marker is shrunk. Similarly, when a character is moved into the marker from other place in document\n * model, it starts being \"special\" and the marker is enlarged.\n *\n * Another upside of markers is that finding marked part of document is fast and easy. Using attributes to mark some nodes\n * and then trying to find that part of document would require traversing whole document tree. Marker gives instant access\n * to the range which it is marking at the moment.\n *\n * Markers are built from a name and a range.\n *\n * Range of the marker is updated automatically when document changes, using\n * {@link module:engine/model/liverange~LiveRange live range} mechanism.\n *\n * Name is used to group and identify markers. Names have to be unique, but markers can be grouped by\n * using common prefixes, separated with `:`, for example: `user:john` or `search:3`. That's useful in term of creating\n * namespaces for custom elements (e.g. comments, highlights). You can use this prefixes in\n * {@link module:engine/model/markercollection~MarkerCollection#event:update} listeners to listen on changes in a group of markers.\n * For instance: `model.markers.on( 'set:user', callback );` will be called whenever any `user:*` markers changes.\n *\n * There are two types of markers.\n *\n * 1. Markers managed directly, without using operations. They are added directly by {@link module:engine/model/writer~Writer}\n * to the {@link module:engine/model/markercollection~MarkerCollection} without any additional mechanism. They can be used\n * as bookmarks or visual markers. They are great for showing results of the find, or select link when the focus is in the input.\n *\n * 1. Markers managed using operations. These markers are also stored in {@link module:engine/model/markercollection~MarkerCollection}\n * but changes in these markers is managed the same way all other changes in the model structure - using operations.\n * Therefore, they are handled in the undo stack and synchronized between clients if the collaboration plugin is enabled.\n * This type of markers is useful for solutions like spell checking or comments.\n *\n * Both type of them should be added / updated by {@link module:engine/model/writer~Writer#addMarker}\n * and removed by {@link module:engine/model/writer~Writer#removeMarker} methods.\n *\n *\t\tmodel.change( ( writer ) => {\n * \t\t\tconst marker = writer.addMarker( name, { range, usingOperation: true } );\n *\n * \t\t\t// ...\n *\n * \t\t\twriter.removeMarker( marker );\n *\t\t} );\n *\n * See {@link module:engine/model/writer~Writer} to find more examples.\n *\n * Since markers need to track change in the document, for efficiency reasons, it is best to create and keep as little\n * markers as possible and remove them as soon as they are not needed anymore.\n *\n * Markers can be downcasted and upcasted.\n *\n * Markers downcast happens on {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:addMarker} and\n * {@link module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:removeMarker} events.\n * Use {@link module:engine/conversion/downcast-converters downcast converters} or attach a custom converter to mentioned events.\n * For {@link module:engine/controller/datacontroller~DataController data pipeline}, marker should be downcasted to an element.\n * Then, it can be upcasted back to a marker. Again, use {@link module:engine/conversion/upcast-converters upcast converters} or\n * attach a custom converter to {@link module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:element}.\n *\n * Another upside of markers is that finding marked part of document is fast and easy. Using attributes to mark some nodes\n * and then trying to find that part of document would require traversing whole document tree. Marker gives instant access\n * to the range which it is marking at the moment.\n *\n * `Marker` instances are created and destroyed only by {@link ~MarkerCollection MarkerCollection}.\n */\n\nvar Marker =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a marker instance.\n   *\n   * @param {String} name Marker name.\n   * @param {module:engine/model/liverange~LiveRange} liveRange Range marked by the marker.\n   * @param {Boolean} managedUsingOperations Specifies whether the marker is managed using operations.\n   * @param {Boolean} affectsData Specifies whether the marker affects the data produced by the data pipeline\n   * (is persisted in the editor's data).\n   */\n  function Marker(name, liveRange, managedUsingOperations, affectsData) {\n    _classCallCheck(this, Marker);\n\n    /**\n     * Marker's name.\n     *\n     * @readonly\n     * @type {String}\n     */\n    this.name = name;\n    /**\n     * Range marked by the marker.\n     *\n     * @protected\n     * @member {module:engine/model/liverange~LiveRange}\n     */\n\n    this._liveRange = this._attachLiveRange(liveRange);\n    /**\n     * Flag indicates if the marker is managed using operations or not.\n     *\n     * @private\n     * @member {Boolean}\n     */\n\n    this._managedUsingOperations = managedUsingOperations;\n    /**\n     * Specifies whether the marker affects the data produced by the data pipeline\n     * (is persisted in the editor's data).\n     *\n     * @private\n     * @member {Boolean}\n     */\n\n    this._affectsData = affectsData;\n  }\n  /**\n   * A value indicating if the marker is managed using operations.\n   * See {@link ~Marker marker class description} to learn more about marker types.\n   * See {@link module:engine/model/writer~Writer#addMarker}.\n   *\n   * @returns {Boolean}\n   */\n\n\n  _createClass(Marker, [{\n    key: \"getStart\",\n\n    /**\n     * Returns current marker start position.\n     *\n     * @returns {module:engine/model/position~Position}\n     */\n    value: function getStart() {\n      if (!this._liveRange) {\n        throw new CKEditorError('marker-destroyed: Cannot use a destroyed marker instance.');\n      }\n\n      return this._liveRange.start.clone();\n    }\n    /**\n     * Returns current marker end position.\n     *\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"getEnd\",\n    value: function getEnd() {\n      if (!this._liveRange) {\n        throw new CKEditorError('marker-destroyed: Cannot use a destroyed marker instance.');\n      }\n\n      return this._liveRange.end.clone();\n    }\n    /**\n     * Returns a range that represents the current state of the marker.\n     *\n     * Keep in mind that returned value is a {@link module:engine/model/range~Range Range}, not a\n     * {@link module:engine/model/liverange~LiveRange LiveRange}. This means that it is up-to-date and relevant only\n     * until next model document change. Do not store values returned by this method. Instead, store {@link ~Marker#name}\n     * and get `Marker` instance from {@link module:engine/model/markercollection~MarkerCollection MarkerCollection} every\n     * time there is a need to read marker properties. This will guarantee that the marker has not been removed and\n     * that it's data is up-to-date.\n     *\n     * @returns {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"getRange\",\n    value: function getRange() {\n      if (!this._liveRange) {\n        throw new CKEditorError('marker-destroyed: Cannot use a destroyed marker instance.');\n      }\n\n      return this._liveRange.toRange();\n    }\n    /**\n     * Binds new live range to the marker and detach the old one if is attached.\n     *\n     * @protected\n     * @param {module:engine/model/liverange~LiveRange} liveRange Live range to attach\n     * @returns {module:engine/model/liverange~LiveRange} Attached live range.\n     */\n\n  }, {\n    key: \"_attachLiveRange\",\n    value: function _attachLiveRange(liveRange) {\n      if (this._liveRange) {\n        this._detachLiveRange();\n      } // Delegating does not work with namespaces. Alternatively, we could delegate all events (using `*`).\n\n\n      liveRange.delegate('change:range').to(this);\n      liveRange.delegate('change:content').to(this);\n      this._liveRange = liveRange;\n      return liveRange;\n    }\n    /**\n     * Unbinds and destroys currently attached live range.\n     *\n     * @protected\n     */\n\n  }, {\n    key: \"_detachLiveRange\",\n    value: function _detachLiveRange() {\n      this._liveRange.stopDelegating('change:range', this);\n\n      this._liveRange.stopDelegating('change:content', this);\n\n      this._liveRange.detach();\n\n      this._liveRange = null;\n    }\n    /**\n     * Fired whenever {@link ~Marker#_liveRange marker range} is changed due to changes on {@link module:engine/model/document~Document}.\n     * This is a delegated {@link module:engine/model/liverange~LiveRange#event:change:range LiveRange change:range event}.\n     *\n     * When marker is removed from {@link module:engine/model/markercollection~MarkerCollection MarkerCollection},\n     * all event listeners listening to it should be removed. It is best to do it on\n     * {@link module:engine/model/markercollection~MarkerCollection#event:update MarkerCollection update event}.\n     *\n     * @see module:engine/model/liverange~LiveRange#event:change:range\n     * @event change:range\n     * @param {module:engine/model/range~Range} oldRange\n     * @param {Object} data\n     */\n\n    /**\n     * Fired whenever change on {@link module:engine/model/document~Document} is done inside {@link ~Marker#_liveRange marker range}.\n     * This is a delegated {@link module:engine/model/liverange~LiveRange#event:change:content LiveRange change:content event}.\n     *\n     * When marker is removed from {@link module:engine/model/markercollection~MarkerCollection MarkerCollection},\n     * all event listeners listening to it should be removed. It is best to do it on\n     * {@link module:engine/model/markercollection~MarkerCollection#event:update MarkerCollection update event}.\n     *\n     * @see module:engine/model/liverange~LiveRange#event:change:content\n     * @event change:content\n     * @param {module:engine/model/range~Range} oldRange\n     * @param {Object} data\n     */\n\n  }, {\n    key: \"managedUsingOperations\",\n    get: function get() {\n      if (!this._liveRange) {\n        throw new CKEditorError('marker-destroyed: Cannot use a destroyed marker instance.');\n      }\n\n      return this._managedUsingOperations;\n    }\n    /**\n     * A value indicating if the marker changes the data.\n     *\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"affectsData\",\n    get: function get() {\n      if (!this._liveRange) {\n        throw new CKEditorError('marker-destroyed: Cannot use a destroyed marker instance.');\n      }\n\n      return this._affectsData;\n    }\n  }]);\n\n  return Marker;\n}();\n\nmix(Marker, EmitterMixin);\n/**\n * Cannot use a {@link module:engine/model/markercollection~MarkerCollection#destroy destroyed marker} instance.\n *\n * @error marker-destroyed\n */","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/utils/insertcontent\n */\nimport Position from '../position';\nimport LivePosition from '../liveposition';\nimport Element from '../element';\nimport Range from '../range';\nimport log from '@ckeditor/ckeditor5-utils/src/log';\nimport DocumentSelection from '../documentselection';\nimport Selection from '../selection';\n/**\n * Inserts content into the editor (specified selection) as one would expect the paste\n * functionality to work.\n *\n * If an instance of {@link module:engine/model/selection~Selection} is passed as `selectable` it will be modified\n * to the insertion selection (equal to a range to be selected after insertion).\n *\n * **Note:** Use {@link module:engine/model/model~Model#insertContent} instead of this function.\n * This function is only exposed to be reusable in algorithms which change the {@link module:engine/model/model~Model#insertContent}\n * method's behavior.\n *\n * @param {module:engine/model/model~Model} model The model in context of which the insertion\n * should be performed.\n * @param {module:engine/model/documentfragment~DocumentFragment|module:engine/model/item~Item} content The content to insert.\n * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection|\n * module:engine/model/position~Position|module:engine/model/element~Element|\n * Iterable.<module:engine/model/range~Range>|module:engine/model/range~Range|null} [selectable=model.document.selection]\n * Selection into which the content should be inserted.\n * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n */\n\nexport default function insertContent(model, content, selectable, placeOrOffset) {\n  model.change(function (writer) {\n    var selection;\n\n    if (!selectable) {\n      selection = model.document.selection;\n    } else if (selectable instanceof Selection || selectable instanceof DocumentSelection) {\n      selection = selectable;\n    } else {\n      selection = writer.createSelection(selectable, placeOrOffset);\n    }\n\n    if (!selection.isCollapsed) {\n      model.deleteContent(selection);\n    }\n\n    var insertion = new Insertion(model, writer, selection.anchor);\n    var nodesToInsert;\n\n    if (content.is('documentFragment')) {\n      nodesToInsert = content.getChildren();\n    } else {\n      nodesToInsert = [content];\n    }\n\n    insertion.handleNodes(nodesToInsert, {\n      // The set of children being inserted is the only set in this context\n      // so it's the first and last (it's a hack ;)).\n      isFirst: true,\n      isLast: true\n    });\n    var newRange = insertion.getSelectionRange();\n    /* istanbul ignore else */\n\n    if (newRange) {\n      if (selection instanceof DocumentSelection) {\n        writer.setSelection(newRange);\n      } else {\n        selection.setTo(newRange);\n      }\n    } else {\n      // We are not testing else because it's a safe check for unpredictable edge cases:\n      // an insertion without proper range to select.\n\n      /**\n       * Cannot determine a proper selection range after insertion.\n       *\n       * @warning insertcontent-no-range\n       */\n      log.warn('insertcontent-no-range: Cannot determine a proper selection range after insertion.');\n    }\n  });\n}\n/**\n * Utility class for performing content insertion.\n *\n * @private\n */\n\nvar Insertion =\n/*#__PURE__*/\nfunction () {\n  function Insertion(model, writer, position) {\n    _classCallCheck(this, Insertion);\n\n    /**\n     * The model in context of which the insertion should be performed.\n     *\n     * @member {module:engine/model~Model} #model\n     */\n    this.model = model;\n    /**\n     * Batch to which operations will be added.\n     *\n     * @member {module:engine/controller/writer~Batch} #writer\n     */\n\n    this.writer = writer;\n    /**\n     * The position at which (or near which) the next node will be inserted.\n     *\n     * @member {module:engine/model/position~Position} #position\n     */\n\n    this.position = position;\n    /**\n     * Elements with which the inserted elements can be merged.\n     *\n     *\t\t<p>x^</p><p>y</p> + <p>z</p> (can merge to <p>x</p>)\n     *\t\t<p>x</p><p>^y</p> + <p>z</p> (can merge to <p>y</p>)\n     *\t\t<p>x^y</p> + <p>z</p> (can merge to <p>xy</p> which will be split during the action,\n     *\t\t\t\t\t\t\t\tso both its pieces will be added to this set)\n     *\n     *\n     * @member {Set} #canMergeWith\n     */\n\n    this.canMergeWith = new Set([this.position.parent]);\n    /**\n     * Schema of the model.\n     *\n     * @member {module:engine/model/schema~Schema} #schema\n     */\n\n    this.schema = model.schema;\n    this._filterAttributesOf = [];\n  }\n  /**\n   * Handles insertion of a set of nodes.\n   *\n   * @param {Iterable.<module:engine/model/node~Node>} nodes Nodes to insert.\n   * @param {Object} parentContext Context in which parent of these nodes was supposed to be inserted.\n   * If the parent context is passed it means that the parent element was stripped (was not allowed).\n   */\n\n\n  _createClass(Insertion, [{\n    key: \"handleNodes\",\n    value: function handleNodes(nodes, parentContext) {\n      nodes = Array.from(nodes);\n\n      for (var i = 0; i < nodes.length; i++) {\n        var node = nodes[i];\n\n        this._handleNode(node, {\n          isFirst: i === 0 && parentContext.isFirst,\n          isLast: i === nodes.length - 1 && parentContext.isLast\n        });\n      } // TMP this will become a post-fixer.\n\n\n      this.schema.removeDisallowedAttributes(this._filterAttributesOf, this.writer);\n      this._filterAttributesOf = [];\n    }\n    /**\n     * Returns range to be selected after insertion.\n     * Returns null if there is no valid range to select after insertion.\n     *\n     * @returns {module:engine/model/range~Range|null}\n     */\n\n  }, {\n    key: \"getSelectionRange\",\n    value: function getSelectionRange() {\n      if (this.nodeToSelect) {\n        return Range._createOn(this.nodeToSelect);\n      }\n\n      return this.model.schema.getNearestSelectionRange(this.position);\n    }\n    /**\n     * Handles insertion of a single node.\n     *\n     * @private\n     * @param {module:engine/model/node~Node} node\n     * @param {Object} context\n     * @param {Boolean} context.isFirst Whether the given node is the first one in the content to be inserted.\n     * @param {Boolean} context.isLast Whether the given node is the last one in the content to be inserted.\n     */\n\n  }, {\n    key: \"_handleNode\",\n    value: function _handleNode(node, context) {\n      // Let's handle object in a special way.\n      // * They should never be merged with other elements.\n      // * If they are not allowed in any of the selection ancestors, they could be either autoparagraphed or totally removed.\n      if (this.schema.isObject(node)) {\n        this._handleObject(node, context);\n\n        return;\n      } // Try to find a place for the given node.\n      // Split the position.parent's branch up to a point where the node can be inserted.\n      // If it isn't allowed in the whole branch, then of course don't split anything.\n\n\n      var isAllowed = this._checkAndSplitToAllowedPosition(node, context);\n\n      if (!isAllowed) {\n        this._handleDisallowedNode(node, context);\n\n        return;\n      }\n\n      this._insert(node); // After the node was inserted we may try to merge it with its siblings.\n      // This should happen only if it was the first and/or last of the nodes (so only with boundary nodes)\n      // and only if the selection was in those elements initially.\n      //\n      // E.g.:\n      // <p>x^</p> + <p>y</p> => <p>x</p><p>y</p> => <p>xy[]</p>\n      // and:\n      // <p>x^y</p> + <p>z</p> => <p>x</p>^<p>y</p> + <p>z</p> => <p>x</p><p>y</p><p>z</p> => <p>xy[]z</p>\n      // but:\n      // <p>x</p><p>^</p><p>z</p> + <p>y</p> => <p>x</p><p>y</p><p>z</p> (no merging)\n      // <p>x</p>[<img>]<p>z</p> + <p>y</p> => <p>x</p><p>y</p><p>z</p> (no merging, note: after running deletetContents\n      //\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t it's exactly the same case as above)\n\n\n      this._mergeSiblingsOf(node, context);\n    }\n    /**\n     * @private\n     * @param {module:engine/model/element~Element} node The object element.\n     * @param {Object} context\n     */\n\n  }, {\n    key: \"_handleObject\",\n    value: function _handleObject(node, context) {\n      // Try finding it a place in the tree.\n      if (this._checkAndSplitToAllowedPosition(node)) {\n        this._insert(node);\n      } // Try autoparagraphing.\n      else {\n          this._tryAutoparagraphing(node, context);\n        }\n    }\n    /**\n     * @private\n     * @param {module:engine/model/node~Node} node The disallowed node which needs to be handled.\n     * @param {Object} context\n     */\n\n  }, {\n    key: \"_handleDisallowedNode\",\n    value: function _handleDisallowedNode(node, context) {\n      // If the node is an element, try inserting its children (strip the parent).\n      if (node.is('element')) {\n        this.handleNodes(node.getChildren(), context);\n      } // If text is not allowed, try autoparagraphing it.\n      else {\n          this._tryAutoparagraphing(node, context);\n        }\n    }\n    /**\n     * @private\n     * @param {module:engine/model/node~Node} node The node to insert.\n     */\n\n  }, {\n    key: \"_insert\",\n    value: function _insert(node) {\n      /* istanbul ignore if */\n      if (!this.schema.checkChild(this.position, node)) {\n        // Algorithm's correctness check. We should never end up here but it's good to know that we did.\n        // Note that it would often be a silent issue if we insert node in a place where it's not allowed.\n        log.error('insertcontent-wrong-position: The node cannot be inserted on the given position.', {\n          node: node,\n          position: this.position\n        });\n        return;\n      }\n\n      var livePos = LivePosition.fromPosition(this.position, 'toNext');\n      this.writer.insert(node, this.position);\n      this.position = livePos.toPosition();\n      livePos.detach(); // The last inserted object should be selected because we can't put a collapsed selection after it.\n\n      if (this.schema.isObject(node) && !this.schema.checkChild(this.position, '$text')) {\n        this.nodeToSelect = node;\n      } else {\n        this.nodeToSelect = null;\n      }\n\n      this._filterAttributesOf.push(node);\n    }\n    /**\n     * @private\n     * @param {module:engine/model/node~Node} node The node which could potentially be merged.\n     * @param {Object} context\n     */\n\n  }, {\n    key: \"_mergeSiblingsOf\",\n    value: function _mergeSiblingsOf(node, context) {\n      if (!(node instanceof Element)) {\n        return;\n      }\n\n      var mergeLeft = this._canMergeLeft(node, context);\n\n      var mergeRight = this._canMergeRight(node, context);\n\n      var mergePosLeft = LivePosition._createBefore(node);\n\n      mergePosLeft.stickiness = 'toNext';\n\n      var mergePosRight = LivePosition._createAfter(node);\n\n      mergePosRight.stickiness = 'toNext';\n\n      if (mergeLeft) {\n        var livePosition = LivePosition.fromPosition(this.position);\n        livePosition.stickiness = 'toNext';\n        this.writer.merge(mergePosLeft);\n        this.position = livePosition.toPosition();\n        livePosition.detach();\n      }\n\n      if (mergeRight) {\n        /* istanbul ignore if */\n        if (!this.position.isEqual(mergePosRight)) {\n          // Algorithm's correctness check. We should never end up here but it's good to know that we did.\n          // At this point the insertion position should be after the node we'll merge. If it isn't,\n          // it should need to be secured as in the left merge case.\n          log.error('insertcontent-wrong-position-on-merge: The insertion position should equal the merge position');\n        } // Move the position to the previous node, so it isn't moved to the graveyard on merge.\n        // <p>x</p>[]<p>y</p> => <p>x[]</p><p>y</p>\n\n\n        this.position = Position._createAt(mergePosRight.nodeBefore, 'end'); // OK:  <p>xx[]</p> + <p>yy</p> => <p>xx[]yy</p> (when sticks to previous)\n        // NOK: <p>xx[]</p> + <p>yy</p> => <p>xxyy[]</p> (when sticks to next)\n\n        var _livePosition = new LivePosition(this.position.root, this.position.path, 'toPrevious');\n\n        this.writer.merge(mergePosRight);\n        this.position = _livePosition.toPosition();\n\n        _livePosition.detach();\n      }\n\n      if (mergeLeft || mergeRight) {\n        // After merge elements that were marked by _insert() to be filtered might be gone so\n        // we need to mark the new container.\n        this._filterAttributesOf.push(this.position.parent);\n      }\n\n      mergePosLeft.detach();\n      mergePosRight.detach();\n    }\n    /**\n     * Checks whether specified node can be merged with previous sibling element.\n     *\n     * @private\n     * @param {module:engine/model/node~Node} node The node which could potentially be merged.\n     * @param {Object} context\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"_canMergeLeft\",\n    value: function _canMergeLeft(node, context) {\n      var previousSibling = node.previousSibling;\n      return context.isFirst && previousSibling instanceof Element && this.canMergeWith.has(previousSibling) && this.model.schema.checkMerge(previousSibling, node);\n    }\n    /**\n     * Checks whether specified node can be merged with next sibling element.\n     *\n     * @private\n     * @param {module:engine/model/node~Node} node The node which could potentially be merged.\n     * @param {Object} context\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"_canMergeRight\",\n    value: function _canMergeRight(node, context) {\n      var nextSibling = node.nextSibling;\n      return context.isLast && nextSibling instanceof Element && this.canMergeWith.has(nextSibling) && this.model.schema.checkMerge(node, nextSibling);\n    }\n    /**\n     * Tries wrapping the node in a new paragraph and inserting it this way.\n     *\n     * @private\n     * @param {module:engine/model/node~Node} node The node which needs to be autoparagraphed.\n     * @param {Object} context\n     */\n\n  }, {\n    key: \"_tryAutoparagraphing\",\n    value: function _tryAutoparagraphing(node, context) {\n      var paragraph = this.writer.createElement('paragraph'); // Do not autoparagraph if the paragraph won't be allowed there,\n      // cause that would lead to an infinite loop. The paragraph would be rejected in\n      // the next _handleNode() call and we'd be here again.\n\n      if (this._getAllowedIn(paragraph, this.position.parent) && this.schema.checkChild(paragraph, node)) {\n        paragraph._appendChild(node);\n\n        this._handleNode(paragraph, context);\n      }\n    }\n    /**\n     * @private\n     * @param {module:engine/model/node~Node} node\n     * @returns {Boolean} Whether an allowed position was found.\n     * `false` is returned if the node isn't allowed at any position up in the tree, `true` if was.\n     */\n\n  }, {\n    key: \"_checkAndSplitToAllowedPosition\",\n    value: function _checkAndSplitToAllowedPosition(node) {\n      var allowedIn = this._getAllowedIn(node, this.position.parent);\n\n      if (!allowedIn) {\n        return false;\n      }\n\n      while (allowedIn != this.position.parent) {\n        // If a parent which we'd need to leave is a limit element, break.\n        if (this.schema.isLimit(this.position.parent)) {\n          return false;\n        }\n\n        if (this.position.isAtStart) {\n          var parent = this.position.parent;\n          this.position = this.writer.createPositionBefore(parent); // Special case – parent is empty (<p>^</p>) so isAtStart == isAtEnd == true.\n          // We can remove the element after moving selection out of it.\n\n          if (parent.isEmpty) {\n            this.writer.remove(parent);\n          }\n        } else if (this.position.isAtEnd) {\n          this.position = this.writer.createPositionAfter(this.position.parent);\n        } else {\n          var tempPos = this.writer.createPositionAfter(this.position.parent);\n          this.writer.split(this.position);\n          this.position = tempPos;\n          this.canMergeWith.add(this.position.nodeAfter);\n        }\n      }\n\n      return true;\n    }\n    /**\n     * Gets the element in which the given node is allowed. It checks the passed element and all its ancestors.\n     *\n     * @private\n     * @param {module:engine/model/node~Node} node The node to check.\n     * @param {module:engine/model/element~Element} element The element in which the node's correctness should be checked.\n     * @returns {module:engine/model/element~Element|null}\n     */\n\n  }, {\n    key: \"_getAllowedIn\",\n    value: function _getAllowedIn(node, element) {\n      if (this.schema.checkChild(element, node)) {\n        return element;\n      }\n\n      if (element.parent) {\n        return this._getAllowedIn(node, element.parent);\n      }\n\n      return null;\n    }\n  }]);\n\n  return Insertion;\n}();","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/utils/deletecontent\n */\nimport LivePosition from '../liveposition';\nimport Range from '../range';\nimport DocumentSelection from '../documentselection';\n/**\n * Deletes content of the selection and merge siblings. The resulting selection is always collapsed.\n *\n * **Note:** Use {@link module:engine/model/model~Model#deleteContent} instead of this function.\n * This function is only exposed to be reusable in algorithms\n * which change the {@link module:engine/model/model~Model#deleteContent}\n * method's behavior.\n *\n * @param {module:engine/model/model~Model} model The model in context of which the insertion\n * should be performed.\n * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n * Selection of which the content should be deleted.\n * @param {module:engine/model/batch~Batch} batch Batch to which the operations will be added.\n * @param {Object} [options]\n * @param {Boolean} [options.leaveUnmerged=false] Whether to merge elements after removing the content of the selection.\n *\n * For example `<heading>x[x</heading><paragraph>y]y</paragraph>` will become:\n *\n * * `<heading>x^y</heading>` with the option disabled (`leaveUnmerged == false`)\n * * `<heading>x^</heading><paragraph>y</paragraph>` with enabled (`leaveUnmerged == true`).\n *\n * Note: {@link module:engine/model/schema~Schema#isObject object} and {@link module:engine/model/schema~Schema#isLimit limit}\n * elements will not be merged.\n *\n * @param {Boolean} [options.doNotResetEntireContent=false] Whether to skip replacing the entire content with a\n * paragraph when the entire content was selected.\n *\n * For example `<heading>[x</heading><paragraph>y]</paragraph>` will become:\n *\n * * `<paragraph>^</paragraph>` with the option disabled (`doNotResetEntireContent == false`)\n * * `<heading>^</heading>` with enabled (`doNotResetEntireContent == true`).\n */\n\nexport default function deleteContent(model, selection) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (selection.isCollapsed) {\n    return;\n  }\n\n  var schema = model.schema;\n  model.change(function (writer) {\n    // 1. Replace the entire content with paragraph.\n    // See: https://github.com/ckeditor/ckeditor5-engine/issues/1012#issuecomment-315017594.\n    if (!options.doNotResetEntireContent && shouldEntireContentBeReplacedWithParagraph(schema, selection)) {\n      replaceEntireContentWithParagraph(writer, selection, schema);\n      return;\n    }\n\n    var selRange = selection.getFirstRange();\n    var startPos = selRange.start;\n    var endPos = LivePosition.fromPosition(selRange.end, 'toNext'); // 2. Remove the content if there is any.\n\n    if (!selRange.start.isTouching(selRange.end)) {\n      writer.remove(selRange);\n    } // 3. Merge elements in the right branch to the elements in the left branch.\n    // The only reasonable (in terms of data and selection correctness) case in which we need to do that is:\n    //\n    // <heading type=1>Fo[</heading><paragraph>]ar</paragraph> => <heading type=1>Fo^ar</heading>\n    //\n    // However, the algorithm supports also merging deeper structures (up to the depth of the shallower branch),\n    // as it's hard to imagine what should actually be the default behavior. Usually, specific features will\n    // want to override that behavior anyway.\n\n\n    if (!options.leaveUnmerged) {\n      mergeBranches(writer, startPos, endPos); // TMP this will be replaced with a postifxer.\n      // We need to check and strip disallowed attributes in all nested nodes because after merge\n      // some attributes could end up in a path where are disallowed.\n      //\n      // e.g. bold is disallowed for <H1>\n      // <h1>Fo{o</h1><p>b}a<b>r</b><p> -> <h1>Fo{}a<b>r</b><h1> -> <h1>Fo{}ar<h1>.\n\n      schema.removeDisallowedAttributes(startPos.parent.getChildren(), writer);\n    }\n\n    if (selection instanceof DocumentSelection) {\n      writer.setSelection(startPos);\n    } else {\n      selection.setTo(startPos);\n    } // 4. Autoparagraphing.\n    // Check if a text is allowed in the new container. If not, try to create a new paragraph (if it's allowed here).\n\n\n    if (shouldAutoparagraph(schema, startPos)) {\n      insertParagraph(writer, startPos, selection);\n    }\n\n    endPos.detach();\n  });\n} // This function is a result of reaching the Ballmer's peak for just the right amount of time.\n// Even I had troubles documenting it after a while and after reading it again I couldn't believe that it really works.\n\nfunction mergeBranches(writer, startPos, endPos) {\n  var startParent = startPos.parent;\n  var endParent = endPos.parent; // If both positions ended up in the same parent, then there's nothing more to merge:\n  // <$root><p>x[]</p><p>{}y</p></$root> => <$root><p>xy</p>[]{}</$root>\n\n  if (startParent == endParent) {\n    return;\n  } // If one of the positions is a limit element, then there's nothing to merge because we don't want to cross the limit boundaries.\n\n\n  if (writer.model.schema.isLimit(startParent) || writer.model.schema.isLimit(endParent)) {\n    return;\n  } // Check if operations we'll need to do won't need to cross object or limit boundaries.\n  // E.g., we can't merge endParent into startParent in this case:\n  // <limit><startParent>x[]</startParent></limit><endParent>{}</endParent>\n\n\n  if (!checkCanBeMerged(startPos, endPos, writer.model.schema)) {\n    return;\n  } // Remember next positions to merge. For example:\n  // <a><b>x[]</b></a><c><d>{}y</d></c>\n  // will become:\n  // <a><b>xy</b>[]</a><c>{}</c>\n\n\n  startPos = writer.createPositionAfter(startParent);\n  endPos = writer.createPositionBefore(endParent);\n\n  if (!endPos.isEqual(startPos)) {\n    // In this case, before we merge, we need to move `endParent` to the `startPos`:\n    // <a><b>x[]</b></a><c><d>{}y</d></c>\n    // becomes:\n    // <a><b>x</b>[]<d>y</d></a><c>{}</c>\n    writer.insert(endParent, startPos);\n  } // Merge two siblings:\n  // <a>x</a>[]<b>y</b> -> <a>xy</a> (the usual case)\n  // <a><b>x</b>[]<d>y</d></a><c></c> -> <a><b>xy</b>[]</a><c></c> (this is the \"move parent\" case shown above)\n\n\n  writer.merge(startPos); // Remove empty end ancestors:\n  // <a>fo[o</a><b><a><c>bar]</c></a></b>\n  // becomes:\n  // <a>fo[]</a><b><a>{}</a></b>\n  // So we can remove <a> and <b>.\n\n  while (endPos.parent.isEmpty) {\n    var parentToRemove = endPos.parent;\n    endPos = writer.createPositionBefore(parentToRemove);\n    writer.remove(parentToRemove);\n  } // Continue merging next level.\n\n\n  mergeBranches(writer, startPos, endPos);\n}\n\nfunction shouldAutoparagraph(schema, position) {\n  var isTextAllowed = schema.checkChild(position, '$text');\n  var isParagraphAllowed = schema.checkChild(position, 'paragraph');\n  return !isTextAllowed && isParagraphAllowed;\n} // Check if parents of two positions can be merged by checking if there are no limit/object\n// boundaries between those two positions.\n//\n// E.g. in <bQ><p>x[]</p></bQ><widget><caption>{}</caption></widget>\n// we'll check <p>, <bQ>, <widget> and <caption>.\n// Usually, widget and caption are marked as objects/limits in the schema, so in this case merging will be blocked.\n\n\nfunction checkCanBeMerged(leftPos, rightPos, schema) {\n  var rangeToCheck = new Range(leftPos, rightPos);\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = rangeToCheck.getWalker()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var value = _step.value;\n\n      if (schema.isLimit(value.item)) {\n        return false;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return true;\n}\n\nfunction insertParagraph(writer, position, selection) {\n  var paragraph = writer.createElement('paragraph');\n  writer.insert(paragraph, position);\n\n  if (selection instanceof DocumentSelection) {\n    writer.setSelection(paragraph, 0);\n  } else {\n    selection.setTo(paragraph, 0);\n  }\n}\n\nfunction replaceEntireContentWithParagraph(writer, selection) {\n  var limitElement = writer.model.schema.getLimitElement(selection);\n  writer.remove(writer.createRangeIn(limitElement));\n  insertParagraph(writer, writer.createPositionAt(limitElement, 0), selection);\n} // We want to replace the entire content with a paragraph when:\n// * the entire content is selected,\n// * selection contains at least two elements,\n// * whether the paragraph is allowed in schema in the common ancestor.\n\n\nfunction shouldEntireContentBeReplacedWithParagraph(schema, selection) {\n  var limitElement = schema.getLimitElement(selection);\n\n  if (!selection.containsEntireContent(limitElement)) {\n    return false;\n  }\n\n  var range = selection.getFirstRange();\n\n  if (range.start.parent == range.end.parent) {\n    return false;\n  }\n\n  return schema.checkChild(limitElement, 'paragraph');\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/utils/modifyselection\n */\nimport Position from '../position';\nimport TreeWalker from '../treewalker';\nimport Range from '../range';\nimport { isInsideSurrogatePair, isInsideCombinedSymbol } from '@ckeditor/ckeditor5-utils/src/unicode';\nimport DocumentSelection from '../documentselection';\nvar wordBoundaryCharacters = ' ,.?!:;\"-()';\n/**\n * Modifies the selection. Currently, the supported modifications are:\n *\n * * Extending. The selection focus is moved in the specified `options.direction` with a step specified in `options.unit`.\n * Possible values for `unit` are:\n *  * `'character'` (default) - moves selection by one user-perceived character. In most cases this means moving by one\n *  character in `String` sense. However, unicode also defines \"combing marks\". These are special symbols, that combines\n *  with a symbol before it (\"base character\") to create one user-perceived character. For example, `q̣̇` is a normal\n *  letter `q` with two \"combining marks\": upper dot (`Ux0307`) and lower dot (`Ux0323`). For most actions, i.e. extending\n *  selection by one position, it is correct to include both \"base character\" and all of it's \"combining marks\". That is\n *  why `'character'` value is most natural and common method of modifying selection.\n *  * `'codePoint'` - moves selection by one unicode code point. In contrary to, `'character'` unit, this will insert\n *  selection between \"base character\" and \"combining mark\", because \"combining marks\" have their own unicode code points.\n *  However, for technical reasons, unicode code points with values above `UxFFFF` are represented in native `String` by\n *  two characters, called \"surrogate pairs\". Halves of \"surrogate pairs\" have a meaning only when placed next to each other.\n *  For example `𨭎` is represented in `String` by `\\uD862\\uDF4E`. Both `\\uD862` and `\\uDF4E` do not have any meaning\n *  outside the pair (are rendered as ? when alone). Position between them would be incorrect. In this case, selection\n *  extension will include whole \"surrogate pair\".\n *  * `'word'` - moves selection by a whole word.\n *\n * **Note:** if you extend a forward selection in a backward direction you will in fact shrink it.\n *\n * **Note:** Use {@link module:engine/model/model~Model#modifySelection} instead of this function.\n * This function is only exposed to be reusable in algorithms\n * which change the {@link module:engine/model/model~Model#modifySelection}\n * method's behavior.\n *\n * @param {module:engine/model/model~Model} model The model in context of which\n * the selection modification should be performed.\n * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n * The selection to modify.\n * @param {Object} [options]\n * @param {'forward'|'backward'} [options.direction='forward'] The direction in which the selection should be modified.\n * @param {'character'|'codePoint'|'word'} [options.unit='character'] The unit by which selection should be modified.\n */\n\nexport default function modifySelection(model, selection) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var schema = model.schema;\n  var isForward = options.direction != 'backward';\n  var unit = options.unit ? options.unit : 'character';\n  var focus = selection.focus;\n  var walker = new TreeWalker({\n    boundaries: getSearchRange(focus, isForward),\n    singleCharacters: true,\n    direction: isForward ? 'forward' : 'backward'\n  });\n  var data = {\n    walker: walker,\n    schema: schema,\n    isForward: isForward,\n    unit: unit\n  };\n  var next;\n\n  var _loop = function _loop() {\n    if (next.done) {\n      return {\n        v: void 0\n      };\n    }\n\n    var position = tryExtendingTo(data, next.value);\n\n    if (position) {\n      if (selection instanceof DocumentSelection) {\n        model.change(function (writer) {\n          writer.setSelectionFocus(position);\n        });\n      } else {\n        selection.setFocus(position);\n      }\n\n      return {\n        v: void 0\n      };\n    }\n  };\n\n  while (next = walker.next()) {\n    var _ret = _loop();\n\n    if (_typeof(_ret) === \"object\") return _ret.v;\n  }\n} // Checks whether the selection can be extended to the the walker's next value (next position).\n// @param {{ walker, unit, isForward, schema }} data\n// @param {module:engine/view/treewalker~TreeWalkerValue} value\n\nfunction tryExtendingTo(data, value) {\n  // If found text, we can certainly put the focus in it. Let's just find a correct position\n  // based on the unit.\n  if (value.type == 'text') {\n    if (data.unit === 'word') {\n      return getCorrectWordBreakPosition(data.walker, data.isForward);\n    }\n\n    return getCorrectPosition(data.walker, data.unit, data.isForward);\n  } // Entering an element.\n\n\n  if (value.type == (data.isForward ? 'elementStart' : 'elementEnd')) {\n    // If it's an object, we can select it now.\n    if (data.schema.isObject(value.item)) {\n      return Position._createAt(value.item, data.isForward ? 'after' : 'before');\n    } // If text allowed on this position, extend to this place.\n\n\n    if (data.schema.checkChild(value.nextPosition, '$text')) {\n      return value.nextPosition;\n    }\n  } // Leaving an element.\n  else {\n      // If leaving a limit element, stop.\n      if (data.schema.isLimit(value.item)) {\n        // NOTE: Fast-forward the walker until the end.\n        data.walker.skip(function () {\n          return true;\n        });\n        return;\n      } // If text allowed on this position, extend to this place.\n\n\n      if (data.schema.checkChild(value.nextPosition, '$text')) {\n        return value.nextPosition;\n      }\n    }\n} // Finds a correct position by walking in a text node and checking whether selection can be extended to given position\n// or should be extended further.\n//\n// @param {module:engine/model/treewalker~TreeWalker} walker\n// @param {String} unit The unit by which selection should be modified.\n\n\nfunction getCorrectPosition(walker, unit) {\n  var textNode = walker.position.textNode;\n\n  if (textNode) {\n    var data = textNode.data;\n    var offset = walker.position.offset - textNode.startOffset;\n\n    while (isInsideSurrogatePair(data, offset) || unit == 'character' && isInsideCombinedSymbol(data, offset)) {\n      walker.next();\n      offset = walker.position.offset - textNode.startOffset;\n    }\n  }\n\n  return walker.position;\n} // Finds a correct position of a word break by walking in a text node and checking whether selection can be extended to given position\n// or should be extended further.\n//\n// @param {module:engine/model/treewalker~TreeWalker} walker\n// @param {Boolean} isForward Is the direction in which the selection should be modified is forward.\n\n\nfunction getCorrectWordBreakPosition(walker, isForward) {\n  var textNode = walker.position.textNode;\n\n  if (textNode) {\n    var offset = walker.position.offset - textNode.startOffset;\n\n    while (!isAtWordBoundary(textNode.data, offset, isForward) && !isAtNodeBoundary(textNode, offset, isForward)) {\n      walker.next(); // Check of adjacent text nodes with different attributes (like BOLD).\n      // Example          : 'foofoo []bar<$text bold=\"true\">bar</$text> bazbaz'\n      // should expand to : 'foofoo [bar<$text bold=\"true\">bar</$text>] bazbaz'.\n\n      var nextNode = isForward ? walker.position.nodeAfter : walker.position.nodeBefore; // Scan only text nodes. Ignore inline elements (like `<softBreak>`).\n\n      if (nextNode && nextNode.is('text')) {\n        // Check boundary char of an adjacent text node.\n        var boundaryChar = nextNode.data.charAt(isForward ? 0 : nextNode.data.length - 1); // Go to the next node if the character at the boundary of that node belongs to the same word.\n\n        if (!wordBoundaryCharacters.includes(boundaryChar)) {\n          // If adjacent text node belongs to the same word go to it & reset values.\n          walker.next();\n          textNode = walker.position.textNode;\n        }\n      }\n\n      offset = walker.position.offset - textNode.startOffset;\n    }\n  }\n\n  return walker.position;\n}\n\nfunction getSearchRange(start, isForward) {\n  var root = start.root;\n\n  var searchEnd = Position._createAt(root, isForward ? 'end' : 0);\n\n  if (isForward) {\n    return new Range(start, searchEnd);\n  } else {\n    return new Range(searchEnd, start);\n  }\n} // Checks if selection is on word boundary.\n//\n// @param {String} data The text node value to investigate.\n// @param {Number} offset Position offset.\n// @param {Boolean} isForward Is the direction in which the selection should be modified is forward.\n\n\nfunction isAtWordBoundary(data, offset, isForward) {\n  // The offset to check depends on direction.\n  var offsetToCheck = offset + (isForward ? 0 : -1);\n  return wordBoundaryCharacters.includes(data.charAt(offsetToCheck));\n} // Checks if selection is on node boundary.\n//\n// @param {module:engine/model/text~Text} textNode The text node to investigate.\n// @param {Number} offset Position offset.\n// @param {Boolean} isForward Is the direction in which the selection should be modified is forward.\n\n\nfunction isAtNodeBoundary(textNode, offset, isForward) {\n  return offset === (isForward ? textNode.endOffset : 0);\n}","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/utils/getselectedcontent\n */\n\n/**\n * Gets a clone of the selected content.\n *\n * For example, for the following selection:\n *\n * ```html\n * <p>x</p><quote><p>y</p><h>fir[st</h></quote><p>se]cond</p><p>z</p>\n * ```\n *\n * It will return a document fragment with such a content:\n *\n * ```html\n * <quote><h>st</h></quote><p>se</p>\n * ```\n *\n * @param {module:engine/model/model~Model} model The model in context of which\n * the selection modification should be performed.\n * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n * The selection of which content will be returned.\n * @returns {module:engine/model/documentfragment~DocumentFragment}\n */\nexport default function getSelectedContent(model, selection) {\n  return model.change(function (writer) {\n    var frag = writer.createDocumentFragment();\n    var range = selection.getFirstRange();\n\n    if (!range || range.isCollapsed) {\n      return frag;\n    }\n\n    var root = range.start.root;\n    var commonPath = range.start.getCommonPath(range.end);\n    var commonParent = root.getNodeByPath(commonPath); // ## 1st step\n    //\n    // First, we'll clone a fragment represented by a minimal flat range\n    // containing the original range to be cloned.\n    // E.g. let's consider such a range:\n    //\n    // <p>x</p><quote><p>y</p><h>fir[st</h></quote><p>se]cond</p><p>z</p>\n    //\n    // A minimal flat range containing this one is:\n    //\n    // <p>x</p>[<quote><p>y</p><h>first</h></quote><p>second</p>]<p>z</p>\n    //\n    // We can easily clone this structure, preserving e.g. the <quote> element.\n\n    var flatSubtreeRange;\n\n    if (range.start.parent == range.end.parent) {\n      // The original range is flat, so take it.\n      flatSubtreeRange = range;\n    } else {\n      flatSubtreeRange = writer.createRange(writer.createPositionAt(commonParent, range.start.path[commonPath.length]), writer.createPositionAt(commonParent, range.end.path[commonPath.length] + 1));\n    }\n\n    var howMany = flatSubtreeRange.end.offset - flatSubtreeRange.start.offset; // Clone the whole contents.\n\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = flatSubtreeRange.getItems({\n        shallow: true\n      })[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var item = _step.value;\n\n        if (item.is('textProxy')) {\n          writer.appendText(item.data, item.getAttributes(), frag);\n        } else {\n          writer.append(item._clone(true), frag);\n        }\n      } // ## 2nd step\n      //\n      // If the original range wasn't flat, then we need to remove the excess nodes from the both ends of the cloned fragment.\n      //\n      // For example, for the range shown in the 1st step comment, we need to remove these pieces:\n      //\n      // <quote>[<p>y</p>]<h>[fir]st</h></quote><p>se[cond]</p>\n      //\n      // So this will be the final copied content:\n      //\n      // <quote><h>st</h></quote><p>se</p>\n      //\n      // In order to do that, we remove content from these two ranges:\n      //\n      // [<quote><p>y</p><h>fir]st</h></quote><p>se[cond</p>]\n\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    if (flatSubtreeRange != range) {\n      // Find the position of the original range in the cloned fragment.\n      var newRange = range._getTransformedByMove(flatSubtreeRange.start, writer.createPositionAt(frag, 0), howMany)[0];\n\n      var leftExcessRange = writer.createRange(writer.createPositionAt(frag, 0), newRange.start);\n      var rightExcessRange = writer.createRange(newRange.end, writer.createPositionAt(frag, 'end'));\n      removeRangeContent(rightExcessRange, writer);\n      removeRangeContent(leftExcessRange, writer);\n    }\n\n    return frag;\n  });\n} // After https://github.com/ckeditor/ckeditor5-engine/issues/690 is fixed,\n// this function will, most likely, be able to rewritten using getMinimalFlatRanges().\n\nfunction removeRangeContent(range, writer) {\n  var parentsToCheck = [];\n  Array.from(range.getItems({\n    direction: 'backward'\n  })) // We should better store ranges because text proxies will lose integrity\n  // with the text nodes when we'll start removing content.\n  .map(function (item) {\n    return writer.createRangeOn(item);\n  }) // Filter only these items which are fully contained in the passed range.\n  //\n  // E.g. for the following range: [<quote><p>y</p><h>fir]st</h>\n  // the walker will return the entire <h> element, when only the \"fir\" item inside it is fully contained.\n  .filter(function (itemRange) {\n    // We should be able to use Range.containsRange, but https://github.com/ckeditor/ckeditor5-engine/issues/691.\n    var contained = (itemRange.start.isAfter(range.start) || itemRange.start.isEqual(range.start)) && (itemRange.end.isBefore(range.end) || itemRange.end.isEqual(range.end));\n    return contained;\n  }).forEach(function (itemRange) {\n    parentsToCheck.push(itemRange.start.parent);\n    writer.remove(itemRange);\n  }); // Remove ancestors of the removed items if they turned to be empty now\n  // (their whole content was contained in the range).\n\n  parentsToCheck.forEach(function (parentToCheck) {\n    var parent = parentToCheck;\n\n    while (parent.parent && parent.isEmpty) {\n      var removeRange = writer.createRangeOn(parent);\n      parent = parent.parent;\n      writer.remove(removeRange);\n    }\n  });\n}","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/utils/selection-post-fixer\n */\nimport Range from '../range';\nimport Position from '../position';\n/**\n * Injects selection post-fixer to the model.\n *\n * The role of the selection post-fixer is to ensure that the selection is in a correct place\n * after a {@link module:engine/model/model~Model#change `change()`} block was executed.\n *\n * The correct position means that:\n *\n * * All collapsed selection ranges are in a place where the {@link module:engine/model/schema~Schema}\n * allows a `$text`.\n * * None of the selection's non-collapsed ranges crosses a {@link module:engine/model/schema~Schema#isLimit limit element}\n * boundary (a range must be rooted within one limit element).\n * * Only {@link module:engine/model/schema~Schema#isObject object elements} can be selected from the outside\n * (e.g. `[<paragraph>foo</paragraph>]` is invalid). This rule applies independently to both selection ends, so this\n * selection is correct: `<paragraph>f[oo</paragraph><image></image>]`.\n *\n * If the position is not correct, the post-fixer will automatically correct it.\n *\n * ## Fixing a non-collapsed selection\n *\n * See as an example a selection that starts in a P1 element and ends inside the text of a TD element\n * (`[` and `]` are range boundaries and `(l)` denotes an element defined as `isLimit=true`):\n *\n *\t\troot\n *\t\t |- element P1\n *\t\t |   |- \"foo\"                                      root\n *\t\t |- element TABLE (l)                   P1         TABLE             P2\n *\t\t |   |- element TR (l)                 f o[o     TR      TR         b a r\n *\t\t |   |   |- element TD (l)                       TD      TD\n *\t\t |   |       |- \"aaa\"                          a]a a    b b b\n *\t\t |   |- element TR (l)\n *\t\t |   |   |- element TD (l)                           ||\n *\t\t |   |       |- \"bbb\"                                ||\n *\t\t |- element P2                                       VV\n *\t\t |   |- \"bar\"\n *\t\t                                                   root\n *\t\t                                        P1         TABLE]            P2\n *\t\t                                       f o[o     TR      TR         b a r\n *\t\t                                                 TD      TD\n *\t\t                                               a a a    b b b\n *\n * In the example above, the TABLE, TR and TD are defined as `isLimit=true` in the schema. The range which is not contained within\n * a single limit element must be expanded to select the outermost limit element. The range end is inside the text node of the TD element.\n * As the TD element is a child of the TR and TABLE elements, where both are defined as `isLimit=true` in the schema, the range must be\n * expanded to select the whole TABLE element.\n *\n * **Note** If the selection contains multiple ranges, the method returns a minimal set of ranges that are not intersecting after expanding\n * them to select `isLimit=true` elements.\n *\n * @param {module:engine/model/model~Model} model\n */\n\nexport function injectSelectionPostFixer(model) {\n  model.document.registerPostFixer(function (writer) {\n    return selectionPostFixer(writer, model);\n  });\n} // The selection post-fixer.\n//\n// @param {module:engine/model/writer~Writer} writer\n// @param {module:engine/model/model~Model} model\n\nfunction selectionPostFixer(writer, model) {\n  var selection = model.document.selection;\n  var schema = model.schema;\n  var ranges = [];\n  var wasFixed = false;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = selection.getRanges()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var modelRange = _step.value;\n      // Go through all ranges in selection and try fixing each of them.\n      // Those ranges might overlap but will be corrected later.\n      var correctedRange = tryFixingRange(modelRange, schema);\n\n      if (correctedRange) {\n        ranges.push(correctedRange);\n        wasFixed = true;\n      } else {\n        ranges.push(modelRange);\n      }\n    } // If any of ranges were corrected update the selection.\n\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  if (wasFixed) {\n    // The above algorithm might create ranges that intersects each other when selection contains more then one range.\n    // This is case happens mostly on Firefox which creates multiple ranges for selected table.\n    var fixedRanges = ranges; // Fixing selection with many ranges usually breaks the selection in Firefox. As only Firefox supports multiple selection ranges\n    // we simply create one continuous range from fixed selection ranges (even if they are not adjacent).\n\n    if (ranges.length > 1) {\n      var selectionStart = ranges[0].start;\n      var selectionEnd = ranges[ranges.length - 1].end;\n      fixedRanges = [new Range(selectionStart, selectionEnd)];\n    }\n\n    writer.setSelection(fixedRanges, {\n      backward: selection.isBackward\n    });\n  }\n} // Tries fixing a range if it's incorrect.\n//\n// @param {module:engine/model/range~Range} range\n// @param {module:engine/model/schema~Schema} schema\n// @returns {module:engine/model/range~Range|null} Returns fixed range or null if range is valid.\n\n\nfunction tryFixingRange(range, schema) {\n  if (range.isCollapsed) {\n    return tryFixingCollapsedRange(range, schema);\n  }\n\n  return tryFixingNonCollapsedRage(range, schema);\n} // Tries to fix collapsed ranges.\n//\n// * Fixes situation when a range is in a place where $text is not allowed\n//\n// @param {module:engine/model/range~Range} range Collapsed range to fix.\n// @param {module:engine/model/schema~Schema} schema\n// @returns {module:engine/model/range~Range|null} Returns fixed range or null if range is valid.\n\n\nfunction tryFixingCollapsedRange(range, schema) {\n  var originalPosition = range.start;\n  var nearestSelectionRange = schema.getNearestSelectionRange(originalPosition); // This might be null ie when editor data is empty.\n  // In such cases there is no need to fix the selection range.\n\n  if (!nearestSelectionRange) {\n    return null;\n  }\n\n  var fixedPosition = nearestSelectionRange.start; // Fixed position is the same as original - no need to return corrected range.\n\n  if (originalPosition.isEqual(fixedPosition)) {\n    return null;\n  } // Check single node selection (happens in tables).\n\n\n  if (fixedPosition.nodeAfter && schema.isLimit(fixedPosition.nodeAfter)) {\n    return new Range(fixedPosition, Position._createAfter(fixedPosition.nodeAfter));\n  }\n\n  return new Range(fixedPosition);\n} // Tries to fix an expanded range.\n//\n// @param {module:engine/model/range~Range} range Expanded range to fix.\n// @param {module:engine/model/schema~Schema} schema\n// @returns {module:engine/model/range~Range|null} Returns fixed range or null if range is valid.\n\n\nfunction tryFixingNonCollapsedRage(range, schema) {\n  var start = range.start;\n  var end = range.end;\n  var isTextAllowedOnStart = schema.checkChild(start, '$text');\n  var isTextAllowedOnEnd = schema.checkChild(end, '$text');\n  var startLimitElement = schema.getLimitElement(start);\n  var endLimitElement = schema.getLimitElement(end); // Ranges which both end are inside the same limit element (or root) might needs only minor fix.\n\n  if (startLimitElement === endLimitElement) {\n    // Range is valid when both position allows to place a text:\n    // - <block>f[oobarba]z</block>\n    // This would be \"fixed\" by a next check but as it will be the same it's better to return null so the selection stays the same.\n    if (isTextAllowedOnStart && isTextAllowedOnEnd) {\n      return null;\n    } // Range that is on non-limit element (or is partially) must be fixed so it is placed inside the block around $text:\n    // - [<block>foo</block>]    ->    <block>[foo]</block>\n    // - [<block>foo]</block>    ->    <block>[foo]</block>\n    // - <block>f[oo</block>]    ->    <block>f[oo]</block>\n\n\n    if (checkSelectionOnNonLimitElements(start, end, schema)) {\n      var fixedStart = schema.getNearestSelectionRange(start, 'forward');\n      var fixedEnd = schema.getNearestSelectionRange(end, 'backward');\n      return new Range(fixedStart ? fixedStart.start : start, fixedEnd ? fixedEnd.start : end);\n    }\n  }\n\n  var isStartInLimit = startLimitElement && !startLimitElement.is('rootElement');\n  var isEndInLimit = endLimitElement && !endLimitElement.is('rootElement'); // At this point we eliminated valid positions on text nodes so if one of range positions is placed inside a limit element\n  // then the range crossed limit element boundaries and needs to be fixed.\n\n  if (isStartInLimit || isEndInLimit) {\n    // Although we've already found limit element on start/end positions we must find the outer-most limit element.\n    // as limit elements might be nested directly inside (ie table > tableRow > tableCell).\n    var startPosition = Position._createAt(startLimitElement, 0);\n\n    var endPosition = Position._createAt(endLimitElement, 0);\n\n    var _fixedStart = isStartInLimit ? expandSelectionOnIsLimitNode(startPosition, schema, 'start') : start;\n\n    var _fixedEnd = isEndInLimit ? expandSelectionOnIsLimitNode(endPosition, schema, 'end') : end;\n\n    return new Range(_fixedStart, _fixedEnd);\n  } // Range was not fixed at this point so it is valid - ie it was placed around limit element already.\n\n\n  return null;\n} // Expands selection so it contains whole limit node.\n//\n// @param {module:engine/model/position~Position} position\n// @param {module:engine/model/schema~Schema} schema\n// @param {String} expandToDirection Direction of expansion - either 'start' or 'end' of the range.\n// @returns {module:engine/model/position~Position}\n\n\nfunction expandSelectionOnIsLimitNode(position, schema, expandToDirection) {\n  var node = position.parent;\n  var parent = node; // Find outer most isLimit block as such blocks might be nested (ie. in tables).\n\n  while (schema.isLimit(parent) && parent.parent) {\n    node = parent;\n    parent = parent.parent;\n  } // Depending on direction of expanding selection return position before or after found node.\n\n\n  return expandToDirection === 'start' ? Position._createBefore(node) : Position._createAfter(node);\n} // Checks whether both range ends are placed around non-limit elements.\n//\n// @param {module:engine/model/position~Position} start\n// @param {module:engine/model/position~Position} end\n// @param {module:engine/model/schema~Schema} schema\n\n\nfunction checkSelectionOnNonLimitElements(start, end, schema) {\n  var startIsOnBlock = start.nodeAfter && !schema.isLimit(start.nodeAfter) || schema.checkChild(start, '$text');\n  var endIsOnBlock = end.nodeBefore && !schema.isLimit(end.nodeBefore) || schema.checkChild(end, '$text');\n  return startIsOnBlock && endIsOnBlock;\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module engine/model/model\n */\nimport Batch from './batch';\nimport Writer from './writer';\nimport Schema from './schema';\nimport Document from './document';\nimport MarkerCollection from './markercollection';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport ModelElement from './element';\nimport ModelRange from './range';\nimport ModelPosition from './position';\nimport ModelSelection from './selection';\nimport _insertContent from './utils/insertcontent';\nimport _deleteContent from './utils/deletecontent';\nimport _modifySelection from './utils/modifyselection';\nimport _getSelectedContent from './utils/getselectedcontent';\nimport { injectSelectionPostFixer } from './utils/selection-post-fixer';\n/**\n * Editor's data model. Read about the model in the\n * {@glink framework/guides/architecture/editing-engine engine architecture guide}.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\n\nvar Model =\n/*#__PURE__*/\nfunction () {\n  function Model() {\n    var _this = this;\n\n    _classCallCheck(this, Model);\n\n    /**\n     * Model's marker collection.\n     *\n     * @readonly\n     * @member {module:engine/model/markercollection~MarkerCollection}\n     */\n    this.markers = new MarkerCollection();\n    /**\n     * Model's document.\n     *\n     * @readonly\n     * @member {module:engine/model/document~Document}\n     */\n\n    this.document = new Document(this);\n    /**\n     * Model's schema.\n     *\n     * @readonly\n     * @member {module:engine/model/schema~Schema}\n     */\n\n    this.schema = new Schema();\n    /**\n     * All callbacks added by {@link module:engine/model/model~Model#change} or\n     * {@link module:engine/model/model~Model#enqueueChange} methods waiting to be executed.\n     *\n     * @private\n     * @type {Array.<Function>}\n     */\n\n    this._pendingChanges = [];\n    /**\n     * The last created and currently used writer instance.\n     *\n     * @private\n     * @member {module:engine/model/writer~Writer}\n     */\n\n    this._currentWriter = null;\n    ['insertContent', 'deleteContent', 'modifySelection', 'getSelectedContent', 'applyOperation'].forEach(function (methodName) {\n      return _this.decorate(methodName);\n    }); // Adding operation validation with `highest` priority, so it is called before any other feature would like\n    // to do anything with the operation. If the operation has incorrect parameters it should throw on the earliest occasion.\n\n    this.on('applyOperation', function (evt, args) {\n      var operation = args[0];\n\n      operation._validate();\n    }, {\n      priority: 'highest'\n    }); // Register some default abstract entities.\n\n    this.schema.register('$root', {\n      isLimit: true\n    });\n    this.schema.register('$block', {\n      allowIn: '$root',\n      isBlock: true\n    });\n    this.schema.register('$text', {\n      allowIn: '$block'\n    });\n    this.schema.register('$clipboardHolder', {\n      allowContentOf: '$root',\n      isLimit: true\n    });\n    this.schema.extend('$text', {\n      allowIn: '$clipboardHolder'\n    }); // Element needed by `upcastElementToMarker` converter.\n    // This element temporarily represents marker bound during conversion process and is removed\n    // at the end of conversion. `UpcastDispatcher` or at least `Conversion` class looks like a better for this\n    // registration but both know nothing about Schema.\n\n    this.schema.register('$marker', {\n      allowIn: ['$root', '$block']\n    });\n    injectSelectionPostFixer(this);\n  }\n  /**\n   * The `change()` method is the primary way of changing the model. You should use it to modify all document nodes\n   * (including detached nodes – i.e. nodes not added to the {@link module:engine/model/model~Model#document model document}),\n   * the {@link module:engine/model/document~Document#selection document's selection}, and\n   * {@link module:engine/model/model~Model#markers model markers}.\n   *\n   *\t\tmodel.change( writer => {\n   *\t\t\twriter.insertText( 'foo', paragraph, 'end' );\n   *\t\t} );\n   *\n   * All changes inside the change block use the same {@link module:engine/model/batch~Batch} so they are combined\n   * into a single undo step.\n   *\n   *\t\tmodel.change( writer => {\n   *\t\t\twriter.insertText( 'foo', paragraph, 'end' ); // foo.\n   *\n   *\t\t\tmodel.change( writer => {\n   *\t\t\t\twriter.insertText( 'bar', paragraph, 'end' ); // foobar.\n   *\t\t\t} );\n   *\n   * \t\t\twriter.insertText( 'bom', paragraph, 'end' ); // foobarbom.\n   *\t\t} );\n   *\n   * The callback of the `change()` block is executed synchronously.\n   *\n   * You can also return a value from the change block.\n   *\n   *\t\tconst img = model.change( writer => {\n   *\t\t\treturn writer.createElement( 'img' );\n   *\t\t} );\n   *\n   * @see #enqueueChange\n   * @param {Function} callback Callback function which may modify the model.\n   * @returns {*} Value returned by the callback.\n   */\n\n\n  _createClass(Model, [{\n    key: \"change\",\n    value: function change(callback) {\n      if (this._pendingChanges.length === 0) {\n        // If this is the outermost block, create a new batch and start `_runPendingChanges` execution flow.\n        this._pendingChanges.push({\n          batch: new Batch(),\n          callback: callback\n        });\n\n        return this._runPendingChanges()[0];\n      } else {\n        // If this is not the outermost block, just execute the callback.\n        return callback(this._currentWriter);\n      }\n    }\n    /**\n     * The `enqueueChange()` method performs similar task as the {@link #change `change()` method}, with two major differences.\n     *\n     * First, the callback of `enqueueChange()` is executed when all other enqueued changes are done. It might be executed\n     * immediately if it is not nested in any other change block, but if it is nested in another (enqueue)change block,\n     * it will be delayed and executed after the outermost block.\n     *\n     *\t\tmodel.change( writer => {\n     *\t\t\tconsole.log( 1 );\n     *\n     *\t\t\tmodel.enqueueChange( writer => {\n     *\t\t\t\tconsole.log( 2 );\n     *\t\t\t} );\n     *\n     * \t\t\tconsole.log( 3 );\n     *\t\t} ); // Will log: 1, 3, 2.\n     *\n     * Second, it lets you define the {@link module:engine/model/batch~Batch} into which you want to add your changes.\n     * By default, a new batch is created. In the sample above, `change` and `enqueueChange` blocks use a different\n     * batch (and different {@link module:engine/model/writer~Writer} since each of them operates on the separate batch).\n     *\n     * When using the `enqueueChange()` block you can also add some changes to the batch you used before.\n     *\n     *\t\tmodel.enqueueChange( batch, writer => {\n     *\t\t\twriter.insertText( 'foo', paragraph, 'end' );\n     *\t\t} );\n     *\n     * The batch instance can be obtained from {@link module:engine/model/writer~Writer#batch the writer}.\n     *\n     * @param {module:engine/model/batch~Batch|'transparent'|'default'} batchOrType Batch or batch type should be used in the callback.\n     * If not defined, a new batch will be created.\n     * @param {Function} callback Callback function which may modify the model.\n     */\n\n  }, {\n    key: \"enqueueChange\",\n    value: function enqueueChange(batchOrType, callback) {\n      if (typeof batchOrType === 'string') {\n        batchOrType = new Batch(batchOrType);\n      } else if (typeof batchOrType == 'function') {\n        callback = batchOrType;\n        batchOrType = new Batch();\n      }\n\n      this._pendingChanges.push({\n        batch: batchOrType,\n        callback: callback\n      });\n\n      if (this._pendingChanges.length == 1) {\n        this._runPendingChanges();\n      }\n    }\n    /**\n     * {@link module:utils/observablemixin~ObservableMixin#decorate Decorated} function for applying\n     * {@link module:engine/model/operation/operation~Operation operations} to the model.\n     *\n     * This is a low-level way of changing the model. It is exposed for very specific use cases (like the undo feature).\n     * Normally, to modify the model, you will want to use {@link module:engine/model/writer~Writer `Writer`}.\n     * See also {@glink framework/guides/architecture/editing-engine#changing-the-model Changing the model} section\n     * of the {@glink framework/guides/architecture/editing-engine Editing architecture} guide.\n     *\n     * @param {module:engine/model/operation/operation~Operation} operation The operation to apply.\n     */\n\n  }, {\n    key: \"applyOperation\",\n    value: function applyOperation(operation) {\n      operation._execute();\n    }\n    /**\n     * Inserts content at the position in the editor specified by the selection, as one would expect the paste\n     * functionality to work.\n     *\n     * This is a high-level method. It takes the {@link #schema schema} into consideration when inserting\n     * the content, clears the given selection's content before inserting nodes and moves the selection\n     * to its target position at the end of the process.\n     * It can split elements, merge them, wrap bare text nodes with paragraphs, etc. &mdash; just like the\n     * pasting feature should do.\n     *\n     * For lower-level methods see {@link module:engine/model/writer~Writer `Writer`}.\n     *\n     * This method, unlike {@link module:engine/model/writer~Writer `Writer`}'s methods, does not have to be used\n     * inside a {@link #change `change()` block}.\n     *\n     * # Conversion and schema\n     *\n     * Inserting elements and text nodes into the model is not enough to make CKEditor 5 render that content\n     * to the user. CKEditor 5 implements a model-view-controller architecture and what `model.insertContent()` does\n     * is only adding nodes to the model. Additionally, you need to define\n     * {@glink framework/guides/architecture/editing-engine#conversion converters} between the model and view\n     * and define those nodes in the {@glink framework/guides/architecture/editing-engine#schema schema}.\n     *\n     * So, while this method may seem similar to CKEditor 4 `editor.insertHtml()` (in fact, both methods\n     * are used for paste-like content insertion), the CKEditor 5 method cannot be use to insert arbitrary HTML\n     * unless converters are defined for all elements and attributes in that HTML.\n     *\n     * # Examples\n     *\n     * Using `insertContent()` with a manually created model structure:\n     *\n     *\t\t// Let's create a document fragment containing such content as:\n     *\t\t//\n     *\t\t// <paragrap>foo</paragraph>\n     *\t\t// <blockQuote>\n     *\t\t//    <paragraph>bar</paragraph>\n     *\t\t// </blockQuote>\n     *\t\tconst docFrag = editor.model.change( writer => {\n     *\t\t\tconst p1 = writer.createElement( 'paragraph' );\n     *\t\t\tconst p2 = writer.createElement( 'paragraph' );\n     *\t\t\tconst blockQuote = writer.createElement( 'blockQuote' );\n     *\t\t\tconst docFrag = writer.createDocumentFragment();\n     *\n     *\t\t\twriter.append( p1, docFrag );\n     *\t\t\twriter.append( blockQuote, docFrag );\n     *\t\t\twriter.append( p2, blockQuote );\n     *\t\t\twriter.insertText( 'foo', p1 );\n     *\t\t\twriter.insertText( 'bar', p2 );\n     *\n     *\t\t\treturn docFrag;\n     *\t\t} );\n     *\n     *\t\t// insertContent() does not have to be used in a change() block. It can, though,\n     *\t\t// so this code could be moved to the callback defined above.\n     *\t\teditor.model.insertContent( docFrag );\n     *\n     * Using `insertContent()` with an HTML string converted to a model document fragment (similar to the pasting mechanism):\n     *\n     *\t\t// You can create your own HtmlDataProcessor instance or use editor.data.processor\n     *\t\t// if you have not overridden the default one (which is the HtmlDataProcessor instance).\n     *\t\tconst htmlDP = new HtmlDataProcessor();\n     *\n     *\t\t// Convert an HTML string to a view document fragment:\n     *\t\tconst viewFragment = htmlDP.toView( htmlString );\n     *\n     *\t\t// Convert the view document fragment to a model document fragment\n     *\t\t// in the context of $root. This conversion takes the schema into\n     *\t\t// account so if, for example, the view document fragment contained a bare text node,\n     *\t\t// this text node cannot be a child of $root, so it will be automatically\n     *\t\t// wrapped with a <paragraph>. You can define the context yourself (in the second parameter),\n     *\t\t// and e.g. convert the content like it would happen in a <paragraph>.\n     *\t\t// Note: The clipboard feature uses a custom context called $clipboardHolder\n     *\t\t// which has a loosened schema.\n     *\t\tconst modelFragment = editor.data.toModel( viewFragment );\n     *\n     *\t\teditor.model.insertContent( modelFragment );\n     *\n     * By default this method will use the document selection but it can also be used with a position, range or selection instance.\n     *\n     *\t\t// Insert text at the current document selection position.\n     *\t\teditor.model.change( writer => {\n     *\t\t\teditor.model.insertContent( writer.createText( 'x' ) );\n     *\t\t} );\n     *\n     *\t\t// Insert text at a given position - the document selection will not be modified.\n     *\t\teditor.model.change( writer => {\n     *\t\t\teditor.model.insertContent( writer.createText( 'x' ), doc.getRoot(), 2 );\n     *\n     *\t\t\t// Which is a shorthand for:\n     *\t\t\teditor.model.insertContent( writer.createText( 'x' ), writer.createPositionAt( doc.getRoot(), 2 ) );\n     *\t\t} );\n     *\n     * If an instance of {@link module:engine/model/selection~Selection} is passed as `selectable`\n     * it will be moved to the target position (where the document selection should be moved after the insertion).\n     *\n     *\t\teditor.model.change( writer => {\n     *\t\t\t// Insert text replacing the given selection instance.\n     *\t\t\tconst selection = writer.createSelection( paragraph, 'in' );\n     *\n     *\t\t\teditor.model.insertContent( writer.createText( 'x' ), selection );\n     *\n     *\t\t\t// insertContent() modifies the passed selection instance so it can be used to set the document selection.\n     *\t\t\t// Note: This is not necessary when you passed the document selection to insertContent().\n     *\t\t\twriter.setSelection( selection );\n     *\t\t} );\n     *\n     * @fires insertContent\n     * @param {module:engine/model/documentfragment~DocumentFragment|module:engine/model/item~Item} content The content to insert.\n     * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection|\n     * module:engine/model/position~Position|module:engine/model/item~Item|\n     * Iterable.<module:engine/model/range~Range>|module:engine/model/range~Range|null} [selectable=model.document.selection]\n     * The selection into which the content should be inserted. If not provided the current model document selection will be used.\n     * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] To be used when a model item was passed as `selectable`.\n     * This param defines a position in relation to that item.\n     */\n\n  }, {\n    key: \"insertContent\",\n    value: function insertContent(content, selectable, placeOrOffset) {\n      _insertContent(this, content, selectable, placeOrOffset);\n    }\n    /**\n     * Deletes content of the selection and merge siblings. The resulting selection is always collapsed.\n     *\n     * **Note:** For the sake of predictability, the resulting selection should always be collapsed.\n     * In cases where a feature wants to modify deleting behavior so selection isn't collapsed\n     * (e.g. a table feature may want to keep row selection after pressing <kbd>Backspace</kbd>),\n     * then that behavior should be implemented in the view's listener. At the same time, the table feature\n     * will need to modify this method's behavior too, e.g. to \"delete contents and then collapse\n     * the selection inside the last selected cell\" or \"delete the row and collapse selection somewhere near\".\n     * That needs to be done in order to ensure that other features which use `deleteContent()` will work well with tables.\n     *\n     * @fires deleteContent\n     * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n     * Selection of which the content should be deleted.\n     * @param {Object} [options]\n     * @param {Boolean} [options.leaveUnmerged=false] Whether to merge elements after removing the content of the selection.\n     *\n     * For example `<heading1>x[x</heading1><paragraph>y]y</paragraph>` will become:\n     *\n     * * `<heading1>x^y</heading1>` with the option disabled (`leaveUnmerged == false`)\n     * * `<heading1>x^</heading1><paragraph>y</paragraph>` with enabled (`leaveUnmerged == true`).\n     *\n     * Note: {@link module:engine/model/schema~Schema#isObject object} and {@link module:engine/model/schema~Schema#isLimit limit}\n     * elements will not be merged.\n     *\n     * @param {Boolean} [options.doNotResetEntireContent=false] Whether to skip replacing the entire content with a\n     * paragraph when the entire content was selected.\n     *\n     * For example `<heading1>[x</heading1><paragraph>y]</paragraph>` will become:\n     *\n     * * `<paragraph>^</paragraph>` with the option disabled (`doNotResetEntireContent == false`)\n     * * `<heading1>^</heading1>` with enabled (`doNotResetEntireContent == true`)\n     */\n\n  }, {\n    key: \"deleteContent\",\n    value: function deleteContent(selection, options) {\n      _deleteContent(this, selection, options);\n    }\n    /**\n     * Modifies the selection. Currently, the supported modifications are:\n     *\n     * * Extending. The selection focus is moved in the specified `options.direction` with a step specified in `options.unit`.\n     * Possible values for `unit` are:\n     *  * `'character'` (default) - moves selection by one user-perceived character. In most cases this means moving by one\n     *  character in `String` sense. However, unicode also defines \"combing marks\". These are special symbols, that combines\n     *  with a symbol before it (\"base character\") to create one user-perceived character. For example, `q̣̇` is a normal\n     *  letter `q` with two \"combining marks\": upper dot (`Ux0307`) and lower dot (`Ux0323`). For most actions, i.e. extending\n     *  selection by one position, it is correct to include both \"base character\" and all of it's \"combining marks\". That is\n     *  why `'character'` value is most natural and common method of modifying selection.\n     *  * `'codePoint'` - moves selection by one unicode code point. In contrary to, `'character'` unit, this will insert\n     *  selection between \"base character\" and \"combining mark\", because \"combining marks\" have their own unicode code points.\n     *  However, for technical reasons, unicode code points with values above `UxFFFF` are represented in native `String` by\n     *  two characters, called \"surrogate pairs\". Halves of \"surrogate pairs\" have a meaning only when placed next to each other.\n     *  For example `𨭎` is represented in `String` by `\\uD862\\uDF4E`. Both `\\uD862` and `\\uDF4E` do not have any meaning\n     *  outside the pair (are rendered as ? when alone). Position between them would be incorrect. In this case, selection\n     *  extension will include whole \"surrogate pair\".\n     *  * `'word'` - moves selection by a whole word.\n     *\n     * **Note:** if you extend a forward selection in a backward direction you will in fact shrink it.\n     *\n     * @fires modifySelection\n     * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n     * The selection to modify.\n     * @param {Object} [options]\n     * @param {'forward'|'backward'} [options.direction='forward'] The direction in which the selection should be modified.\n     * @param {'character'|'codePoint'|'word'} [options.unit='character'] The unit by which selection should be modified.\n     */\n\n  }, {\n    key: \"modifySelection\",\n    value: function modifySelection(selection, options) {\n      _modifySelection(this, selection, options);\n    }\n    /**\n     * Gets a clone of the selected content.\n     *\n     * For example, for the following selection:\n     *\n     * ```html\n     * <paragraph>x</paragraph>\n     * <blockQuote>\n     *\t<paragraph>y</paragraph>\n     *\t<heading1>fir[st</heading1>\n     * </blockQuote>\n     * <paragraph>se]cond</paragraph>\n     * <paragraph>z</paragraph>\n     * ```\n     *\n     * It will return a document fragment with such a content:\n     *\n     * ```html\n     * <blockQuote>\n     *\t<heading1>st</heading1>\n     * </blockQuote>\n     * <paragraph>se</paragraph>\n     * ```\n     *\n     * @fires getSelectedContent\n     * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n     * The selection of which content will be returned.\n     * @returns {module:engine/model/documentfragment~DocumentFragment}\n     */\n\n  }, {\n    key: \"getSelectedContent\",\n    value: function getSelectedContent(selection) {\n      return _getSelectedContent(this, selection);\n    }\n    /**\n     * Checks whether the given {@link module:engine/model/range~Range range} or\n     * {@link module:engine/model/element~Element element}\n     * has any content.\n     *\n     * Content is any text node or element which is registered in the {@link module:engine/model/schema~Schema schema}.\n     *\n     * @param {module:engine/model/range~Range|module:engine/model/element~Element} rangeOrElement Range or element to check.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"hasContent\",\n    value: function hasContent(rangeOrElement) {\n      if (rangeOrElement instanceof ModelElement) {\n        rangeOrElement = ModelRange._createIn(rangeOrElement);\n      }\n\n      if (rangeOrElement.isCollapsed) {\n        return false;\n      }\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = rangeOrElement.getItems()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n\n          // Remember, `TreeWalker` returns always `textProxy` nodes.\n          if (item.is('textProxy') || this.schema.isObject(item)) {\n            return true;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return false;\n    }\n    /**\n     * Creates a position from the given root and path in that root.\n     *\n     * Note: This method is also available as\n     * {@link module:engine/model/writer~Writer#createPositionFromPath `Writer#createPositionFromPath()`}.\n     *\n     * @param {module:engine/model/element~Element|module:engine/model/documentfragment~DocumentFragment} root Root of the position.\n     * @param {Array.<Number>} path Position path. See {@link module:engine/model/position~Position#path}.\n     * @param {module:engine/model/position~PositionStickiness} [stickiness='toNone'] Position stickiness.\n     * See {@link module:engine/model/position~PositionStickiness}.\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"createPositionFromPath\",\n    value: function createPositionFromPath(root, path, stickiness) {\n      return new ModelPosition(root, path, stickiness);\n    }\n    /**\n     * Creates position at the given location. The location can be specified as:\n     *\n     * * a {@link module:engine/model/position~Position position},\n     * * a parent element and offset in that element,\n     * * a parent element and `'end'` (the position will be set at the end of that element),\n     * * a {@link module:engine/model/item~Item model item} and `'before'` or `'after'`\n     * (the position will be set before or after the given model item).\n     *\n     * This method is a shortcut to other factory methods such as:\n     *\n     * * {@link module:engine/model/model~Model#createPositionBefore `createPositionBefore()`},\n     * * {@link module:engine/model/model~Model#createPositionAfter `createPositionAfter()`}.\n     *\n     * Note: This method is also available as\n     * {@link module:engine/model/writer~Writer#createPositionAt `Writer#createPositionAt()`},\n     *\n     * @param {module:engine/model/item~Item|module:engine/model/position~Position} itemOrPosition\n     * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n     * first parameter is a {@link module:engine/model/item~Item model item}.\n     */\n\n  }, {\n    key: \"createPositionAt\",\n    value: function createPositionAt(itemOrPosition, offset) {\n      return ModelPosition._createAt(itemOrPosition, offset);\n    }\n    /**\n     * Creates a new position after the given {@link module:engine/model/item~Item model item}.\n     *\n     * Note: This method is also available as\n     * {@link module:engine/model/writer~Writer#createPositionAfter `Writer#createPositionAfter()`}.\n     *\n     * @param {module:engine/model/item~Item} item Item after which the position should be placed.\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"createPositionAfter\",\n    value: function createPositionAfter(item) {\n      return ModelPosition._createAfter(item);\n    }\n    /**\n     * Creates a new position before the given {@link module:engine/model/item~Item model item}.\n     *\n     * Note: This method is also available as\n     * {@link module:engine/model/writer~Writer#createPositionBefore `Writer#createPositionBefore()`}.\n     *\n     * @param {module:engine/model/item~Item} item Item before which the position should be placed.\n     * @returns {module:engine/model/position~Position}\n     */\n\n  }, {\n    key: \"createPositionBefore\",\n    value: function createPositionBefore(item) {\n      return ModelPosition._createBefore(item);\n    }\n    /**\n     * Creates a range spanning from the `start` position to the `end` position.\n     *\n     * Note: This method is also available as\n     * {@link module:engine/model/writer~Writer#createRange `Writer#createRange()`}:\n     *\n     *\t\tmodel.change( writer => {\n     *\t\t\tconst range = writer.createRange( start, end );\n     *\t\t} );\n     *\n     * @param {module:engine/model/position~Position} start Start position.\n     * @param {module:engine/model/position~Position} [end] End position. If not set, the range will be collapsed\n     * to the `start` position.\n     * @returns {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"createRange\",\n    value: function createRange(start, end) {\n      return new ModelRange(start, end);\n    }\n    /**\n     * Creates a range inside the given element which starts before the first child of\n     * that element and ends after the last child of that element.\n     *\n     * Note: This method is also available as\n     * {@link module:engine/model/writer~Writer#createRangeIn `Writer#createRangeIn()`}:\n     *\n     *\t\tmodel.change( writer => {\n     *\t\t\tconst range = writer.createRangeIn( paragraph );\n     *\t\t} );\n     *\n     * @param {module:engine/model/element~Element} element Element which is a parent for the range.\n     * @returns {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"createRangeIn\",\n    value: function createRangeIn(element) {\n      return ModelRange._createIn(element);\n    }\n    /**\n     * Creates a range that starts before the given {@link module:engine/model/item~Item model item} and ends after it.\n     *\n     * Note: This method is also available on `writer` instance as\n     * {@link module:engine/model/writer~Writer#createRangeOn `Writer.createRangeOn()`}:\n     *\n     *\t\tmodel.change( writer => {\n     *\t\t\tconst range = writer.createRangeOn( paragraph );\n     *\t\t} );\n     *\n     * @param {module:engine/model/item~Item} item\n     * @returns {module:engine/model/range~Range}\n     */\n\n  }, {\n    key: \"createRangeOn\",\n    value: function createRangeOn(item) {\n      return ModelRange._createOn(item);\n    }\n    /**\n     * Creates a new selection instance based on:\n     *\n     * * the given {@link module:engine/model/selection~Selection selection},\n     * * or based on the given {@link module:engine/model/range~Range range},\n     * * or based on the given iterable collection of {@link module:engine/model/range~Range ranges}\n     * * or at the given {@link module:engine/model/position~Position position},\n     * * or on the given {@link module:engine/model/element~Element element},\n     * * or creates an empty selection if no arguments were passed.\n     *\n     * Note: This method is also available as\n     * {@link module:engine/model/writer~Writer#createSelection `Writer#createSelection()`}.\n     *\n     *\t\t// Creates empty selection without ranges.\n     *\t\tconst selection = writer.createSelection();\n     *\n     *\t\t// Creates selection at the given range.\n     *\t\tconst range = writer.createRange( start, end );\n     *\t\tconst selection = writer.createSelection( range );\n     *\n     *\t\t// Creates selection at the given ranges\n     *\t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n     *\t\tconst selection = writer.createSelection( ranges );\n     *\n     *\t\t// Creates selection from the other selection.\n     *\t\t// Note: It doesn't copies selection attributes.\n     *\t\tconst otherSelection = writer.createSelection();\n     *\t\tconst selection = writer.createSelection( otherSelection );\n     *\n     *\t\t// Creates selection from the given document selection.\n     *\t\t// Note: It doesn't copies selection attributes.\n     *\t\tconst documentSelection = model.document.selection;\n     *\t\tconst selection = writer.createSelection( documentSelection );\n     *\n     *\t\t// Creates selection at the given position.\n     *\t\tconst position = writer.createPositionFromPath( root, path );\n     *\t\tconst selection = writer.createSelection( position );\n     *\n     *\t\t// Creates selection at the given offset in the given element.\n     *\t\tconst paragraph = writer.createElement( 'paragraph' );\n     *\t\tconst selection = writer.createSelection( paragraph, offset );\n     *\n     *\t\t// Creates a range inside an {@link module:engine/model/element~Element element} which starts before the\n     *\t\t// first child of that element and ends after the last child of that element.\n     *\t\tconst selection = writer.createSelection( paragraph, 'in' );\n     *\n     *\t\t// Creates a range on an {@link module:engine/model/item~Item item} which starts before the item and ends\n     *\t\t// just after the item.\n     *\t\tconst selection = writer.createSelection( paragraph, 'on' );\n     *\n     *\t\t// Additional options (`'backward'`) can be specified as the last argument.\n     *\n     *\t\t// Creates backward selection.\n     *\t\tconst selection = writer.createSelection( range, { backward: true } );\n     *\n     * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection|\n     * module:engine/model/position~Position|module:engine/model/element~Element|\n     * Iterable.<module:engine/model/range~Range>|module:engine/model/range~Range|null} selectable\n     * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n     * @param {Object} [options]\n     * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n     * @returns {module:engine/model/selection~Selection}\n     */\n\n  }, {\n    key: \"createSelection\",\n    value: function createSelection(selectable, placeOrOffset, options) {\n      return new ModelSelection(selectable, placeOrOffset, options);\n    }\n    /**\n     * Creates a {@link module:engine/model/batch~Batch} instance.\n     *\n     * **Note:** In most cases creating a batch instance is not necessary as they are created when using:\n     *\n     * * {@link #change `change()`},\n     * * {@link #enqueueChange `enqueueChange()`}.\n     *\n     * @returns {module:engine/model/batch~Batch}\n     */\n\n  }, {\n    key: \"createBatch\",\n    value: function createBatch() {\n      return new Batch();\n    }\n    /**\n     * Removes all events listeners set by model instance and destroys {@link module:engine/model/document~Document}.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.document.destroy();\n      this.stopListening();\n    }\n    /**\n     * Common part of {@link module:engine/model/model~Model#change} and {@link module:engine/model/model~Model#enqueueChange}\n     * which calls callbacks and returns array of values returned by these callbacks.\n     *\n     * @private\n     * @returns {Array.<*>} Array of values returned by callbacks.\n     */\n\n  }, {\n    key: \"_runPendingChanges\",\n    value: function _runPendingChanges() {\n      var ret = [];\n      this.fire('_beforeChanges');\n\n      while (this._pendingChanges.length) {\n        // Create a new writer using batch instance created for this chain of changes.\n        var currentBatch = this._pendingChanges[0].batch;\n        this._currentWriter = new Writer(this, currentBatch); // Execute changes callback and gather the returned value.\n\n        var callbackReturnValue = this._pendingChanges[0].callback(this._currentWriter);\n\n        ret.push(callbackReturnValue); // Fire internal `_change` event.\n\n        this.fire('_change', this._currentWriter);\n\n        this._pendingChanges.shift();\n\n        this._currentWriter = null;\n      }\n\n      this.fire('_afterChanges');\n      return ret;\n    }\n    /**\n     * Fired after leaving each {@link module:engine/model/model~Model#enqueueChange} block or outermost\n     * {@link module:engine/model/model~Model#change} block.\n     *\n     * **Note:** This is an internal event! Use {@link module:engine/model/document~Document#event:change} instead.\n     *\n     * @protected\n     * @event _change\n     * @param {module:engine/model/writer~Writer} writer `Writer` instance that has been used in the change block.\n     */\n\n    /**\n     * Fired when entering the outermost {@link module:engine/model/model~Model#enqueueChange} or\n     * {@link module:engine/model/model~Model#change} block.\n     *\n     * @protected\n     * @event _beforeChanges\n     */\n\n    /**\n     * Fired when leaving the outermost {@link module:engine/model/model~Model#enqueueChange} or\n     * {@link module:engine/model/model~Model#change} block.\n     *\n     * @protected\n     * @event _afterChanges\n     */\n\n    /**\n     * Fired every time any {@link module:engine/model/operation/operation~Operation operation} is applied on the model\n     * using {@link #applyOperation}.\n     *\n     * Note that this event is suitable only for very specific use-cases. Use it if you need to listen to every single operation\n     * applied on the document. However, in most cases {@link module:engine/model/document~Document#event:change} should\n     * be used.\n     *\n     * A few callbacks are already added to this event by engine internal classes:\n     *\n     * * with `highest` priority operation is validated,\n     * * with `normal` priority operation is executed,\n     * * with `low` priority the {@link module:engine/model/document~Document} updates its version,\n     * * with `low` priority {@link module:engine/model/liveposition~LivePosition} and {@link module:engine/model/liverange~LiveRange}\n     * update themselves.\n     *\n     * @event applyOperation\n     * @param {Array} args Arguments of the `applyOperation` which is an array with a single element - applied\n     * {@link module:engine/model/operation/operation~Operation operation}.\n     */\n\n    /**\n     * Event fired when {@link #insertContent} method is called.\n     *\n     * The {@link #insertContent default action of that method} is implemented as a\n     * listener to this event so it can be fully customized by the features.\n     *\n     * **Note** The `selectable` parameter for the {@link #insertContent} is optional. When `undefined` value is passed the method uses\n     * `model.document.selection`.\n     *\n     * @event insertContent\n     * @param {Array} args The arguments passed to the original method.\n     */\n\n    /**\n     * Event fired when {@link #deleteContent} method is called.\n     *\n     * The {@link #deleteContent default action of that method} is implemented as a\n     * listener to this event so it can be fully customized by the features.\n     *\n     * @event deleteContent\n     * @param {Array} args The arguments passed to the original method.\n     */\n\n    /**\n     * Event fired when {@link #modifySelection} method is called.\n     *\n     * The {@link #modifySelection default action of that method} is implemented as a\n     * listener to this event so it can be fully customized by the features.\n     *\n     * @event modifySelection\n     * @param {Array} args The arguments passed to the original method.\n     */\n\n    /**\n     * Event fired when {@link #getSelectedContent} method is called.\n     *\n     * The {@link #getSelectedContent default action of that method} is implemented as a\n     * listener to this event so it can be fully customized by the features.\n     *\n     * @event getSelectedContent\n     * @param {Array} args The arguments passed to the original method.\n     */\n\n  }]);\n\n  return Model;\n}();\n\nexport { Model as default };\nmix(Model, ObservableMixin);","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module core/editingkeystrokehandler\n */\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\n/**\n * A keystroke handler for editor editing. Its instance is available\n * in {@link module:core/editor/editor~Editor#keystrokes} so plugins\n * can register their keystrokes.\n *\n * E.g. an undo plugin would do this:\n *\n *\t\teditor.keystrokes.set( 'Ctrl+Z', 'undo' );\n *\t\teditor.keystrokes.set( 'Ctrl+Shift+Z', 'redo' );\n *\t\teditor.keystrokes.set( 'Ctrl+Y', 'redo' );\n *\n * @extends utils/keystrokehandler~KeystrokeHandler\n */\n\nvar EditingKeystrokeHandler =\n/*#__PURE__*/\nfunction (_KeystrokeHandler) {\n  _inherits(EditingKeystrokeHandler, _KeystrokeHandler);\n\n  /**\n   * Creates an instance of the keystroke handler.\n   *\n   * @param {module:core/editor/editor~Editor} editor\n   */\n  function EditingKeystrokeHandler(editor) {\n    var _this;\n\n    _classCallCheck(this, EditingKeystrokeHandler);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditingKeystrokeHandler).call(this));\n    /**\n     * The editor instance.\n     *\n     * @readonly\n     * @member {module:core/editor/editor~Editor}\n     */\n\n    _this.editor = editor;\n    return _this;\n  }\n  /**\n   * Registers a handler for the specified keystroke.\n   *\n   * The handler can be specified as a command name or a callback.\n   *\n   * @param {String|Array.<String|Number>} keystroke Keystroke defined in a format accepted by\n   * the {@link module:utils/keyboard~parseKeystroke} function.\n   * @param {Function|String} callback If a string is passed, then the keystroke will\n   * {@link module:core/editor/editor~Editor#execute execute a command}.\n   * If a function, then it will be called with the\n   * {@link module:engine/view/observer/keyobserver~KeyEventData key event data} object and\n   * a `cancel()` helper to both `preventDefault()` and `stopPropagation()` of the event.\n   * @param {Object} [options={}] Additional options.\n   * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of the keystroke\n   * callback. The higher the priority value the sooner the callback will be executed. Keystrokes having the same priority\n   * are called in the order they were added.\n   */\n\n\n  _createClass(EditingKeystrokeHandler, [{\n    key: \"set\",\n    value: function set(keystroke, callback) {\n      var _this2 = this;\n\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      if (typeof callback == 'string') {\n        var commandName = callback;\n\n        callback = function callback(evtData, cancel) {\n          _this2.editor.execute(commandName);\n\n          cancel();\n        };\n      }\n\n      _get(_getPrototypeOf(EditingKeystrokeHandler.prototype), \"set\", this).call(this, keystroke, callback, options);\n    }\n  }]);\n\n  return EditingKeystrokeHandler;\n}(KeystrokeHandler);\n\nexport { EditingKeystrokeHandler as default };","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module core/editor/editor\n */\nimport Config from '@ckeditor/ckeditor5-utils/src/config';\nimport EditingController from '@ckeditor/ckeditor5-engine/src/controller/editingcontroller';\nimport PluginCollection from '../plugincollection';\nimport CommandCollection from '../commandcollection';\nimport Locale from '@ckeditor/ckeditor5-utils/src/locale';\nimport DataController from '@ckeditor/ckeditor5-engine/src/controller/datacontroller';\nimport Conversion from '@ckeditor/ckeditor5-engine/src/conversion/conversion';\nimport Model from '@ckeditor/ckeditor5-engine/src/model/model';\nimport EditingKeystrokeHandler from '../editingkeystrokehandler';\nimport ObservableMixin from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport '@ckeditor/ckeditor5-utils/src/version';\n/**\n * Class representing a basic, generic editor.\n *\n * Check out the list of its subclasses to learn about specific editor implementations.\n *\n * All editor implementations (like {@link module:editor-classic/classiceditor~ClassicEditor} or\n * {@link module:editor-inline/inlineeditor~InlineEditor}) should extend this class. They can add their\n * own methods and properties.\n *\n * When you are implementing a plugin, then this editor represents the API\n * which your plugin can expect to get when using its {@link module:core/plugin~Plugin#editor} property.\n *\n * This API should be sufficient in order to implement the \"editing\" part of your feature\n * (schema definition, conversion, commands, keystrokes, etc.).\n * It does not define the editor UI, which is available only if the\n * the specific editor implements also the {@link module:core/editor/editorwithui~EditorWithUI} interface\n * (as most editor implementations do).\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\n\nvar Editor =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a new instance of the Editor class.\n   *\n   * Usually, not to be used directly. See the static {@link module:core/editor/editor~Editor.create `create()`} method.\n   *\n   * @param {Object} [config] The editor config.\n   */\n  function Editor(config) {\n    var _this = this;\n\n    _classCallCheck(this, Editor);\n\n    var availablePlugins = this.constructor.builtinPlugins;\n    /**\n     * Holds all configurations specific to this editor instance.\n     *\n     *\t\teditor.config.get( 'image.toolbar' );\n     *\t\t// -> [ 'imageStyle:full', 'imageStyle:side', '|', 'imageTextAlternative' ]\n     *\n     * @readonly\n     * @member {module:utils/config~Config}\n     */\n\n    this.config = new Config(config, this.constructor.defaultConfig);\n    this.config.define('plugins', availablePlugins);\n    /**\n     * The plugins loaded and in use by this editor instance.\n     *\n     *\t\teditor.plugins.get( 'Clipboard' ); // -> instance of the Clipboard plugin.\n     *\n     * @readonly\n     * @member {module:core/plugincollection~PluginCollection}\n     */\n\n    this.plugins = new PluginCollection(this, availablePlugins);\n    /**\n     * Commands registered to the editor.\n     *\n     * Use the shorthand {@link #execute `editor.execute()`} method to execute commands:\n     *\n     *\t\t// Execute the bold command:\n     *\t\teditor.execute( 'bold' );\n     *\n     *\t\t// Check the state of the bold command:\n     *\t\teditor.commands.get( 'bold' ).value;\n     *\n     * @readonly\n     * @member {module:core/commandcollection~CommandCollection}\n     */\n\n    this.commands = new CommandCollection();\n    /**\n     * @readonly\n     * @member {module:utils/locale~Locale}\n     */\n\n    this.locale = new Locale(this.config.get('language'));\n    /**\n     * Shorthand for {@link module:utils/locale~Locale#t}.\n     *\n     * @see module:utils/locale~Locale#t\n     * @method #t\n     */\n\n    this.t = this.locale.t;\n    /**\n     * Indicates the editor life-cycle state.\n     *\n     * The editor is in one of the following states:\n     *\n     * * `initializing` - during the editor initialization (before {@link module:core/editor/editor~Editor.create `Editor.create()`})\n     * finished its job,\n     * * `ready` - after the promise returned by the {@link module:core/editor/editor~Editor.create `Editor.create()`}\n     * method is resolved,\n     * * `destroyed` - once the {@link #destroy `editor.destroy()`} method was called.\n     *\n     * @observable\n     * @member {'initializing'|'ready'|'destroyed'} #state\n     */\n\n    this.set('state', 'initializing');\n    this.once('ready', function () {\n      return _this.state = 'ready';\n    }, {\n      priority: 'high'\n    });\n    this.once('destroy', function () {\n      return _this.state = 'destroyed';\n    }, {\n      priority: 'high'\n    });\n    /**\n     * Defines whether this editor is in read-only mode.\n     *\n     * In read-only mode the editor {@link #commands commands} are disabled so it is not possible\n     * to modify the document by using them. Also, the editable element(s) become non-editable.\n     *\n     * In order to make the editor read-only, you can set this value directly:\n     *\n     *\t\teditor.isReadOnly = true;\n     *\n     * @observable\n     * @member {Boolean} #isReadOnly\n     */\n\n    this.set('isReadOnly', false);\n    /**\n     * The editor's model.\n     *\n     * The central point of the editor's abstract data model.\n     *\n     * @readonly\n     * @member {module:engine/model/model~Model}\n     */\n\n    this.model = new Model();\n    /**\n     * The {@link module:engine/controller/datacontroller~DataController data controller}.\n     * Used e.g. for setting and retrieving editor data.\n     *\n     * @readonly\n     * @member {module:engine/controller/datacontroller~DataController}\n     */\n\n    this.data = new DataController(this.model);\n    /**\n     * The {@link module:engine/controller/editingcontroller~EditingController editing controller}.\n     * Controls user input and rendering the content for editing.\n     *\n     * @readonly\n     * @member {module:engine/controller/editingcontroller~EditingController}\n     */\n\n    this.editing = new EditingController(this.model);\n    this.editing.view.document.bind('isReadOnly').to(this);\n    /**\n     * Conversion manager through which you can register model to view and view to model converters.\n     *\n     * See {@link module:engine/conversion/conversion~Conversion}'s documentation to learn how to add converters.\n     *\n     * @readonly\n     * @member {module:engine/conversion/conversion~Conversion}\n     */\n\n    this.conversion = new Conversion();\n    this.conversion.register('downcast', [this.editing.downcastDispatcher, this.data.downcastDispatcher]);\n    this.conversion.register('editingDowncast', [this.editing.downcastDispatcher]);\n    this.conversion.register('dataDowncast', [this.data.downcastDispatcher]);\n    this.conversion.register('upcast', [this.data.upcastDispatcher]);\n    /**\n     * Instance of the {@link module:core/editingkeystrokehandler~EditingKeystrokeHandler}.\n     *\n     * It allows setting simple keystrokes:\n     *\n     *\t\t// Execute the bold command on Ctrl+E:\n     *\t\teditor.keystrokes.set( 'Ctrl+E', 'bold' );\n     *\n     *\t\t// Execute your own callback:\n     *\t\teditor.keystrokes.set( 'Ctrl+E', ( data, cancel ) => {\n     *\t\t\tconsole.log( data.keyCode );\n     *\n     *\t\t\t// Prevent default (native) action and stop the underlying keydown event\n     *\t\t\t// so no other editor feature will interfere.\n     *\t\t\tcancel();\n     *\t\t} );\n     *\n     * Note: Certain, typing oriented keystrokes (like <kbd>Backspace</kbd> or <kbd>Enter</kbd>) are handled\n     * by low level mechanism and trying to listen to them via the keystroke handler will not work reliably.\n     * To handle those specific keystrokes see the events fired by the\n     * {@link module:engine/view/document~Document editing view document} (`editor.editing.view.document`).\n     *\n     * @readonly\n     * @member {module:core/editingkeystrokehandler~EditingKeystrokeHandler}\n     */\n\n    this.keystrokes = new EditingKeystrokeHandler(this);\n    this.keystrokes.listenTo(this.editing.view.document);\n  }\n  /**\n   * Loads and initializes plugins specified in the config.\n   *\n   * @returns {Promise} A promise which resolves once the initialization is completed.\n   */\n\n\n  _createClass(Editor, [{\n    key: \"initPlugins\",\n    value: function initPlugins() {\n      var _this2 = this;\n\n      var that = this;\n      var config = this.config;\n      return loadPlugins().then(function (loadedPlugins) {\n        return initPlugins(loadedPlugins, 'init').then(function () {\n          return initPlugins(loadedPlugins, 'afterInit');\n        });\n      }).then(function () {\n        return _this2.fire('pluginsReady');\n      });\n\n      function loadPlugins() {\n        var plugins = config.get('plugins') || [];\n        var removePlugins = config.get('removePlugins') || [];\n        var extraPlugins = config.get('extraPlugins') || [];\n        return that.plugins.load(plugins.concat(extraPlugins), removePlugins);\n      }\n\n      function initPlugins(loadedPlugins, method) {\n        return loadedPlugins.reduce(function (promise, plugin) {\n          if (!plugin[method]) {\n            return promise;\n          }\n\n          return promise.then(plugin[method].bind(plugin));\n        }, Promise.resolve());\n      }\n    }\n    /**\n     * Destroys the editor instance, releasing all resources used by it.\n     *\n     * **Note** The editor cannot be destroyed during the initialization phase so if it is called\n     * while the editor {@link #state is being initialized}, it will wait for the editor initialization before destroying it.\n     *\n     * @fires destroy\n     * @returns {Promise} A promise that resolves once the editor instance is fully destroyed.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _this3 = this;\n\n      var readyPromise = Promise.resolve();\n\n      if (this.state == 'initializing') {\n        readyPromise = new Promise(function (resolve) {\n          return _this3.once('ready', resolve);\n        });\n      }\n\n      return readyPromise.then(function () {\n        _this3.fire('destroy');\n\n        _this3.stopListening();\n\n        _this3.commands.destroy();\n      }).then(function () {\n        return _this3.plugins.destroy();\n      }).then(function () {\n        _this3.model.destroy();\n\n        _this3.data.destroy();\n\n        _this3.editing.destroy();\n\n        _this3.keystrokes.destroy();\n      });\n    }\n    /**\n     * Executes specified command with given parameters.\n     *\n     * Shorthand for:\n     *\n     *\t\teditor.commands.get( commandName ).execute( ... );\n     *\n     * @param {String} commandName Name of command to execute.\n     * @param {*} [...commandParams] Command parameters.\n     */\n\n  }, {\n    key: \"execute\",\n    value: function execute() {\n      var _this$commands;\n\n      (_this$commands = this.commands).execute.apply(_this$commands, arguments);\n    }\n    /**\n     * Creates and initializes a new editor instance.\n     *\n     * @param {Object} config The editor config. You can find the list of config options in\n     * {@link module:core/editor/editorconfig~EditorConfig}.\n     * @returns {Promise} Promise resolved once editor is ready.\n     * @returns {module:core/editor/editor~Editor} return.editor The editor instance.\n     */\n\n  }], [{\n    key: \"create\",\n    value: function create(config) {\n      var _this4 = this;\n\n      return new Promise(function (resolve) {\n        var editor = new _this4(config);\n        resolve(editor.initPlugins().then(function () {\n          editor.fire('dataReady');\n          editor.fire('ready');\n        }).then(function () {\n          return editor;\n        }));\n      });\n    }\n  }]);\n\n  return Editor;\n}();\n\nexport { Editor as default };\nmix(Editor, ObservableMixin);\n/**\n * Fired after {@link #initPlugins plugins are initialized}.\n *\n * @event pluginsReady\n */\n\n/**\n * Fired when the data loaded to the editor is ready. If a specific editor doesn't load\n * any data initially, this event will be fired right before {@link #event:ready}.\n *\n * @event dataReady\n */\n\n/**\n * Fired when {@link #event:pluginsReady plugins}, and {@link #event:dataReady data} and all additional\n * editor components are ready.\n *\n * Note: This event is most useful for plugin developers. When integrating the editor with your website or\n * application you do not have to listen to `editor#ready` because when the promise returned by the static\n * {@link module:core/editor/editor~Editor.create `Editor.create()`} event is resolved, the editor is already ready.\n * In fact, since the first moment when the editor instance is available to you is inside `then()`'s callback,\n * you cannot even add a listener to the `editor#ready` event.\n *\n * See also the {@link #state `editor.state`} property.\n *\n * @event ready\n */\n\n/**\n * Fired when this editor instance is destroyed. The editor at this point is not usable and this event should be used to\n * perform the clean-up in any plugin.\n *\n *\n * See also the {@link #state `editor.state`} property.\n *\n * @event destroy\n */\n\n/**\n * An array of plugins built into this editor class.\n * It is used in CKEditor 5 builds to provide a list of plugins which are later automatically initialized\n * during the editor initialization.\n *\n * They will be automatically initialized by the editor, unless listed in `config.removePlugins` and\n * unless `config.plugins` is passed.\n *\n *\t\t// Build some plugins into the editor class first.\n *\t\tClassicEditor.builtinPlugins = [ FooPlugin, BarPlugin ];\n *\n *\t\t// Normally, you need to define config.plugins, but since ClassicEditor.builtinPlugins was\n *\t\t// defined, now you can call create() without any configuration.\n *\t\tClassicEditor\n *\t\t\t.create( sourceElement )\n *\t\t\t.then( editor => {\n *\t\t\t\teditor.plugins.get( FooPlugin ); // -> instance of the Foo plugin\n *\t\t\t\teditor.plugins.get( BarPlugin ); // -> instance of the Bar plugin\n *\t\t\t} );\n *\n *\t\tClassicEditor\n *\t\t\t.create( sourceElement, {\n *\t\t\t\t// Don't initialize this plugins (note: it's defined by a string):\n *\t\t\t\tremovePlugins: [ 'Foo' ]\n *\t\t\t} )\n *\t\t\t.then( editor => {\n *\t\t\t\teditor.plugins.get( FooPlugin ); // -> undefined\n *\t\t\t\teditor.config.get( BarPlugin ); // -> instance of the Bar plugin\n *\t\t\t} );\n *\n *\t\tClassicEditor\n *\t\t\t.create( sourceElement, {\n *\t\t\t\t// Load only this plugin. Can also be define by a string if\n *\t\t\t\t// this plugin was built into the editor class.\n *\t\t\t\tplugins: [ FooPlugin ]\n *\t\t\t} )\n *\t\t\t.then( editor => {\n *\t\t\t\teditor.plugins.get( FooPlugin ); // -> instance of the Foo plugin\n *\t\t\t\teditor.config.get( BarPlugin ); // -> undefined\n *\t\t\t} );\n *\n * See also {@link module:core/editor/editor~Editor.defaultConfig}.\n *\n * @static\n * @member {Array.<Function>} module:core/editor/editor~Editor.builtinPlugins\n */\n\n/**\n * The default config which is built into the editor class.\n * It is used in CKEditor 5 builds to provide the default config options which are later used during editor initialization.\n *\n *\t\tClassicEditor.defaultConfig = {\n *\t\t\tfoo: 1,\n *\t\t\tbar: 2\n *\t\t};\n *\n *\t\tClassicEditor\n *\t\t\t.create( sourceElement )\n *\t\t\t.then( editor => {\n *\t\t\t\teditor.config.get( 'foo' ); // -> 1\n *\t\t\t\teditor.config.get( 'bar' ); // -> 2\n *\t\t\t} );\n *\n *\t\t// The default options can be overridden by the config passed to create().\n *\t\tClassicEditor\n *\t\t\t.create( sourceElement, { bar: 3 } )\n *\t\t\t.then( editor => {\n *\t\t\t\teditor.config.get( 'foo' ); // -> 1\n *\t\t\t\teditor.config.get( 'bar' ); // -> 3\n *\t\t\t} );\n *\n * See also {@link module:core/editor/editor~Editor.builtinPlugins}.\n *\n * @static\n * @member {Object} module:core/editor/editor~Editor.defaultConfig\n */","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module core/editor/utils/dataapimixin\n */\n\n/**\n * Implementation of the {@link module:core/editor/utils/dataapimixin~DataApi}.\n *\n * @mixin DataApiMixin\n * @implements module:core/editor/utils/dataapimixin~DataApi\n */\nvar DataApiMixin = {\n  /**\n   * @inheritDoc\n   */\n  setData: function setData(data) {\n    this.data.set(data);\n  },\n\n  /**\n   * @inheritDoc\n   */\n  getData: function getData() {\n    return this.data.get();\n  }\n};\nexport default DataApiMixin;\n/**\n * Interface defining editor methods for setting and getting data to and from the editor's main root element\n * using the {@link module:core/editor/editor~Editor#data data pipeline}.\n *\n * This interface is not a part of the {@link module:core/editor/editor~Editor} class because one may want to implement\n * an editor with multiple root elements, in which case the methods for setting and getting data will need to be implemented\n * differently.\n *\n * @interface DataApi\n */\n\n/**\n * Sets the data in the editor.\n *\n *\t\teditor.setData( '<p>This is editor!</p>' );\n *\n * By default the editor accepts HTML. This can be controlled by injecting a different data processor.\n * See the {@glink features/markdown Markdown output} guide for more details.\n *\n * Note: Not only is the format of the data configurable, but the type of the `setData()`'s parameter does not\n * have to be a string either. You can e.g. accept an object or a DOM `DocumentFragment` if you consider this\n * the right format for you.\n *\n * @method #setData\n * @param {String} data Input data.\n */\n\n/**\n * Gets the data from the editor.\n *\n *\t\teditor.getData(); // -> '<p>This is editor!</p>'\n *\n * By default the editor outputs HTML. This can be controlled by injecting a different data processor.\n * See the {@glink features/markdown Markdown output} guide for more details.\n *\n * Note: Not only is the format of the data configurable, but the type of the `getData()`'s return value does not\n * have to be a string either. You can e.g. return an object or a DOM `DocumentFragment`  if you consider this\n * the right format for you.\n *\n * @method #getData\n * @returns {String} Output data.\n */","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport setDataInElement from '@ckeditor/ckeditor5-utils/src/dom/setdatainelement';\n/**\n * @module core/editor/utils/elementapimixin\n */\n\n/**\n * Implementation of the {@link module:core/editor/utils/elementapimixin~ElementApi}.\n *\n * @mixin ElementApiMixin\n * @implements module:core/editor/utils/elementapimixin~ElementApi\n */\n\nvar ElementApiMixin = {\n  /**\n   * @inheritDoc\n   */\n  updateSourceElement: function updateSourceElement() {\n    if (!this.sourceElement) {\n      /**\n       * Cannot update the source element of a detached editor.\n       *\n       * The {@link ~ElementApi#updateSourceElement `updateSourceElement()`} method cannot be called if you did not\n       * pass an element to `Editor.create()`.\n       *\n       * @error editor-missing-sourceelement\n       */\n      throw new CKEditorError('editor-missing-sourceelement: Cannot update the source element of a detached editor.');\n    }\n\n    setDataInElement(this.sourceElement, this.data.get());\n  }\n};\nexport default ElementApiMixin;\n/**\n * Interface describing an editor that replaced a DOM element (was \"initialized on an element\").\n *\n * Such an editor should provide a method to\n * {@link module:core/editor/utils/elementapimixin~ElementApi#updateSourceElement update the replaced element with the current data}.\n *\n * @interface ElementApi\n */\n\n/**\n * The element on which the editor has been initialized.\n *\n * @readonly\n * @member {HTMLElement} #sourceElement\n */\n\n/**\n * Updates the {@link #sourceElement editor source element}'s content with the data.\n *\n * @method #updateSourceElement\n */","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/dom/setdatainelement\n */\n\n/* globals HTMLTextAreaElement */\n\n/**\n * Sets data in a given element.\n *\n * @param {HTMLElement} el The element in which the data will be set.\n * @param {String} data The data string.\n */\nexport default function setDataInElement(el, data) {\n  if (el instanceof HTMLTextAreaElement) {\n    el.value = data;\n  }\n\n  el.innerHTML = data;\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/componentfactory\n */\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * A helper class implementing the UI component ({@link module:ui/view~View view}) factory.\n *\n * It allows functions producing specific UI components to be registered under their unique names\n * in the factory. A registered component can be then instantiated by providing its name.\n * Note that names are case insensitive.\n *\n *\t\t// The editor provides localization tools for the factory.\n *\t\tconst factory = new ComponentFactory( editor );\n *\n *\t\tfactory.add( 'foo', locale => new FooView( locale ) );\n *\t\tfactory.add( 'bar', locale => new BarView( locale ) );\n *\n *\t\t// An instance of FooView.\n *\t\tconst fooInstance = factory.create( 'foo' );\n *\n *\t\t// Names are case insensitive so this is also allowed:\n *\t\tconst barInstance = factory.create( 'Bar' );\n *\n * The {@link module:core/editor/editor~Editor#locale editor locale} is passed to the factory\n * function when {@link module:ui/componentfactory~ComponentFactory#create} is called.\n */\n\nvar ComponentFactory =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of the factory.\n   *\n   * @constructor\n   * @param {module:core/editor/editor~Editor} editor The editor instance.\n   */\n  function ComponentFactory(editor) {\n    _classCallCheck(this, ComponentFactory);\n\n    /**\n     * The editor instance that the factory belongs to.\n     *\n     * @readonly\n     * @member {module:core/editor/editor~Editor}\n     */\n    this.editor = editor;\n    /**\n     * Registered component factories.\n     *\n     * @private\n     * @member {Map}\n     */\n\n    this._components = new Map();\n  }\n  /**\n   * Returns an iterator of registered component names. Names are returned in lower case.\n   *\n   * @returns {Iterable.<String>}\n   */\n\n\n  _createClass(ComponentFactory, [{\n    key: \"names\",\n    value:\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function names() {\n      var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, value;\n\n      return regeneratorRuntime.wrap(function names$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _iteratorError = undefined;\n              _context.prev = 3;\n              _iterator = this._components.values()[Symbol.iterator]();\n\n            case 5:\n              if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                _context.next = 12;\n                break;\n              }\n\n              value = _step.value;\n              _context.next = 9;\n              return value.originalName;\n\n            case 9:\n              _iteratorNormalCompletion = true;\n              _context.next = 5;\n              break;\n\n            case 12:\n              _context.next = 18;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](3);\n              _didIteratorError = true;\n              _iteratorError = _context.t0;\n\n            case 18:\n              _context.prev = 18;\n              _context.prev = 19;\n\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n\n            case 21:\n              _context.prev = 21;\n\n              if (!_didIteratorError) {\n                _context.next = 24;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 24:\n              return _context.finish(21);\n\n            case 25:\n              return _context.finish(18);\n\n            case 26:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, names, this, [[3, 14, 18, 26], [19,, 21, 25]]);\n    })\n    /**\n     * Registers a component factory function that will be used by the\n     * {@link #create create} method and called with the\n     * {@link module:core/editor/editor~Editor#locale editor locale} as an argument,\n     * allowing localization of the {@link module:ui/view~View view}.\n     *\n     * @param {String} name The name of the component.\n     * @param {Function} callback The callback that returns the component.\n     */\n\n  }, {\n    key: \"add\",\n    value: function add(name, callback) {\n      if (this.has(name)) {\n        /**\n         * The item already exists in the component factory.\n         *\n         * @error componentfactory-item-exists\n         * @param {String} name The name of the component.\n         */\n        throw new CKEditorError('componentfactory-item-exists: The item already exists in the component factory.', {\n          name: name\n        });\n      }\n\n      this._components.set(getNormalized(name), {\n        callback: callback,\n        originalName: name\n      });\n    }\n    /**\n     * Creates an instance of a component registered in the factory under a specific name.\n     *\n     * When called, the {@link module:core/editor/editor~Editor#locale editor locale} is passed to\n     * the previously {@link #add added} factory function, allowing localization of the\n     * {@link module:ui/view~View view}.\n     *\n     * @param {String} name The name of the component.\n     * @returns {module:ui/view~View} The instantiated component view.\n     */\n\n  }, {\n    key: \"create\",\n    value: function create(name) {\n      if (!this.has(name)) {\n        /**\n         * The required component is not registered in the component factory. Please make sure\n         * the provided name is correct and the component has been correctly\n         * {@link #add added} to the factory.\n         *\n         * @error componentfactory-item-missing\n         * @param {String} name The name of the missing component.\n         */\n        throw new CKEditorError('componentfactory-item-missing: The required component is not registered in the factory.', {\n          name: name\n        });\n      }\n\n      return this._components.get(getNormalized(name)).callback(this.editor.locale);\n    }\n    /**\n     * Checks if a component of a given name is registered in the factory.\n     *\n     * @param {String} name The name of the component.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"has\",\n    value: function has(name) {\n      return this._components.has(getNormalized(name));\n    }\n  }]);\n\n  return ComponentFactory;\n}(); //\n// Ensures that the component name used as the key in the internal map is in lower case.\n//\n// @private\n// @param {String} name\n// @returns {String}\n\n\nexport { ComponentFactory as default };\n\nfunction getNormalized(name) {\n  return String(name).toLowerCase();\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module core/editor/editorui\n */\nimport ComponentFactory from '@ckeditor/ckeditor5-ui/src/componentfactory';\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\n/**\n * A class providing the minimal interface that is required to successfully bootstrap any editor UI.\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n */\n\nvar EditorUI =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of the editor UI class.\n   *\n   * @param {module:core/editor/editor~Editor} editor The editor instance.\n   * @param {module:ui/editorui/editoruiview~EditorUIView} view The view of the UI.\n   */\n  function EditorUI(editor, view) {\n    var _this = this;\n\n    _classCallCheck(this, EditorUI);\n\n    /**\n     * The editor that the UI belongs to.\n     *\n     * @readonly\n     * @member {module:core/editor/editor~Editor} #editor\n     */\n    this.editor = editor;\n    /**\n     * The main (top–most) view of the editor UI.\n     *\n     * @readonly\n     * @member {module:ui/editorui/editoruiview~EditorUIView} #view\n     */\n\n    this.view = view;\n    /**\n     * An instance of the {@link module:ui/componentfactory~ComponentFactory}, a registry used by plugins\n     * to register factories of specific UI components.\n     *\n     * @readonly\n     * @member {module:ui/componentfactory~ComponentFactory} #componentFactory\n     */\n\n    this.componentFactory = new ComponentFactory(editor);\n    /**\n     * Stores the information about the editor UI focus and propagates it so various plugins and components\n     * are unified as a focus group.\n     *\n     * @readonly\n     * @member {module:utils/focustracker~FocusTracker} #focusTracker\n     */\n\n    this.focusTracker = new FocusTracker(); // Informs UI components that should be refreshed after layout change.\n\n    this.listenTo(editor.editing.view.document, 'layoutChanged', function () {\n      return _this.update();\n    });\n  }\n  /**\n   * Fires the {@link module:core/editor/editorui~EditorUI#event:update `update`} event.\n   *\n   * This method should be called when the editor UI (e.g. positions of its balloons) needs to be updated due to\n   * some environmental change which CKEditor 5 is not aware of (e.g. resize of a container in which it is used).\n   */\n\n\n  _createClass(EditorUI, [{\n    key: \"update\",\n    value: function update() {\n      this.fire('update');\n    }\n    /**\n     * Destroys the UI.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.stopListening();\n      this.view.destroy();\n    }\n    /**\n     * Fired whenever the UI (all related components) should be refreshed.\n     *\n     * **Note:**: The event is fired after each {@link module:engine/view/document~Document#event:layoutChanged}.\n     * It can also be fired manually via the {@link module:core/editor/editorui~EditorUI#update} method.\n     *\n     * @event update\n     */\n\n  }]);\n\n  return EditorUI;\n}();\n\nexport { EditorUI as default };\nmix(EditorUI, EmitterMixin);","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module editor-classic/classiceditorui\n */\nimport EditorUI from '@ckeditor/ckeditor5-core/src/editor/editorui';\nimport enableToolbarKeyboardFocus from '@ckeditor/ckeditor5-ui/src/toolbar/enabletoolbarkeyboardfocus';\nimport normalizeToolbarConfig from '@ckeditor/ckeditor5-ui/src/toolbar/normalizetoolbarconfig';\n/**\n * The classic editor UI class.\n *\n * @extends module:core/editor/editorui~EditorUI\n */\n\nvar ClassicEditorUI =\n/*#__PURE__*/\nfunction (_EditorUI) {\n  _inherits(ClassicEditorUI, _EditorUI);\n\n  /**\n   * @inheritDoc\n   */\n  function ClassicEditorUI(editor, view) {\n    var _this;\n\n    _classCallCheck(this, ClassicEditorUI);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ClassicEditorUI).call(this, editor, view));\n    /**\n     * A normalized `config.toolbar` object.\n     *\n     * @type {Object}\n     * @private\n     */\n\n    _this._toolbarConfig = normalizeToolbarConfig(editor.config.get('toolbar'));\n    return _this;\n  }\n  /**\n   * Initializes the UI.\n   */\n\n\n  _createClass(ClassicEditorUI, [{\n    key: \"init\",\n    value: function init() {\n      var editor = this.editor;\n      var view = this.view;\n      view.render(); // Set–up the sticky panel with toolbar.\n\n      view.stickyPanel.bind('isActive').to(this.focusTracker, 'isFocused');\n      view.stickyPanel.limiterElement = view.element;\n\n      if (this._toolbarConfig.viewportTopOffset) {\n        view.stickyPanel.viewportTopOffset = this._toolbarConfig.viewportTopOffset;\n      } // Setup the editable.\n\n\n      var editingRoot = editor.editing.view.document.getRoot();\n      view.editable.bind('isReadOnly').to(editingRoot);\n      view.editable.bind('isFocused').to(editor.editing.view.document);\n      view.editable.name = editingRoot.rootName;\n      this.focusTracker.add(this.view.editableElement);\n      this.view.toolbar.fillFromConfig(this._toolbarConfig.items, this.componentFactory);\n      enableToolbarKeyboardFocus({\n        origin: editor.editing.view,\n        originFocusTracker: this.focusTracker,\n        originKeystrokeHandler: editor.keystrokes,\n        toolbar: this.view.toolbar\n      });\n    }\n  }]);\n\n  return ClassicEditorUI;\n}(EditorUI);\n\nexport { ClassicEditorUI as default };","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/toolbar/normalizetoolbarconfig\n */\n\n/**\n * Normalizes the toolbar configuration (`config.toolbar`), which:\n *\n * * may be defined as an `Array`:\n *\n * \t\ttoolbar: [ 'heading', 'bold', 'italic', 'link', ... ]\n *\n * * or an `Object`:\n *\n *\t\ttoolbar: {\n *\t\t\titems: [ 'heading', 'bold', 'italic', 'link', ... ],\n *\t\t\t...\n *\t\t}\n *\n * * or may not be defined at all (`undefined`)\n *\n * and returns it in the object form.\n *\n * @param {Array|Object|undefined} config The value of `config.toolbar`.\n * @returns {Object} A normalized toolbar config object.\n */\nexport default function normalizeToolbarConfig(config) {\n  if (Array.isArray(config)) {\n    return {\n      items: config\n    };\n  }\n\n  if (!config) {\n    return {\n      items: []\n    };\n  }\n\n  return Object.assign({\n    items: []\n  }, config);\n}","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/toolbar/enabletoolbarkeyboardfocus\n */\n\n/**\n * Enables focus/blur toolbar navigation using `Alt+F10` and `Esc` keystrokes.\n *\n * @param {Object} options Options of the utility.\n * @param {*} options.origin A view to which the focus will return when `Esc` is pressed and\n * `options.toolbar` is focused.\n * @param {module:utils/keystrokehandler~KeystrokeHandler} options.originKeystrokeHandler A keystroke\n * handler to register `Alt+F10` keystroke.\n * @param {module:utils/focustracker~FocusTracker} options.originFocusTracker A focus tracker\n * for `options.origin`.\n * @param {module:ui/toolbar/toolbarview~ToolbarView} options.toolbar A toolbar which is to gain\n * focus when `Alt+F10` is pressed.\n * @param {Function} [options.beforeFocus] A callback executed before the `options.toolbar` gains focus\n * upon the `Alt+F10` keystroke.\n * @param {Function} [options.afterBlur] A callback executed after `options.toolbar` loses focus upon\n * `Esc` keystroke but before the focus goes back to `options.origin`.\n */\nexport default function enableToolbarKeyboardFocus(_ref) {\n  var origin = _ref.origin,\n      originKeystrokeHandler = _ref.originKeystrokeHandler,\n      originFocusTracker = _ref.originFocusTracker,\n      toolbar = _ref.toolbar,\n      beforeFocus = _ref.beforeFocus,\n      afterBlur = _ref.afterBlur;\n  // Because toolbar items can get focus, the overall state of the toolbar must\n  // also be tracked.\n  originFocusTracker.add(toolbar.element); // Focus the toolbar on the keystroke, if not already focused.\n\n  originKeystrokeHandler.set('Alt+F10', function (data, cancel) {\n    if (originFocusTracker.isFocused && !toolbar.focusTracker.isFocused) {\n      if (beforeFocus) {\n        beforeFocus();\n      }\n\n      toolbar.focus();\n      cancel();\n    }\n  }); // Blur the toolbar and bring the focus back to origin.\n\n  toolbar.keystrokes.set('Esc', function (data, cancel) {\n    if (toolbar.focusTracker.isFocused) {\n      origin.focus();\n\n      if (afterBlur) {\n        afterBlur();\n      }\n\n      cancel();\n    }\n  });\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/editorui/editoruiview\n */\n\n/* globals document */\nimport View from '../view';\nimport Template from '../template';\nimport '../../theme/components/editorui/editorui.css';\n/**\n * The editor UI view class. Base class for the editor main views.\n *\n * @extends module:ui/view~View\n */\n\nvar EditorUIView =\n/*#__PURE__*/\nfunction (_View) {\n  _inherits(EditorUIView, _View);\n\n  /**\n   * Creates an instance of the editor UI view class.\n   *\n   * @param {module:utils/locale~Locale} [locale] The locale instance.\n   */\n  function EditorUIView(locale) {\n    var _this;\n\n    _classCallCheck(this, EditorUIView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditorUIView).call(this, locale));\n    /**\n     * Collection of the child views, detached from the DOM\n     * structure of the editor, like panels, icons etc.\n     *\n     * @readonly\n     * @member {module:ui/viewcollection~ViewCollection} #body\n     */\n\n    _this.body = _this.createCollection();\n    /**\n     * The element holding elements of the 'body' region.\n     *\n     * @private\n     * @member {HTMLElement} #_bodyCollectionContainer\n     */\n\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(EditorUIView, [{\n    key: \"render\",\n    value: function render() {\n      _get(_getPrototypeOf(EditorUIView.prototype), \"render\", this).call(this);\n\n      this._renderBodyCollection();\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._bodyCollectionContainer.remove();\n\n      return _get(_getPrototypeOf(EditorUIView.prototype), \"destroy\", this).call(this);\n    }\n    /**\n     * Creates and appends to `<body>` the {@link #body} collection container.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_renderBodyCollection\",\n    value: function _renderBodyCollection() {\n      var bodyElement = this._bodyCollectionContainer = new Template({\n        tag: 'div',\n        attributes: {\n          class: ['ck', 'ck-reset_all', 'ck-body', 'ck-rounded-corners']\n        },\n        children: this.body\n      }).render();\n      document.body.appendChild(bodyElement);\n    }\n  }]);\n\n  return EditorUIView;\n}(View);\n\nexport { EditorUIView as default };","function _typeof(obj) {\n    if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {\n        _typeof = function _typeof(obj) {\n            return typeof obj;\n        };\n    } else {\n        _typeof = function _typeof(obj) {\n            return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n        };\n    }\n    return _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError('Cannot call a class as a function');\n    }\n}\nfunction _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if ('value' in descriptor)\n            descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps)\n        _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps)\n        _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === 'object' || typeof call === 'function')) {\n        return call;\n    }\n    return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError('this hasn\\'t been initialised - super() hasn\\'t been called');\n    }\n    return self;\n}\nfunction _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== 'function' && superClass !== null) {\n        throw new TypeError('Super expression must either be null or a function');\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass)\n        _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return _setPrototypeOf(o, p);\n}\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n/**\n * @module ui/editorui/boxed/boxededitoruiview\n */\nimport EditorUIView from '../../editorui/editoruiview';\nimport LabelView from '../../label/labelview';\nimport uid from '@ckeditor/ckeditor5-utils/src/uid';\n/**\n * The boxed editor UI view class. This class represents an editor interface\n * consisting of a toolbar and an editable area, enclosed within a box.\n *\n * @extends module:ui/editorui/editoruiview~EditorUIView\n */\nvar BoxedEditorUIView = /*#__PURE__*/\nfunction (_EditorUIView) {\n    _inherits(BoxedEditorUIView, _EditorUIView);\n    /**\n   * Creates an instance of the boxed editor UI view class.\n   *\n   * @param {module:utils/locale~Locale} locale The locale instance..\n   */\n    function BoxedEditorUIView(locale) {\n        var _this;\n        _classCallCheck(this, BoxedEditorUIView);\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(BoxedEditorUIView).call(this, locale));\n        var ariaLabelUid = uid();\n        /**\n     * Collection of the child views located in the top (`.ck-editor__top`)\n     * area of the UI.\n     *\n     * @readonly\n     * @member {module:ui/viewcollection~ViewCollection}\n     */\n        _this.top = _this.createCollection();\n        /**\n     * Collection of the child views located in the main (`.ck-editor__main`)\n     * area of the UI.\n     *\n     * @readonly\n     * @member {module:ui/viewcollection~ViewCollection}\n     */\n        _this.main = _this.createCollection();\n        /**\n     * Voice label of the UI.\n     *\n     * @protected\n     * @readonly\n     * @member {module:ui/view~View} #_voiceLabelView\n     */\n        _this._voiceLabelView = _this._createVoiceLabel(ariaLabelUid);\n        _this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-reset',\n                    'ck-editor',\n                    'ck-rounded-corners'\n                ],\n                role: 'application',\n                dir: 'ltr',\n                lang: locale.language,\n                'aria-labelledby': 'ck-editor__aria-label_'.concat(ariaLabelUid)\n            },\n            children: [\n                _this._voiceLabelView,\n                {\n                    tag: 'div',\n                    attributes: {\n                        class: [\n                            'ck',\n                            'ck-editor__top',\n                            'ck-reset_all'\n                        ],\n                        role: 'presentation'\n                    },\n                    children: _this.top\n                },\n                {\n                    tag: 'div',\n                    attributes: {\n                        class: [\n                            'ck',\n                            'ck-editor__main'\n                        ],\n                        role: 'presentation'\n                    },\n                    children: _this.main\n                }\n            ]\n        });\n        return _this;\n    }\n    /**\n   * Creates a voice label view instance.\n   *\n   * @private\n   * @returns {module:ui/label/labelview~LabelView}\n   */\n    _createClass(BoxedEditorUIView, [{\n            key: '_createVoiceLabel',\n            value: function _createVoiceLabel(ariaLabelUid) {\n                var t = this.t;\n                var voiceLabel = new LabelView();\n                voiceLabel.text = t('aq');\n                voiceLabel.extendTemplate({\n                    attributes: {\n                        id: 'ck-editor__aria-label_'.concat(ariaLabelUid),\n                        class: 'ck-voice-label'\n                    }\n                });\n                return voiceLabel;\n            }\n        }]);\n    return BoxedEditorUIView;\n}(EditorUIView);\nexport {\n    BoxedEditorUIView as default\n};","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/editableui/editableuiview\n */\nimport View from '../view';\n/**\n * The editable UI view class.\n *\n * @extends module:ui/view~View\n */\n\nvar EditableUIView =\n/*#__PURE__*/\nfunction (_View) {\n  _inherits(EditableUIView, _View);\n\n  /**\n   * Creates an instance of EditableUIView class.\n   *\n   * @param {module:utils/locale~Locale} [locale] The locale instance.\n   * @param {HTMLElement} [editableElement] The editable element. If not specified, this view\n   * should create it. Otherwise, the existing element should be used.\n   */\n  function EditableUIView(locale, editableElement) {\n    var _this;\n\n    _classCallCheck(this, EditableUIView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditableUIView).call(this, locale));\n    var bind = _this.bindTemplate;\n\n    if (editableElement) {\n      _this.element = _this.editableElement = editableElement;\n    }\n\n    _this.setTemplate({\n      tag: 'div',\n      attributes: {\n        class: ['ck', 'ck-content', 'ck-editor__editable', 'ck-rounded-corners', bind.to('isFocused', function (value) {\n          return value ? 'ck-focused' : 'ck-blurred';\n        }), bind.if('isReadOnly', 'ck-read-only')],\n        contenteditable: bind.to('isReadOnly', function (value) {\n          return !value;\n        })\n      }\n    });\n    /**\n     * Controls whether the editable is writable or not.\n     *\n     * @observable\n     * @member {Boolean} #isReadOnly\n     */\n\n\n    _this.set('isReadOnly', false);\n    /**\n     * Controls whether the editable is focused, i.e. the user is typing in it.\n     *\n     * @observable\n     * @member {Boolean} #isFocused\n     */\n\n\n    _this.set('isFocused', false);\n    /**\n     * An external {@link #editableElement} passed into the constructor, which also means\n     * the view will not render its {@link #template}.\n     *\n     * @member {HTMLElement} #externalElement\n     */\n\n\n    _this.externalElement = editableElement;\n    /**\n     * The element which is the main editable element (usually the one with `contentEditable=\"true\"`).\n     *\n     * @readonly\n     * @member {HTMLElement} #editableElement\n     */\n\n    return _this;\n  }\n  /**\n   * Renders the view by either applying the {@link #template} to the existing\n   * {@link #editableElement} or assigning {@link #element} as {@link #editableElement}.\n   */\n\n\n  _createClass(EditableUIView, [{\n    key: \"render\",\n    value: function render() {\n      _get(_getPrototypeOf(EditableUIView.prototype), \"render\", this).call(this);\n\n      if (this.externalElement) {\n        this.template.apply(this.element = this.externalElement);\n      } else {\n        this.editableElement = this.element;\n      }\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.externalElement) {\n        this.template.revert(this.externalElement);\n      }\n\n      _get(_getPrototypeOf(EditableUIView.prototype), \"destroy\", this).call(this);\n    }\n  }]);\n\n  return EditableUIView;\n}(View);\n\nexport { EditableUIView as default };","function _typeof(obj) {\n    if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {\n        _typeof = function _typeof(obj) {\n            return typeof obj;\n        };\n    } else {\n        _typeof = function _typeof(obj) {\n            return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n        };\n    }\n    return _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError('Cannot call a class as a function');\n    }\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === 'object' || typeof call === 'function')) {\n        return call;\n    }\n    return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError('this hasn\\'t been initialised - super() hasn\\'t been called');\n    }\n    return self;\n}\nfunction _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== 'function' && superClass !== null) {\n        throw new TypeError('Super expression must either be null or a function');\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass)\n        _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return _setPrototypeOf(o, p);\n}\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n/**\n * @module ui/editableui/inline/inlineeditableuiview\n */\nimport EditableUIView from '../../editableui/editableuiview';\n/**\n * The inline editable UI class implementing an inline {@link module:ui/editableui/editableuiview~EditableUIView}.\n *\n * @extends module:ui/editableui/editableuiview~EditableUIView\n */\nvar InlineEditableUIView = /*#__PURE__*/\nfunction (_EditableUIView) {\n    _inherits(InlineEditableUIView, _EditableUIView);\n    /**\n   * Creates an instance of the InlineEditableUIView class.\n   *\n   * @param {module:utils/locale~Locale} [locale] The locale instance.\n   * @param {HTMLElement} [editableElement] The editable element. If not specified, the\n   * {@link module:ui/editableui/editableuiview~EditableUIView}\n   * will create it. Otherwise, the existing element will be used.\n   */\n    function InlineEditableUIView(locale, editableElement) {\n        var _this;\n        _classCallCheck(this, InlineEditableUIView);\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(InlineEditableUIView).call(this, locale, editableElement));\n        var bind = _this.bindTemplate;\n        var t = _this.t;\n        /**\n     * The name of the editable UI view.\n     *\n     * @observable\n     * @member {String} #name\n     */\n        _this.set('name', null);\n        var getLabel = function getLabel(value) {\n            return t('ar', [value]);\n        };\n        _this.extendTemplate({\n            attributes: {\n                role: 'textbox',\n                'aria-label': bind.to('name', getLabel),\n                class: 'ck-editor__editable_inline'\n            }\n        });\n        return _this;\n    }\n    return InlineEditableUIView;\n}(EditableUIView);\nexport {\n    InlineEditableUIView as default\n};","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module ui/panel/sticky/stickypanelview\n */\nimport global from '@ckeditor/ckeditor5-utils/src/dom/global';\nimport View from '../../view';\nimport Template from '../../template';\nimport toUnit from '@ckeditor/ckeditor5-utils/src/dom/tounit';\nimport '../../../theme/components/panel/stickypanel.css';\nvar toPx = toUnit('px');\n/**\n * The sticky panel view class.\n */\n\nvar StickyPanelView =\n/*#__PURE__*/\nfunction (_View) {\n  _inherits(StickyPanelView, _View);\n\n  /**\n   * @inheritDoc\n   */\n  function StickyPanelView(locale) {\n    var _this;\n\n    _classCallCheck(this, StickyPanelView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StickyPanelView).call(this, locale));\n    var bind = _this.bindTemplate;\n    /**\n     * Controls whether the sticky panel should be active.\n     *\n     * @readonly\n     * @observable\n     * @member {Boolean} #isActive\n     */\n\n    _this.set('isActive', false);\n    /**\n     * Controls whether the sticky panel is in the \"sticky\" state.\n     *\n     * @readonly\n     * @observable\n     * @member {Boolean} #isSticky\n     */\n\n\n    _this.set('isSticky', false);\n    /**\n     * The limiter element for the sticky panel instance. Its bounding rect limits\n     * the \"stickyness\" of the panel, i.e. when the panel reaches the bottom\n     * edge of the limiter, it becomes sticky to that edge and does not float\n     * off the limiter. It is mandatory for the panel to work properly and once\n     * set, it cannot be changed.\n     *\n     * @readonly\n     * @observable\n     * @member {HTMLElement} #limiterElement\n     */\n\n\n    _this.set('limiterElement', null);\n    /**\n     * The offset from the bottom edge of {@link #limiterElement}\n     * which stops the panel from stickying any further to prevent limiter's content\n     * from being completely covered.\n     *\n     * @readonly\n     * @observable\n     * @default 50\n     * @member {Number} #limiterBottomOffset\n     */\n\n\n    _this.set('limiterBottomOffset', 50);\n    /**\n     * The offset from the top edge of the web browser's viewport which makes the\n     * panel become sticky. The default value is `0`, which means the panel becomes\n     * sticky when it's upper edge touches the top of the page viewport.\n     *\n     * This attribute is useful when the web page has UI elements positioned to the top\n     * either using `position: fixed` or `position: sticky`, which would cover the\n     * sticky panel or vice–versa (depending on the `z-index` hierarchy).\n     *\n     * @readonly\n     * @observable\n     * @default 0\n     * @member {Number} #viewportTopOffset\n     */\n\n\n    _this.set('viewportTopOffset', 0);\n    /**\n     * Controls the `margin-left` CSS style of the panel.\n     *\n     * @protected\n     * @readonly\n     * @observable\n     * @member {String} #_marginLeft\n     */\n\n\n    _this.set('_marginLeft', null);\n    /**\n     * Set `true` if the sticky panel reached the bottom edge of the\n     * {@link #limiterElement}.\n     *\n     * @protected\n     * @readonly\n     * @observable\n     * @member {Boolean} #_isStickyToTheLimiter\n     */\n\n\n    _this.set('_isStickyToTheLimiter', false);\n    /**\n     * Set `true` if the sticky panel uses the {@link #viewportTopOffset},\n     * i.e. not {@link #_isStickyToTheLimiter} and the {@link #viewportTopOffset}\n     * is not `0`.\n     *\n     * @protected\n     * @readonly\n     * @observable\n     * @member {Boolean} #_hasViewportTopOffset\n     */\n\n\n    _this.set('_hasViewportTopOffset', false);\n    /**\n     * Collection of the child views which creates balloon panel contents.\n     *\n     * @readonly\n     * @member {module:ui/viewcollection~ViewCollection}\n     */\n\n\n    _this.content = _this.createCollection();\n    /**\n     * The DOM bounding client rect of the {@link module:ui/view~View#element} of the panel.\n     *\n     * @protected\n     * @member {Object} #_panelRect\n     */\n\n    /**\n     * The DOM bounding client rect of the {@link #limiterElement}\n     * of the panel.\n     *\n     * @protected\n     * @member {Object} #_limiterRect\n     */\n\n    /**\n     * A dummy element which visually fills the space as long as the\n     * actual panel is sticky. It prevents flickering of the UI.\n     *\n     * @protected\n     * @property {HTMLElement}\n     */\n\n    _this._contentPanelPlaceholder = new Template({\n      tag: 'div',\n      attributes: {\n        class: ['ck', 'ck-sticky-panel__placeholder'],\n        style: {\n          display: bind.to('isSticky', function (isSticky) {\n            return isSticky ? 'block' : 'none';\n          }),\n          height: bind.to('isSticky', function (isSticky) {\n            return isSticky ? toPx(_this._panelRect.height) : null;\n          })\n        }\n      }\n    }).render();\n    /**\n     * The panel which accepts children into {@link #content} collection.\n     * Also an element which is positioned when {@link #isSticky}.\n     *\n     * @protected\n     * @property {HTMLElement}\n     */\n\n    _this._contentPanel = new Template({\n      tag: 'div',\n      attributes: {\n        class: ['ck', 'ck-sticky-panel__content', // Toggle class of the panel when \"sticky\" state changes in the view.\n        bind.if('isSticky', 'ck-sticky-panel__content_sticky'), bind.if('_isStickyToTheLimiter', 'ck-sticky-panel__content_sticky_bottom-limit')],\n        style: {\n          width: bind.to('isSticky', function (isSticky) {\n            return isSticky ? toPx(_this._contentPanelPlaceholder.getBoundingClientRect().width) : null;\n          }),\n          top: bind.to('_hasViewportTopOffset', function (_hasViewportTopOffset) {\n            return _hasViewportTopOffset ? toPx(_this.viewportTopOffset) : null;\n          }),\n          bottom: bind.to('_isStickyToTheLimiter', function (_isStickyToTheLimiter) {\n            return _isStickyToTheLimiter ? toPx(_this.limiterBottomOffset) : null;\n          }),\n          marginLeft: bind.to('_marginLeft')\n        }\n      },\n      children: _this.content\n    }).render();\n\n    _this.setTemplate({\n      tag: 'div',\n      attributes: {\n        class: ['ck', 'ck-sticky-panel']\n      },\n      children: [_this._contentPanelPlaceholder, _this._contentPanel]\n    });\n\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(StickyPanelView, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      _get(_getPrototypeOf(StickyPanelView.prototype), \"render\", this).call(this); // Check if the panel should go into the sticky state immediately.\n\n\n      this._checkIfShouldBeSticky(); // Update sticky state of the panel as the window is being scrolled.\n\n\n      this.listenTo(global.window, 'scroll', function () {\n        _this2._checkIfShouldBeSticky();\n      }); // Synchronize with `model.isActive` because sticking an inactive panel is pointless.\n\n      this.listenTo(this, 'change:isActive', function () {\n        _this2._checkIfShouldBeSticky();\n      });\n    }\n    /**\n     * Analyzes the environment to decide whether the panel should\n     * be sticky or not.\n     *\n     * @protected\n     */\n\n  }, {\n    key: \"_checkIfShouldBeSticky\",\n    value: function _checkIfShouldBeSticky() {\n      var panelRect = this._panelRect = this._contentPanel.getBoundingClientRect();\n\n      var limiterRect;\n\n      if (!this.limiterElement) {\n        this.isSticky = false;\n      } else {\n        limiterRect = this._limiterRect = this.limiterElement.getBoundingClientRect(); // The panel must be active to become sticky.\n\n        this.isSticky = this.isActive && // The limiter's top edge must be beyond the upper edge of the visible viewport (+the viewportTopOffset).\n        limiterRect.top < this.viewportTopOffset && // The model#limiterElement's height mustn't be smaller than the panel's height and model#limiterBottomOffset.\n        // There's no point in entering the sticky mode if the model#limiterElement is very, very small, because\n        // it would immediately set model#_isStickyToTheLimiter true and, given model#limiterBottomOffset, the panel\n        // would be positioned before the model#limiterElement.\n        this._panelRect.height + this.limiterBottomOffset < limiterRect.height;\n      } // Stick the panel to the top edge of the viewport simulating CSS position:sticky.\n      // TODO: Possibly replaced by CSS in the future http://caniuse.com/#feat=css-sticky\n\n\n      if (this.isSticky) {\n        this._isStickyToTheLimiter = limiterRect.bottom < panelRect.height + this.limiterBottomOffset + this.viewportTopOffset;\n        this._hasViewportTopOffset = !this._isStickyToTheLimiter && !!this.viewportTopOffset;\n        this._marginLeft = this._isStickyToTheLimiter ? null : toPx(-global.window.scrollX);\n      } // Detach the panel from the top edge of the viewport.\n      else {\n          this._isStickyToTheLimiter = false;\n          this._hasViewportTopOffset = false;\n          this._marginLeft = null;\n        }\n    }\n  }]);\n\n  return StickyPanelView;\n}(View);\n\nexport { StickyPanelView as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module editor-classic/classiceditoruiview\n */\nimport BoxedEditorUIView from '@ckeditor/ckeditor5-ui/src/editorui/boxed/boxededitoruiview';\nimport InlineEditableUIView from '@ckeditor/ckeditor5-ui/src/editableui/inline/inlineeditableuiview';\nimport StickyPanelView from '@ckeditor/ckeditor5-ui/src/panel/sticky/stickypanelview';\nimport ToolbarView from '@ckeditor/ckeditor5-ui/src/toolbar/toolbarview';\nimport '../theme/classiceditor.css';\n/**\n * Classic editor UI view. Uses an inline editable and a sticky toolbar, all\n * enclosed in a boxed UI view.\n *\n * @extends module:ui/editorui/boxed/boxededitoruiview~BoxedEditorUIView\n */\n\nvar ClassicEditorUIView =\n/*#__PURE__*/\nfunction (_BoxedEditorUIView) {\n  _inherits(ClassicEditorUIView, _BoxedEditorUIView);\n\n  /**\n   * Creates an instance of the classic editor UI view.\n   *\n   * @param {module:utils/locale~Locale} locale The {@link module:core/editor/editor~Editor#locale} instance.\n   */\n  function ClassicEditorUIView(locale) {\n    var _this;\n\n    _classCallCheck(this, ClassicEditorUIView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ClassicEditorUIView).call(this, locale));\n    /**\n     * Sticky panel view instance. This is a parent view of a {@link #toolbar}\n     * that makes toolbar sticky.\n     *\n     * @readonly\n     * @member {module:ui/panel/sticky/stickypanelview~StickyPanelView}\n     */\n\n    _this.stickyPanel = new StickyPanelView(locale);\n    /**\n     * Toolbar view instance.\n     *\n     * @readonly\n     * @member {module:ui/toolbar/toolbarview~ToolbarView}\n     */\n\n    _this.toolbar = new ToolbarView(locale);\n    /**\n     * Editable UI view.\n     *\n     * @readonly\n     * @member {module:ui/editableui/inline/inlineeditableuiview~InlineEditableUIView}\n     */\n\n    _this.editable = new InlineEditableUIView(locale);\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(ClassicEditorUIView, [{\n    key: \"render\",\n    value: function render() {\n      _get(_getPrototypeOf(ClassicEditorUIView.prototype), \"render\", this).call(this); // Set toolbar as a child of a stickyPanel and makes toolbar sticky.\n\n\n      this.stickyPanel.content.add(this.toolbar);\n      this.top.add(this.stickyPanel);\n      this.main.add(this.editable);\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"editableElement\",\n    get: function get() {\n      return this.editable.element;\n    }\n  }]);\n\n  return ClassicEditorUIView;\n}(BoxedEditorUIView);\n\nexport { ClassicEditorUIView as default };","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/elementreplacer\n */\n\n/**\n * Utility class allowing to hide existing HTML elements or replace them with given ones in a way that doesn't remove\n * the original elements from the DOM.\n */\nvar ElementReplacer =\n/*#__PURE__*/\nfunction () {\n  function ElementReplacer() {\n    _classCallCheck(this, ElementReplacer);\n\n    /**\n     * The elements replaced by {@link #replace} and their replacements.\n     *\n     * @private\n     * @member {Array.<Object>}\n     */\n    this._replacedElements = [];\n  }\n  /**\n   * Hides the `element` and, if specified, inserts the the given element next to it.\n   *\n   * The effect of this method can be reverted by {@link #restore}.\n   *\n   * @param {HTMLElement} element The element to replace.\n   * @param {HTMLElement} [newElement] The replacement element. If not passed, then the `element` will just be hidden.\n   */\n\n\n  _createClass(ElementReplacer, [{\n    key: \"replace\",\n    value: function replace(element, newElement) {\n      this._replacedElements.push({\n        element: element,\n        newElement: newElement\n      });\n\n      element.style.display = 'none';\n\n      if (newElement) {\n        element.parentNode.insertBefore(newElement, element.nextSibling);\n      }\n    }\n    /**\n     * Restores what {@link #replace} did.\n     */\n\n  }, {\n    key: \"restore\",\n    value: function restore() {\n      this._replacedElements.forEach(function (_ref) {\n        var element = _ref.element,\n            newElement = _ref.newElement;\n        element.style.display = '';\n\n        if (newElement) {\n          newElement.remove();\n        }\n      });\n\n      this._replacedElements = [];\n    }\n  }]);\n\n  return ElementReplacer;\n}();\n\nexport { ElementReplacer as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module editor-classic/classiceditor\n */\nimport Editor from '@ckeditor/ckeditor5-core/src/editor/editor';\nimport DataApiMixin from '@ckeditor/ckeditor5-core/src/editor/utils/dataapimixin';\nimport ElementApiMixin from '@ckeditor/ckeditor5-core/src/editor/utils/elementapimixin';\nimport attachToForm from '@ckeditor/ckeditor5-core/src/editor/utils/attachtoform';\nimport HtmlDataProcessor from '@ckeditor/ckeditor5-engine/src/dataprocessor/htmldataprocessor';\nimport ClassicEditorUI from './classiceditorui';\nimport ClassicEditorUIView from './classiceditoruiview';\nimport ElementReplacer from '@ckeditor/ckeditor5-utils/src/elementreplacer';\nimport getDataFromElement from '@ckeditor/ckeditor5-utils/src/dom/getdatafromelement';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport { isElement } from 'lodash-es';\n/**\n * The {@glink builds/guides/overview#classic-editor classic editor} implementation.\n * It uses an inline editable and a sticky toolbar, all enclosed in a boxed UI.\n * See the {@glink examples/builds/classic-editor demo}.\n *\n * In order to create a classic editor instance, use the static\n * {@link module:editor-classic/classiceditor~ClassicEditor.create `ClassicEditor.create()`} method.\n *\n * # Classic editor and classic build\n *\n * The classic editor can be used directly from source (if you installed the\n * [`@ckeditor/ckeditor5-editor-classic`](https://www.npmjs.com/package/@ckeditor/ckeditor5-editor-classic) package)\n * but it is also available in the {@glink builds/guides/overview#classic-editor classic build}.\n *\n * {@glink builds/guides/overview Builds} are ready-to-use editors with plugins bundled in. When using the editor from\n * source you need to take care of loading all plugins by yourself\n * (through the {@link module:core/editor/editorconfig~EditorConfig#plugins `config.plugins`} option).\n * Using the editor from source gives much better flexibility and allows easier customization.\n *\n * Read more about initializing the editor from source or as a build in\n * {@link module:editor-classic/classiceditor~ClassicEditor.create `ClassicEditor.create()`}.\n *\n * @mixes module:core/editor/utils/dataapimixin~DataApiMixin\n * @mixes module:core/editor/utils/elementapimixin~ElementApiMixin\n * @implements module:core/editor/editorwithui~EditorWithUI\n * @extends module:core/editor/editor~Editor\n */\n\nvar ClassicEditor =\n/*#__PURE__*/\nfunction (_Editor) {\n  _inherits(ClassicEditor, _Editor);\n\n  /**\n   * Creates an instance of the classic editor.\n   *\n   * **Note:** do not use the constructor to create editor instances. Use the static\n   * {@link module:editor-classic/classiceditor~ClassicEditor.create `ClassicEditor.create()`} method instead.\n   *\n   * @protected\n   * @param {HTMLElement|String} sourceElementOrData The DOM element that will be the source for the created editor\n   * or the editor's initial data. For more information see\n   * {@link module:editor-classic/classiceditor~ClassicEditor.create `ClassicEditor.create()`}.\n   * @param {module:core/editor/editorconfig~EditorConfig} config The editor configuration.\n   */\n  function ClassicEditor(sourceElementOrData, config) {\n    var _this;\n\n    _classCallCheck(this, ClassicEditor);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ClassicEditor).call(this, config));\n\n    if (isElement(sourceElementOrData)) {\n      _this.sourceElement = sourceElementOrData;\n    }\n    /**\n     * The element replacer instance used to hide the editor's source element.\n     *\n     * @protected\n     * @member {module:utils/elementreplacer~ElementReplacer}\n     */\n\n\n    _this._elementReplacer = new ElementReplacer();\n    _this.data.processor = new HtmlDataProcessor();\n\n    _this.model.document.createRoot();\n\n    _this.ui = new ClassicEditorUI(_assertThisInitialized(_assertThisInitialized(_this)), new ClassicEditorUIView(_this.locale));\n    attachToForm(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(ClassicEditor, [{\n    key: \"destroy\",\n\n    /**\n     * Destroys the editor instance, releasing all resources used by it.\n     *\n     * Updates the editor's source element with the data.\n     *\n     * @returns {Promise}\n     */\n    value: function destroy() {\n      if (this.sourceElement) {\n        this.updateSourceElement();\n      }\n\n      this._elementReplacer.restore();\n\n      this.ui.destroy();\n      return _get(_getPrototypeOf(ClassicEditor.prototype), \"destroy\", this).call(this);\n    }\n    /**\n     * Creates a classic editor instance.\n     *\n     * Creating an instance when using a {@glink builds/index CKEditor build}:\n     *\n     *\t\tClassicEditor\n     *\t\t\t.create( document.querySelector( '#editor' ) )\n     *\t\t\t.then( editor => {\n     *\t\t\t\tconsole.log( 'Editor was initialized', editor );\n     *\t\t\t} )\n     *\t\t\t.catch( err => {\n     *\t\t\t\tconsole.error( err.stack );\n     *\t\t\t} );\n     *\n     * Creating an instance when using CKEditor from source (make sure to specify the list of plugins to load and the toolbar):\n     *\n     *\t\timport ClassicEditor from '@ckeditor/ckeditor5-editor-classic/src/classiceditor';\n     *\t\timport Essentials from '@ckeditor/ckeditor5-essentials/src/essentials';\n     *\t\timport Bold from '@ckeditor/ckeditor5-basic-styles/src/bold';\n     *\t\timport Italic from '@ckeditor/ckeditor5-basic-styles/src/italic';\n     *\t\timport ...\n     *\n     *\t\tClassicEditor\n     *\t\t\t.create( document.querySelector( '#editor' ), {\n     *\t\t\t\tplugins: [ Essentials, Bold, Italic, ... ],\n     *\t\t\t\ttoolbar: [ 'bold', 'italic', ... ]\n     *\t\t\t} )\n     *\t\t\t.then( editor => {\n     *\t\t\t\tconsole.log( 'Editor was initialized', editor );\n     *\t\t\t} )\n     *\t\t\t.catch( err => {\n     *\t\t\t\tconsole.error( err.stack );\n     *\t\t\t} );\n     *\n     * Creating an instance when using initial data instead of a DOM element:\n     *\n     *\t\timport ClassicEditor from '@ckeditor/ckeditor5-editor-classic/src/classiceditor';\n     *\t\timport Essentials from '@ckeditor/ckeditor5-essentials/src/essentials';\n     *\t\timport Bold from '@ckeditor/ckeditor5-basic-styles/src/bold';\n     *\t\timport Italic from '@ckeditor/ckeditor5-basic-styles/src/italic';\n     *\t\timport ...\n     *\n     *\t\tClassicEditor\n     *\t\t\t.create( '<p>Hello world!</p>' )\n     *\t\t\t.then( editor => {\n     *\t\t\t\tconsole.log( 'Editor was initialized', editor );\n     *\n     *\t\t\t\t// Initial data was provided so `editor.element` needs to be added manually to the DOM.\n     *\t\t\t\tdocument.body.appendChild( editor.element );\n     *\t\t\t} )\n     *\t\t\t.catch( err => {\n     *\t\t\t\tconsole.error( err.stack );\n     *\t\t\t} );\n     *\n     * @param {HTMLElement|String} sourceElementOrData The DOM element that will be the source for the created editor\n     * or the editor's initial data.\n     *\n     * If a source element is passed, then its contents will be automatically\n     * {@link module:editor-classic/classiceditor~ClassicEditor#setData loaded} to the editor on startup\n     * and the {@link module:core/editor/editorwithui~EditorWithUI#element editor element} will replace the passed element in the DOM\n     * (the original one will be hidden and the editor will be injected next to it).\n     *\n     * Moreover, the data will be set back to the source element once the editor is destroyed and\n     * (if the element is a `<textarea>`) when a form in which this element is contained is submitted (which ensures\n     * automatic integration with native web forms).\n     *\n     * If the data is passed, a detached editor will be created. It means that you need to insert it into the DOM manually\n     * (by accessing the {@link module:editor-classic/classiceditor~ClassicEditor#element `editor.element`} property).\n     *\n     * See the examples above to learn more.\n     *\n     * @param {module:core/editor/editorconfig~EditorConfig} config The editor configuration.\n     * @returns {Promise} A promise resolved once the editor is ready.\n     * The promise returns the created {@link module:editor-classic/classiceditor~ClassicEditor} instance.\n     */\n\n  }, {\n    key: \"element\",\n    get: function get() {\n      return this.ui.view.element;\n    }\n  }], [{\n    key: \"create\",\n    value: function create(sourceElementOrData, config) {\n      var _this2 = this;\n\n      return new Promise(function (resolve) {\n        var editor = new _this2(sourceElementOrData, config);\n        resolve(editor.initPlugins().then(function () {\n          return editor.ui.init();\n        }).then(function () {\n          if (isElement(sourceElementOrData)) {\n            editor._elementReplacer.replace(sourceElementOrData, editor.element);\n          }\n\n          editor.fire('uiReady');\n        }).then(function () {\n          return editor.editing.view.attachDomRoot(editor.ui.view.editableElement);\n        }).then(function () {\n          var initialData = isElement(sourceElementOrData) ? getDataFromElement(sourceElementOrData) : sourceElementOrData;\n          return editor.data.init(initialData);\n        }).then(function () {\n          editor.fire('dataReady');\n          editor.fire('ready');\n        }).then(function () {\n          return editor;\n        }));\n      });\n    }\n  }]);\n\n  return ClassicEditor;\n}(Editor);\n\nexport { ClassicEditor as default };\nmix(ClassicEditor, DataApiMixin);\nmix(ClassicEditor, ElementApiMixin);","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\nimport { isFunction } from 'lodash-es';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n/**\n * @module core/editor/utils/attachtoform\n */\n\n/**\n * Checks if the editor is initialized on a `<textarea>` element that belongs to a form. If yes, it updates the editor's element\n * content before submitting the form.\n *\n * This helper requires the {@link module:core/editor/utils/elementapimixin~ElementApi ElementApi interface}.\n *\n * @param {module:core/editor/editor~Editor} editor Editor instance.\n */\n\nexport default function attachToForm(editor) {\n  if (!isFunction(editor.updateSourceElement)) {\n    /**\n     * The editor passed to `attachToForm()` must implement the\n     * {@link module:core/editor/utils/elementapimixin~ElementApi} interface.\n     *\n     * @error attachtoform-missing-elementapi-interface\n     */\n    throw new CKEditorError('attachtoform-missing-elementapi-interface: Editor passed to attachToForm() must implement ElementApi.');\n  }\n\n  var sourceElement = editor.sourceElement; // Only when replacing a textarea which is inside of a form element.\n\n  if (sourceElement && sourceElement.tagName.toLowerCase() === 'textarea' && sourceElement.form) {\n    var originalSubmit;\n    var form = sourceElement.form;\n\n    var onSubmit = function onSubmit() {\n      return editor.updateSourceElement();\n    }; // Replace the original form#submit() to call a custom submit function first.\n    // Check if #submit is a function because the form might have an input named \"submit\".\n\n\n    if (isFunction(form.submit)) {\n      originalSubmit = form.submit;\n\n      form.submit = function () {\n        onSubmit();\n        originalSubmit.apply(form);\n      };\n    } // Update the replaced textarea with data before each form#submit event.\n\n\n    form.addEventListener('submit', onSubmit); // Remove the submit listener and revert the original submit method on\n    // editor#destroy.\n\n    editor.on('destroy', function () {\n      form.removeEventListener('submit', onSubmit);\n\n      if (originalSubmit) {\n        form.submit = originalSubmit;\n      }\n    });\n  }\n}","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/* globals HTMLTextAreaElement */\n\n/**\n * @module utils/dom/getdatafromelement\n */\n\n/**\n * Gets data from a given source element.\n *\n * @param {HTMLElement} el The element from which the data will be retrieved.\n * @returns {String} The data string.\n */\nexport default function getDataFromElement(el) {\n  if (el instanceof HTMLTextAreaElement) {\n    return el.value;\n  }\n\n  return el.innerHTML;\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module enter/entercommand\n */\nimport Command from '@ckeditor/ckeditor5-core/src/command';\n/**\n * Enter command. It is used by the {@link module:enter/enter~Enter Enter feature} to handle the <kbd>Enter</kbd> key.\n *\n * @extends module:core/command~Command\n */\n\nvar EnterCommand =\n/*#__PURE__*/\nfunction (_Command) {\n  _inherits(EnterCommand, _Command);\n\n  function EnterCommand() {\n    _classCallCheck(this, EnterCommand);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(EnterCommand).apply(this, arguments));\n  }\n\n  _createClass(EnterCommand, [{\n    key: \"execute\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function execute() {\n      var _this = this;\n\n      var model = this.editor.model;\n      var doc = model.document;\n      model.change(function (writer) {\n        enterBlock(_this.editor.model, writer, doc.selection, model.schema);\n\n        _this.fire('afterExecute', {\n          writer: writer\n        });\n      });\n    }\n  }]);\n\n  return EnterCommand;\n}(Command); // Creates a new block in the way that the <kbd>Enter</kbd> key is expected to work.\n//\n// @param {module:engine/model~Model} model\n// @param {module:engine/model/writer~Writer} writer\n// @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n// Selection on which the action should be performed.\n// @param {module:engine/model/schema~Schema} schema\n\n\nexport { EnterCommand as default };\n\nfunction enterBlock(model, writer, selection, schema) {\n  var isSelectionEmpty = selection.isCollapsed;\n  var range = selection.getFirstRange();\n  var startElement = range.start.parent;\n  var endElement = range.end.parent; // Don't touch the roots and other limit elements.\n\n  if (schema.isLimit(startElement) || schema.isLimit(endElement)) {\n    // Delete the selected content but only if inside a single limit element.\n    // Abort, when crossing limit elements boundary (e.g. <limit1>x[x</limit1>donttouchme<limit2>y]y</limit2>).\n    // This is an edge case and it's hard to tell what should actually happen because such a selection\n    // is not entirely valid.\n    if (!isSelectionEmpty && startElement == endElement) {\n      model.deleteContent(selection);\n    }\n\n    return;\n  }\n\n  if (isSelectionEmpty) {\n    splitBlock(writer, range.start);\n  } else {\n    var leaveUnmerged = !(range.start.isAtStart && range.end.isAtEnd);\n    var isContainedWithinOneElement = startElement == endElement;\n    model.deleteContent(selection, {\n      leaveUnmerged: leaveUnmerged\n    });\n\n    if (leaveUnmerged) {\n      // Partially selected elements.\n      //\n      // <h>x[xx]x</h>\t\t-> <h>x^x</h>\t\t\t-> <h>x</h><h>^x</h>\n      if (isContainedWithinOneElement) {\n        splitBlock(writer, selection.focus);\n      } // Selection over multiple elements.\n      //\n      // <h>x[x</h><p>y]y<p>\t-> <h>x^</h><p>y</p>\t-> <h>x</h><p>^y</p>\n      else {\n          writer.setSelection(endElement, 0);\n        }\n    }\n  }\n}\n\nfunction splitBlock(writer, splitPos) {\n  writer.split(splitPos);\n  writer.setSelection(splitPos.parent.nextSibling, 0);\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module enter/enterobserver\n */\nimport Observer from '@ckeditor/ckeditor5-engine/src/view/observer/observer';\nimport DomEventData from '@ckeditor/ckeditor5-engine/src/view/observer/domeventdata';\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\n/**\n * Enter observer introduces the {@link module:engine/view/document~Document#event:enter} event.\n *\n * @extends module:engine/view/observer~Observer\n */\n\nvar EnterObserver =\n/*#__PURE__*/\nfunction (_Observer) {\n  _inherits(EnterObserver, _Observer);\n\n  function EnterObserver(view) {\n    var _this;\n\n    _classCallCheck(this, EnterObserver);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EnterObserver).call(this, view));\n    var doc = _this.document;\n    doc.on('keydown', function (evt, data) {\n      if (_this.isEnabled && data.keyCode == keyCodes.enter) {\n        // Save the event object to check later if it was stopped or not.\n        var event;\n        doc.once('enter', function (evt) {\n          return event = evt;\n        }, {\n          priority: 'highest'\n        });\n        doc.fire('enter', new DomEventData(doc, data.domEvent, {\n          isSoft: data.shiftKey\n        })); // Stop `keydown` event if `enter` event was stopped.\n        // https://github.com/ckeditor/ckeditor5/issues/753\n\n        if (event && event.stop.called) {\n          evt.stop();\n        }\n      }\n    });\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(EnterObserver, [{\n    key: \"observe\",\n    value: function observe() {}\n  }]);\n\n  return EnterObserver;\n}(Observer);\n/**\n * Event fired when the user presses the <kbd>Enter</kbd> key.\n *\n * Note: This event is fired by the {@link module:enter/enterobserver~EnterObserver observer}\n * (usually registered by the {@link module:enter/enter~Enter Enter feature} and\n * {@link module:enter/shiftenter~ShiftEnter ShiftEnter feature}).\n *\n * @event module:engine/view/document~Document#event:enter\n * @param {module:engine/view/observer/domeventdata~DomEventData} data\n * @param {Boolean} data.isSoft Whether it's a soft enter (<kbd>Shift</kbd>+<kbd>Enter</kbd>) or hard enter (<kbd>Enter</kbd>).\n */\n\n\nexport { EnterObserver as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module enter/enter\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport EnterCommand from './entercommand';\nimport EnterObserver from './enterobserver';\n/**\n * This plugin handles the <kbd>Enter</kbd> key (hard line break) in the editor.\n *\n * See also the {@link module:enter/shiftenter~ShiftEnter} plugin.\n *\n * For more information about this feature see the {@glink api/enter package page}.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar Enter =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(Enter, _Plugin);\n\n  function Enter() {\n    _classCallCheck(this, Enter);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Enter).apply(this, arguments));\n  }\n\n  _createClass(Enter, [{\n    key: \"init\",\n    value: function init() {\n      var editor = this.editor;\n      var view = editor.editing.view;\n      var viewDocument = view.document;\n      view.addObserver(EnterObserver);\n      editor.commands.add('enter', new EnterCommand(editor));\n      this.listenTo(viewDocument, 'enter', function (evt, data) {\n        data.preventDefault(); // The soft enter key is handled by the ShiftEnter plugin.\n\n        if (data.isSoft) {\n          return;\n        }\n\n        editor.execute('enter');\n        view.scrollToTheSelection();\n      }, {\n        priority: 'low'\n      });\n    }\n  }], [{\n    key: \"pluginName\",\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return 'Enter';\n    }\n  }]);\n\n  return Enter;\n}(Plugin);\n\nexport { Enter as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @module enter/shiftentercommand\n */\nimport Command from '@ckeditor/ckeditor5-core/src/command';\n/**\n * ShiftEnter command. It is used by the {@link module:enter/shiftenter~ShiftEnter ShiftEnter feature} to handle\n * the <kbd>Shift</kbd>+<kbd>Enter</kbd> keystroke.\n *\n * @extends module:core/command~Command\n */\n\nvar ShiftEnterCommand =\n/*#__PURE__*/\nfunction (_Command) {\n  _inherits(ShiftEnterCommand, _Command);\n\n  function ShiftEnterCommand() {\n    _classCallCheck(this, ShiftEnterCommand);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ShiftEnterCommand).apply(this, arguments));\n  }\n\n  _createClass(ShiftEnterCommand, [{\n    key: \"execute\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function execute() {\n      var _this = this;\n\n      var model = this.editor.model;\n      var doc = model.document;\n      model.change(function (writer) {\n        softBreakAction(model, writer, doc.selection);\n\n        _this.fire('afterExecute', {\n          writer: writer\n        });\n      });\n    }\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      var model = this.editor.model;\n      var doc = model.document;\n      this.isEnabled = isEnabled(model.schema, doc.selection);\n    }\n  }]);\n\n  return ShiftEnterCommand;\n}(Command); // Checks whether the ShiftEnter command should be enabled in the specified selection.\n//\n// @param {module:engine/model/schema~Schema} schema\n// @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n\n\nexport { ShiftEnterCommand as default };\n\nfunction isEnabled(schema, selection) {\n  // At this moment it is okay to support single range selections only.\n  // But in the future we may need to change that.\n  if (selection.rangeCount > 1) {\n    return false;\n  }\n\n  var anchorPos = selection.anchor; // Check whether the break element can be inserted in the current selection anchor.\n\n  if (!anchorPos || !schema.checkChild(anchorPos, 'softBreak')) {\n    return false;\n  }\n\n  var range = selection.getFirstRange();\n  var startElement = range.start.parent;\n  var endElement = range.end.parent; // Do not modify the content if selection is cross-limit elements.\n\n  if ((isInsideLimitElement(startElement, schema) || isInsideLimitElement(endElement, schema)) && startElement !== endElement) {\n    return false;\n  }\n\n  return true;\n} // Creates a break in the way that the <kbd>Shift</kbd>+<kbd>Enter</kbd> keystroke is expected to work.\n//\n// @param {module:engine/model~Model} model\n// @param {module:engine/model/writer~Writer} writer\n// @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n// Selection on which the action should be performed.\n\n\nfunction softBreakAction(model, writer, selection) {\n  var isSelectionEmpty = selection.isCollapsed;\n  var range = selection.getFirstRange();\n  var startElement = range.start.parent;\n  var endElement = range.end.parent;\n  var isContainedWithinOneElement = startElement == endElement;\n\n  if (isSelectionEmpty) {\n    insertBreak(writer, range.end);\n  } else {\n    var leaveUnmerged = !(range.start.isAtStart && range.end.isAtEnd);\n    model.deleteContent(selection, {\n      leaveUnmerged: leaveUnmerged\n    }); // Selection within one element:\n    //\n    // <h>x[xx]x</h>\t\t-> <h>x^x</h>\t\t\t-> <h>x<br>^x</h>\n\n    if (isContainedWithinOneElement) {\n      insertBreak(writer, selection.focus);\n    } // Selection over multiple elements.\n    //\n    // <h>x[x</h><p>y]y<p>\t-> <h>x^</h><p>y</p>\t-> <h>x</h><p>^y</p>\n    //\n    // We chose not to insert a line break in this case because:\n    //\n    // * it's not a very common scenario,\n    // * it actually surprised me when I saw the \"expected behavior\" in real life.\n    //\n    // It's ok if the user will need to be more specific where they want the <br> to be inserted.\n    else {\n        // Move the selection to the 2nd element (last step of the example above).\n        if (leaveUnmerged) {\n          writer.setSelection(endElement, 0);\n        }\n      }\n  }\n}\n\nfunction insertBreak(writer, position) {\n  var breakLineElement = writer.createElement('softBreak');\n  writer.insert(breakLineElement, position);\n  writer.setSelection(breakLineElement, 'after');\n} // Checks whether the specified `element` is a child of the limit element.\n//\n// Checking whether the `<p>` element is inside a limit element:\n//   - <$root><p>Text.</p></$root> => false\n//   - <$root><limitElement><p>Text</p></limitElement></$root> => true\n//\n// @param {module:engine/model/element~Element} element\n// @param {module:engine/schema~Schema} schema\n// @returns {Boolean}\n\n\nfunction isInsideLimitElement(element, schema) {\n  // `$root` is a limit element but in this case is an invalid element.\n  if (element.is('rootElement')) {\n    return false;\n  }\n\n  return schema.isLimit(element) || isInsideLimitElement(element.parent, schema);\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module enter/shiftenter\n */\nimport ShiftEnterCommand from './shiftentercommand';\nimport EnterObserver from './enterobserver';\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport { upcastElementToElement } from '@ckeditor/ckeditor5-engine/src/conversion/upcast-converters';\nimport { downcastElementToElement } from '@ckeditor/ckeditor5-engine/src/conversion/downcast-converters';\n/**\n * This plugin handles the <kbd>Shift</kbd>+<kbd>Enter</kbd> keystroke (soft line break) in the editor.\n *\n * See also the {@link module:enter/enter~Enter} plugin.\n *\n * For more information about this feature see the {@glink api/enter package page}.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar ShiftEnter =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(ShiftEnter, _Plugin);\n\n  function ShiftEnter() {\n    _classCallCheck(this, ShiftEnter);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ShiftEnter).apply(this, arguments));\n  }\n\n  _createClass(ShiftEnter, [{\n    key: \"init\",\n    value: function init() {\n      var editor = this.editor;\n      var schema = editor.model.schema;\n      var conversion = editor.conversion;\n      var view = editor.editing.view;\n      var viewDocument = view.document; // Configure the schema.\n\n      schema.register('softBreak', {\n        allowWhere: '$text'\n      }); // Configure converters.\n\n      conversion.for('upcast').add(upcastElementToElement({\n        model: 'softBreak',\n        view: 'br'\n      }));\n      conversion.for('downcast').add(downcastElementToElement({\n        model: 'softBreak',\n        view: function view(modelElement, viewWriter) {\n          return viewWriter.createEmptyElement('br');\n        }\n      }));\n      view.addObserver(EnterObserver);\n      editor.commands.add('shiftEnter', new ShiftEnterCommand(editor));\n      this.listenTo(viewDocument, 'enter', function (evt, data) {\n        data.preventDefault(); // The hard enter key is handled by the Enter plugin.\n\n        if (!data.isSoft) {\n          return;\n        }\n\n        editor.execute('shiftEnter');\n        view.scrollToTheSelection();\n      }, {\n        priority: 'low'\n      });\n    }\n  }], [{\n    key: \"pluginName\",\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return 'ShiftEnter';\n    }\n  }]);\n\n  return ShiftEnter;\n}(Plugin);\n\nexport { ShiftEnter as default };","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module typing/utils/changebuffer\n */\n\n/**\n * Change buffer allows to group atomic changes (like characters that have been typed) into\n * {@link module:engine/model/batch~Batch batches}.\n *\n * Batches represent single undo steps, hence changes added to one single batch are undone together.\n *\n * The buffer has a configurable limit of atomic changes that it can accommodate. After the limit was\n * exceeded (see {@link ~ChangeBuffer#input}), a new batch is created in {@link ~ChangeBuffer#batch}.\n *\n * To use the change buffer you need to let it know about the number of changes that were added to the batch:\n *\n *\t\tconst buffer = new ChangeBuffer( model, LIMIT );\n *\n *\t\t// Later on in your feature:\n *\t\tbuffer.batch.insert( pos, insertedCharacters );\n *\t\tbuffer.input( insertedCharacters.length );\n *\n */\nvar ChangeBuffer =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates a new instance of the change buffer.\n   *\n   * @param {module:engine/model/model~Model} model\n   * @param {Number} [limit=20] The maximum number of atomic changes which can be contained in one batch.\n   */\n  function ChangeBuffer(model) {\n    var _this = this;\n\n    var limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 20;\n\n    _classCallCheck(this, ChangeBuffer);\n\n    /**\n     * The model instance.\n     *\n     * @readonly\n     * @member {module:engine/model/model~Model} #model\n     */\n    this.model = model;\n    /**\n     * The number of atomic changes in the buffer. Once it exceeds the {@link #limit},\n     * the {@link #batch batch} is set to a new one.\n     *\n     * @readonly\n     * @member {Number} #size\n     */\n\n    this.size = 0;\n    /**\n     * The maximum number of atomic changes which can be contained in one batch.\n     *\n     * @readonly\n     * @member {Number} #limit\n     */\n\n    this.limit = limit;\n    /**\n     * Whether the buffer is locked. A locked buffer cannot be reset unless it gets unlocked.\n     *\n     * @readonly\n     * @member {Boolean} #isLocked\n     */\n\n    this.isLocked = false; // The function to be called in order to notify the buffer about batches which appeared in the document.\n    // The callback will check whether it is a new batch and in that case the buffer will be flushed.\n    //\n    // The reason why the buffer needs to be flushed whenever a new batch appears is that the changes added afterwards\n    // should be added to a new batch. For instance, when the  user types, then inserts an image, and then types again,\n    // the characters typed after inserting the image should be added to a different batch than the characters typed before.\n\n    this._changeCallback = function (evt, batch) {\n      if (batch.type != 'transparent' && batch !== _this._batch) {\n        _this._reset(true);\n      }\n    };\n\n    this._selectionChangeCallback = function () {\n      _this._reset();\n    };\n\n    this.model.document.on('change', this._changeCallback);\n    this.model.document.selection.on('change:range', this._selectionChangeCallback);\n    this.model.document.selection.on('change:attribute', this._selectionChangeCallback);\n    /**\n     * The current batch instance.\n     *\n     * @private\n     * @member #_batch\n     */\n\n    /**\n     * The callback to document the change event which later needs to be removed.\n     *\n     * @private\n     * @member #_changeCallback\n     */\n\n    /**\n     * The callback to document selection `change:attribute` and `change:range` events which resets the buffer.\n     *\n     * @private\n     * @member #_selectionChangeCallback\n     */\n  }\n  /**\n   * The current batch to which a feature should add its operations. Once the {@link #size}\n   * is reached or exceeds the {@link #limit}, the batch is set to a new instance and the size is reset.\n   *\n   * @type {module:engine/model/batch~Batch}\n   */\n\n\n  _createClass(ChangeBuffer, [{\n    key: \"input\",\n\n    /**\n     * The input number of changes into the buffer. Once the {@link #size} is\n     * reached or exceeds the {@link #limit}, the batch is set to a new instance and the size is reset.\n     *\n     * @param {Number} changeCount The number of atomic changes to input.\n     */\n    value: function input(changeCount) {\n      this.size += changeCount;\n\n      if (this.size >= this.limit) {\n        this._reset(true);\n      }\n    }\n    /**\n     * Locks the buffer.\n     */\n\n  }, {\n    key: \"lock\",\n    value: function lock() {\n      this.isLocked = true;\n    }\n    /**\n     * Unlocks the buffer.\n     */\n\n  }, {\n    key: \"unlock\",\n    value: function unlock() {\n      this.isLocked = false;\n    }\n    /**\n     * Destroys the buffer.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.model.document.off('change', this._changeCallback);\n      this.model.document.selection.off('change:range', this._selectionChangeCallback);\n      this.model.document.selection.off('change:attribute', this._selectionChangeCallback);\n    }\n    /**\n     * Resets the change buffer.\n     *\n     * @private\n     * @param {Boolean} [ignoreLock] Whether internal lock {@link #isLocked} should be ignored.\n     */\n\n  }, {\n    key: \"_reset\",\n    value: function _reset(ignoreLock) {\n      if (!this.isLocked || ignoreLock) {\n        this._batch = null;\n        this.size = 0;\n      }\n    }\n  }, {\n    key: \"batch\",\n    get: function get() {\n      if (!this._batch) {\n        this._batch = this.model.createBatch();\n      }\n\n      return this._batch;\n    }\n  }]);\n\n  return ChangeBuffer;\n}();\n\nexport { ChangeBuffer as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module typing/inputcommand\n */\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport ChangeBuffer from './utils/changebuffer';\n/**\n * The input command. Used by the {@link module:typing/input~Input input feature} to handle typing.\n *\n * @extends module:core/command~Command\n */\n\nvar InputCommand =\n/*#__PURE__*/\nfunction (_Command) {\n  _inherits(InputCommand, _Command);\n\n  /**\n   * Creates an instance of the command.\n   *\n   * @param {module:core/editor/editor~Editor} editor\n   * @param {Number} undoStepSize The maximum number of atomic changes\n   * which can be contained in one batch in the command buffer.\n   */\n  function InputCommand(editor, undoStepSize) {\n    var _this;\n\n    _classCallCheck(this, InputCommand);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InputCommand).call(this, editor));\n    /**\n     * Typing's change buffer used to group subsequent changes into batches.\n     *\n     * @readonly\n     * @private\n     * @member {module:typing/utils/changebuffer~ChangeBuffer} #_buffer\n     */\n\n    _this._buffer = new ChangeBuffer(editor.model, undoStepSize);\n    return _this;\n  }\n  /**\n   * The current change buffer.\n   *\n   * @type {module:typing/utils/changebuffer~ChangeBuffer}\n   */\n\n\n  _createClass(InputCommand, [{\n    key: \"destroy\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function destroy() {\n      _get(_getPrototypeOf(InputCommand.prototype), \"destroy\", this).call(this);\n\n      this._buffer.destroy();\n    }\n    /**\n     * Executes the input command. It replaces the content within the given range with the given text.\n     * Replacing is a two step process, first the content within the range is removed and then the new text is inserted\n     * at the beginning of the range (which after the removal is a collapsed range).\n     *\n     * @fires execute\n     * @param {Object} [options] The command options.\n     * @param {String} [options.text=''] The text to be inserted.\n     * @param {module:engine/model/range~Range} [options.range] The range in which the text is inserted. Defaults\n     * to the first range in the current selection.\n     * @param {module:engine/model/range~Range} [options.resultRange] The range where the selection\n     * should be placed after the insertion. If not specified, the selection will be placed right after\n     * the inserted text.\n     */\n\n  }, {\n    key: \"execute\",\n    value: function execute() {\n      var _this2 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var model = this.editor.model;\n      var doc = model.document;\n      var text = options.text || '';\n      var textInsertions = text.length;\n      var range = options.range || doc.selection.getFirstRange();\n      var resultRange = options.resultRange;\n      model.enqueueChange(this._buffer.batch, function (writer) {\n        var isCollapsedRange = range.isCollapsed;\n\n        _this2._buffer.lock();\n\n        if (!isCollapsedRange) {\n          writer.remove(range);\n        }\n\n        if (text) {\n          writer.insertText(text, doc.selection.getAttributes(), range.start);\n        }\n\n        if (resultRange) {\n          writer.setSelection(resultRange);\n        } else if (isCollapsedRange) {\n          // If range was collapsed just shift the selection by the number of inserted characters.\n          writer.setSelection(range.start.getShiftedBy(textInsertions));\n        }\n\n        _this2._buffer.unlock();\n\n        _this2._buffer.input(textInsertions);\n      });\n    }\n  }, {\n    key: \"buffer\",\n    get: function get() {\n      return this._buffer;\n    }\n  }]);\n\n  return InputCommand;\n}(Command);\n\nexport { InputCommand as default };","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module typing/utils/injectunsafekeystrokeshandling\n */\nimport { getCode } from '@ckeditor/ckeditor5-utils/src/keyboard';\n/**\n * Handles keystrokes which are unsafe for typing. This handler's logic is explained\n * in https://github.com/ckeditor/ckeditor5-typing/issues/83#issuecomment-398690251.\n *\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n */\n\nexport default function injectUnsafeKeystrokesHandling(editor) {\n  var latestCompositionSelection = null;\n  var model = editor.model;\n  var view = editor.editing.view;\n  var inputCommand = editor.commands.get('input');\n  view.document.on('keydown', function (evt, evtData) {\n    return handleKeydown(evtData);\n  }, {\n    priority: 'lowest'\n  });\n  view.document.on('compositionstart', handleCompositionStart, {\n    priority: 'lowest'\n  });\n  view.document.on('compositionend', function () {\n    latestCompositionSelection = model.createSelection(model.document.selection);\n  }, {\n    priority: 'lowest'\n  }); // Handles the keydown event. We need to guess whether such keystroke is going to result\n  // in typing. If so, then before character insertion happens, any selected content needs\n  // to be deleted. Otherwise the default browser deletion mechanism would be\n  // triggered, resulting in:\n  //\n  // * Hundreds of mutations which could not be handled.\n  // * But most importantly, loss of control over how the content is being deleted.\n  //\n  // The method is used in a low-priority listener, hence allowing other listeners (e.g. delete or enter features)\n  // to handle the event.\n  //\n  // @param {module:engine/view/observer/keyobserver~KeyEventData} evtData\n\n  function handleKeydown(evtData) {\n    var doc = model.document;\n    var isComposing = view.document.isComposing;\n    var isSelectionUnchanged = latestCompositionSelection && latestCompositionSelection.isEqual(doc.selection); // Reset stored composition selection.\n\n    latestCompositionSelection = null; // By relying on the state of the input command we allow disabling the entire input easily\n    // by just disabling the input command. We could’ve used here the delete command but that\n    // would mean requiring the delete feature which would block loading one without the other.\n    // We could also check the editor.isReadOnly property, but that wouldn't allow to block\n    // the input without blocking other features.\n\n    if (!inputCommand.isEnabled) {\n      return;\n    }\n\n    if (isSafeKeystroke(evtData) || doc.selection.isCollapsed) {\n      return;\n    } // If during composition, deletion should be prevented as it may remove composed sequence (#83).\n\n\n    if (isComposing && evtData.keyCode === 229) {\n      return;\n    } // If there is a `keydown` event fired with '229' keycode it might be related\n    // to recent composition. Check if selection is the same as upon ending recent composition,\n    // if so do not remove selected content as it will remove composed sequence (#83).\n\n\n    if (!isComposing && evtData.keyCode === 229 && isSelectionUnchanged) {\n      return;\n    }\n\n    deleteSelectionContent();\n  } // Handles the `compositionstart` event. It is used only in special cases to remove the contents\n  // of a non-collapsed selection so composition itself does not result in complex mutations.\n  //\n  // The special case mentioned above is a situation in which the `keydown` event is fired after\n  // `compositionstart` event. In such cases {@link #handleKeydown} cannot clear current selection\n  // contents (because it is too late and will break the composition) so the composition handler takes care of it.\n\n\n  function handleCompositionStart() {\n    var doc = model.document;\n    var isFlatSelection = doc.selection.rangeCount === 1 ? doc.selection.getFirstRange().isFlat : true; // If on `compositionstart` there is a non-collapsed selection which start and end have different parents\n    // it means the `handleKeydown()` method did not remove its contents. It happens usually because\n    // of different order of events (`compositionstart` before `keydown` - in Safari). In such cases\n    // we need to remove selection contents on composition start (#83).\n\n    if (doc.selection.isCollapsed || isFlatSelection) {\n      return;\n    }\n\n    deleteSelectionContent();\n  }\n\n  function deleteSelectionContent() {\n    var buffer = inputCommand.buffer;\n    buffer.lock();\n    model.enqueueChange(buffer.batch, function () {\n      model.deleteContent(model.document.selection);\n    });\n    buffer.unlock();\n  }\n}\nvar safeKeycodes = [getCode('arrowUp'), getCode('arrowRight'), getCode('arrowDown'), getCode('arrowLeft'), 9, // Tab\n16, // Shift\n17, // Ctrl\n18, // Alt\n19, // Pause\n20, // CapsLock\n27, // Escape\n33, // PageUp\n34, // PageDown\n35, // Home\n36, // End,\n45, // Insert,\n91, // Windows,\n93, // Menu key,\n144, // NumLock\n145, // ScrollLock,\n173, // Mute/Unmute\n174, // Volume up\n175, // Volume down,\n176, // Next song,\n177, // Previous song,\n178, // Stop,\n179, // Play/Pause,\n255 // Display brightness (increase and decrease)\n]; // Function keys.\n\nfor (var code = 112; code <= 135; code++) {\n  safeKeycodes.push(code);\n} // Returns `true` if a keystroke should not cause any content change caused by \"typing\".\n//\n// Note: This implementation is very simple and will need to be refined with time.\n//\n// @private\n// @param {engine.view.observer.keyObserver.KeyEventData} keyData\n// @returns {Boolean}\n\n\nfunction isSafeKeystroke(keyData) {\n  // Keystrokes which contain Ctrl don't represent typing.\n  if (keyData.ctrlKey) {\n    return true;\n  }\n\n  return safeKeycodes.includes(keyData.keyCode);\n}","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module typing/utils/utils\n */\nimport diff from '@ckeditor/ckeditor5-utils/src/diff';\nimport diffToChanges from '@ckeditor/ckeditor5-utils/src/difftochanges';\n/**\n * Returns true if container children have mutated or more than a single text node was changed.\n *\n * @private\n * @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|\n * module:engine/view/observer/mutationobserver~MutatedChildren>} mutations\n * @returns {Boolean}\n */\n\nexport function containerChildrenMutated(mutations) {\n  if (mutations.length == 0) {\n    return false;\n  } // Check if there is any mutation of `children` type or any mutation that changes more than one text node.\n\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = mutations[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var mutation = _step.value;\n\n      if (mutation.type === 'children' && !getSingleTextNodeChange(mutation)) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return false;\n}\n/**\n * Returns change made to a single text node.\n *\n * @private\n * @param {module:engine/view/observer/mutationobserver~MutatedText|\n * module:engine/view/observer/mutationobserver~MutatedChildren} mutation\n * @returns {Object|undefined} Change object (see {@link module:utils/difftochanges~diffToChanges} output)\n * or undefined if more than a single text node was changed.\n */\n\nexport function getSingleTextNodeChange(mutation) {\n  // One new node.\n  if (mutation.newChildren.length - mutation.oldChildren.length != 1) {\n    return;\n  } // Which is text.\n\n\n  var diffResult = diff(mutation.oldChildren, mutation.newChildren, compareChildNodes);\n  var changes = diffToChanges(diffResult, mutation.newChildren); // In case of [ delete, insert, insert ] the previous check will not exit.\n\n  if (changes.length > 1) {\n    return;\n  }\n\n  var change = changes[0]; // Which is text.\n\n  if (!(!!change.values[0] && change.values[0].is('text'))) {\n    return;\n  }\n\n  return change;\n}\n/**\n * Checks whether two view nodes are identical, which means they are the same object\n * or contain exactly same data (in case of text nodes).\n *\n * @private\n * @param {module:engine/view/node~Node} oldChild\n * @param {module:engine/view/node~Node} newChild\n * @returns {Boolean}\n */\n\nexport function compareChildNodes(oldChild, newChild) {\n  if (!!oldChild && oldChild.is('text') && !!newChild && newChild.is('text')) {\n    return oldChild.data === newChild.data;\n  } else {\n    return oldChild === newChild;\n  }\n}","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/difftochanges\n */\n\n/**\n * Creates a set of changes which need to be applied to the input in order to transform\n * it into the output. This function can be used with strings or arrays.\n *\n *\t\tconst input = Array.from( 'abc' );\n *\t\tconst output = Array.from( 'xaby' );\n *\t\tconst changes = diffToChanges( diff( input, output ), output );\n *\n *\t\tchanges.forEach( change => {\n *\t\t\tif ( change.type == 'insert' ) {\n *\t\t\t\tinput.splice( change.index, 0, ...change.values );\n *\t\t\t} else if ( change.type == 'delete' ) {\n *\t\t\t\tinput.splice( change.index, change.howMany );\n *\t\t\t}\n *\t\t} );\n *\n *\t\tinput.join( '' ) == output.join( '' ); // -> true\n *\n * @param {Array.<'equal'|'insert'|'delete'>} diff Result of {@link module:utils/diff~diff}.\n * @param {String|Array} output The string or array which was passed as diff's output.\n * @returns {Array.<Object>} Set of changes (insert or delete) which need to be applied to the input\n * in order to transform it into the output.\n */\nexport default function diffToChanges(diff, output) {\n  var changes = [];\n  var index = 0;\n  var lastOperation;\n  diff.forEach(function (change) {\n    if (change == 'equal') {\n      pushLast();\n      index++;\n    } else if (change == 'insert') {\n      if (isContinuationOf('insert')) {\n        lastOperation.values.push(output[index]);\n      } else {\n        pushLast();\n        lastOperation = {\n          type: 'insert',\n          index: index,\n          values: [output[index]]\n        };\n      }\n\n      index++;\n    } else\n      /* if ( change == 'delete' ) */\n      {\n        if (isContinuationOf('delete')) {\n          lastOperation.howMany++;\n        } else {\n          pushLast();\n          lastOperation = {\n            type: 'delete',\n            index: index,\n            howMany: 1\n          };\n        }\n      }\n  });\n  pushLast();\n  return changes;\n\n  function pushLast() {\n    if (lastOperation) {\n      changes.push(lastOperation);\n      lastOperation = null;\n    }\n  }\n\n  function isContinuationOf(expected) {\n    return lastOperation && lastOperation.type == expected;\n  }\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module typing/utils/injecttypingmutationshandling\n */\nimport diff from '@ckeditor/ckeditor5-utils/src/diff';\nimport DomConverter from '@ckeditor/ckeditor5-engine/src/view/domconverter';\nimport { getSingleTextNodeChange, containerChildrenMutated } from './utils';\n/**\n * Handles mutations caused by normal typing.\n *\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n */\n\nexport default function injectTypingMutationsHandling(editor) {\n  editor.editing.view.document.on('mutations', function (evt, mutations, viewSelection) {\n    new MutationHandler(editor).handle(mutations, viewSelection);\n  });\n}\n/**\n * Helper class for translating DOM mutations into model changes.\n *\n * @private\n */\n\nvar MutationHandler =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of the mutation handler.\n   *\n   * @param {module:core/editor/editor~Editor} editor\n   */\n  function MutationHandler(editor) {\n    _classCallCheck(this, MutationHandler);\n\n    /**\n     * Editor instance for which mutations are handled.\n     *\n     * @readonly\n     * @member {module:core/editor/editor~Editor} #editor\n     */\n    this.editor = editor;\n    /**\n     * The editing controller.\n     *\n     * @readonly\n     * @member {module:engine/controller/editingcontroller~EditingController} #editing\n     */\n\n    this.editing = this.editor.editing;\n  }\n  /**\n   * Handles given mutations.\n   *\n   * @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|\n   * module:engine/view/observer/mutationobserver~MutatedChildren>} mutations\n   * @param {module:engine/view/selection~Selection|null} viewSelection\n   */\n\n\n  _createClass(MutationHandler, [{\n    key: \"handle\",\n    value: function handle(mutations, viewSelection) {\n      if (containerChildrenMutated(mutations)) {\n        this._handleContainerChildrenMutations(mutations, viewSelection);\n      } else {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = mutations[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var mutation = _step.value;\n\n            // Fortunately it will never be both.\n            this._handleTextMutation(mutation, viewSelection);\n\n            this._handleTextNodeInsertion(mutation);\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n    }\n    /**\n     * Handles situations when container's children mutated during input. This can happen when\n     * the browser is trying to \"fix\" DOM in certain situations. For example, when the user starts to type\n     * in `<p><a href=\"\"><i>Link{}</i></a></p>`, the browser might change the order of elements\n     * to `<p><i><a href=\"\">Link</a>x{}</i></p>`. A similar situation happens when the spell checker\n     * replaces a word wrapped with `<strong>` with a word wrapped with a `<b>` element.\n     *\n     * To handle such situations, the common DOM ancestor of all mutations is converted to the model representation\n     * and then compared with the current model to calculate the proper text change.\n     *\n     * Note: Single text node insertion is handled in {@link #_handleTextNodeInsertion} and text node mutation is handled\n     * in {@link #_handleTextMutation}).\n     *\n     * @private\n     * @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|\n     * module:engine/view/observer/mutationobserver~MutatedChildren>} mutations\n     * @param {module:engine/view/selection~Selection|null} viewSelection\n     */\n\n  }, {\n    key: \"_handleContainerChildrenMutations\",\n    value: function _handleContainerChildrenMutations(mutations, viewSelection) {\n      // Get common ancestor of all mutations.\n      var mutationsCommonAncestor = getMutationsContainer(mutations); // Quit if there is no common ancestor.\n\n      if (!mutationsCommonAncestor) {\n        return;\n      }\n\n      var domConverter = this.editor.editing.view.domConverter; // Get common ancestor in DOM.\n\n      var domMutationCommonAncestor = domConverter.mapViewToDom(mutationsCommonAncestor); // Create fresh DomConverter so it will not use existing mapping and convert current DOM to model.\n      // This wouldn't be needed if DomConverter would allow to create fresh view without checking any mappings.\n\n      var freshDomConverter = new DomConverter();\n      var modelFromCurrentDom = this.editor.data.toModel(freshDomConverter.domToView(domMutationCommonAncestor)).getChild(0); // Current model.\n\n      var currentModel = this.editor.editing.mapper.toModelElement(mutationsCommonAncestor); // If common ancestor is not mapped, do not do anything. It probably is a parent of another view element.\n      // That means that we would need to diff model elements (see `if` below). Better return early instead of\n      // trying to get a reasonable model ancestor. It will fell into the `if` below anyway.\n      // This situation happens for example for lists. If `<ul>` is a common ancestor, `currentModel` is `undefined`\n      // because `<ul>` is not mapped (`<li>`s are).\n      // See https://github.com/ckeditor/ckeditor5/issues/718.\n\n      if (!currentModel) {\n        return;\n      } // Get children from both ancestors.\n\n\n      var modelFromDomChildren = Array.from(modelFromCurrentDom.getChildren());\n      var currentModelChildren = Array.from(currentModel.getChildren()); // Remove the last `<softBreak>` from the end of `modelFromDomChildren` if there is no `<softBreak>` in current model.\n      // If the described scenario happened, it means that this is a bogus `<br />` added by a browser.\n\n      var lastDomChild = modelFromDomChildren[modelFromDomChildren.length - 1];\n      var lastCurrentChild = currentModelChildren[currentModelChildren.length - 1];\n\n      if (lastDomChild && lastDomChild.is('softBreak') && lastCurrentChild && !lastCurrentChild.is('softBreak')) {\n        modelFromDomChildren.pop();\n      } // Skip situations when common ancestor has any container elements.\n\n\n      if (!isSafeForTextMutation(modelFromDomChildren) || !isSafeForTextMutation(currentModelChildren)) {\n        return;\n      } // Replace &nbsp; inserted by the browser with normal space. See comment in `_handleTextMutation`.\n      // Replace non-texts with any character. This is potentially dangerous but passes in manual tests. The thing is\n      // that we need to take care of proper indexes so we cannot simply remove non-text elements from the content.\n      // By inserting a character we keep all the real texts on their indexes.\n\n\n      var newText = modelFromDomChildren.map(function (item) {\n        return item.is('text') ? item.data : '@';\n      }).join('').replace(/\\u00A0/g, ' ');\n      var oldText = currentModelChildren.map(function (item) {\n        return item.is('text') ? item.data : '@';\n      }).join('').replace(/\\u00A0/g, ' '); // Do nothing if mutations created same text.\n\n      if (oldText === newText) {\n        return;\n      }\n\n      var diffResult = diff(oldText, newText);\n\n      var _calculateChanges = calculateChanges(diffResult),\n          firstChangeAt = _calculateChanges.firstChangeAt,\n          insertions = _calculateChanges.insertions,\n          deletions = _calculateChanges.deletions; // Try setting new model selection according to passed view selection.\n\n\n      var modelSelectionRange = null;\n\n      if (viewSelection) {\n        modelSelectionRange = this.editing.mapper.toModelRange(viewSelection.getFirstRange());\n      }\n\n      var insertText = newText.substr(firstChangeAt, insertions);\n      var removeRange = this.editor.model.createRange(this.editor.model.createPositionAt(currentModel, firstChangeAt), this.editor.model.createPositionAt(currentModel, firstChangeAt + deletions));\n      this.editor.execute('input', {\n        text: insertText,\n        range: removeRange,\n        resultRange: modelSelectionRange\n      });\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_handleTextMutation\",\n    value: function _handleTextMutation(mutation, viewSelection) {\n      if (mutation.type != 'text') {\n        return;\n      } // Replace &nbsp; inserted by the browser with normal space.\n      // We want only normal spaces in the model and in the view. Renderer and DOM Converter will be then responsible\n      // for rendering consecutive spaces using &nbsp;, but the model and the view has to be clear.\n      // Other feature may introduce inserting non-breakable space on specific key stroke (for example shift + space).\n      // However then it will be handled outside of mutations, like enter key is.\n      // The replacing is here because it has to be done before `diff` and `diffToChanges` functions, as they\n      // take `newText` and compare it to (cleaned up) view.\n      // It could also be done in mutation observer too, however if any outside plugin would like to\n      // introduce additional events for mutations, they would get already cleaned up version (this may be good or not).\n\n\n      var newText = mutation.newText.replace(/\\u00A0/g, ' '); // To have correct `diffResult`, we also compare view node text data with &nbsp; replaced by space.\n\n      var oldText = mutation.oldText.replace(/\\u00A0/g, ' ');\n      var diffResult = diff(oldText, newText);\n\n      var _calculateChanges2 = calculateChanges(diffResult),\n          firstChangeAt = _calculateChanges2.firstChangeAt,\n          insertions = _calculateChanges2.insertions,\n          deletions = _calculateChanges2.deletions; // Try setting new model selection according to passed view selection.\n\n\n      var modelSelectionRange = null;\n\n      if (viewSelection) {\n        modelSelectionRange = this.editing.mapper.toModelRange(viewSelection.getFirstRange());\n      } // Get the position in view and model where the changes will happen.\n\n\n      var viewPos = this.editing.view.createPositionAt(mutation.node, firstChangeAt);\n      var modelPos = this.editing.mapper.toModelPosition(viewPos);\n      var removeRange = this.editor.model.createRange(modelPos, modelPos.getShiftedBy(deletions));\n      var insertText = newText.substr(firstChangeAt, insertions);\n      this.editor.execute('input', {\n        text: insertText,\n        range: removeRange,\n        resultRange: modelSelectionRange\n      });\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_handleTextNodeInsertion\",\n    value: function _handleTextNodeInsertion(mutation) {\n      if (mutation.type != 'children') {\n        return;\n      }\n\n      var change = getSingleTextNodeChange(mutation);\n      var viewPos = this.editing.view.createPositionAt(mutation.node, change.index);\n      var modelPos = this.editing.mapper.toModelPosition(viewPos);\n      var insertedText = change.values[0].data;\n      this.editor.execute('input', {\n        // Replace &nbsp; inserted by the browser with normal space.\n        // See comment in `_handleTextMutation`.\n        // In this case we don't need to do this before `diff` because we diff whole nodes.\n        // Just change &nbsp; in case there are some.\n        text: insertedText.replace(/\\u00A0/g, ' '),\n        range: this.editor.model.createRange(modelPos)\n      });\n    }\n  }]);\n\n  return MutationHandler;\n}(); // Returns first common ancestor of all mutations that is either {@link module:engine/view/containerelement~ContainerElement}\n// or {@link module:engine/view/rootelement~RootElement}.\n//\n// @private\n// @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|\n// module:engine/view/observer/mutationobserver~MutatedChildren>} mutations\n// @returns {module:engine/view/containerelement~ContainerElement|engine/view/rootelement~RootElement|undefined}\n\n\nfunction getMutationsContainer(mutations) {\n  var lca = mutations.map(function (mutation) {\n    return mutation.node;\n  }).reduce(function (commonAncestor, node) {\n    return commonAncestor.getCommonAncestor(node, {\n      includeSelf: true\n    });\n  });\n\n  if (!lca) {\n    return;\n  } // We need to look for container and root elements only, so check all LCA's\n  // ancestors (starting from itself).\n\n\n  return lca.getAncestors({\n    includeSelf: true,\n    parentFirst: true\n  }).find(function (element) {\n    return element.is('containerElement') || element.is('rootElement');\n  });\n} // Returns true if provided array contains content that won't be problematic during diffing and text mutation handling.\n//\n// @param {Array.<module:engine/model/node~Node>} children\n// @returns {Boolean}\n\n\nfunction isSafeForTextMutation(children) {\n  return children.every(function (child) {\n    return child.is('text') || child.is('softBreak');\n  });\n} // Calculates first change index and number of characters that should be inserted and deleted starting from that index.\n//\n// @private\n// @param diffResult\n// @returns {{insertions: number, deletions: number, firstChangeAt: *}}\n\n\nfunction calculateChanges(diffResult) {\n  // Index where the first change happens. Used to set the position from which nodes will be removed and where will be inserted.\n  var firstChangeAt = null; // Index where the last change happens. Used to properly count how many characters have to be removed and inserted.\n\n  var lastChangeAt = null; // Get `firstChangeAt` and `lastChangeAt`.\n\n  for (var i = 0; i < diffResult.length; i++) {\n    var change = diffResult[i];\n\n    if (change != 'equal') {\n      firstChangeAt = firstChangeAt === null ? i : firstChangeAt;\n      lastChangeAt = i;\n    }\n  } // How many characters, starting from `firstChangeAt`, should be removed.\n\n\n  var deletions = 0; // How many characters, starting from `firstChangeAt`, should be inserted.\n\n  var insertions = 0;\n\n  for (var _i = firstChangeAt; _i <= lastChangeAt; _i++) {\n    // If there is no change (equal) or delete, the character is existing in `oldText`. We count it for removing.\n    if (diffResult[_i] != 'insert') {\n      deletions++;\n    } // If there is no change (equal) or insert, the character is existing in `newText`. We count it for inserting.\n\n\n    if (diffResult[_i] != 'delete') {\n      insertions++;\n    }\n  }\n\n  return {\n    insertions: insertions,\n    deletions: deletions,\n    firstChangeAt: firstChangeAt\n  };\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module typing/input\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport InputCommand from './inputcommand';\nimport injectUnsafeKeystrokesHandling from './utils/injectunsafekeystrokeshandling';\nimport injectTypingMutationsHandling from './utils/injecttypingmutationshandling';\n/**\n * Handles text input coming from the keyboard or other input methods.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar Input =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(Input, _Plugin);\n\n  function Input() {\n    _classCallCheck(this, Input);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Input).apply(this, arguments));\n  }\n\n  _createClass(Input, [{\n    key: \"init\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function init() {\n      var editor = this.editor; // TODO The above default configuration value should be defined using editor.config.define() once it's fixed.\n\n      var inputCommand = new InputCommand(editor, editor.config.get('typing.undoStep') || 20);\n      editor.commands.add('input', inputCommand);\n      injectUnsafeKeystrokesHandling(editor);\n      injectTypingMutationsHandling(editor);\n    }\n  }], [{\n    key: \"pluginName\",\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return 'Input';\n    }\n  }]);\n\n  return Input;\n}(Plugin);\n\nexport { Input as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module typing/deletecommand\n */\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport count from '@ckeditor/ckeditor5-utils/src/count';\nimport ChangeBuffer from './utils/changebuffer';\n/**\n * The delete command. Used by the {@link module:typing/delete~Delete delete feature} to handle the <kbd>Delete</kbd> and\n * <kbd>Backspace</kbd> keys.\n *\n * @extends module:core/command~Command\n */\n\nvar DeleteCommand =\n/*#__PURE__*/\nfunction (_Command) {\n  _inherits(DeleteCommand, _Command);\n\n  /**\n   * Creates an instance of the command.\n   *\n   * @param {module:core/editor/editor~Editor} editor\n   * @param {'forward'|'backward'} direction The directionality of the delete describing in what direction it\n   * should consume the content when the selection is collapsed.\n   */\n  function DeleteCommand(editor, direction) {\n    var _this;\n\n    _classCallCheck(this, DeleteCommand);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DeleteCommand).call(this, editor));\n    /**\n     * The directionality of the delete describing in what direction it should\n     * consume the content when the selection is collapsed.\n     *\n     * @readonly\n     * @member {'forward'|'backward'} #direction\n     */\n\n    _this.direction = direction;\n    /**\n     * Delete's change buffer used to group subsequent changes into batches.\n     *\n     * @readonly\n     * @private\n     * @member {typing.ChangeBuffer} #buffer\n     */\n\n    _this._buffer = new ChangeBuffer(editor.model, editor.config.get('typing.undoStep'));\n    return _this;\n  }\n  /**\n   * Executes the delete command. Depending on whether the selection is collapsed or not, deletes its content\n   * or a piece of content in the {@link #direction defined direction}.\n   *\n   * @fires execute\n   * @param {Object} [options] The command options.\n   * @param {'character'} [options.unit='character'] See {@link module:engine/model/utils/modifyselection~modifySelection}'s options.\n   * @param {Number} [options.sequence=1] A number describing which subsequent delete event it is without the key being released.\n   * See the {@link module:engine/view/document~Document#event:delete} event data.\n   */\n\n\n  _createClass(DeleteCommand, [{\n    key: \"execute\",\n    value: function execute() {\n      var _this2 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var model = this.editor.model;\n      var doc = model.document;\n      model.enqueueChange(this._buffer.batch, function (writer) {\n        _this2._buffer.lock();\n\n        var selection = writer.createSelection(doc.selection); // Do not replace the whole selected content if selection was collapsed.\n        // This prevents such situation:\n        //\n        // <h1></h1><p>[]</p>\t-->  <h1>[</h1><p>]</p> \t\t-->  <p></p>\n        // starting content\t\t-->   after `modifySelection`\t-->  after `deleteContent`.\n\n        var doNotResetEntireContent = selection.isCollapsed; // Try to extend the selection in the specified direction.\n\n        if (selection.isCollapsed) {\n          model.modifySelection(selection, {\n            direction: _this2.direction,\n            unit: options.unit\n          });\n        } // Check if deleting in an empty editor. See #61.\n\n\n        if (_this2._shouldEntireContentBeReplacedWithParagraph(options.sequence || 1)) {\n          _this2._replaceEntireContentWithParagraph(writer);\n\n          return;\n        } // If selection is still collapsed, then there's nothing to delete.\n\n\n        if (selection.isCollapsed) {\n          return;\n        }\n\n        var changeCount = 0;\n        selection.getFirstRange().getMinimalFlatRanges().forEach(function (range) {\n          changeCount += count(range.getWalker({\n            singleCharacters: true,\n            ignoreElementEnd: true,\n            shallow: true\n          }));\n        });\n        model.deleteContent(selection, {\n          doNotResetEntireContent: doNotResetEntireContent\n        });\n\n        _this2._buffer.input(changeCount);\n\n        writer.setSelection(selection);\n\n        _this2._buffer.unlock();\n      });\n    }\n    /**\n     * If the user keeps <kbd>Backspace</kbd> or <kbd>Delete</kbd> key pressed, the content of the current\n     * editable will be cleared. However, this will not yet lead to resetting the remaining block to a paragraph\n     * (which happens e.g. when the user does <kbd>Ctrl</kbd> + <kbd>A</kbd>, <kbd>Backspace</kbd>).\n     *\n     * But, if the user pressed the key in an empty editable for the first time,\n     * we want to replace the entire content with a paragraph if:\n     *\n     * * the current limit element is empty,\n     * * the paragraph is allowed in the limit element,\n     * * the limit doesn't already have a paragraph inside.\n     *\n     * See https://github.com/ckeditor/ckeditor5-typing/issues/61.\n     *\n     * @private\n     * @param {Number} sequence A number describing which subsequent delete event it is without the key being released.\n     * @returns {Boolean}\n     */\n\n  }, {\n    key: \"_shouldEntireContentBeReplacedWithParagraph\",\n    value: function _shouldEntireContentBeReplacedWithParagraph(sequence) {\n      // Does nothing if user pressed and held the \"Backspace\" or \"Delete\" key.\n      if (sequence > 1) {\n        return false;\n      }\n\n      var model = this.editor.model;\n      var doc = model.document;\n      var selection = doc.selection;\n      var limitElement = model.schema.getLimitElement(selection); // If a collapsed selection contains the whole content it means that the content is empty\n      // (from the user perspective).\n\n      var limitElementIsEmpty = selection.isCollapsed && selection.containsEntireContent(limitElement);\n\n      if (!limitElementIsEmpty) {\n        return false;\n      }\n\n      if (!model.schema.checkChild(limitElement, 'paragraph')) {\n        return false;\n      }\n\n      var limitElementFirstChild = limitElement.getChild(0); // Does nothing if the limit element already contains only a paragraph.\n      // We ignore the case when paragraph might have some inline elements (<p><inlineWidget>[]</inlineWidget></p>)\n      // because we don't support such cases yet and it's unclear whether inlineWidget shouldn't be a limit itself.\n\n      if (limitElementFirstChild && limitElementFirstChild.name === 'paragraph') {\n        return false;\n      }\n\n      return true;\n    }\n    /**\n     * The entire content is replaced with the paragraph. Selection is moved inside the paragraph.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_replaceEntireContentWithParagraph\",\n    value: function _replaceEntireContentWithParagraph(writer) {\n      var model = this.editor.model;\n      var doc = model.document;\n      var selection = doc.selection;\n      var limitElement = model.schema.getLimitElement(selection);\n      var paragraph = writer.createElement('paragraph');\n      writer.remove(writer.createRangeIn(limitElement));\n      writer.insert(paragraph, limitElement);\n      writer.setSelection(paragraph, 0);\n    }\n  }]);\n\n  return DeleteCommand;\n}(Command);\n\nexport { DeleteCommand as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module typing/deleteobserver\n */\nimport Observer from '@ckeditor/ckeditor5-engine/src/view/observer/observer';\nimport DomEventData from '@ckeditor/ckeditor5-engine/src/view/observer/domeventdata';\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\nimport env from '@ckeditor/ckeditor5-utils/src/env';\n/**\n * Delete observer introduces the {@link module:engine/view/document~Document#event:delete} event.\n *\n * @extends module:engine/view/observer/observer~Observer\n */\n\nvar DeleteObserver =\n/*#__PURE__*/\nfunction (_Observer) {\n  _inherits(DeleteObserver, _Observer);\n\n  function DeleteObserver(view) {\n    var _this;\n\n    _classCallCheck(this, DeleteObserver);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DeleteObserver).call(this, view));\n    var document = view.document;\n    var sequence = 0;\n    document.on('keyup', function (evt, data) {\n      if (data.keyCode == keyCodes.delete || data.keyCode == keyCodes.backspace) {\n        sequence = 0;\n      }\n    });\n    document.on('keydown', function (evt, data) {\n      var deleteData = {};\n\n      if (data.keyCode == keyCodes.delete) {\n        deleteData.direction = 'forward';\n        deleteData.unit = 'character';\n      } else if (data.keyCode == keyCodes.backspace) {\n        deleteData.direction = 'backward';\n        deleteData.unit = 'codePoint';\n      } else {\n        return;\n      }\n\n      var hasWordModifier = env.isMac ? data.altKey : data.ctrlKey;\n      deleteData.unit = hasWordModifier ? 'word' : deleteData.unit;\n      deleteData.sequence = ++sequence; // Save the event object to check later if it was stopped or not.\n\n      var event;\n      document.once('delete', function (evt) {\n        return event = evt;\n      }, {\n        priority: 'highest'\n      });\n      document.fire('delete', new DomEventData(document, data.domEvent, deleteData)); // Stop `keydown` event if `delete` event was stopped.\n      // https://github.com/ckeditor/ckeditor5/issues/753\n\n      if (event && event.stop.called) {\n        evt.stop();\n      }\n    });\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(DeleteObserver, [{\n    key: \"observe\",\n    value: function observe() {}\n  }]);\n\n  return DeleteObserver;\n}(Observer);\n/**\n * Event fired when the user tries to delete content (e.g. presses <kbd>Delete</kbd> or <kbd>Backspace</kbd>).\n *\n * Note: This event is fired by the {@link module:typing/deleteobserver~DeleteObserver observer}\n * (usually registered by the {@link module:typing/delete~Delete delete feature}).\n *\n * @event module:engine/view/document~Document#event:delete\n * @param {module:engine/view/observer/domeventdata~DomEventData} data\n * @param {'forward'|'delete'} data.direction The direction in which the deletion should happen.\n * @param {'character'|'word'} data.unit The \"amount\" of content that should be deleted.\n * @param {Number} data.sequence A number describing which subsequent delete event it is without the key being released.\n * If it's 2 or more it means that the key was pressed and hold.\n */\n\n\nexport { DeleteObserver as default };","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module typing/utils/injectandroidbackspacenutationshandling\n */\nimport diff from '@ckeditor/ckeditor5-utils/src/diff';\nimport { containerChildrenMutated } from './utils';\n/**\n * Handles mutations triggered by <kbd>Backspace</kbd> on Android.\n * Due to the fact that on Android `keydown` events don't have the `keyCode` set, we are not able\n * to handle backspacing directly. We need to guess that from mutations which the IME\n * on Android caused.\n *\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n */\n\nexport default function injectAndroidBackspaceMutationsHandling(editor) {\n  var model = editor.model;\n  var view = editor.editing.view;\n  var selectionChangeToleranceMs = 200;\n  var previousSelection = null;\n  var currentSelection = model.createSelection(model.document.selection);\n  var latestSelectionChangeMs = Date.now();\n  model.document.selection.on('change', handleSelectionChange);\n  view.document.on('mutations', handleMutations, {\n    priority: 'highest'\n  }); // Saves current and previous selection when it changes. Saved selections are used\n  // to remove correct piece of content when `Backspace` mutations are detected.\n  //\n  // @param {Object} evt\n\n  function handleSelectionChange(evt) {\n    var newSelection = model.createSelection(evt.source);\n\n    if (!currentSelection.isEqual(newSelection)) {\n      previousSelection = currentSelection;\n      currentSelection = newSelection;\n      latestSelectionChangeMs = Date.now();\n    }\n  } // Handles DOM mutations and checks if they should be processed as block elements removal mutations.\n  //\n  // @param {Object} evt\n  // @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|\n  // module:engine/view/observer/mutationobserver~MutatedChildren>} mutations\n\n\n  function handleMutations(evt, mutations) {\n    if (containerChildrenMutated(mutations) && containsContainersRemoval(mutations)) {\n      handleContainerRemovalMutations(); // Stop mutations event propagation so other mutation handlers are not triggered.\n\n      evt.stop();\n    }\n  } // Handles situations when mutations were generated by container removal.\n  // It happens on Android devices where every typing input has `229` key code\n  // and delete observer will not be triggered. In such cases we need to handle\n  // container removal mutations manually.\n\n\n  function handleContainerRemovalMutations() {\n    if (shouldUsePreviousSelection()) {\n      // If previous selection is used, update model selection in order\n      // to use `delete` command and to make `undo` work correctly.\n      model.enqueueChange(function (writer) {\n        writer.setSelection(previousSelection);\n      });\n    }\n\n    editor.execute('delete');\n  } // Whether previously saved selection should be used instead of the current one to remove content.\n  //\n  // On Android devices when pressing backspace on non-collapsed selection, selection like:\n  //\n  //\t\t`<h1>[Foo</h1><p>Bar]</p>`\n  //\n  // is changed to:\n  //\n  //\t\t`<h1>Foo</h1><p>Bar[]</p>`\n  //\n  // even before `keypress` event, so in such cases we have to rely on previous selection to correctly process selected content.\n  //\n  // Previous selection will be used if:\n  //\n  //\t\t* current selection is collapsed (see example above),\n  //\t\t* previous selection exists, is non-collapsed and has same ending (last position) as the current one,\n  //\t\t* change of the selection happened not earlier than X milliseconds ago (see `selectionChangeToleranceMs`).\n  //\n  // The last check is needed, because user can manually collapse the selection on its current end and then press `Backspace`.\n  // In such situations timing determines if the selection change was caused by the user or browser native behaviour.\n  // However, this happens only if selection was collapsed by the user on the beginning of the paragraph (so mutations\n  // still will show container removal).\n  //\n  // @returns {Boolean}\n\n\n  function shouldUsePreviousSelection() {\n    return Date.now() - latestSelectionChangeMs < selectionChangeToleranceMs && previousSelection && !previousSelection.isCollapsed && currentSelection.isCollapsed && currentSelection.getLastPosition().isEqual(previousSelection.getLastPosition());\n  }\n} // Checks whether mutations array contains mutation generated by container/containers removal.\n// For example mutations generated on Android when pressing `backspace` on the beginning of the line:\n//\n//\t\t<h1>Header1</h1>\n//\t\t<p>{}Paragraph</p>\n//\n// are:\n//\n//\t\t[\n//\t\t\t{ newChildren: [], oldChildren: [ 'Paragraph' ], node: P, type: 'children' },\n//\t\t\t{ newChildren: [ ContainerElement ], oldChildren: [ ContainerElement, ContainerElement ], node: Root, type: 'children' },\n//\t\t\t{ newChildren: [ 'Heading 1Paragraph' ], oldChildren: [ 'Heading 1' ], node: H1, type: 'children' }\n//\t\t]\n//\n// The 1st and 3rd mutations are just changes in a text (1st - text in `p` element was removed, 3rd - text in `h2` was changed)\n// and the 2nd one shows that one `ContainerElement` was removed. We have to recognize if mutations like 2nd one are present.\n// Based on that heuristic mutations are treated as the one removing container element.\n//\n// @private\n// @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|\n// module:engine/view/observer/mutationobserver~MutatedChildren>} mutations\n// @returns {Boolean}\n\nfunction containsContainersRemoval(mutations) {\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = mutations[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var mutation = _step.value;\n\n      if (mutation.type !== 'children') {\n        continue;\n      }\n\n      var childrenBefore = mutation.oldChildren;\n      var childrenAfter = mutation.newChildren; // Check if only containers were present before the mutation.\n\n      if (!hasOnlyContainers(childrenBefore)) {\n        continue;\n      }\n\n      var diffResult = diff(childrenBefore, childrenAfter); // Check if there was only removing in that mutation without any insertions.\n\n      var hasDelete = diffResult.some(function (item) {\n        return item === 'delete';\n      });\n      var hasInsert = diffResult.some(function (item) {\n        return item === 'insert';\n      });\n\n      if (hasDelete && !hasInsert) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return false;\n} // Whether provided array contains only nodes of `containerElement` type.\n//\n// @private\n// @param {Array.<module:engine/view/node~Node>} children\n// @returns {Boolean}\n\n\nfunction hasOnlyContainers(children) {\n  return children.every(function (child) {\n    return child.is('containerElement');\n  });\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module typing/delete\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport DeleteCommand from './deletecommand';\nimport DeleteObserver from './deleteobserver';\nimport injectAndroidBackspaceMutationsHandling from './utils/injectandroidbackspacemutationshandling';\n/**\n * The delete and backspace feature. Handles the <kbd>Delete</kbd> and <kbd>Backspace</kbd> keys in the editor.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar Delete =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(Delete, _Plugin);\n\n  function Delete() {\n    _classCallCheck(this, Delete);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Delete).apply(this, arguments));\n  }\n\n  _createClass(Delete, [{\n    key: \"init\",\n    value: function init() {\n      var editor = this.editor;\n      var view = editor.editing.view;\n      var viewDocument = view.document;\n      view.addObserver(DeleteObserver);\n      editor.commands.add('forwardDelete', new DeleteCommand(editor, 'forward'));\n      editor.commands.add('delete', new DeleteCommand(editor, 'backward'));\n      this.listenTo(viewDocument, 'delete', function (evt, data) {\n        editor.execute(data.direction == 'forward' ? 'forwardDelete' : 'delete', {\n          unit: data.unit,\n          sequence: data.sequence\n        });\n        data.preventDefault();\n        view.scrollToTheSelection();\n      });\n      injectAndroidBackspaceMutationsHandling(editor);\n    }\n  }], [{\n    key: \"pluginName\",\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return 'Delete';\n    }\n  }]);\n\n  return Delete;\n}(Plugin);\n\nexport { Delete as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module typing/typing\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport Input from './input';\nimport Delete from './delete';\n/**\n * The typing feature. It handles typing.\n *\n * This is a \"glue\" plugin which loads the {@link module:typing/input~Input} and {@link module:typing/delete~Delete}\n * plugins.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar Typing =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(Typing, _Plugin);\n\n  function Typing() {\n    _classCallCheck(this, Typing);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Typing).apply(this, arguments));\n  }\n\n  _createClass(Typing, null, [{\n    key: \"requires\",\n    get: function get() {\n      return [Input, Delete];\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"pluginName\",\n    get: function get() {\n      return 'Typing';\n    }\n  }]);\n\n  return Typing;\n}(Plugin);\n/**\n * The configuration of the typing features. Used by the features from the `@ckeditor/ckeditor5-typing` package.\n *\n * Read more in {@link module:typing/typing~TypingConfig}.\n *\n * @member {module:typing/typing~TypingConfig} module:core/editor/editorconfig~EditorConfig#typing\n */\n\n/**\n * The configuration of the typing features. Used by the typing features in `@ckeditor/ckeditor5-typing` package.\n *\n *\t\tClassicEditor\n *\t\t\t.create( editorElement, {\n * \t\t\t\ttyping: ... // Typing feature options.\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * See {@link module:core/editor/editorconfig~EditorConfig all editor options}.\n *\n * @interface TypingConfig\n */\n\n/**\n * The granularity of undo/redo for typing and deleting. The value `20` means (more or less) that a new undo step\n * is created every 20 characters are inserted or deleted.\n *\n * @member {Number} [module:typing/typing~TypingConfig#undoStep=20]\n */\n\n\nexport { Typing as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module essentials/essentials\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport Clipboard from '@ckeditor/ckeditor5-clipboard/src/clipboard';\nimport Enter from '@ckeditor/ckeditor5-enter/src/enter';\nimport ShiftEnter from '@ckeditor/ckeditor5-enter/src/shiftenter';\nimport Typing from '@ckeditor/ckeditor5-typing/src/typing';\nimport Undo from '@ckeditor/ckeditor5-undo/src/undo';\n/**\n * A plugin including all essential editing features. It represents a set of features that enables similar functionalities\n * to a `<textarea>` element.\n *\n * It includes:\n *\n * * {@link module:clipboard/clipboard~Clipboard},\n * * {@link module:enter/enter~Enter},\n * * {@link module:enter/shiftenter~ShiftEnter},\n * * {@link module:typing/typing~Typing},\n * * {@link module:undo/undo~Undo}.\n *\n * This plugin set does not define any block-level containers (such as {@link module:paragraph/paragraph~Paragraph}).\n * If your editor is supposed to handle block content, make sure to include it.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar Essentials =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(Essentials, _Plugin);\n\n  function Essentials() {\n    _classCallCheck(this, Essentials);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Essentials).apply(this, arguments));\n  }\n\n  _createClass(Essentials, null, [{\n    key: \"requires\",\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return [Clipboard, Enter, ShiftEnter, Typing, Undo];\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"pluginName\",\n    get: function get() {\n      return 'Essentials';\n    }\n  }]);\n\n  return Essentials;\n}(Plugin);\n\nexport { Essentials as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module list/listcommand\n */\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport first from '@ckeditor/ckeditor5-utils/src/first';\n/**\n * The list command. It is used by the {@link module:list/list~List list feature}.\n *\n * @extends module:core/command~Command\n */\n\nvar ListCommand =\n/*#__PURE__*/\nfunction (_Command) {\n  _inherits(ListCommand, _Command);\n\n  /**\n   * Creates an instance of the command.\n   *\n   * @param {module:core/editor/editor~Editor} editor The editor instance.\n   * @param {'numbered'|'bulleted'} type List type that will be handled by this command.\n   */\n  function ListCommand(editor, type) {\n    var _this;\n\n    _classCallCheck(this, ListCommand);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ListCommand).call(this, editor));\n    /**\n     * The type of the list created by the command.\n     *\n     * @readonly\n     * @member {'numbered'|'bulleted'}\n     */\n\n    _this.type = type == 'bulleted' ? 'bulleted' : 'numbered';\n    /**\n     * A flag indicating whether the command is active, which means that the selection starts in a list of the same type.\n     *\n     * @observable\n     * @readonly\n     * @member {Boolean} #value\n     */\n\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(ListCommand, [{\n    key: \"refresh\",\n    value: function refresh() {\n      this.value = this._getValue();\n      this.isEnabled = this._checkEnabled();\n    }\n    /**\n     * Executes the command.\n     *\n     * @protected\n     */\n\n  }, {\n    key: \"execute\",\n    value: function execute() {\n      var _this2 = this;\n\n      var model = this.editor.model;\n      var document = model.document;\n      var blocks = Array.from(document.selection.getSelectedBlocks()).filter(function (block) {\n        return checkCanBecomeListItem(block, model.schema);\n      }); // Whether we are turning off some items.\n\n      var turnOff = this.value === true; // If we are turning off items, we are going to rename them to paragraphs.\n\n      model.change(function (writer) {\n        // If part of a list got turned off, we need to handle (outdent) all of sub-items of the last turned-off item.\n        // To be sure that model is all the time in a good state, we first fix items below turned-off item.\n        if (turnOff) {\n          // Start from the model item that is just after the last turned-off item.\n          var next = blocks[blocks.length - 1].nextSibling;\n          var currentIndent = Number.POSITIVE_INFINITY;\n          var changes = []; // Correct indent of all items after the last turned off item.\n          // Rules that should be followed:\n          // 1. All direct sub-items of turned-off item should become indent 0, because the first item after it\n          //    will be the first item of a new list. Other items are at the same level, so should have same 0 index.\n          // 2. All items with indent lower than indent of turned-off item should become indent 0, because they\n          //    should not end up as a child of any of list items that they were not children of before.\n          // 3. All other items should have their indent changed relatively to it's parent.\n          //\n          // For example:\n          // 1  * --------\n          // 2     * --------\n          // 3        * --------\t\t\t<-- this is turned off.\n          // 4           * --------\t\t<-- this has to become indent = 0, because it will be first item on a new list.\n          // 5              * --------\t<-- this should be still be a child of item above, so indent = 1.\n          // 6        * --------\t\t\t<-- this has to become indent = 0, because it should not be a child of any of items above.\n          // 7           * --------\t\t<-- this should be still be a child of item above, so indent = 1.\n          // 8     * --------\t\t\t\t<-- this has to become indent = 0.\n          // 9        * --------\t\t\t<-- this should still be a child of item above, so indent = 1.\n          // 10          * --------\t\t<-- this should still be a child of item above, so indent = 2.\n          // 11          * --------\t\t<-- this should still be at the same level as item above, so indent = 2.\n          // 12 * --------\t\t\t\t<-- this and all below are left unchanged.\n          // 13    * --------\n          // 14       * --------\n          //\n          // After turning off 3 the list becomes:\n          //\n          // 1  * --------\n          // 2     * --------\n          //\n          // 3  --------\n          //\n          // 4  * --------\n          // 5     * --------\n          // 6  * --------\n          // 7     * --------\n          // 8  * --------\n          // 9     * --------\n          // 10       * --------\n          // 11       * --------\n          // 12 * --------\n          // 13    * --------\n          // 14       * --------\n          //\n          // Thanks to this algorithm no lists are mismatched and no items get unexpected children/parent, while\n          // those parent-child connection which are possible to maintain are still maintained. It's worth noting\n          // that this is the same effect that we would be get by multiple use of outdent command. However doing\n          // it like this is much more efficient because it's less operation (less memory usage, easier OT) and\n          // less conversion (faster).\n\n          while (next && next.name == 'listItem' && next.getAttribute('listIndent') !== 0) {\n            // Check each next list item, as long as its indent is bigger than 0.\n            // If the indent is 0 we are not going to change anything anyway.\n            var indent = next.getAttribute('listIndent'); // We check if that's item indent is lower as current relative indent.\n\n            if (indent < currentIndent) {\n              // If it is, current relative indent becomes that indent.\n              currentIndent = indent;\n            } // Fix indent relatively to current relative indent.\n            // Note, that if we just changed the current relative indent, the newIndent will be equal to 0.\n\n\n            var newIndent = indent - currentIndent; // Save the entry in changes array. We do not apply it at the moment, because we will need to\n            // reverse the changes so the last item is changed first.\n            // This is to keep model in correct state all the time.\n\n            changes.push({\n              element: next,\n              listIndent: newIndent\n            }); // Find next item.\n\n            next = next.nextSibling;\n          }\n\n          changes = changes.reverse();\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = changes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var item = _step.value;\n              writer.setAttribute('listIndent', item.listIndent, item.element);\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n        } // If we are turning on, we might change some items that are already `listItem`s but with different type.\n        // Changing one nested list item to other type should also trigger changing all its siblings so the\n        // whole nested list is of the same type.\n        // Example (assume changing to numbered list):\n        // * ------\t\t\t\t<-- do not fix, top level item\n        //   * ------\t\t\t<-- fix, because latter list item of this item's list is changed\n        //      * ------\t\t<-- do not fix, item is not affected (different list)\n        //   * ------\t\t\t<-- fix, because latter list item of this item's list is changed\n        //      * ------\t\t<-- fix, because latter list item of this item's list is changed\n        //      * ---[--\t\t<-- already in selection\n        //   * ------\t\t\t<-- already in selection\n        //   * ------\t\t\t<-- already in selection\n        // * ------\t\t\t\t<-- already in selection, but does not cause other list items to change because is top-level\n        //   * ---]--\t\t\t<-- already in selection\n        //   * ------\t\t\t<-- fix, because preceding list item of this item's list is changed\n        //      * ------\t\t<-- do not fix, item is not affected (different list)\n        // * ------\t\t\t\t<-- do not fix, top level item\n\n\n        if (!turnOff) {\n          // Find lowest indent among selected items. This will be indicator what is the indent of\n          // top-most list affected by the command.\n          var lowestIndent = Number.POSITIVE_INFINITY;\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = blocks[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var _item = _step2.value;\n\n              if (_item.is('listItem') && _item.getAttribute('listIndent') < lowestIndent) {\n                lowestIndent = _item.getAttribute('listIndent');\n              }\n            } // Do not execute the fix for top-level lists.\n\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                _iterator2.return();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n\n          lowestIndent = lowestIndent === 0 ? 1 : lowestIndent; // Fix types of list items that are \"before\" the selected blocks.\n\n          _fixType(blocks, true, lowestIndent); // Fix types of list items that are \"after\" the selected blocks.\n\n\n          _fixType(blocks, false, lowestIndent);\n        } // Phew! Now it will be easier :).\n        // For each block element that was in the selection, we will either: turn it to list item,\n        // turn it to paragraph, or change it's type. Or leave it as it is.\n        // Do it in reverse as there might be multiple blocks (same as with changing indents).\n\n\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n          for (var _iterator3 = blocks.reverse()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n            var element = _step3.value;\n\n            if (turnOff && element.name == 'listItem') {\n              // We are turning off and the element is a `listItem` - it should be converted to `paragraph`.\n              // List item specific attributes are removed by post fixer.\n              writer.rename(element, 'paragraph');\n            } else if (!turnOff && element.name != 'listItem') {\n              // We are turning on and the element is not a `listItem` - it should be converted to `listItem`.\n              // The order of operations is important to keep model in correct state.\n              writer.setAttributes({\n                listType: _this2.type,\n                listIndent: 0\n              }, element);\n              writer.rename(element, 'listItem');\n            } else if (!turnOff && element.name == 'listItem' && element.getAttribute('listType') != _this2.type) {\n              // We are turning on and the element is a `listItem` but has different type - change it's type and\n              // type of it's all siblings that have same indent.\n              writer.setAttribute('listType', _this2.type, element);\n            }\n          }\n        } catch (err) {\n          _didIteratorError3 = true;\n          _iteratorError3 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n              _iterator3.return();\n            }\n          } finally {\n            if (_didIteratorError3) {\n              throw _iteratorError3;\n            }\n          }\n        }\n      });\n    }\n    /**\n     * Checks the command's {@link #value}.\n     *\n     * @private\n     * @returns {Boolean} The current value.\n     */\n\n  }, {\n    key: \"_getValue\",\n    value: function _getValue() {\n      // Check whether closest `listItem` ancestor of the position has a correct type.\n      var listItem = first(this.editor.model.document.selection.getSelectedBlocks());\n      return !!listItem && listItem.is('listItem') && listItem.getAttribute('listType') == this.type;\n    }\n    /**\n     * Checks whether the command can be enabled in the current context.\n     *\n     * @private\n     * @returns {Boolean} Whether the command should be enabled.\n     */\n\n  }, {\n    key: \"_checkEnabled\",\n    value: function _checkEnabled() {\n      // If command value is true it means that we are in list item, so the command should be enabled.\n      if (this.value) {\n        return true;\n      }\n\n      var selection = this.editor.model.document.selection;\n      var schema = this.editor.model.schema;\n      var firstBlock = first(selection.getSelectedBlocks());\n\n      if (!firstBlock) {\n        return false;\n      } // Otherwise, check if list item can be inserted at the position start.\n\n\n      return checkCanBecomeListItem(firstBlock, schema);\n    }\n  }]);\n\n  return ListCommand;\n}(Command); // Helper function used when one or more list item have their type changed. Fixes type of other list items\n// that are affected by the change (are in same lists) but are not directly in selection. The function got extracted\n// not to duplicated code, as same fix has to be performed before and after selection.\n//\n// @param {Array.<module:engine/model/node~Node>} blocks Blocks that are in selection.\n// @param {Boolean} isBackward Specified whether fix will be applied for blocks before first selected block (`true`)\n// or blocks after last selected block (`false`).\n// @param {Number} lowestIndent Lowest indent among selected blocks.\n\n\nexport { ListCommand as default };\n\nfunction _fixType(blocks, isBackward, lowestIndent) {\n  // We need to check previous sibling of first changed item and next siblings of last changed item.\n  var startingItem = isBackward ? blocks[0] : blocks[blocks.length - 1];\n\n  if (startingItem.is('listItem')) {\n    var item = startingItem[isBackward ? 'previousSibling' : 'nextSibling']; // During processing items, keeps the lowest indent of already processed items.\n    // This saves us from changing too many items.\n    // Following example is for going forward as it is easier to read, however same applies to going backward.\n    // * ------\n    //   * ------\n    //     * --[---\n    //   * ------\t\t<-- `lowestIndent` should be 1\n    //     * --]---\t\t<-- `startingItem`, `currentIndent` = 2, `lowestIndent` == 1\n    //     * ------\t\t<-- should be fixed, `indent` == 2 == `currentIndent`\n    //   * ------\t\t<-- should be fixed, set `currentIndent` to 1, `indent` == 1 == `currentIndent`\n    //     * ------\t\t<-- should not be fixed, item is in different list, `indent` = 2, `indent` != `currentIndent`\n    //   * ------\t\t<-- should be fixed, `indent` == 1 == `currentIndent`\n    // * ------\t\t\t<-- break loop (`indent` < `lowestIndent`)\n\n    var currentIndent = startingItem.getAttribute('listIndent'); // Look back until a list item with indent lower than reference `lowestIndent`.\n    // That would be the parent of nested sublist which contains item having `lowestIndent`.\n\n    while (item && item.is('listItem') && item.getAttribute('listIndent') >= lowestIndent) {\n      if (currentIndent > item.getAttribute('listIndent')) {\n        currentIndent = item.getAttribute('listIndent');\n      } // Found an item that is in the same nested sublist.\n\n\n      if (item.getAttribute('listIndent') == currentIndent) {\n        // Just add the item to selected blocks like it was selected by the user.\n        blocks[isBackward ? 'unshift' : 'push'](item);\n      }\n\n      item = item[isBackward ? 'previousSibling' : 'nextSibling'];\n    }\n  }\n} // Checks whether the given block can be replaced by a listItem.\n//\n// @private\n// @param {module:engine/model/element~Element} block A block to be tested.\n// @param {module:engine/model/schema~Schema} schema The schema of the document.\n// @returns {Boolean}\n\n\nfunction checkCanBecomeListItem(block, schema) {\n  return schema.checkChild(block.parent, 'listItem') && !schema.isObject(block);\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module list/indentcommand\n */\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport first from '@ckeditor/ckeditor5-utils/src/first';\n/**\n * The list indent command. It is used by the {@link module:list/list~List list feature}.\n *\n * @extends module:core/command~Command\n */\n\nvar IndentCommand =\n/*#__PURE__*/\nfunction (_Command) {\n  _inherits(IndentCommand, _Command);\n\n  /**\n   * Creates an instance of the command.\n   *\n   * @param {module:core/editor/editor~Editor} editor The editor instance.\n   * @param {'forward'|'backward'} indentDirection The direction of indent. If it is equal to `backward`, the command\n   * will outdent a list item.\n   */\n  function IndentCommand(editor, indentDirection) {\n    var _this;\n\n    _classCallCheck(this, IndentCommand);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(IndentCommand).call(this, editor));\n    /**\n     * Determines by how much the command will change the list item's indent attribute.\n     *\n     * @readonly\n     * @private\n     * @member {Number}\n     */\n\n    _this._indentBy = indentDirection == 'forward' ? 1 : -1;\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(IndentCommand, [{\n    key: \"refresh\",\n    value: function refresh() {\n      this.isEnabled = this._checkEnabled();\n    }\n    /**\n     * Indents or outdents (depends on the {@link #constructor}'s `indentDirection` parameter) selected list items.\n     *\n     * @fires execute\n     */\n\n  }, {\n    key: \"execute\",\n    value: function execute() {\n      var _this2 = this;\n\n      var model = this.editor.model;\n      var doc = model.document;\n      var itemsToChange = Array.from(doc.selection.getSelectedBlocks());\n      model.change(function (writer) {\n        var lastItem = itemsToChange[itemsToChange.length - 1]; // Indenting a list item should also indent all the items that are already sub-items of indented item.\n\n        var next = lastItem.nextSibling; // Check all items after last indented item, as long as their indent is bigger than indent of that item.\n\n        while (next && next.name == 'listItem' && next.getAttribute('listIndent') > lastItem.getAttribute('listIndent')) {\n          itemsToChange.push(next);\n          next = next.nextSibling;\n        } // We need to be sure to keep model in correct state after each small change, because converters\n        // bases on that state and assumes that model is correct.\n        // Because of that, if the command outdents items, we will outdent them starting from the last item, as\n        // it is safer.\n\n\n        if (_this2._indentBy < 0) {\n          itemsToChange = itemsToChange.reverse();\n        }\n\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = itemsToChange[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var item = _step.value;\n\n            var indent = item.getAttribute('listIndent') + _this2._indentBy; // If indent is lower than 0, it means that the item got outdented when it was not indented.\n            // This means that we need to convert that list item to paragraph.\n\n\n            if (indent < 0) {\n              // To keep the model as correct as possible, first rename listItem, then remove attributes,\n              // as listItem without attributes is very incorrect and will cause problems in converters.\n              // No need to remove attributes, will be removed by post fixer.\n              writer.rename(item, 'paragraph');\n            } // If indent is >= 0, change the attribute value.\n            else {\n                writer.setAttribute('listIndent', indent, item);\n              }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      });\n    }\n    /**\n     * Checks whether the command can be enabled in the current context.\n     *\n     * @private\n     * @returns {Boolean} Whether the command should be enabled.\n     */\n\n  }, {\n    key: \"_checkEnabled\",\n    value: function _checkEnabled() {\n      // Check whether any of position's ancestor is a list item.\n      var listItem = first(this.editor.model.document.selection.getSelectedBlocks()); // If selection is not in a list item, the command is disabled.\n\n      if (!listItem || !listItem.is('listItem')) {\n        return false;\n      }\n\n      if (this._indentBy > 0) {\n        // Cannot indent first item in it's list. Check if before `listItem` is a list item that is in same list.\n        // To be in the same list, the item has to have same attributes and cannot be \"split\" by an item with lower indent.\n        var indent = listItem.getAttribute('listIndent');\n        var type = listItem.getAttribute('listType');\n        var prev = listItem.previousSibling;\n\n        while (prev && prev.is('listItem') && prev.getAttribute('listIndent') >= indent) {\n          if (prev.getAttribute('listIndent') == indent) {\n            // The item is on the same level.\n            // If it has same type, it means that we found a preceding sibling from the same list.\n            // If it does not have same type, it means that `listItem` is on different list (this can happen only\n            // on top level lists, though).\n            return prev.getAttribute('listType') == type;\n          }\n\n          prev = prev.previousSibling;\n        } // Could not find similar list item, this means that `listItem` is first in its list.\n\n\n        return false;\n      } // If we are outdenting it is enough to be in list item. Every list item can always be outdented.\n\n\n      return true;\n    }\n  }]);\n\n  return IndentCommand;\n}(Command);\n\nexport { IndentCommand as default };","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module list/utils\n */\nimport { getFillerOffset } from '@ckeditor/ckeditor5-engine/src/view/containerelement';\n/**\n * Creates list item {@link module:engine/view/containerelement~ContainerElement}.\n *\n * @param {module:engine/view/downcastwriter~DowncastWriter} writer The writer instance.\n * @returns {module:engine/view/containerelement~ContainerElement}\n */\n\nexport function createViewListItemElement(writer) {\n  var viewItem = writer.createContainerElement('li');\n  viewItem.getFillerOffset = getListItemFillerOffset;\n  return viewItem;\n} // Implementation of getFillerOffset for view list item element.\n//\n// @returns {Number|null} Block filler offset or `null` if block filler is not needed.\n\nfunction getListItemFillerOffset() {\n  var hasOnlyLists = !this.isEmpty && (this.getChild(0).name == 'ul' || this.getChild(0).name == 'ol');\n\n  if (this.isEmpty || hasOnlyLists) {\n    return 0;\n  }\n\n  return getFillerOffset.call(this);\n}","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module list/converters\n */\nimport { createViewListItemElement } from './utils';\n/**\n * A model-to-view converter for `listItem` model element insertion.\n *\n * It creates a `<ul><li></li><ul>` (or `<ol>`) view structure out of a `listItem` model element, inserts it at the correct\n * position, and merges the list with surrounding lists (if available).\n *\n * @see module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:insert\n * @param {module:engine/model/model~Model} model Model instance.\n * @returns {Function} Returns a conversion callback.\n */\n\nexport function modelViewInsertion(model) {\n  return function (evt, data, conversionApi) {\n    var consumable = conversionApi.consumable;\n\n    if (!consumable.test(data.item, 'insert') || !consumable.test(data.item, 'attribute:listType') || !consumable.test(data.item, 'attribute:listIndent')) {\n      return;\n    }\n\n    consumable.consume(data.item, 'insert');\n    consumable.consume(data.item, 'attribute:listType');\n    consumable.consume(data.item, 'attribute:listIndent');\n    var modelItem = data.item;\n    var viewItem = generateLiInUl(modelItem, conversionApi);\n    injectViewList(modelItem, viewItem, conversionApi, model);\n  };\n}\n/**\n * A model-to-view converter for `listItem` model element removal.\n *\n * @see module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:remove\n * @param {module:engine/model/model~Model} model Model instance.\n * @returns {Function} Returns a conversion callback.\n */\n\nexport function modelViewRemove(model) {\n  return function (evt, data, conversionApi) {\n    var viewStart = conversionApi.mapper.toViewPosition(data.position).getLastMatchingPosition(function (value) {\n      return !value.item.is('li');\n    });\n    var viewItem = viewStart.nodeAfter;\n    var viewWriter = conversionApi.writer; // 1. Break the container after and before the list item.\n    // This will create a view list with one view list item - the one to remove.\n\n    viewWriter.breakContainer(viewWriter.createPositionBefore(viewItem));\n    viewWriter.breakContainer(viewWriter.createPositionAfter(viewItem)); // 2. Remove the list with the item to remove.\n\n    var viewList = viewItem.parent;\n    var viewListPrev = viewList.previousSibling;\n    var removeRange = viewWriter.createRangeOn(viewList);\n    var removed = viewWriter.remove(removeRange); // 3. Merge the whole created by breaking and removing the list.\n\n    if (viewListPrev && viewListPrev.nextSibling) {\n      mergeViewLists(viewWriter, viewListPrev, viewListPrev.nextSibling);\n    } // 4. Bring back nested list that was in the removed <li>.\n\n\n    var modelItem = conversionApi.mapper.toModelElement(viewItem);\n    hoistNestedLists(modelItem.getAttribute('listIndent') + 1, data.position, removeRange.start, viewItem, conversionApi, model); // 5. Unbind removed view item and all children.\n\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = viewWriter.createRangeIn(removed).getItems()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var child = _step.value;\n        conversionApi.mapper.unbindViewElement(child);\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    evt.stop();\n  };\n}\n/**\n * A model-to-view converter for `type` attribute change on `listItem` model element.\n *\n * This change means that `<li>` elements parent changes from `<ul>` to `<ol>` (or vice versa). This is accomplished\n * by breaking view elements, changing their name and merging them.\n *\n * @see module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:attribute\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Object} data Additional information about the change.\n * @param {Object} conversionApi Conversion interface.\n */\n\nexport function modelViewChangeType(evt, data, conversionApi) {\n  if (!conversionApi.consumable.consume(data.item, 'attribute:listType')) {\n    return;\n  }\n\n  var viewItem = conversionApi.mapper.toViewElement(data.item);\n  var viewWriter = conversionApi.writer; // 1. Break the container after and before the list item.\n  // This will create a view list with one view list item -- the one that changed type.\n\n  viewWriter.breakContainer(viewWriter.createPositionBefore(viewItem));\n  viewWriter.breakContainer(viewWriter.createPositionAfter(viewItem)); // 2. Change name of the view list that holds the changed view item.\n  // We cannot just change name property, because that would not render properly.\n\n  var viewList = viewItem.parent;\n  var listName = data.attributeNewValue == 'numbered' ? 'ol' : 'ul';\n  viewList = viewWriter.rename(listName, viewList); // 3. Merge the changed view list with other lists, if possible.\n\n  mergeViewLists(viewWriter, viewList, viewList.nextSibling);\n  mergeViewLists(viewWriter, viewList.previousSibling, viewList); // 4. Consumable insertion of children inside the item. They are already handled by re-building the item in view.\n\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = data.item.getChildren()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var child = _step2.value;\n      conversionApi.consumable.consume(child, 'insert');\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n}\n/**\n * A model-to-view converter for `listIndent` attribute change on `listItem` model element.\n *\n * @see module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:attribute\n * @param {module:engine/model/model~Model} model Model instance.\n * @returns {Function} Returns a conversion callback.\n */\n\nexport function modelViewChangeIndent(model) {\n  return function (evt, data, conversionApi) {\n    if (!conversionApi.consumable.consume(data.item, 'attribute:listIndent')) {\n      return;\n    }\n\n    var viewItem = conversionApi.mapper.toViewElement(data.item);\n    var viewWriter = conversionApi.writer; // 1. Break the container after and before the list item.\n    // This will create a view list with one view list item -- the one that changed type.\n\n    viewWriter.breakContainer(viewWriter.createPositionBefore(viewItem));\n    viewWriter.breakContainer(viewWriter.createPositionAfter(viewItem)); // 2. Extract view list with changed view list item and merge \"hole\" possibly created by breaking and removing elements.\n\n    var viewList = viewItem.parent;\n    var viewListPrev = viewList.previousSibling;\n    var removeRange = viewWriter.createRangeOn(viewList);\n    viewWriter.remove(removeRange);\n\n    if (viewListPrev && viewListPrev.nextSibling) {\n      mergeViewLists(viewWriter, viewListPrev, viewListPrev.nextSibling);\n    } // 3. Bring back nested list that was in the removed <li>.\n\n\n    hoistNestedLists(data.attributeOldValue + 1, data.range.start, removeRange.start, viewItem, conversionApi, model); // 4. Inject view list like it is newly inserted.\n\n    injectViewList(data.item, viewItem, conversionApi, model); // 5. Consume insertion of children inside the item. They are already handled by re-building the item in view.\n\n    var _iteratorNormalCompletion3 = true;\n    var _didIteratorError3 = false;\n    var _iteratorError3 = undefined;\n\n    try {\n      for (var _iterator3 = data.item.getChildren()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n        var child = _step3.value;\n        conversionApi.consumable.consume(child, 'insert');\n      }\n    } catch (err) {\n      _didIteratorError3 = true;\n      _iteratorError3 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n          _iterator3.return();\n        }\n      } finally {\n        if (_didIteratorError3) {\n          throw _iteratorError3;\n        }\n      }\n    }\n  };\n}\n/**\n * A special model-to-view converter introduced by the {@link module:list/list~List list feature}. This converter is fired for\n * insert change of every model item, and should be fired before the actual converter. The converter checks whether the inserted\n * model item is a non-`listItem` element. If it is, and it is inserted inside a view list, the converter breaks the\n * list so the model element is inserted to the view parent element corresponding to its model parent element.\n *\n * The converter prevents such situations:\n *\n *\t\t// Model:                        // View:\n *\t\t<listItem>foo</listItem>         <ul>\n *\t\t<listItem>bar</listItem>             <li>foo</li>\n *\t\t                                     <li>bar</li>\n *\t\t                                 </ul>\n *\n *\t\t// After change:                 // Correct view guaranteed by this converter:\n *\t\t<listItem>foo</listItem>         <ul><li>foo</li></ul><p>xxx</p><ul><li>bar</li></ul>\n *\t\t<paragraph>xxx</paragraph>       // Instead of this wrong view state:\n *\t\t<listItem>bar</listItem>         <ul><li>foo</li><p>xxx</p><li>bar</li></ul>\n *\n * @see module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:insert\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Object} data Additional information about the change.\n * @param {Object} conversionApi Conversion interface.\n */\n\nexport function modelViewSplitOnInsert(evt, data, conversionApi) {\n  if (data.item.name != 'listItem') {\n    var viewPosition = conversionApi.mapper.toViewPosition(data.range.start);\n    var viewWriter = conversionApi.writer;\n    var lists = []; // Break multiple ULs/OLs if there are.\n    //\n    // Imagine following list:\n    //\n    // 1 --------\n    //   1.1 --------\n    //     1.1.1 --------\n    //     1.1.2 --------\n    //     1.1.3 --------\n    //       1.1.3.1 --------\n    //   1.2 --------\n    //     1.2.1 --------\n    // 2 --------\n    //\n    // Insert paragraph after item 1.1.1:\n    //\n    // 1 --------\n    //   1.1 --------\n    //     1.1.1 --------\n    //\n    // Lorem ipsum.\n    //\n    //     1.1.2 --------\n    //     1.1.3 --------\n    //       1.1.3.1 --------\n    //   1.2 --------\n    //     1.2.1 --------\n    // 2 --------\n    //\n    // In this case 1.1.2 has to become beginning of a new list.\n    // We need to break list before 1.1.2 (obvious), then we need to break list also before 1.2.\n    // Then we need to move those broken pieces one after another and merge:\n    //\n    // 1 --------\n    //   1.1 --------\n    //     1.1.1 --------\n    //\n    // Lorem ipsum.\n    //\n    // 1.1.2 --------\n    //   1.1.3 --------\n    //     1.1.3.1 --------\n    // 1.2 --------\n    //   1.2.1 --------\n    // 2 --------\n    //\n\n    while (viewPosition.parent.name == 'ul' || viewPosition.parent.name == 'ol') {\n      viewPosition = viewWriter.breakContainer(viewPosition);\n\n      if (viewPosition.parent.name != 'li') {\n        break;\n      } // Remove lists that are after inserted element.\n      // They will be brought back later, below the inserted element.\n\n\n      var removeStart = viewPosition;\n      var removeEnd = viewWriter.createPositionAt(viewPosition.parent, 'end'); // Don't remove if there is nothing to remove.\n\n      if (!removeStart.isEqual(removeEnd)) {\n        var removed = viewWriter.remove(viewWriter.createRange(removeStart, removeEnd));\n        lists.push(removed);\n      }\n\n      viewPosition = viewWriter.createPositionAfter(viewPosition.parent);\n    } // Bring back removed lists.\n\n\n    if (lists.length > 0) {\n      for (var i = 0; i < lists.length; i++) {\n        var previousList = viewPosition.nodeBefore;\n        var insertedRange = viewWriter.insert(viewPosition, lists[i]);\n        viewPosition = insertedRange.end; // Don't merge first list! We want a split in that place (this is why this converter is introduced).\n\n        if (i > 0) {\n          var mergePos = mergeViewLists(viewWriter, previousList, previousList.nextSibling); // If `mergePos` is in `previousList` it means that the lists got merged.\n          // In this case, we need to fix insert position.\n\n          if (mergePos && mergePos.parent == previousList) {\n            viewPosition.offset--;\n          }\n        }\n      } // Merge last inserted list with element after it.\n\n\n      mergeViewLists(viewWriter, viewPosition.nodeBefore, viewPosition.nodeAfter);\n    }\n  }\n}\n/**\n * A special model-to-view converter introduced by the {@link module:list/list~List list feature}. This converter takes care of\n * merging view lists after something is removed or moved from near them.\n *\n * Example:\n *\n *\t\t// Model:                        // View:\n *\t\t<listItem>foo</listItem>         <ul><li>foo</li></ul>\n *\t\t<paragraph>xxx</paragraph>       <p>xxx</p>\n *\t\t<listItem>bar</listItem>         <ul><li>bar</li></ul>\n *\n *\t\t// After change:                 // Correct view guaranteed by this converter:\n *\t\t<listItem>foo</listItem>         <ul>\n *\t\t<listItem>bar</listItem>             <li>foo</li>\n *\t\t                                     <li>bar</li>\n *\t\t                                 </ul>\n *\n * @see module:engine/conversion/downcastdispatcher~DowncastDispatcher#event:remove\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Object} data Additional information about the change.\n * @param {Object} conversionApi Conversion interface.\n */\n\nexport function modelViewMergeAfter(evt, data, conversionApi) {\n  var viewPosition = conversionApi.mapper.toViewPosition(data.position);\n  var viewItemPrev = viewPosition.nodeBefore;\n  var viewItemNext = viewPosition.nodeAfter; // Merge lists if something (remove, move) was done from inside of list.\n  // Merging will be done only if both items are view lists of the same type.\n  // The check is done inside the helper function.\n\n  mergeViewLists(conversionApi.writer, viewItemPrev, viewItemNext);\n}\n/**\n * A view-to-model converter that converts `<li>` view elements into `listItem` model elements.\n *\n * To set correct values of the `listType` and `listIndent` attributes the converter:\n * * checks `<li>`'s parent,\n * * stores and increases the `conversionApi.store.indent` value when `<li>`'s sub-items are converted.\n *\n * @see module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:element\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Object} data An object containing conversion input and a placeholder for conversion output and possibly other values.\n * @param {Object} conversionApi Conversion interface to be used by the callback.\n */\n\nexport function viewModelConverter(evt, data, conversionApi) {\n  if (conversionApi.consumable.consume(data.viewItem, {\n    name: true\n  })) {\n    var writer = conversionApi.writer;\n    var conversionStore = this.conversionApi.store; // 1. Create `listItem` model element.\n\n    var listItem = writer.createElement('listItem'); // 2. Handle `listItem` model element attributes.\n\n    conversionStore.indent = conversionStore.indent || 0;\n    writer.setAttribute('listIndent', conversionStore.indent, listItem); // Set 'bulleted' as default. If this item is pasted into a context,\n\n    var type = data.viewItem.parent && data.viewItem.parent.name == 'ol' ? 'numbered' : 'bulleted';\n    writer.setAttribute('listType', type, listItem); // `listItem`s created recursively should have bigger indent.\n\n    conversionStore.indent++; // Try to find allowed parent for list item.\n\n    var splitResult = conversionApi.splitToAllowedParent(listItem, data.modelCursor); // When there is no allowed parent it means that list item cannot be converted at current model position\n    // and in any of position ancestors.\n\n    if (!splitResult) {\n      return;\n    }\n\n    writer.insert(listItem, splitResult.position);\n    var nextPosition = viewToModelListItemChildrenConverter(listItem, data.viewItem.getChildren(), conversionApi);\n    conversionStore.indent--; // Result range starts before the first item and ends after the last.\n\n    data.modelRange = writer.createRange(data.modelCursor, nextPosition); // When modelCursor parent had to be split to insert list item.\n\n    if (splitResult.cursorParent) {\n      // Then continue conversion in split element.\n      data.modelCursor = writer.createPositionAt(splitResult.cursorParent, 0);\n    } else {\n      // Otherwise continue conversion after last list item.\n      data.modelCursor = data.modelRange.end;\n    }\n  }\n}\n/**\n * A view-to-model converter for `<ul>` and `<ol>` view elements that cleans the input view of garbage.\n * This is mostly to clean whitespaces from between `<li>` view elements inside the view list element, however, also\n * incorrect data can be cleared if the view was incorrect.\n *\n * @see module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:element\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Object} data An object containing conversion input and a placeholder for conversion output and possibly other values.\n * @param {Object} conversionApi Conversion interface to be used by the callback.\n */\n\nexport function cleanList(evt, data, conversionApi) {\n  if (conversionApi.consumable.test(data.viewItem, {\n    name: true\n  })) {\n    // Caching children because when we start removing them iterating fails.\n    var children = Array.from(data.viewItem.getChildren());\n\n    for (var _i = 0; _i < children.length; _i++) {\n      var child = children[_i];\n\n      if (!child.is('li')) {\n        child._remove();\n      }\n    }\n  }\n}\n/**\n * A view-to-model converter for `<li>` elements that cleans whitespace formatting from the input view.\n *\n * @see module:engine/conversion/upcastdispatcher~UpcastDispatcher#event:element\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Object} data An object containing conversion input and a placeholder for conversion output and possibly other values.\n * @param {Object} conversionApi Conversion interface to be used by the callback.\n */\n\nexport function cleanListItem(evt, data, conversionApi) {\n  if (conversionApi.consumable.test(data.viewItem, {\n    name: true\n  })) {\n    if (data.viewItem.childCount === 0) {\n      return;\n    }\n\n    var children = _toConsumableArray(data.viewItem.getChildren());\n\n    var foundList = false;\n    var firstNode = true;\n    var _iteratorNormalCompletion4 = true;\n    var _didIteratorError4 = false;\n    var _iteratorError4 = undefined;\n\n    try {\n      for (var _iterator4 = children[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n        var child = _step4.value;\n\n        if (foundList && !child.is('ul') && !child.is('ol')) {\n          child._remove();\n        }\n\n        if (child.is('text')) {\n          // If this is the first node and it's a text node, left-trim it.\n          if (firstNode) {\n            child._data = child.data.replace(/^\\s+/, '');\n          } // If this is the last text node before <ul> or <ol>, right-trim it.\n\n\n          if (!child.nextSibling || child.nextSibling.is('ul') || child.nextSibling.is('ol')) {\n            child._data = child.data.replace(/\\s+$/, '');\n          }\n        } else if (child.is('ul') || child.is('ol')) {\n          // If this is a <ul> or <ol>, do not process it, just mark that we already visited list element.\n          foundList = true;\n        }\n\n        firstNode = false;\n      }\n    } catch (err) {\n      _didIteratorError4 = true;\n      _iteratorError4 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n          _iterator4.return();\n        }\n      } finally {\n        if (_didIteratorError4) {\n          throw _iteratorError4;\n        }\n      }\n    }\n  }\n}\n/**\n * Returns callback for model position to view position mapping for {@link module:engine/conversion/mapper~Mapper}. The callback fixes\n * positions between `listItem` elements that would be incorrectly mapped because of how list items are represented in model\n * and view.\n *\n * @see module:engine/conversion/mapper~Mapper#event:modelToViewPosition\n * @param {module:engine/view/view~View} view A view instance.\n * @returns {Function}\n */\n\nexport function modelToViewPosition(view) {\n  return function (evt, data) {\n    if (data.isPhantom) {\n      return;\n    }\n\n    var modelItem = data.modelPosition.nodeBefore;\n\n    if (modelItem && modelItem.is('listItem')) {\n      var viewItem = data.mapper.toViewElement(modelItem);\n      var topmostViewList = viewItem.getAncestors().find(function (element) {\n        return element.is('ul') || element.is('ol');\n      });\n      var walker = view.createPositionAt(viewItem, 0).getWalker();\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = walker[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var value = _step5.value;\n\n          if (value.type == 'elementStart' && value.item.is('li')) {\n            data.viewPosition = value.previousPosition;\n            break;\n          } else if (value.type == 'elementEnd' && value.item == topmostViewList) {\n            data.viewPosition = value.nextPosition;\n            break;\n          }\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n    }\n  };\n}\n/**\n * The callback for view position to model position mapping for {@link module:engine/conversion/mapper~Mapper}. The callback fixes\n * positions between `<li>` elements that would be incorrectly mapped because of how list items are represented in model\n * and view.\n *\n * @see module:engine/conversion/mapper~Mapper#event:viewToModelPosition\n * @param {module:engine/model/model~Model} model Model instance.\n * @returns {Function} Returns a conversion callback.\n */\n\nexport function viewToModelPosition(model) {\n  return function (evt, data) {\n    var viewPos = data.viewPosition;\n    var viewParent = viewPos.parent;\n    var mapper = data.mapper;\n\n    if (viewParent.name == 'ul' || viewParent.name == 'ol') {\n      // Position is directly in <ul> or <ol>.\n      if (!viewPos.isAtEnd) {\n        // If position is not at the end, it must be before <li>.\n        // Get that <li>, map it to `listItem` and set model position before that `listItem`.\n        var modelNode = mapper.toModelElement(viewPos.nodeAfter);\n        data.modelPosition = model.createPositionBefore(modelNode);\n      } else {\n        // Position is at the end of <ul> or <ol>, so there is no <li> after it to be mapped.\n        // There is <li> before the position, but we cannot just map it to `listItem` and set model position after it,\n        // because that <li> may contain nested items.\n        // We will check \"model length\" of that <li>, in other words - how many `listItem`s are in that <li>.\n        var _modelNode = mapper.toModelElement(viewPos.nodeBefore);\n\n        var modelLength = mapper.getModelLength(viewPos.nodeBefore); // Then we get model position before mapped `listItem` and shift it accordingly.\n\n        data.modelPosition = model.createPositionBefore(_modelNode).getShiftedBy(modelLength);\n      }\n\n      evt.stop();\n    } else if (viewParent.name == 'li' && viewPos.nodeBefore && (viewPos.nodeBefore.name == 'ul' || viewPos.nodeBefore.name == 'ol')) {\n      // In most cases when view position is in <li> it is in text and this is a correct position.\n      // However, if position is after <ul> or <ol> we have to fix it -- because in model <ul>/<ol> are not in the `listItem`.\n      var _modelNode2 = mapper.toModelElement(viewParent); // Check all <ul>s and <ol>s that are in the <li> but before mapped position.\n      // Get model length of those elements and then add it to the offset of `listItem` mapped to the original <li>.\n\n\n      var _modelLength = 1; // Starts from 1 because the original <li> has to be counted in too.\n\n      var viewList = viewPos.nodeBefore;\n\n      while (viewList && (viewList.is('ul') || viewList.is('ol'))) {\n        _modelLength += mapper.getModelLength(viewList);\n        viewList = viewList.previousSibling;\n      }\n\n      data.modelPosition = model.createPositionBefore(_modelNode2).getShiftedBy(_modelLength);\n      evt.stop();\n    }\n  };\n}\n/**\n * Post-fixer that reacts to changes on document and fixes incorrect model states.\n *\n * In an example below, there is a correct list structure.\n * Then the middle element will be removed so the list structure will become incorrect:\n *\n *\t\t<listItem listType=\"bulleted\" listIndent=0>Item 1</listItem>\n *\t\t<listItem listType=\"bulleted\" listIndent=1>Item 2</listItem>   <--- this is removed.\n *\t\t<listItem listType=\"bulleted\" listIndent=2>Item 3</listItem>\n *\n * List structure after the middle element removed:\n *\n * \t\t<listItem listType=\"bulleted\" listIndent=0>Item 1</listItem>\n *\t\t<listItem listType=\"bulleted\" listIndent=2>Item 3</listItem>\n *\n * Should become:\n *\n *\t\t<listItem listType=\"bulleted\" listIndent=0>Item 1</listItem>\n *\t\t<listItem listType=\"bulleted\" listIndent=1>Item 3</listItem>   <--- note that indent got post-fixed.\n *\n * @param {module:engine/model/model~Model} model The data model.\n * @param {module:engine/model/writer~Writer} writer The writer to do changes with.\n * @returns {Boolean} `true` if any change has been applied, `false` otherwise.\n */\n\nexport function modelChangePostFixer(model, writer) {\n  var changes = model.document.differ.getChanges();\n  var itemToListHead = new Map();\n  var applied = false;\n  var _iteratorNormalCompletion6 = true;\n  var _didIteratorError6 = false;\n  var _iteratorError6 = undefined;\n\n  try {\n    for (var _iterator6 = changes[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n      var entry = _step6.value;\n\n      if (entry.type == 'insert' && entry.name == 'listItem') {\n        _addListToFix(entry.position);\n      } else if (entry.type == 'insert' && entry.name != 'listItem') {\n        if (entry.name != '$text') {\n          // In case of renamed element.\n          var item = entry.position.nodeAfter;\n\n          if (item.hasAttribute('listIndent')) {\n            writer.removeAttribute('listIndent', item);\n            applied = true;\n          }\n\n          if (item.hasAttribute('listType')) {\n            writer.removeAttribute('listType', item);\n            applied = true;\n          }\n        }\n\n        var posAfter = entry.position.getShiftedBy(entry.length);\n\n        _addListToFix(posAfter);\n      } else if (entry.type == 'remove' && entry.name == 'listItem') {\n        _addListToFix(entry.position);\n      } else if (entry.type == 'attribute' && entry.attributeKey == 'listIndent') {\n        _addListToFix(entry.range.start);\n      } else if (entry.type == 'attribute' && entry.attributeKey == 'listType') {\n        _addListToFix(entry.range.start);\n      }\n    }\n  } catch (err) {\n    _didIteratorError6 = true;\n    _iteratorError6 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n        _iterator6.return();\n      }\n    } finally {\n      if (_didIteratorError6) {\n        throw _iteratorError6;\n      }\n    }\n  }\n\n  var _iteratorNormalCompletion7 = true;\n  var _didIteratorError7 = false;\n  var _iteratorError7 = undefined;\n\n  try {\n    for (var _iterator7 = itemToListHead.values()[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n      var listHead = _step7.value;\n\n      _fixListIndents(listHead);\n\n      _fixListTypes(listHead);\n    }\n  } catch (err) {\n    _didIteratorError7 = true;\n    _iteratorError7 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n        _iterator7.return();\n      }\n    } finally {\n      if (_didIteratorError7) {\n        throw _iteratorError7;\n      }\n    }\n  }\n\n  return applied;\n\n  function _addListToFix(position) {\n    var prev = position.nodeBefore;\n\n    if (!prev || !prev.is('listItem')) {\n      var item = position.nodeAfter;\n\n      if (item && item.is('listItem')) {\n        itemToListHead.set(item, item);\n      }\n    } else {\n      var listHead = prev;\n\n      if (itemToListHead.has(listHead)) {\n        return;\n      }\n\n      while (listHead.previousSibling && listHead.previousSibling.is('listItem')) {\n        listHead = listHead.previousSibling;\n\n        if (itemToListHead.has(listHead)) {\n          return;\n        }\n      }\n\n      itemToListHead.set(position.nodeBefore, listHead);\n    }\n  }\n\n  function _fixListIndents(item) {\n    var maxIndent = 0;\n    var fixBy = null;\n\n    while (item && item.is('listItem')) {\n      var itemIndent = item.getAttribute('listIndent');\n\n      if (itemIndent > maxIndent) {\n        var newIndent = void 0;\n\n        if (fixBy === null) {\n          fixBy = itemIndent - maxIndent;\n          newIndent = maxIndent;\n        } else {\n          if (fixBy > itemIndent) {\n            fixBy = itemIndent;\n          }\n\n          newIndent = itemIndent - fixBy;\n        }\n\n        writer.setAttribute('listIndent', newIndent, item);\n        applied = true;\n      } else {\n        fixBy = null;\n        maxIndent = item.getAttribute('listIndent') + 1;\n      }\n\n      item = item.nextSibling;\n    }\n  }\n\n  function _fixListTypes(item) {\n    var typesStack = [];\n    var prev = null;\n\n    while (item && item.is('listItem')) {\n      var itemIndent = item.getAttribute('listIndent');\n\n      if (prev && prev.getAttribute('listIndent') > itemIndent) {\n        typesStack = typesStack.slice(0, itemIndent + 1);\n      }\n\n      if (itemIndent != 0) {\n        if (typesStack[itemIndent]) {\n          var type = typesStack[itemIndent];\n\n          if (item.getAttribute('listType') != type) {\n            writer.setAttribute('listType', type, item);\n            applied = true;\n          }\n        } else {\n          typesStack[itemIndent] = item.getAttribute('listType');\n        }\n      }\n\n      prev = item;\n      item = item.nextSibling;\n    }\n  }\n}\n/**\n * A fixer for pasted content that includes list items.\n *\n * It fixes indentation of pasted list items so the pasted items match correctly to the context they are pasted into.\n *\n * Example:\n *\n *\t\t<listItem listType=\"bulleted\" listIndent=0>A</listItem>\n *\t\t<listItem listType=\"bulleted\" listIndent=1>B^</listItem>\n *\t\t// At ^ paste:  <listItem listType=\"bulleted\" listIndent=4>X</listItem>\n *\t\t//              <listItem listType=\"bulleted\" listIndent=5>Y</listItem>\n *\t\t<listItem listType=\"bulleted\" listIndent=2>C</listItem>\n *\n * Should become:\n *\n *\t\t<listItem listType=\"bulleted\" listIndent=0>A</listItem>\n *\t\t<listItem listType=\"bulleted\" listIndent=1>BX</listItem>\n *\t\t<listItem listType=\"bulleted\" listIndent=2>Y/listItem>\n *\t\t<listItem listType=\"bulleted\" listIndent=2>C</listItem>\n *\n * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the fired event.\n * @param {Array} args Arguments of {@link module:engine/model/model~Model#insertContent}.\n */\n\nexport function modelIndentPasteFixer(evt, _ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n      content = _ref2[0],\n      selectable = _ref2[1];\n\n  // Check whether inserted content starts from a `listItem`. If it does not, it means that there are some other\n  // elements before it and there is no need to fix indents, because even if we insert that content into a list,\n  // that list will be broken.\n  // Note: we also need to handle singular elements because inserting item with indent 0 into 0,1,[],2\n  // would create incorrect model.\n  var item = content.is('documentFragment') ? content.getChild(0) : content;\n  var selection;\n\n  if (!selectable) {\n    selection = this.document.selection;\n  } else {\n    selection = this.createSelection(selectable);\n  }\n\n  if (item && item.is('listItem')) {\n    // Get a reference list item. Inserted list items will be fixed according to that item.\n    var pos = selection.getFirstPosition();\n    var refItem = null;\n\n    if (pos.parent.is('listItem')) {\n      refItem = pos.parent;\n    } else if (pos.nodeBefore && pos.nodeBefore.is('listItem')) {\n      refItem = pos.nodeBefore;\n    } // If there is `refItem` it means that we do insert list items into an existing list.\n\n\n    if (refItem) {\n      // First list item in `data` has indent equal to 0 (it is a first list item). It should have indent equal\n      // to the indent of reference item. We have to fix the first item and all of it's children and following siblings.\n      // Indent of all those items has to be adjusted to reference item.\n      var indentChange = refItem.getAttribute('listIndent'); // Fix only if there is anything to fix.\n\n      if (indentChange > 0) {\n        // Adjust indent of all \"first\" list items in inserted data.\n        while (item && item.is('listItem')) {\n          item._setAttribute('listIndent', item.getAttribute('listIndent') + indentChange);\n\n          item = item.nextSibling;\n        }\n      }\n    }\n  }\n} // Helper function that creates a `<ul><li></li></ul>` or (`<ol>`) structure out of given `modelItem` model `listItem` element.\n// Then, it binds created view list item (<li>) with model `listItem` element.\n// The function then returns created view list item (<li>).\n\nfunction generateLiInUl(modelItem, conversionApi) {\n  var mapper = conversionApi.mapper;\n  var viewWriter = conversionApi.writer;\n  var listType = modelItem.getAttribute('listType') == 'numbered' ? 'ol' : 'ul';\n  var viewItem = createViewListItemElement(viewWriter);\n  var viewList = viewWriter.createContainerElement(listType, null);\n  viewWriter.insert(viewWriter.createPositionAt(viewList, 0), viewItem);\n  mapper.bindElements(modelItem, viewItem);\n  return viewItem;\n} // Helper function that converts children of a given `<li>` view element into corresponding model elements.\n// The function maintains proper order of elements if model `listItem` is split during the conversion\n// due to block children conversion.\n//\n// @param {module:engine/model/element~Element} listItemModel List item model element to which converted children will be inserted.\n// @param {Iterable.<module:engine/view/node~Node>} viewChildren View elements which will be converted.\n// @param {Object} conversionApi Conversion interface to be used by the callback.\n// @returns {module:engine/model/position~Position} Position on which next elements should be inserted after children conversion.\n\n\nfunction viewToModelListItemChildrenConverter(listItemModel, viewChildren, conversionApi) {\n  var writer = conversionApi.writer;\n  var lastListItem = listItemModel;\n  var nextPosition = writer.createPositionAfter(listItemModel); // Check all children of the converted `<li>`. At this point we assume there are no \"whitespace\" view text nodes\n  // in view list, between view list items. This should be handled by `<ul>` and `<ol>` converters.\n\n  var _iteratorNormalCompletion8 = true;\n  var _didIteratorError8 = false;\n  var _iteratorError8 = undefined;\n\n  try {\n    for (var _iterator8 = viewChildren[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n      var child = _step8.value;\n\n      // If this is a view list element, we will insert its conversion result after currently handled `listItem`.\n      if (child.name == 'ul' || child.name == 'ol') {\n        nextPosition = conversionApi.convertItem(child, nextPosition).modelCursor;\n      } // If it is not a view list element it is a \"regular\" list item content. Its conversion result will\n      // be inserted as `listItem` children (block children may split current `listItem`).\n      else {\n          var result = conversionApi.convertItem(child, writer.createPositionAt(lastListItem, 'end'));\n          var convertedChild = result.modelRange.start.nodeAfter;\n          nextPosition = result.modelCursor; // If there is a block element child being converted it may split the current list item, for example:\n          //\n          //\t\t<li><p>Foo</p></li>\n          //\n          // will be converted to:\n          //\n          //\t\t<listItem></listItem><paragraph>Foo</paragraph><listItem></listItem>\n          //\n          // so we need to update reference to `lastListItem`.\n\n          if (convertedChild && convertedChild.is('element') && !conversionApi.schema.checkChild(lastListItem, convertedChild.name)) {\n            lastListItem = nextPosition.parent; // Depending on the used converter for block elements, usually the position (`result.modelCursor`\n            // marked as # below) points to the second list item after conversion:\n            //\n            //\t\t`<li><p>Foo</p></li>` -> `<listItem></listItem><paragraph>Foo</paragraph><listItem>#</listItem>`\n            //\n            // However, in some cases like autoparagraphing the position is placed on the end of the block element:\n            //\n            //\t\t`<li><h2>Foo</h2></li>` -> `<listItem></listItem><paragraph>Foo#</paragraph><listItem></listItem>`\n            //\n            // We need to check for such cases and use proper list item and position based on it.\n\n            if (!lastListItem.is('listItem') && lastListItem.nextSibling && lastListItem.nextSibling.is('listItem')) {\n              lastListItem = lastListItem.nextSibling;\n              nextPosition = writer.createPositionAt(lastListItem, 'end');\n            }\n          }\n        }\n    }\n  } catch (err) {\n    _didIteratorError8 = true;\n    _iteratorError8 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n        _iterator8.return();\n      }\n    } finally {\n      if (_didIteratorError8) {\n        throw _iteratorError8;\n      }\n    }\n  }\n\n  return nextPosition;\n} // Helper function that seeks for a list item sibling of given model item (or position) which meets given criteria.\n// `options` object may contain one or more of given values (by default they are `false`):\n// `options.sameIndent` - whether sought sibling should have same indent (default = no),\n// `options.smallerIndent` - whether sought sibling should have smaller indent (default = no).\n// `options.indent` - used as reference item when first parameter is a position\n// Either `options.sameIndent` or `options.biggerIndent` should be set to `true`.\n\n\nfunction getSiblingListItem(modelItem, options) {\n  var sameIndent = !!options.sameIndent;\n  var smallerIndent = !!options.smallerIndent;\n  var indent = options.listIndent;\n  var item = modelItem;\n\n  while (item && item.name == 'listItem') {\n    var itemIndent = item.getAttribute('listIndent');\n\n    if (sameIndent && indent == itemIndent || smallerIndent && indent > itemIndent) {\n      return item;\n    }\n\n    item = item.previousSibling;\n  }\n\n  return null;\n} // Helper function that takes two parameters, that are expected to be view list elements, and merges them.\n// The merge happen only if both parameters are UL or OL elements.\n\n\nfunction mergeViewLists(viewWriter, firstList, secondList) {\n  if (firstList && secondList && (firstList.name == 'ul' || firstList.name == 'ol') && firstList.name == secondList.name) {\n    return viewWriter.mergeContainers(viewWriter.createPositionAfter(firstList));\n  }\n\n  return null;\n} // Helper function that takes model list item element `modelItem`, corresponding view list item element `injectedItem`\n// that is not added to the view and is inside a view list element (`ul` or `ol`) and is that's list only child.\n// The list is inserted at correct position (element breaking may be needed) and then merged with it's siblings.\n// See comments below to better understand the algorithm.\n\n\nfunction injectViewList(modelItem, injectedItem, conversionApi, model) {\n  var injectedList = injectedItem.parent;\n  var mapper = conversionApi.mapper;\n  var viewWriter = conversionApi.writer; // Position where view list will be inserted.\n\n  var insertPosition = mapper.toViewPosition(model.createPositionBefore(modelItem)); // 1. Find previous list item that has same or smaller indent. Basically we are looking for a first model item\n  // that is \"parent\" or \"sibling\" of injected model item.\n  // If there is no such list item, it means that injected list item is the first item in \"its list\".\n\n  var refItem = getSiblingListItem(modelItem.previousSibling, {\n    sameIndent: true,\n    smallerIndent: true,\n    listIndent: modelItem.getAttribute('listIndent')\n  });\n  var prevItem = modelItem.previousSibling;\n\n  if (refItem && refItem.getAttribute('listIndent') == modelItem.getAttribute('listIndent')) {\n    // There is a list item with same indent - we found same-level sibling.\n    // Break the list after it. Inserted view item will be inserted in the broken space.\n    var viewItem = mapper.toViewElement(refItem);\n    insertPosition = viewWriter.breakContainer(viewWriter.createPositionAfter(viewItem));\n  } else {\n    // There is no list item with same indent. Check previous model item.\n    if (prevItem && prevItem.name == 'listItem') {\n      // If it is a list item, it has to have lower indent.\n      // It means that inserted item should be added to it as its nested item.\n      insertPosition = mapper.toViewPosition(model.createPositionAt(prevItem, 'end'));\n    } else {\n      // Previous item is not a list item (or does not exist at all).\n      // Just map the position and insert the view item at mapped position.\n      insertPosition = mapper.toViewPosition(model.createPositionBefore(modelItem));\n    }\n  }\n\n  insertPosition = positionAfterUiElements(insertPosition); // Insert the view item.\n\n  viewWriter.insert(insertPosition, injectedList); // 2. Handle possible children of injected model item.\n\n  if (prevItem && prevItem.name == 'listItem') {\n    var prevView = mapper.toViewElement(prevItem);\n    var walkerBoundaries = viewWriter.createRange(viewWriter.createPositionAt(prevView, 0), insertPosition);\n    var walker = walkerBoundaries.getWalker({\n      ignoreElementEnd: true\n    });\n    var _iteratorNormalCompletion9 = true;\n    var _didIteratorError9 = false;\n    var _iteratorError9 = undefined;\n\n    try {\n      for (var _iterator9 = walker[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n        var value = _step9.value;\n\n        if (value.item.is('li')) {\n          var breakPosition = viewWriter.breakContainer(viewWriter.createPositionBefore(value.item));\n          var viewList = value.item.parent;\n          var targetPosition = viewWriter.createPositionAt(injectedItem, 'end');\n          mergeViewLists(viewWriter, targetPosition.nodeBefore, targetPosition.nodeAfter);\n          viewWriter.move(viewWriter.createRangeOn(viewList), targetPosition);\n          walker.position = breakPosition;\n        }\n      }\n    } catch (err) {\n      _didIteratorError9 = true;\n      _iteratorError9 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion9 && _iterator9.return != null) {\n          _iterator9.return();\n        }\n      } finally {\n        if (_didIteratorError9) {\n          throw _iteratorError9;\n        }\n      }\n    }\n  } else {\n    var nextViewList = injectedList.nextSibling;\n\n    if (nextViewList && (nextViewList.is('ul') || nextViewList.is('ol'))) {\n      var lastSubChild = null;\n      var _iteratorNormalCompletion10 = true;\n      var _didIteratorError10 = false;\n      var _iteratorError10 = undefined;\n\n      try {\n        for (var _iterator10 = nextViewList.getChildren()[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n          var child = _step10.value;\n          var modelChild = mapper.toModelElement(child);\n\n          if (modelChild && modelChild.getAttribute('listIndent') > modelItem.getAttribute('listIndent')) {\n            lastSubChild = child;\n          } else {\n            break;\n          }\n        }\n      } catch (err) {\n        _didIteratorError10 = true;\n        _iteratorError10 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion10 && _iterator10.return != null) {\n            _iterator10.return();\n          }\n        } finally {\n          if (_didIteratorError10) {\n            throw _iteratorError10;\n          }\n        }\n      }\n\n      if (lastSubChild) {\n        viewWriter.breakContainer(viewWriter.createPositionAfter(lastSubChild));\n        viewWriter.move(viewWriter.createRangeOn(lastSubChild.parent), viewWriter.createPositionAt(injectedItem, 'end'));\n      }\n    }\n  } // Merge inserted view list with its possible neighbour lists.\n\n\n  mergeViewLists(viewWriter, injectedList, injectedList.nextSibling);\n  mergeViewLists(viewWriter, injectedList.previousSibling, injectedList);\n} // Helper function that takes all children of given `viewRemovedItem` and moves them in a correct place, according\n// to other given parameters.\n\n\nfunction hoistNestedLists(nextIndent, modelRemoveStartPosition, viewRemoveStartPosition, viewRemovedItem, conversionApi, model) {\n  // Find correct previous model list item element.\n  // The element has to have either same or smaller indent than given reference indent.\n  // This will be the model element which will get nested items (if it has smaller indent) or sibling items (if it has same indent).\n  // Keep in mind that such element might not be found, if removed item was the first item.\n  var prevModelItem = getSiblingListItem(modelRemoveStartPosition.nodeBefore, {\n    sameIndent: true,\n    smallerIndent: true,\n    listIndent: nextIndent,\n    foo: 'b'\n  });\n  var mapper = conversionApi.mapper;\n  var viewWriter = conversionApi.writer; // Indent of found element or `null` if the element has not been found.\n\n  var prevIndent = prevModelItem ? prevModelItem.getAttribute('listIndent') : null;\n  var insertPosition;\n\n  if (!prevModelItem) {\n    // If element has not been found, simply insert lists at the position where the removed item was:\n    //\n    // Lorem ipsum.\n    // 1 --------           <--- this is removed, no previous list item, put nested items in place of removed item.\n    //   1.1 --------       <--- this is reference indent.\n    //     1.1.1 --------\n    //     1.1.2 --------\n    //   1.2 --------\n    //\n    // Becomes:\n    //\n    // Lorem ipsum.\n    // 1.1 --------\n    //   1.1.1 --------\n    //   1.1.2 --------\n    // 1.2 --------\n    insertPosition = viewRemoveStartPosition;\n  } else if (prevIndent == nextIndent) {\n    // If element has been found and has same indent as reference indent it means that nested items should\n    // become siblings of found element:\n    //\n    // 1 --------\n    //   1.1 --------\n    //   1.2 --------       <--- this is `prevModelItem`.\n    // 2 --------           <--- this is removed, previous list item has indent same as reference indent.\n    //   2.1 --------       <--- this is reference indent, this and 2.2 should become siblings of 1.2.\n    //   2.2 --------\n    //\n    // Becomes:\n    //\n    // 1 --------\n    //   1.1 --------\n    //   1.2 --------\n    //   2.1 --------\n    //   2.2 --------\n    var prevViewList = mapper.toViewElement(prevModelItem).parent;\n    insertPosition = viewWriter.createPositionAfter(prevViewList);\n  } else {\n    // If element has been found and has smaller indent as reference indent it means that nested items\n    // should become nested items of found item:\n    //\n    // 1 --------           <--- this is `prevModelItem`.\n    //   1.1 --------       <--- this is removed, previous list item has indent smaller than reference indent.\n    //     1.1.1 --------   <--- this is reference indent, this and 1.1.1 should become nested items of 1.\n    //     1.1.2 --------\n    //   1.2 --------\n    //\n    // Becomes:\n    //\n    // 1 --------\n    //   1.1.1 --------\n    //   1.1.2 --------\n    //   1.2 --------\n    //\n    // Note: in this case 1.1.1 have indent 2 while 1 have indent 0. In model that should not be possible,\n    // because following item may have indent bigger only by one. But this is fixed by postfixer.\n    var modelPosition = model.createPositionAt(prevModelItem, 'end');\n    insertPosition = mapper.toViewPosition(modelPosition);\n  }\n\n  insertPosition = positionAfterUiElements(insertPosition); // Handle multiple lists. This happens if list item has nested numbered and bulleted lists. Following lists\n  // are inserted after the first list (no need to recalculate insertion position for them).\n\n  var _arr2 = _toConsumableArray(viewRemovedItem.getChildren());\n\n  for (var _i2 = 0; _i2 < _arr2.length; _i2++) {\n    var child = _arr2[_i2];\n\n    if (child.is('ul') || child.is('ol')) {\n      insertPosition = viewWriter.move(viewWriter.createRangeOn(child), insertPosition).end;\n      mergeViewLists(viewWriter, child, child.nextSibling);\n      mergeViewLists(viewWriter, child.previousSibling, child);\n    }\n  }\n} // Helper function that for given `view.Position`, returns a `view.Position` that is after all `view.UIElement`s that\n// are after given position.\n// For example:\n// <container:p>foo^<ui:span></ui:span><ui:span></ui:span>bar</contain:p>\n// For position ^, a position before \"bar\" will be returned.\n\n\nfunction positionAfterUiElements(viewPosition) {\n  return viewPosition.getLastMatchingPosition(function (value) {\n    return value.item.is('uiElement');\n  });\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module list/listediting\n */\nimport ListCommand from './listcommand';\nimport IndentCommand from './indentcommand';\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport Paragraph from '@ckeditor/ckeditor5-paragraph/src/paragraph';\nimport { cleanList, cleanListItem, modelViewInsertion, modelViewChangeType, modelViewMergeAfter, modelViewRemove, modelViewSplitOnInsert, modelViewChangeIndent, modelChangePostFixer, modelIndentPasteFixer, viewModelConverter, modelToViewPosition, viewToModelPosition } from './converters';\n/**\n * The engine of the list feature. It handles creating, editing and removing lists and list items.\n *\n * It registers the `'numberedList'`, `'bulletedList'`, `'indentList'` and `'outdentList'` commands.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar ListEditing =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(ListEditing, _Plugin);\n\n  function ListEditing() {\n    _classCallCheck(this, ListEditing);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ListEditing).apply(this, arguments));\n  }\n\n  _createClass(ListEditing, [{\n    key: \"init\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function init() {\n      var _this = this;\n\n      var editor = this.editor; // Schema.\n      // Note: in case `$block` will ever be allowed in `listItem`, keep in mind that this feature\n      // uses `Selection#getSelectedBlocks()` without any additional processing to obtain all selected list items.\n      // If there are blocks allowed inside list item, algorithms using `getSelectedBlocks()` will have to be modified.\n\n      editor.model.schema.register('listItem', {\n        inheritAllFrom: '$block',\n        allowAttributes: ['listType', 'listIndent']\n      }); // Converters.\n\n      var data = editor.data;\n      var editing = editor.editing;\n      editor.model.document.registerPostFixer(function (writer) {\n        return modelChangePostFixer(editor.model, writer);\n      });\n      editing.mapper.registerViewToModelLength('li', getViewListItemLength);\n      data.mapper.registerViewToModelLength('li', getViewListItemLength);\n      editing.mapper.on('modelToViewPosition', modelToViewPosition(editing.view));\n      editing.mapper.on('viewToModelPosition', viewToModelPosition(editor.model));\n      data.mapper.on('modelToViewPosition', modelToViewPosition(editing.view));\n      editing.downcastDispatcher.on('insert', modelViewSplitOnInsert, {\n        priority: 'high'\n      });\n      editing.downcastDispatcher.on('insert:listItem', modelViewInsertion(editor.model));\n      data.downcastDispatcher.on('insert', modelViewSplitOnInsert, {\n        priority: 'high'\n      });\n      data.downcastDispatcher.on('insert:listItem', modelViewInsertion(editor.model));\n      editing.downcastDispatcher.on('attribute:listType:listItem', modelViewChangeType);\n      data.downcastDispatcher.on('attribute:listType:listItem', modelViewChangeType);\n      editing.downcastDispatcher.on('attribute:listIndent:listItem', modelViewChangeIndent(editor.model));\n      data.downcastDispatcher.on('attribute:listIndent:listItem', modelViewChangeIndent(editor.model));\n      editing.downcastDispatcher.on('remove:listItem', modelViewRemove(editor.model));\n      editing.downcastDispatcher.on('remove', modelViewMergeAfter, {\n        priority: 'low'\n      });\n      data.downcastDispatcher.on('remove:listItem', modelViewRemove(editor.model));\n      data.downcastDispatcher.on('remove', modelViewMergeAfter, {\n        priority: 'low'\n      });\n      data.upcastDispatcher.on('element:ul', cleanList, {\n        priority: 'high'\n      });\n      data.upcastDispatcher.on('element:ol', cleanList, {\n        priority: 'high'\n      });\n      data.upcastDispatcher.on('element:li', cleanListItem, {\n        priority: 'high'\n      });\n      data.upcastDispatcher.on('element:li', viewModelConverter); // Fix indentation of pasted items.\n\n      editor.model.on('insertContent', modelIndentPasteFixer, {\n        priority: 'high'\n      }); // Register commands for numbered and bulleted list.\n\n      editor.commands.add('numberedList', new ListCommand(editor, 'numbered'));\n      editor.commands.add('bulletedList', new ListCommand(editor, 'bulleted')); // Register commands for indenting.\n\n      editor.commands.add('indentList', new IndentCommand(editor, 'forward'));\n      editor.commands.add('outdentList', new IndentCommand(editor, 'backward'));\n      var viewDocument = this.editor.editing.view.document; // Overwrite default Enter key behavior.\n      // If Enter key is pressed with selection collapsed in empty list item, outdent it instead of breaking it.\n\n      this.listenTo(viewDocument, 'enter', function (evt, data) {\n        var doc = _this.editor.model.document;\n        var positionParent = doc.selection.getLastPosition().parent;\n\n        if (doc.selection.isCollapsed && positionParent.name == 'listItem' && positionParent.isEmpty) {\n          _this.editor.execute('outdentList');\n\n          data.preventDefault();\n          evt.stop();\n        }\n      }); // Overwrite default Backspace key behavior.\n      // If Backspace key is pressed with selection collapsed on first position in first list item, outdent it. #83\n\n      this.listenTo(viewDocument, 'delete', function (evt, data) {\n        // Check conditions from those that require less computations like those immediately available.\n        if (data.direction !== 'backward') {\n          return;\n        }\n\n        var selection = _this.editor.model.document.selection;\n\n        if (!selection.isCollapsed) {\n          return;\n        }\n\n        var firstPosition = selection.getFirstPosition();\n\n        if (!firstPosition.isAtStart) {\n          return;\n        }\n\n        var positionParent = firstPosition.parent;\n\n        if (positionParent.name !== 'listItem') {\n          return;\n        }\n\n        var previousIsAListItem = positionParent.previousSibling && positionParent.previousSibling.name === 'listItem';\n\n        if (previousIsAListItem) {\n          return;\n        }\n\n        _this.editor.execute('outdentList');\n\n        data.preventDefault();\n        evt.stop();\n      }, {\n        priority: 'high'\n      });\n\n      var getCommandExecuter = function getCommandExecuter(commandName) {\n        return function (data, cancel) {\n          var command = _this.editor.commands.get(commandName);\n\n          if (command.isEnabled) {\n            _this.editor.execute(commandName);\n\n            cancel();\n          }\n        };\n      };\n\n      this.editor.keystrokes.set('Tab', getCommandExecuter('indentList'));\n      this.editor.keystrokes.set('Shift+Tab', getCommandExecuter('outdentList'));\n    }\n  }], [{\n    key: \"requires\",\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return [Paragraph];\n    }\n  }]);\n\n  return ListEditing;\n}(Plugin);\n\nexport { ListEditing as default };\n\nfunction getViewListItemLength(element) {\n  var length = 1;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = element.getChildren()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var child = _step.value;\n\n      if (child.name == 'ul' || child.name == 'ol') {\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = child.getChildren()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var item = _step2.value;\n            length += getViewListItemLength(item);\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return length;\n}","function _typeof(obj) {\n    if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {\n        _typeof = function _typeof(obj) {\n            return typeof obj;\n        };\n    } else {\n        _typeof = function _typeof(obj) {\n            return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n        };\n    }\n    return _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError('Cannot call a class as a function');\n    }\n}\nfunction _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if ('value' in descriptor)\n            descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps)\n        _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps)\n        _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === 'object' || typeof call === 'function')) {\n        return call;\n    }\n    return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError('this hasn\\'t been initialised - super() hasn\\'t been called');\n    }\n    return self;\n}\nfunction _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== 'function' && superClass !== null) {\n        throw new TypeError('Super expression must either be null or a function');\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass)\n        _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return _setPrototypeOf(o, p);\n}\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n/**\n * @module list/listui\n */\nimport numberedListIcon from '../theme/icons/numberedlist.svg';\nimport bulletedListIcon from '../theme/icons/bulletedlist.svg';\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\n/**\n * The list UI feature. It introduces the `'numberedList'` and `'bulletedList'` buttons that\n * allow to convert paragraphs to and from list items and indent or outdent them.\n *\n * @extends module:core/plugin~Plugin\n */\nvar ListUI = /*#__PURE__*/\nfunction (_Plugin) {\n    _inherits(ListUI, _Plugin);\n    function ListUI() {\n        _classCallCheck(this, ListUI);\n        return _possibleConstructorReturn(this, _getPrototypeOf(ListUI).apply(this, arguments));\n    }\n    _createClass(ListUI, [\n        {\n            key: 'init',\n            /**\n     * @inheritDoc\n     */\n            value: function init() {\n                // Create two buttons and link them with numberedList and bulletedList commands.\n                var t = this.editor.t;\n                this._addButton('numberedList', t('d'), numberedListIcon);\n                this._addButton('bulletedList', t('e'), bulletedListIcon);\n            }    /**\n     * Helper method for initializing a button and linking it with an appropriate command.\n     *\n     * @private\n     * @param {String} commandName The name of the command.\n     * @param {Object} label The button label.\n     * @param {String} icon The source of the icon.\n     */\n        },\n        {\n            key: '_addButton',\n            value: function _addButton(commandName, label, icon) {\n                var _this = this;\n                var editor = this.editor;\n                editor.ui.componentFactory.add(commandName, function (locale) {\n                    var command = editor.commands.get(commandName);\n                    var buttonView = new ButtonView(locale);\n                    buttonView.set({\n                        label: label,\n                        icon: icon,\n                        tooltip: true\n                    });\n                    // Bind button model to command.\n                    buttonView.bind('isOn', 'isEnabled').to(command, 'value', 'isEnabled');\n                    // Execute command.\n                    _this.listenTo(buttonView, 'execute', function () {\n                        return editor.execute(commandName);\n                    });\n                    return buttonView;\n                });\n            }\n        }\n    ]);\n    return ListUI;\n}(Plugin);\nexport {\n    ListUI as default\n};","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module list/list\n */\nimport ListEditing from './listediting';\nimport ListUI from './listui';\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n/**\n * The list feature.\n *\n * This is a \"glue\" plugin which loads the {@link module:list/listediting~ListEditing list editing feature}\n * and {@link module:list/listui~ListUI list UI feature}.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar List =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(List, _Plugin);\n\n  function List() {\n    _classCallCheck(this, List);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(List).apply(this, arguments));\n  }\n\n  _createClass(List, null, [{\n    key: \"requires\",\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return [ListEditing, ListUI];\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"pluginName\",\n    get: function get() {\n      return 'List';\n    }\n  }]);\n\n  return List;\n}(Plugin);\n\nexport { List as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module heading/headingcommand\n */\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport first from '@ckeditor/ckeditor5-utils/src/first';\n/**\n * The heading command. It is used by the {@link module:heading/heading~Heading heading feature} to apply headings.\n *\n * @extends module:core/command~Command\n */\n\nvar HeadingCommand =\n/*#__PURE__*/\nfunction (_Command) {\n  _inherits(HeadingCommand, _Command);\n\n  /**\n   * Creates an instance of the command.\n   *\n   * @param {module:core/editor/editor~Editor} editor Editor instance.\n   * @param {Array.<String>} modelElements Names of the element which this command can apply in the model.\n   */\n  function HeadingCommand(editor, modelElements) {\n    var _this;\n\n    _classCallCheck(this, HeadingCommand);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HeadingCommand).call(this, editor));\n    /**\n     * If the selection starts in a heading (which {@link #modelElements is supported by this command})\n     * the value is set to the name of that heading model element.\n     * It is  set to `false` otherwise.\n     *\n     * @observable\n     * @readonly\n     * @member {Boolean|String} #value\n     */\n\n    /**\n     * Set of defined model's elements names that this command support.\n     * See {@link module:heading/heading~HeadingOption}.\n     *\n     * @readonly\n     * @member {Array.<String>}\n     */\n\n    _this.modelElements = modelElements;\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(HeadingCommand, [{\n    key: \"refresh\",\n    value: function refresh() {\n      var _this2 = this;\n\n      var block = first(this.editor.model.document.selection.getSelectedBlocks());\n      this.value = !!block && this.modelElements.includes(block.name) && block.name;\n      this.isEnabled = !!block && this.modelElements.some(function (heading) {\n        return checkCanBecomeHeading(block, heading, _this2.editor.model.schema);\n      });\n    }\n    /**\n     * Executes the command. Applies the heading to the selected blocks or, if the first selected\n     * block is a heading already, turns selected headings (of this level only) to paragraphs.\n     *\n     * @param {Object} options\n     * @param {String} options.value Name of the element which this command will apply in the model.\n     * @fires execute\n     */\n\n  }, {\n    key: \"execute\",\n    value: function execute(options) {\n      var model = this.editor.model;\n      var document = model.document;\n      var modelElement = options.value;\n      model.change(function (writer) {\n        var blocks = Array.from(document.selection.getSelectedBlocks()).filter(function (block) {\n          return checkCanBecomeHeading(block, modelElement, model.schema);\n        });\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = blocks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var block = _step.value;\n\n            if (!block.is(modelElement)) {\n              writer.rename(block, modelElement);\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      });\n    }\n  }]);\n\n  return HeadingCommand;\n}(Command); // Checks whether the given block can be replaced by a specific heading.\n//\n// @private\n// @param {module:engine/model/element~Element} block A block to be tested.\n// @param {module:heading/headingcommand~HeadingCommand#modelElement} heading Command element name in the model.\n// @param {module:engine/model/schema~Schema} schema The schema of the document.\n// @returns {Boolean}\n\n\nexport { HeadingCommand as default };\n\nfunction checkCanBecomeHeading(block, heading, schema) {\n  return schema.checkChild(block.parent, heading) && !schema.isObject(block);\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module heading/headingediting\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport Paragraph from '@ckeditor/ckeditor5-paragraph/src/paragraph';\nimport HeadingCommand from './headingcommand';\nimport priorities from '@ckeditor/ckeditor5-utils/src/priorities';\nimport { upcastElementToElement } from '@ckeditor/ckeditor5-engine/src/conversion/upcast-converters';\nvar defaultModelElement = 'paragraph';\n/**\n * The headings engine feature. It handles switching between block formats &ndash; headings and paragraph.\n * This class represents the engine part of the heading feature. See also {@link module:heading/heading~Heading}.\n * It introduces `heading1`-`headingN` commands which allow to convert paragraphs into headings.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar HeadingEditing =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(HeadingEditing, _Plugin);\n\n  /**\n   * @inheritDoc\n   */\n  function HeadingEditing(editor) {\n    var _this;\n\n    _classCallCheck(this, HeadingEditing);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HeadingEditing).call(this, editor));\n    editor.config.define('heading', {\n      options: [{\n        model: 'paragraph',\n        title: 'Paragraph',\n        class: 'ck-heading_paragraph'\n      }, {\n        model: 'heading1',\n        view: 'h2',\n        title: 'Heading 1',\n        class: 'ck-heading_heading1'\n      }, {\n        model: 'heading2',\n        view: 'h3',\n        title: 'Heading 2',\n        class: 'ck-heading_heading2'\n      }, {\n        model: 'heading3',\n        view: 'h4',\n        title: 'Heading 3',\n        class: 'ck-heading_heading3'\n      }]\n    });\n    return _this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  _createClass(HeadingEditing, [{\n    key: \"init\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function init() {\n      var editor = this.editor;\n      var options = editor.config.get('heading.options');\n      var modelElements = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = options[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var option = _step.value;\n\n          // Skip paragraph - it is defined in required Paragraph feature.\n          if (option.model !== defaultModelElement) {\n            // Schema.\n            editor.model.schema.register(option.model, {\n              inheritAllFrom: '$block'\n            });\n            editor.conversion.elementToElement(option);\n            modelElements.push(option.model);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      this._addDefaultH1Conversion(editor); // Register the heading command for this option.\n\n\n      editor.commands.add('heading', new HeadingCommand(editor, modelElements));\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"afterInit\",\n    value: function afterInit() {\n      // If the enter command is added to the editor, alter its behavior.\n      // Enter at the end of a heading element should create a paragraph.\n      var editor = this.editor;\n      var enterCommand = editor.commands.get('enter');\n      var options = editor.config.get('heading.options');\n\n      if (enterCommand) {\n        this.listenTo(enterCommand, 'afterExecute', function (evt, data) {\n          var positionParent = editor.model.document.selection.getFirstPosition().parent;\n          var isHeading = options.some(function (option) {\n            return positionParent.is(option.model);\n          });\n\n          if (isHeading && !positionParent.is(defaultModelElement) && positionParent.childCount === 0) {\n            data.writer.rename(positionParent, defaultModelElement);\n          }\n        });\n      }\n    }\n    /**\n     * Adds default conversion for `h1` -> `heading1` with a low priority.\n     *\n     * @private\n     * @param {module:core/editor/editor~Editor} editor Editor instance on which to add the `h1` conversion.\n     */\n\n  }, {\n    key: \"_addDefaultH1Conversion\",\n    value: function _addDefaultH1Conversion(editor) {\n      editor.conversion.for('upcast').add(upcastElementToElement({\n        model: 'heading1',\n        view: 'h1',\n        // With a `low` priority, `paragraph` plugin autoparagraphing mechanism is executed. Make sure\n        // this listener is called before it. If not, `h1` will be transformed into a paragraph.\n        converterPriority: priorities.get('low') + 1\n      }));\n    }\n  }], [{\n    key: \"requires\",\n    get: function get() {\n      return [Paragraph];\n    }\n  }]);\n\n  return HeadingEditing;\n}(Plugin);\n\nexport { HeadingEditing as default };","function _typeof(obj) {\n    if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {\n        _typeof = function _typeof(obj) {\n            return typeof obj;\n        };\n    } else {\n        _typeof = function _typeof(obj) {\n            return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n        };\n    }\n    return _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError('Cannot call a class as a function');\n    }\n}\nfunction _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if ('value' in descriptor)\n            descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps)\n        _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps)\n        _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === 'object' || typeof call === 'function')) {\n        return call;\n    }\n    return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError('this hasn\\'t been initialised - super() hasn\\'t been called');\n    }\n    return self;\n}\nfunction _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== 'function' && superClass !== null) {\n        throw new TypeError('Super expression must either be null or a function');\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass)\n        _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return _setPrototypeOf(o, p);\n}\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n/**\n * @module heading/headingui\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport Model from '@ckeditor/ckeditor5-ui/src/model';\nimport {\n    createDropdown,\n    addListToDropdown\n} from '@ckeditor/ckeditor5-ui/src/dropdown/utils';\nimport { getLocalizedOptions } from './utils';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport '../theme/heading.css';\n/**\n * The headings UI feature. It introduces the `headings` dropdown.\n *\n * @extends module:core/plugin~Plugin\n */\nvar HeadingUI = /*#__PURE__*/\nfunction (_Plugin) {\n    _inherits(HeadingUI, _Plugin);\n    function HeadingUI() {\n        _classCallCheck(this, HeadingUI);\n        return _possibleConstructorReturn(this, _getPrototypeOf(HeadingUI).apply(this, arguments));\n    }\n    _createClass(HeadingUI, [{\n            key: 'init',\n            /**\n     * @inheritDoc\n     */\n            value: function init() {\n                var _this = this;\n                var editor = this.editor;\n                var t = editor.t;\n                var options = getLocalizedOptions(editor);\n                var defaultTitle = t('f');\n                var dropdownTooltip = t('g');\n                // Register UI component.\n                editor.ui.componentFactory.add('heading', function (locale) {\n                    var titles = {};\n                    var itemDefinitions = new Collection();\n                    var headingCommand = editor.commands.get('heading');\n                    var paragraphCommand = editor.commands.get('paragraph');\n                    var commands = [headingCommand];\n                    var _iteratorNormalCompletion = true;\n                    var _didIteratorError = false;\n                    var _iteratorError = undefined;\n                    try {\n                        var _loop = function _loop() {\n                            var option = _step.value;\n                            var def = {\n                                type: 'button',\n                                model: new Model({\n                                    label: option.title,\n                                    class: option.class,\n                                    withText: true\n                                })\n                            };\n                            if (option.model === 'paragraph') {\n                                def.model.bind('isOn').to(paragraphCommand, 'value');\n                                def.model.set('commandName', 'paragraph');\n                                commands.push(paragraphCommand);\n                            } else {\n                                def.model.bind('isOn').to(headingCommand, 'value', function (value) {\n                                    return value === option.model;\n                                });\n                                def.model.set({\n                                    commandName: 'heading',\n                                    commandValue: option.model\n                                });\n                            }\n                            // Add the option to the collection.\n                            itemDefinitions.add(def);\n                            titles[option.model] = option.title;\n                        };\n                        for (var _iterator = options[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                            _loop();\n                        }\n                    } catch (err) {\n                        _didIteratorError = true;\n                        _iteratorError = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                                _iterator.return();\n                            }\n                        } finally {\n                            if (_didIteratorError) {\n                                throw _iteratorError;\n                            }\n                        }\n                    }\n                    var dropdownView = createDropdown(locale);\n                    addListToDropdown(dropdownView, itemDefinitions);\n                    dropdownView.buttonView.set({\n                        isOn: false,\n                        withText: true,\n                        tooltip: dropdownTooltip\n                    });\n                    dropdownView.extendTemplate({ attributes: { class: ['ck-heading-dropdown'] } });\n                    dropdownView.bind('isEnabled').toMany(commands, 'isEnabled', function () {\n                        for (var _len = arguments.length, areEnabled = new Array(_len), _key = 0; _key < _len; _key++) {\n                            areEnabled[_key] = arguments[_key];\n                        }\n                        return areEnabled.some(function (isEnabled) {\n                            return isEnabled;\n                        });\n                    });\n                    dropdownView.buttonView.bind('label').to(headingCommand, 'value', paragraphCommand, 'value', function (value, para) {\n                        var whichModel = value || para && 'paragraph';\n                        // If none of the commands is active, display default title.\n                        return titles[whichModel] ? titles[whichModel] : defaultTitle;\n                    });\n                    // Execute command when an item from the dropdown is selected.\n                    _this.listenTo(dropdownView, 'execute', function (evt) {\n                        editor.execute(evt.source.commandName, evt.source.commandValue ? { value: evt.source.commandValue } : undefined);\n                        editor.editing.view.focus();\n                    });\n                    return dropdownView;\n                });\n            }\n        }]);\n    return HeadingUI;\n}(Plugin);\nexport {\n    HeadingUI as default\n};","/**\n * Returns heading options as defined in `config.heading.options` but processed to consider\n * editor localization, i.e. to display {@link module:heading/heading~HeadingOption}\n * in the correct language.\n *\n * Note: The reason behind this method is that there's no way to use {@link module:utils/locale~Locale#t}\n * when the user config is defined because the editor does not exist yet.\n *\n * @param {module:core/editor/editor~Editor} editor\n * @returns {Array.<module:heading/heading~HeadingOption>}.\n */\nexport function getLocalizedOptions(editor) {\n    var t = editor.t;\n    var localizedTitles = {\n        Paragraph: t('be'),\n        'Heading 1': t('bf'),\n        'Heading 2': t('bg'),\n        'Heading 3': t('bh')\n    };\n    return editor.config.get('heading.options').map(function (option) {\n        var title = localizedTitles[option.title];\n        if (title && title != option.title) {\n            // Clone the option to avoid altering the original `config.heading.options`.\n            option = Object.assign({}, option, { title: title });\n        }\n        return option;\n    });\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module heading/heading\n */\nimport HeadingEditing from './headingediting';\nimport HeadingUI from './headingui';\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport '../theme/heading.css';\n/**\n * The headings feature.\n *\n * For a detailed overview, check the {@glink features/headings Headings feature documentation}\n * and the {@glink api/heading package page}.\n *\n * This is a \"glue\" plugin which loads the {@link module:heading/headingediting~HeadingEditing heading editing feature}\n * and {@link module:heading/headingui~HeadingUI heading UI feature}.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar Heading =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(Heading, _Plugin);\n\n  function Heading() {\n    _classCallCheck(this, Heading);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Heading).apply(this, arguments));\n  }\n\n  _createClass(Heading, null, [{\n    key: \"requires\",\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return [HeadingEditing, HeadingUI];\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"pluginName\",\n    get: function get() {\n      return 'Heading';\n    }\n  }]);\n\n  return Heading;\n}(Plugin);\n/**\n * The configuration of the heading feature. Introduced by the {@link module:heading/headingediting~HeadingEditing} feature.\n *\n * Read more in {@link module:heading/heading~HeadingConfig}.\n *\n * @member {module:heading/heading~HeadingConfig} module:core/editor/editorconfig~EditorConfig#heading\n */\n\n/**\n * The configuration of the heading feature.\n * The option is used by the {@link module:heading/headingediting~HeadingEditing} feature.\n *\n *\t\tClassicEditor\n *\t\t\t.create( {\n * \t\t\t\theading: ... // Heading feature config.\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * See {@link module:core/editor/editorconfig~EditorConfig all editor options}.\n *\n * @interface HeadingConfig\n */\n\n/**\n * The available heading options.\n *\n * The default value is:\n *\n *\t\tconst headingConfig = {\n *\t\t\toptions: [\n *\t\t\t\t{ model: 'paragraph', title: 'Paragraph', class: 'ck-heading_paragraph' },\n *\t\t\t\t{ model: 'heading1', view: 'h2', title: 'Heading 1', class: 'ck-heading_heading1' },\n *\t\t\t\t{ model: 'heading2', view: 'h3', title: 'Heading 2', class: 'ck-heading_heading2' },\n *\t\t\t\t{ model: 'heading3', view: 'h4', title: 'Heading 3', class: 'ck-heading_heading3' }\n *\t\t\t]\n *\t\t};\n *\n * It defines 3 levels of headings. In the editor model they will use `heading1`, `heading2`, and `heading3` elements.\n * Their respective view elements (so the elements output by the editor) will be: `h2`, `h3`, and `h4`. This means that\n * if you choose \"Heading 1\" in the headings dropdown the editor will turn the current block to `<heading1>` in the model\n * which will result in rendering (and outputting to data) the `<h2>` element.\n *\n * The `title` and `class` properties will be used by the `headings` dropdown to render available options.\n * Usually, the first option in the headings dropdown is the \"Paragraph\" option, hence it's also defined on the list.\n * However, you don't need to define its view representation because it's handled by\n * the {@link module:paragraph/paragraph~Paragraph} feature (which is required by\n * the {@link module:heading/headingediting~HeadingEditing} feature).\n *\n * You can **read more** about configuring heading levels and **see more examples** in\n * the {@glink features/headings Headings} guide.\n *\n * Note: In the model you should always start from `heading1`, regardless of how the headings are represented in the view.\n * That's assumption is used by features like {@link module:autoformat/autoformat~Autoformat} to know which element\n * they should use when applying the first level heading.\n *\n * The defined headings are also available as values passed to the `'heading'` command under their model names.\n * For example, the below code will apply `<heading1>` to the current selection:\n *\n *\t\teditor.execute( 'heading', { value: 'heading1' } );\n *\n * @member {Array.<module:heading/heading~HeadingOption>} module:heading/heading~HeadingConfig#options\n */\n\n/**\n * Heading option descriptor.\n *\n * @typedef {Object} module:heading/heading~HeadingOption\n * @property {String} model Name of the model element to convert.\n * @property {module:engine/view/elementdefinition~ElementDefinition} view Definition of a view element to convert from/to.\n * @property {String} title The user-readable title of the option.\n * @property {String} class The class which will be added to the dropdown item representing this option.\n * @property {String} [icon] Icon used by {@link module:heading/headingbuttonsui~HeadingButtonsUI}. It can be omitted when using\n * the default configuration.\n * @extends module:engine/conversion/conversion~ConverterDefinition\n */\n\n\nexport { Heading as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module block-quote/blockquotecommand\n */\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport first from '@ckeditor/ckeditor5-utils/src/first';\n/**\n * The block quote command plugin.\n *\n * @extends module:core/command~Command\n */\n\nvar BlockQuoteCommand =\n/*#__PURE__*/\nfunction (_Command) {\n  _inherits(BlockQuoteCommand, _Command);\n\n  function BlockQuoteCommand() {\n    _classCallCheck(this, BlockQuoteCommand);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BlockQuoteCommand).apply(this, arguments));\n  }\n\n  _createClass(BlockQuoteCommand, [{\n    key: \"refresh\",\n\n    /**\n     * Whether the selection starts in a block quote.\n     *\n     * @observable\n     * @readonly\n     * @member {Boolean} #value\n     */\n\n    /**\n     * @inheritDoc\n     */\n    value: function refresh() {\n      this.value = this._getValue();\n      this.isEnabled = this._checkEnabled();\n    }\n    /**\n     * Executes the command. When the command {@link #value is on}, all block quotes within\n     * the selection will be removed. If it is off, all selected blocks will be wrapped with\n     * a block quote.\n     *\n     * @fires execute\n     */\n\n  }, {\n    key: \"execute\",\n    value: function execute() {\n      var _this = this;\n\n      var model = this.editor.model;\n      var doc = model.document;\n      var schema = model.schema;\n      var blocks = Array.from(doc.selection.getSelectedBlocks());\n      model.change(function (writer) {\n        if (_this.value) {\n          _this._removeQuote(writer, blocks.filter(findQuote));\n        } else {\n          var blocksToQuote = blocks.filter(function (block) {\n            // Already quoted blocks needs to be considered while quoting too\n            // in order to reuse their <bQ> elements.\n            return findQuote(block) || checkCanBeQuoted(schema, block);\n          });\n\n          _this._applyQuote(writer, blocksToQuote);\n        }\n      });\n    }\n    /**\n     * Checks the command's {@link #value}.\n     *\n     * @private\n     * @returns {Boolean} The current value.\n     */\n\n  }, {\n    key: \"_getValue\",\n    value: function _getValue() {\n      var firstBlock = first(this.editor.model.document.selection.getSelectedBlocks()); // In the current implementation, the block quote must be an immediate parent of a block element.\n\n      return !!(firstBlock && findQuote(firstBlock));\n    }\n    /**\n     * Checks whether the command can be enabled in the current context.\n     *\n     * @private\n     * @returns {Boolean} Whether the command should be enabled.\n     */\n\n  }, {\n    key: \"_checkEnabled\",\n    value: function _checkEnabled() {\n      if (this.value) {\n        return true;\n      }\n\n      var selection = this.editor.model.document.selection;\n      var schema = this.editor.model.schema;\n      var firstBlock = first(selection.getSelectedBlocks());\n\n      if (!firstBlock) {\n        return false;\n      }\n\n      return checkCanBeQuoted(schema, firstBlock);\n    }\n    /**\n     * Removes the quote from given blocks.\n     *\n     * If blocks which are supposed to be \"unquoted\" are in the middle of a quote,\n     * start it or end it, then the quote will be split (if needed) and the blocks\n     * will be moved out of it, so other quoted blocks remained quoted.\n     *\n     * @private\n     * @param {module:engine/model/writer~Writer} writer\n     * @param {Array.<module:engine/model/element~Element>} blocks\n     */\n\n  }, {\n    key: \"_removeQuote\",\n    value: function _removeQuote(writer, blocks) {\n      // Unquote all groups of block. Iterate in the reverse order to not break following ranges.\n      getRangesOfBlockGroups(writer, blocks).reverse().forEach(function (groupRange) {\n        if (groupRange.start.isAtStart && groupRange.end.isAtEnd) {\n          writer.unwrap(groupRange.start.parent);\n          return;\n        } // The group of blocks are at the beginning of an <bQ> so let's move them left (out of the <bQ>).\n\n\n        if (groupRange.start.isAtStart) {\n          var positionBefore = writer.createPositionBefore(groupRange.start.parent);\n          writer.move(groupRange, positionBefore);\n          return;\n        } // The blocks are in the middle of an <bQ> so we need to split the <bQ> after the last block\n        // so we move the items there.\n\n\n        if (!groupRange.end.isAtEnd) {\n          writer.split(groupRange.end);\n        } // Now we are sure that groupRange.end.isAtEnd is true, so let's move the blocks right.\n\n\n        var positionAfter = writer.createPositionAfter(groupRange.end.parent);\n        writer.move(groupRange, positionAfter);\n      });\n    }\n    /**\n     * Applies the quote to given blocks.\n     *\n     * @private\n     * @param {module:engine/model/writer~Writer} writer\n     * @param {Array.<module:engine/model/element~Element>} blocks\n     */\n\n  }, {\n    key: \"_applyQuote\",\n    value: function _applyQuote(writer, blocks) {\n      var quotesToMerge = []; // Quote all groups of block. Iterate in the reverse order to not break following ranges.\n\n      getRangesOfBlockGroups(writer, blocks).reverse().forEach(function (groupRange) {\n        var quote = findQuote(groupRange.start);\n\n        if (!quote) {\n          quote = writer.createElement('blockQuote');\n          writer.wrap(groupRange, quote);\n        }\n\n        quotesToMerge.push(quote);\n      }); // Merge subsequent <bQ> elements. Reverse the order again because this time we want to go through\n      // the <bQ> elements in the source order (due to how merge works – it moves the right element's content\n      // to the first element and removes the right one. Since we may need to merge a couple of subsequent `<bQ>` elements\n      // we want to keep the reference to the first (furthest left) one.\n\n      quotesToMerge.reverse().reduce(function (currentQuote, nextQuote) {\n        if (currentQuote.nextSibling == nextQuote) {\n          writer.merge(writer.createPositionAfter(currentQuote));\n          return currentQuote;\n        }\n\n        return nextQuote;\n      });\n    }\n  }]);\n\n  return BlockQuoteCommand;\n}(Command);\n\nexport { BlockQuoteCommand as default };\n\nfunction findQuote(elementOrPosition) {\n  return elementOrPosition.parent.name == 'blockQuote' ? elementOrPosition.parent : null;\n} // Returns a minimal array of ranges containing groups of subsequent blocks.\n//\n// content:         abcdefgh\n// blocks:          [ a, b, d , f, g, h ]\n// output ranges:   [ab]c[d]e[fgh]\n//\n// @param {Array.<module:engine/model/element~Element>} blocks\n// @returns {Array.<module:engine/model/range~Range>}\n\n\nfunction getRangesOfBlockGroups(writer, blocks) {\n  var startPosition;\n  var i = 0;\n  var ranges = [];\n\n  while (i < blocks.length) {\n    var block = blocks[i];\n    var nextBlock = blocks[i + 1];\n\n    if (!startPosition) {\n      startPosition = writer.createPositionBefore(block);\n    }\n\n    if (!nextBlock || block.nextSibling != nextBlock) {\n      ranges.push(writer.createRange(startPosition, writer.createPositionAfter(block)));\n      startPosition = null;\n    }\n\n    i++;\n  }\n\n  return ranges;\n} // Checks whether <bQ> can wrap the block.\n\n\nfunction checkCanBeQuoted(schema, block) {\n  // TMP will be replaced with schema.checkWrap().\n  var isBQAllowed = schema.checkChild(block.parent, 'blockQuote');\n  var isBlockAllowedInBQ = schema.checkChild(['$root', 'blockQuote'], block);\n  return isBQAllowed && isBlockAllowedInBQ;\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module block-quote/blockquoteediting\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport BlockQuoteCommand from './blockquotecommand';\n/**\n * The block quote editing.\n *\n * Introduces the `'blockQuote'` command and the `'blockQuote'` model element.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar BlockQuoteEditing =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(BlockQuoteEditing, _Plugin);\n\n  function BlockQuoteEditing() {\n    _classCallCheck(this, BlockQuoteEditing);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BlockQuoteEditing).apply(this, arguments));\n  }\n\n  _createClass(BlockQuoteEditing, [{\n    key: \"init\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function init() {\n      var editor = this.editor;\n      var schema = editor.model.schema;\n      editor.commands.add('blockQuote', new BlockQuoteCommand(editor));\n      schema.register('blockQuote', {\n        allowWhere: '$block',\n        allowContentOf: '$root'\n      }); // Disallow blockQuote in blockQuote.\n\n      schema.addChildCheck(function (ctx, childDef) {\n        if (ctx.endsWith('blockQuote') && childDef.name == 'blockQuote') {\n          return false;\n        }\n      });\n      editor.conversion.elementToElement({\n        model: 'blockQuote',\n        view: 'blockquote'\n      }); // Postfixer which cleans incorrect model states connected with block quotes.\n\n      editor.model.document.registerPostFixer(function (writer) {\n        var changes = editor.model.document.differ.getChanges();\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = changes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var entry = _step.value;\n\n            if (entry.type == 'insert') {\n              var element = entry.position.nodeAfter;\n\n              if (!element) {\n                // We are inside a text node.\n                continue;\n              }\n\n              if (element.is('blockQuote') && element.isEmpty) {\n                // Added an empty blockQuote - remove it.\n                writer.remove(element);\n                return true;\n              } else if (element.is('blockQuote') && !schema.checkChild(entry.position, element)) {\n                // Added a blockQuote in incorrect place - most likely inside another blockQuote. Unwrap it\n                // so the content inside is not lost.\n                writer.unwrap(element);\n                return true;\n              } else if (element.is('element')) {\n                // Just added an element. Check its children to see if there are no nested blockQuotes somewhere inside.\n                var range = writer.createRangeIn(element);\n                var _iteratorNormalCompletion2 = true;\n                var _didIteratorError2 = false;\n                var _iteratorError2 = undefined;\n\n                try {\n                  for (var _iterator2 = range.getItems()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var child = _step2.value;\n\n                    if (child.is('blockQuote') && !schema.checkChild(writer.createPositionBefore(child), child)) {\n                      writer.unwrap(child);\n                      return true;\n                    }\n                  }\n                } catch (err) {\n                  _didIteratorError2 = true;\n                  _iteratorError2 = err;\n                } finally {\n                  try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                      _iterator2.return();\n                    }\n                  } finally {\n                    if (_didIteratorError2) {\n                      throw _iteratorError2;\n                    }\n                  }\n                }\n              }\n            } else if (entry.type == 'remove') {\n              var parent = entry.position.parent;\n\n              if (parent.is('blockQuote') && parent.isEmpty) {\n                // Something got removed and now blockQuote is empty. Remove the blockQuote as well.\n                writer.remove(parent);\n                return true;\n              }\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        return false;\n      });\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"afterInit\",\n    value: function afterInit() {\n      var _this = this;\n\n      var editor = this.editor;\n      var command = editor.commands.get('blockQuote'); // Overwrite default Enter key behavior.\n      // If Enter key is pressed with selection collapsed in empty block inside a quote, break the quote.\n      // This listener is added in afterInit in order to register it after list's feature listener.\n      // We can't use a priority for this, because 'low' is already used by the enter feature, unless\n      // we'd use numeric priority in this case.\n\n      this.listenTo(this.editor.editing.view.document, 'enter', function (evt, data) {\n        var doc = _this.editor.model.document;\n        var positionParent = doc.selection.getLastPosition().parent;\n\n        if (doc.selection.isCollapsed && positionParent.isEmpty && command.value) {\n          _this.editor.execute('blockQuote');\n\n          _this.editor.editing.view.scrollToTheSelection();\n\n          data.preventDefault();\n          evt.stop();\n        }\n      });\n    }\n  }]);\n\n  return BlockQuoteEditing;\n}(Plugin);\n\nexport { BlockQuoteEditing as default };","function _typeof(obj) {\n    if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {\n        _typeof = function _typeof(obj) {\n            return typeof obj;\n        };\n    } else {\n        _typeof = function _typeof(obj) {\n            return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n        };\n    }\n    return _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError('Cannot call a class as a function');\n    }\n}\nfunction _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if ('value' in descriptor)\n            descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps)\n        _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps)\n        _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === 'object' || typeof call === 'function')) {\n        return call;\n    }\n    return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError('this hasn\\'t been initialised - super() hasn\\'t been called');\n    }\n    return self;\n}\nfunction _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== 'function' && superClass !== null) {\n        throw new TypeError('Super expression must either be null or a function');\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass)\n        _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return _setPrototypeOf(o, p);\n}\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n/**\n * @module block-quote/blockquoteui\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport quoteIcon from '@ckeditor/ckeditor5-core/theme/icons/quote.svg';\nimport '../theme/blockquote.css';\n/**\n * The block quote UI plugin.\n *\n * It introduces the `'blockQuote'` button.\n *\n * @extends module:core/plugin~Plugin\n */\nvar BlockQuoteUI = /*#__PURE__*/\nfunction (_Plugin) {\n    _inherits(BlockQuoteUI, _Plugin);\n    function BlockQuoteUI() {\n        _classCallCheck(this, BlockQuoteUI);\n        return _possibleConstructorReturn(this, _getPrototypeOf(BlockQuoteUI).apply(this, arguments));\n    }\n    _createClass(BlockQuoteUI, [{\n            key: 'init',\n            /**\n     * @inheritDoc\n     */\n            value: function init() {\n                var _this = this;\n                var editor = this.editor;\n                var t = editor.t;\n                editor.ui.componentFactory.add('blockQuote', function (locale) {\n                    var command = editor.commands.get('blockQuote');\n                    var buttonView = new ButtonView(locale);\n                    buttonView.set({\n                        label: t('v'),\n                        icon: quoteIcon,\n                        tooltip: true\n                    });\n                    // Bind button model to command.\n                    buttonView.bind('isOn', 'isEnabled').to(command, 'value', 'isEnabled');\n                    // Execute command.\n                    _this.listenTo(buttonView, 'execute', function () {\n                        return editor.execute('blockQuote');\n                    });\n                    return buttonView;\n                });\n            }\n        }]);\n    return BlockQuoteUI;\n}(Plugin);\nexport {\n    BlockQuoteUI as default\n};","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module block-quote/blockquote\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport BlockQuoteEditing from './blockquoteediting';\nimport BlockQuoteUI from './blockquoteui';\n/**\n * The block quote plugin.\n *\n * For more information about this feature check the {@glink api/block-quote package page}.\n *\n * This is a \"glue\" plugin which loads the {@link module:block-quote/blockquoteediting~BlockQuoteEditing block quote editing feature}\n * and {@link module:block-quote/blockquoteui~BlockQuoteUI block quote UI feature}.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar BlockQuote =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(BlockQuote, _Plugin);\n\n  function BlockQuote() {\n    _classCallCheck(this, BlockQuote);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BlockQuote).apply(this, arguments));\n  }\n\n  _createClass(BlockQuote, null, [{\n    key: \"requires\",\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return [BlockQuoteEditing, BlockQuoteUI];\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"pluginName\",\n    get: function get() {\n      return 'BlockQuote';\n    }\n  }]);\n\n  return BlockQuote;\n}(Plugin);\n\nexport { BlockQuote as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module basic-styles/bold/boldediting\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport AttributeCommand from '../attributecommand';\nvar BOLD = 'bold';\n/**\n * The bold editing feature.\n *\n * It registers the `'bold'` command and introduces the `bold` attribute in the model which renders to the view\n * as a `<strong>` element.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar BoldEditing =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(BoldEditing, _Plugin);\n\n  function BoldEditing() {\n    _classCallCheck(this, BoldEditing);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BoldEditing).apply(this, arguments));\n  }\n\n  _createClass(BoldEditing, [{\n    key: \"init\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function init() {\n      var editor = this.editor; // Allow bold attribute on text nodes.\n\n      editor.model.schema.extend('$text', {\n        allowAttributes: BOLD\n      }); // Build converter from model to view for data and editing pipelines.\n\n      editor.conversion.attributeToElement({\n        model: BOLD,\n        view: 'strong',\n        upcastAlso: ['b', {\n          styles: {\n            'font-weight': 'bold'\n          }\n        }]\n      }); // Create bold command.\n\n      editor.commands.add(BOLD, new AttributeCommand(editor, BOLD)); // Set the Ctrl+B keystroke.\n\n      editor.keystrokes.set('CTRL+B', BOLD);\n    }\n  }]);\n\n  return BoldEditing;\n}(Plugin);\n\nexport { BoldEditing as default };","function _typeof(obj) {\n    if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {\n        _typeof = function _typeof(obj) {\n            return typeof obj;\n        };\n    } else {\n        _typeof = function _typeof(obj) {\n            return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n        };\n    }\n    return _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError('Cannot call a class as a function');\n    }\n}\nfunction _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if ('value' in descriptor)\n            descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps)\n        _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps)\n        _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === 'object' || typeof call === 'function')) {\n        return call;\n    }\n    return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError('this hasn\\'t been initialised - super() hasn\\'t been called');\n    }\n    return self;\n}\nfunction _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== 'function' && superClass !== null) {\n        throw new TypeError('Super expression must either be null or a function');\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass)\n        _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return _setPrototypeOf(o, p);\n}\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n/**\n * @module basic-styles/bold/boldui\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport boldIcon from '../../theme/icons/bold.svg';\nvar BOLD = 'bold';\n/**\n * The bold UI feature. It introduces the Bold button.\n *\n * @extends module:core/plugin~Plugin\n */\nvar BoldUI = /*#__PURE__*/\nfunction (_Plugin) {\n    _inherits(BoldUI, _Plugin);\n    function BoldUI() {\n        _classCallCheck(this, BoldUI);\n        return _possibleConstructorReturn(this, _getPrototypeOf(BoldUI).apply(this, arguments));\n    }\n    _createClass(BoldUI, [{\n            key: 'init',\n            /**\n     * @inheritDoc\n     */\n            value: function init() {\n                var _this = this;\n                var editor = this.editor;\n                var t = editor.t;\n                // Add bold button to feature components.\n                editor.ui.componentFactory.add(BOLD, function (locale) {\n                    var command = editor.commands.get(BOLD);\n                    var view = new ButtonView(locale);\n                    view.set({\n                        label: t('b'),\n                        icon: boldIcon,\n                        keystroke: 'CTRL+B',\n                        tooltip: true\n                    });\n                    view.bind('isOn', 'isEnabled').to(command, 'value', 'isEnabled');\n                    // Execute command.\n                    _this.listenTo(view, 'execute', function () {\n                        return editor.execute(BOLD);\n                    });\n                    return view;\n                });\n            }\n        }]);\n    return BoldUI;\n}(Plugin);\nexport {\n    BoldUI as default\n};","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module basic-styles/bold\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport BoldEditing from './bold/boldediting';\nimport BoldUI from './bold/boldui';\n/**\n * The bold feature.\n *\n * For a detailed overview check the {@glink features/basic-styles Basic styles feature documentation}\n * and the {@glink api/basic-styles package page}.\n *\n * This is a \"glue\" plugin which loads the {@link module:basic-styles/bold/boldediting~BoldEditing bold editing feature}\n * and {@link module:basic-styles/bold/boldui~BoldUI bold UI feature}.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar Bold =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(Bold, _Plugin);\n\n  function Bold() {\n    _classCallCheck(this, Bold);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Bold).apply(this, arguments));\n  }\n\n  _createClass(Bold, null, [{\n    key: \"requires\",\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return [BoldEditing, BoldUI];\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"pluginName\",\n    get: function get() {\n      return 'Bold';\n    }\n  }]);\n\n  return Bold;\n}(Plugin);\n\nexport { Bold as default };","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module autoformat/blockautoformatediting\n */\n\n/**\n * The block autoformatting engine. It allows to format various block patterns. For example,\n * it can be configured to turn a paragraph starting with `*` and followed by a space into a list item.\n *\n * The autoformatting operation is integrated with the undo manager,\n * so the autoformatting step can be undone if the user's intention was not to format the text.\n *\n * See the constructors documentation to learn how to create custom inline autoformatters. You can also use\n * the {@link module:autoformat/autoformat~Autoformat} feature which enables a set of default autoformatters\n * (lists, headings, bold and italic).\n */\nvar BlockAutoformatEditing =\n/**\n * Creates a listener triggered on `change` event in the document.\n * Calls the callback when inserted text matches the regular expression or the command name\n * if provided instead of the callback.\n *\n * Examples of usage:\n *\n * To convert a paragraph to heading 1 when `- ` is typed, using just the commmand name:\n *\n *\t\tnew BlockAutoformatEditing( editor, /^\\- $/, 'heading1' );\n *\n * To convert a paragraph to heading 1 when `- ` is typed, using just the callback:\n *\n *\t\tnew BlockAutoformatEditing( editor, /^\\- $/, ( context ) => {\n *\t\t\tconst { match } = context;\n *\t\t\tconst headingLevel = match[ 1 ].length;\n *\n *\t\t\teditor.execute( 'heading', {\n *\t\t\t\tformatId: `heading${ headingLevel }`\n *\t\t\t} );\n * \t\t} );\n *\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n * @param {RegExp} pattern The regular expression to execute on just inserted text.\n * @param {Function|String} callbackOrCommand The callback to execute or the command to run when the text is matched.\n * In case of providing the callback, it receives the following parameter:\n * * {Object} match RegExp.exec() result of matching the pattern to inserted text.\n */\nfunction BlockAutoformatEditing(editor, pattern, callbackOrCommand) {\n  _classCallCheck(this, BlockAutoformatEditing);\n\n  var callback;\n\n  if (typeof callbackOrCommand == 'function') {\n    callback = callbackOrCommand;\n  } else {\n    // We assume that the actual command name was provided.\n    var command = callbackOrCommand;\n\n    callback = function callback() {\n      editor.execute(command);\n    };\n  }\n\n  editor.model.document.on('change', function (evt, batch) {\n    if (batch.type == 'transparent') {\n      return;\n    }\n\n    var changes = Array.from(editor.model.document.differ.getChanges());\n    var entry = changes[0]; // Typing is represented by only a single change.\n\n    if (changes.length != 1 || entry.type !== 'insert' || entry.name != '$text' || entry.length != 1) {\n      return;\n    }\n\n    var item = entry.position.textNode || entry.position.nodeAfter;\n\n    if (!item.parent.is('paragraph')) {\n      return;\n    }\n\n    var match = pattern.exec(item.data);\n\n    if (!match) {\n      return;\n    } // Use enqueueChange to create new batch to separate typing batch from the auto-format changes.\n\n\n    editor.model.enqueueChange(function (writer) {\n      // Matched range.\n      var start = writer.createPositionAt(item.parent, 0);\n      var end = writer.createPositionAt(item.parent, match[0].length);\n      var range = writer.createRange(start, end); // Remove matched text.\n\n      writer.remove(range);\n      callback({\n        match: match\n      });\n    });\n  });\n};\n\nexport { BlockAutoformatEditing as default };","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module autoformat/inlineautoformatediting\n */\n\n/**\n * The inline autoformatting engine. It allows to format various inline patterns. For example,\n * it can be configured to make \"foo\" bold when typed `**foo**` (the `**` markers will be removed).\n *\n * The autoformatting operation is integrated with the undo manager,\n * so the autoformatting step can be undone if the user's intention was not to format the text.\n *\n * See the constructors documentation to learn how to create custom inline autoformatters. You can also use\n * the {@link module:autoformat/autoformat~Autoformat} feature which enables a set of default autoformatters\n * (lists, headings, bold and italic).\n */\nvar InlineAutoformatEditing =\n/**\n * Enables autoformatting mechanism for a given {@link module:core/editor/editor~Editor}.\n *\n * It formats the matched text by applying the given model attribute or by running the provided formatting callback.\n * On every change applied to the model the autoformatting engine checks the text on the left of the selection\n * and executes the provided action if the text matches given criteria (regular expression or callback).\n *\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n * @param {Function|RegExp} testRegexpOrCallback The regular expression or callback to execute on text.\n * Provided regular expression *must* have three capture groups. The first and the third capture group\n * should match opening and closing delimiters. The second capture group should match the text to format.\n *\n *\t\t// Matches the `**bold text**` pattern.\n *\t\t// There are three capturing groups:\n *\t\t// - The first to match the starting `**` delimiter.\n *\t\t// - The second to match the text to format.\n *\t\t// - The third to match the ending `**` delimiter.\n *\t\tnew InlineAutoformatEditing( editor, /(\\*\\*)([^\\*]+?)(\\*\\*)$/g, 'bold' );\n *\n * When a function is provided instead of the regular expression, it will be executed with the text to match as a parameter.\n * The function should return proper \"ranges\" to delete and format.\n *\n *\t\t{\n *\t\t\tremove: [\n *\t\t\t\t[ 0, 1 ],\t// Remove the first letter from the given text.\n *\t\t\t\t[ 5, 6 ]\t// Remove the 6th letter from the given text.\n *\t\t\t],\n *\t\t\tformat: [\n *\t\t\t\t[ 1, 5 ]\t// Format all letters from 2nd to 5th.\n *\t\t\t]\n *\t\t}\n *\n * @param {Function|String} attributeOrCallback The name of attribute to apply on matching text or a callback for manual\n * formatting.\n *\n *\t\t// Use attribute name:\n *\t\tnew InlineAutoformatEditing( editor, /(\\*\\*)([^\\*]+?)(\\*\\*)$/g, 'bold' );\n *\n *\t\t// Use formatting callback:\n *\t\tnew InlineAutoformatEditing( editor, /(\\*\\*)([^\\*]+?)(\\*\\*)$/g, ( writer, validRanges ) => {\n *\t\t\tfor ( let range of validRanges ) {\n *\t\t\t\twriter.setAttribute( command, true, range );\n *\t\t\t}\n *\t\t} );\n */\nfunction InlineAutoformatEditing(editor, testRegexpOrCallback, attributeOrCallback) {\n  _classCallCheck(this, InlineAutoformatEditing);\n\n  var regExp;\n  var attributeKey;\n  var testCallback;\n  var formatCallback;\n\n  if (testRegexpOrCallback instanceof RegExp) {\n    regExp = testRegexpOrCallback;\n  } else {\n    testCallback = testRegexpOrCallback;\n  }\n\n  if (typeof attributeOrCallback == 'string') {\n    attributeKey = attributeOrCallback;\n  } else {\n    formatCallback = attributeOrCallback;\n  } // A test callback run on changed text.\n\n\n  testCallback = testCallback || function (text) {\n    var result;\n    var remove = [];\n    var format = [];\n\n    while ((result = regExp.exec(text)) !== null) {\n      // There should be full match and 3 capture groups.\n      if (result && result.length < 4) {\n        break;\n      }\n\n      var _result = result,\n          index = _result.index,\n          leftDel = _result['1'],\n          content = _result['2'],\n          rightDel = _result['3']; // Real matched string - there might be some non-capturing groups so we need to recalculate starting index.\n\n      var found = leftDel + content + rightDel;\n      index += result[0].length - found.length; // Start and End offsets of delimiters to remove.\n\n      var delStart = [index, index + leftDel.length];\n      var delEnd = [index + leftDel.length + content.length, index + leftDel.length + content.length + rightDel.length];\n      remove.push(delStart);\n      remove.push(delEnd);\n      format.push([index + leftDel.length, index + leftDel.length + content.length]);\n    }\n\n    return {\n      remove: remove,\n      format: format\n    };\n  }; // A format callback run on matched text.\n\n\n  formatCallback = formatCallback || function (writer, validRanges) {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = validRanges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var range = _step.value;\n        writer.setAttribute(attributeKey, true, range);\n      } // After applying attribute to the text, remove given attribute from the selection.\n      // This way user is able to type a text without attribute used by auto formatter.\n\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    writer.removeSelectionAttribute(attributeKey);\n  };\n\n  editor.model.document.on('change', function (evt, batch) {\n    if (batch.type == 'transparent') {\n      return;\n    }\n\n    var selection = editor.model.document.selection; // Do nothing if selection is not collapsed.\n\n    if (!selection.isCollapsed) {\n      return;\n    }\n\n    var changes = Array.from(editor.model.document.differ.getChanges());\n    var entry = changes[0]; // Typing is represented by only a single change.\n\n    if (changes.length != 1 || entry.type !== 'insert' || entry.name != '$text' || entry.length != 1) {\n      return;\n    }\n\n    var block = selection.focus.parent;\n    var text = getText(block).slice(0, selection.focus.offset);\n    var testOutput = testCallback(text);\n    var rangesToFormat = testOutputToRanges(block, testOutput.format, editor.model);\n    var rangesToRemove = testOutputToRanges(block, testOutput.remove, editor.model);\n\n    if (!(rangesToFormat.length && rangesToRemove.length)) {\n      return;\n    } // Use enqueueChange to create new batch to separate typing batch from the auto-format changes.\n\n\n    editor.model.enqueueChange(function (writer) {\n      var validRanges = editor.model.schema.getValidRanges(rangesToFormat, attributeKey); // Apply format.\n\n      formatCallback(writer, validRanges); // Remove delimiters - use reversed order to not mix the offsets while removing.\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = rangesToRemove.reverse()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var range = _step2.value;\n          writer.remove(range);\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    });\n  });\n}; // Returns whole text from parent element by adding all data from text nodes together.\n//\n// @private\n// @param {module:engine/model/element~Element} element\n// @returns {String}\n\n\nexport { InlineAutoformatEditing as default };\n\nfunction getText(element) {\n  return Array.from(element.getChildren()).reduce(function (a, b) {\n    return a + b.data;\n  }, '');\n} // Converts output of the test function provided to the InlineAutoformatEditing and converts it to the model ranges\n// inside provided block.\n//\n// @private\n// @param {module:engine/model/element~Element} block\n// @param {Array.<Array>} arrays\n// @param {module:engine/model/model~Model} model\n\n\nfunction testOutputToRanges(block, arrays, model) {\n  return arrays.filter(function (array) {\n    return array[0] !== undefined && array[1] !== undefined;\n  }).map(function (array) {\n    return model.createRange(model.createPositionAt(block, array[0]), model.createPositionAt(block, array[1]));\n  });\n}","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module autoformat/autoformat\n */\nimport BlockAutoformatEditing from './blockautoformatediting';\nimport InlineAutoformatEditing from './inlineautoformatediting';\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n/**\n * Enables a set of predefined autoformatting actions.\n *\n * For a detailed overview, check the {@glink features/autoformat Autoformatting feature documentation}\n * and the {@glink api/autoformat package page}.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar Autoformat =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(Autoformat, _Plugin);\n\n  function Autoformat() {\n    _classCallCheck(this, Autoformat);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Autoformat).apply(this, arguments));\n  }\n\n  _createClass(Autoformat, [{\n    key: \"afterInit\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function afterInit() {\n      this._addListAutoformats();\n\n      this._addBasicStylesAutoformats();\n\n      this._addHeadingAutoformats();\n\n      this._addBlockQuoteAutoformats();\n    }\n    /**\n     * Adds autoformatting related to the {@link module:list/list~List}.\n     *\n     * When typed:\n     * - `* ` or `- ` &ndash; A paragraph will be changed to a bulleted list.\n     * - `1. ` or `1) ` &ndash; A paragraph will be changed to a numbered list (\"1\" can be any digit or a list of digits).\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_addListAutoformats\",\n    value: function _addListAutoformats() {\n      var commands = this.editor.commands;\n\n      if (commands.get('bulletedList')) {\n        // eslint-disable-next-line no-new\n        new BlockAutoformatEditing(this.editor, /^[*-]\\s$/, 'bulletedList');\n      }\n\n      if (commands.get('numberedList')) {\n        // eslint-disable-next-line no-new\n        new BlockAutoformatEditing(this.editor, /^\\d+[.|)]\\s$/, 'numberedList');\n      }\n    }\n    /**\n     * Adds autoformatting related to the {@link module:basic-styles/bold~Bold},\n     * {@link module:basic-styles/italic~Italic} and {@link module:basic-styles/code~Code}.\n     *\n     * When typed:\n     * - `**foobar**` &ndash; `**` characters are removed and `foobar` is set to bold,\n     * - `__foobar__` &ndash; `__` characters are removed and `foobar` is set to bold,\n     * - `*foobar*` &ndash; `*` characters are removed and `foobar` is set to italic,\n     * - `_foobar_` &ndash; `_` characters are removed and `foobar` is set to italic,\n     * - ``` `foobar` &ndash; ``` ` ``` characters are removed and `foobar` is set to code.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_addBasicStylesAutoformats\",\n    value: function _addBasicStylesAutoformats() {\n      var commands = this.editor.commands;\n\n      if (commands.get('bold')) {\n        /* eslint-disable no-new */\n        new InlineAutoformatEditing(this.editor, /(\\*\\*)([^*]+)(\\*\\*)$/g, 'bold');\n        new InlineAutoformatEditing(this.editor, /(__)([^_]+)(__)$/g, 'bold');\n        /* eslint-enable no-new */\n      }\n\n      if (commands.get('italic')) {\n        // The italic autoformatter cannot be triggered by the bold markers, so we need to check the\n        // text before the pattern (e.g. `(?:^|[^\\*])`).\n\n        /* eslint-disable no-new */\n        new InlineAutoformatEditing(this.editor, /(?:^|[^*])(\\*)([^*_]+)(\\*)$/g, 'italic');\n        new InlineAutoformatEditing(this.editor, /(?:^|[^_])(_)([^_]+)(_)$/g, 'italic');\n        /* eslint-enable no-new */\n      }\n\n      if (commands.get('code')) {\n        /* eslint-disable no-new */\n        new InlineAutoformatEditing(this.editor, /(`)([^`]+)(`)$/g, 'code');\n        /* eslint-enable no-new */\n      }\n    }\n    /**\n     * Adds autoformatting related to {@link module:heading/heading~Heading}.\n     *\n     * It is using a number at the end of the command name to associate it with the proper trigger:\n     *\n     * * `heading` with value `heading1` will be executed when typing `#`,\n     * * `heading` with value `heading2` will be executed when typing `##`,\n     * * ... up to `heading6` and `######`.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_addHeadingAutoformats\",\n    value: function _addHeadingAutoformats() {\n      var _this = this;\n\n      var command = this.editor.commands.get('heading');\n\n      if (command) {\n        command.modelElements.filter(function (name) {\n          return name.match(/^heading[1-6]$/);\n        }).forEach(function (commandValue) {\n          var level = commandValue[7];\n          var pattern = new RegExp(\"^(#{\".concat(level, \"})\\\\s$\")); // eslint-disable-next-line no-new\n\n          new BlockAutoformatEditing(_this.editor, pattern, function () {\n            _this.editor.execute('heading', {\n              value: commandValue\n            });\n          });\n        });\n      }\n    }\n    /**\n     * Adds autoformatting related to {@link module:block-quote/blockquote~BlockQuote}.\n     *\n     * When typed:\n     * * `> ` &ndash; A paragraph will be changed to a block quote.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_addBlockQuoteAutoformats\",\n    value: function _addBlockQuoteAutoformats() {\n      if (this.editor.commands.get('blockQuote')) {\n        // eslint-disable-next-line no-new\n        new BlockAutoformatEditing(this.editor, /^>\\s$/, 'blockQuote');\n      }\n    }\n  }], [{\n    key: \"pluginName\",\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return 'Autoformat';\n    }\n  }]);\n\n  return Autoformat;\n}(Plugin);\n\nexport { Autoformat as default };","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module basic-styles/italic/italicediting\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport AttributeCommand from '../attributecommand';\nvar ITALIC = 'italic';\n/**\n * The italic editing feature.\n *\n * It registers the `'italic'` command, the <kbd>Ctrl+I</kbd> keystroke and introduces the `italic` attribute in the model\n * which renders to the view as an `<em>` element.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar ItalicEditing =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(ItalicEditing, _Plugin);\n\n  function ItalicEditing() {\n    _classCallCheck(this, ItalicEditing);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ItalicEditing).apply(this, arguments));\n  }\n\n  _createClass(ItalicEditing, [{\n    key: \"init\",\n\n    /**\n     * @inheritDoc\n     */\n    value: function init() {\n      var editor = this.editor; // Allow italic attribute on text nodes.\n\n      editor.model.schema.extend('$text', {\n        allowAttributes: ITALIC\n      });\n      editor.conversion.attributeToElement({\n        model: ITALIC,\n        view: 'i',\n        upcastAlso: ['em', {\n          styles: {\n            'font-style': 'italic'\n          }\n        }]\n      }); // Create italic command.\n\n      editor.commands.add(ITALIC, new AttributeCommand(editor, ITALIC)); // Set the Ctrl+I keystroke.\n\n      editor.keystrokes.set('CTRL+I', ITALIC);\n    }\n  }]);\n\n  return ItalicEditing;\n}(Plugin);\n\nexport { ItalicEditing as default };","function _typeof(obj) {\n    if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {\n        _typeof = function _typeof(obj) {\n            return typeof obj;\n        };\n    } else {\n        _typeof = function _typeof(obj) {\n            return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n        };\n    }\n    return _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError('Cannot call a class as a function');\n    }\n}\nfunction _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if ('value' in descriptor)\n            descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps)\n        _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps)\n        _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === 'object' || typeof call === 'function')) {\n        return call;\n    }\n    return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError('this hasn\\'t been initialised - super() hasn\\'t been called');\n    }\n    return self;\n}\nfunction _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== 'function' && superClass !== null) {\n        throw new TypeError('Super expression must either be null or a function');\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass)\n        _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return _setPrototypeOf(o, p);\n}\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n/**\n * @module basic-styles/italic/italicui\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport italicIcon from '../../theme/icons/italic.svg';\nvar ITALIC = 'italic';\n/**\n * The italic UI feature. It introduces the Italic button.\n *\n * @extends module:core/plugin~Plugin\n */\nvar ItalicUI = /*#__PURE__*/\nfunction (_Plugin) {\n    _inherits(ItalicUI, _Plugin);\n    function ItalicUI() {\n        _classCallCheck(this, ItalicUI);\n        return _possibleConstructorReturn(this, _getPrototypeOf(ItalicUI).apply(this, arguments));\n    }\n    _createClass(ItalicUI, [{\n            key: 'init',\n            /**\n     * @inheritDoc\n     */\n            value: function init() {\n                var _this = this;\n                var editor = this.editor;\n                var t = editor.t;\n                // Add bold button to feature components.\n                editor.ui.componentFactory.add(ITALIC, function (locale) {\n                    var command = editor.commands.get(ITALIC);\n                    var view = new ButtonView(locale);\n                    view.set({\n                        label: t('c'),\n                        icon: italicIcon,\n                        keystroke: 'CTRL+I',\n                        tooltip: true\n                    });\n                    view.bind('isOn', 'isEnabled').to(command, 'value', 'isEnabled');\n                    // Execute command.\n                    _this.listenTo(view, 'execute', function () {\n                        return editor.execute(ITALIC);\n                    });\n                    return view;\n                });\n            }\n        }]);\n    return ItalicUI;\n}(Plugin);\nexport {\n    ItalicUI as default\n};","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module basic-styles/italic\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport ItalicEditing from './italic/italicediting';\nimport ItalicUI from './italic/italicui';\n/**\n * The italic feature.\n *\n * For a detailed overview check the {@glink features/basic-styles Basic styles feature documentation}\n * and the {@glink api/basic-styles package page}.\n *\n * This is a \"glue\" plugin which loads the {@link module:basic-styles/italic/italicediting~ItalicEditing} and\n * {@link module:basic-styles/italic/italicui~ItalicUI} plugins.\n *\n * @extends module:core/plugin~Plugin\n */\n\nvar Italic =\n/*#__PURE__*/\nfunction (_Plugin) {\n  _inherits(Italic, _Plugin);\n\n  function Italic() {\n    _classCallCheck(this, Italic);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Italic).apply(this, arguments));\n  }\n\n  _createClass(Italic, null, [{\n    key: \"requires\",\n\n    /**\n     * @inheritDoc\n     */\n    get: function get() {\n      return [ItalicEditing, ItalicUI];\n    }\n    /**\n     * @inheritDoc\n     */\n\n  }, {\n    key: \"pluginName\",\n    get: function get() {\n      return 'Italic';\n    }\n  }]);\n\n  return Italic;\n}(Plugin);\n\nexport { Italic as default };","import isObjectLike from './isObjectLike.js';\nimport isPlainObject from './isPlainObject.js';\n\n/**\n * Checks if `value` is likely a DOM element.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n * @example\n *\n * _.isElement(document.body);\n * // => true\n *\n * _.isElement('<body>');\n * // => false\n */\nfunction isElement(value) {\n  return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n}\n\nexport default isElement;\n","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() {\n  return this || (typeof self === \"object\" && self);\n})() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() {\n    return this || (typeof self === \"object\" && self);\n  })() || Function(\"return this\")()\n);\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module utils/version\n */\n\n/* globals window, global */\nimport log from './log';\nimport { version } from 'ckeditor5/package.json';\nvar windowOrGlobal = (typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === 'object' ? window : global;\n\nif (windowOrGlobal.CKEDITOR_VERSION) {\n  /**\n   * This error is thrown when the `CKEDITOR_VERSION` global is being set more than once. This happens when in\n   * two scenarios described above.\n   *\n   * # Some packages were duplicated\n   *\n   * CKEditor 5 was built from source packages which were duplicated during installation via npm.\n   * Normally, npm deduplicates all packages so e.g. `@ckeditor/ckeditor5-core` is installed only once in `node_modules/`.\n   * However, subsequent `npm install` calls or conflicting version dependencies may cause npm to install some packages\n   * more than once. Furthermore, [npm in version 5+](https://github.com/npm/npm/issues/16991)\n   * is also known for randomly failing to deduplicate packages.\n   *\n   * We recommend checking if any of the below steps helps:\n   *\n   * * `rm -rf node_modules && npm install` to make sure you have a clean `node_modules/` – this step\n   * is known to help in majority of cases,\n   * * check whether all CKEditor 5 packages are up to date and reinstall them\n   * if you changed anything (`rm -rf node_modules && npm install`),\n   * * downgrade npm to version 4 if you use a newer version.\n   *\n   * If all packages are correct and compatible with each other the above steps are known to help. If not, you may\n   * try to check with `npm ls` how many times `@ckeditor/ckeditor5-core` is installed. If more than once, verify\n   * which package causes that.\n   *\n   * # Two+ builds are loaded\n   *\n   * If you use CKEditor 5 builds, you might have loaded two (or more) `ckeditor.js` files in one web page\n   * – check your web page for duplicated `<script>` elements or make sure your page builder/bundler includes CKEditor only once.\n   *\n   * @error ckeditor-version-collision\n   * @param {String} collidingVersion The version of the build which has already been (incorrectly) loaded.\n   * @param {String} version The version of the build which is supposed to be loaded.\n   */\n  log.error('ckeditor-version-collision: The global CKEDITOR_VERSION constant has already been set.', {\n    collidingVersion: windowOrGlobal.CKEDITOR_VERSION,\n    version: version\n  });\n} else {\n  windowOrGlobal.CKEDITOR_VERSION = version;\n}","\nvar content = require(\"!!../../../../postcss-loader/src/index.js??ref--6-1!./globals.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"singleton\":true,\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../postcss-loader/src/index.js??ref--6-1!./globals.css\", function() {\n\t\tvar newContent = require(\"!!../../../../postcss-loader/src/index.js??ref--6-1!./globals.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = \".ck-hidden{display:none!important}.ck.ck-reset,.ck.ck-reset_all,.ck.ck-reset_all *{box-sizing:border-box;width:auto;height:auto;position:static}:root{--ck-z-default:1;--ck-z-modal:calc(var(--ck-z-default) + 999);--ck-color-base-foreground:#fafafa;--ck-color-base-background:#fff;--ck-color-base-border:#c4c4c4;--ck-color-base-action:#61b045;--ck-color-base-focus:#6cb5f9;--ck-color-base-text:#333;--ck-color-base-active:#198cf0;--ck-color-base-active-focus:#0e7fe1;--ck-color-base-error:#db3700;--ck-color-focus-border:#47a4f5;--ck-color-focus-shadow:rgba(119,186,248,0.5);--ck-color-focus-disabled-shadow:rgba(119,186,248,0.3);--ck-color-focus-error-shadow:rgba(255,64,31,0.3);--ck-color-text:var(--ck-color-base-text);--ck-color-shadow-drop:rgba(0,0,0,0.15);--ck-color-shadow-inner:rgba(0,0,0,0.1);--ck-color-button-default-background:transparent;--ck-color-button-default-hover-background:#e6e6e6;--ck-color-button-default-active-background:#d9d9d9;--ck-color-button-default-active-shadow:#bfbfbf;--ck-color-button-default-disabled-background:transparent;--ck-color-button-on-background:#dedede;--ck-color-button-on-hover-background:#c4c4c4;--ck-color-button-on-active-background:#bababa;--ck-color-button-on-active-shadow:#a1a1a1;--ck-color-button-on-disabled-background:#dedede;--ck-color-button-action-background:var(--ck-color-base-action);--ck-color-button-action-hover-background:#579e3d;--ck-color-button-action-active-background:#53973b;--ck-color-button-action-active-shadow:#498433;--ck-color-button-action-disabled-background:#7ec365;--ck-color-button-action-text:var(--ck-color-base-background);--ck-color-button-save:#008a00;--ck-color-button-cancel:#db3700;--ck-color-switch-button-off-background:#b0b0b0;--ck-color-switch-button-on-background:var(--ck-color-button-action-background);--ck-color-switch-button-inner-background:var(--ck-color-base-background);--ck-color-dropdown-panel-background:var(--ck-color-base-background);--ck-color-dropdown-panel-border:var(--ck-color-base-border);--ck-color-input-background:var(--ck-color-base-background);--ck-color-input-border:#c7c7c7;--ck-color-input-error-border:var(--ck-color-base-error);--ck-color-input-text:var(--ck-color-base-text);--ck-color-input-disabled-background:#f2f2f2;--ck-color-input-disabled-border:#c7c7c7;--ck-color-input-disabled-text:#5c5c5c;--ck-color-list-background:var(--ck-color-base-background);--ck-color-list-button-hover-background:var(--ck-color-base-foreground);--ck-color-list-button-on-background:var(--ck-color-base-active);--ck-color-list-button-on-background-focus:var(--ck-color-base-active-focus);--ck-color-list-button-on-text:var(--ck-color-base-background);--ck-color-panel-background:var(--ck-color-base-background);--ck-color-panel-border:var(--ck-color-base-border);--ck-color-toolbar-background:var(--ck-color-base-foreground);--ck-color-toolbar-border:var(--ck-color-base-border);--ck-color-tooltip-background:var(--ck-color-base-text);--ck-color-tooltip-text:var(--ck-color-base-background);--ck-color-engine-placeholder-text:#c2c2c2;--ck-color-upload-bar-background:#6cb5f9;--ck-color-upload-infinite-background:rgba(0,0,0,0.1);--ck-color-link-default:#0000f0;--ck-color-link-selected-background:rgba(31,177,255,0.1);--ck-disabled-opacity:.5;--ck-focus-outer-shadow-geometry:0 0 0 3px;--ck-focus-outer-shadow:var(--ck-focus-outer-shadow-geometry) var(--ck-color-focus-shadow);--ck-focus-disabled-outer-shadow:var(--ck-focus-outer-shadow-geometry) var(--ck-color-focus-disabled-shadow);--ck-focus-error-outer-shadow:var(--ck-focus-outer-shadow-geometry) var(--ck-color-focus-error-shadow);--ck-focus-ring:1px solid var(--ck-color-focus-border);--ck-font-size-base:13px;--ck-line-height-base:1.84615;--ck-font-face:Helvetica,Arial,Tahoma,Verdana,Sans-Serif;--ck-font-size-tiny:0.7em;--ck-font-size-small:0.75em;--ck-font-size-normal:1em;--ck-font-size-big:1.4em;--ck-font-size-large:1.8em;--ck-ui-component-min-height:2.3em}.ck.ck-reset,.ck.ck-reset_all,.ck.ck-reset_all *{margin:0;padding:0;border:0;background:transparent;text-decoration:none;vertical-align:middle;transition:none;word-wrap:break-word}.ck.ck-reset_all,.ck.ck-reset_all *{border-collapse:collapse;font:normal normal normal var(--ck-font-size-base)/var(--ck-line-height-base) var(--ck-font-face);color:var(--ck-color-text);text-align:left;white-space:nowrap;cursor:auto;float:none}.ck.ck-reset_all .ck-rtl *{text-align:right}.ck.ck-reset_all iframe{vertical-align:inherit}.ck.ck-reset_all textarea{white-space:pre-wrap}.ck.ck-reset_all input[type=password],.ck.ck-reset_all input[type=text],.ck.ck-reset_all textarea{cursor:text}.ck.ck-reset_all input[type=password][disabled],.ck.ck-reset_all input[type=text][disabled],.ck.ck-reset_all textarea[disabled]{cursor:default}.ck.ck-reset_all fieldset{padding:10px;border:2px groove #dfdee3}.ck.ck-reset_all button::-moz-focus-inner{padding:0;border:0}:root{--ck-border-radius:2px;--ck-inner-shadow:2px 2px 3px var(--ck-color-shadow-inner) inset;--ck-drop-shadow:0 1px 2px 1px var(--ck-color-shadow-drop);--ck-spacing-unit:0.6em;--ck-spacing-large:calc(var(--ck-spacing-unit)*1.5);--ck-spacing-standard:var(--ck-spacing-unit);--ck-spacing-medium:calc(var(--ck-spacing-unit)*0.8);--ck-spacing-small:calc(var(--ck-spacing-unit)*0.5);--ck-spacing-tiny:calc(var(--ck-spacing-unit)*0.3);--ck-spacing-extra-tiny:calc(var(--ck-spacing-unit)*0.16)}\"","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","\nvar content = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./editorui.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"singleton\":true,\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./editorui.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./editorui.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = \".ck.ck-editor__editable:not(.ck-editor__nested-editable){border-radius:0}.ck-rounded-corners .ck.ck-editor__editable:not(.ck-editor__nested-editable),.ck.ck-editor__editable:not(.ck-editor__nested-editable).ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck.ck-editor__editable:not(.ck-editor__nested-editable).ck-focused{outline:none;border:var(--ck-focus-ring);box-shadow:var(--ck-inner-shadow),0 0}.ck.ck-editor__editable_inline{overflow:auto;padding:0 var(--ck-spacing-standard);border:1px solid transparent}.ck.ck-editor__editable_inline>:first-child{margin-top:var(--ck-spacing-large)}.ck.ck-editor__editable_inline>:last-child{margin-bottom:var(--ck-spacing-large)}.ck.ck-balloon-panel.ck-toolbar-container[class*=arrow_n]:after{border-bottom-color:var(--ck-color-base-foreground)}.ck.ck-balloon-panel.ck-toolbar-container[class*=arrow_s]:after{border-top-color:var(--ck-color-base-foreground)}\"","\nvar content = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./label.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"singleton\":true,\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./label.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./label.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = \".ck.ck-label{display:block}.ck.ck-voice-label{display:none}.ck.ck-label{font-weight:700}\"","\nvar content = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./stickypanel.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"singleton\":true,\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./stickypanel.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./stickypanel.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = \".ck.ck-sticky-panel .ck-sticky-panel__content_sticky{z-index:var(--ck-z-modal);position:fixed;top:0}.ck.ck-sticky-panel .ck-sticky-panel__content_sticky_bottom-limit{top:auto;position:absolute}.ck.ck-sticky-panel .ck-sticky-panel__content_sticky{box-shadow:var(--ck-drop-shadow),0 0;border-width:0 1px 1px;border-top-left-radius:0;border-top-right-radius:0}\"","\nvar content = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./toolbar.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"singleton\":true,\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./toolbar.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./toolbar.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = \".ck.ck-toolbar{-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;user-select:none;display:flex;flex-flow:row wrap;align-items:center}.ck.ck-toolbar.ck-toolbar_vertical{flex-direction:column}.ck.ck-toolbar.ck-toolbar_floating{flex-wrap:nowrap}.ck.ck-toolbar__separator{display:inline-block}.ck.ck-toolbar__newline{display:block;width:100%}.ck.ck-toolbar{border-radius:0}.ck-rounded-corners .ck.ck-toolbar,.ck.ck-toolbar.ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck.ck-toolbar{background:var(--ck-color-toolbar-background);padding:0 var(--ck-spacing-small);border:1px solid var(--ck-color-toolbar-border)}.ck.ck-toolbar>*{margin-right:var(--ck-spacing-small);margin-top:var(--ck-spacing-small);margin-bottom:var(--ck-spacing-small)}.ck.ck-toolbar.ck-toolbar_vertical{padding:0}.ck.ck-toolbar.ck-toolbar_vertical>*{width:100%;margin:0;border-radius:0;border:0}.ck.ck-toolbar>:last-child{margin-right:0}.ck-toolbar-container .ck.ck-toolbar{border:0}.ck.ck-toolbar__separator{align-self:stretch;width:1px;margin-top:0;margin-bottom:0;background:var(--ck-color-toolbar-border)}.ck.ck-toolbar__newline{margin:0}\"","\nvar content = require(\"!!../../../postcss-loader/src/index.js??ref--6-1!./classiceditor.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"singleton\":true,\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../postcss-loader/src/index.js??ref--6-1!./classiceditor.css\", function() {\n\t\tvar newContent = require(\"!!../../../postcss-loader/src/index.js??ref--6-1!./classiceditor.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = \".ck.ck-editor{position:relative}.ck.ck-editor .ck-editor__top .ck-sticky-panel .ck-toolbar{z-index:var(--ck-z-modal)}.ck.ck-editor__top .ck-sticky-panel .ck-toolbar{border-radius:0}.ck-rounded-corners .ck.ck-editor__top .ck-sticky-panel .ck-toolbar,.ck.ck-editor__top .ck-sticky-panel .ck-toolbar.ck-rounded-corners{border-radius:var(--ck-border-radius);border-bottom-left-radius:0;border-bottom-right-radius:0}.ck.ck-editor__top .ck-sticky-panel .ck-toolbar{border-bottom-width:0}.ck.ck-editor__top .ck-sticky-panel .ck-sticky-panel__content_sticky .ck-toolbar{border-bottom-width:1px;border-radius:0}.ck-rounded-corners .ck.ck-editor__top .ck-sticky-panel .ck-sticky-panel__content_sticky .ck-toolbar,.ck.ck-editor__top .ck-sticky-panel .ck-sticky-panel__content_sticky .ck-toolbar.ck-rounded-corners{border-radius:var(--ck-border-radius);border-radius:0}.ck.ck-editor__main>.ck-editor__editable{background:var(--ck-color-base-background);border-radius:0}.ck-rounded-corners .ck.ck-editor__main>.ck-editor__editable,.ck.ck-editor__main>.ck-editor__editable.ck-rounded-corners{border-radius:var(--ck-border-radius);border-top-left-radius:0;border-top-right-radius:0}.ck.ck-editor__main>.ck-editor__editable:not(.ck-focused){border-color:var(--ck-color-base-border)}\"","\nvar content = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./icon.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"singleton\":true,\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./icon.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./icon.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = \".ck.ck-icon{vertical-align:middle}:root{--ck-icon-size:calc(var(--ck-line-height-base)*var(--ck-font-size-normal))}.ck.ck-icon{width:var(--ck-icon-size);height:var(--ck-icon-size);font-size:.8333350694em;will-change:transform}.ck.ck-icon,.ck.ck-icon *{color:inherit;cursor:inherit}.ck.ck-icon :not([fill]){fill:currentColor}\"","\nvar content = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./tooltip.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"singleton\":true,\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./tooltip.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./tooltip.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = \".ck.ck-tooltip,.ck.ck-tooltip .ck-tooltip__text:after{position:absolute;pointer-events:none;-webkit-backface-visibility:hidden}.ck-tooltip{visibility:hidden;opacity:0;display:none;z-index:var(--ck-z-modal)}.ck-tooltip .ck-tooltip__text{display:inline-block}.ck-tooltip .ck-tooltip__text:after{content:\\\"\\\";width:0;height:0}:root{--ck-tooltip-arrow-size:5px}.ck.ck-tooltip{left:50%}.ck.ck-tooltip.ck-tooltip_s{bottom:calc(-1*var(--ck-tooltip-arrow-size));transform:translateY(100%)}.ck.ck-tooltip.ck-tooltip_s .ck-tooltip__text:after{top:calc(-1*var(--ck-tooltip-arrow-size));transform:translateX(-50%);border-left-color:transparent;border-bottom-color:var(--ck-color-tooltip-background);border-right-color:transparent;border-top-color:transparent;border-left-width:var(--ck-tooltip-arrow-size);border-bottom-width:var(--ck-tooltip-arrow-size);border-right-width:var(--ck-tooltip-arrow-size);border-top-width:0}.ck.ck-tooltip.ck-tooltip_n{top:calc(-1*var(--ck-tooltip-arrow-size));transform:translateY(-100%)}.ck.ck-tooltip.ck-tooltip_n .ck-tooltip__text:after{bottom:calc(-1*var(--ck-tooltip-arrow-size));transform:translateX(-50%);border-left-color:transparent;border-bottom-color:transparent;border-right-color:transparent;border-top-color:var(--ck-color-tooltip-background);border-left-width:var(--ck-tooltip-arrow-size);border-bottom-width:0;border-right-width:var(--ck-tooltip-arrow-size);border-top-width:var(--ck-tooltip-arrow-size)}.ck.ck-tooltip .ck-tooltip__text{border-radius:0}.ck-rounded-corners .ck.ck-tooltip .ck-tooltip__text,.ck.ck-tooltip .ck-tooltip__text.ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck.ck-tooltip .ck-tooltip__text{font-size:.9em;line-height:1.5;color:var(--ck-color-tooltip-text);padding:var(--ck-spacing-small) var(--ck-spacing-medium);background:var(--ck-color-tooltip-background);position:relative;left:-50%}.ck.ck-tooltip .ck-tooltip__text:after{border-style:solid;left:50%}.ck.ck-tooltip,.ck.ck-tooltip .ck-tooltip__text:after{transition:opacity .2s ease-in-out .2s}\"","\nvar content = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./button.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"singleton\":true,\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./button.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./button.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = \".ck.ck-button,a.ck.ck-button{-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;user-select:none}.ck.ck-button .ck-tooltip,a.ck.ck-button .ck-tooltip{display:block}@media (hover:none){.ck.ck-button .ck-tooltip,a.ck.ck-button .ck-tooltip{display:none}}.ck.ck-button,a.ck.ck-button{position:relative;display:inline-flex;align-items:center;justify-content:left}.ck.ck-button.ck-button_with-text .ck-button__label,a.ck.ck-button.ck-button_with-text .ck-button__label{display:inline-block}.ck.ck-button:not(.ck-button_with-text),a.ck.ck-button:not(.ck-button_with-text){justify-content:center}.ck.ck-button:hover .ck-tooltip,a.ck.ck-button:hover .ck-tooltip{visibility:visible;opacity:1}.ck.ck-button .ck-button__label,.ck.ck-button:focus:not(:hover) .ck-tooltip,a.ck.ck-button .ck-button__label,a.ck.ck-button:focus:not(:hover) .ck-tooltip{display:none}.ck.ck-button,a.ck.ck-button{background:var(--ck-color-button-default-background)}.ck.ck-button:not(.ck-disabled):hover,a.ck.ck-button:not(.ck-disabled):hover{background:var(--ck-color-button-default-hover-background)}.ck.ck-button:not(.ck-disabled):active,a.ck.ck-button:not(.ck-disabled):active{background:var(--ck-color-button-default-active-background);box-shadow:inset 0 2px 2px var(--ck-color-button-default-active-shadow)}.ck.ck-button.ck-disabled,a.ck.ck-button.ck-disabled{background:var(--ck-color-button-default-disabled-background)}.ck.ck-button,a.ck.ck-button{border-radius:0}.ck-rounded-corners .ck.ck-button,.ck-rounded-corners a.ck.ck-button,.ck.ck-button.ck-rounded-corners,a.ck.ck-button.ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck.ck-button,a.ck.ck-button{white-space:nowrap;cursor:default;vertical-align:middle;padding:var(--ck-spacing-tiny);text-align:center;min-width:var(--ck-ui-component-min-height);min-height:var(--ck-ui-component-min-height);line-height:1;font-size:inherit;border:1px solid transparent;transition:box-shadow .2s ease-in-out;-webkit-appearance:none}.ck.ck-button:active,.ck.ck-button:focus,a.ck.ck-button:active,a.ck.ck-button:focus{outline:none;border:var(--ck-focus-ring);box-shadow:var(--ck-focus-outer-shadow),0 0;border-color:transparent}.ck.ck-button.ck-disabled:active,.ck.ck-button.ck-disabled:focus,a.ck.ck-button.ck-disabled:active,a.ck.ck-button.ck-disabled:focus{box-shadow:var(--ck-focus-disabled-outer-shadow),0 0}.ck.ck-button.ck-disabled .ck-button__icon,a.ck.ck-button.ck-disabled .ck-button__icon{opacity:var(--ck-disabled-opacity)}.ck.ck-button.ck-disabled .ck-button__label,a.ck.ck-button.ck-disabled .ck-button__label{opacity:var(--ck-disabled-opacity)}.ck.ck-button.ck-button_with-text,a.ck.ck-button.ck-button_with-text{padding:var(--ck-spacing-tiny) var(--ck-spacing-standard)}.ck.ck-button.ck-button_with-text .ck-button__icon,a.ck.ck-button.ck-button_with-text .ck-button__icon{margin-left:calc(-1*var(--ck-spacing-small));margin-right:var(--ck-spacing-small)}.ck.ck-button.ck-on,a.ck.ck-button.ck-on{background:var(--ck-color-button-on-background)}.ck.ck-button.ck-on:not(.ck-disabled):hover,a.ck.ck-button.ck-on:not(.ck-disabled):hover{background:var(--ck-color-button-on-hover-background)}.ck.ck-button.ck-on:not(.ck-disabled):active,a.ck.ck-button.ck-on:not(.ck-disabled):active{background:var(--ck-color-button-on-active-background);box-shadow:inset 0 2px 2px var(--ck-color-button-on-active-shadow)}.ck.ck-button.ck-on.ck-disabled,a.ck.ck-button.ck-on.ck-disabled{background:var(--ck-color-button-on-disabled-background)}.ck.ck-button.ck-button-save,a.ck.ck-button.ck-button-save{color:var(--ck-color-button-save)}.ck.ck-button.ck-button-cancel,a.ck.ck-button.ck-button-cancel{color:var(--ck-color-button-cancel)}.ck.ck-button .ck-button__icon use,.ck.ck-button .ck-button__icon use *,a.ck.ck-button .ck-button__icon use,a.ck.ck-button .ck-button__icon use *{color:inherit}.ck.ck-button .ck-button__label,a.ck.ck-button .ck-button__label{font-size:inherit;font-weight:inherit;color:inherit;cursor:inherit;vertical-align:middle}.ck.ck-button-action,a.ck.ck-button-action{background:var(--ck-color-button-action-background)}.ck.ck-button-action:not(.ck-disabled):hover,a.ck.ck-button-action:not(.ck-disabled):hover{background:var(--ck-color-button-action-hover-background)}.ck.ck-button-action:not(.ck-disabled):active,a.ck.ck-button-action:not(.ck-disabled):active{background:var(--ck-color-button-action-active-background);box-shadow:inset 0 2px 2px var(--ck-color-button-action-active-shadow)}.ck.ck-button-action.ck-disabled,a.ck.ck-button-action.ck-disabled{background:var(--ck-color-button-action-disabled-background)}.ck.ck-button-action,a.ck.ck-button-action{color:var(--ck-color-button-action-text)}.ck.ck-button-bold,a.ck.ck-button-bold{font-weight:700}\"","\nvar content = require(\"!!../../../postcss-loader/src/index.js??ref--6-1!./blockquote.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"singleton\":true,\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../postcss-loader/src/index.js??ref--6-1!./blockquote.css\", function() {\n\t\tvar newContent = require(\"!!../../../postcss-loader/src/index.js??ref--6-1!./blockquote.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = \".ck-content blockquote{overflow:hidden;padding-right:1.5em;padding-left:1.5em;margin-left:0;font-style:italic;border-left:5px solid #ccc}\"","\nvar content = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./dropdown.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"singleton\":true,\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./dropdown.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./dropdown.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = \".ck.ck-dropdown{display:inline-block;position:relative}.ck.ck-dropdown .ck-dropdown__arrow{pointer-events:none;z-index:var(--ck-z-default)}.ck.ck-dropdown .ck-button.ck-dropdown__button{width:100%}.ck.ck-dropdown .ck-button.ck-dropdown__button.ck-on .ck-tooltip{display:none}.ck.ck-dropdown .ck-dropdown__panel{-webkit-backface-visibility:hidden;display:none;z-index:var(--ck-z-modal);position:absolute}.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel-visible{display:inline-block;will-change:transform}.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_ne,.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_nw{bottom:100%}.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_se,.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_sw{transform:translate3d(0,100%,0)}.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_ne,.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_se{left:0}.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_nw,.ck.ck-dropdown .ck-dropdown__panel.ck-dropdown__panel_sw{right:0}:root{--ck-dropdown-arrow-size:calc(0.5*var(--ck-icon-size))}.ck.ck-dropdown{font-size:inherit}.ck.ck-dropdown .ck-dropdown__arrow{right:var(--ck-spacing-standard);width:var(--ck-dropdown-arrow-size);margin-left:var(--ck-spacing-small)}.ck.ck-dropdown.ck-disabled .ck-dropdown__arrow{opacity:var(--ck-disabled-opacity)}.ck.ck-dropdown .ck-button.ck-dropdown__button:not(.ck-button_with-text){padding-left:var(--ck-spacing-small)}.ck.ck-dropdown .ck-button.ck-dropdown__button.ck-disabled .ck-button__label{opacity:var(--ck-disabled-opacity)}.ck.ck-dropdown .ck-button.ck-dropdown__button.ck-on{border-bottom-left-radius:0;border-bottom-right-radius:0}.ck.ck-dropdown .ck-button.ck-dropdown__button .ck-button__label{width:7em;overflow:hidden;text-overflow:ellipsis}.ck.ck-dropdown__panel{box-shadow:var(--ck-drop-shadow),0 0;border-radius:0}.ck-rounded-corners .ck.ck-dropdown__panel,.ck.ck-dropdown__panel.ck-rounded-corners{border-radius:var(--ck-border-radius);border-top-left-radius:0}.ck.ck-dropdown__panel{background:var(--ck-color-dropdown-panel-background);border:1px solid var(--ck-color-dropdown-panel-border);bottom:0;min-width:100%}\"","\nvar content = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./list.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"singleton\":true,\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./list.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./list.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = \".ck.ck-list{-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none;user-select:none;display:flex;flex-direction:column}.ck.ck-list .ck-list__item,.ck.ck-list .ck-list__separator{display:block}.ck.ck-list .ck-list__item>:focus{position:relative;z-index:var(--ck-z-default)}.ck.ck-list{border-radius:0}.ck-rounded-corners .ck.ck-list,.ck.ck-list.ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck.ck-list{list-style-type:none;background:var(--ck-color-list-background)}.ck.ck-list__item{cursor:default;min-width:12em}.ck.ck-list__item .ck-button{min-height:unset;width:100%;text-align:left;border-radius:0;border:0;padding:calc(0.2*var(--ck-line-height-base)*var(--ck-font-size-base)) calc(0.4*var(--ck-line-height-base)*var(--ck-font-size-base))}.ck.ck-list__item .ck-button .ck-button__label{line-height:calc(1.2*var(--ck-line-height-base)*var(--ck-font-size-base))}.ck.ck-list__item .ck-button:active{box-shadow:none}.ck.ck-list__item .ck-button.ck-on{background:var(--ck-color-list-button-on-background);color:var(--ck-color-list-button-on-text)}.ck.ck-list__item .ck-button.ck-on:hover:not(ck-disabled){background:var(--ck-color-list-button-on-background-focus)}.ck.ck-list__item .ck-button.ck-on:active{box-shadow:none}.ck.ck-list__item .ck-button:hover:not(.ck-disabled){background:var(--ck-color-list-button-hover-background)}.ck.ck-list__item .ck-switchbutton.ck-on{background:var(--ck-color-list-background);color:inherit}.ck.ck-list__item .ck-switchbutton.ck-on:hover:not(ck-disabled){background:var(--ck-color-list-button-hover-background);color:inherit}.ck.ck-list__separator{height:1px;width:100%;background:var(--ck-color-base-border)}\"","\nvar content = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./switchbutton.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"singleton\":true,\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./switchbutton.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./switchbutton.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = \".ck.ck-button.ck-switchbutton .ck-button__toggle,.ck.ck-button.ck-switchbutton .ck-button__toggle .ck-button__toggle__inner{display:block}:root{--ck-switch-button-toggle-width:2.6153846154em;--ck-switch-button-toggle-inner-size:1.0769230769em;--ck-switch-button-toggle-spacing:1px}.ck.ck-button.ck-switchbutton .ck-button__label{margin-right:calc(2*var(--ck-spacing-large))}.ck.ck-button.ck-switchbutton.ck-disabled .ck-button__toggle{opacity:var(--ck-disabled-opacity)}.ck.ck-button.ck-switchbutton .ck-button__toggle{border-radius:0}.ck-rounded-corners .ck.ck-button.ck-switchbutton .ck-button__toggle,.ck.ck-button.ck-switchbutton .ck-button__toggle.ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck.ck-button.ck-switchbutton .ck-button__toggle{margin-left:auto;transition:background .4s ease;width:var(--ck-switch-button-toggle-width);background:var(--ck-color-switch-button-off-background)}.ck.ck-button.ck-switchbutton .ck-button__toggle .ck-button__toggle__inner{border-radius:0}.ck-rounded-corners .ck.ck-button.ck-switchbutton .ck-button__toggle .ck-button__toggle__inner,.ck.ck-button.ck-switchbutton .ck-button__toggle .ck-button__toggle__inner.ck-rounded-corners{border-radius:var(--ck-border-radius);border-radius:calc(0.5*var(--ck-border-radius))}.ck.ck-button.ck-switchbutton .ck-button__toggle .ck-button__toggle__inner{margin:var(--ck-switch-button-toggle-spacing);width:var(--ck-switch-button-toggle-inner-size);height:var(--ck-switch-button-toggle-inner-size);background:var(--ck-color-switch-button-inner-background);transition:transform .3s ease}.ck.ck-button.ck-switchbutton.ck-on .ck-button__toggle{background:var(--ck-color-switch-button-on-background)}.ck.ck-button.ck-switchbutton.ck-on .ck-button__toggle .ck-button__toggle__inner{transform:translateX(1.3846153847em)}\"","\nvar content = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./toolbardropdown.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"singleton\":true,\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./toolbardropdown.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./toolbardropdown.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = \".ck.ck-toolbar-dropdown .ck-toolbar{flex-wrap:nowrap}.ck.ck-toolbar-dropdown .ck-dropdown__panel .ck-button:focus{z-index:calc(var(--ck-z-default) + 1)}.ck.ck-toolbar-dropdown .ck-toolbar{border:0}\"","\nvar content = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./listdropdown.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"singleton\":true,\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./listdropdown.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../postcss-loader/src/index.js??ref--6-1!./listdropdown.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = \".ck.ck-dropdown .ck-dropdown__panel .ck-list{border-radius:0}.ck-rounded-corners .ck.ck-dropdown .ck-dropdown__panel .ck-list,.ck.ck-dropdown .ck-dropdown__panel .ck-list.ck-rounded-corners{border-radius:var(--ck-border-radius);border-top-left-radius:0}.ck.ck-dropdown .ck-dropdown__panel .ck-list .ck-list__item:first-child .ck-button{border-radius:0}.ck-rounded-corners .ck.ck-dropdown .ck-dropdown__panel .ck-list .ck-list__item:first-child .ck-button,.ck.ck-dropdown .ck-dropdown__panel .ck-list .ck-list__item:first-child .ck-button.ck-rounded-corners{border-radius:var(--ck-border-radius);border-top-left-radius:0;border-bottom-left-radius:0;border-bottom-right-radius:0}.ck.ck-dropdown .ck-dropdown__panel .ck-list .ck-list__item:last-child .ck-button{border-radius:0}.ck-rounded-corners .ck.ck-dropdown .ck-dropdown__panel .ck-list .ck-list__item:last-child .ck-button,.ck.ck-dropdown .ck-dropdown__panel .ck-list .ck-list__item:last-child .ck-button.ck-rounded-corners{border-radius:var(--ck-border-radius);border-top-left-radius:0;border-top-right-radius:0}\"","module.exports = \".ck.ck-heading_heading1{font-size:20px}.ck.ck-heading_heading2{font-size:17px}.ck.ck-heading_heading3{font-size:14px}.ck[class*=ck-heading_heading]{font-weight:700}.ck.ck-dropdown.ck-heading-dropdown .ck-dropdown__button .ck-button__label{width:8em}.ck.ck-dropdown.ck-heading-dropdown .ck-dropdown__panel .ck-list__item{min-width:18em}\"","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nexport default clone;\n","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * marked - a markdown parser\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/chjj/marked\n */\n;\n(function () {\n  /**\n   * Block-Level Grammar\n   */\n  var block = {\n    newline: /^\\n+/,\n    code: /^( {4}[^\\n]+\\n*)+/,\n    fences: noop,\n    hr: /^( *[-*_]){3,} *(?:\\n+|$)/,\n    heading: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,\n    nptable: noop,\n    lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n    blockquote: /^( *>[^\\n]+(\\n(?!def)[^\\n]+)*\\n*)+/,\n    list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n    html: /^ *(?:comment *(?:\\n|\\s*$)|closed *(?:\\n{2,}|\\s*$)|closing *(?:\\n{2,}|\\s*$))/,\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +[\"(]([^\\n]+)[\")])? *(?:\\n+|$)/,\n    table: noop,\n    paragraph: /^((?:[^\\n]+\\n?(?!hr|heading|lheading|blockquote|tag|def))+)\\n*/,\n    text: /^[^\\n]+/\n  };\n  block.bullet = /(?:[*+-]|\\d+\\.)/;\n  block.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\n  block.item = replace(block.item, 'gm')(/bull/g, block.bullet)();\n  block.list = replace(block.list)(/bull/g, block.bullet)('hr', '\\\\n+(?=\\\\1?(?:[-*_] *){3,}(?:\\\\n+|$))')('def', '\\\\n+(?=' + block.def.source + ')')();\n  block.blockquote = replace(block.blockquote)('def', block.def)();\n  block._tag = '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code' + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo' + '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:/|[^\\\\w\\\\s@]*@)\\\\b';\n  block.html = replace(block.html)('comment', /<!--[\\s\\S]*?-->/)('closed', /<(tag)[\\s\\S]+?<\\/\\1>/)('closing', /<tag(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/)(/tag/g, block._tag)();\n  block.paragraph = replace(block.paragraph)('hr', block.hr)('heading', block.heading)('lheading', block.lheading)('blockquote', block.blockquote)('tag', '<' + block._tag)('def', block.def)();\n  /**\n   * Normal Block Grammar\n   */\n\n  block.normal = merge({}, block);\n  /**\n   * GFM Block Grammar\n   */\n\n  block.gfm = merge({}, block.normal, {\n    fences: /^ *(`{3,}|~{3,})[ \\.]*(\\S+)? *\\n([\\s\\S]*?)\\s*\\1 *(?:\\n+|$)/,\n    paragraph: /^/,\n    heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n  });\n  block.gfm.paragraph = replace(block.paragraph)('(?!', '(?!' + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|' + block.list.source.replace('\\\\1', '\\\\3') + '|')();\n  /**\n   * GFM + Tables Block Grammar\n   */\n\n  block.tables = merge({}, block.gfm, {\n    nptable: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\n    table: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/\n  });\n  /**\n   * Block Lexer\n   */\n\n  function Lexer(options) {\n    this.tokens = [];\n    this.tokens.links = {};\n    this.options = options || marked.defaults;\n    this.rules = block.normal;\n\n    if (this.options.gfm) {\n      if (this.options.tables) {\n        this.rules = block.tables;\n      } else {\n        this.rules = block.gfm;\n      }\n    }\n  }\n  /**\n   * Expose Block Rules\n   */\n\n\n  Lexer.rules = block;\n  /**\n   * Static Lex Method\n   */\n\n  Lexer.lex = function (src, options) {\n    var lexer = new Lexer(options);\n    return lexer.lex(src);\n  };\n  /**\n   * Preprocessing\n   */\n\n\n  Lexer.prototype.lex = function (src) {\n    src = src.replace(/\\r\\n|\\r/g, '\\n').replace(/\\t/g, '    ').replace(/\\u00a0/g, ' ').replace(/\\u2424/g, '\\n');\n    return this.token(src, true);\n  };\n  /**\n   * Lexing\n   */\n\n\n  Lexer.prototype.token = function (src, top, bq) {\n    var src = src.replace(/^ +$/gm, ''),\n        next,\n        loose,\n        cap,\n        bull,\n        b,\n        item,\n        space,\n        i,\n        l;\n\n    while (src) {\n      // newline\n      if (cap = this.rules.newline.exec(src)) {\n        src = src.substring(cap[0].length);\n\n        if (cap[0].length > 1) {\n          this.tokens.push({\n            type: 'space'\n          });\n        }\n      } // code\n\n\n      if (cap = this.rules.code.exec(src)) {\n        src = src.substring(cap[0].length);\n        cap = cap[0].replace(/^ {4}/gm, '');\n        this.tokens.push({\n          type: 'code',\n          text: !this.options.pedantic ? cap.replace(/\\n+$/, '') : cap\n        });\n        continue;\n      } // fences (gfm)\n\n\n      if (cap = this.rules.fences.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'code',\n          lang: cap[2],\n          text: cap[3] || ''\n        });\n        continue;\n      } // heading\n\n\n      if (cap = this.rules.heading.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'heading',\n          depth: cap[1].length,\n          text: cap[2]\n        });\n        continue;\n      } // table no leading pipe (gfm)\n\n\n      if (top && (cap = this.rules.nptable.exec(src))) {\n        src = src.substring(cap[0].length);\n        item = {\n          type: 'table',\n          header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3].replace(/\\n$/, '').split('\\n')\n        };\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = item.cells[i].split(/ *\\| */);\n        }\n\n        this.tokens.push(item);\n        continue;\n      } // lheading\n\n\n      if (cap = this.rules.lheading.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'heading',\n          depth: cap[2] === '=' ? 1 : 2,\n          text: cap[1]\n        });\n        continue;\n      } // hr\n\n\n      if (cap = this.rules.hr.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'hr'\n        });\n        continue;\n      } // blockquote\n\n\n      if (cap = this.rules.blockquote.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'blockquote_start'\n        });\n        cap = cap[0].replace(/^ *> ?/gm, ''); // Pass `top` to keep the current\n        // \"toplevel\" state. This is exactly\n        // how markdown.pl works.\n\n        this.token(cap, top, true);\n        this.tokens.push({\n          type: 'blockquote_end'\n        });\n        continue;\n      } // list\n\n\n      if (cap = this.rules.list.exec(src)) {\n        src = src.substring(cap[0].length);\n        bull = cap[2];\n        this.tokens.push({\n          type: 'list_start',\n          ordered: bull.length > 1\n        }); // Get each top-level item.\n\n        cap = cap[0].match(this.rules.item);\n        next = false;\n        l = cap.length;\n        i = 0;\n\n        for (; i < l; i++) {\n          item = cap[i]; // Remove the list item's bullet\n          // so it is seen as the next token.\n\n          space = item.length;\n          item = item.replace(/^ *([*+-]|\\d+\\.) +/, ''); // Outdent whatever the\n          // list item contains. Hacky.\n\n          if (~item.indexOf('\\n ')) {\n            space -= item.length;\n            item = !this.options.pedantic ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '') : item.replace(/^ {1,4}/gm, '');\n          } // Determine whether the next list item belongs here.\n          // Backpedal if it does not belong in this list.\n\n\n          if (this.options.smartLists && i !== l - 1) {\n            b = block.bullet.exec(cap[i + 1])[0];\n\n            if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n              src = cap.slice(i + 1).join('\\n') + src;\n              i = l - 1;\n            }\n          } // Determine whether item is loose or not.\n          // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n          // for discount behavior.\n\n\n          loose = next || /\\n\\n(?!\\s*$)/.test(item);\n\n          if (i !== l - 1) {\n            next = item.charAt(item.length - 1) === '\\n';\n            if (!loose) loose = next;\n          }\n\n          this.tokens.push({\n            type: loose ? 'loose_item_start' : 'list_item_start'\n          }); // Recurse.\n\n          this.token(item, false, bq);\n          this.tokens.push({\n            type: 'list_item_end'\n          });\n        }\n\n        this.tokens.push({\n          type: 'list_end'\n        });\n        continue;\n      } // html\n\n\n      if (cap = this.rules.html.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: this.options.sanitize ? 'paragraph' : 'html',\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: cap[0]\n        });\n        continue;\n      } // def\n\n\n      if (!bq && top && (cap = this.rules.def.exec(src))) {\n        src = src.substring(cap[0].length);\n        this.tokens.links[cap[1].toLowerCase()] = {\n          href: cap[2],\n          title: cap[3]\n        };\n        continue;\n      } // table (gfm)\n\n\n      if (top && (cap = this.rules.table.exec(src))) {\n        src = src.substring(cap[0].length);\n        item = {\n          type: 'table',\n          header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n')\n        };\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = item.cells[i].replace(/^ *\\| *| *\\| *$/g, '').split(/ *\\| */);\n        }\n\n        this.tokens.push(item);\n        continue;\n      } // top-level paragraph\n\n\n      if (top && (cap = this.rules.paragraph.exec(src))) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'paragraph',\n          text: cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1]\n        });\n        continue;\n      } // text\n\n\n      if (cap = this.rules.text.exec(src)) {\n        // Top-level should never reach here.\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'text',\n          text: cap[0]\n        });\n        continue;\n      }\n\n      if (src) {\n        throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n      }\n    }\n\n    return this.tokens;\n  };\n  /**\n   * Inline-Level Grammar\n   */\n\n\n  var inline = {\n    escape: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\n    autolink: /^<([^ >]+(@|:\\/)[^ >]+)>/,\n    url: noop,\n    tag: /^<!--[\\s\\S]*?-->|^<\\/?\\w+(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/,\n    link: /^!?\\[(inside)\\]\\(href\\)/,\n    reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\n    nolink: /^!?\\[((?:\\[[^\\]]*\\]|[^\\[\\]])*)\\]/,\n    strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\n    em: /^\\b_((?:[^_]|__)+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\n    code: /^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/,\n    br: /^ {2,}\\n(?!\\s*$)/,\n    del: noop,\n    text: /^[\\s\\S]+?(?=[\\\\<!\\[_*`]| {2,}\\n|$)/\n  };\n  inline._inside = /(?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/;\n  inline._href = /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;\n  inline.link = replace(inline.link)('inside', inline._inside)('href', inline._href)();\n  inline.reflink = replace(inline.reflink)('inside', inline._inside)();\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline.normal = merge({}, inline);\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline.pedantic = merge({}, inline.normal, {\n    strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\n  });\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline.gfm = merge({}, inline.normal, {\n    escape: replace(inline.escape)('])', '~|])')(),\n    url: /^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/,\n    del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\n    text: replace(inline.text)(']|', '~]|')('|', '|https?://|')()\n  });\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline.breaks = merge({}, inline.gfm, {\n    br: replace(inline.br)('{2,}', '*')(),\n    text: replace(inline.gfm.text)('{2,}', '*')()\n  });\n  /**\n   * Inline Lexer & Compiler\n   */\n\n  function InlineLexer(links, options) {\n    this.options = options || marked.defaults;\n    this.links = links;\n    this.rules = inline.normal;\n    this.renderer = this.options.renderer || new Renderer();\n    this.renderer.options = this.options;\n\n    if (!this.links) {\n      throw new Error('Tokens array requires a `links` property.');\n    }\n\n    if (this.options.gfm) {\n      if (this.options.breaks) {\n        this.rules = inline.breaks;\n      } else {\n        this.rules = inline.gfm;\n      }\n    } else if (this.options.pedantic) {\n      this.rules = inline.pedantic;\n    }\n  }\n  /**\n   * Expose Inline Rules\n   */\n\n\n  InlineLexer.rules = inline;\n  /**\n   * Static Lexing/Compiling Method\n   */\n\n  InlineLexer.output = function (src, links, options) {\n    var inline = new InlineLexer(links, options);\n    return inline.output(src);\n  };\n  /**\n   * Lexing/Compiling\n   */\n\n\n  InlineLexer.prototype.output = function (src) {\n    var out = '',\n        link,\n        text,\n        href,\n        cap;\n\n    while (src) {\n      // escape\n      if (cap = this.rules.escape.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += cap[1];\n        continue;\n      } // autolink\n\n\n      if (cap = this.rules.autolink.exec(src)) {\n        src = src.substring(cap[0].length);\n\n        if (cap[2] === '@') {\n          text = cap[1].charAt(6) === ':' ? this.mangle(cap[1].substring(7)) : this.mangle(cap[1]);\n          href = this.mangle('mailto:') + text;\n        } else {\n          text = escape(cap[1]);\n          href = text;\n        }\n\n        out += this.renderer.link(href, null, text);\n        continue;\n      } // url (gfm)\n\n\n      if (!this.inLink && (cap = this.rules.url.exec(src))) {\n        src = src.substring(cap[0].length);\n        text = escape(cap[1]);\n        href = text;\n        out += this.renderer.link(href, null, text);\n        continue;\n      } // tag\n\n\n      if (cap = this.rules.tag.exec(src)) {\n        if (!this.inLink && /^<a /i.test(cap[0])) {\n          this.inLink = true;\n        } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n          this.inLink = false;\n        }\n\n        src = src.substring(cap[0].length);\n        out += this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0];\n        continue;\n      } // link\n\n\n      if (cap = this.rules.link.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.inLink = true;\n        out += this.outputLink(cap, {\n          href: cap[2],\n          title: cap[3]\n        });\n        this.inLink = false;\n        continue;\n      } // reflink, nolink\n\n\n      if ((cap = this.rules.reflink.exec(src)) || (cap = this.rules.nolink.exec(src))) {\n        src = src.substring(cap[0].length);\n        link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = this.links[link.toLowerCase()];\n\n        if (!link || !link.href) {\n          out += cap[0].charAt(0);\n          src = cap[0].substring(1) + src;\n          continue;\n        }\n\n        this.inLink = true;\n        out += this.outputLink(cap, link);\n        this.inLink = false;\n        continue;\n      } // strong\n\n\n      if (cap = this.rules.strong.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.strong(this.output(cap[2] || cap[1]));\n        continue;\n      } // em\n\n\n      if (cap = this.rules.em.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.em(this.output(cap[2] || cap[1]));\n        continue;\n      } // code\n\n\n      if (cap = this.rules.code.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.codespan(escape(cap[2], true));\n        continue;\n      } // br\n\n\n      if (cap = this.rules.br.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.br();\n        continue;\n      } // del (gfm)\n\n\n      if (cap = this.rules.del.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.del(this.output(cap[1]));\n        continue;\n      } // text\n\n\n      if (cap = this.rules.text.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.text(escape(this.smartypants(cap[0])));\n        continue;\n      }\n\n      if (src) {\n        throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n      }\n    }\n\n    return out;\n  };\n  /**\n   * Compile Link\n   */\n\n\n  InlineLexer.prototype.outputLink = function (cap, link) {\n    var href = escape(link.href),\n        title = link.title ? escape(link.title) : null;\n    return cap[0].charAt(0) !== '!' ? this.renderer.link(href, title, this.output(cap[1])) : this.renderer.image(href, title, escape(cap[1]));\n  };\n  /**\n   * Smartypants Transformations\n   */\n\n\n  InlineLexer.prototype.smartypants = function (text) {\n    if (!this.options.smartypants) return text;\n    return text // em-dashes\n    .replace(/---/g, \"\\u2014\") // en-dashes\n    .replace(/--/g, \"\\u2013\") // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\") // closing singles & apostrophes\n    .replace(/'/g, \"\\u2019\") // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\") // closing doubles\n    .replace(/\"/g, \"\\u201D\") // ellipses\n    .replace(/\\.{3}/g, \"\\u2026\");\n  };\n  /**\n   * Mangle Links\n   */\n\n\n  InlineLexer.prototype.mangle = function (text) {\n    if (!this.options.mangle) return text;\n    var out = '',\n        l = text.length,\n        i = 0,\n        ch;\n\n    for (; i < l; i++) {\n      ch = text.charCodeAt(i);\n\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  };\n  /**\n   * Renderer\n   */\n\n\n  function Renderer(options) {\n    this.options = options || {};\n  }\n\n  Renderer.prototype.code = function (code, lang, escaped) {\n    if (this.options.highlight) {\n      var out = this.options.highlight(code, lang);\n\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    if (!lang) {\n      return '<pre><code>' + (escaped ? code : escape(code, true)) + '\\n</code></pre>';\n    }\n\n    return '<pre><code class=\"' + this.options.langPrefix + escape(lang, true) + '\">' + (escaped ? code : escape(code, true)) + '\\n</code></pre>\\n';\n  };\n\n  Renderer.prototype.blockquote = function (quote) {\n    return '<blockquote>\\n' + quote + '</blockquote>\\n';\n  };\n\n  Renderer.prototype.html = function (html) {\n    return html;\n  };\n\n  Renderer.prototype.heading = function (text, level, raw) {\n    return '<h' + level + ' id=\"' + this.options.headerPrefix + raw.toLowerCase().replace(/[^\\w]+/g, '-') + '\">' + text + '</h' + level + '>\\n';\n  };\n\n  Renderer.prototype.hr = function () {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  };\n\n  Renderer.prototype.list = function (body, ordered) {\n    var type = ordered ? 'ol' : 'ul';\n    return '<' + type + '>\\n' + body + '</' + type + '>\\n';\n  };\n\n  Renderer.prototype.listitem = function (text) {\n    return '<li>' + text + '</li>\\n';\n  };\n\n  Renderer.prototype.paragraph = function (text) {\n    return '<p>' + text + '</p>\\n';\n  };\n\n  Renderer.prototype.table = function (header, body) {\n    return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + '<tbody>\\n' + body + '</tbody>\\n' + '</table>\\n';\n  };\n\n  Renderer.prototype.tablerow = function (content) {\n    return '<tr>\\n' + content + '</tr>\\n';\n  };\n\n  Renderer.prototype.tablecell = function (content, flags) {\n    var type = flags.header ? 'th' : 'td';\n    var tag = flags.align ? '<' + type + ' style=\"text-align:' + flags.align + '\">' : '<' + type + '>';\n    return tag + content + '</' + type + '>\\n';\n  }; // span level renderer\n\n\n  Renderer.prototype.strong = function (text) {\n    return '<strong>' + text + '</strong>';\n  };\n\n  Renderer.prototype.em = function (text) {\n    return '<em>' + text + '</em>';\n  };\n\n  Renderer.prototype.codespan = function (text) {\n    return '<code>' + text + '</code>';\n  };\n\n  Renderer.prototype.br = function () {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  };\n\n  Renderer.prototype.del = function (text) {\n    return '<del>' + text + '</del>';\n  };\n\n  Renderer.prototype.link = function (href, title, text) {\n    if (this.options.sanitize) {\n      try {\n        var prot = decodeURIComponent(unescape(href)).replace(/[^\\w:]/g, '').toLowerCase();\n      } catch (e) {\n        return '';\n      }\n\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0) {\n        return '';\n      }\n    }\n\n    var out = '<a href=\"' + href + '\"';\n\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n\n    out += '>' + text + '</a>';\n    return out;\n  };\n\n  Renderer.prototype.image = function (href, title, text) {\n    var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  };\n\n  Renderer.prototype.text = function (text) {\n    return text;\n  };\n  /**\n   * Parsing & Compiling\n   */\n\n\n  function Parser(options) {\n    this.tokens = [];\n    this.token = null;\n    this.options = options || marked.defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n  }\n  /**\n   * Static Parse Method\n   */\n\n\n  Parser.parse = function (src, options, renderer) {\n    var parser = new Parser(options, renderer);\n    return parser.parse(src);\n  };\n  /**\n   * Parse Loop\n   */\n\n\n  Parser.prototype.parse = function (src) {\n    this.inline = new InlineLexer(src.links, this.options, this.renderer);\n    this.tokens = src.reverse();\n    var out = '';\n\n    while (this.next()) {\n      out += this.tok();\n    }\n\n    return out;\n  };\n  /**\n   * Next Token\n   */\n\n\n  Parser.prototype.next = function () {\n    return this.token = this.tokens.pop();\n  };\n  /**\n   * Preview Next Token\n   */\n\n\n  Parser.prototype.peek = function () {\n    return this.tokens[this.tokens.length - 1] || 0;\n  };\n  /**\n   * Parse Text Tokens\n   */\n\n\n  Parser.prototype.parseText = function () {\n    var body = this.token.text;\n\n    while (this.peek().type === 'text') {\n      body += '\\n' + this.next().text;\n    }\n\n    return this.inline.output(body);\n  };\n  /**\n   * Parse Current Token\n   */\n\n\n  Parser.prototype.tok = function () {\n    switch (this.token.type) {\n      case 'space':\n        {\n          return '';\n        }\n\n      case 'hr':\n        {\n          return this.renderer.hr();\n        }\n\n      case 'heading':\n        {\n          return this.renderer.heading(this.inline.output(this.token.text), this.token.depth, this.token.text);\n        }\n\n      case 'code':\n        {\n          return this.renderer.code(this.token.text, this.token.lang, this.token.escaped);\n        }\n\n      case 'table':\n        {\n          var header = '',\n              body = '',\n              i,\n              row,\n              cell,\n              flags,\n              j; // header\n\n          cell = '';\n\n          for (i = 0; i < this.token.header.length; i++) {\n            flags = {\n              header: true,\n              align: this.token.align[i]\n            };\n            cell += this.renderer.tablecell(this.inline.output(this.token.header[i]), {\n              header: true,\n              align: this.token.align[i]\n            });\n          }\n\n          header += this.renderer.tablerow(cell);\n\n          for (i = 0; i < this.token.cells.length; i++) {\n            row = this.token.cells[i];\n            cell = '';\n\n            for (j = 0; j < row.length; j++) {\n              cell += this.renderer.tablecell(this.inline.output(row[j]), {\n                header: false,\n                align: this.token.align[j]\n              });\n            }\n\n            body += this.renderer.tablerow(cell);\n          }\n\n          return this.renderer.table(header, body);\n        }\n\n      case 'blockquote_start':\n        {\n          var body = '';\n\n          while (this.next().type !== 'blockquote_end') {\n            body += this.tok();\n          }\n\n          return this.renderer.blockquote(body);\n        }\n\n      case 'list_start':\n        {\n          var body = '',\n              ordered = this.token.ordered;\n\n          while (this.next().type !== 'list_end') {\n            body += this.tok();\n          }\n\n          return this.renderer.list(body, ordered);\n        }\n\n      case 'list_item_start':\n        {\n          var body = '';\n\n          while (this.next().type !== 'list_item_end') {\n            body += this.token.type === 'text' ? this.parseText() : this.tok();\n          }\n\n          return this.renderer.listitem(body);\n        }\n\n      case 'loose_item_start':\n        {\n          var body = '';\n\n          while (this.next().type !== 'list_item_end') {\n            body += this.tok();\n          }\n\n          return this.renderer.listitem(body);\n        }\n\n      case 'html':\n        {\n          var html = !this.token.pre && !this.options.pedantic ? this.inline.output(this.token.text) : this.token.text;\n          return this.renderer.html(html);\n        }\n\n      case 'paragraph':\n        {\n          return this.renderer.paragraph(this.inline.output(this.token.text));\n        }\n\n      case 'text':\n        {\n          return this.renderer.paragraph(this.parseText());\n        }\n    }\n  };\n  /**\n   * Helpers\n   */\n\n\n  function escape(html, encode) {\n    return html.replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n  }\n\n  function unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/g, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n\n      return '';\n    });\n  }\n\n  function replace(regex, opt) {\n    regex = regex.source;\n    opt = opt || '';\n    return function self(name, val) {\n      if (!name) return new RegExp(regex, opt);\n      val = val.source || val;\n      val = val.replace(/(^|[^\\[])\\^/g, '$1');\n      regex = regex.replace(name, val);\n      return self;\n    };\n  }\n\n  function noop() {}\n\n  noop.exec = noop;\n\n  function merge(obj) {\n    var i = 1,\n        target,\n        key;\n\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n\n    return obj;\n  }\n  /**\n   * Marked\n   */\n\n\n  function marked(src, opt, callback) {\n    if (callback || typeof opt === 'function') {\n      if (!callback) {\n        callback = opt;\n        opt = null;\n      }\n\n      opt = merge({}, marked.defaults, opt || {});\n      var highlight = opt.highlight,\n          tokens,\n          pending,\n          i = 0;\n\n      try {\n        tokens = Lexer.lex(src, opt);\n      } catch (e) {\n        return callback(e);\n      }\n\n      pending = tokens.length;\n\n      var done = function done(err) {\n        if (err) {\n          opt.highlight = highlight;\n          return callback(err);\n        }\n\n        var out;\n\n        try {\n          out = Parser.parse(tokens, opt);\n        } catch (e) {\n          err = e;\n        }\n\n        opt.highlight = highlight;\n        return err ? callback(err) : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n      if (!pending) return done();\n\n      for (; i < tokens.length; i++) {\n        (function (token) {\n          if (token.type !== 'code') {\n            return --pending || done();\n          }\n\n          return highlight(token.text, token.lang, function (err, code) {\n            if (err) return done(err);\n\n            if (code == null || code === token.text) {\n              return --pending || done();\n            }\n\n            token.text = code;\n            token.escaped = true;\n            --pending || done();\n          });\n        })(tokens[i]);\n      }\n\n      return;\n    }\n\n    try {\n      if (opt) opt = merge({}, marked.defaults, opt);\n      return Parser.parse(Lexer.lex(src, opt), opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/chjj/marked.';\n\n      if ((opt || marked.defaults).silent) {\n        return '<p>An error occured:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  }\n  /**\n   * Options\n   */\n\n\n  marked.options = marked.setOptions = function (opt) {\n    merge(marked.defaults, opt);\n    return marked;\n  };\n\n  marked.defaults = {\n    gfm: true,\n    tables: true,\n    breaks: false,\n    pedantic: false,\n    sanitize: false,\n    sanitizer: null,\n    mangle: true,\n    smartLists: false,\n    silent: false,\n    highlight: null,\n    langPrefix: 'lang-',\n    smartypants: false,\n    headerPrefix: '',\n    renderer: new Renderer(),\n    xhtml: false\n  };\n  /**\n   * Expose\n   */\n\n  marked.Parser = Parser;\n  marked.parser = Parser.parse;\n  marked.Renderer = Renderer;\n  marked.Lexer = Lexer;\n  marked.lexer = Lexer.lex;\n  marked.InlineLexer = InlineLexer;\n  marked.inlineLexer = InlineLexer.output;\n  marked.parse = marked;\n\n  if (typeof module !== 'undefined' && (typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) === 'object') {\n    module.exports = marked;\n  } else if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return marked;\n    });\n  } else {\n    this.marked = marked;\n  }\n}).call(function () {\n  return this || (typeof window !== 'undefined' ? window : global);\n}());","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n(function (f) {\n  if ((typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) === \"object\" && typeof module !== \"undefined\") {\n    module.exports = f();\n  } else if (typeof define === \"function\" && define.amd) {\n    define([], f);\n  } else {\n    var g;\n\n    if (typeof window !== \"undefined\") {\n      g = window;\n    } else if (typeof global !== \"undefined\") {\n      g = global;\n    } else if (typeof self !== \"undefined\") {\n      g = self;\n    } else {\n      g = this;\n    }\n\n    g.toMarkdown = f();\n  }\n})(function () {\n  var define, module, exports;\n  return function e(t, n, r) {\n    function s(o, u) {\n      if (!n[o]) {\n        if (!t[o]) {\n          var a = typeof require == \"function\" && require;\n          if (!u && a) return a(o, !0);\n          if (i) return i(o, !0);\n          var f = new Error(\"Cannot find module '\" + o + \"'\");\n          throw f.code = \"MODULE_NOT_FOUND\", f;\n        }\n\n        var l = n[o] = {\n          exports: {}\n        };\n        t[o][0].call(l.exports, function (e) {\n          var n = t[o][1][e];\n          return s(n ? n : e);\n        }, l, l.exports, e, t, n, r);\n      }\n\n      return n[o].exports;\n    }\n\n    var i = typeof require == \"function\" && require;\n\n    for (var o = 0; o < r.length; o++) {\n      s(r[o]);\n    }\n\n    return s;\n  }({\n    1: [function (require, module, exports) {\n      /*\n       * to-markdown - an HTML to Markdown converter\n       *\n       * Copyright 2011+, Dom Christie\n       * Licenced under the MIT licence\n       *\n       */\n      'use strict';\n\n      var toMarkdown;\n      var converters;\n\n      var mdConverters = require('./lib/md-converters');\n\n      var gfmConverters = require('./lib/gfm-converters');\n\n      var HtmlParser = require('./lib/html-parser');\n\n      var collapse = require('collapse-whitespace');\n      /*\n       * Utilities\n       */\n\n\n      var blocks = ['address', 'article', 'aside', 'audio', 'blockquote', 'body', 'canvas', 'center', 'dd', 'dir', 'div', 'dl', 'dt', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr', 'html', 'isindex', 'li', 'main', 'menu', 'nav', 'noframes', 'noscript', 'ol', 'output', 'p', 'pre', 'section', 'table', 'tbody', 'td', 'tfoot', 'th', 'thead', 'tr', 'ul'];\n\n      function isBlock(node) {\n        return blocks.indexOf(node.nodeName.toLowerCase()) !== -1;\n      }\n\n      var voids = ['area', 'base', 'br', 'col', 'command', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'meta', 'param', 'source', 'track', 'wbr'];\n\n      function isVoid(node) {\n        return voids.indexOf(node.nodeName.toLowerCase()) !== -1;\n      }\n\n      function htmlToDom(string) {\n        var tree = new HtmlParser().parseFromString(string, 'text/html');\n        collapse(tree.documentElement, isBlock);\n        return tree;\n      }\n      /*\n       * Flattens DOM tree into single array\n       */\n\n\n      function bfsOrder(node) {\n        var inqueue = [node];\n        var outqueue = [];\n        var elem;\n        var children;\n        var i;\n\n        while (inqueue.length > 0) {\n          elem = inqueue.shift();\n          outqueue.push(elem);\n          children = elem.childNodes;\n\n          for (i = 0; i < children.length; i++) {\n            if (children[i].nodeType === 1) inqueue.push(children[i]);\n          }\n        }\n\n        outqueue.shift();\n        return outqueue;\n      }\n      /*\n       * Contructs a Markdown string of replacement text for a given node\n       */\n\n\n      function getContent(node) {\n        var text = '';\n\n        for (var i = 0; i < node.childNodes.length; i++) {\n          if (node.childNodes[i].nodeType === 1) {\n            text += node.childNodes[i]._replacement;\n          } else if (node.childNodes[i].nodeType === 3) {\n            text += node.childNodes[i].data;\n          } else continue;\n        }\n\n        return text;\n      }\n      /*\n       * Returns the HTML string of an element with its contents converted\n       */\n\n\n      function outer(node, content) {\n        return node.cloneNode(false).outerHTML.replace('><', '>' + content + '<');\n      }\n\n      function canConvert(node, filter) {\n        if (typeof filter === 'string') {\n          return filter === node.nodeName.toLowerCase();\n        }\n\n        if (Array.isArray(filter)) {\n          return filter.indexOf(node.nodeName.toLowerCase()) !== -1;\n        } else if (typeof filter === 'function') {\n          return filter.call(toMarkdown, node);\n        } else {\n          throw new TypeError('`filter` needs to be a string, array, or function');\n        }\n      }\n\n      function isFlankedByWhitespace(side, node) {\n        var sibling;\n        var regExp;\n        var isFlanked;\n\n        if (side === 'left') {\n          sibling = node.previousSibling;\n          regExp = / $/;\n        } else {\n          sibling = node.nextSibling;\n          regExp = /^ /;\n        }\n\n        if (sibling) {\n          if (sibling.nodeType === 3) {\n            isFlanked = regExp.test(sibling.nodeValue);\n          } else if (sibling.nodeType === 1 && !isBlock(sibling)) {\n            isFlanked = regExp.test(sibling.textContent);\n          }\n        }\n\n        return isFlanked;\n      }\n\n      function flankingWhitespace(node) {\n        var leading = '';\n        var trailing = '';\n\n        if (!isBlock(node)) {\n          var hasLeading = /^[ \\r\\n\\t]/.test(node.innerHTML);\n          var hasTrailing = /[ \\r\\n\\t]$/.test(node.innerHTML);\n\n          if (hasLeading && !isFlankedByWhitespace('left', node)) {\n            leading = ' ';\n          }\n\n          if (hasTrailing && !isFlankedByWhitespace('right', node)) {\n            trailing = ' ';\n          }\n        }\n\n        return {\n          leading: leading,\n          trailing: trailing\n        };\n      }\n      /*\n       * Finds a Markdown converter, gets the replacement, and sets it on\n       * `_replacement`\n       */\n\n\n      function process(node) {\n        var replacement;\n        var content = getContent(node); // Remove blank nodes\n\n        if (!isVoid(node) && !/A|TH|TD/.test(node.nodeName) && /^\\s*$/i.test(content)) {\n          node._replacement = '';\n          return;\n        }\n\n        for (var i = 0; i < converters.length; i++) {\n          var converter = converters[i];\n\n          if (canConvert(node, converter.filter)) {\n            if (typeof converter.replacement !== 'function') {\n              throw new TypeError('`replacement` needs to be a function that returns a string');\n            }\n\n            var whitespace = flankingWhitespace(node);\n\n            if (whitespace.leading || whitespace.trailing) {\n              content = content.trim();\n            }\n\n            replacement = whitespace.leading + converter.replacement.call(toMarkdown, content, node) + whitespace.trailing;\n            break;\n          }\n        }\n\n        node._replacement = replacement;\n      }\n\n      toMarkdown = function toMarkdown(input, options) {\n        options = options || {};\n\n        if (typeof input !== 'string') {\n          throw new TypeError(input + ' is not a string');\n        } // Escape potential ol triggers\n\n\n        input = input.replace(/(\\d+)\\. /g, '$1\\\\. ');\n        var clone = htmlToDom(input).body;\n        var nodes = bfsOrder(clone);\n        var output;\n        converters = mdConverters.slice(0);\n\n        if (options.gfm) {\n          converters = gfmConverters.concat(converters);\n        }\n\n        if (options.converters) {\n          converters = options.converters.concat(converters);\n        } // Process through nodes in reverse (so deepest child elements are first).\n\n\n        for (var i = nodes.length - 1; i >= 0; i--) {\n          process(nodes[i]);\n        }\n\n        output = getContent(clone);\n        return output.replace(/^[\\t\\r\\n]+|[\\t\\r\\n\\s]+$/g, '').replace(/\\n\\s+\\n/g, '\\n\\n').replace(/\\n{3,}/g, '\\n\\n');\n      };\n\n      toMarkdown.isBlock = isBlock;\n      toMarkdown.isVoid = isVoid;\n      toMarkdown.outer = outer;\n      module.exports = toMarkdown;\n    }, {\n      \"./lib/gfm-converters\": 2,\n      \"./lib/html-parser\": 3,\n      \"./lib/md-converters\": 4,\n      \"collapse-whitespace\": 7\n    }],\n    2: [function (require, module, exports) {\n      'use strict';\n\n      function cell(content, node) {\n        var index = Array.prototype.indexOf.call(node.parentNode.childNodes, node);\n        var prefix = ' ';\n        if (index === 0) prefix = '| ';\n        return prefix + content + ' |';\n      }\n\n      var highlightRegEx = /highlight highlight-(\\S+)/;\n      module.exports = [{\n        filter: 'br',\n        replacement: function replacement() {\n          return '\\n';\n        }\n      }, {\n        filter: ['del', 's', 'strike'],\n        replacement: function replacement(content) {\n          return '~~' + content + '~~';\n        }\n      }, {\n        filter: function filter(node) {\n          return node.type === 'checkbox' && node.parentNode.nodeName === 'LI';\n        },\n        replacement: function replacement(content, node) {\n          return (node.checked ? '[x]' : '[ ]') + ' ';\n        }\n      }, {\n        filter: ['th', 'td'],\n        replacement: function replacement(content, node) {\n          return cell(content, node);\n        }\n      }, {\n        filter: 'tr',\n        replacement: function replacement(content, node) {\n          var borderCells = '';\n          var alignMap = {\n            left: ':--',\n            right: '--:',\n            center: ':-:'\n          };\n\n          if (node.parentNode.nodeName === 'THEAD') {\n            for (var i = 0; i < node.childNodes.length; i++) {\n              var align = node.childNodes[i].attributes.align;\n              var border = '---';\n              if (align) border = alignMap[align.value] || border;\n              borderCells += cell(border, node.childNodes[i]);\n            }\n          }\n\n          return '\\n' + content + (borderCells ? '\\n' + borderCells : '');\n        }\n      }, {\n        filter: 'table',\n        replacement: function replacement(content) {\n          return '\\n\\n' + content + '\\n\\n';\n        }\n      }, {\n        filter: ['thead', 'tbody', 'tfoot'],\n        replacement: function replacement(content) {\n          return content;\n        }\n      }, // Fenced code blocks\n      {\n        filter: function filter(node) {\n          return node.nodeName === 'PRE' && node.firstChild && node.firstChild.nodeName === 'CODE';\n        },\n        replacement: function replacement(content, node) {\n          return '\\n\\n```\\n' + node.firstChild.textContent + '\\n```\\n\\n';\n        }\n      }, // Syntax-highlighted code blocks\n      {\n        filter: function filter(node) {\n          return node.nodeName === 'PRE' && node.parentNode.nodeName === 'DIV' && highlightRegEx.test(node.parentNode.className);\n        },\n        replacement: function replacement(content, node) {\n          var language = node.parentNode.className.match(highlightRegEx)[1];\n          return '\\n\\n```' + language + '\\n' + node.textContent + '\\n```\\n\\n';\n        }\n      }, {\n        filter: function filter(node) {\n          return node.nodeName === 'DIV' && highlightRegEx.test(node.className);\n        },\n        replacement: function replacement(content) {\n          return '\\n\\n' + content + '\\n\\n';\n        }\n      }];\n    }, {}],\n    3: [function (require, module, exports) {\n      /*\n       * Set up window for Node.js\n       */\n      var _window = typeof window !== 'undefined' ? window : this;\n      /*\n       * Parsing HTML strings\n       */\n\n\n      function canParseHtmlNatively() {\n        var Parser = _window.DOMParser;\n        var canParse = false; // Adapted from https://gist.github.com/1129031\n        // Firefox/Opera/IE throw errors on unsupported types\n\n        try {\n          // WebKit returns null on unsupported types\n          if (new Parser().parseFromString('', 'text/html')) {\n            canParse = true;\n          }\n        } catch (e) {}\n\n        return canParse;\n      }\n\n      function createHtmlParser() {\n        var Parser = function Parser() {}; // For Node.js environments\n\n\n        if (typeof document === 'undefined') {\n          var jsdom = require('jsdom');\n\n          Parser.prototype.parseFromString = function (string) {\n            return jsdom.jsdom(string, {\n              plugins: {\n                FetchExternalResources: [],\n                ProcessExternalResources: false\n              }\n            });\n          };\n        } else {\n          if (!shouldUseActiveX()) {\n            Parser.prototype.parseFromString = function (string) {\n              var doc = document.implementation.createHTMLDocument('');\n              doc.open();\n              doc.write(string);\n              doc.close();\n              return doc;\n            };\n          } else {\n            Parser.prototype.parseFromString = function (string) {\n              var doc = new window.ActiveXObject('htmlfile');\n              doc.designMode = 'on'; // disable on-page scripts\n\n              doc.open();\n              doc.write(string);\n              doc.close();\n              return doc;\n            };\n          }\n        }\n\n        return Parser;\n      }\n\n      function shouldUseActiveX() {\n        var useActiveX = false;\n\n        try {\n          document.implementation.createHTMLDocument('').open();\n        } catch (e) {\n          if (window.ActiveXObject) useActiveX = true;\n        }\n\n        return useActiveX;\n      }\n\n      module.exports = canParseHtmlNatively() ? _window.DOMParser : createHtmlParser();\n    }, {\n      \"jsdom\": 6\n    }],\n    4: [function (require, module, exports) {\n      'use strict';\n\n      module.exports = [{\n        filter: 'p',\n        replacement: function replacement(content) {\n          return '\\n\\n' + content + '\\n\\n';\n        }\n      }, {\n        filter: 'br',\n        replacement: function replacement() {\n          return '  \\n';\n        }\n      }, {\n        filter: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n        replacement: function replacement(content, node) {\n          var hLevel = node.nodeName.charAt(1);\n          var hPrefix = '';\n\n          for (var i = 0; i < hLevel; i++) {\n            hPrefix += '#';\n          }\n\n          return '\\n\\n' + hPrefix + ' ' + content + '\\n\\n';\n        }\n      }, {\n        filter: 'hr',\n        replacement: function replacement() {\n          return '\\n\\n* * *\\n\\n';\n        }\n      }, {\n        filter: ['em', 'i'],\n        replacement: function replacement(content) {\n          return '_' + content + '_';\n        }\n      }, {\n        filter: ['strong', 'b'],\n        replacement: function replacement(content) {\n          return '**' + content + '**';\n        }\n      }, // Inline code\n      {\n        filter: function filter(node) {\n          var hasSiblings = node.previousSibling || node.nextSibling;\n          var isCodeBlock = node.parentNode.nodeName === 'PRE' && !hasSiblings;\n          return node.nodeName === 'CODE' && !isCodeBlock;\n        },\n        replacement: function replacement(content) {\n          return '`' + content + '`';\n        }\n      }, {\n        filter: function filter(node) {\n          return node.nodeName === 'A' && node.getAttribute('href');\n        },\n        replacement: function replacement(content, node) {\n          var titlePart = node.title ? ' \"' + node.title + '\"' : '';\n          return '[' + content + '](' + node.getAttribute('href') + titlePart + ')';\n        }\n      }, {\n        filter: 'img',\n        replacement: function replacement(content, node) {\n          var alt = node.alt || '';\n          var src = node.getAttribute('src') || '';\n          var title = node.title || '';\n          var titlePart = title ? ' \"' + title + '\"' : '';\n          return src ? '![' + alt + ']' + '(' + src + titlePart + ')' : '';\n        }\n      }, // Code blocks\n      {\n        filter: function filter(node) {\n          return node.nodeName === 'PRE' && node.firstChild.nodeName === 'CODE';\n        },\n        replacement: function replacement(content, node) {\n          return '\\n\\n    ' + node.firstChild.textContent.replace(/\\n/g, '\\n    ') + '\\n\\n';\n        }\n      }, {\n        filter: 'blockquote',\n        replacement: function replacement(content) {\n          content = content.trim();\n          content = content.replace(/\\n{3,}/g, '\\n\\n');\n          content = content.replace(/^/gm, '> ');\n          return '\\n\\n' + content + '\\n\\n';\n        }\n      }, {\n        filter: 'li',\n        replacement: function replacement(content, node) {\n          content = content.replace(/^\\s+/, '').replace(/\\n/gm, '\\n    ');\n          var prefix = '*   ';\n          var parent = node.parentNode;\n          var index = Array.prototype.indexOf.call(parent.children, node) + 1;\n          prefix = /ol/i.test(parent.nodeName) ? index + '.  ' : '*   ';\n          return prefix + content;\n        }\n      }, {\n        filter: ['ul', 'ol'],\n        replacement: function replacement(content, node) {\n          var strings = [];\n\n          for (var i = 0; i < node.childNodes.length; i++) {\n            strings.push(node.childNodes[i]._replacement);\n          }\n\n          if (/li/i.test(node.parentNode.nodeName)) {\n            return '\\n' + strings.join('\\n');\n          }\n\n          return '\\n\\n' + strings.join('\\n') + '\\n\\n';\n        }\n      }, {\n        filter: function filter(node) {\n          return this.isBlock(node);\n        },\n        replacement: function replacement(content, node) {\n          return '\\n\\n' + this.outer(node, content) + '\\n\\n';\n        }\n      }, // Anything else!\n      {\n        filter: function filter() {\n          return true;\n        },\n        replacement: function replacement(content, node) {\n          return this.outer(node, content);\n        }\n      }];\n    }, {}],\n    5: [function (require, module, exports) {\n      /**\n       * This file automatically generated from `build.js`.\n       * Do not manually edit.\n       */\n      module.exports = [\"address\", \"article\", \"aside\", \"audio\", \"blockquote\", \"canvas\", \"dd\", \"div\", \"dl\", \"fieldset\", \"figcaption\", \"figure\", \"footer\", \"form\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"header\", \"hgroup\", \"hr\", \"main\", \"nav\", \"noscript\", \"ol\", \"output\", \"p\", \"pre\", \"section\", \"table\", \"tfoot\", \"ul\", \"video\"];\n    }, {}],\n    6: [function (require, module, exports) {}, {}],\n    7: [function (require, module, exports) {\n      'use strict';\n\n      var voidElements = require('void-elements');\n\n      Object.keys(voidElements).forEach(function (name) {\n        voidElements[name.toUpperCase()] = 1;\n      });\n      var blockElements = {};\n\n      require('block-elements').forEach(function (name) {\n        blockElements[name.toUpperCase()] = 1;\n      });\n      /**\n       * isBlockElem(node) determines if the given node is a block element.\n       *\n       * @param {Node} node\n       * @returns {Boolean}\n       */\n\n\n      function isBlockElem(node) {\n        return !!(node && blockElements[node.nodeName]);\n      }\n      /**\n       * isVoid(node) determines if the given node is a void element.\n       *\n       * @param {Node} node\n       * @returns {Boolean}\n       */\n\n\n      function isVoid(node) {\n        return !!(node && voidElements[node.nodeName]);\n      }\n      /**\n       * whitespace(elem [, isBlock]) removes extraneous whitespace from an\n       * the given element. The function isBlock may optionally be passed in\n       * to determine whether or not an element is a block element; if none\n       * is provided, defaults to using the list of block elements provided\n       * by the `block-elements` module.\n       *\n       * @param {Node} elem\n       * @param {Function} blockTest\n       */\n\n\n      function collapseWhitespace(elem, isBlock) {\n        if (!elem.firstChild || elem.nodeName === 'PRE') return;\n\n        if (typeof isBlock !== 'function') {\n          isBlock = isBlockElem;\n        }\n\n        var prevText = null;\n        var prevVoid = false;\n        var prev = null;\n        var node = next(prev, elem);\n\n        while (node !== elem) {\n          if (node.nodeType === 3) {\n            // Node.TEXT_NODE\n            var text = node.data.replace(/[ \\r\\n\\t]+/g, ' ');\n\n            if ((!prevText || / $/.test(prevText.data)) && !prevVoid && text[0] === ' ') {\n              text = text.substr(1);\n            } // `text` might be empty at this point.\n\n\n            if (!text) {\n              node = remove(node);\n              continue;\n            }\n\n            node.data = text;\n            prevText = node;\n          } else if (node.nodeType === 1) {\n            // Node.ELEMENT_NODE\n            if (isBlock(node) || node.nodeName === 'BR') {\n              if (prevText) {\n                prevText.data = prevText.data.replace(/ $/, '');\n              }\n\n              prevText = null;\n              prevVoid = false;\n            } else if (isVoid(node)) {\n              // Avoid trimming space around non-block, non-BR void elements.\n              prevText = null;\n              prevVoid = true;\n            }\n          } else {\n            node = remove(node);\n            continue;\n          }\n\n          var nextNode = next(prev, node);\n          prev = node;\n          node = nextNode;\n        }\n\n        if (prevText) {\n          prevText.data = prevText.data.replace(/ $/, '');\n\n          if (!prevText.data) {\n            remove(prevText);\n          }\n        }\n      }\n      /**\n       * remove(node) removes the given node from the DOM and returns the\n       * next node in the sequence.\n       *\n       * @param {Node} node\n       * @returns {Node} node\n       */\n\n\n      function remove(node) {\n        var next = node.nextSibling || node.parentNode;\n        node.parentNode.removeChild(node);\n        return next;\n      }\n      /**\n       * next(prev, current) returns the next node in the sequence, given the\n       * current and previous nodes.\n       *\n       * @param {Node} prev\n       * @param {Node} current\n       * @returns {Node}\n       */\n\n\n      function next(prev, current) {\n        if (prev && prev.parentNode === current || current.nodeName === 'PRE') {\n          return current.nextSibling || current.parentNode;\n        }\n\n        return current.firstChild || current.nextSibling || current.parentNode;\n      }\n\n      module.exports = collapseWhitespace;\n    }, {\n      \"block-elements\": 5,\n      \"void-elements\": 8\n    }],\n    8: [function (require, module, exports) {\n      /**\n       * This file automatically generated from `pre-publish.js`.\n       * Do not manually edit.\n       */\n      module.exports = {\n        \"area\": true,\n        \"base\": true,\n        \"br\": true,\n        \"col\": true,\n        \"embed\": true,\n        \"hr\": true,\n        \"img\": true,\n        \"input\": true,\n        \"keygen\": true,\n        \"link\": true,\n        \"menuitem\": true,\n        \"meta\": true,\n        \"param\": true,\n        \"source\": true,\n        \"track\": true,\n        \"wbr\": true\n      };\n    }, {}]\n  }, {}, [1])(1);\n});","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * Original marked.js library renderer with fixes:\n * - No formatting for output HTML string &mdash; all newlines between tags are removed to create clean output.\n * - Changed long string concatenations to ES5 template strings.\n * - Changed code style.\n *\n * @see {@link https://github.com/chjj/marked#renderer} Methods description.\n * @param options\n * @constructor\n */\nfunction Renderer(options) {\n  this.options = options || {};\n}\n\nRenderer.prototype.code = function (code, lang, escaped) {\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n\n    if (out !== null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return \"<pre><code>\".concat(escaped ? code : escape(code, true), \"</code></pre>\");\n  }\n\n  var cssClass = this.options.langPrefix + escape(lang, true);\n  return \"<pre><code class=\\\"\".concat(cssClass, \"\\\">\").concat(escaped ? code : escape(code, true), \"</code></pre>\");\n};\n\nRenderer.prototype.blockquote = function (quote) {\n  return \"<blockquote>\".concat(quote, \"</blockquote>\");\n};\n\nRenderer.prototype.html = function (html) {\n  return html;\n};\n\nRenderer.prototype.heading = function (text, level, raw) {\n  return \"<h\".concat(level, \">\").concat(text, \"</h\").concat(level, \">\");\n};\n\nRenderer.prototype.hr = function () {\n  return this.options.xhtml ? '<hr/>' : '<hr>';\n};\n\nRenderer.prototype.list = function (body, ordered) {\n  var type = ordered ? 'ol' : 'ul';\n  return \"<\".concat(type, \">\").concat(body, \"</\").concat(type, \">\");\n};\n\nRenderer.prototype.listitem = function (text) {\n  return \"<li>\".concat(text, \"</li>\");\n};\n\nRenderer.prototype.paragraph = function (text) {\n  return \"<p>\".concat(text, \"</p>\");\n};\n\nRenderer.prototype.table = function (header, body) {\n  return \"<table><thead>\".concat(header, \"</thead><tbody>\").concat(body, \"</tbody></table>\");\n};\n\nRenderer.prototype.tablerow = function (content) {\n  return '<tr>' + content + '</tr>';\n};\n\nRenderer.prototype.tablecell = function (content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align ? \"<\".concat(type, \" align=\\\"\").concat(flags.align, \"\\\">\") : \"<\".concat(type, \">\");\n  return tag + content + \"</\".concat(type, \">\");\n}; // span level renderer\n\n\nRenderer.prototype.strong = function (text) {\n  return \"<strong>\".concat(text, \"</strong>\");\n};\n\nRenderer.prototype.em = function (text) {\n  return \"<em>\".concat(text, \"</em>\");\n};\n\nRenderer.prototype.codespan = function (text) {\n  return \"<code>\".concat(text.trim(), \"</code>\");\n};\n\nRenderer.prototype.br = function () {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function (text) {\n  return \"<del>\".concat(text, \"</del>\");\n};\n\nRenderer.prototype.link = function (href, title, text) {\n  if (this.options.sanitize) {\n    var prot;\n\n    try {\n      prot = decodeURIComponent(unescape(href)).replace(/[^\\w:]/g, '').toLowerCase();\n    } catch (e) {\n      return '';\n    }\n\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0) {\n      // jshint ignore:line\n      return '';\n    }\n  }\n\n  var out = '<a href=\"' + href + '\"';\n\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function (href, title, text) {\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nRenderer.prototype.text = function (text) {\n  return text;\n};\n\nexport default Renderer;\n\nfunction escape(html, encode) {\n  return html.replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n}\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/g, function (_, n) {\n    n = n.toLowerCase();\n\n    if (n === 'colon') {\n      return ':';\n    }\n\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1)); // jscs:ignore\n    }\n\n    return '';\n  });\n}","/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n// Exports an array with custom converters used by to-markdown library.\nexport default [// Converting code blocks with class name matching output from marked library.\n{\n  filter: function filter(node) {\n    var regexp = /lang-(.+)/;\n    return node.nodeName === 'PRE' && node.firstChild && node.firstChild.nodeName === 'CODE' && regexp.test(node.firstChild.className);\n  },\n  replacement: function replacement(content, node) {\n    var regexp = /lang-(.+)/;\n    var lang = regexp.exec(node.firstChild.className)[1];\n    return '\\n\\n``` ' + lang + '\\n' + node.firstChild.textContent + '\\n```\\n\\n';\n  }\n}, // Converting empty links.\n{\n  filter: function filter(node) {\n    return node.nodeName === 'A' && !node.getAttribute('href');\n  },\n  replacement: function replacement(content, node) {\n    var title = node.title ? \"\\\"\".concat(node.title, \"\\\"\") : '';\n    return \"[\".concat(content, \"](\").concat(title, \")\");\n  }\n}, // Headers - fixing newline at the beginning.\n{\n  filter: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n  replacement: function replacement(content, node) {\n    var hLevel = node.nodeName.charAt(1);\n    var hPrefix = '';\n\n    for (var i = 0; i < hLevel; i++) {\n      hPrefix += '#';\n    }\n\n    return hPrefix + ' ' + content + '\\n';\n  }\n}, // Inline code - fixing backticks inside code blocks.\n{\n  filter: function filter(node) {\n    var hasSiblings = node.previousSibling || node.nextSibling;\n    var isCodeBlock = node.parentNode.nodeName === 'PRE' && !hasSiblings;\n    return node.nodeName === 'CODE' && !isCodeBlock;\n  },\n  replacement: function replacement(content) {\n    // If content starts or ends with backtick - use double backtick.\n    if (content.indexOf('`') > -1) {\n      return '`` ' + content + ' ``';\n    }\n\n    return '`' + content + '`';\n  }\n}];","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module markdown-gfm/gfmdataprocessor\n */\nimport marked from './lib/marked/marked';\nimport toMarkdown from './lib/to-markdown/to-markdown';\nimport HtmlDataProcessor from '@ckeditor/ckeditor5-engine/src/dataprocessor/htmldataprocessor';\nimport GFMRenderer from './lib/marked/renderer';\nimport converters from './lib/to-markdown/converters';\n/**\n * This data processor implementation uses GitHub Flavored Markdown as input/output data.\n *\n * See the {@glink features/markdown Markdown output} guide to learn more on how to enable it.\n *\n * @implements module:engine/dataprocessor/dataprocessor~DataProcessor\n */\n\nvar GFMDataProcessor =\n/*#__PURE__*/\nfunction () {\n  function GFMDataProcessor() {\n    _classCallCheck(this, GFMDataProcessor);\n\n    /**\n     * HTML data processor used to process HTML produced by the Markdown-to-HTML converter and the other way.\n     *\n     * @private\n     * @member {module:engine/dataprocessor/htmldataprocessor~HtmlDataProcessor}\n     */\n    this._htmlDP = new HtmlDataProcessor();\n  }\n  /**\n   * Converts the provided Markdown string to view tree.\n   *\n   * @param {String} data A Markdown string.\n   * @returns {module:engine/view/documentfragment~DocumentFragment} The converted view element.\n   */\n\n\n  _createClass(GFMDataProcessor, [{\n    key: \"toView\",\n    value: function toView(data) {\n      var html = marked.parse(data, {\n        gfm: true,\n        breaks: true,\n        tables: true,\n        xhtml: true,\n        renderer: new GFMRenderer()\n      });\n      return this._htmlDP.toView(html);\n    }\n    /**\n     * Converts the provided {@link module:engine/view/documentfragment~DocumentFragment} to data format &mdash; in this\n     * case to a Markdown string.\n     *\n     * @param {module:engine/view/documentfragment~DocumentFragment} viewFragment\n     * @returns {String} Markdown string.\n     */\n\n  }, {\n    key: \"toData\",\n    value: function toData(viewFragment) {\n      var html = this._htmlDP.toData(viewFragment);\n\n      return toMarkdown(html, {\n        gfm: true,\n        converters: converters\n      });\n    }\n  }]);\n\n  return GFMDataProcessor;\n}();\n\nexport { GFMDataProcessor as default };","/**\r\n * @license Copyright (c) 2003-2018, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md.\r\n */\r\n\r\n// The editor creator to use.\r\nimport ClassicEditorBase from '@ckeditor/ckeditor5-editor-classic/src/classiceditor';\r\nimport Essentials from '@ckeditor/ckeditor5-essentials/src/essentials';\r\nimport Autoformat from '@ckeditor/ckeditor5-autoformat/src/autoformat';\r\nimport Bold from '@ckeditor/ckeditor5-basic-styles/src/bold';\r\nimport Italic from '@ckeditor/ckeditor5-basic-styles/src/italic';\r\nimport BlockQuote from '@ckeditor/ckeditor5-block-quote/src/blockquote';\r\nimport Heading from '@ckeditor/ckeditor5-heading/src/heading';\r\nimport List from '@ckeditor/ckeditor5-list/src/list';\r\nimport Paragraph from '@ckeditor/ckeditor5-paragraph/src/paragraph';\r\nimport GFMDataProcessor from '@ckeditor/ckeditor5-markdown-gfm/src/gfmdataprocessor';\r\n\r\n\r\n\r\nfunction Markdown(editor) {\r\n\teditor.data.processor = new GFMDataProcessor();\r\n}\r\n\r\nclass ClassicEditor extends ClassicEditorBase { }\r\n\r\n// Plugins to include in the build.\r\nClassicEditor.builtinPlugins = [\r\n\tEssentials,\r\n\tAutoformat,\r\n\tBold,\r\n\tItalic,\r\n\tBlockQuote,\r\n\tHeading,\r\n\tList,\r\n    Paragraph,\r\n    Markdown\r\n];\r\n\r\n// Editor configuration.\r\nClassicEditor.defaultConfig = {\r\n\ttoolbar: {\r\n\t\titems: [\r\n\t\t\t'heading',\r\n\t\t\t'|',\r\n\t\t\t'bold',\r\n\t\t\t'italic',\r\n\t\t\t'bulletedList',\r\n\t\t\t'numberedList',\r\n\t\t\t'blockQuote',\r\n\t\t\t'|',\r\n\t\t\t'undo',\r\n\t\t\t'redo'\r\n\t\t]\r\n\t}\r\n};\r\n\r\n\r\nexport default ClassicEditor; "],"sourceRoot":""}